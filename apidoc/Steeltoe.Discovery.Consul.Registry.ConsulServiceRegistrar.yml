### YamlMime:ManagedReference
items:
- uid: Steeltoe.Discovery.Consul.Registry.ConsulServiceRegistrar
  commentId: T:Steeltoe.Discovery.Consul.Registry.ConsulServiceRegistrar
  id: ConsulServiceRegistrar
  parent: Steeltoe.Discovery.Consul.Registry
  children:
  - Steeltoe.Discovery.Consul.Registry.ConsulServiceRegistrar.#ctor(Steeltoe.Discovery.Consul.Registry.IConsulServiceRegistry,IOptionsMonitor{Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions},Steeltoe.Discovery.Consul.Registry.IConsulRegistration,ILogger{Steeltoe.Discovery.Consul.Registry.ConsulServiceRegistrar})
  - Steeltoe.Discovery.Consul.Registry.ConsulServiceRegistrar.#ctor(Steeltoe.Discovery.Consul.Registry.IConsulServiceRegistry,Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions,Steeltoe.Discovery.Consul.Registry.IConsulRegistration,ILogger{Steeltoe.Discovery.Consul.Registry.ConsulServiceRegistrar})
  - Steeltoe.Discovery.Consul.Registry.ConsulServiceRegistrar.Deregister
  - Steeltoe.Discovery.Consul.Registry.ConsulServiceRegistrar.Dispose
  - Steeltoe.Discovery.Consul.Registry.ConsulServiceRegistrar.Dispose(System.Boolean)
  - Steeltoe.Discovery.Consul.Registry.ConsulServiceRegistrar.Finalize
  - Steeltoe.Discovery.Consul.Registry.ConsulServiceRegistrar.Register
  - Steeltoe.Discovery.Consul.Registry.ConsulServiceRegistrar.Registration
  - Steeltoe.Discovery.Consul.Registry.ConsulServiceRegistrar.Start
  langs:
  - csharp
  - vb
  name: ConsulServiceRegistrar
  nameWithType: ConsulServiceRegistrar
  fullName: Steeltoe.Discovery.Consul.Registry.ConsulServiceRegistrar
  type: Class
  source:
    remote:
      path: src/Discovery/src/Consul/Registry/ConsulServiceRegistrar.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: ConsulServiceRegistrar
    path: ../Steeltoe/src/Discovery/src/Consul/Registry/ConsulServiceRegistrar.cs
    startLine: 15
  assemblies:
  - Steeltoe.Discovery.Consul
  namespace: Steeltoe.Discovery.Consul.Registry
  summary: "\nA registrar used to register a service in a Consul server\n"
  example: []
  syntax:
    content: 'public class ConsulServiceRegistrar : IConsulServiceRegistrar, IServiceRegistrar, IDisposable'
    content.vb: >-
      Public Class ConsulServiceRegistrar

          Implements IConsulServiceRegistrar, IServiceRegistrar, IDisposable
  inheritance:
  - System.Object
  implements:
  - Steeltoe.Discovery.Consul.Registry.IConsulServiceRegistrar
  - Steeltoe.Discovery.Consul.Registry.IServiceRegistrar
  - System.IDisposable
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Steeltoe.Discovery.Consul.Registry.ConsulServiceRegistrar.Registration
  commentId: P:Steeltoe.Discovery.Consul.Registry.ConsulServiceRegistrar.Registration
  id: Registration
  parent: Steeltoe.Discovery.Consul.Registry.ConsulServiceRegistrar
  langs:
  - csharp
  - vb
  name: Registration
  nameWithType: ConsulServiceRegistrar.Registration
  fullName: Steeltoe.Discovery.Consul.Registry.ConsulServiceRegistrar.Registration
  type: Property
  source:
    remote:
      path: src/Discovery/src/Consul/Registry/ConsulServiceRegistrar.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Registration
    path: ../Steeltoe/src/Discovery/src/Consul/Registry/ConsulServiceRegistrar.cs
    startLine: 28
  assemblies:
  - Steeltoe.Discovery.Consul
  namespace: Steeltoe.Discovery.Consul.Registry
  example: []
  syntax:
    content: public IConsulRegistration Registration { get; }
    parameters: []
    return:
      type: Steeltoe.Discovery.Consul.Registry.IConsulRegistration
    content.vb: Public ReadOnly Property Registration As IConsulRegistration
  overload: Steeltoe.Discovery.Consul.Registry.ConsulServiceRegistrar.Registration*
  implements:
  - Steeltoe.Discovery.Consul.Registry.IConsulServiceRegistrar.Registration
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Steeltoe.Discovery.Consul.Registry.ConsulServiceRegistrar.#ctor(Steeltoe.Discovery.Consul.Registry.IConsulServiceRegistry,IOptionsMonitor{Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions},Steeltoe.Discovery.Consul.Registry.IConsulRegistration,ILogger{Steeltoe.Discovery.Consul.Registry.ConsulServiceRegistrar})
  commentId: M:Steeltoe.Discovery.Consul.Registry.ConsulServiceRegistrar.#ctor(Steeltoe.Discovery.Consul.Registry.IConsulServiceRegistry,IOptionsMonitor{Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions},Steeltoe.Discovery.Consul.Registry.IConsulRegistration,ILogger{Steeltoe.Discovery.Consul.Registry.ConsulServiceRegistrar})
  id: '#ctor(Steeltoe.Discovery.Consul.Registry.IConsulServiceRegistry,IOptionsMonitor{Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions},Steeltoe.Discovery.Consul.Registry.IConsulRegistration,ILogger{Steeltoe.Discovery.Consul.Registry.ConsulServiceRegistrar})'
  parent: Steeltoe.Discovery.Consul.Registry.ConsulServiceRegistrar
  langs:
  - csharp
  - vb
  name: ConsulServiceRegistrar(IConsulServiceRegistry, IOptionsMonitor<ConsulDiscoveryOptions>, IConsulRegistration, ILogger<ConsulServiceRegistrar>)
  nameWithType: ConsulServiceRegistrar.ConsulServiceRegistrar(IConsulServiceRegistry, IOptionsMonitor<ConsulDiscoveryOptions>, IConsulRegistration, ILogger<ConsulServiceRegistrar>)
  fullName: Steeltoe.Discovery.Consul.Registry.ConsulServiceRegistrar.ConsulServiceRegistrar(Steeltoe.Discovery.Consul.Registry.IConsulServiceRegistry, IOptionsMonitor<Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions>, Steeltoe.Discovery.Consul.Registry.IConsulRegistration, ILogger<Steeltoe.Discovery.Consul.Registry.ConsulServiceRegistrar>)
  type: Constructor
  source:
    remote:
      path: src/Discovery/src/Consul/Registry/ConsulServiceRegistrar.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: .ctor
    path: ../Steeltoe/src/Discovery/src/Consul/Registry/ConsulServiceRegistrar.cs
    startLine: 50
  assemblies:
  - Steeltoe.Discovery.Consul
  namespace: Steeltoe.Discovery.Consul.Registry
  summary: "\nInitializes a new instance of the <xref href=\"Steeltoe.Discovery.Consul.Registry.ConsulServiceRegistrar\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  example: []
  syntax:
    content: public ConsulServiceRegistrar(IConsulServiceRegistry registry, IOptionsMonitor<ConsulDiscoveryOptions> optionsMonitor, IConsulRegistration registration, ILogger<ConsulServiceRegistrar> logger = null)
    parameters:
    - id: registry
      type: Steeltoe.Discovery.Consul.Registry.IConsulServiceRegistry
      description: the Consul service registry to use when doing registrations
    - id: optionsMonitor
      type: IOptionsMonitor{Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions}
      description: configuration options to use
    - id: registration
      type: Steeltoe.Discovery.Consul.Registry.IConsulRegistration
      description: the registration to register with Consul
    - id: logger
      type: ILogger{Steeltoe.Discovery.Consul.Registry.ConsulServiceRegistrar}
      description: optional logger
    content.vb: Public Sub New(registry As IConsulServiceRegistry, optionsMonitor As IOptionsMonitor(Of ConsulDiscoveryOptions), registration As IConsulRegistration, logger As ILogger(Of ConsulServiceRegistrar) = Nothing)
  overload: Steeltoe.Discovery.Consul.Registry.ConsulServiceRegistrar.#ctor*
  nameWithType.vb: ConsulServiceRegistrar.ConsulServiceRegistrar(IConsulServiceRegistry, IOptionsMonitor(Of ConsulDiscoveryOptions), IConsulRegistration, ILogger(Of ConsulServiceRegistrar))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Steeltoe.Discovery.Consul.Registry.ConsulServiceRegistrar.ConsulServiceRegistrar(Steeltoe.Discovery.Consul.Registry.IConsulServiceRegistry, IOptionsMonitor(Of Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions), Steeltoe.Discovery.Consul.Registry.IConsulRegistration, ILogger(Of Steeltoe.Discovery.Consul.Registry.ConsulServiceRegistrar))
  name.vb: ConsulServiceRegistrar(IConsulServiceRegistry, IOptionsMonitor(Of ConsulDiscoveryOptions), IConsulRegistration, ILogger(Of ConsulServiceRegistrar))
- uid: Steeltoe.Discovery.Consul.Registry.ConsulServiceRegistrar.#ctor(Steeltoe.Discovery.Consul.Registry.IConsulServiceRegistry,Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions,Steeltoe.Discovery.Consul.Registry.IConsulRegistration,ILogger{Steeltoe.Discovery.Consul.Registry.ConsulServiceRegistrar})
  commentId: M:Steeltoe.Discovery.Consul.Registry.ConsulServiceRegistrar.#ctor(Steeltoe.Discovery.Consul.Registry.IConsulServiceRegistry,Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions,Steeltoe.Discovery.Consul.Registry.IConsulRegistration,ILogger{Steeltoe.Discovery.Consul.Registry.ConsulServiceRegistrar})
  id: '#ctor(Steeltoe.Discovery.Consul.Registry.IConsulServiceRegistry,Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions,Steeltoe.Discovery.Consul.Registry.IConsulRegistration,ILogger{Steeltoe.Discovery.Consul.Registry.ConsulServiceRegistrar})'
  parent: Steeltoe.Discovery.Consul.Registry.ConsulServiceRegistrar
  langs:
  - csharp
  - vb
  name: ConsulServiceRegistrar(IConsulServiceRegistry, ConsulDiscoveryOptions, IConsulRegistration, ILogger<ConsulServiceRegistrar>)
  nameWithType: ConsulServiceRegistrar.ConsulServiceRegistrar(IConsulServiceRegistry, ConsulDiscoveryOptions, IConsulRegistration, ILogger<ConsulServiceRegistrar>)
  fullName: Steeltoe.Discovery.Consul.Registry.ConsulServiceRegistrar.ConsulServiceRegistrar(Steeltoe.Discovery.Consul.Registry.IConsulServiceRegistry, Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions, Steeltoe.Discovery.Consul.Registry.IConsulRegistration, ILogger<Steeltoe.Discovery.Consul.Registry.ConsulServiceRegistrar>)
  type: Constructor
  source:
    remote:
      path: src/Discovery/src/Consul/Registry/ConsulServiceRegistrar.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: .ctor
    path: ../Steeltoe/src/Discovery/src/Consul/Registry/ConsulServiceRegistrar.cs
    startLine: 65
  assemblies:
  - Steeltoe.Discovery.Consul
  namespace: Steeltoe.Discovery.Consul.Registry
  summary: "\nInitializes a new instance of the <xref href=\"Steeltoe.Discovery.Consul.Registry.ConsulServiceRegistrar\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  example: []
  syntax:
    content: public ConsulServiceRegistrar(IConsulServiceRegistry registry, ConsulDiscoveryOptions options, IConsulRegistration registration, ILogger<ConsulServiceRegistrar> logger = null)
    parameters:
    - id: registry
      type: Steeltoe.Discovery.Consul.Registry.IConsulServiceRegistry
      description: the Consul service registry to use when doing registrations
    - id: options
      type: Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions
      description: configuration options to use
    - id: registration
      type: Steeltoe.Discovery.Consul.Registry.IConsulRegistration
      description: the registration to register with Consul
    - id: logger
      type: ILogger{Steeltoe.Discovery.Consul.Registry.ConsulServiceRegistrar}
      description: optional logger
    content.vb: Public Sub New(registry As IConsulServiceRegistry, options As ConsulDiscoveryOptions, registration As IConsulRegistration, logger As ILogger(Of ConsulServiceRegistrar) = Nothing)
  overload: Steeltoe.Discovery.Consul.Registry.ConsulServiceRegistrar.#ctor*
  nameWithType.vb: ConsulServiceRegistrar.ConsulServiceRegistrar(IConsulServiceRegistry, ConsulDiscoveryOptions, IConsulRegistration, ILogger(Of ConsulServiceRegistrar))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Steeltoe.Discovery.Consul.Registry.ConsulServiceRegistrar.ConsulServiceRegistrar(Steeltoe.Discovery.Consul.Registry.IConsulServiceRegistry, Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions, Steeltoe.Discovery.Consul.Registry.IConsulRegistration, ILogger(Of Steeltoe.Discovery.Consul.Registry.ConsulServiceRegistrar))
  name.vb: ConsulServiceRegistrar(IConsulServiceRegistry, ConsulDiscoveryOptions, IConsulRegistration, ILogger(Of ConsulServiceRegistrar))
- uid: Steeltoe.Discovery.Consul.Registry.ConsulServiceRegistrar.Start
  commentId: M:Steeltoe.Discovery.Consul.Registry.ConsulServiceRegistrar.Start
  id: Start
  parent: Steeltoe.Discovery.Consul.Registry.ConsulServiceRegistrar
  langs:
  - csharp
  - vb
  name: Start()
  nameWithType: ConsulServiceRegistrar.Start()
  fullName: Steeltoe.Discovery.Consul.Registry.ConsulServiceRegistrar.Start()
  type: Method
  source:
    remote:
      path: src/Discovery/src/Consul/Registry/ConsulServiceRegistrar.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Start
    path: ../Steeltoe/src/Discovery/src/Consul/Registry/ConsulServiceRegistrar.cs
    startLine: 74
  assemblies:
  - Steeltoe.Discovery.Consul
  namespace: Steeltoe.Discovery.Consul.Registry
  example: []
  syntax:
    content: public void Start()
    content.vb: Public Sub Start
  overload: Steeltoe.Discovery.Consul.Registry.ConsulServiceRegistrar.Start*
  implements:
  - Steeltoe.Discovery.Consul.Registry.IServiceRegistrar.Start
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Steeltoe.Discovery.Consul.Registry.ConsulServiceRegistrar.Register
  commentId: M:Steeltoe.Discovery.Consul.Registry.ConsulServiceRegistrar.Register
  id: Register
  parent: Steeltoe.Discovery.Consul.Registry.ConsulServiceRegistrar
  langs:
  - csharp
  - vb
  name: Register()
  nameWithType: ConsulServiceRegistrar.Register()
  fullName: Steeltoe.Discovery.Consul.Registry.ConsulServiceRegistrar.Register()
  type: Method
  source:
    remote:
      path: src/Discovery/src/Consul/Registry/ConsulServiceRegistrar.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Register
    path: ../Steeltoe/src/Discovery/src/Consul/Registry/ConsulServiceRegistrar.cs
    startLine: 96
  assemblies:
  - Steeltoe.Discovery.Consul
  namespace: Steeltoe.Discovery.Consul.Registry
  example: []
  syntax:
    content: public void Register()
    content.vb: Public Sub Register
  overload: Steeltoe.Discovery.Consul.Registry.ConsulServiceRegistrar.Register*
  implements:
  - Steeltoe.Discovery.Consul.Registry.IServiceRegistrar.Register
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Steeltoe.Discovery.Consul.Registry.ConsulServiceRegistrar.Deregister
  commentId: M:Steeltoe.Discovery.Consul.Registry.ConsulServiceRegistrar.Deregister
  id: Deregister
  parent: Steeltoe.Discovery.Consul.Registry.ConsulServiceRegistrar
  langs:
  - csharp
  - vb
  name: Deregister()
  nameWithType: ConsulServiceRegistrar.Deregister()
  fullName: Steeltoe.Discovery.Consul.Registry.ConsulServiceRegistrar.Deregister()
  type: Method
  source:
    remote:
      path: src/Discovery/src/Consul/Registry/ConsulServiceRegistrar.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Deregister
    path: ../Steeltoe/src/Discovery/src/Consul/Registry/ConsulServiceRegistrar.cs
    startLine: 108
  assemblies:
  - Steeltoe.Discovery.Consul
  namespace: Steeltoe.Discovery.Consul.Registry
  example: []
  syntax:
    content: public void Deregister()
    content.vb: Public Sub Deregister
  overload: Steeltoe.Discovery.Consul.Registry.ConsulServiceRegistrar.Deregister*
  implements:
  - Steeltoe.Discovery.Consul.Registry.IServiceRegistrar.Deregister
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Steeltoe.Discovery.Consul.Registry.ConsulServiceRegistrar.Dispose
  commentId: M:Steeltoe.Discovery.Consul.Registry.ConsulServiceRegistrar.Dispose
  id: Dispose
  parent: Steeltoe.Discovery.Consul.Registry.ConsulServiceRegistrar
  langs:
  - csharp
  - vb
  name: Dispose()
  nameWithType: ConsulServiceRegistrar.Dispose()
  fullName: Steeltoe.Discovery.Consul.Registry.ConsulServiceRegistrar.Dispose()
  type: Method
  source:
    remote:
      path: src/Discovery/src/Consul/Registry/ConsulServiceRegistrar.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Dispose
    path: ../Steeltoe/src/Discovery/src/Consul/Registry/ConsulServiceRegistrar.cs
    startLine: 161
  assemblies:
  - Steeltoe.Discovery.Consul
  namespace: Steeltoe.Discovery.Consul.Registry
  example: []
  syntax:
    content: public void Dispose()
    content.vb: Public Sub Dispose
  overload: Steeltoe.Discovery.Consul.Registry.ConsulServiceRegistrar.Dispose*
  implements:
  - System.IDisposable.Dispose
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Steeltoe.Discovery.Consul.Registry.ConsulServiceRegistrar.Dispose(System.Boolean)
  commentId: M:Steeltoe.Discovery.Consul.Registry.ConsulServiceRegistrar.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: Steeltoe.Discovery.Consul.Registry.ConsulServiceRegistrar
  langs:
  - csharp
  - vb
  name: Dispose(Boolean)
  nameWithType: ConsulServiceRegistrar.Dispose(Boolean)
  fullName: Steeltoe.Discovery.Consul.Registry.ConsulServiceRegistrar.Dispose(System.Boolean)
  type: Method
  source:
    remote:
      path: src/Discovery/src/Consul/Registry/ConsulServiceRegistrar.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Dispose
    path: ../Steeltoe/src/Discovery/src/Consul/Registry/ConsulServiceRegistrar.cs
    startLine: 167
  assemblies:
  - Steeltoe.Discovery.Consul
  namespace: Steeltoe.Discovery.Consul.Registry
  syntax:
    content: protected virtual void Dispose(bool disposing)
    parameters:
    - id: disposing
      type: System.Boolean
    content.vb: Protected Overridable Sub Dispose(disposing As Boolean)
  overload: Steeltoe.Discovery.Consul.Registry.ConsulServiceRegistrar.Dispose*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: Steeltoe.Discovery.Consul.Registry.ConsulServiceRegistrar.Finalize
  commentId: M:Steeltoe.Discovery.Consul.Registry.ConsulServiceRegistrar.Finalize
  id: Finalize
  parent: Steeltoe.Discovery.Consul.Registry.ConsulServiceRegistrar
  langs:
  - csharp
  - vb
  name: Finalize()
  nameWithType: ConsulServiceRegistrar.Finalize()
  fullName: Steeltoe.Discovery.Consul.Registry.ConsulServiceRegistrar.Finalize()
  type: Method
  source:
    remote:
      path: src/Discovery/src/Consul/Registry/ConsulServiceRegistrar.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Finalize
    path: ../Steeltoe/src/Discovery/src/Consul/Registry/ConsulServiceRegistrar.cs
    startLine: 186
  assemblies:
  - Steeltoe.Discovery.Consul
  namespace: Steeltoe.Discovery.Consul.Registry
  syntax:
    content: protected void Finalize()
    content.vb: Protected Sub Finalize
  overload: Steeltoe.Discovery.Consul.Registry.ConsulServiceRegistrar.Finalize*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
references:
- uid: Steeltoe.Discovery.Consul.Registry
  commentId: N:Steeltoe.Discovery.Consul.Registry
  name: Steeltoe.Discovery.Consul.Registry
  nameWithType: Steeltoe.Discovery.Consul.Registry
  fullName: Steeltoe.Discovery.Consul.Registry
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Steeltoe.Discovery.Consul.Registry.IConsulServiceRegistrar
  commentId: T:Steeltoe.Discovery.Consul.Registry.IConsulServiceRegistrar
  parent: Steeltoe.Discovery.Consul.Registry
  name: IConsulServiceRegistrar
  nameWithType: IConsulServiceRegistrar
  fullName: Steeltoe.Discovery.Consul.Registry.IConsulServiceRegistrar
- uid: Steeltoe.Discovery.Consul.Registry.IServiceRegistrar
  commentId: T:Steeltoe.Discovery.Consul.Registry.IServiceRegistrar
  parent: Steeltoe.Discovery.Consul.Registry
  name: IServiceRegistrar
  nameWithType: IServiceRegistrar
  fullName: Steeltoe.Discovery.Consul.Registry.IServiceRegistrar
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Steeltoe.Discovery.Consul.Registry.ConsulServiceRegistrar.Registration*
  commentId: Overload:Steeltoe.Discovery.Consul.Registry.ConsulServiceRegistrar.Registration
  name: Registration
  nameWithType: ConsulServiceRegistrar.Registration
  fullName: Steeltoe.Discovery.Consul.Registry.ConsulServiceRegistrar.Registration
- uid: Steeltoe.Discovery.Consul.Registry.IConsulServiceRegistrar.Registration
  commentId: P:Steeltoe.Discovery.Consul.Registry.IConsulServiceRegistrar.Registration
  parent: Steeltoe.Discovery.Consul.Registry.IConsulServiceRegistrar
  name: Registration
  nameWithType: IConsulServiceRegistrar.Registration
  fullName: Steeltoe.Discovery.Consul.Registry.IConsulServiceRegistrar.Registration
- uid: Steeltoe.Discovery.Consul.Registry.IConsulRegistration
  commentId: T:Steeltoe.Discovery.Consul.Registry.IConsulRegistration
  parent: Steeltoe.Discovery.Consul.Registry
  name: IConsulRegistration
  nameWithType: IConsulRegistration
  fullName: Steeltoe.Discovery.Consul.Registry.IConsulRegistration
- uid: Steeltoe.Discovery.Consul.Registry.ConsulServiceRegistrar
  commentId: T:Steeltoe.Discovery.Consul.Registry.ConsulServiceRegistrar
  name: ConsulServiceRegistrar
  nameWithType: ConsulServiceRegistrar
  fullName: Steeltoe.Discovery.Consul.Registry.ConsulServiceRegistrar
- uid: Steeltoe.Discovery.Consul.Registry.ConsulServiceRegistrar.#ctor*
  commentId: Overload:Steeltoe.Discovery.Consul.Registry.ConsulServiceRegistrar.#ctor
  name: ConsulServiceRegistrar
  nameWithType: ConsulServiceRegistrar.ConsulServiceRegistrar
  fullName: Steeltoe.Discovery.Consul.Registry.ConsulServiceRegistrar.ConsulServiceRegistrar
- uid: Steeltoe.Discovery.Consul.Registry.IConsulServiceRegistry
  commentId: T:Steeltoe.Discovery.Consul.Registry.IConsulServiceRegistry
  parent: Steeltoe.Discovery.Consul.Registry
  name: IConsulServiceRegistry
  nameWithType: IConsulServiceRegistry
  fullName: Steeltoe.Discovery.Consul.Registry.IConsulServiceRegistry
- uid: IOptionsMonitor{Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions}
  commentId: '!:IOptionsMonitor{Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions}'
  definition: IOptionsMonitor`1
  name: IOptionsMonitor<ConsulDiscoveryOptions>
  nameWithType: IOptionsMonitor<ConsulDiscoveryOptions>
  fullName: IOptionsMonitor<Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions>
  nameWithType.vb: IOptionsMonitor(Of ConsulDiscoveryOptions)
  fullName.vb: IOptionsMonitor(Of Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions)
  name.vb: IOptionsMonitor(Of ConsulDiscoveryOptions)
  spec.csharp:
  - uid: IOptionsMonitor`1
    name: IOptionsMonitor
    nameWithType: IOptionsMonitor
    fullName: IOptionsMonitor
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions
    name: ConsulDiscoveryOptions
    nameWithType: ConsulDiscoveryOptions
    fullName: Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IOptionsMonitor`1
    name: IOptionsMonitor
    nameWithType: IOptionsMonitor
    fullName: IOptionsMonitor
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions
    name: ConsulDiscoveryOptions
    nameWithType: ConsulDiscoveryOptions
    fullName: Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions
  - name: )
    nameWithType: )
    fullName: )
- uid: ILogger{Steeltoe.Discovery.Consul.Registry.ConsulServiceRegistrar}
  commentId: '!:ILogger{Steeltoe.Discovery.Consul.Registry.ConsulServiceRegistrar}'
  definition: ILogger`1
  name: ILogger<ConsulServiceRegistrar>
  nameWithType: ILogger<ConsulServiceRegistrar>
  fullName: ILogger<Steeltoe.Discovery.Consul.Registry.ConsulServiceRegistrar>
  nameWithType.vb: ILogger(Of ConsulServiceRegistrar)
  fullName.vb: ILogger(Of Steeltoe.Discovery.Consul.Registry.ConsulServiceRegistrar)
  name.vb: ILogger(Of ConsulServiceRegistrar)
  spec.csharp:
  - uid: ILogger`1
    name: ILogger
    nameWithType: ILogger
    fullName: ILogger
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Steeltoe.Discovery.Consul.Registry.ConsulServiceRegistrar
    name: ConsulServiceRegistrar
    nameWithType: ConsulServiceRegistrar
    fullName: Steeltoe.Discovery.Consul.Registry.ConsulServiceRegistrar
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: ILogger`1
    name: ILogger
    nameWithType: ILogger
    fullName: ILogger
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Steeltoe.Discovery.Consul.Registry.ConsulServiceRegistrar
    name: ConsulServiceRegistrar
    nameWithType: ConsulServiceRegistrar
    fullName: Steeltoe.Discovery.Consul.Registry.ConsulServiceRegistrar
  - name: )
    nameWithType: )
    fullName: )
- uid: IOptionsMonitor`1
  isExternal: true
  name: IOptionsMonitor<>
  nameWithType: IOptionsMonitor<>
  fullName: IOptionsMonitor<>
  nameWithType.vb: IOptionsMonitor(Of )
  fullName.vb: IOptionsMonitor(Of )
  name.vb: IOptionsMonitor(Of )
  spec.csharp:
  - uid: IOptionsMonitor`1
    name: IOptionsMonitor
    nameWithType: IOptionsMonitor
    fullName: IOptionsMonitor
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IOptionsMonitor`1
    name: IOptionsMonitor
    nameWithType: IOptionsMonitor
    fullName: IOptionsMonitor
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: ILogger`1
  isExternal: true
  name: ILogger<>
  nameWithType: ILogger<>
  fullName: ILogger<>
  nameWithType.vb: ILogger(Of )
  fullName.vb: ILogger(Of )
  name.vb: ILogger(Of )
  spec.csharp:
  - uid: ILogger`1
    name: ILogger
    nameWithType: ILogger
    fullName: ILogger
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: ILogger`1
    name: ILogger
    nameWithType: ILogger
    fullName: ILogger
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions
  commentId: T:Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions
  parent: Steeltoe.Discovery.Consul.Discovery
  name: ConsulDiscoveryOptions
  nameWithType: ConsulDiscoveryOptions
  fullName: Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions
- uid: Steeltoe.Discovery.Consul.Discovery
  commentId: N:Steeltoe.Discovery.Consul.Discovery
  name: Steeltoe.Discovery.Consul.Discovery
  nameWithType: Steeltoe.Discovery.Consul.Discovery
  fullName: Steeltoe.Discovery.Consul.Discovery
- uid: Steeltoe.Discovery.Consul.Registry.ConsulServiceRegistrar.Start*
  commentId: Overload:Steeltoe.Discovery.Consul.Registry.ConsulServiceRegistrar.Start
  name: Start
  nameWithType: ConsulServiceRegistrar.Start
  fullName: Steeltoe.Discovery.Consul.Registry.ConsulServiceRegistrar.Start
- uid: Steeltoe.Discovery.Consul.Registry.IServiceRegistrar.Start
  commentId: M:Steeltoe.Discovery.Consul.Registry.IServiceRegistrar.Start
  parent: Steeltoe.Discovery.Consul.Registry.IServiceRegistrar
  name: Start()
  nameWithType: IServiceRegistrar.Start()
  fullName: Steeltoe.Discovery.Consul.Registry.IServiceRegistrar.Start()
  spec.csharp:
  - uid: Steeltoe.Discovery.Consul.Registry.IServiceRegistrar.Start
    name: Start
    nameWithType: IServiceRegistrar.Start
    fullName: Steeltoe.Discovery.Consul.Registry.IServiceRegistrar.Start
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Discovery.Consul.Registry.IServiceRegistrar.Start
    name: Start
    nameWithType: IServiceRegistrar.Start
    fullName: Steeltoe.Discovery.Consul.Registry.IServiceRegistrar.Start
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Discovery.Consul.Registry.ConsulServiceRegistrar.Register*
  commentId: Overload:Steeltoe.Discovery.Consul.Registry.ConsulServiceRegistrar.Register
  name: Register
  nameWithType: ConsulServiceRegistrar.Register
  fullName: Steeltoe.Discovery.Consul.Registry.ConsulServiceRegistrar.Register
- uid: Steeltoe.Discovery.Consul.Registry.IServiceRegistrar.Register
  commentId: M:Steeltoe.Discovery.Consul.Registry.IServiceRegistrar.Register
  parent: Steeltoe.Discovery.Consul.Registry.IServiceRegistrar
  name: Register()
  nameWithType: IServiceRegistrar.Register()
  fullName: Steeltoe.Discovery.Consul.Registry.IServiceRegistrar.Register()
  spec.csharp:
  - uid: Steeltoe.Discovery.Consul.Registry.IServiceRegistrar.Register
    name: Register
    nameWithType: IServiceRegistrar.Register
    fullName: Steeltoe.Discovery.Consul.Registry.IServiceRegistrar.Register
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Discovery.Consul.Registry.IServiceRegistrar.Register
    name: Register
    nameWithType: IServiceRegistrar.Register
    fullName: Steeltoe.Discovery.Consul.Registry.IServiceRegistrar.Register
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Discovery.Consul.Registry.ConsulServiceRegistrar.Deregister*
  commentId: Overload:Steeltoe.Discovery.Consul.Registry.ConsulServiceRegistrar.Deregister
  name: Deregister
  nameWithType: ConsulServiceRegistrar.Deregister
  fullName: Steeltoe.Discovery.Consul.Registry.ConsulServiceRegistrar.Deregister
- uid: Steeltoe.Discovery.Consul.Registry.IServiceRegistrar.Deregister
  commentId: M:Steeltoe.Discovery.Consul.Registry.IServiceRegistrar.Deregister
  parent: Steeltoe.Discovery.Consul.Registry.IServiceRegistrar
  name: Deregister()
  nameWithType: IServiceRegistrar.Deregister()
  fullName: Steeltoe.Discovery.Consul.Registry.IServiceRegistrar.Deregister()
  spec.csharp:
  - uid: Steeltoe.Discovery.Consul.Registry.IServiceRegistrar.Deregister
    name: Deregister
    nameWithType: IServiceRegistrar.Deregister
    fullName: Steeltoe.Discovery.Consul.Registry.IServiceRegistrar.Deregister
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Discovery.Consul.Registry.IServiceRegistrar.Deregister
    name: Deregister
    nameWithType: IServiceRegistrar.Deregister
    fullName: Steeltoe.Discovery.Consul.Registry.IServiceRegistrar.Deregister
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Discovery.Consul.Registry.ConsulServiceRegistrar.Dispose*
  commentId: Overload:Steeltoe.Discovery.Consul.Registry.ConsulServiceRegistrar.Dispose
  name: Dispose
  nameWithType: ConsulServiceRegistrar.Dispose
  fullName: Steeltoe.Discovery.Consul.Registry.ConsulServiceRegistrar.Dispose
- uid: System.IDisposable.Dispose
  commentId: M:System.IDisposable.Dispose
  parent: System.IDisposable
  isExternal: true
  name: Dispose()
  nameWithType: IDisposable.Dispose()
  fullName: System.IDisposable.Dispose()
  spec.csharp:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Steeltoe.Discovery.Consul.Registry.ConsulServiceRegistrar.Finalize*
  commentId: Overload:Steeltoe.Discovery.Consul.Registry.ConsulServiceRegistrar.Finalize
  name: Finalize
  nameWithType: ConsulServiceRegistrar.Finalize
  fullName: Steeltoe.Discovery.Consul.Registry.ConsulServiceRegistrar.Finalize
