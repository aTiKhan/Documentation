### YamlMime:ManagedReference
items:
- uid: Steeltoe.Common.Util.AntPathMatcher
  commentId: T:Steeltoe.Common.Util.AntPathMatcher
  id: AntPathMatcher
  parent: Steeltoe.Common.Util
  children:
  - Steeltoe.Common.Util.AntPathMatcher.#ctor
  - Steeltoe.Common.Util.AntPathMatcher.#ctor(System.String)
  - Steeltoe.Common.Util.AntPathMatcher.CachePatterns
  - Steeltoe.Common.Util.AntPathMatcher.CaseSensitive
  - Steeltoe.Common.Util.AntPathMatcher.Combine(System.String,System.String)
  - Steeltoe.Common.Util.AntPathMatcher.DEFAULT_PATH_SEPARATOR
  - Steeltoe.Common.Util.AntPathMatcher.DoMatch(System.String,System.String,System.Boolean,System.Collections.Generic.IDictionary{System.String,System.String})
  - Steeltoe.Common.Util.AntPathMatcher.ExtractPathWithinPattern(System.String,System.String)
  - Steeltoe.Common.Util.AntPathMatcher.ExtractUriTemplateVariables(System.String,System.String)
  - Steeltoe.Common.Util.AntPathMatcher.GetPatternComparer(System.String)
  - Steeltoe.Common.Util.AntPathMatcher.GetStringMatcher(System.String)
  - Steeltoe.Common.Util.AntPathMatcher.IsPattern(System.String)
  - Steeltoe.Common.Util.AntPathMatcher.Match(System.String,System.String)
  - Steeltoe.Common.Util.AntPathMatcher.MatchStart(System.String,System.String)
  - Steeltoe.Common.Util.AntPathMatcher.PathSeparator
  - Steeltoe.Common.Util.AntPathMatcher.TokenizePath(System.String)
  - Steeltoe.Common.Util.AntPathMatcher.TokenizePattern(System.String)
  - Steeltoe.Common.Util.AntPathMatcher.TrimTokens
  langs:
  - csharp
  - vb
  name: AntPathMatcher
  nameWithType: AntPathMatcher
  fullName: Steeltoe.Common.Util.AntPathMatcher
  type: Class
  source:
    remote:
      path: src/Common/src/Common/Util/AntPathMatcher.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: AntPathMatcher
    path: ../Steeltoe/src/Common/src/Common/Util/AntPathMatcher.cs
    startLine: 12
  assemblies:
  - Steeltoe.Common
  namespace: Steeltoe.Common.Util
  syntax:
    content: 'public class AntPathMatcher : IPathMatcher'
    content.vb: >-
      Public Class AntPathMatcher

          Implements IPathMatcher
  inheritance:
  - System.Object
  implements:
  - Steeltoe.Common.Util.IPathMatcher
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Steeltoe.Common.Util.AntPathMatcher.DEFAULT_PATH_SEPARATOR
  commentId: F:Steeltoe.Common.Util.AntPathMatcher.DEFAULT_PATH_SEPARATOR
  id: DEFAULT_PATH_SEPARATOR
  parent: Steeltoe.Common.Util.AntPathMatcher
  langs:
  - csharp
  - vb
  name: DEFAULT_PATH_SEPARATOR
  nameWithType: AntPathMatcher.DEFAULT_PATH_SEPARATOR
  fullName: Steeltoe.Common.Util.AntPathMatcher.DEFAULT_PATH_SEPARATOR
  type: Field
  source:
    remote:
      path: src/Common/src/Common/Util/AntPathMatcher.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: DEFAULT_PATH_SEPARATOR
    path: ../Steeltoe/src/Common/src/Common/Util/AntPathMatcher.cs
    startLine: 14
  assemblies:
  - Steeltoe.Common
  namespace: Steeltoe.Common.Util
  syntax:
    content: public const string DEFAULT_PATH_SEPARATOR = "/"
    return:
      type: System.String
    content.vb: Public Const DEFAULT_PATH_SEPARATOR As String = "/"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Steeltoe.Common.Util.AntPathMatcher.#ctor
  commentId: M:Steeltoe.Common.Util.AntPathMatcher.#ctor
  id: '#ctor'
  parent: Steeltoe.Common.Util.AntPathMatcher
  langs:
  - csharp
  - vb
  name: AntPathMatcher()
  nameWithType: AntPathMatcher.AntPathMatcher()
  fullName: Steeltoe.Common.Util.AntPathMatcher.AntPathMatcher()
  type: Constructor
  source:
    remote:
      path: src/Common/src/Common/Util/AntPathMatcher.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: .ctor
    path: ../Steeltoe/src/Common/src/Common/Util/AntPathMatcher.cs
    startLine: 30
  assemblies:
  - Steeltoe.Common
  namespace: Steeltoe.Common.Util
  syntax:
    content: public AntPathMatcher()
    content.vb: Public Sub New
  overload: Steeltoe.Common.Util.AntPathMatcher.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Steeltoe.Common.Util.AntPathMatcher.#ctor(System.String)
  commentId: M:Steeltoe.Common.Util.AntPathMatcher.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: Steeltoe.Common.Util.AntPathMatcher
  langs:
  - csharp
  - vb
  name: AntPathMatcher(String)
  nameWithType: AntPathMatcher.AntPathMatcher(String)
  fullName: Steeltoe.Common.Util.AntPathMatcher.AntPathMatcher(System.String)
  type: Constructor
  source:
    remote:
      path: src/Common/src/Common/Util/AntPathMatcher.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: .ctor
    path: ../Steeltoe/src/Common/src/Common/Util/AntPathMatcher.cs
    startLine: 36
  assemblies:
  - Steeltoe.Common
  namespace: Steeltoe.Common.Util
  syntax:
    content: public AntPathMatcher(string pathSeparator)
    parameters:
    - id: pathSeparator
      type: System.String
    content.vb: Public Sub New(pathSeparator As String)
  overload: Steeltoe.Common.Util.AntPathMatcher.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Steeltoe.Common.Util.AntPathMatcher.PathSeparator
  commentId: P:Steeltoe.Common.Util.AntPathMatcher.PathSeparator
  id: PathSeparator
  parent: Steeltoe.Common.Util.AntPathMatcher
  langs:
  - csharp
  - vb
  name: PathSeparator
  nameWithType: AntPathMatcher.PathSeparator
  fullName: Steeltoe.Common.Util.AntPathMatcher.PathSeparator
  type: Property
  source:
    remote:
      path: src/Common/src/Common/Util/AntPathMatcher.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: PathSeparator
    path: ../Steeltoe/src/Common/src/Common/Util/AntPathMatcher.cs
    startLine: 47
  assemblies:
  - Steeltoe.Common
  namespace: Steeltoe.Common.Util
  syntax:
    content: public virtual string PathSeparator { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Overridable Property PathSeparator As String
  overload: Steeltoe.Common.Util.AntPathMatcher.PathSeparator*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Steeltoe.Common.Util.AntPathMatcher.CaseSensitive
  commentId: P:Steeltoe.Common.Util.AntPathMatcher.CaseSensitive
  id: CaseSensitive
  parent: Steeltoe.Common.Util.AntPathMatcher
  langs:
  - csharp
  - vb
  name: CaseSensitive
  nameWithType: AntPathMatcher.CaseSensitive
  fullName: Steeltoe.Common.Util.AntPathMatcher.CaseSensitive
  type: Property
  source:
    remote:
      path: src/Common/src/Common/Util/AntPathMatcher.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: CaseSensitive
    path: ../Steeltoe/src/Common/src/Common/Util/AntPathMatcher.cs
    startLine: 61
  assemblies:
  - Steeltoe.Common
  namespace: Steeltoe.Common.Util
  syntax:
    content: public virtual bool CaseSensitive { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Overridable Property CaseSensitive As Boolean
  overload: Steeltoe.Common.Util.AntPathMatcher.CaseSensitive*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Steeltoe.Common.Util.AntPathMatcher.TrimTokens
  commentId: P:Steeltoe.Common.Util.AntPathMatcher.TrimTokens
  id: TrimTokens
  parent: Steeltoe.Common.Util.AntPathMatcher
  langs:
  - csharp
  - vb
  name: TrimTokens
  nameWithType: AntPathMatcher.TrimTokens
  fullName: Steeltoe.Common.Util.AntPathMatcher.TrimTokens
  type: Property
  source:
    remote:
      path: src/Common/src/Common/Util/AntPathMatcher.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: TrimTokens
    path: ../Steeltoe/src/Common/src/Common/Util/AntPathMatcher.cs
    startLine: 63
  assemblies:
  - Steeltoe.Common
  namespace: Steeltoe.Common.Util
  syntax:
    content: public virtual bool TrimTokens { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Overridable Property TrimTokens As Boolean
  overload: Steeltoe.Common.Util.AntPathMatcher.TrimTokens*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Steeltoe.Common.Util.AntPathMatcher.CachePatterns
  commentId: P:Steeltoe.Common.Util.AntPathMatcher.CachePatterns
  id: CachePatterns
  parent: Steeltoe.Common.Util.AntPathMatcher
  langs:
  - csharp
  - vb
  name: CachePatterns
  nameWithType: AntPathMatcher.CachePatterns
  fullName: Steeltoe.Common.Util.AntPathMatcher.CachePatterns
  type: Property
  source:
    remote:
      path: src/Common/src/Common/Util/AntPathMatcher.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: CachePatterns
    path: ../Steeltoe/src/Common/src/Common/Util/AntPathMatcher.cs
    startLine: 65
  assemblies:
  - Steeltoe.Common
  namespace: Steeltoe.Common.Util
  syntax:
    content: public virtual bool? CachePatterns { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Boolean}
    content.vb: Public Overridable Property CachePatterns As Boolean?
  overload: Steeltoe.Common.Util.AntPathMatcher.CachePatterns*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Steeltoe.Common.Util.AntPathMatcher.IsPattern(System.String)
  commentId: M:Steeltoe.Common.Util.AntPathMatcher.IsPattern(System.String)
  id: IsPattern(System.String)
  parent: Steeltoe.Common.Util.AntPathMatcher
  langs:
  - csharp
  - vb
  name: IsPattern(String)
  nameWithType: AntPathMatcher.IsPattern(String)
  fullName: Steeltoe.Common.Util.AntPathMatcher.IsPattern(System.String)
  type: Method
  source:
    remote:
      path: src/Common/src/Common/Util/AntPathMatcher.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: IsPattern
    path: ../Steeltoe/src/Common/src/Common/Util/AntPathMatcher.cs
    startLine: 67
  assemblies:
  - Steeltoe.Common
  namespace: Steeltoe.Common.Util
  syntax:
    content: public virtual bool IsPattern(string path)
    parameters:
    - id: path
      type: System.String
    return:
      type: System.Boolean
    content.vb: Public Overridable Function IsPattern(path As String) As Boolean
  overload: Steeltoe.Common.Util.AntPathMatcher.IsPattern*
  implements:
  - Steeltoe.Common.Util.IPathMatcher.IsPattern(System.String)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Steeltoe.Common.Util.AntPathMatcher.Match(System.String,System.String)
  commentId: M:Steeltoe.Common.Util.AntPathMatcher.Match(System.String,System.String)
  id: Match(System.String,System.String)
  parent: Steeltoe.Common.Util.AntPathMatcher
  langs:
  - csharp
  - vb
  name: Match(String, String)
  nameWithType: AntPathMatcher.Match(String, String)
  fullName: Steeltoe.Common.Util.AntPathMatcher.Match(System.String, System.String)
  type: Method
  source:
    remote:
      path: src/Common/src/Common/Util/AntPathMatcher.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Match
    path: ../Steeltoe/src/Common/src/Common/Util/AntPathMatcher.cs
    startLine: 93
  assemblies:
  - Steeltoe.Common
  namespace: Steeltoe.Common.Util
  syntax:
    content: public virtual bool Match(string pattern, string path)
    parameters:
    - id: pattern
      type: System.String
    - id: path
      type: System.String
    return:
      type: System.Boolean
    content.vb: Public Overridable Function Match(pattern As String, path As String) As Boolean
  overload: Steeltoe.Common.Util.AntPathMatcher.Match*
  implements:
  - Steeltoe.Common.Util.IPathMatcher.Match(System.String,System.String)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Steeltoe.Common.Util.AntPathMatcher.MatchStart(System.String,System.String)
  commentId: M:Steeltoe.Common.Util.AntPathMatcher.MatchStart(System.String,System.String)
  id: MatchStart(System.String,System.String)
  parent: Steeltoe.Common.Util.AntPathMatcher
  langs:
  - csharp
  - vb
  name: MatchStart(String, String)
  nameWithType: AntPathMatcher.MatchStart(String, String)
  fullName: Steeltoe.Common.Util.AntPathMatcher.MatchStart(System.String, System.String)
  type: Method
  source:
    remote:
      path: src/Common/src/Common/Util/AntPathMatcher.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: MatchStart
    path: ../Steeltoe/src/Common/src/Common/Util/AntPathMatcher.cs
    startLine: 98
  assemblies:
  - Steeltoe.Common
  namespace: Steeltoe.Common.Util
  syntax:
    content: public virtual bool MatchStart(string pattern, string path)
    parameters:
    - id: pattern
      type: System.String
    - id: path
      type: System.String
    return:
      type: System.Boolean
    content.vb: Public Overridable Function MatchStart(pattern As String, path As String) As Boolean
  overload: Steeltoe.Common.Util.AntPathMatcher.MatchStart*
  implements:
  - Steeltoe.Common.Util.IPathMatcher.MatchStart(System.String,System.String)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Steeltoe.Common.Util.AntPathMatcher.ExtractPathWithinPattern(System.String,System.String)
  commentId: M:Steeltoe.Common.Util.AntPathMatcher.ExtractPathWithinPattern(System.String,System.String)
  id: ExtractPathWithinPattern(System.String,System.String)
  parent: Steeltoe.Common.Util.AntPathMatcher
  langs:
  - csharp
  - vb
  name: ExtractPathWithinPattern(String, String)
  nameWithType: AntPathMatcher.ExtractPathWithinPattern(String, String)
  fullName: Steeltoe.Common.Util.AntPathMatcher.ExtractPathWithinPattern(System.String, System.String)
  type: Method
  source:
    remote:
      path: src/Common/src/Common/Util/AntPathMatcher.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: ExtractPathWithinPattern
    path: ../Steeltoe/src/Common/src/Common/Util/AntPathMatcher.cs
    startLine: 103
  assemblies:
  - Steeltoe.Common
  namespace: Steeltoe.Common.Util
  syntax:
    content: public virtual string ExtractPathWithinPattern(string pattern, string path)
    parameters:
    - id: pattern
      type: System.String
    - id: path
      type: System.String
    return:
      type: System.String
    content.vb: Public Overridable Function ExtractPathWithinPattern(pattern As String, path As String) As String
  overload: Steeltoe.Common.Util.AntPathMatcher.ExtractPathWithinPattern*
  implements:
  - Steeltoe.Common.Util.IPathMatcher.ExtractPathWithinPattern(System.String,System.String)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Steeltoe.Common.Util.AntPathMatcher.ExtractUriTemplateVariables(System.String,System.String)
  commentId: M:Steeltoe.Common.Util.AntPathMatcher.ExtractUriTemplateVariables(System.String,System.String)
  id: ExtractUriTemplateVariables(System.String,System.String)
  parent: Steeltoe.Common.Util.AntPathMatcher
  langs:
  - csharp
  - vb
  name: ExtractUriTemplateVariables(String, String)
  nameWithType: AntPathMatcher.ExtractUriTemplateVariables(String, String)
  fullName: Steeltoe.Common.Util.AntPathMatcher.ExtractUriTemplateVariables(System.String, System.String)
  type: Method
  source:
    remote:
      path: src/Common/src/Common/Util/AntPathMatcher.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: ExtractUriTemplateVariables
    path: ../Steeltoe/src/Common/src/Common/Util/AntPathMatcher.cs
    startLine: 132
  assemblies:
  - Steeltoe.Common
  namespace: Steeltoe.Common.Util
  syntax:
    content: public virtual IDictionary<string, string> ExtractUriTemplateVariables(string pattern, string path)
    parameters:
    - id: pattern
      type: System.String
    - id: path
      type: System.String
    return:
      type: System.Collections.Generic.IDictionary{System.String,System.String}
    content.vb: Public Overridable Function ExtractUriTemplateVariables(pattern As String, path As String) As IDictionary(Of String, String)
  overload: Steeltoe.Common.Util.AntPathMatcher.ExtractUriTemplateVariables*
  implements:
  - Steeltoe.Common.Util.IPathMatcher.ExtractUriTemplateVariables(System.String,System.String)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Steeltoe.Common.Util.AntPathMatcher.Combine(System.String,System.String)
  commentId: M:Steeltoe.Common.Util.AntPathMatcher.Combine(System.String,System.String)
  id: Combine(System.String,System.String)
  parent: Steeltoe.Common.Util.AntPathMatcher
  langs:
  - csharp
  - vb
  name: Combine(String, String)
  nameWithType: AntPathMatcher.Combine(String, String)
  fullName: Steeltoe.Common.Util.AntPathMatcher.Combine(System.String, System.String)
  type: Method
  source:
    remote:
      path: src/Common/src/Common/Util/AntPathMatcher.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Combine
    path: ../Steeltoe/src/Common/src/Common/Util/AntPathMatcher.cs
    startLine: 144
  assemblies:
  - Steeltoe.Common
  namespace: Steeltoe.Common.Util
  syntax:
    content: public virtual string Combine(string pattern1, string pattern2)
    parameters:
    - id: pattern1
      type: System.String
    - id: pattern2
      type: System.String
    return:
      type: System.String
    content.vb: Public Overridable Function Combine(pattern1 As String, pattern2 As String) As String
  overload: Steeltoe.Common.Util.AntPathMatcher.Combine*
  implements:
  - Steeltoe.Common.Util.IPathMatcher.Combine(System.String,System.String)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Steeltoe.Common.Util.AntPathMatcher.GetPatternComparer(System.String)
  commentId: M:Steeltoe.Common.Util.AntPathMatcher.GetPatternComparer(System.String)
  id: GetPatternComparer(System.String)
  parent: Steeltoe.Common.Util.AntPathMatcher
  langs:
  - csharp
  - vb
  name: GetPatternComparer(String)
  nameWithType: AntPathMatcher.GetPatternComparer(String)
  fullName: Steeltoe.Common.Util.AntPathMatcher.GetPatternComparer(System.String)
  type: Method
  source:
    remote:
      path: src/Common/src/Common/Util/AntPathMatcher.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: GetPatternComparer
    path: ../Steeltoe/src/Common/src/Common/Util/AntPathMatcher.cs
    startLine: 205
  assemblies:
  - Steeltoe.Common
  namespace: Steeltoe.Common.Util
  syntax:
    content: public virtual IComparer<string> GetPatternComparer(string path)
    parameters:
    - id: path
      type: System.String
    return:
      type: System.Collections.Generic.IComparer{System.String}
    content.vb: Public Overridable Function GetPatternComparer(path As String) As IComparer(Of String)
  overload: Steeltoe.Common.Util.AntPathMatcher.GetPatternComparer*
  implements:
  - Steeltoe.Common.Util.IPathMatcher.GetPatternComparer(System.String)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Steeltoe.Common.Util.AntPathMatcher.DoMatch(System.String,System.String,System.Boolean,System.Collections.Generic.IDictionary{System.String,System.String})
  commentId: M:Steeltoe.Common.Util.AntPathMatcher.DoMatch(System.String,System.String,System.Boolean,System.Collections.Generic.IDictionary{System.String,System.String})
  id: DoMatch(System.String,System.String,System.Boolean,System.Collections.Generic.IDictionary{System.String,System.String})
  parent: Steeltoe.Common.Util.AntPathMatcher
  langs:
  - csharp
  - vb
  name: DoMatch(String, String, Boolean, IDictionary<String, String>)
  nameWithType: AntPathMatcher.DoMatch(String, String, Boolean, IDictionary<String, String>)
  fullName: Steeltoe.Common.Util.AntPathMatcher.DoMatch(System.String, System.String, System.Boolean, System.Collections.Generic.IDictionary<System.String, System.String>)
  type: Method
  source:
    remote:
      path: src/Common/src/Common/Util/AntPathMatcher.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: DoMatch
    path: ../Steeltoe/src/Common/src/Common/Util/AntPathMatcher.cs
    startLine: 210
  assemblies:
  - Steeltoe.Common
  namespace: Steeltoe.Common.Util
  syntax:
    content: protected virtual bool DoMatch(string pattern, string path, bool fullMatch, IDictionary<string, string> uriTemplateVariables)
    parameters:
    - id: pattern
      type: System.String
    - id: path
      type: System.String
    - id: fullMatch
      type: System.Boolean
    - id: uriTemplateVariables
      type: System.Collections.Generic.IDictionary{System.String,System.String}
    return:
      type: System.Boolean
    content.vb: Protected Overridable Function DoMatch(pattern As String, path As String, fullMatch As Boolean, uriTemplateVariables As IDictionary(Of String, String)) As Boolean
  overload: Steeltoe.Common.Util.AntPathMatcher.DoMatch*
  nameWithType.vb: AntPathMatcher.DoMatch(String, String, Boolean, IDictionary(Of String, String))
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
  fullName.vb: Steeltoe.Common.Util.AntPathMatcher.DoMatch(System.String, System.String, System.Boolean, System.Collections.Generic.IDictionary(Of System.String, System.String))
  name.vb: DoMatch(String, String, Boolean, IDictionary(Of String, String))
- uid: Steeltoe.Common.Util.AntPathMatcher.TokenizePattern(System.String)
  commentId: M:Steeltoe.Common.Util.AntPathMatcher.TokenizePattern(System.String)
  id: TokenizePattern(System.String)
  parent: Steeltoe.Common.Util.AntPathMatcher
  langs:
  - csharp
  - vb
  name: TokenizePattern(String)
  nameWithType: AntPathMatcher.TokenizePattern(String)
  fullName: Steeltoe.Common.Util.AntPathMatcher.TokenizePattern(System.String)
  type: Method
  source:
    remote:
      path: src/Common/src/Common/Util/AntPathMatcher.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: TokenizePattern
    path: ../Steeltoe/src/Common/src/Common/Util/AntPathMatcher.cs
    startLine: 387
  assemblies:
  - Steeltoe.Common
  namespace: Steeltoe.Common.Util
  syntax:
    content: protected virtual string[] TokenizePattern(string pattern)
    parameters:
    - id: pattern
      type: System.String
    return:
      type: System.String[]
    content.vb: Protected Overridable Function TokenizePattern(pattern As String) As String()
  overload: Steeltoe.Common.Util.AntPathMatcher.TokenizePattern*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: Steeltoe.Common.Util.AntPathMatcher.TokenizePath(System.String)
  commentId: M:Steeltoe.Common.Util.AntPathMatcher.TokenizePath(System.String)
  id: TokenizePath(System.String)
  parent: Steeltoe.Common.Util.AntPathMatcher
  langs:
  - csharp
  - vb
  name: TokenizePath(String)
  nameWithType: AntPathMatcher.TokenizePath(String)
  fullName: Steeltoe.Common.Util.AntPathMatcher.TokenizePath(System.String)
  type: Method
  source:
    remote:
      path: src/Common/src/Common/Util/AntPathMatcher.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: TokenizePath
    path: ../Steeltoe/src/Common/src/Common/Util/AntPathMatcher.cs
    startLine: 416
  assemblies:
  - Steeltoe.Common
  namespace: Steeltoe.Common.Util
  syntax:
    content: protected virtual string[] TokenizePath(string path)
    parameters:
    - id: path
      type: System.String
    return:
      type: System.String[]
    content.vb: Protected Overridable Function TokenizePath(path As String) As String()
  overload: Steeltoe.Common.Util.AntPathMatcher.TokenizePath*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: Steeltoe.Common.Util.AntPathMatcher.GetStringMatcher(System.String)
  commentId: M:Steeltoe.Common.Util.AntPathMatcher.GetStringMatcher(System.String)
  id: GetStringMatcher(System.String)
  parent: Steeltoe.Common.Util.AntPathMatcher
  langs:
  - csharp
  - vb
  name: GetStringMatcher(String)
  nameWithType: AntPathMatcher.GetStringMatcher(String)
  fullName: Steeltoe.Common.Util.AntPathMatcher.GetStringMatcher(System.String)
  type: Method
  source:
    remote:
      path: src/Common/src/Common/Util/AntPathMatcher.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: GetStringMatcher
    path: ../Steeltoe/src/Common/src/Common/Util/AntPathMatcher.cs
    startLine: 435
  assemblies:
  - Steeltoe.Common
  namespace: Steeltoe.Common.Util
  syntax:
    content: protected virtual AntPathMatcher.AntPathStringMatcher GetStringMatcher(string pattern)
    parameters:
    - id: pattern
      type: System.String
    return:
      type: Steeltoe.Common.Util.AntPathMatcher.AntPathStringMatcher
    content.vb: Protected Overridable Function GetStringMatcher(pattern As String) As AntPathMatcher.AntPathStringMatcher
  overload: Steeltoe.Common.Util.AntPathMatcher.GetStringMatcher*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
references:
- uid: Steeltoe.Common.Util
  commentId: N:Steeltoe.Common.Util
  name: Steeltoe.Common.Util
  nameWithType: Steeltoe.Common.Util
  fullName: Steeltoe.Common.Util
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Steeltoe.Common.Util.IPathMatcher
  commentId: T:Steeltoe.Common.Util.IPathMatcher
  parent: Steeltoe.Common.Util
  name: IPathMatcher
  nameWithType: IPathMatcher
  fullName: Steeltoe.Common.Util.IPathMatcher
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Steeltoe.Common.Util.AntPathMatcher.#ctor*
  commentId: Overload:Steeltoe.Common.Util.AntPathMatcher.#ctor
  name: AntPathMatcher
  nameWithType: AntPathMatcher.AntPathMatcher
  fullName: Steeltoe.Common.Util.AntPathMatcher.AntPathMatcher
- uid: Steeltoe.Common.Util.AntPathMatcher.PathSeparator*
  commentId: Overload:Steeltoe.Common.Util.AntPathMatcher.PathSeparator
  name: PathSeparator
  nameWithType: AntPathMatcher.PathSeparator
  fullName: Steeltoe.Common.Util.AntPathMatcher.PathSeparator
- uid: Steeltoe.Common.Util.AntPathMatcher.CaseSensitive*
  commentId: Overload:Steeltoe.Common.Util.AntPathMatcher.CaseSensitive
  name: CaseSensitive
  nameWithType: AntPathMatcher.CaseSensitive
  fullName: Steeltoe.Common.Util.AntPathMatcher.CaseSensitive
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Steeltoe.Common.Util.AntPathMatcher.TrimTokens*
  commentId: Overload:Steeltoe.Common.Util.AntPathMatcher.TrimTokens
  name: TrimTokens
  nameWithType: AntPathMatcher.TrimTokens
  fullName: Steeltoe.Common.Util.AntPathMatcher.TrimTokens
- uid: Steeltoe.Common.Util.AntPathMatcher.CachePatterns*
  commentId: Overload:Steeltoe.Common.Util.AntPathMatcher.CachePatterns
  name: CachePatterns
  nameWithType: AntPathMatcher.CachePatterns
  fullName: Steeltoe.Common.Util.AntPathMatcher.CachePatterns
- uid: System.Nullable{System.Boolean}
  commentId: T:System.Nullable{System.Boolean}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Boolean>
  nameWithType: Nullable<Boolean>
  fullName: System.Nullable<System.Boolean>
  nameWithType.vb: Nullable(Of Boolean)
  fullName.vb: System.Nullable(Of System.Boolean)
  name.vb: Nullable(Of Boolean)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Common.Util.AntPathMatcher.IsPattern*
  commentId: Overload:Steeltoe.Common.Util.AntPathMatcher.IsPattern
  name: IsPattern
  nameWithType: AntPathMatcher.IsPattern
  fullName: Steeltoe.Common.Util.AntPathMatcher.IsPattern
- uid: Steeltoe.Common.Util.IPathMatcher.IsPattern(System.String)
  commentId: M:Steeltoe.Common.Util.IPathMatcher.IsPattern(System.String)
  parent: Steeltoe.Common.Util.IPathMatcher
  isExternal: true
  name: IsPattern(String)
  nameWithType: IPathMatcher.IsPattern(String)
  fullName: Steeltoe.Common.Util.IPathMatcher.IsPattern(System.String)
  spec.csharp:
  - uid: Steeltoe.Common.Util.IPathMatcher.IsPattern(System.String)
    name: IsPattern
    nameWithType: IPathMatcher.IsPattern
    fullName: Steeltoe.Common.Util.IPathMatcher.IsPattern
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Common.Util.IPathMatcher.IsPattern(System.String)
    name: IsPattern
    nameWithType: IPathMatcher.IsPattern
    fullName: Steeltoe.Common.Util.IPathMatcher.IsPattern
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Common.Util.AntPathMatcher.Match*
  commentId: Overload:Steeltoe.Common.Util.AntPathMatcher.Match
  name: Match
  nameWithType: AntPathMatcher.Match
  fullName: Steeltoe.Common.Util.AntPathMatcher.Match
- uid: Steeltoe.Common.Util.IPathMatcher.Match(System.String,System.String)
  commentId: M:Steeltoe.Common.Util.IPathMatcher.Match(System.String,System.String)
  parent: Steeltoe.Common.Util.IPathMatcher
  isExternal: true
  name: Match(String, String)
  nameWithType: IPathMatcher.Match(String, String)
  fullName: Steeltoe.Common.Util.IPathMatcher.Match(System.String, System.String)
  spec.csharp:
  - uid: Steeltoe.Common.Util.IPathMatcher.Match(System.String,System.String)
    name: Match
    nameWithType: IPathMatcher.Match
    fullName: Steeltoe.Common.Util.IPathMatcher.Match
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Common.Util.IPathMatcher.Match(System.String,System.String)
    name: Match
    nameWithType: IPathMatcher.Match
    fullName: Steeltoe.Common.Util.IPathMatcher.Match
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Common.Util.AntPathMatcher.MatchStart*
  commentId: Overload:Steeltoe.Common.Util.AntPathMatcher.MatchStart
  name: MatchStart
  nameWithType: AntPathMatcher.MatchStart
  fullName: Steeltoe.Common.Util.AntPathMatcher.MatchStart
- uid: Steeltoe.Common.Util.IPathMatcher.MatchStart(System.String,System.String)
  commentId: M:Steeltoe.Common.Util.IPathMatcher.MatchStart(System.String,System.String)
  parent: Steeltoe.Common.Util.IPathMatcher
  isExternal: true
  name: MatchStart(String, String)
  nameWithType: IPathMatcher.MatchStart(String, String)
  fullName: Steeltoe.Common.Util.IPathMatcher.MatchStart(System.String, System.String)
  spec.csharp:
  - uid: Steeltoe.Common.Util.IPathMatcher.MatchStart(System.String,System.String)
    name: MatchStart
    nameWithType: IPathMatcher.MatchStart
    fullName: Steeltoe.Common.Util.IPathMatcher.MatchStart
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Common.Util.IPathMatcher.MatchStart(System.String,System.String)
    name: MatchStart
    nameWithType: IPathMatcher.MatchStart
    fullName: Steeltoe.Common.Util.IPathMatcher.MatchStart
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Common.Util.AntPathMatcher.ExtractPathWithinPattern*
  commentId: Overload:Steeltoe.Common.Util.AntPathMatcher.ExtractPathWithinPattern
  name: ExtractPathWithinPattern
  nameWithType: AntPathMatcher.ExtractPathWithinPattern
  fullName: Steeltoe.Common.Util.AntPathMatcher.ExtractPathWithinPattern
- uid: Steeltoe.Common.Util.IPathMatcher.ExtractPathWithinPattern(System.String,System.String)
  commentId: M:Steeltoe.Common.Util.IPathMatcher.ExtractPathWithinPattern(System.String,System.String)
  parent: Steeltoe.Common.Util.IPathMatcher
  isExternal: true
  name: ExtractPathWithinPattern(String, String)
  nameWithType: IPathMatcher.ExtractPathWithinPattern(String, String)
  fullName: Steeltoe.Common.Util.IPathMatcher.ExtractPathWithinPattern(System.String, System.String)
  spec.csharp:
  - uid: Steeltoe.Common.Util.IPathMatcher.ExtractPathWithinPattern(System.String,System.String)
    name: ExtractPathWithinPattern
    nameWithType: IPathMatcher.ExtractPathWithinPattern
    fullName: Steeltoe.Common.Util.IPathMatcher.ExtractPathWithinPattern
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Common.Util.IPathMatcher.ExtractPathWithinPattern(System.String,System.String)
    name: ExtractPathWithinPattern
    nameWithType: IPathMatcher.ExtractPathWithinPattern
    fullName: Steeltoe.Common.Util.IPathMatcher.ExtractPathWithinPattern
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Common.Util.AntPathMatcher.ExtractUriTemplateVariables*
  commentId: Overload:Steeltoe.Common.Util.AntPathMatcher.ExtractUriTemplateVariables
  name: ExtractUriTemplateVariables
  nameWithType: AntPathMatcher.ExtractUriTemplateVariables
  fullName: Steeltoe.Common.Util.AntPathMatcher.ExtractUriTemplateVariables
- uid: Steeltoe.Common.Util.IPathMatcher.ExtractUriTemplateVariables(System.String,System.String)
  commentId: M:Steeltoe.Common.Util.IPathMatcher.ExtractUriTemplateVariables(System.String,System.String)
  parent: Steeltoe.Common.Util.IPathMatcher
  isExternal: true
  name: ExtractUriTemplateVariables(String, String)
  nameWithType: IPathMatcher.ExtractUriTemplateVariables(String, String)
  fullName: Steeltoe.Common.Util.IPathMatcher.ExtractUriTemplateVariables(System.String, System.String)
  spec.csharp:
  - uid: Steeltoe.Common.Util.IPathMatcher.ExtractUriTemplateVariables(System.String,System.String)
    name: ExtractUriTemplateVariables
    nameWithType: IPathMatcher.ExtractUriTemplateVariables
    fullName: Steeltoe.Common.Util.IPathMatcher.ExtractUriTemplateVariables
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Common.Util.IPathMatcher.ExtractUriTemplateVariables(System.String,System.String)
    name: ExtractUriTemplateVariables
    nameWithType: IPathMatcher.ExtractUriTemplateVariables
    fullName: Steeltoe.Common.Util.IPathMatcher.ExtractUriTemplateVariables
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IDictionary{System.String,System.String}
  commentId: T:System.Collections.Generic.IDictionary{System.String,System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IDictionary`2
  name: IDictionary<String, String>
  nameWithType: IDictionary<String, String>
  fullName: System.Collections.Generic.IDictionary<System.String, System.String>
  nameWithType.vb: IDictionary(Of String, String)
  fullName.vb: System.Collections.Generic.IDictionary(Of System.String, System.String)
  name.vb: IDictionary(Of String, String)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IDictionary`2
  commentId: T:System.Collections.Generic.IDictionary`2
  isExternal: true
  name: IDictionary<TKey, TValue>
  nameWithType: IDictionary<TKey, TValue>
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>
  nameWithType.vb: IDictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.IDictionary(Of TKey, TValue)
  name.vb: IDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Steeltoe.Common.Util.AntPathMatcher.Combine*
  commentId: Overload:Steeltoe.Common.Util.AntPathMatcher.Combine
  name: Combine
  nameWithType: AntPathMatcher.Combine
  fullName: Steeltoe.Common.Util.AntPathMatcher.Combine
- uid: Steeltoe.Common.Util.IPathMatcher.Combine(System.String,System.String)
  commentId: M:Steeltoe.Common.Util.IPathMatcher.Combine(System.String,System.String)
  parent: Steeltoe.Common.Util.IPathMatcher
  isExternal: true
  name: Combine(String, String)
  nameWithType: IPathMatcher.Combine(String, String)
  fullName: Steeltoe.Common.Util.IPathMatcher.Combine(System.String, System.String)
  spec.csharp:
  - uid: Steeltoe.Common.Util.IPathMatcher.Combine(System.String,System.String)
    name: Combine
    nameWithType: IPathMatcher.Combine
    fullName: Steeltoe.Common.Util.IPathMatcher.Combine
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Common.Util.IPathMatcher.Combine(System.String,System.String)
    name: Combine
    nameWithType: IPathMatcher.Combine
    fullName: Steeltoe.Common.Util.IPathMatcher.Combine
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Common.Util.AntPathMatcher.GetPatternComparer*
  commentId: Overload:Steeltoe.Common.Util.AntPathMatcher.GetPatternComparer
  name: GetPatternComparer
  nameWithType: AntPathMatcher.GetPatternComparer
  fullName: Steeltoe.Common.Util.AntPathMatcher.GetPatternComparer
- uid: Steeltoe.Common.Util.IPathMatcher.GetPatternComparer(System.String)
  commentId: M:Steeltoe.Common.Util.IPathMatcher.GetPatternComparer(System.String)
  parent: Steeltoe.Common.Util.IPathMatcher
  isExternal: true
  name: GetPatternComparer(String)
  nameWithType: IPathMatcher.GetPatternComparer(String)
  fullName: Steeltoe.Common.Util.IPathMatcher.GetPatternComparer(System.String)
  spec.csharp:
  - uid: Steeltoe.Common.Util.IPathMatcher.GetPatternComparer(System.String)
    name: GetPatternComparer
    nameWithType: IPathMatcher.GetPatternComparer
    fullName: Steeltoe.Common.Util.IPathMatcher.GetPatternComparer
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Common.Util.IPathMatcher.GetPatternComparer(System.String)
    name: GetPatternComparer
    nameWithType: IPathMatcher.GetPatternComparer
    fullName: Steeltoe.Common.Util.IPathMatcher.GetPatternComparer
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IComparer{System.String}
  commentId: T:System.Collections.Generic.IComparer{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IComparer`1
  name: IComparer<String>
  nameWithType: IComparer<String>
  fullName: System.Collections.Generic.IComparer<System.String>
  nameWithType.vb: IComparer(Of String)
  fullName.vb: System.Collections.Generic.IComparer(Of System.String)
  name.vb: IComparer(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    nameWithType: IComparer
    fullName: System.Collections.Generic.IComparer
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    nameWithType: IComparer
    fullName: System.Collections.Generic.IComparer
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IComparer`1
  commentId: T:System.Collections.Generic.IComparer`1
  isExternal: true
  name: IComparer<T>
  nameWithType: IComparer<T>
  fullName: System.Collections.Generic.IComparer<T>
  nameWithType.vb: IComparer(Of T)
  fullName.vb: System.Collections.Generic.IComparer(Of T)
  name.vb: IComparer(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    nameWithType: IComparer
    fullName: System.Collections.Generic.IComparer
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    nameWithType: IComparer
    fullName: System.Collections.Generic.IComparer
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Common.Util.AntPathMatcher.DoMatch*
  commentId: Overload:Steeltoe.Common.Util.AntPathMatcher.DoMatch
  name: DoMatch
  nameWithType: AntPathMatcher.DoMatch
  fullName: Steeltoe.Common.Util.AntPathMatcher.DoMatch
- uid: Steeltoe.Common.Util.AntPathMatcher.TokenizePattern*
  commentId: Overload:Steeltoe.Common.Util.AntPathMatcher.TokenizePattern
  name: TokenizePattern
  nameWithType: AntPathMatcher.TokenizePattern
  fullName: Steeltoe.Common.Util.AntPathMatcher.TokenizePattern
- uid: System.String[]
  isExternal: true
  name: String[]
  nameWithType: String[]
  fullName: System.String[]
  nameWithType.vb: String()
  fullName.vb: System.String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Steeltoe.Common.Util.AntPathMatcher.TokenizePath*
  commentId: Overload:Steeltoe.Common.Util.AntPathMatcher.TokenizePath
  name: TokenizePath
  nameWithType: AntPathMatcher.TokenizePath
  fullName: Steeltoe.Common.Util.AntPathMatcher.TokenizePath
- uid: Steeltoe.Common.Util.AntPathMatcher.GetStringMatcher*
  commentId: Overload:Steeltoe.Common.Util.AntPathMatcher.GetStringMatcher
  name: GetStringMatcher
  nameWithType: AntPathMatcher.GetStringMatcher
  fullName: Steeltoe.Common.Util.AntPathMatcher.GetStringMatcher
- uid: Steeltoe.Common.Util.AntPathMatcher.AntPathStringMatcher
  commentId: T:Steeltoe.Common.Util.AntPathMatcher.AntPathStringMatcher
  parent: Steeltoe.Common.Util
  name: AntPathMatcher.AntPathStringMatcher
  nameWithType: AntPathMatcher.AntPathStringMatcher
  fullName: Steeltoe.Common.Util.AntPathMatcher.AntPathStringMatcher
