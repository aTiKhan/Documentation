### YamlMime:ManagedReference
items:
- uid: Steeltoe.Messaging.Handler.Invocation.HandlerMethodReturnValueHandlerComposite
  commentId: T:Steeltoe.Messaging.Handler.Invocation.HandlerMethodReturnValueHandlerComposite
  id: HandlerMethodReturnValueHandlerComposite
  parent: Steeltoe.Messaging.Handler.Invocation
  children:
  - Steeltoe.Messaging.Handler.Invocation.HandlerMethodReturnValueHandlerComposite.AddHandler(Steeltoe.Messaging.Handler.Invocation.IHandlerMethodReturnValueHandler)
  - Steeltoe.Messaging.Handler.Invocation.HandlerMethodReturnValueHandlerComposite.AddHandlers(System.Collections.Generic.IList{Steeltoe.Messaging.Handler.Invocation.IHandlerMethodReturnValueHandler})
  - Steeltoe.Messaging.Handler.Invocation.HandlerMethodReturnValueHandlerComposite.Clear
  - Steeltoe.Messaging.Handler.Invocation.HandlerMethodReturnValueHandlerComposite.HandleReturnValue(System.Object,System.Reflection.ParameterInfo,Steeltoe.Messaging.IMessage)
  - Steeltoe.Messaging.Handler.Invocation.HandlerMethodReturnValueHandlerComposite.IsAsyncReturnValue(System.Object,System.Reflection.ParameterInfo)
  - Steeltoe.Messaging.Handler.Invocation.HandlerMethodReturnValueHandlerComposite.ReturnValueHandlers
  - Steeltoe.Messaging.Handler.Invocation.HandlerMethodReturnValueHandlerComposite.SupportsReturnType(System.Reflection.ParameterInfo)
  langs:
  - csharp
  - vb
  name: HandlerMethodReturnValueHandlerComposite
  nameWithType: HandlerMethodReturnValueHandlerComposite
  fullName: Steeltoe.Messaging.Handler.Invocation.HandlerMethodReturnValueHandlerComposite
  type: Class
  source:
    remote:
      path: src/Messaging/src/MessagingBase/Handler/Invocation/HandlerMethodReturnValueHandlerComposite.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: HandlerMethodReturnValueHandlerComposite
    path: ../Steeltoe/src/Messaging/src/MessagingBase/Handler/Invocation/HandlerMethodReturnValueHandlerComposite.cs
    startLine: 10
  assemblies:
  - Steeltoe.Messaging.MessagingBase
  namespace: Steeltoe.Messaging.Handler.Invocation
  syntax:
    content: 'public class HandlerMethodReturnValueHandlerComposite : IAsyncHandlerMethodReturnValueHandler, IHandlerMethodReturnValueHandler'
    content.vb: >-
      Public Class HandlerMethodReturnValueHandlerComposite

          Implements IAsyncHandlerMethodReturnValueHandler, IHandlerMethodReturnValueHandler
  inheritance:
  - System.Object
  implements:
  - Steeltoe.Messaging.Handler.Invocation.IAsyncHandlerMethodReturnValueHandler
  - Steeltoe.Messaging.Handler.Invocation.IHandlerMethodReturnValueHandler
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Steeltoe.Messaging.Handler.Invocation.HandlerMethodReturnValueHandlerComposite.ReturnValueHandlers
  commentId: P:Steeltoe.Messaging.Handler.Invocation.HandlerMethodReturnValueHandlerComposite.ReturnValueHandlers
  id: ReturnValueHandlers
  parent: Steeltoe.Messaging.Handler.Invocation.HandlerMethodReturnValueHandlerComposite
  langs:
  - csharp
  - vb
  name: ReturnValueHandlers
  nameWithType: HandlerMethodReturnValueHandlerComposite.ReturnValueHandlers
  fullName: Steeltoe.Messaging.Handler.Invocation.HandlerMethodReturnValueHandlerComposite.ReturnValueHandlers
  type: Property
  source:
    remote:
      path: src/Messaging/src/MessagingBase/Handler/Invocation/HandlerMethodReturnValueHandlerComposite.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: ReturnValueHandlers
    path: ../Steeltoe/src/Messaging/src/MessagingBase/Handler/Invocation/HandlerMethodReturnValueHandlerComposite.cs
    startLine: 14
  assemblies:
  - Steeltoe.Messaging.MessagingBase
  namespace: Steeltoe.Messaging.Handler.Invocation
  syntax:
    content: public IList<IHandlerMethodReturnValueHandler> ReturnValueHandlers { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IList{Steeltoe.Messaging.Handler.Invocation.IHandlerMethodReturnValueHandler}
    content.vb: Public ReadOnly Property ReturnValueHandlers As IList(Of IHandlerMethodReturnValueHandler)
  overload: Steeltoe.Messaging.Handler.Invocation.HandlerMethodReturnValueHandlerComposite.ReturnValueHandlers*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Steeltoe.Messaging.Handler.Invocation.HandlerMethodReturnValueHandlerComposite.Clear
  commentId: M:Steeltoe.Messaging.Handler.Invocation.HandlerMethodReturnValueHandlerComposite.Clear
  id: Clear
  parent: Steeltoe.Messaging.Handler.Invocation.HandlerMethodReturnValueHandlerComposite
  langs:
  - csharp
  - vb
  name: Clear()
  nameWithType: HandlerMethodReturnValueHandlerComposite.Clear()
  fullName: Steeltoe.Messaging.Handler.Invocation.HandlerMethodReturnValueHandlerComposite.Clear()
  type: Method
  source:
    remote:
      path: src/Messaging/src/MessagingBase/Handler/Invocation/HandlerMethodReturnValueHandlerComposite.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Clear
    path: ../Steeltoe/src/Messaging/src/MessagingBase/Handler/Invocation/HandlerMethodReturnValueHandlerComposite.cs
    startLine: 19
  assemblies:
  - Steeltoe.Messaging.MessagingBase
  namespace: Steeltoe.Messaging.Handler.Invocation
  syntax:
    content: public void Clear()
    content.vb: Public Sub Clear
  overload: Steeltoe.Messaging.Handler.Invocation.HandlerMethodReturnValueHandlerComposite.Clear*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Steeltoe.Messaging.Handler.Invocation.HandlerMethodReturnValueHandlerComposite.AddHandler(Steeltoe.Messaging.Handler.Invocation.IHandlerMethodReturnValueHandler)
  commentId: M:Steeltoe.Messaging.Handler.Invocation.HandlerMethodReturnValueHandlerComposite.AddHandler(Steeltoe.Messaging.Handler.Invocation.IHandlerMethodReturnValueHandler)
  id: AddHandler(Steeltoe.Messaging.Handler.Invocation.IHandlerMethodReturnValueHandler)
  parent: Steeltoe.Messaging.Handler.Invocation.HandlerMethodReturnValueHandlerComposite
  langs:
  - csharp
  - vb
  name: AddHandler(IHandlerMethodReturnValueHandler)
  nameWithType: HandlerMethodReturnValueHandlerComposite.AddHandler(IHandlerMethodReturnValueHandler)
  fullName: Steeltoe.Messaging.Handler.Invocation.HandlerMethodReturnValueHandlerComposite.AddHandler(Steeltoe.Messaging.Handler.Invocation.IHandlerMethodReturnValueHandler)
  type: Method
  source:
    remote:
      path: src/Messaging/src/MessagingBase/Handler/Invocation/HandlerMethodReturnValueHandlerComposite.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: AddHandler
    path: ../Steeltoe/src/Messaging/src/MessagingBase/Handler/Invocation/HandlerMethodReturnValueHandlerComposite.cs
    startLine: 24
  assemblies:
  - Steeltoe.Messaging.MessagingBase
  namespace: Steeltoe.Messaging.Handler.Invocation
  syntax:
    content: public HandlerMethodReturnValueHandlerComposite AddHandler(IHandlerMethodReturnValueHandler returnValueHandler)
    parameters:
    - id: returnValueHandler
      type: Steeltoe.Messaging.Handler.Invocation.IHandlerMethodReturnValueHandler
    return:
      type: Steeltoe.Messaging.Handler.Invocation.HandlerMethodReturnValueHandlerComposite
    content.vb: Public Function AddHandler(returnValueHandler As IHandlerMethodReturnValueHandler) As HandlerMethodReturnValueHandlerComposite
  overload: Steeltoe.Messaging.Handler.Invocation.HandlerMethodReturnValueHandlerComposite.AddHandler*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Steeltoe.Messaging.Handler.Invocation.HandlerMethodReturnValueHandlerComposite.AddHandlers(System.Collections.Generic.IList{Steeltoe.Messaging.Handler.Invocation.IHandlerMethodReturnValueHandler})
  commentId: M:Steeltoe.Messaging.Handler.Invocation.HandlerMethodReturnValueHandlerComposite.AddHandlers(System.Collections.Generic.IList{Steeltoe.Messaging.Handler.Invocation.IHandlerMethodReturnValueHandler})
  id: AddHandlers(System.Collections.Generic.IList{Steeltoe.Messaging.Handler.Invocation.IHandlerMethodReturnValueHandler})
  parent: Steeltoe.Messaging.Handler.Invocation.HandlerMethodReturnValueHandlerComposite
  langs:
  - csharp
  - vb
  name: AddHandlers(IList<IHandlerMethodReturnValueHandler>)
  nameWithType: HandlerMethodReturnValueHandlerComposite.AddHandlers(IList<IHandlerMethodReturnValueHandler>)
  fullName: Steeltoe.Messaging.Handler.Invocation.HandlerMethodReturnValueHandlerComposite.AddHandlers(System.Collections.Generic.IList<Steeltoe.Messaging.Handler.Invocation.IHandlerMethodReturnValueHandler>)
  type: Method
  source:
    remote:
      path: src/Messaging/src/MessagingBase/Handler/Invocation/HandlerMethodReturnValueHandlerComposite.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: AddHandlers
    path: ../Steeltoe/src/Messaging/src/MessagingBase/Handler/Invocation/HandlerMethodReturnValueHandlerComposite.cs
    startLine: 30
  assemblies:
  - Steeltoe.Messaging.MessagingBase
  namespace: Steeltoe.Messaging.Handler.Invocation
  syntax:
    content: public HandlerMethodReturnValueHandlerComposite AddHandlers(IList<IHandlerMethodReturnValueHandler> handlers)
    parameters:
    - id: handlers
      type: System.Collections.Generic.IList{Steeltoe.Messaging.Handler.Invocation.IHandlerMethodReturnValueHandler}
    return:
      type: Steeltoe.Messaging.Handler.Invocation.HandlerMethodReturnValueHandlerComposite
    content.vb: Public Function AddHandlers(handlers As IList(Of IHandlerMethodReturnValueHandler)) As HandlerMethodReturnValueHandlerComposite
  overload: Steeltoe.Messaging.Handler.Invocation.HandlerMethodReturnValueHandlerComposite.AddHandlers*
  nameWithType.vb: HandlerMethodReturnValueHandlerComposite.AddHandlers(IList(Of IHandlerMethodReturnValueHandler))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Steeltoe.Messaging.Handler.Invocation.HandlerMethodReturnValueHandlerComposite.AddHandlers(System.Collections.Generic.IList(Of Steeltoe.Messaging.Handler.Invocation.IHandlerMethodReturnValueHandler))
  name.vb: AddHandlers(IList(Of IHandlerMethodReturnValueHandler))
- uid: Steeltoe.Messaging.Handler.Invocation.HandlerMethodReturnValueHandlerComposite.SupportsReturnType(System.Reflection.ParameterInfo)
  commentId: M:Steeltoe.Messaging.Handler.Invocation.HandlerMethodReturnValueHandlerComposite.SupportsReturnType(System.Reflection.ParameterInfo)
  id: SupportsReturnType(System.Reflection.ParameterInfo)
  parent: Steeltoe.Messaging.Handler.Invocation.HandlerMethodReturnValueHandlerComposite
  langs:
  - csharp
  - vb
  name: SupportsReturnType(ParameterInfo)
  nameWithType: HandlerMethodReturnValueHandlerComposite.SupportsReturnType(ParameterInfo)
  fullName: Steeltoe.Messaging.Handler.Invocation.HandlerMethodReturnValueHandlerComposite.SupportsReturnType(System.Reflection.ParameterInfo)
  type: Method
  source:
    remote:
      path: src/Messaging/src/MessagingBase/Handler/Invocation/HandlerMethodReturnValueHandlerComposite.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: SupportsReturnType
    path: ../Steeltoe/src/Messaging/src/MessagingBase/Handler/Invocation/HandlerMethodReturnValueHandlerComposite.cs
    startLine: 40
  assemblies:
  - Steeltoe.Messaging.MessagingBase
  namespace: Steeltoe.Messaging.Handler.Invocation
  syntax:
    content: public bool SupportsReturnType(ParameterInfo returnType)
    parameters:
    - id: returnType
      type: System.Reflection.ParameterInfo
    return:
      type: System.Boolean
    content.vb: Public Function SupportsReturnType(returnType As ParameterInfo) As Boolean
  overload: Steeltoe.Messaging.Handler.Invocation.HandlerMethodReturnValueHandlerComposite.SupportsReturnType*
  implements:
  - Steeltoe.Messaging.Handler.Invocation.IHandlerMethodReturnValueHandler.SupportsReturnType(System.Reflection.ParameterInfo)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Steeltoe.Messaging.Handler.Invocation.HandlerMethodReturnValueHandlerComposite.HandleReturnValue(System.Object,System.Reflection.ParameterInfo,Steeltoe.Messaging.IMessage)
  commentId: M:Steeltoe.Messaging.Handler.Invocation.HandlerMethodReturnValueHandlerComposite.HandleReturnValue(System.Object,System.Reflection.ParameterInfo,Steeltoe.Messaging.IMessage)
  id: HandleReturnValue(System.Object,System.Reflection.ParameterInfo,Steeltoe.Messaging.IMessage)
  parent: Steeltoe.Messaging.Handler.Invocation.HandlerMethodReturnValueHandlerComposite
  langs:
  - csharp
  - vb
  name: HandleReturnValue(Object, ParameterInfo, IMessage)
  nameWithType: HandlerMethodReturnValueHandlerComposite.HandleReturnValue(Object, ParameterInfo, IMessage)
  fullName: Steeltoe.Messaging.Handler.Invocation.HandlerMethodReturnValueHandlerComposite.HandleReturnValue(System.Object, System.Reflection.ParameterInfo, Steeltoe.Messaging.IMessage)
  type: Method
  source:
    remote:
      path: src/Messaging/src/MessagingBase/Handler/Invocation/HandlerMethodReturnValueHandlerComposite.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: HandleReturnValue
    path: ../Steeltoe/src/Messaging/src/MessagingBase/Handler/Invocation/HandlerMethodReturnValueHandlerComposite.cs
    startLine: 45
  assemblies:
  - Steeltoe.Messaging.MessagingBase
  namespace: Steeltoe.Messaging.Handler.Invocation
  syntax:
    content: public void HandleReturnValue(object returnValue, ParameterInfo returnType, IMessage message)
    parameters:
    - id: returnValue
      type: System.Object
    - id: returnType
      type: System.Reflection.ParameterInfo
    - id: message
      type: Steeltoe.Messaging.IMessage
    content.vb: Public Sub HandleReturnValue(returnValue As Object, returnType As ParameterInfo, message As IMessage)
  overload: Steeltoe.Messaging.Handler.Invocation.HandlerMethodReturnValueHandlerComposite.HandleReturnValue*
  implements:
  - Steeltoe.Messaging.Handler.Invocation.IHandlerMethodReturnValueHandler.HandleReturnValue(System.Object,System.Reflection.ParameterInfo,Steeltoe.Messaging.IMessage)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Steeltoe.Messaging.Handler.Invocation.HandlerMethodReturnValueHandlerComposite.IsAsyncReturnValue(System.Object,System.Reflection.ParameterInfo)
  commentId: M:Steeltoe.Messaging.Handler.Invocation.HandlerMethodReturnValueHandlerComposite.IsAsyncReturnValue(System.Object,System.Reflection.ParameterInfo)
  id: IsAsyncReturnValue(System.Object,System.Reflection.ParameterInfo)
  parent: Steeltoe.Messaging.Handler.Invocation.HandlerMethodReturnValueHandlerComposite
  langs:
  - csharp
  - vb
  name: IsAsyncReturnValue(Object, ParameterInfo)
  nameWithType: HandlerMethodReturnValueHandlerComposite.IsAsyncReturnValue(Object, ParameterInfo)
  fullName: Steeltoe.Messaging.Handler.Invocation.HandlerMethodReturnValueHandlerComposite.IsAsyncReturnValue(System.Object, System.Reflection.ParameterInfo)
  type: Method
  source:
    remote:
      path: src/Messaging/src/MessagingBase/Handler/Invocation/HandlerMethodReturnValueHandlerComposite.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: IsAsyncReturnValue
    path: ../Steeltoe/src/Messaging/src/MessagingBase/Handler/Invocation/HandlerMethodReturnValueHandlerComposite.cs
    startLine: 60
  assemblies:
  - Steeltoe.Messaging.MessagingBase
  namespace: Steeltoe.Messaging.Handler.Invocation
  syntax:
    content: public bool IsAsyncReturnValue(object returnValue, ParameterInfo returnType)
    parameters:
    - id: returnValue
      type: System.Object
    - id: returnType
      type: System.Reflection.ParameterInfo
    return:
      type: System.Boolean
    content.vb: Public Function IsAsyncReturnValue(returnValue As Object, returnType As ParameterInfo) As Boolean
  overload: Steeltoe.Messaging.Handler.Invocation.HandlerMethodReturnValueHandlerComposite.IsAsyncReturnValue*
  implements:
  - Steeltoe.Messaging.Handler.Invocation.IAsyncHandlerMethodReturnValueHandler.IsAsyncReturnValue(System.Object,System.Reflection.ParameterInfo)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Steeltoe.Messaging.Handler.Invocation
  commentId: N:Steeltoe.Messaging.Handler.Invocation
  name: Steeltoe.Messaging.Handler.Invocation
  nameWithType: Steeltoe.Messaging.Handler.Invocation
  fullName: Steeltoe.Messaging.Handler.Invocation
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Steeltoe.Messaging.Handler.Invocation.IAsyncHandlerMethodReturnValueHandler
  commentId: T:Steeltoe.Messaging.Handler.Invocation.IAsyncHandlerMethodReturnValueHandler
  parent: Steeltoe.Messaging.Handler.Invocation
  name: IAsyncHandlerMethodReturnValueHandler
  nameWithType: IAsyncHandlerMethodReturnValueHandler
  fullName: Steeltoe.Messaging.Handler.Invocation.IAsyncHandlerMethodReturnValueHandler
- uid: Steeltoe.Messaging.Handler.Invocation.IHandlerMethodReturnValueHandler
  commentId: T:Steeltoe.Messaging.Handler.Invocation.IHandlerMethodReturnValueHandler
  parent: Steeltoe.Messaging.Handler.Invocation
  name: IHandlerMethodReturnValueHandler
  nameWithType: IHandlerMethodReturnValueHandler
  fullName: Steeltoe.Messaging.Handler.Invocation.IHandlerMethodReturnValueHandler
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Steeltoe.Messaging.Handler.Invocation.HandlerMethodReturnValueHandlerComposite.ReturnValueHandlers*
  commentId: Overload:Steeltoe.Messaging.Handler.Invocation.HandlerMethodReturnValueHandlerComposite.ReturnValueHandlers
  name: ReturnValueHandlers
  nameWithType: HandlerMethodReturnValueHandlerComposite.ReturnValueHandlers
  fullName: Steeltoe.Messaging.Handler.Invocation.HandlerMethodReturnValueHandlerComposite.ReturnValueHandlers
- uid: System.Collections.Generic.IList{Steeltoe.Messaging.Handler.Invocation.IHandlerMethodReturnValueHandler}
  commentId: T:System.Collections.Generic.IList{Steeltoe.Messaging.Handler.Invocation.IHandlerMethodReturnValueHandler}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<IHandlerMethodReturnValueHandler>
  nameWithType: IList<IHandlerMethodReturnValueHandler>
  fullName: System.Collections.Generic.IList<Steeltoe.Messaging.Handler.Invocation.IHandlerMethodReturnValueHandler>
  nameWithType.vb: IList(Of IHandlerMethodReturnValueHandler)
  fullName.vb: System.Collections.Generic.IList(Of Steeltoe.Messaging.Handler.Invocation.IHandlerMethodReturnValueHandler)
  name.vb: IList(Of IHandlerMethodReturnValueHandler)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Steeltoe.Messaging.Handler.Invocation.IHandlerMethodReturnValueHandler
    name: IHandlerMethodReturnValueHandler
    nameWithType: IHandlerMethodReturnValueHandler
    fullName: Steeltoe.Messaging.Handler.Invocation.IHandlerMethodReturnValueHandler
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Steeltoe.Messaging.Handler.Invocation.IHandlerMethodReturnValueHandler
    name: IHandlerMethodReturnValueHandler
    nameWithType: IHandlerMethodReturnValueHandler
    fullName: Steeltoe.Messaging.Handler.Invocation.IHandlerMethodReturnValueHandler
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullName.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Steeltoe.Messaging.Handler.Invocation.HandlerMethodReturnValueHandlerComposite.Clear*
  commentId: Overload:Steeltoe.Messaging.Handler.Invocation.HandlerMethodReturnValueHandlerComposite.Clear
  name: Clear
  nameWithType: HandlerMethodReturnValueHandlerComposite.Clear
  fullName: Steeltoe.Messaging.Handler.Invocation.HandlerMethodReturnValueHandlerComposite.Clear
- uid: Steeltoe.Messaging.Handler.Invocation.HandlerMethodReturnValueHandlerComposite.AddHandler*
  commentId: Overload:Steeltoe.Messaging.Handler.Invocation.HandlerMethodReturnValueHandlerComposite.AddHandler
  name: AddHandler
  nameWithType: HandlerMethodReturnValueHandlerComposite.AddHandler
  fullName: Steeltoe.Messaging.Handler.Invocation.HandlerMethodReturnValueHandlerComposite.AddHandler
- uid: Steeltoe.Messaging.Handler.Invocation.HandlerMethodReturnValueHandlerComposite
  commentId: T:Steeltoe.Messaging.Handler.Invocation.HandlerMethodReturnValueHandlerComposite
  parent: Steeltoe.Messaging.Handler.Invocation
  name: HandlerMethodReturnValueHandlerComposite
  nameWithType: HandlerMethodReturnValueHandlerComposite
  fullName: Steeltoe.Messaging.Handler.Invocation.HandlerMethodReturnValueHandlerComposite
- uid: Steeltoe.Messaging.Handler.Invocation.HandlerMethodReturnValueHandlerComposite.AddHandlers*
  commentId: Overload:Steeltoe.Messaging.Handler.Invocation.HandlerMethodReturnValueHandlerComposite.AddHandlers
  name: AddHandlers
  nameWithType: HandlerMethodReturnValueHandlerComposite.AddHandlers
  fullName: Steeltoe.Messaging.Handler.Invocation.HandlerMethodReturnValueHandlerComposite.AddHandlers
- uid: Steeltoe.Messaging.Handler.Invocation.HandlerMethodReturnValueHandlerComposite.SupportsReturnType*
  commentId: Overload:Steeltoe.Messaging.Handler.Invocation.HandlerMethodReturnValueHandlerComposite.SupportsReturnType
  name: SupportsReturnType
  nameWithType: HandlerMethodReturnValueHandlerComposite.SupportsReturnType
  fullName: Steeltoe.Messaging.Handler.Invocation.HandlerMethodReturnValueHandlerComposite.SupportsReturnType
- uid: Steeltoe.Messaging.Handler.Invocation.IHandlerMethodReturnValueHandler.SupportsReturnType(System.Reflection.ParameterInfo)
  commentId: M:Steeltoe.Messaging.Handler.Invocation.IHandlerMethodReturnValueHandler.SupportsReturnType(System.Reflection.ParameterInfo)
  parent: Steeltoe.Messaging.Handler.Invocation.IHandlerMethodReturnValueHandler
  isExternal: true
  name: SupportsReturnType(ParameterInfo)
  nameWithType: IHandlerMethodReturnValueHandler.SupportsReturnType(ParameterInfo)
  fullName: Steeltoe.Messaging.Handler.Invocation.IHandlerMethodReturnValueHandler.SupportsReturnType(System.Reflection.ParameterInfo)
  spec.csharp:
  - uid: Steeltoe.Messaging.Handler.Invocation.IHandlerMethodReturnValueHandler.SupportsReturnType(System.Reflection.ParameterInfo)
    name: SupportsReturnType
    nameWithType: IHandlerMethodReturnValueHandler.SupportsReturnType
    fullName: Steeltoe.Messaging.Handler.Invocation.IHandlerMethodReturnValueHandler.SupportsReturnType
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Reflection.ParameterInfo
    name: ParameterInfo
    nameWithType: ParameterInfo
    fullName: System.Reflection.ParameterInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Handler.Invocation.IHandlerMethodReturnValueHandler.SupportsReturnType(System.Reflection.ParameterInfo)
    name: SupportsReturnType
    nameWithType: IHandlerMethodReturnValueHandler.SupportsReturnType
    fullName: Steeltoe.Messaging.Handler.Invocation.IHandlerMethodReturnValueHandler.SupportsReturnType
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Reflection.ParameterInfo
    name: ParameterInfo
    nameWithType: ParameterInfo
    fullName: System.Reflection.ParameterInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Reflection.ParameterInfo
  commentId: T:System.Reflection.ParameterInfo
  parent: System.Reflection
  isExternal: true
  name: ParameterInfo
  nameWithType: ParameterInfo
  fullName: System.Reflection.ParameterInfo
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Reflection
  commentId: N:System.Reflection
  isExternal: true
  name: System.Reflection
  nameWithType: System.Reflection
  fullName: System.Reflection
- uid: Steeltoe.Messaging.Handler.Invocation.HandlerMethodReturnValueHandlerComposite.HandleReturnValue*
  commentId: Overload:Steeltoe.Messaging.Handler.Invocation.HandlerMethodReturnValueHandlerComposite.HandleReturnValue
  name: HandleReturnValue
  nameWithType: HandlerMethodReturnValueHandlerComposite.HandleReturnValue
  fullName: Steeltoe.Messaging.Handler.Invocation.HandlerMethodReturnValueHandlerComposite.HandleReturnValue
- uid: Steeltoe.Messaging.Handler.Invocation.IHandlerMethodReturnValueHandler.HandleReturnValue(System.Object,System.Reflection.ParameterInfo,Steeltoe.Messaging.IMessage)
  commentId: M:Steeltoe.Messaging.Handler.Invocation.IHandlerMethodReturnValueHandler.HandleReturnValue(System.Object,System.Reflection.ParameterInfo,Steeltoe.Messaging.IMessage)
  parent: Steeltoe.Messaging.Handler.Invocation.IHandlerMethodReturnValueHandler
  isExternal: true
  name: HandleReturnValue(Object, ParameterInfo, IMessage)
  nameWithType: IHandlerMethodReturnValueHandler.HandleReturnValue(Object, ParameterInfo, IMessage)
  fullName: Steeltoe.Messaging.Handler.Invocation.IHandlerMethodReturnValueHandler.HandleReturnValue(System.Object, System.Reflection.ParameterInfo, Steeltoe.Messaging.IMessage)
  spec.csharp:
  - uid: Steeltoe.Messaging.Handler.Invocation.IHandlerMethodReturnValueHandler.HandleReturnValue(System.Object,System.Reflection.ParameterInfo,Steeltoe.Messaging.IMessage)
    name: HandleReturnValue
    nameWithType: IHandlerMethodReturnValueHandler.HandleReturnValue
    fullName: Steeltoe.Messaging.Handler.Invocation.IHandlerMethodReturnValueHandler.HandleReturnValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Reflection.ParameterInfo
    name: ParameterInfo
    nameWithType: ParameterInfo
    fullName: System.Reflection.ParameterInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Handler.Invocation.IHandlerMethodReturnValueHandler.HandleReturnValue(System.Object,System.Reflection.ParameterInfo,Steeltoe.Messaging.IMessage)
    name: HandleReturnValue
    nameWithType: IHandlerMethodReturnValueHandler.HandleReturnValue
    fullName: Steeltoe.Messaging.Handler.Invocation.IHandlerMethodReturnValueHandler.HandleReturnValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Reflection.ParameterInfo
    name: ParameterInfo
    nameWithType: ParameterInfo
    fullName: System.Reflection.ParameterInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.IMessage
  commentId: T:Steeltoe.Messaging.IMessage
  parent: Steeltoe.Messaging
  name: IMessage
  nameWithType: IMessage
  fullName: Steeltoe.Messaging.IMessage
- uid: Steeltoe.Messaging
  commentId: N:Steeltoe.Messaging
  name: Steeltoe.Messaging
  nameWithType: Steeltoe.Messaging
  fullName: Steeltoe.Messaging
- uid: Steeltoe.Messaging.Handler.Invocation.HandlerMethodReturnValueHandlerComposite.IsAsyncReturnValue*
  commentId: Overload:Steeltoe.Messaging.Handler.Invocation.HandlerMethodReturnValueHandlerComposite.IsAsyncReturnValue
  name: IsAsyncReturnValue
  nameWithType: HandlerMethodReturnValueHandlerComposite.IsAsyncReturnValue
  fullName: Steeltoe.Messaging.Handler.Invocation.HandlerMethodReturnValueHandlerComposite.IsAsyncReturnValue
- uid: Steeltoe.Messaging.Handler.Invocation.IAsyncHandlerMethodReturnValueHandler.IsAsyncReturnValue(System.Object,System.Reflection.ParameterInfo)
  commentId: M:Steeltoe.Messaging.Handler.Invocation.IAsyncHandlerMethodReturnValueHandler.IsAsyncReturnValue(System.Object,System.Reflection.ParameterInfo)
  parent: Steeltoe.Messaging.Handler.Invocation.IAsyncHandlerMethodReturnValueHandler
  isExternal: true
  name: IsAsyncReturnValue(Object, ParameterInfo)
  nameWithType: IAsyncHandlerMethodReturnValueHandler.IsAsyncReturnValue(Object, ParameterInfo)
  fullName: Steeltoe.Messaging.Handler.Invocation.IAsyncHandlerMethodReturnValueHandler.IsAsyncReturnValue(System.Object, System.Reflection.ParameterInfo)
  spec.csharp:
  - uid: Steeltoe.Messaging.Handler.Invocation.IAsyncHandlerMethodReturnValueHandler.IsAsyncReturnValue(System.Object,System.Reflection.ParameterInfo)
    name: IsAsyncReturnValue
    nameWithType: IAsyncHandlerMethodReturnValueHandler.IsAsyncReturnValue
    fullName: Steeltoe.Messaging.Handler.Invocation.IAsyncHandlerMethodReturnValueHandler.IsAsyncReturnValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Reflection.ParameterInfo
    name: ParameterInfo
    nameWithType: ParameterInfo
    fullName: System.Reflection.ParameterInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Handler.Invocation.IAsyncHandlerMethodReturnValueHandler.IsAsyncReturnValue(System.Object,System.Reflection.ParameterInfo)
    name: IsAsyncReturnValue
    nameWithType: IAsyncHandlerMethodReturnValueHandler.IsAsyncReturnValue
    fullName: Steeltoe.Messaging.Handler.Invocation.IAsyncHandlerMethodReturnValueHandler.IsAsyncReturnValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Reflection.ParameterInfo
    name: ParameterInfo
    nameWithType: ParameterInfo
    fullName: System.Reflection.ParameterInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
