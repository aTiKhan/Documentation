### YamlMime:ManagedReference
items:
- uid: Steeltoe.Integration.Support.AbstractMessageBuilder
  commentId: T:Steeltoe.Integration.Support.AbstractMessageBuilder
  id: AbstractMessageBuilder
  parent: Steeltoe.Integration.Support
  children:
  - Steeltoe.Integration.Support.AbstractMessageBuilder.#ctor
  - Steeltoe.Integration.Support.AbstractMessageBuilder.#ctor(System.Object,Steeltoe.Messaging.IMessage)
  - Steeltoe.Integration.Support.AbstractMessageBuilder._headerAccessor
  - Steeltoe.Integration.Support.AbstractMessageBuilder._modified
  - Steeltoe.Integration.Support.AbstractMessageBuilder._originalMessage
  - Steeltoe.Integration.Support.AbstractMessageBuilder._payload
  - Steeltoe.Integration.Support.AbstractMessageBuilder._readOnlyHeaders
  - Steeltoe.Integration.Support.AbstractMessageBuilder.Build
  - Steeltoe.Integration.Support.AbstractMessageBuilder.ContainsReadOnly(Steeltoe.Messaging.IMessageHeaders)
  - Steeltoe.Integration.Support.AbstractMessageBuilder.CopyHeaders(System.Collections.Generic.IDictionary{System.String,System.Object})
  - Steeltoe.Integration.Support.AbstractMessageBuilder.CopyHeadersIfAbsent(System.Collections.Generic.IDictionary{System.String,System.Object})
  - Steeltoe.Integration.Support.AbstractMessageBuilder.CorrelationId
  - Steeltoe.Integration.Support.AbstractMessageBuilder.FilterAndCopyHeadersIfAbsent(System.Collections.Generic.IDictionary{System.String,System.Object},System.String[])
  - Steeltoe.Integration.Support.AbstractMessageBuilder.Headers
  - Steeltoe.Integration.Support.AbstractMessageBuilder.Payload
  - Steeltoe.Integration.Support.AbstractMessageBuilder.PopSequenceDetails
  - Steeltoe.Integration.Support.AbstractMessageBuilder.PushSequenceDetails(System.Object,System.Int32,System.Int32)
  - Steeltoe.Integration.Support.AbstractMessageBuilder.RemoveHeader(System.String)
  - Steeltoe.Integration.Support.AbstractMessageBuilder.RemoveHeaders(System.String[])
  - Steeltoe.Integration.Support.AbstractMessageBuilder.SequenceDetails
  - Steeltoe.Integration.Support.AbstractMessageBuilder.SequenceNumber
  - Steeltoe.Integration.Support.AbstractMessageBuilder.SequenceSize
  - Steeltoe.Integration.Support.AbstractMessageBuilder.SetCorrelationId(System.Object)
  - Steeltoe.Integration.Support.AbstractMessageBuilder.SetErrorChannel(Steeltoe.Messaging.IMessageChannel)
  - Steeltoe.Integration.Support.AbstractMessageBuilder.SetErrorChannelName(System.String)
  - Steeltoe.Integration.Support.AbstractMessageBuilder.SetExpirationDate(System.Int64)
  - Steeltoe.Integration.Support.AbstractMessageBuilder.SetExpirationDate(System.Nullable{System.DateTime})
  - Steeltoe.Integration.Support.AbstractMessageBuilder.SetHeader(System.String,System.Object)
  - Steeltoe.Integration.Support.AbstractMessageBuilder.SetHeaderIfAbsent(System.String,System.Object)
  - Steeltoe.Integration.Support.AbstractMessageBuilder.SetPriority(System.Int32)
  - Steeltoe.Integration.Support.AbstractMessageBuilder.SetReplyChannel(Steeltoe.Messaging.IMessageChannel)
  - Steeltoe.Integration.Support.AbstractMessageBuilder.SetReplyChannelName(System.String)
  - Steeltoe.Integration.Support.AbstractMessageBuilder.SetSequenceNumber(System.Int32)
  - Steeltoe.Integration.Support.AbstractMessageBuilder.SetSequenceSize(System.Int32)
  langs:
  - csharp
  - vb
  name: AbstractMessageBuilder
  nameWithType: AbstractMessageBuilder
  fullName: Steeltoe.Integration.Support.AbstractMessageBuilder
  type: Class
  source:
    remote:
      path: src/Integration/src/IntegrationBase/Support/AbstractMessageBuilder.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: AbstractMessageBuilder
    path: ../Steeltoe/src/Integration/src/IntegrationBase/Support/AbstractMessageBuilder.cs
    startLine: 11
  assemblies:
  - Steeltoe.Integration.IntegrationBase
  namespace: Steeltoe.Integration.Support
  syntax:
    content: 'public abstract class AbstractMessageBuilder : IMessageBuilder'
    content.vb: >-
      Public MustInherit Class AbstractMessageBuilder

          Implements IMessageBuilder
  inheritance:
  - System.Object
  derivedClasses:
  - Steeltoe.Integration.Support.IntegrationMessageBuilder
  - Steeltoe.Integration.Support.MutableIntegrationMessageBuilder
  implements:
  - Steeltoe.Integration.Support.IMessageBuilder
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: Steeltoe.Integration.Support.AbstractMessageBuilder._payload
  commentId: F:Steeltoe.Integration.Support.AbstractMessageBuilder._payload
  id: _payload
  parent: Steeltoe.Integration.Support.AbstractMessageBuilder
  langs:
  - csharp
  - vb
  name: _payload
  nameWithType: AbstractMessageBuilder._payload
  fullName: Steeltoe.Integration.Support.AbstractMessageBuilder._payload
  type: Field
  source:
    remote:
      path: src/Integration/src/IntegrationBase/Support/AbstractMessageBuilder.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: _payload
    path: ../Steeltoe/src/Integration/src/IntegrationBase/Support/AbstractMessageBuilder.cs
    startLine: 13
  assemblies:
  - Steeltoe.Integration.IntegrationBase
  namespace: Steeltoe.Integration.Support
  syntax:
    content: protected readonly object _payload
    return:
      type: System.Object
    content.vb: Protected ReadOnly _payload As Object
  modifiers.csharp:
  - protected
  - readonly
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: Steeltoe.Integration.Support.AbstractMessageBuilder._originalMessage
  commentId: F:Steeltoe.Integration.Support.AbstractMessageBuilder._originalMessage
  id: _originalMessage
  parent: Steeltoe.Integration.Support.AbstractMessageBuilder
  langs:
  - csharp
  - vb
  name: _originalMessage
  nameWithType: AbstractMessageBuilder._originalMessage
  fullName: Steeltoe.Integration.Support.AbstractMessageBuilder._originalMessage
  type: Field
  source:
    remote:
      path: src/Integration/src/IntegrationBase/Support/AbstractMessageBuilder.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: _originalMessage
    path: ../Steeltoe/src/Integration/src/IntegrationBase/Support/AbstractMessageBuilder.cs
    startLine: 15
  assemblies:
  - Steeltoe.Integration.IntegrationBase
  namespace: Steeltoe.Integration.Support
  syntax:
    content: protected readonly IMessage _originalMessage
    return:
      type: Steeltoe.Messaging.IMessage
    content.vb: Protected ReadOnly _originalMessage As IMessage
  modifiers.csharp:
  - protected
  - readonly
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: Steeltoe.Integration.Support.AbstractMessageBuilder._headerAccessor
  commentId: F:Steeltoe.Integration.Support.AbstractMessageBuilder._headerAccessor
  id: _headerAccessor
  parent: Steeltoe.Integration.Support.AbstractMessageBuilder
  langs:
  - csharp
  - vb
  name: _headerAccessor
  nameWithType: AbstractMessageBuilder._headerAccessor
  fullName: Steeltoe.Integration.Support.AbstractMessageBuilder._headerAccessor
  type: Field
  source:
    remote:
      path: src/Integration/src/IntegrationBase/Support/AbstractMessageBuilder.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: _headerAccessor
    path: ../Steeltoe/src/Integration/src/IntegrationBase/Support/AbstractMessageBuilder.cs
    startLine: 17
  assemblies:
  - Steeltoe.Integration.IntegrationBase
  namespace: Steeltoe.Integration.Support
  syntax:
    content: protected readonly IntegrationMessageHeaderAccessor _headerAccessor
    return:
      type: Steeltoe.Integration.IntegrationMessageHeaderAccessor
    content.vb: Protected ReadOnly _headerAccessor As IntegrationMessageHeaderAccessor
  modifiers.csharp:
  - protected
  - readonly
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: Steeltoe.Integration.Support.AbstractMessageBuilder._modified
  commentId: F:Steeltoe.Integration.Support.AbstractMessageBuilder._modified
  id: _modified
  parent: Steeltoe.Integration.Support.AbstractMessageBuilder
  langs:
  - csharp
  - vb
  name: _modified
  nameWithType: AbstractMessageBuilder._modified
  fullName: Steeltoe.Integration.Support.AbstractMessageBuilder._modified
  type: Field
  source:
    remote:
      path: src/Integration/src/IntegrationBase/Support/AbstractMessageBuilder.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: _modified
    path: ../Steeltoe/src/Integration/src/IntegrationBase/Support/AbstractMessageBuilder.cs
    startLine: 19
  assemblies:
  - Steeltoe.Integration.IntegrationBase
  namespace: Steeltoe.Integration.Support
  syntax:
    content: protected volatile bool _modified
    return:
      type: System.Boolean
    content.vb: Protected _modified As Boolean
  modifiers.csharp:
  - protected
  - volatile
  modifiers.vb:
  - Protected
- uid: Steeltoe.Integration.Support.AbstractMessageBuilder._readOnlyHeaders
  commentId: F:Steeltoe.Integration.Support.AbstractMessageBuilder._readOnlyHeaders
  id: _readOnlyHeaders
  parent: Steeltoe.Integration.Support.AbstractMessageBuilder
  langs:
  - csharp
  - vb
  name: _readOnlyHeaders
  nameWithType: AbstractMessageBuilder._readOnlyHeaders
  fullName: Steeltoe.Integration.Support.AbstractMessageBuilder._readOnlyHeaders
  type: Field
  source:
    remote:
      path: src/Integration/src/IntegrationBase/Support/AbstractMessageBuilder.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: _readOnlyHeaders
    path: ../Steeltoe/src/Integration/src/IntegrationBase/Support/AbstractMessageBuilder.cs
    startLine: 21
  assemblies:
  - Steeltoe.Integration.IntegrationBase
  namespace: Steeltoe.Integration.Support
  syntax:
    content: protected IList<string> _readOnlyHeaders
    return:
      type: System.Collections.Generic.IList{System.String}
    content.vb: Protected _readOnlyHeaders As IList(Of String)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Steeltoe.Integration.Support.AbstractMessageBuilder.#ctor
  commentId: M:Steeltoe.Integration.Support.AbstractMessageBuilder.#ctor
  id: '#ctor'
  parent: Steeltoe.Integration.Support.AbstractMessageBuilder
  langs:
  - csharp
  - vb
  name: AbstractMessageBuilder()
  nameWithType: AbstractMessageBuilder.AbstractMessageBuilder()
  fullName: Steeltoe.Integration.Support.AbstractMessageBuilder.AbstractMessageBuilder()
  type: Constructor
  source:
    remote:
      path: src/Integration/src/IntegrationBase/Support/AbstractMessageBuilder.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: .ctor
    path: ../Steeltoe/src/Integration/src/IntegrationBase/Support/AbstractMessageBuilder.cs
    startLine: 23
  assemblies:
  - Steeltoe.Integration.IntegrationBase
  namespace: Steeltoe.Integration.Support
  syntax:
    content: protected AbstractMessageBuilder()
    content.vb: Protected Sub New
  overload: Steeltoe.Integration.Support.AbstractMessageBuilder.#ctor*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Steeltoe.Integration.Support.AbstractMessageBuilder.#ctor(System.Object,Steeltoe.Messaging.IMessage)
  commentId: M:Steeltoe.Integration.Support.AbstractMessageBuilder.#ctor(System.Object,Steeltoe.Messaging.IMessage)
  id: '#ctor(System.Object,Steeltoe.Messaging.IMessage)'
  parent: Steeltoe.Integration.Support.AbstractMessageBuilder
  langs:
  - csharp
  - vb
  name: AbstractMessageBuilder(Object, IMessage)
  nameWithType: AbstractMessageBuilder.AbstractMessageBuilder(Object, IMessage)
  fullName: Steeltoe.Integration.Support.AbstractMessageBuilder.AbstractMessageBuilder(System.Object, Steeltoe.Messaging.IMessage)
  type: Constructor
  source:
    remote:
      path: src/Integration/src/IntegrationBase/Support/AbstractMessageBuilder.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: .ctor
    path: ../Steeltoe/src/Integration/src/IntegrationBase/Support/AbstractMessageBuilder.cs
    startLine: 27
  assemblies:
  - Steeltoe.Integration.IntegrationBase
  namespace: Steeltoe.Integration.Support
  syntax:
    content: protected AbstractMessageBuilder(object payload, IMessage originalMessage)
    parameters:
    - id: payload
      type: System.Object
    - id: originalMessage
      type: Steeltoe.Messaging.IMessage
    content.vb: Protected Sub New(payload As Object, originalMessage As IMessage)
  overload: Steeltoe.Integration.Support.AbstractMessageBuilder.#ctor*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Steeltoe.Integration.Support.AbstractMessageBuilder.SetExpirationDate(System.Int64)
  commentId: M:Steeltoe.Integration.Support.AbstractMessageBuilder.SetExpirationDate(System.Int64)
  id: SetExpirationDate(System.Int64)
  parent: Steeltoe.Integration.Support.AbstractMessageBuilder
  langs:
  - csharp
  - vb
  name: SetExpirationDate(Int64)
  nameWithType: AbstractMessageBuilder.SetExpirationDate(Int64)
  fullName: Steeltoe.Integration.Support.AbstractMessageBuilder.SetExpirationDate(System.Int64)
  type: Method
  source:
    remote:
      path: src/Integration/src/IntegrationBase/Support/AbstractMessageBuilder.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: SetExpirationDate
    path: ../Steeltoe/src/Integration/src/IntegrationBase/Support/AbstractMessageBuilder.cs
    startLine: 43
  assemblies:
  - Steeltoe.Integration.IntegrationBase
  namespace: Steeltoe.Integration.Support
  syntax:
    content: public virtual IMessageBuilder SetExpirationDate(long expirationDate)
    parameters:
    - id: expirationDate
      type: System.Int64
    return:
      type: Steeltoe.Integration.Support.IMessageBuilder
    content.vb: Public Overridable Function SetExpirationDate(expirationDate As Long) As IMessageBuilder
  overload: Steeltoe.Integration.Support.AbstractMessageBuilder.SetExpirationDate*
  implements:
  - Steeltoe.Integration.Support.IMessageBuilder.SetExpirationDate(System.Int64)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Steeltoe.Integration.Support.AbstractMessageBuilder.SetExpirationDate(System.Nullable{System.DateTime})
  commentId: M:Steeltoe.Integration.Support.AbstractMessageBuilder.SetExpirationDate(System.Nullable{System.DateTime})
  id: SetExpirationDate(System.Nullable{System.DateTime})
  parent: Steeltoe.Integration.Support.AbstractMessageBuilder
  langs:
  - csharp
  - vb
  name: SetExpirationDate(Nullable<DateTime>)
  nameWithType: AbstractMessageBuilder.SetExpirationDate(Nullable<DateTime>)
  fullName: Steeltoe.Integration.Support.AbstractMessageBuilder.SetExpirationDate(System.Nullable<System.DateTime>)
  type: Method
  source:
    remote:
      path: src/Integration/src/IntegrationBase/Support/AbstractMessageBuilder.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: SetExpirationDate
    path: ../Steeltoe/src/Integration/src/IntegrationBase/Support/AbstractMessageBuilder.cs
    startLine: 48
  assemblies:
  - Steeltoe.Integration.IntegrationBase
  namespace: Steeltoe.Integration.Support
  syntax:
    content: public virtual IMessageBuilder SetExpirationDate(DateTime? expirationDate)
    parameters:
    - id: expirationDate
      type: System.Nullable{System.DateTime}
    return:
      type: Steeltoe.Integration.Support.IMessageBuilder
    content.vb: Public Overridable Function SetExpirationDate(expirationDate As Date?) As IMessageBuilder
  overload: Steeltoe.Integration.Support.AbstractMessageBuilder.SetExpirationDate*
  implements:
  - Steeltoe.Integration.Support.IMessageBuilder.SetExpirationDate(System.Nullable{System.DateTime})
  nameWithType.vb: AbstractMessageBuilder.SetExpirationDate(Nullable(Of DateTime))
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Steeltoe.Integration.Support.AbstractMessageBuilder.SetExpirationDate(System.Nullable(Of System.DateTime))
  name.vb: SetExpirationDate(Nullable(Of DateTime))
- uid: Steeltoe.Integration.Support.AbstractMessageBuilder.SetCorrelationId(System.Object)
  commentId: M:Steeltoe.Integration.Support.AbstractMessageBuilder.SetCorrelationId(System.Object)
  id: SetCorrelationId(System.Object)
  parent: Steeltoe.Integration.Support.AbstractMessageBuilder
  langs:
  - csharp
  - vb
  name: SetCorrelationId(Object)
  nameWithType: AbstractMessageBuilder.SetCorrelationId(Object)
  fullName: Steeltoe.Integration.Support.AbstractMessageBuilder.SetCorrelationId(System.Object)
  type: Method
  source:
    remote:
      path: src/Integration/src/IntegrationBase/Support/AbstractMessageBuilder.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: SetCorrelationId
    path: ../Steeltoe/src/Integration/src/IntegrationBase/Support/AbstractMessageBuilder.cs
    startLine: 61
  assemblies:
  - Steeltoe.Integration.IntegrationBase
  namespace: Steeltoe.Integration.Support
  syntax:
    content: public virtual IMessageBuilder SetCorrelationId(object correlationId)
    parameters:
    - id: correlationId
      type: System.Object
    return:
      type: Steeltoe.Integration.Support.IMessageBuilder
    content.vb: Public Overridable Function SetCorrelationId(correlationId As Object) As IMessageBuilder
  overload: Steeltoe.Integration.Support.AbstractMessageBuilder.SetCorrelationId*
  implements:
  - Steeltoe.Integration.Support.IMessageBuilder.SetCorrelationId(System.Object)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Steeltoe.Integration.Support.AbstractMessageBuilder.PushSequenceDetails(System.Object,System.Int32,System.Int32)
  commentId: M:Steeltoe.Integration.Support.AbstractMessageBuilder.PushSequenceDetails(System.Object,System.Int32,System.Int32)
  id: PushSequenceDetails(System.Object,System.Int32,System.Int32)
  parent: Steeltoe.Integration.Support.AbstractMessageBuilder
  langs:
  - csharp
  - vb
  name: PushSequenceDetails(Object, Int32, Int32)
  nameWithType: AbstractMessageBuilder.PushSequenceDetails(Object, Int32, Int32)
  fullName: Steeltoe.Integration.Support.AbstractMessageBuilder.PushSequenceDetails(System.Object, System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: src/Integration/src/IntegrationBase/Support/AbstractMessageBuilder.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: PushSequenceDetails
    path: ../Steeltoe/src/Integration/src/IntegrationBase/Support/AbstractMessageBuilder.cs
    startLine: 66
  assemblies:
  - Steeltoe.Integration.IntegrationBase
  namespace: Steeltoe.Integration.Support
  syntax:
    content: public virtual IMessageBuilder PushSequenceDetails(object correlationId, int sequenceNumber, int sequenceSize)
    parameters:
    - id: correlationId
      type: System.Object
    - id: sequenceNumber
      type: System.Int32
    - id: sequenceSize
      type: System.Int32
    return:
      type: Steeltoe.Integration.Support.IMessageBuilder
    content.vb: Public Overridable Function PushSequenceDetails(correlationId As Object, sequenceNumber As Integer, sequenceSize As Integer) As IMessageBuilder
  overload: Steeltoe.Integration.Support.AbstractMessageBuilder.PushSequenceDetails*
  implements:
  - Steeltoe.Integration.Support.IMessageBuilder.PushSequenceDetails(System.Object,System.Int32,System.Int32)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Steeltoe.Integration.Support.AbstractMessageBuilder.PopSequenceDetails
  commentId: M:Steeltoe.Integration.Support.AbstractMessageBuilder.PopSequenceDetails
  id: PopSequenceDetails
  parent: Steeltoe.Integration.Support.AbstractMessageBuilder
  langs:
  - csharp
  - vb
  name: PopSequenceDetails()
  nameWithType: AbstractMessageBuilder.PopSequenceDetails()
  fullName: Steeltoe.Integration.Support.AbstractMessageBuilder.PopSequenceDetails()
  type: Method
  source:
    remote:
      path: src/Integration/src/IntegrationBase/Support/AbstractMessageBuilder.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: PopSequenceDetails
    path: ../Steeltoe/src/Integration/src/IntegrationBase/Support/AbstractMessageBuilder.cs
    startLine: 94
  assemblies:
  - Steeltoe.Integration.IntegrationBase
  namespace: Steeltoe.Integration.Support
  syntax:
    content: public virtual IMessageBuilder PopSequenceDetails()
    return:
      type: Steeltoe.Integration.Support.IMessageBuilder
    content.vb: Public Overridable Function PopSequenceDetails As IMessageBuilder
  overload: Steeltoe.Integration.Support.AbstractMessageBuilder.PopSequenceDetails*
  implements:
  - Steeltoe.Integration.Support.IMessageBuilder.PopSequenceDetails
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Steeltoe.Integration.Support.AbstractMessageBuilder.SetReplyChannel(Steeltoe.Messaging.IMessageChannel)
  commentId: M:Steeltoe.Integration.Support.AbstractMessageBuilder.SetReplyChannel(Steeltoe.Messaging.IMessageChannel)
  id: SetReplyChannel(Steeltoe.Messaging.IMessageChannel)
  parent: Steeltoe.Integration.Support.AbstractMessageBuilder
  langs:
  - csharp
  - vb
  name: SetReplyChannel(IMessageChannel)
  nameWithType: AbstractMessageBuilder.SetReplyChannel(IMessageChannel)
  fullName: Steeltoe.Integration.Support.AbstractMessageBuilder.SetReplyChannel(Steeltoe.Messaging.IMessageChannel)
  type: Method
  source:
    remote:
      path: src/Integration/src/IntegrationBase/Support/AbstractMessageBuilder.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: SetReplyChannel
    path: ../Steeltoe/src/Integration/src/IntegrationBase/Support/AbstractMessageBuilder.cs
    startLine: 138
  assemblies:
  - Steeltoe.Integration.IntegrationBase
  namespace: Steeltoe.Integration.Support
  syntax:
    content: public virtual IMessageBuilder SetReplyChannel(IMessageChannel replyChannel)
    parameters:
    - id: replyChannel
      type: Steeltoe.Messaging.IMessageChannel
    return:
      type: Steeltoe.Integration.Support.IMessageBuilder
    content.vb: Public Overridable Function SetReplyChannel(replyChannel As IMessageChannel) As IMessageBuilder
  overload: Steeltoe.Integration.Support.AbstractMessageBuilder.SetReplyChannel*
  implements:
  - Steeltoe.Integration.Support.IMessageBuilder.SetReplyChannel(Steeltoe.Messaging.IMessageChannel)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Steeltoe.Integration.Support.AbstractMessageBuilder.SetReplyChannelName(System.String)
  commentId: M:Steeltoe.Integration.Support.AbstractMessageBuilder.SetReplyChannelName(System.String)
  id: SetReplyChannelName(System.String)
  parent: Steeltoe.Integration.Support.AbstractMessageBuilder
  langs:
  - csharp
  - vb
  name: SetReplyChannelName(String)
  nameWithType: AbstractMessageBuilder.SetReplyChannelName(String)
  fullName: Steeltoe.Integration.Support.AbstractMessageBuilder.SetReplyChannelName(System.String)
  type: Method
  source:
    remote:
      path: src/Integration/src/IntegrationBase/Support/AbstractMessageBuilder.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: SetReplyChannelName
    path: ../Steeltoe/src/Integration/src/IntegrationBase/Support/AbstractMessageBuilder.cs
    startLine: 143
  assemblies:
  - Steeltoe.Integration.IntegrationBase
  namespace: Steeltoe.Integration.Support
  syntax:
    content: public virtual IMessageBuilder SetReplyChannelName(string replyChannelName)
    parameters:
    - id: replyChannelName
      type: System.String
    return:
      type: Steeltoe.Integration.Support.IMessageBuilder
    content.vb: Public Overridable Function SetReplyChannelName(replyChannelName As String) As IMessageBuilder
  overload: Steeltoe.Integration.Support.AbstractMessageBuilder.SetReplyChannelName*
  implements:
  - Steeltoe.Integration.Support.IMessageBuilder.SetReplyChannelName(System.String)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Steeltoe.Integration.Support.AbstractMessageBuilder.SetErrorChannel(Steeltoe.Messaging.IMessageChannel)
  commentId: M:Steeltoe.Integration.Support.AbstractMessageBuilder.SetErrorChannel(Steeltoe.Messaging.IMessageChannel)
  id: SetErrorChannel(Steeltoe.Messaging.IMessageChannel)
  parent: Steeltoe.Integration.Support.AbstractMessageBuilder
  langs:
  - csharp
  - vb
  name: SetErrorChannel(IMessageChannel)
  nameWithType: AbstractMessageBuilder.SetErrorChannel(IMessageChannel)
  fullName: Steeltoe.Integration.Support.AbstractMessageBuilder.SetErrorChannel(Steeltoe.Messaging.IMessageChannel)
  type: Method
  source:
    remote:
      path: src/Integration/src/IntegrationBase/Support/AbstractMessageBuilder.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: SetErrorChannel
    path: ../Steeltoe/src/Integration/src/IntegrationBase/Support/AbstractMessageBuilder.cs
    startLine: 148
  assemblies:
  - Steeltoe.Integration.IntegrationBase
  namespace: Steeltoe.Integration.Support
  syntax:
    content: public virtual IMessageBuilder SetErrorChannel(IMessageChannel errorChannel)
    parameters:
    - id: errorChannel
      type: Steeltoe.Messaging.IMessageChannel
    return:
      type: Steeltoe.Integration.Support.IMessageBuilder
    content.vb: Public Overridable Function SetErrorChannel(errorChannel As IMessageChannel) As IMessageBuilder
  overload: Steeltoe.Integration.Support.AbstractMessageBuilder.SetErrorChannel*
  implements:
  - Steeltoe.Integration.Support.IMessageBuilder.SetErrorChannel(Steeltoe.Messaging.IMessageChannel)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Steeltoe.Integration.Support.AbstractMessageBuilder.SetErrorChannelName(System.String)
  commentId: M:Steeltoe.Integration.Support.AbstractMessageBuilder.SetErrorChannelName(System.String)
  id: SetErrorChannelName(System.String)
  parent: Steeltoe.Integration.Support.AbstractMessageBuilder
  langs:
  - csharp
  - vb
  name: SetErrorChannelName(String)
  nameWithType: AbstractMessageBuilder.SetErrorChannelName(String)
  fullName: Steeltoe.Integration.Support.AbstractMessageBuilder.SetErrorChannelName(System.String)
  type: Method
  source:
    remote:
      path: src/Integration/src/IntegrationBase/Support/AbstractMessageBuilder.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: SetErrorChannelName
    path: ../Steeltoe/src/Integration/src/IntegrationBase/Support/AbstractMessageBuilder.cs
    startLine: 153
  assemblies:
  - Steeltoe.Integration.IntegrationBase
  namespace: Steeltoe.Integration.Support
  syntax:
    content: public virtual IMessageBuilder SetErrorChannelName(string errorChannelName)
    parameters:
    - id: errorChannelName
      type: System.String
    return:
      type: Steeltoe.Integration.Support.IMessageBuilder
    content.vb: Public Overridable Function SetErrorChannelName(errorChannelName As String) As IMessageBuilder
  overload: Steeltoe.Integration.Support.AbstractMessageBuilder.SetErrorChannelName*
  implements:
  - Steeltoe.Integration.Support.IMessageBuilder.SetErrorChannelName(System.String)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Steeltoe.Integration.Support.AbstractMessageBuilder.SetSequenceNumber(System.Int32)
  commentId: M:Steeltoe.Integration.Support.AbstractMessageBuilder.SetSequenceNumber(System.Int32)
  id: SetSequenceNumber(System.Int32)
  parent: Steeltoe.Integration.Support.AbstractMessageBuilder
  langs:
  - csharp
  - vb
  name: SetSequenceNumber(Int32)
  nameWithType: AbstractMessageBuilder.SetSequenceNumber(Int32)
  fullName: Steeltoe.Integration.Support.AbstractMessageBuilder.SetSequenceNumber(System.Int32)
  type: Method
  source:
    remote:
      path: src/Integration/src/IntegrationBase/Support/AbstractMessageBuilder.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: SetSequenceNumber
    path: ../Steeltoe/src/Integration/src/IntegrationBase/Support/AbstractMessageBuilder.cs
    startLine: 158
  assemblies:
  - Steeltoe.Integration.IntegrationBase
  namespace: Steeltoe.Integration.Support
  syntax:
    content: public virtual IMessageBuilder SetSequenceNumber(int sequenceNumber)
    parameters:
    - id: sequenceNumber
      type: System.Int32
    return:
      type: Steeltoe.Integration.Support.IMessageBuilder
    content.vb: Public Overridable Function SetSequenceNumber(sequenceNumber As Integer) As IMessageBuilder
  overload: Steeltoe.Integration.Support.AbstractMessageBuilder.SetSequenceNumber*
  implements:
  - Steeltoe.Integration.Support.IMessageBuilder.SetSequenceNumber(System.Int32)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Steeltoe.Integration.Support.AbstractMessageBuilder.SetSequenceSize(System.Int32)
  commentId: M:Steeltoe.Integration.Support.AbstractMessageBuilder.SetSequenceSize(System.Int32)
  id: SetSequenceSize(System.Int32)
  parent: Steeltoe.Integration.Support.AbstractMessageBuilder
  langs:
  - csharp
  - vb
  name: SetSequenceSize(Int32)
  nameWithType: AbstractMessageBuilder.SetSequenceSize(Int32)
  fullName: Steeltoe.Integration.Support.AbstractMessageBuilder.SetSequenceSize(System.Int32)
  type: Method
  source:
    remote:
      path: src/Integration/src/IntegrationBase/Support/AbstractMessageBuilder.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: SetSequenceSize
    path: ../Steeltoe/src/Integration/src/IntegrationBase/Support/AbstractMessageBuilder.cs
    startLine: 163
  assemblies:
  - Steeltoe.Integration.IntegrationBase
  namespace: Steeltoe.Integration.Support
  syntax:
    content: public virtual IMessageBuilder SetSequenceSize(int sequenceSize)
    parameters:
    - id: sequenceSize
      type: System.Int32
    return:
      type: Steeltoe.Integration.Support.IMessageBuilder
    content.vb: Public Overridable Function SetSequenceSize(sequenceSize As Integer) As IMessageBuilder
  overload: Steeltoe.Integration.Support.AbstractMessageBuilder.SetSequenceSize*
  implements:
  - Steeltoe.Integration.Support.IMessageBuilder.SetSequenceSize(System.Int32)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Steeltoe.Integration.Support.AbstractMessageBuilder.SetPriority(System.Int32)
  commentId: M:Steeltoe.Integration.Support.AbstractMessageBuilder.SetPriority(System.Int32)
  id: SetPriority(System.Int32)
  parent: Steeltoe.Integration.Support.AbstractMessageBuilder
  langs:
  - csharp
  - vb
  name: SetPriority(Int32)
  nameWithType: AbstractMessageBuilder.SetPriority(Int32)
  fullName: Steeltoe.Integration.Support.AbstractMessageBuilder.SetPriority(System.Int32)
  type: Method
  source:
    remote:
      path: src/Integration/src/IntegrationBase/Support/AbstractMessageBuilder.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: SetPriority
    path: ../Steeltoe/src/Integration/src/IntegrationBase/Support/AbstractMessageBuilder.cs
    startLine: 168
  assemblies:
  - Steeltoe.Integration.IntegrationBase
  namespace: Steeltoe.Integration.Support
  syntax:
    content: public virtual IMessageBuilder SetPriority(int priority)
    parameters:
    - id: priority
      type: System.Int32
    return:
      type: Steeltoe.Integration.Support.IMessageBuilder
    content.vb: Public Overridable Function SetPriority(priority As Integer) As IMessageBuilder
  overload: Steeltoe.Integration.Support.AbstractMessageBuilder.SetPriority*
  implements:
  - Steeltoe.Integration.Support.IMessageBuilder.SetPriority(System.Int32)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Steeltoe.Integration.Support.AbstractMessageBuilder.FilterAndCopyHeadersIfAbsent(System.Collections.Generic.IDictionary{System.String,System.Object},System.String[])
  commentId: M:Steeltoe.Integration.Support.AbstractMessageBuilder.FilterAndCopyHeadersIfAbsent(System.Collections.Generic.IDictionary{System.String,System.Object},System.String[])
  id: FilterAndCopyHeadersIfAbsent(System.Collections.Generic.IDictionary{System.String,System.Object},System.String[])
  parent: Steeltoe.Integration.Support.AbstractMessageBuilder
  langs:
  - csharp
  - vb
  name: FilterAndCopyHeadersIfAbsent(IDictionary<String, Object>, String[])
  nameWithType: AbstractMessageBuilder.FilterAndCopyHeadersIfAbsent(IDictionary<String, Object>, String[])
  fullName: Steeltoe.Integration.Support.AbstractMessageBuilder.FilterAndCopyHeadersIfAbsent(System.Collections.Generic.IDictionary<System.String, System.Object>, System.String[])
  type: Method
  source:
    remote:
      path: src/Integration/src/IntegrationBase/Support/AbstractMessageBuilder.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: FilterAndCopyHeadersIfAbsent
    path: ../Steeltoe/src/Integration/src/IntegrationBase/Support/AbstractMessageBuilder.cs
    startLine: 173
  assemblies:
  - Steeltoe.Integration.IntegrationBase
  namespace: Steeltoe.Integration.Support
  syntax:
    content: public virtual IMessageBuilder FilterAndCopyHeadersIfAbsent(IDictionary<string, object> headersToCopy, params string[] headerPatternsToFilter)
    parameters:
    - id: headersToCopy
      type: System.Collections.Generic.IDictionary{System.String,System.Object}
    - id: headerPatternsToFilter
      type: System.String[]
    return:
      type: Steeltoe.Integration.Support.IMessageBuilder
    content.vb: Public Overridable Function FilterAndCopyHeadersIfAbsent(headersToCopy As IDictionary(Of String, Object), ParamArray headerPatternsToFilter As String()) As IMessageBuilder
  overload: Steeltoe.Integration.Support.AbstractMessageBuilder.FilterAndCopyHeadersIfAbsent*
  implements:
  - Steeltoe.Integration.Support.IMessageBuilder.FilterAndCopyHeadersIfAbsent(System.Collections.Generic.IDictionary{System.String,System.Object},System.String[])
  nameWithType.vb: AbstractMessageBuilder.FilterAndCopyHeadersIfAbsent(IDictionary(Of String, Object), String())
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Steeltoe.Integration.Support.AbstractMessageBuilder.FilterAndCopyHeadersIfAbsent(System.Collections.Generic.IDictionary(Of System.String, System.Object), System.String())
  name.vb: FilterAndCopyHeadersIfAbsent(IDictionary(Of String, Object), String())
- uid: Steeltoe.Integration.Support.AbstractMessageBuilder.Payload
  commentId: P:Steeltoe.Integration.Support.AbstractMessageBuilder.Payload
  id: Payload
  parent: Steeltoe.Integration.Support.AbstractMessageBuilder
  langs:
  - csharp
  - vb
  name: Payload
  nameWithType: AbstractMessageBuilder.Payload
  fullName: Steeltoe.Integration.Support.AbstractMessageBuilder.Payload
  type: Property
  source:
    remote:
      path: src/Integration/src/IntegrationBase/Support/AbstractMessageBuilder.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Payload
    path: ../Steeltoe/src/Integration/src/IntegrationBase/Support/AbstractMessageBuilder.cs
    startLine: 191
  assemblies:
  - Steeltoe.Integration.IntegrationBase
  namespace: Steeltoe.Integration.Support
  syntax:
    content: public abstract object Payload { get; }
    parameters: []
    return:
      type: System.Object
    content.vb: Public MustOverride ReadOnly Property Payload As Object
  overload: Steeltoe.Integration.Support.AbstractMessageBuilder.Payload*
  implements:
  - Steeltoe.Integration.Support.IMessageBuilder.Payload
  modifiers.csharp:
  - public
  - abstract
  - get
  modifiers.vb:
  - Public
  - MustOverride
  - ReadOnly
- uid: Steeltoe.Integration.Support.AbstractMessageBuilder.Headers
  commentId: P:Steeltoe.Integration.Support.AbstractMessageBuilder.Headers
  id: Headers
  parent: Steeltoe.Integration.Support.AbstractMessageBuilder
  langs:
  - csharp
  - vb
  name: Headers
  nameWithType: AbstractMessageBuilder.Headers
  fullName: Steeltoe.Integration.Support.AbstractMessageBuilder.Headers
  type: Property
  source:
    remote:
      path: src/Integration/src/IntegrationBase/Support/AbstractMessageBuilder.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Headers
    path: ../Steeltoe/src/Integration/src/IntegrationBase/Support/AbstractMessageBuilder.cs
    startLine: 193
  assemblies:
  - Steeltoe.Integration.IntegrationBase
  namespace: Steeltoe.Integration.Support
  syntax:
    content: public abstract IDictionary<string, object> Headers { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IDictionary{System.String,System.Object}
    content.vb: Public MustOverride ReadOnly Property Headers As IDictionary(Of String, Object)
  overload: Steeltoe.Integration.Support.AbstractMessageBuilder.Headers*
  implements:
  - Steeltoe.Integration.Support.IMessageBuilder.Headers
  modifiers.csharp:
  - public
  - abstract
  - get
  modifiers.vb:
  - Public
  - MustOverride
  - ReadOnly
- uid: Steeltoe.Integration.Support.AbstractMessageBuilder.SetHeader(System.String,System.Object)
  commentId: M:Steeltoe.Integration.Support.AbstractMessageBuilder.SetHeader(System.String,System.Object)
  id: SetHeader(System.String,System.Object)
  parent: Steeltoe.Integration.Support.AbstractMessageBuilder
  langs:
  - csharp
  - vb
  name: SetHeader(String, Object)
  nameWithType: AbstractMessageBuilder.SetHeader(String, Object)
  fullName: Steeltoe.Integration.Support.AbstractMessageBuilder.SetHeader(System.String, System.Object)
  type: Method
  source:
    remote:
      path: src/Integration/src/IntegrationBase/Support/AbstractMessageBuilder.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: SetHeader
    path: ../Steeltoe/src/Integration/src/IntegrationBase/Support/AbstractMessageBuilder.cs
    startLine: 195
  assemblies:
  - Steeltoe.Integration.IntegrationBase
  namespace: Steeltoe.Integration.Support
  syntax:
    content: public abstract IMessageBuilder SetHeader(string headerName, object headerValue)
    parameters:
    - id: headerName
      type: System.String
    - id: headerValue
      type: System.Object
    return:
      type: Steeltoe.Integration.Support.IMessageBuilder
    content.vb: Public MustOverride Function SetHeader(headerName As String, headerValue As Object) As IMessageBuilder
  overload: Steeltoe.Integration.Support.AbstractMessageBuilder.SetHeader*
  implements:
  - Steeltoe.Integration.Support.IMessageBuilder.SetHeader(System.String,System.Object)
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
- uid: Steeltoe.Integration.Support.AbstractMessageBuilder.SetHeaderIfAbsent(System.String,System.Object)
  commentId: M:Steeltoe.Integration.Support.AbstractMessageBuilder.SetHeaderIfAbsent(System.String,System.Object)
  id: SetHeaderIfAbsent(System.String,System.Object)
  parent: Steeltoe.Integration.Support.AbstractMessageBuilder
  langs:
  - csharp
  - vb
  name: SetHeaderIfAbsent(String, Object)
  nameWithType: AbstractMessageBuilder.SetHeaderIfAbsent(String, Object)
  fullName: Steeltoe.Integration.Support.AbstractMessageBuilder.SetHeaderIfAbsent(System.String, System.Object)
  type: Method
  source:
    remote:
      path: src/Integration/src/IntegrationBase/Support/AbstractMessageBuilder.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: SetHeaderIfAbsent
    path: ../Steeltoe/src/Integration/src/IntegrationBase/Support/AbstractMessageBuilder.cs
    startLine: 197
  assemblies:
  - Steeltoe.Integration.IntegrationBase
  namespace: Steeltoe.Integration.Support
  syntax:
    content: public abstract IMessageBuilder SetHeaderIfAbsent(string headerName, object headerValue)
    parameters:
    - id: headerName
      type: System.String
    - id: headerValue
      type: System.Object
    return:
      type: Steeltoe.Integration.Support.IMessageBuilder
    content.vb: Public MustOverride Function SetHeaderIfAbsent(headerName As String, headerValue As Object) As IMessageBuilder
  overload: Steeltoe.Integration.Support.AbstractMessageBuilder.SetHeaderIfAbsent*
  implements:
  - Steeltoe.Integration.Support.IMessageBuilder.SetHeaderIfAbsent(System.String,System.Object)
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
- uid: Steeltoe.Integration.Support.AbstractMessageBuilder.RemoveHeaders(System.String[])
  commentId: M:Steeltoe.Integration.Support.AbstractMessageBuilder.RemoveHeaders(System.String[])
  id: RemoveHeaders(System.String[])
  parent: Steeltoe.Integration.Support.AbstractMessageBuilder
  langs:
  - csharp
  - vb
  name: RemoveHeaders(String[])
  nameWithType: AbstractMessageBuilder.RemoveHeaders(String[])
  fullName: Steeltoe.Integration.Support.AbstractMessageBuilder.RemoveHeaders(System.String[])
  type: Method
  source:
    remote:
      path: src/Integration/src/IntegrationBase/Support/AbstractMessageBuilder.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: RemoveHeaders
    path: ../Steeltoe/src/Integration/src/IntegrationBase/Support/AbstractMessageBuilder.cs
    startLine: 199
  assemblies:
  - Steeltoe.Integration.IntegrationBase
  namespace: Steeltoe.Integration.Support
  syntax:
    content: public abstract IMessageBuilder RemoveHeaders(params string[] headerPatterns)
    parameters:
    - id: headerPatterns
      type: System.String[]
    return:
      type: Steeltoe.Integration.Support.IMessageBuilder
    content.vb: Public MustOverride Function RemoveHeaders(ParamArray headerPatterns As String()) As IMessageBuilder
  overload: Steeltoe.Integration.Support.AbstractMessageBuilder.RemoveHeaders*
  implements:
  - Steeltoe.Integration.Support.IMessageBuilder.RemoveHeaders(System.String[])
  nameWithType.vb: AbstractMessageBuilder.RemoveHeaders(String())
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
  fullName.vb: Steeltoe.Integration.Support.AbstractMessageBuilder.RemoveHeaders(System.String())
  name.vb: RemoveHeaders(String())
- uid: Steeltoe.Integration.Support.AbstractMessageBuilder.RemoveHeader(System.String)
  commentId: M:Steeltoe.Integration.Support.AbstractMessageBuilder.RemoveHeader(System.String)
  id: RemoveHeader(System.String)
  parent: Steeltoe.Integration.Support.AbstractMessageBuilder
  langs:
  - csharp
  - vb
  name: RemoveHeader(String)
  nameWithType: AbstractMessageBuilder.RemoveHeader(String)
  fullName: Steeltoe.Integration.Support.AbstractMessageBuilder.RemoveHeader(System.String)
  type: Method
  source:
    remote:
      path: src/Integration/src/IntegrationBase/Support/AbstractMessageBuilder.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: RemoveHeader
    path: ../Steeltoe/src/Integration/src/IntegrationBase/Support/AbstractMessageBuilder.cs
    startLine: 201
  assemblies:
  - Steeltoe.Integration.IntegrationBase
  namespace: Steeltoe.Integration.Support
  syntax:
    content: public abstract IMessageBuilder RemoveHeader(string headerName)
    parameters:
    - id: headerName
      type: System.String
    return:
      type: Steeltoe.Integration.Support.IMessageBuilder
    content.vb: Public MustOverride Function RemoveHeader(headerName As String) As IMessageBuilder
  overload: Steeltoe.Integration.Support.AbstractMessageBuilder.RemoveHeader*
  implements:
  - Steeltoe.Integration.Support.IMessageBuilder.RemoveHeader(System.String)
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
- uid: Steeltoe.Integration.Support.AbstractMessageBuilder.CopyHeaders(System.Collections.Generic.IDictionary{System.String,System.Object})
  commentId: M:Steeltoe.Integration.Support.AbstractMessageBuilder.CopyHeaders(System.Collections.Generic.IDictionary{System.String,System.Object})
  id: CopyHeaders(System.Collections.Generic.IDictionary{System.String,System.Object})
  parent: Steeltoe.Integration.Support.AbstractMessageBuilder
  langs:
  - csharp
  - vb
  name: CopyHeaders(IDictionary<String, Object>)
  nameWithType: AbstractMessageBuilder.CopyHeaders(IDictionary<String, Object>)
  fullName: Steeltoe.Integration.Support.AbstractMessageBuilder.CopyHeaders(System.Collections.Generic.IDictionary<System.String, System.Object>)
  type: Method
  source:
    remote:
      path: src/Integration/src/IntegrationBase/Support/AbstractMessageBuilder.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: CopyHeaders
    path: ../Steeltoe/src/Integration/src/IntegrationBase/Support/AbstractMessageBuilder.cs
    startLine: 203
  assemblies:
  - Steeltoe.Integration.IntegrationBase
  namespace: Steeltoe.Integration.Support
  syntax:
    content: public abstract IMessageBuilder CopyHeaders(IDictionary<string, object> headersToCopy)
    parameters:
    - id: headersToCopy
      type: System.Collections.Generic.IDictionary{System.String,System.Object}
    return:
      type: Steeltoe.Integration.Support.IMessageBuilder
    content.vb: Public MustOverride Function CopyHeaders(headersToCopy As IDictionary(Of String, Object)) As IMessageBuilder
  overload: Steeltoe.Integration.Support.AbstractMessageBuilder.CopyHeaders*
  implements:
  - Steeltoe.Integration.Support.IMessageBuilder.CopyHeaders(System.Collections.Generic.IDictionary{System.String,System.Object})
  nameWithType.vb: AbstractMessageBuilder.CopyHeaders(IDictionary(Of String, Object))
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
  fullName.vb: Steeltoe.Integration.Support.AbstractMessageBuilder.CopyHeaders(System.Collections.Generic.IDictionary(Of System.String, System.Object))
  name.vb: CopyHeaders(IDictionary(Of String, Object))
- uid: Steeltoe.Integration.Support.AbstractMessageBuilder.CopyHeadersIfAbsent(System.Collections.Generic.IDictionary{System.String,System.Object})
  commentId: M:Steeltoe.Integration.Support.AbstractMessageBuilder.CopyHeadersIfAbsent(System.Collections.Generic.IDictionary{System.String,System.Object})
  id: CopyHeadersIfAbsent(System.Collections.Generic.IDictionary{System.String,System.Object})
  parent: Steeltoe.Integration.Support.AbstractMessageBuilder
  langs:
  - csharp
  - vb
  name: CopyHeadersIfAbsent(IDictionary<String, Object>)
  nameWithType: AbstractMessageBuilder.CopyHeadersIfAbsent(IDictionary<String, Object>)
  fullName: Steeltoe.Integration.Support.AbstractMessageBuilder.CopyHeadersIfAbsent(System.Collections.Generic.IDictionary<System.String, System.Object>)
  type: Method
  source:
    remote:
      path: src/Integration/src/IntegrationBase/Support/AbstractMessageBuilder.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: CopyHeadersIfAbsent
    path: ../Steeltoe/src/Integration/src/IntegrationBase/Support/AbstractMessageBuilder.cs
    startLine: 205
  assemblies:
  - Steeltoe.Integration.IntegrationBase
  namespace: Steeltoe.Integration.Support
  syntax:
    content: public abstract IMessageBuilder CopyHeadersIfAbsent(IDictionary<string, object> headersToCopy)
    parameters:
    - id: headersToCopy
      type: System.Collections.Generic.IDictionary{System.String,System.Object}
    return:
      type: Steeltoe.Integration.Support.IMessageBuilder
    content.vb: Public MustOverride Function CopyHeadersIfAbsent(headersToCopy As IDictionary(Of String, Object)) As IMessageBuilder
  overload: Steeltoe.Integration.Support.AbstractMessageBuilder.CopyHeadersIfAbsent*
  implements:
  - Steeltoe.Integration.Support.IMessageBuilder.CopyHeadersIfAbsent(System.Collections.Generic.IDictionary{System.String,System.Object})
  nameWithType.vb: AbstractMessageBuilder.CopyHeadersIfAbsent(IDictionary(Of String, Object))
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
  fullName.vb: Steeltoe.Integration.Support.AbstractMessageBuilder.CopyHeadersIfAbsent(System.Collections.Generic.IDictionary(Of System.String, System.Object))
  name.vb: CopyHeadersIfAbsent(IDictionary(Of String, Object))
- uid: Steeltoe.Integration.Support.AbstractMessageBuilder.Build
  commentId: M:Steeltoe.Integration.Support.AbstractMessageBuilder.Build
  id: Build
  parent: Steeltoe.Integration.Support.AbstractMessageBuilder
  langs:
  - csharp
  - vb
  name: Build()
  nameWithType: AbstractMessageBuilder.Build()
  fullName: Steeltoe.Integration.Support.AbstractMessageBuilder.Build()
  type: Method
  source:
    remote:
      path: src/Integration/src/IntegrationBase/Support/AbstractMessageBuilder.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Build
    path: ../Steeltoe/src/Integration/src/IntegrationBase/Support/AbstractMessageBuilder.cs
    startLine: 207
  assemblies:
  - Steeltoe.Integration.IntegrationBase
  namespace: Steeltoe.Integration.Support
  syntax:
    content: public abstract IMessage Build()
    return:
      type: Steeltoe.Messaging.IMessage
    content.vb: Public MustOverride Function Build As IMessage
  overload: Steeltoe.Integration.Support.AbstractMessageBuilder.Build*
  implements:
  - Steeltoe.Integration.Support.IMessageBuilder.Build
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
- uid: Steeltoe.Integration.Support.AbstractMessageBuilder.SequenceDetails
  commentId: P:Steeltoe.Integration.Support.AbstractMessageBuilder.SequenceDetails
  id: SequenceDetails
  parent: Steeltoe.Integration.Support.AbstractMessageBuilder
  langs:
  - csharp
  - vb
  name: SequenceDetails
  nameWithType: AbstractMessageBuilder.SequenceDetails
  fullName: Steeltoe.Integration.Support.AbstractMessageBuilder.SequenceDetails
  type: Property
  source:
    remote:
      path: src/Integration/src/IntegrationBase/Support/AbstractMessageBuilder.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: SequenceDetails
    path: ../Steeltoe/src/Integration/src/IntegrationBase/Support/AbstractMessageBuilder.cs
    startLine: 209
  assemblies:
  - Steeltoe.Integration.IntegrationBase
  namespace: Steeltoe.Integration.Support
  syntax:
    content: protected abstract List<List<object>> SequenceDetails { get; }
    parameters: []
    return:
      type: System.Collections.Generic.List{System.Collections.Generic.List{System.Object}}
    content.vb: Protected MustOverride ReadOnly Property SequenceDetails As List(Of List(Of Object))
  overload: Steeltoe.Integration.Support.AbstractMessageBuilder.SequenceDetails*
  modifiers.csharp:
  - protected
  - abstract
  - get
  modifiers.vb:
  - Protected
  - MustOverride
  - ReadOnly
- uid: Steeltoe.Integration.Support.AbstractMessageBuilder.CorrelationId
  commentId: P:Steeltoe.Integration.Support.AbstractMessageBuilder.CorrelationId
  id: CorrelationId
  parent: Steeltoe.Integration.Support.AbstractMessageBuilder
  langs:
  - csharp
  - vb
  name: CorrelationId
  nameWithType: AbstractMessageBuilder.CorrelationId
  fullName: Steeltoe.Integration.Support.AbstractMessageBuilder.CorrelationId
  type: Property
  source:
    remote:
      path: src/Integration/src/IntegrationBase/Support/AbstractMessageBuilder.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: CorrelationId
    path: ../Steeltoe/src/Integration/src/IntegrationBase/Support/AbstractMessageBuilder.cs
    startLine: 211
  assemblies:
  - Steeltoe.Integration.IntegrationBase
  namespace: Steeltoe.Integration.Support
  syntax:
    content: protected abstract object CorrelationId { get; }
    parameters: []
    return:
      type: System.Object
    content.vb: Protected MustOverride ReadOnly Property CorrelationId As Object
  overload: Steeltoe.Integration.Support.AbstractMessageBuilder.CorrelationId*
  modifiers.csharp:
  - protected
  - abstract
  - get
  modifiers.vb:
  - Protected
  - MustOverride
  - ReadOnly
- uid: Steeltoe.Integration.Support.AbstractMessageBuilder.SequenceNumber
  commentId: P:Steeltoe.Integration.Support.AbstractMessageBuilder.SequenceNumber
  id: SequenceNumber
  parent: Steeltoe.Integration.Support.AbstractMessageBuilder
  langs:
  - csharp
  - vb
  name: SequenceNumber
  nameWithType: AbstractMessageBuilder.SequenceNumber
  fullName: Steeltoe.Integration.Support.AbstractMessageBuilder.SequenceNumber
  type: Property
  source:
    remote:
      path: src/Integration/src/IntegrationBase/Support/AbstractMessageBuilder.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: SequenceNumber
    path: ../Steeltoe/src/Integration/src/IntegrationBase/Support/AbstractMessageBuilder.cs
    startLine: 213
  assemblies:
  - Steeltoe.Integration.IntegrationBase
  namespace: Steeltoe.Integration.Support
  syntax:
    content: protected abstract object SequenceNumber { get; }
    parameters: []
    return:
      type: System.Object
    content.vb: Protected MustOverride ReadOnly Property SequenceNumber As Object
  overload: Steeltoe.Integration.Support.AbstractMessageBuilder.SequenceNumber*
  modifiers.csharp:
  - protected
  - abstract
  - get
  modifiers.vb:
  - Protected
  - MustOverride
  - ReadOnly
- uid: Steeltoe.Integration.Support.AbstractMessageBuilder.SequenceSize
  commentId: P:Steeltoe.Integration.Support.AbstractMessageBuilder.SequenceSize
  id: SequenceSize
  parent: Steeltoe.Integration.Support.AbstractMessageBuilder
  langs:
  - csharp
  - vb
  name: SequenceSize
  nameWithType: AbstractMessageBuilder.SequenceSize
  fullName: Steeltoe.Integration.Support.AbstractMessageBuilder.SequenceSize
  type: Property
  source:
    remote:
      path: src/Integration/src/IntegrationBase/Support/AbstractMessageBuilder.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: SequenceSize
    path: ../Steeltoe/src/Integration/src/IntegrationBase/Support/AbstractMessageBuilder.cs
    startLine: 215
  assemblies:
  - Steeltoe.Integration.IntegrationBase
  namespace: Steeltoe.Integration.Support
  syntax:
    content: protected abstract object SequenceSize { get; }
    parameters: []
    return:
      type: System.Object
    content.vb: Protected MustOverride ReadOnly Property SequenceSize As Object
  overload: Steeltoe.Integration.Support.AbstractMessageBuilder.SequenceSize*
  modifiers.csharp:
  - protected
  - abstract
  - get
  modifiers.vb:
  - Protected
  - MustOverride
  - ReadOnly
- uid: Steeltoe.Integration.Support.AbstractMessageBuilder.ContainsReadOnly(Steeltoe.Messaging.IMessageHeaders)
  commentId: M:Steeltoe.Integration.Support.AbstractMessageBuilder.ContainsReadOnly(Steeltoe.Messaging.IMessageHeaders)
  id: ContainsReadOnly(Steeltoe.Messaging.IMessageHeaders)
  parent: Steeltoe.Integration.Support.AbstractMessageBuilder
  langs:
  - csharp
  - vb
  name: ContainsReadOnly(IMessageHeaders)
  nameWithType: AbstractMessageBuilder.ContainsReadOnly(IMessageHeaders)
  fullName: Steeltoe.Integration.Support.AbstractMessageBuilder.ContainsReadOnly(Steeltoe.Messaging.IMessageHeaders)
  type: Method
  source:
    remote:
      path: src/Integration/src/IntegrationBase/Support/AbstractMessageBuilder.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: ContainsReadOnly
    path: ../Steeltoe/src/Integration/src/IntegrationBase/Support/AbstractMessageBuilder.cs
    startLine: 217
  assemblies:
  - Steeltoe.Integration.IntegrationBase
  namespace: Steeltoe.Integration.Support
  syntax:
    content: protected bool ContainsReadOnly(IMessageHeaders headers)
    parameters:
    - id: headers
      type: Steeltoe.Messaging.IMessageHeaders
    return:
      type: System.Boolean
    content.vb: Protected Function ContainsReadOnly(headers As IMessageHeaders) As Boolean
  overload: Steeltoe.Integration.Support.AbstractMessageBuilder.ContainsReadOnly*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
references:
- uid: Steeltoe.Integration.Support
  commentId: N:Steeltoe.Integration.Support
  name: Steeltoe.Integration.Support
  nameWithType: Steeltoe.Integration.Support
  fullName: Steeltoe.Integration.Support
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Steeltoe.Integration.Support.IMessageBuilder
  commentId: T:Steeltoe.Integration.Support.IMessageBuilder
  parent: Steeltoe.Integration.Support
  name: IMessageBuilder
  nameWithType: IMessageBuilder
  fullName: Steeltoe.Integration.Support.IMessageBuilder
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Steeltoe.Messaging.IMessage
  commentId: T:Steeltoe.Messaging.IMessage
  parent: Steeltoe.Messaging
  name: IMessage
  nameWithType: IMessage
  fullName: Steeltoe.Messaging.IMessage
- uid: Steeltoe.Messaging
  commentId: N:Steeltoe.Messaging
  name: Steeltoe.Messaging
  nameWithType: Steeltoe.Messaging
  fullName: Steeltoe.Messaging
- uid: Steeltoe.Integration.IntegrationMessageHeaderAccessor
  commentId: T:Steeltoe.Integration.IntegrationMessageHeaderAccessor
  parent: Steeltoe.Integration
  name: IntegrationMessageHeaderAccessor
  nameWithType: IntegrationMessageHeaderAccessor
  fullName: Steeltoe.Integration.IntegrationMessageHeaderAccessor
- uid: Steeltoe.Integration
  commentId: N:Steeltoe.Integration
  name: Steeltoe.Integration
  nameWithType: Steeltoe.Integration
  fullName: Steeltoe.Integration
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Collections.Generic.IList{System.String}
  commentId: T:System.Collections.Generic.IList{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<String>
  nameWithType: IList<String>
  fullName: System.Collections.Generic.IList<System.String>
  nameWithType.vb: IList(Of String)
  fullName.vb: System.Collections.Generic.IList(Of System.String)
  name.vb: IList(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullName.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Steeltoe.Integration.Support.AbstractMessageBuilder.#ctor*
  commentId: Overload:Steeltoe.Integration.Support.AbstractMessageBuilder.#ctor
  name: AbstractMessageBuilder
  nameWithType: AbstractMessageBuilder.AbstractMessageBuilder
  fullName: Steeltoe.Integration.Support.AbstractMessageBuilder.AbstractMessageBuilder
- uid: Steeltoe.Integration.Support.AbstractMessageBuilder.SetExpirationDate*
  commentId: Overload:Steeltoe.Integration.Support.AbstractMessageBuilder.SetExpirationDate
  name: SetExpirationDate
  nameWithType: AbstractMessageBuilder.SetExpirationDate
  fullName: Steeltoe.Integration.Support.AbstractMessageBuilder.SetExpirationDate
- uid: Steeltoe.Integration.Support.IMessageBuilder.SetExpirationDate(System.Int64)
  commentId: M:Steeltoe.Integration.Support.IMessageBuilder.SetExpirationDate(System.Int64)
  parent: Steeltoe.Integration.Support.IMessageBuilder
  isExternal: true
  name: SetExpirationDate(Int64)
  nameWithType: IMessageBuilder.SetExpirationDate(Int64)
  fullName: Steeltoe.Integration.Support.IMessageBuilder.SetExpirationDate(System.Int64)
  spec.csharp:
  - uid: Steeltoe.Integration.Support.IMessageBuilder.SetExpirationDate(System.Int64)
    name: SetExpirationDate
    nameWithType: IMessageBuilder.SetExpirationDate
    fullName: Steeltoe.Integration.Support.IMessageBuilder.SetExpirationDate
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Integration.Support.IMessageBuilder.SetExpirationDate(System.Int64)
    name: SetExpirationDate
    nameWithType: IMessageBuilder.SetExpirationDate
    fullName: Steeltoe.Integration.Support.IMessageBuilder.SetExpirationDate
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: Steeltoe.Integration.Support.IMessageBuilder.SetExpirationDate(System.Nullable{System.DateTime})
  commentId: M:Steeltoe.Integration.Support.IMessageBuilder.SetExpirationDate(System.Nullable{System.DateTime})
  parent: Steeltoe.Integration.Support.IMessageBuilder
  isExternal: true
  name: SetExpirationDate(Nullable<DateTime>)
  nameWithType: IMessageBuilder.SetExpirationDate(Nullable<DateTime>)
  fullName: Steeltoe.Integration.Support.IMessageBuilder.SetExpirationDate(System.Nullable<System.DateTime>)
  nameWithType.vb: IMessageBuilder.SetExpirationDate(Nullable(Of DateTime))
  fullName.vb: Steeltoe.Integration.Support.IMessageBuilder.SetExpirationDate(System.Nullable(Of System.DateTime))
  name.vb: SetExpirationDate(Nullable(Of DateTime))
  spec.csharp:
  - uid: Steeltoe.Integration.Support.IMessageBuilder.SetExpirationDate(System.Nullable{System.DateTime})
    name: SetExpirationDate
    nameWithType: IMessageBuilder.SetExpirationDate
    fullName: Steeltoe.Integration.Support.IMessageBuilder.SetExpirationDate
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Integration.Support.IMessageBuilder.SetExpirationDate(System.Nullable{System.DateTime})
    name: SetExpirationDate
    nameWithType: IMessageBuilder.SetExpirationDate
    fullName: Steeltoe.Integration.Support.IMessageBuilder.SetExpirationDate
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable{System.DateTime}
  commentId: T:System.Nullable{System.DateTime}
  parent: System
  definition: System.Nullable`1
  name: Nullable<DateTime>
  nameWithType: Nullable<DateTime>
  fullName: System.Nullable<System.DateTime>
  nameWithType.vb: Nullable(Of DateTime)
  fullName.vb: System.Nullable(Of System.DateTime)
  name.vb: Nullable(Of DateTime)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Integration.Support.AbstractMessageBuilder.SetCorrelationId*
  commentId: Overload:Steeltoe.Integration.Support.AbstractMessageBuilder.SetCorrelationId
  name: SetCorrelationId
  nameWithType: AbstractMessageBuilder.SetCorrelationId
  fullName: Steeltoe.Integration.Support.AbstractMessageBuilder.SetCorrelationId
- uid: Steeltoe.Integration.Support.IMessageBuilder.SetCorrelationId(System.Object)
  commentId: M:Steeltoe.Integration.Support.IMessageBuilder.SetCorrelationId(System.Object)
  parent: Steeltoe.Integration.Support.IMessageBuilder
  isExternal: true
  name: SetCorrelationId(Object)
  nameWithType: IMessageBuilder.SetCorrelationId(Object)
  fullName: Steeltoe.Integration.Support.IMessageBuilder.SetCorrelationId(System.Object)
  spec.csharp:
  - uid: Steeltoe.Integration.Support.IMessageBuilder.SetCorrelationId(System.Object)
    name: SetCorrelationId
    nameWithType: IMessageBuilder.SetCorrelationId
    fullName: Steeltoe.Integration.Support.IMessageBuilder.SetCorrelationId
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Integration.Support.IMessageBuilder.SetCorrelationId(System.Object)
    name: SetCorrelationId
    nameWithType: IMessageBuilder.SetCorrelationId
    fullName: Steeltoe.Integration.Support.IMessageBuilder.SetCorrelationId
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Integration.Support.AbstractMessageBuilder.PushSequenceDetails*
  commentId: Overload:Steeltoe.Integration.Support.AbstractMessageBuilder.PushSequenceDetails
  name: PushSequenceDetails
  nameWithType: AbstractMessageBuilder.PushSequenceDetails
  fullName: Steeltoe.Integration.Support.AbstractMessageBuilder.PushSequenceDetails
- uid: Steeltoe.Integration.Support.IMessageBuilder.PushSequenceDetails(System.Object,System.Int32,System.Int32)
  commentId: M:Steeltoe.Integration.Support.IMessageBuilder.PushSequenceDetails(System.Object,System.Int32,System.Int32)
  parent: Steeltoe.Integration.Support.IMessageBuilder
  isExternal: true
  name: PushSequenceDetails(Object, Int32, Int32)
  nameWithType: IMessageBuilder.PushSequenceDetails(Object, Int32, Int32)
  fullName: Steeltoe.Integration.Support.IMessageBuilder.PushSequenceDetails(System.Object, System.Int32, System.Int32)
  spec.csharp:
  - uid: Steeltoe.Integration.Support.IMessageBuilder.PushSequenceDetails(System.Object,System.Int32,System.Int32)
    name: PushSequenceDetails
    nameWithType: IMessageBuilder.PushSequenceDetails
    fullName: Steeltoe.Integration.Support.IMessageBuilder.PushSequenceDetails
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Integration.Support.IMessageBuilder.PushSequenceDetails(System.Object,System.Int32,System.Int32)
    name: PushSequenceDetails
    nameWithType: IMessageBuilder.PushSequenceDetails
    fullName: Steeltoe.Integration.Support.IMessageBuilder.PushSequenceDetails
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Steeltoe.Integration.Support.AbstractMessageBuilder.PopSequenceDetails*
  commentId: Overload:Steeltoe.Integration.Support.AbstractMessageBuilder.PopSequenceDetails
  name: PopSequenceDetails
  nameWithType: AbstractMessageBuilder.PopSequenceDetails
  fullName: Steeltoe.Integration.Support.AbstractMessageBuilder.PopSequenceDetails
- uid: Steeltoe.Integration.Support.IMessageBuilder.PopSequenceDetails
  commentId: M:Steeltoe.Integration.Support.IMessageBuilder.PopSequenceDetails
  parent: Steeltoe.Integration.Support.IMessageBuilder
  name: PopSequenceDetails()
  nameWithType: IMessageBuilder.PopSequenceDetails()
  fullName: Steeltoe.Integration.Support.IMessageBuilder.PopSequenceDetails()
  spec.csharp:
  - uid: Steeltoe.Integration.Support.IMessageBuilder.PopSequenceDetails
    name: PopSequenceDetails
    nameWithType: IMessageBuilder.PopSequenceDetails
    fullName: Steeltoe.Integration.Support.IMessageBuilder.PopSequenceDetails
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Integration.Support.IMessageBuilder.PopSequenceDetails
    name: PopSequenceDetails
    nameWithType: IMessageBuilder.PopSequenceDetails
    fullName: Steeltoe.Integration.Support.IMessageBuilder.PopSequenceDetails
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Integration.Support.AbstractMessageBuilder.SetReplyChannel*
  commentId: Overload:Steeltoe.Integration.Support.AbstractMessageBuilder.SetReplyChannel
  name: SetReplyChannel
  nameWithType: AbstractMessageBuilder.SetReplyChannel
  fullName: Steeltoe.Integration.Support.AbstractMessageBuilder.SetReplyChannel
- uid: Steeltoe.Integration.Support.IMessageBuilder.SetReplyChannel(Steeltoe.Messaging.IMessageChannel)
  commentId: M:Steeltoe.Integration.Support.IMessageBuilder.SetReplyChannel(Steeltoe.Messaging.IMessageChannel)
  parent: Steeltoe.Integration.Support.IMessageBuilder
  name: SetReplyChannel(IMessageChannel)
  nameWithType: IMessageBuilder.SetReplyChannel(IMessageChannel)
  fullName: Steeltoe.Integration.Support.IMessageBuilder.SetReplyChannel(Steeltoe.Messaging.IMessageChannel)
  spec.csharp:
  - uid: Steeltoe.Integration.Support.IMessageBuilder.SetReplyChannel(Steeltoe.Messaging.IMessageChannel)
    name: SetReplyChannel
    nameWithType: IMessageBuilder.SetReplyChannel
    fullName: Steeltoe.Integration.Support.IMessageBuilder.SetReplyChannel
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.IMessageChannel
    name: IMessageChannel
    nameWithType: IMessageChannel
    fullName: Steeltoe.Messaging.IMessageChannel
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Integration.Support.IMessageBuilder.SetReplyChannel(Steeltoe.Messaging.IMessageChannel)
    name: SetReplyChannel
    nameWithType: IMessageBuilder.SetReplyChannel
    fullName: Steeltoe.Integration.Support.IMessageBuilder.SetReplyChannel
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.IMessageChannel
    name: IMessageChannel
    nameWithType: IMessageChannel
    fullName: Steeltoe.Messaging.IMessageChannel
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.IMessageChannel
  commentId: T:Steeltoe.Messaging.IMessageChannel
  parent: Steeltoe.Messaging
  name: IMessageChannel
  nameWithType: IMessageChannel
  fullName: Steeltoe.Messaging.IMessageChannel
- uid: Steeltoe.Integration.Support.AbstractMessageBuilder.SetReplyChannelName*
  commentId: Overload:Steeltoe.Integration.Support.AbstractMessageBuilder.SetReplyChannelName
  name: SetReplyChannelName
  nameWithType: AbstractMessageBuilder.SetReplyChannelName
  fullName: Steeltoe.Integration.Support.AbstractMessageBuilder.SetReplyChannelName
- uid: Steeltoe.Integration.Support.IMessageBuilder.SetReplyChannelName(System.String)
  commentId: M:Steeltoe.Integration.Support.IMessageBuilder.SetReplyChannelName(System.String)
  parent: Steeltoe.Integration.Support.IMessageBuilder
  isExternal: true
  name: SetReplyChannelName(String)
  nameWithType: IMessageBuilder.SetReplyChannelName(String)
  fullName: Steeltoe.Integration.Support.IMessageBuilder.SetReplyChannelName(System.String)
  spec.csharp:
  - uid: Steeltoe.Integration.Support.IMessageBuilder.SetReplyChannelName(System.String)
    name: SetReplyChannelName
    nameWithType: IMessageBuilder.SetReplyChannelName
    fullName: Steeltoe.Integration.Support.IMessageBuilder.SetReplyChannelName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Integration.Support.IMessageBuilder.SetReplyChannelName(System.String)
    name: SetReplyChannelName
    nameWithType: IMessageBuilder.SetReplyChannelName
    fullName: Steeltoe.Integration.Support.IMessageBuilder.SetReplyChannelName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Steeltoe.Integration.Support.AbstractMessageBuilder.SetErrorChannel*
  commentId: Overload:Steeltoe.Integration.Support.AbstractMessageBuilder.SetErrorChannel
  name: SetErrorChannel
  nameWithType: AbstractMessageBuilder.SetErrorChannel
  fullName: Steeltoe.Integration.Support.AbstractMessageBuilder.SetErrorChannel
- uid: Steeltoe.Integration.Support.IMessageBuilder.SetErrorChannel(Steeltoe.Messaging.IMessageChannel)
  commentId: M:Steeltoe.Integration.Support.IMessageBuilder.SetErrorChannel(Steeltoe.Messaging.IMessageChannel)
  parent: Steeltoe.Integration.Support.IMessageBuilder
  name: SetErrorChannel(IMessageChannel)
  nameWithType: IMessageBuilder.SetErrorChannel(IMessageChannel)
  fullName: Steeltoe.Integration.Support.IMessageBuilder.SetErrorChannel(Steeltoe.Messaging.IMessageChannel)
  spec.csharp:
  - uid: Steeltoe.Integration.Support.IMessageBuilder.SetErrorChannel(Steeltoe.Messaging.IMessageChannel)
    name: SetErrorChannel
    nameWithType: IMessageBuilder.SetErrorChannel
    fullName: Steeltoe.Integration.Support.IMessageBuilder.SetErrorChannel
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.IMessageChannel
    name: IMessageChannel
    nameWithType: IMessageChannel
    fullName: Steeltoe.Messaging.IMessageChannel
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Integration.Support.IMessageBuilder.SetErrorChannel(Steeltoe.Messaging.IMessageChannel)
    name: SetErrorChannel
    nameWithType: IMessageBuilder.SetErrorChannel
    fullName: Steeltoe.Integration.Support.IMessageBuilder.SetErrorChannel
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.IMessageChannel
    name: IMessageChannel
    nameWithType: IMessageChannel
    fullName: Steeltoe.Messaging.IMessageChannel
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Integration.Support.AbstractMessageBuilder.SetErrorChannelName*
  commentId: Overload:Steeltoe.Integration.Support.AbstractMessageBuilder.SetErrorChannelName
  name: SetErrorChannelName
  nameWithType: AbstractMessageBuilder.SetErrorChannelName
  fullName: Steeltoe.Integration.Support.AbstractMessageBuilder.SetErrorChannelName
- uid: Steeltoe.Integration.Support.IMessageBuilder.SetErrorChannelName(System.String)
  commentId: M:Steeltoe.Integration.Support.IMessageBuilder.SetErrorChannelName(System.String)
  parent: Steeltoe.Integration.Support.IMessageBuilder
  isExternal: true
  name: SetErrorChannelName(String)
  nameWithType: IMessageBuilder.SetErrorChannelName(String)
  fullName: Steeltoe.Integration.Support.IMessageBuilder.SetErrorChannelName(System.String)
  spec.csharp:
  - uid: Steeltoe.Integration.Support.IMessageBuilder.SetErrorChannelName(System.String)
    name: SetErrorChannelName
    nameWithType: IMessageBuilder.SetErrorChannelName
    fullName: Steeltoe.Integration.Support.IMessageBuilder.SetErrorChannelName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Integration.Support.IMessageBuilder.SetErrorChannelName(System.String)
    name: SetErrorChannelName
    nameWithType: IMessageBuilder.SetErrorChannelName
    fullName: Steeltoe.Integration.Support.IMessageBuilder.SetErrorChannelName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Integration.Support.AbstractMessageBuilder.SetSequenceNumber*
  commentId: Overload:Steeltoe.Integration.Support.AbstractMessageBuilder.SetSequenceNumber
  name: SetSequenceNumber
  nameWithType: AbstractMessageBuilder.SetSequenceNumber
  fullName: Steeltoe.Integration.Support.AbstractMessageBuilder.SetSequenceNumber
- uid: Steeltoe.Integration.Support.IMessageBuilder.SetSequenceNumber(System.Int32)
  commentId: M:Steeltoe.Integration.Support.IMessageBuilder.SetSequenceNumber(System.Int32)
  parent: Steeltoe.Integration.Support.IMessageBuilder
  isExternal: true
  name: SetSequenceNumber(Int32)
  nameWithType: IMessageBuilder.SetSequenceNumber(Int32)
  fullName: Steeltoe.Integration.Support.IMessageBuilder.SetSequenceNumber(System.Int32)
  spec.csharp:
  - uid: Steeltoe.Integration.Support.IMessageBuilder.SetSequenceNumber(System.Int32)
    name: SetSequenceNumber
    nameWithType: IMessageBuilder.SetSequenceNumber
    fullName: Steeltoe.Integration.Support.IMessageBuilder.SetSequenceNumber
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Integration.Support.IMessageBuilder.SetSequenceNumber(System.Int32)
    name: SetSequenceNumber
    nameWithType: IMessageBuilder.SetSequenceNumber
    fullName: Steeltoe.Integration.Support.IMessageBuilder.SetSequenceNumber
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Integration.Support.AbstractMessageBuilder.SetSequenceSize*
  commentId: Overload:Steeltoe.Integration.Support.AbstractMessageBuilder.SetSequenceSize
  name: SetSequenceSize
  nameWithType: AbstractMessageBuilder.SetSequenceSize
  fullName: Steeltoe.Integration.Support.AbstractMessageBuilder.SetSequenceSize
- uid: Steeltoe.Integration.Support.IMessageBuilder.SetSequenceSize(System.Int32)
  commentId: M:Steeltoe.Integration.Support.IMessageBuilder.SetSequenceSize(System.Int32)
  parent: Steeltoe.Integration.Support.IMessageBuilder
  isExternal: true
  name: SetSequenceSize(Int32)
  nameWithType: IMessageBuilder.SetSequenceSize(Int32)
  fullName: Steeltoe.Integration.Support.IMessageBuilder.SetSequenceSize(System.Int32)
  spec.csharp:
  - uid: Steeltoe.Integration.Support.IMessageBuilder.SetSequenceSize(System.Int32)
    name: SetSequenceSize
    nameWithType: IMessageBuilder.SetSequenceSize
    fullName: Steeltoe.Integration.Support.IMessageBuilder.SetSequenceSize
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Integration.Support.IMessageBuilder.SetSequenceSize(System.Int32)
    name: SetSequenceSize
    nameWithType: IMessageBuilder.SetSequenceSize
    fullName: Steeltoe.Integration.Support.IMessageBuilder.SetSequenceSize
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Integration.Support.AbstractMessageBuilder.SetPriority*
  commentId: Overload:Steeltoe.Integration.Support.AbstractMessageBuilder.SetPriority
  name: SetPriority
  nameWithType: AbstractMessageBuilder.SetPriority
  fullName: Steeltoe.Integration.Support.AbstractMessageBuilder.SetPriority
- uid: Steeltoe.Integration.Support.IMessageBuilder.SetPriority(System.Int32)
  commentId: M:Steeltoe.Integration.Support.IMessageBuilder.SetPriority(System.Int32)
  parent: Steeltoe.Integration.Support.IMessageBuilder
  isExternal: true
  name: SetPriority(Int32)
  nameWithType: IMessageBuilder.SetPriority(Int32)
  fullName: Steeltoe.Integration.Support.IMessageBuilder.SetPriority(System.Int32)
  spec.csharp:
  - uid: Steeltoe.Integration.Support.IMessageBuilder.SetPriority(System.Int32)
    name: SetPriority
    nameWithType: IMessageBuilder.SetPriority
    fullName: Steeltoe.Integration.Support.IMessageBuilder.SetPriority
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Integration.Support.IMessageBuilder.SetPriority(System.Int32)
    name: SetPriority
    nameWithType: IMessageBuilder.SetPriority
    fullName: Steeltoe.Integration.Support.IMessageBuilder.SetPriority
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Integration.Support.AbstractMessageBuilder.FilterAndCopyHeadersIfAbsent*
  commentId: Overload:Steeltoe.Integration.Support.AbstractMessageBuilder.FilterAndCopyHeadersIfAbsent
  name: FilterAndCopyHeadersIfAbsent
  nameWithType: AbstractMessageBuilder.FilterAndCopyHeadersIfAbsent
  fullName: Steeltoe.Integration.Support.AbstractMessageBuilder.FilterAndCopyHeadersIfAbsent
- uid: Steeltoe.Integration.Support.IMessageBuilder.FilterAndCopyHeadersIfAbsent(System.Collections.Generic.IDictionary{System.String,System.Object},System.String[])
  commentId: M:Steeltoe.Integration.Support.IMessageBuilder.FilterAndCopyHeadersIfAbsent(System.Collections.Generic.IDictionary{System.String,System.Object},System.String[])
  parent: Steeltoe.Integration.Support.IMessageBuilder
  isExternal: true
  name: FilterAndCopyHeadersIfAbsent(IDictionary<String, Object>, String[])
  nameWithType: IMessageBuilder.FilterAndCopyHeadersIfAbsent(IDictionary<String, Object>, String[])
  fullName: Steeltoe.Integration.Support.IMessageBuilder.FilterAndCopyHeadersIfAbsent(System.Collections.Generic.IDictionary<System.String, System.Object>, System.String[])
  nameWithType.vb: IMessageBuilder.FilterAndCopyHeadersIfAbsent(IDictionary(Of String, Object), String())
  fullName.vb: Steeltoe.Integration.Support.IMessageBuilder.FilterAndCopyHeadersIfAbsent(System.Collections.Generic.IDictionary(Of System.String, System.Object), System.String())
  name.vb: FilterAndCopyHeadersIfAbsent(IDictionary(Of String, Object), String())
  spec.csharp:
  - uid: Steeltoe.Integration.Support.IMessageBuilder.FilterAndCopyHeadersIfAbsent(System.Collections.Generic.IDictionary{System.String,System.Object},System.String[])
    name: FilterAndCopyHeadersIfAbsent
    nameWithType: IMessageBuilder.FilterAndCopyHeadersIfAbsent
    fullName: Steeltoe.Integration.Support.IMessageBuilder.FilterAndCopyHeadersIfAbsent
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Integration.Support.IMessageBuilder.FilterAndCopyHeadersIfAbsent(System.Collections.Generic.IDictionary{System.String,System.Object},System.String[])
    name: FilterAndCopyHeadersIfAbsent
    nameWithType: IMessageBuilder.FilterAndCopyHeadersIfAbsent
    fullName: Steeltoe.Integration.Support.IMessageBuilder.FilterAndCopyHeadersIfAbsent
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IDictionary{System.String,System.Object}
  commentId: T:System.Collections.Generic.IDictionary{System.String,System.Object}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IDictionary`2
  name: IDictionary<String, Object>
  nameWithType: IDictionary<String, Object>
  fullName: System.Collections.Generic.IDictionary<System.String, System.Object>
  nameWithType.vb: IDictionary(Of String, Object)
  fullName.vb: System.Collections.Generic.IDictionary(Of System.String, System.Object)
  name.vb: IDictionary(Of String, Object)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.String[]
  isExternal: true
  name: String[]
  nameWithType: String[]
  fullName: System.String[]
  nameWithType.vb: String()
  fullName.vb: System.String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Collections.Generic.IDictionary`2
  commentId: T:System.Collections.Generic.IDictionary`2
  isExternal: true
  name: IDictionary<TKey, TValue>
  nameWithType: IDictionary<TKey, TValue>
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>
  nameWithType.vb: IDictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.IDictionary(Of TKey, TValue)
  name.vb: IDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Integration.Support.AbstractMessageBuilder.Payload*
  commentId: Overload:Steeltoe.Integration.Support.AbstractMessageBuilder.Payload
  name: Payload
  nameWithType: AbstractMessageBuilder.Payload
  fullName: Steeltoe.Integration.Support.AbstractMessageBuilder.Payload
- uid: Steeltoe.Integration.Support.IMessageBuilder.Payload
  commentId: P:Steeltoe.Integration.Support.IMessageBuilder.Payload
  parent: Steeltoe.Integration.Support.IMessageBuilder
  name: Payload
  nameWithType: IMessageBuilder.Payload
  fullName: Steeltoe.Integration.Support.IMessageBuilder.Payload
- uid: Steeltoe.Integration.Support.AbstractMessageBuilder.Headers*
  commentId: Overload:Steeltoe.Integration.Support.AbstractMessageBuilder.Headers
  name: Headers
  nameWithType: AbstractMessageBuilder.Headers
  fullName: Steeltoe.Integration.Support.AbstractMessageBuilder.Headers
- uid: Steeltoe.Integration.Support.IMessageBuilder.Headers
  commentId: P:Steeltoe.Integration.Support.IMessageBuilder.Headers
  parent: Steeltoe.Integration.Support.IMessageBuilder
  name: Headers
  nameWithType: IMessageBuilder.Headers
  fullName: Steeltoe.Integration.Support.IMessageBuilder.Headers
- uid: Steeltoe.Integration.Support.AbstractMessageBuilder.SetHeader*
  commentId: Overload:Steeltoe.Integration.Support.AbstractMessageBuilder.SetHeader
  name: SetHeader
  nameWithType: AbstractMessageBuilder.SetHeader
  fullName: Steeltoe.Integration.Support.AbstractMessageBuilder.SetHeader
- uid: Steeltoe.Integration.Support.IMessageBuilder.SetHeader(System.String,System.Object)
  commentId: M:Steeltoe.Integration.Support.IMessageBuilder.SetHeader(System.String,System.Object)
  parent: Steeltoe.Integration.Support.IMessageBuilder
  isExternal: true
  name: SetHeader(String, Object)
  nameWithType: IMessageBuilder.SetHeader(String, Object)
  fullName: Steeltoe.Integration.Support.IMessageBuilder.SetHeader(System.String, System.Object)
  spec.csharp:
  - uid: Steeltoe.Integration.Support.IMessageBuilder.SetHeader(System.String,System.Object)
    name: SetHeader
    nameWithType: IMessageBuilder.SetHeader
    fullName: Steeltoe.Integration.Support.IMessageBuilder.SetHeader
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Integration.Support.IMessageBuilder.SetHeader(System.String,System.Object)
    name: SetHeader
    nameWithType: IMessageBuilder.SetHeader
    fullName: Steeltoe.Integration.Support.IMessageBuilder.SetHeader
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Integration.Support.AbstractMessageBuilder.SetHeaderIfAbsent*
  commentId: Overload:Steeltoe.Integration.Support.AbstractMessageBuilder.SetHeaderIfAbsent
  name: SetHeaderIfAbsent
  nameWithType: AbstractMessageBuilder.SetHeaderIfAbsent
  fullName: Steeltoe.Integration.Support.AbstractMessageBuilder.SetHeaderIfAbsent
- uid: Steeltoe.Integration.Support.IMessageBuilder.SetHeaderIfAbsent(System.String,System.Object)
  commentId: M:Steeltoe.Integration.Support.IMessageBuilder.SetHeaderIfAbsent(System.String,System.Object)
  parent: Steeltoe.Integration.Support.IMessageBuilder
  isExternal: true
  name: SetHeaderIfAbsent(String, Object)
  nameWithType: IMessageBuilder.SetHeaderIfAbsent(String, Object)
  fullName: Steeltoe.Integration.Support.IMessageBuilder.SetHeaderIfAbsent(System.String, System.Object)
  spec.csharp:
  - uid: Steeltoe.Integration.Support.IMessageBuilder.SetHeaderIfAbsent(System.String,System.Object)
    name: SetHeaderIfAbsent
    nameWithType: IMessageBuilder.SetHeaderIfAbsent
    fullName: Steeltoe.Integration.Support.IMessageBuilder.SetHeaderIfAbsent
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Integration.Support.IMessageBuilder.SetHeaderIfAbsent(System.String,System.Object)
    name: SetHeaderIfAbsent
    nameWithType: IMessageBuilder.SetHeaderIfAbsent
    fullName: Steeltoe.Integration.Support.IMessageBuilder.SetHeaderIfAbsent
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Integration.Support.AbstractMessageBuilder.RemoveHeaders*
  commentId: Overload:Steeltoe.Integration.Support.AbstractMessageBuilder.RemoveHeaders
  name: RemoveHeaders
  nameWithType: AbstractMessageBuilder.RemoveHeaders
  fullName: Steeltoe.Integration.Support.AbstractMessageBuilder.RemoveHeaders
- uid: Steeltoe.Integration.Support.IMessageBuilder.RemoveHeaders(System.String[])
  commentId: M:Steeltoe.Integration.Support.IMessageBuilder.RemoveHeaders(System.String[])
  parent: Steeltoe.Integration.Support.IMessageBuilder
  isExternal: true
  name: RemoveHeaders(String[])
  nameWithType: IMessageBuilder.RemoveHeaders(String[])
  fullName: Steeltoe.Integration.Support.IMessageBuilder.RemoveHeaders(System.String[])
  nameWithType.vb: IMessageBuilder.RemoveHeaders(String())
  fullName.vb: Steeltoe.Integration.Support.IMessageBuilder.RemoveHeaders(System.String())
  name.vb: RemoveHeaders(String())
  spec.csharp:
  - uid: Steeltoe.Integration.Support.IMessageBuilder.RemoveHeaders(System.String[])
    name: RemoveHeaders
    nameWithType: IMessageBuilder.RemoveHeaders
    fullName: Steeltoe.Integration.Support.IMessageBuilder.RemoveHeaders
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Integration.Support.IMessageBuilder.RemoveHeaders(System.String[])
    name: RemoveHeaders
    nameWithType: IMessageBuilder.RemoveHeaders
    fullName: Steeltoe.Integration.Support.IMessageBuilder.RemoveHeaders
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Integration.Support.AbstractMessageBuilder.RemoveHeader*
  commentId: Overload:Steeltoe.Integration.Support.AbstractMessageBuilder.RemoveHeader
  name: RemoveHeader
  nameWithType: AbstractMessageBuilder.RemoveHeader
  fullName: Steeltoe.Integration.Support.AbstractMessageBuilder.RemoveHeader
- uid: Steeltoe.Integration.Support.IMessageBuilder.RemoveHeader(System.String)
  commentId: M:Steeltoe.Integration.Support.IMessageBuilder.RemoveHeader(System.String)
  parent: Steeltoe.Integration.Support.IMessageBuilder
  isExternal: true
  name: RemoveHeader(String)
  nameWithType: IMessageBuilder.RemoveHeader(String)
  fullName: Steeltoe.Integration.Support.IMessageBuilder.RemoveHeader(System.String)
  spec.csharp:
  - uid: Steeltoe.Integration.Support.IMessageBuilder.RemoveHeader(System.String)
    name: RemoveHeader
    nameWithType: IMessageBuilder.RemoveHeader
    fullName: Steeltoe.Integration.Support.IMessageBuilder.RemoveHeader
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Integration.Support.IMessageBuilder.RemoveHeader(System.String)
    name: RemoveHeader
    nameWithType: IMessageBuilder.RemoveHeader
    fullName: Steeltoe.Integration.Support.IMessageBuilder.RemoveHeader
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Integration.Support.AbstractMessageBuilder.CopyHeaders*
  commentId: Overload:Steeltoe.Integration.Support.AbstractMessageBuilder.CopyHeaders
  name: CopyHeaders
  nameWithType: AbstractMessageBuilder.CopyHeaders
  fullName: Steeltoe.Integration.Support.AbstractMessageBuilder.CopyHeaders
- uid: Steeltoe.Integration.Support.IMessageBuilder.CopyHeaders(System.Collections.Generic.IDictionary{System.String,System.Object})
  commentId: M:Steeltoe.Integration.Support.IMessageBuilder.CopyHeaders(System.Collections.Generic.IDictionary{System.String,System.Object})
  parent: Steeltoe.Integration.Support.IMessageBuilder
  isExternal: true
  name: CopyHeaders(IDictionary<String, Object>)
  nameWithType: IMessageBuilder.CopyHeaders(IDictionary<String, Object>)
  fullName: Steeltoe.Integration.Support.IMessageBuilder.CopyHeaders(System.Collections.Generic.IDictionary<System.String, System.Object>)
  nameWithType.vb: IMessageBuilder.CopyHeaders(IDictionary(Of String, Object))
  fullName.vb: Steeltoe.Integration.Support.IMessageBuilder.CopyHeaders(System.Collections.Generic.IDictionary(Of System.String, System.Object))
  name.vb: CopyHeaders(IDictionary(Of String, Object))
  spec.csharp:
  - uid: Steeltoe.Integration.Support.IMessageBuilder.CopyHeaders(System.Collections.Generic.IDictionary{System.String,System.Object})
    name: CopyHeaders
    nameWithType: IMessageBuilder.CopyHeaders
    fullName: Steeltoe.Integration.Support.IMessageBuilder.CopyHeaders
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Integration.Support.IMessageBuilder.CopyHeaders(System.Collections.Generic.IDictionary{System.String,System.Object})
    name: CopyHeaders
    nameWithType: IMessageBuilder.CopyHeaders
    fullName: Steeltoe.Integration.Support.IMessageBuilder.CopyHeaders
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Integration.Support.AbstractMessageBuilder.CopyHeadersIfAbsent*
  commentId: Overload:Steeltoe.Integration.Support.AbstractMessageBuilder.CopyHeadersIfAbsent
  name: CopyHeadersIfAbsent
  nameWithType: AbstractMessageBuilder.CopyHeadersIfAbsent
  fullName: Steeltoe.Integration.Support.AbstractMessageBuilder.CopyHeadersIfAbsent
- uid: Steeltoe.Integration.Support.IMessageBuilder.CopyHeadersIfAbsent(System.Collections.Generic.IDictionary{System.String,System.Object})
  commentId: M:Steeltoe.Integration.Support.IMessageBuilder.CopyHeadersIfAbsent(System.Collections.Generic.IDictionary{System.String,System.Object})
  parent: Steeltoe.Integration.Support.IMessageBuilder
  isExternal: true
  name: CopyHeadersIfAbsent(IDictionary<String, Object>)
  nameWithType: IMessageBuilder.CopyHeadersIfAbsent(IDictionary<String, Object>)
  fullName: Steeltoe.Integration.Support.IMessageBuilder.CopyHeadersIfAbsent(System.Collections.Generic.IDictionary<System.String, System.Object>)
  nameWithType.vb: IMessageBuilder.CopyHeadersIfAbsent(IDictionary(Of String, Object))
  fullName.vb: Steeltoe.Integration.Support.IMessageBuilder.CopyHeadersIfAbsent(System.Collections.Generic.IDictionary(Of System.String, System.Object))
  name.vb: CopyHeadersIfAbsent(IDictionary(Of String, Object))
  spec.csharp:
  - uid: Steeltoe.Integration.Support.IMessageBuilder.CopyHeadersIfAbsent(System.Collections.Generic.IDictionary{System.String,System.Object})
    name: CopyHeadersIfAbsent
    nameWithType: IMessageBuilder.CopyHeadersIfAbsent
    fullName: Steeltoe.Integration.Support.IMessageBuilder.CopyHeadersIfAbsent
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Integration.Support.IMessageBuilder.CopyHeadersIfAbsent(System.Collections.Generic.IDictionary{System.String,System.Object})
    name: CopyHeadersIfAbsent
    nameWithType: IMessageBuilder.CopyHeadersIfAbsent
    fullName: Steeltoe.Integration.Support.IMessageBuilder.CopyHeadersIfAbsent
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Integration.Support.AbstractMessageBuilder.Build*
  commentId: Overload:Steeltoe.Integration.Support.AbstractMessageBuilder.Build
  name: Build
  nameWithType: AbstractMessageBuilder.Build
  fullName: Steeltoe.Integration.Support.AbstractMessageBuilder.Build
- uid: Steeltoe.Integration.Support.IMessageBuilder.Build
  commentId: M:Steeltoe.Integration.Support.IMessageBuilder.Build
  parent: Steeltoe.Integration.Support.IMessageBuilder
  name: Build()
  nameWithType: IMessageBuilder.Build()
  fullName: Steeltoe.Integration.Support.IMessageBuilder.Build()
  spec.csharp:
  - uid: Steeltoe.Integration.Support.IMessageBuilder.Build
    name: Build
    nameWithType: IMessageBuilder.Build
    fullName: Steeltoe.Integration.Support.IMessageBuilder.Build
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Integration.Support.IMessageBuilder.Build
    name: Build
    nameWithType: IMessageBuilder.Build
    fullName: Steeltoe.Integration.Support.IMessageBuilder.Build
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Integration.Support.AbstractMessageBuilder.SequenceDetails*
  commentId: Overload:Steeltoe.Integration.Support.AbstractMessageBuilder.SequenceDetails
  name: SequenceDetails
  nameWithType: AbstractMessageBuilder.SequenceDetails
  fullName: Steeltoe.Integration.Support.AbstractMessageBuilder.SequenceDetails
- uid: System.Collections.Generic.List{System.Collections.Generic.List{System.Object}}
  commentId: T:System.Collections.Generic.List{System.Collections.Generic.List{System.Object}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<List<Object>>
  nameWithType: List<List<Object>>
  fullName: System.Collections.Generic.List<System.Collections.Generic.List<System.Object>>
  nameWithType.vb: List(Of List(Of Object))
  fullName.vb: System.Collections.Generic.List(Of System.Collections.Generic.List(Of System.Object))
  name.vb: List(Of List(Of Object))
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Integration.Support.AbstractMessageBuilder.CorrelationId*
  commentId: Overload:Steeltoe.Integration.Support.AbstractMessageBuilder.CorrelationId
  name: CorrelationId
  nameWithType: AbstractMessageBuilder.CorrelationId
  fullName: Steeltoe.Integration.Support.AbstractMessageBuilder.CorrelationId
- uid: Steeltoe.Integration.Support.AbstractMessageBuilder.SequenceNumber*
  commentId: Overload:Steeltoe.Integration.Support.AbstractMessageBuilder.SequenceNumber
  name: SequenceNumber
  nameWithType: AbstractMessageBuilder.SequenceNumber
  fullName: Steeltoe.Integration.Support.AbstractMessageBuilder.SequenceNumber
- uid: Steeltoe.Integration.Support.AbstractMessageBuilder.SequenceSize*
  commentId: Overload:Steeltoe.Integration.Support.AbstractMessageBuilder.SequenceSize
  name: SequenceSize
  nameWithType: AbstractMessageBuilder.SequenceSize
  fullName: Steeltoe.Integration.Support.AbstractMessageBuilder.SequenceSize
- uid: Steeltoe.Integration.Support.AbstractMessageBuilder.ContainsReadOnly*
  commentId: Overload:Steeltoe.Integration.Support.AbstractMessageBuilder.ContainsReadOnly
  name: ContainsReadOnly
  nameWithType: AbstractMessageBuilder.ContainsReadOnly
  fullName: Steeltoe.Integration.Support.AbstractMessageBuilder.ContainsReadOnly
- uid: Steeltoe.Messaging.IMessageHeaders
  commentId: T:Steeltoe.Messaging.IMessageHeaders
  parent: Steeltoe.Messaging
  name: IMessageHeaders
  nameWithType: IMessageHeaders
  fullName: Steeltoe.Messaging.IMessageHeaders
