### YamlMime:ManagedReference
items:
- uid: Steeltoe.Connector.MySql.EFCore.MySqlDbContextOptionsExtensions
  commentId: T:Steeltoe.Connector.MySql.EFCore.MySqlDbContextOptionsExtensions
  id: MySqlDbContextOptionsExtensions
  parent: Steeltoe.Connector.MySql.EFCore
  children:
  - Steeltoe.Connector.MySql.EFCore.MySqlDbContextOptionsExtensions.UseMySql(DbContextOptionsBuilder,IConfiguration,System.Object)
  - Steeltoe.Connector.MySql.EFCore.MySqlDbContextOptionsExtensions.UseMySql(DbContextOptionsBuilder,IConfiguration,System.Object,System.Object)
  - Steeltoe.Connector.MySql.EFCore.MySqlDbContextOptionsExtensions.UseMySql(DbContextOptionsBuilder,IConfiguration,System.String,System.Object)
  - Steeltoe.Connector.MySql.EFCore.MySqlDbContextOptionsExtensions.UseMySql(DbContextOptionsBuilder,IConfiguration,System.String,System.Object,System.Object)
  - Steeltoe.Connector.MySql.EFCore.MySqlDbContextOptionsExtensions.UseMySql``1(DbContextOptionsBuilder{``0},IConfiguration,System.Object,System.Object)
  - Steeltoe.Connector.MySql.EFCore.MySqlDbContextOptionsExtensions.UseMySql``1(DbContextOptionsBuilder{``0},IConfiguration,System.String,System.Object,System.Object)
  langs:
  - csharp
  - vb
  name: MySqlDbContextOptionsExtensions
  nameWithType: MySqlDbContextOptionsExtensions
  fullName: Steeltoe.Connector.MySql.EFCore.MySqlDbContextOptionsExtensions
  type: Class
  source:
    remote:
      path: src/Connectors/src/Connector.EFCore/MySqlDbContextOptionsExtensions.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: MySqlDbContextOptionsExtensions
    path: ../Steeltoe/src/Connectors/src/Connector.EFCore/MySqlDbContextOptionsExtensions.cs
    startLine: 14
  assemblies:
  - Steeltoe.Connector.EFCore
  namespace: Steeltoe.Connector.MySql.EFCore
  syntax:
    content: public static class MySqlDbContextOptionsExtensions
    content.vb: Public Module MySqlDbContextOptionsExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Steeltoe.Connector.MySql.EFCore.MySqlDbContextOptionsExtensions.UseMySql(DbContextOptionsBuilder,IConfiguration,System.Object)
  commentId: M:Steeltoe.Connector.MySql.EFCore.MySqlDbContextOptionsExtensions.UseMySql(DbContextOptionsBuilder,IConfiguration,System.Object)
  id: UseMySql(DbContextOptionsBuilder,IConfiguration,System.Object)
  isExtensionMethod: true
  parent: Steeltoe.Connector.MySql.EFCore.MySqlDbContextOptionsExtensions
  langs:
  - csharp
  - vb
  name: UseMySql(DbContextOptionsBuilder, IConfiguration, Object)
  nameWithType: MySqlDbContextOptionsExtensions.UseMySql(DbContextOptionsBuilder, IConfiguration, Object)
  fullName: Steeltoe.Connector.MySql.EFCore.MySqlDbContextOptionsExtensions.UseMySql(DbContextOptionsBuilder, IConfiguration, System.Object)
  type: Method
  source:
    remote:
      path: src/Connectors/src/Connector.EFCore/MySqlDbContextOptionsExtensions.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: UseMySql
    path: ../Steeltoe/src/Connectors/src/Connector.EFCore/MySqlDbContextOptionsExtensions.cs
    startLine: 27
  assemblies:
  - Steeltoe.Connector.EFCore
  namespace: Steeltoe.Connector.MySql.EFCore
  summary: "\nConfigure Entity Framework Core to use a MySQL database\n"
  remarks: "\nWhen used with EF Core 5.0, this method may result in the use of ServerVersion.AutoDetect(), which opens an extra connection to the server.<p></p>\nPass in a ServerVersion to avoid the extra DB Connection - see https://github.com/PomeloFoundation/Pomelo.EntityFrameworkCore.MySql/issues/1088#issuecomment-726091533\n"
  example: []
  syntax:
    content: public static DbContextOptionsBuilder UseMySql(this DbContextOptionsBuilder optionsBuilder, IConfiguration config, object mySqlOptionsAction = null)
    parameters:
    - id: optionsBuilder
      type: DbContextOptionsBuilder
      description: <see cref="!:DbContextOptionsBuilder"></see>
    - id: config
      type: IConfiguration
      description: Application configuration
    - id: mySqlOptionsAction
      type: System.Object
      description: An action for customizing the MySqlDbContextOptionsBuilder
    return:
      type: DbContextOptionsBuilder
      description: <see cref="!:DbContextOptionsBuilder"></see>, configured to use MySQL
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function UseMySql(optionsBuilder As DbContextOptionsBuilder, config As IConfiguration, mySqlOptionsAction As Object = Nothing) As DbContextOptionsBuilder
  overload: Steeltoe.Connector.MySql.EFCore.MySqlDbContextOptionsExtensions.UseMySql*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Steeltoe.Connector.MySql.EFCore.MySqlDbContextOptionsExtensions.UseMySql(DbContextOptionsBuilder,IConfiguration,System.Object,System.Object)
  commentId: M:Steeltoe.Connector.MySql.EFCore.MySqlDbContextOptionsExtensions.UseMySql(DbContextOptionsBuilder,IConfiguration,System.Object,System.Object)
  id: UseMySql(DbContextOptionsBuilder,IConfiguration,System.Object,System.Object)
  isExtensionMethod: true
  parent: Steeltoe.Connector.MySql.EFCore.MySqlDbContextOptionsExtensions
  langs:
  - csharp
  - vb
  name: UseMySql(DbContextOptionsBuilder, IConfiguration, Object, Object)
  nameWithType: MySqlDbContextOptionsExtensions.UseMySql(DbContextOptionsBuilder, IConfiguration, Object, Object)
  fullName: Steeltoe.Connector.MySql.EFCore.MySqlDbContextOptionsExtensions.UseMySql(DbContextOptionsBuilder, IConfiguration, System.Object, System.Object)
  type: Method
  source:
    remote:
      path: src/Connectors/src/Connector.EFCore/MySqlDbContextOptionsExtensions.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: UseMySql
    path: ../Steeltoe/src/Connectors/src/Connector.EFCore/MySqlDbContextOptionsExtensions.cs
    startLine: 38
  assemblies:
  - Steeltoe.Connector.EFCore
  namespace: Steeltoe.Connector.MySql.EFCore
  summary: "\nConfigure Entity Framework Core to use a MySQL database\n"
  example: []
  syntax:
    content: public static DbContextOptionsBuilder UseMySql(this DbContextOptionsBuilder optionsBuilder, IConfiguration config, object serverVersion, object mySqlOptionsAction = null)
    parameters:
    - id: optionsBuilder
      type: DbContextOptionsBuilder
      description: <see cref="!:DbContextOptionsBuilder"></see>
    - id: config
      type: IConfiguration
      description: Application configuration
    - id: serverVersion
      type: System.Object
      description: The version of MySQL/MariaDB to connect to (introduced in EF Core 5.0)
    - id: mySqlOptionsAction
      type: System.Object
      description: An action for customizing the MySqlDbContextOptionsBuilder
    return:
      type: DbContextOptionsBuilder
      description: <see cref="!:DbContextOptionsBuilder"></see>, configured to use MySQL
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function UseMySql(optionsBuilder As DbContextOptionsBuilder, config As IConfiguration, serverVersion As Object, mySqlOptionsAction As Object = Nothing) As DbContextOptionsBuilder
  overload: Steeltoe.Connector.MySql.EFCore.MySqlDbContextOptionsExtensions.UseMySql*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Steeltoe.Connector.MySql.EFCore.MySqlDbContextOptionsExtensions.UseMySql(DbContextOptionsBuilder,IConfiguration,System.String,System.Object)
  commentId: M:Steeltoe.Connector.MySql.EFCore.MySqlDbContextOptionsExtensions.UseMySql(DbContextOptionsBuilder,IConfiguration,System.String,System.Object)
  id: UseMySql(DbContextOptionsBuilder,IConfiguration,System.String,System.Object)
  isExtensionMethod: true
  parent: Steeltoe.Connector.MySql.EFCore.MySqlDbContextOptionsExtensions
  langs:
  - csharp
  - vb
  name: UseMySql(DbContextOptionsBuilder, IConfiguration, String, Object)
  nameWithType: MySqlDbContextOptionsExtensions.UseMySql(DbContextOptionsBuilder, IConfiguration, String, Object)
  fullName: Steeltoe.Connector.MySql.EFCore.MySqlDbContextOptionsExtensions.UseMySql(DbContextOptionsBuilder, IConfiguration, System.String, System.Object)
  type: Method
  source:
    remote:
      path: src/Connectors/src/Connector.EFCore/MySqlDbContextOptionsExtensions.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: UseMySql
    path: ../Steeltoe/src/Connectors/src/Connector.EFCore/MySqlDbContextOptionsExtensions.cs
    startLine: 67
  assemblies:
  - Steeltoe.Connector.EFCore
  namespace: Steeltoe.Connector.MySql.EFCore
  summary: "\nConfigure Entity Framework Core to use a MySQL database identified by a named service binding\n"
  remarks: "\nWhen used with EF Core 5.0, this method may result in the use of ServerVersion.AutoDetect(), which opens an extra connection to the server.<p></p>\nPass in a ServerVersion to avoid the extra DB Connection - see https://github.com/PomeloFoundation/Pomelo.EntityFrameworkCore.MySql/issues/1088#issuecomment-726091533\n"
  example: []
  syntax:
    content: public static DbContextOptionsBuilder UseMySql(this DbContextOptionsBuilder optionsBuilder, IConfiguration config, string serviceName, object mySqlOptionsAction = null)
    parameters:
    - id: optionsBuilder
      type: DbContextOptionsBuilder
      description: <see cref="!:DbContextOptionsBuilder"></see>
    - id: config
      type: IConfiguration
      description: Application configuration
    - id: serviceName
      type: System.String
      description: The name of the service binding to use
    - id: mySqlOptionsAction
      type: System.Object
      description: An action for customizing the MySqlDbContextOptionsBuilder
    return:
      type: DbContextOptionsBuilder
      description: <see cref="!:DbContextOptionsBuilder"></see>, configured to use MySQL
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function UseMySql(optionsBuilder As DbContextOptionsBuilder, config As IConfiguration, serviceName As String, mySqlOptionsAction As Object = Nothing) As DbContextOptionsBuilder
  overload: Steeltoe.Connector.MySql.EFCore.MySqlDbContextOptionsExtensions.UseMySql*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Steeltoe.Connector.MySql.EFCore.MySqlDbContextOptionsExtensions.UseMySql(DbContextOptionsBuilder,IConfiguration,System.String,System.Object,System.Object)
  commentId: M:Steeltoe.Connector.MySql.EFCore.MySqlDbContextOptionsExtensions.UseMySql(DbContextOptionsBuilder,IConfiguration,System.String,System.Object,System.Object)
  id: UseMySql(DbContextOptionsBuilder,IConfiguration,System.String,System.Object,System.Object)
  isExtensionMethod: true
  parent: Steeltoe.Connector.MySql.EFCore.MySqlDbContextOptionsExtensions
  langs:
  - csharp
  - vb
  name: UseMySql(DbContextOptionsBuilder, IConfiguration, String, Object, Object)
  nameWithType: MySqlDbContextOptionsExtensions.UseMySql(DbContextOptionsBuilder, IConfiguration, String, Object, Object)
  fullName: Steeltoe.Connector.MySql.EFCore.MySqlDbContextOptionsExtensions.UseMySql(DbContextOptionsBuilder, IConfiguration, System.String, System.Object, System.Object)
  type: Method
  source:
    remote:
      path: src/Connectors/src/Connector.EFCore/MySqlDbContextOptionsExtensions.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: UseMySql
    path: ../Steeltoe/src/Connectors/src/Connector.EFCore/MySqlDbContextOptionsExtensions.cs
    startLine: 79
  assemblies:
  - Steeltoe.Connector.EFCore
  namespace: Steeltoe.Connector.MySql.EFCore
  summary: "\nConfigure Entity Framework Core to use a MySQL database identified by a named service binding\n"
  example: []
  syntax:
    content: public static DbContextOptionsBuilder UseMySql(this DbContextOptionsBuilder optionsBuilder, IConfiguration config, string serviceName, object serverVersion, object mySqlOptionsAction = null)
    parameters:
    - id: optionsBuilder
      type: DbContextOptionsBuilder
      description: <see cref="!:DbContextOptionsBuilder"></see>
    - id: config
      type: IConfiguration
      description: Application configuration
    - id: serviceName
      type: System.String
      description: The name of the service binding to use
    - id: serverVersion
      type: System.Object
      description: The version of MySQL/MariaDB to connect to (introduced in EF Core 5.0)
    - id: mySqlOptionsAction
      type: System.Object
      description: An action for customizing the MySqlDbContextOptionsBuilder
    return:
      type: DbContextOptionsBuilder
      description: <see cref="!:DbContextOptionsBuilder"></see>, configured to use MySQL
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function UseMySql(optionsBuilder As DbContextOptionsBuilder, config As IConfiguration, serviceName As String, serverVersion As Object, mySqlOptionsAction As Object = Nothing) As DbContextOptionsBuilder
  overload: Steeltoe.Connector.MySql.EFCore.MySqlDbContextOptionsExtensions.UseMySql*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Steeltoe.Connector.MySql.EFCore.MySqlDbContextOptionsExtensions.UseMySql``1(DbContextOptionsBuilder{``0},IConfiguration,System.Object,System.Object)
  commentId: M:Steeltoe.Connector.MySql.EFCore.MySqlDbContextOptionsExtensions.UseMySql``1(DbContextOptionsBuilder{``0},IConfiguration,System.Object,System.Object)
  id: UseMySql``1(DbContextOptionsBuilder{``0},IConfiguration,System.Object,System.Object)
  isExtensionMethod: true
  parent: Steeltoe.Connector.MySql.EFCore.MySqlDbContextOptionsExtensions
  langs:
  - csharp
  - vb
  name: UseMySql<TContext>(DbContextOptionsBuilder<TContext>, IConfiguration, Object, Object)
  nameWithType: MySqlDbContextOptionsExtensions.UseMySql<TContext>(DbContextOptionsBuilder<TContext>, IConfiguration, Object, Object)
  fullName: Steeltoe.Connector.MySql.EFCore.MySqlDbContextOptionsExtensions.UseMySql<TContext>(DbContextOptionsBuilder<TContext>, IConfiguration, System.Object, System.Object)
  type: Method
  source:
    remote:
      path: src/Connectors/src/Connector.EFCore/MySqlDbContextOptionsExtensions.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: UseMySql
    path: ../Steeltoe/src/Connectors/src/Connector.EFCore/MySqlDbContextOptionsExtensions.cs
    startLine: 110
  assemblies:
  - Steeltoe.Connector.EFCore
  namespace: Steeltoe.Connector.MySql.EFCore
  summary: "\nConfigure Entity Framework Core to use a MySQL database\n"
  example: []
  syntax:
    content: >-
      public static DbContextOptionsBuilder<TContext> UseMySql<TContext>(this DbContextOptionsBuilder<TContext> optionsBuilder, IConfiguration config, object mySqlOptionsAction = null, object serverVersion = null)

          where TContext : DbContext
    parameters:
    - id: optionsBuilder
      type: DbContextOptionsBuilder{{TContext}}
      description: <see cref="!:DbContextOptionsBuilder"></see>
    - id: config
      type: IConfiguration
      description: Application configuration
    - id: mySqlOptionsAction
      type: System.Object
      description: An action for customizing the MySqlDbContextOptionsBuilder
    - id: serverVersion
      type: System.Object
      description: The version of MySQL/MariaDB to connect to (introduced in EF Core 5.0)
    typeParameters:
    - id: TContext
      description: Type of <see cref="!:DbContext"></see>
    return:
      type: DbContextOptionsBuilder{{TContext}}
      description: <see cref="!:DbContextOptionsBuilder"></see>, configured to use MySQL
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function UseMySql(Of TContext As DbContext)(optionsBuilder As DbContextOptionsBuilder(Of TContext), config As IConfiguration, mySqlOptionsAction As Object = Nothing, serverVersion As Object = Nothing) As DbContextOptionsBuilder(Of TContext)
  overload: Steeltoe.Connector.MySql.EFCore.MySqlDbContextOptionsExtensions.UseMySql*
  nameWithType.vb: MySqlDbContextOptionsExtensions.UseMySql(Of TContext)(DbContextOptionsBuilder(Of TContext), IConfiguration, Object, Object)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Steeltoe.Connector.MySql.EFCore.MySqlDbContextOptionsExtensions.UseMySql(Of TContext)(DbContextOptionsBuilder(Of TContext), IConfiguration, System.Object, System.Object)
  name.vb: UseMySql(Of TContext)(DbContextOptionsBuilder(Of TContext), IConfiguration, Object, Object)
- uid: Steeltoe.Connector.MySql.EFCore.MySqlDbContextOptionsExtensions.UseMySql``1(DbContextOptionsBuilder{``0},IConfiguration,System.String,System.Object,System.Object)
  commentId: M:Steeltoe.Connector.MySql.EFCore.MySqlDbContextOptionsExtensions.UseMySql``1(DbContextOptionsBuilder{``0},IConfiguration,System.String,System.Object,System.Object)
  id: UseMySql``1(DbContextOptionsBuilder{``0},IConfiguration,System.String,System.Object,System.Object)
  isExtensionMethod: true
  parent: Steeltoe.Connector.MySql.EFCore.MySqlDbContextOptionsExtensions
  langs:
  - csharp
  - vb
  name: UseMySql<TContext>(DbContextOptionsBuilder<TContext>, IConfiguration, String, Object, Object)
  nameWithType: MySqlDbContextOptionsExtensions.UseMySql<TContext>(DbContextOptionsBuilder<TContext>, IConfiguration, String, Object, Object)
  fullName: Steeltoe.Connector.MySql.EFCore.MySqlDbContextOptionsExtensions.UseMySql<TContext>(DbContextOptionsBuilder<TContext>, IConfiguration, System.String, System.Object, System.Object)
  type: Method
  source:
    remote:
      path: src/Connectors/src/Connector.EFCore/MySqlDbContextOptionsExtensions.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: UseMySql
    path: ../Steeltoe/src/Connectors/src/Connector.EFCore/MySqlDbContextOptionsExtensions.cs
    startLine: 138
  assemblies:
  - Steeltoe.Connector.EFCore
  namespace: Steeltoe.Connector.MySql.EFCore
  summary: "\nConfigure Entity Framework Core to use a MySQL database identified by a named service binding\n"
  example: []
  syntax:
    content: >-
      public static DbContextOptionsBuilder<TContext> UseMySql<TContext>(this DbContextOptionsBuilder<TContext> optionsBuilder, IConfiguration config, string serviceName, object mySqlOptionsAction = null, object serverVersion = null)

          where TContext : DbContext
    parameters:
    - id: optionsBuilder
      type: DbContextOptionsBuilder{{TContext}}
      description: <see cref="!:DbContextOptionsBuilder"></see>
    - id: config
      type: IConfiguration
      description: Application configuration
    - id: serviceName
      type: System.String
      description: The name of the service binding to use
    - id: mySqlOptionsAction
      type: System.Object
      description: An action for customizing the MySqlDbContextOptionsBuilder
    - id: serverVersion
      type: System.Object
      description: The version of MySQL/MariaDB to connect to (introduced in EF Core 5.0)
    typeParameters:
    - id: TContext
      description: Type of <see cref="!:DbContext"></see>
    return:
      type: DbContextOptionsBuilder{{TContext}}
      description: <see cref="!:DbContextOptionsBuilder"></see>, configured to use MySQL
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function UseMySql(Of TContext As DbContext)(optionsBuilder As DbContextOptionsBuilder(Of TContext), config As IConfiguration, serviceName As String, mySqlOptionsAction As Object = Nothing, serverVersion As Object = Nothing) As DbContextOptionsBuilder(Of TContext)
  overload: Steeltoe.Connector.MySql.EFCore.MySqlDbContextOptionsExtensions.UseMySql*
  nameWithType.vb: MySqlDbContextOptionsExtensions.UseMySql(Of TContext)(DbContextOptionsBuilder(Of TContext), IConfiguration, String, Object, Object)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Steeltoe.Connector.MySql.EFCore.MySqlDbContextOptionsExtensions.UseMySql(Of TContext)(DbContextOptionsBuilder(Of TContext), IConfiguration, System.String, System.Object, System.Object)
  name.vb: UseMySql(Of TContext)(DbContextOptionsBuilder(Of TContext), IConfiguration, String, Object, Object)
references:
- uid: Steeltoe.Connector.MySql.EFCore
  commentId: N:Steeltoe.Connector.MySql.EFCore
  name: Steeltoe.Connector.MySql.EFCore
  nameWithType: Steeltoe.Connector.MySql.EFCore
  fullName: Steeltoe.Connector.MySql.EFCore
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Steeltoe.Connector.MySql.EFCore.MySqlDbContextOptionsExtensions.UseMySql*
  commentId: Overload:Steeltoe.Connector.MySql.EFCore.MySqlDbContextOptionsExtensions.UseMySql
  name: UseMySql
  nameWithType: MySqlDbContextOptionsExtensions.UseMySql
  fullName: Steeltoe.Connector.MySql.EFCore.MySqlDbContextOptionsExtensions.UseMySql
- uid: DbContextOptionsBuilder
  isExternal: true
  name: DbContextOptionsBuilder
  nameWithType: DbContextOptionsBuilder
  fullName: DbContextOptionsBuilder
- uid: IConfiguration
  isExternal: true
  name: IConfiguration
  nameWithType: IConfiguration
  fullName: IConfiguration
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: DbContextOptionsBuilder{{TContext}}
  commentId: '!:DbContextOptionsBuilder{``0}'
  definition: DbContextOptionsBuilder`1
  name: DbContextOptionsBuilder<TContext>
  nameWithType: DbContextOptionsBuilder<TContext>
  fullName: DbContextOptionsBuilder<TContext>
  nameWithType.vb: DbContextOptionsBuilder(Of TContext)
  fullName.vb: DbContextOptionsBuilder(Of TContext)
  name.vb: DbContextOptionsBuilder(Of TContext)
  spec.csharp:
  - uid: DbContextOptionsBuilder`1
    name: DbContextOptionsBuilder
    nameWithType: DbContextOptionsBuilder
    fullName: DbContextOptionsBuilder
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TContext
    nameWithType: TContext
    fullName: TContext
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: DbContextOptionsBuilder`1
    name: DbContextOptionsBuilder
    nameWithType: DbContextOptionsBuilder
    fullName: DbContextOptionsBuilder
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TContext
    nameWithType: TContext
    fullName: TContext
  - name: )
    nameWithType: )
    fullName: )
- uid: DbContextOptionsBuilder`1
  isExternal: true
  name: DbContextOptionsBuilder<>
  nameWithType: DbContextOptionsBuilder<>
  fullName: DbContextOptionsBuilder<>
  nameWithType.vb: DbContextOptionsBuilder(Of )
  fullName.vb: DbContextOptionsBuilder(Of )
  name.vb: DbContextOptionsBuilder(Of )
  spec.csharp:
  - uid: DbContextOptionsBuilder`1
    name: DbContextOptionsBuilder
    nameWithType: DbContextOptionsBuilder
    fullName: DbContextOptionsBuilder
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: DbContextOptionsBuilder`1
    name: DbContextOptionsBuilder
    nameWithType: DbContextOptionsBuilder
    fullName: DbContextOptionsBuilder
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
