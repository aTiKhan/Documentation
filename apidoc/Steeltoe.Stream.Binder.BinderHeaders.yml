### YamlMime:ManagedReference
items:
- uid: Steeltoe.Stream.Binder.BinderHeaders
  commentId: T:Steeltoe.Stream.Binder.BinderHeaders
  id: BinderHeaders
  parent: Steeltoe.Stream.Binder
  children:
  - Steeltoe.Stream.Binder.BinderHeaders.BINDER_ORIGINAL_CONTENT_TYPE
  - Steeltoe.Stream.Binder.BinderHeaders.NATIVE_HEADERS_PRESENT
  - Steeltoe.Stream.Binder.BinderHeaders.PARTITION_HEADER
  - Steeltoe.Stream.Binder.BinderHeaders.PARTITION_OVERRIDE
  - Steeltoe.Stream.Binder.BinderHeaders.STANDARD_HEADERS
  langs:
  - csharp
  - vb
  name: BinderHeaders
  nameWithType: BinderHeaders
  fullName: Steeltoe.Stream.Binder.BinderHeaders
  type: Class
  source:
    remote:
      path: src/Stream/src/StreamBase/Binder/BinderHeaders.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: BinderHeaders
    path: ../Steeltoe/src/Stream/src/StreamBase/Binder/BinderHeaders.cs
    startLine: 9
  assemblies:
  - Steeltoe.Stream.StreamBase
  namespace: Steeltoe.Stream.Binder
  syntax:
    content: public static class BinderHeaders
    content.vb: Public Module BinderHeaders
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Steeltoe.Stream.Binder.BinderHeaders.BINDER_ORIGINAL_CONTENT_TYPE
  commentId: F:Steeltoe.Stream.Binder.BinderHeaders.BINDER_ORIGINAL_CONTENT_TYPE
  id: BINDER_ORIGINAL_CONTENT_TYPE
  parent: Steeltoe.Stream.Binder.BinderHeaders
  langs:
  - csharp
  - vb
  name: BINDER_ORIGINAL_CONTENT_TYPE
  nameWithType: BinderHeaders.BINDER_ORIGINAL_CONTENT_TYPE
  fullName: Steeltoe.Stream.Binder.BinderHeaders.BINDER_ORIGINAL_CONTENT_TYPE
  type: Field
  source:
    remote:
      path: src/Stream/src/StreamBase/Binder/BinderHeaders.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: BINDER_ORIGINAL_CONTENT_TYPE
    path: ../Steeltoe/src/Stream/src/StreamBase/Binder/BinderHeaders.cs
    startLine: 11
  assemblies:
  - Steeltoe.Stream.StreamBase
  namespace: Steeltoe.Stream.Binder
  syntax:
    content: public const string BINDER_ORIGINAL_CONTENT_TYPE = "originalContentType"
    return:
      type: System.String
    content.vb: Public Const BINDER_ORIGINAL_CONTENT_TYPE As String = "originalContentType"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Steeltoe.Stream.Binder.BinderHeaders.PARTITION_HEADER
  commentId: F:Steeltoe.Stream.Binder.BinderHeaders.PARTITION_HEADER
  id: PARTITION_HEADER
  parent: Steeltoe.Stream.Binder.BinderHeaders
  langs:
  - csharp
  - vb
  name: PARTITION_HEADER
  nameWithType: BinderHeaders.PARTITION_HEADER
  fullName: Steeltoe.Stream.Binder.BinderHeaders.PARTITION_HEADER
  type: Field
  source:
    remote:
      path: src/Stream/src/StreamBase/Binder/BinderHeaders.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: PARTITION_HEADER
    path: ../Steeltoe/src/Stream/src/StreamBase/Binder/BinderHeaders.cs
    startLine: 13
  assemblies:
  - Steeltoe.Stream.StreamBase
  namespace: Steeltoe.Stream.Binder
  syntax:
    content: public const string PARTITION_HEADER = "scst_partition"
    return:
      type: System.String
    content.vb: Public Const PARTITION_HEADER As String = "scst_partition"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Steeltoe.Stream.Binder.BinderHeaders.PARTITION_OVERRIDE
  commentId: F:Steeltoe.Stream.Binder.BinderHeaders.PARTITION_OVERRIDE
  id: PARTITION_OVERRIDE
  parent: Steeltoe.Stream.Binder.BinderHeaders
  langs:
  - csharp
  - vb
  name: PARTITION_OVERRIDE
  nameWithType: BinderHeaders.PARTITION_OVERRIDE
  fullName: Steeltoe.Stream.Binder.BinderHeaders.PARTITION_OVERRIDE
  type: Field
  source:
    remote:
      path: src/Stream/src/StreamBase/Binder/BinderHeaders.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: PARTITION_OVERRIDE
    path: ../Steeltoe/src/Stream/src/StreamBase/Binder/BinderHeaders.cs
    startLine: 15
  assemblies:
  - Steeltoe.Stream.StreamBase
  namespace: Steeltoe.Stream.Binder
  syntax:
    content: public const string PARTITION_OVERRIDE = "scst_partitionOverride"
    return:
      type: System.String
    content.vb: Public Const PARTITION_OVERRIDE As String = "scst_partitionOverride"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Steeltoe.Stream.Binder.BinderHeaders.NATIVE_HEADERS_PRESENT
  commentId: F:Steeltoe.Stream.Binder.BinderHeaders.NATIVE_HEADERS_PRESENT
  id: NATIVE_HEADERS_PRESENT
  parent: Steeltoe.Stream.Binder.BinderHeaders
  langs:
  - csharp
  - vb
  name: NATIVE_HEADERS_PRESENT
  nameWithType: BinderHeaders.NATIVE_HEADERS_PRESENT
  fullName: Steeltoe.Stream.Binder.BinderHeaders.NATIVE_HEADERS_PRESENT
  type: Field
  source:
    remote:
      path: src/Stream/src/StreamBase/Binder/BinderHeaders.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: NATIVE_HEADERS_PRESENT
    path: ../Steeltoe/src/Stream/src/StreamBase/Binder/BinderHeaders.cs
    startLine: 17
  assemblies:
  - Steeltoe.Stream.StreamBase
  namespace: Steeltoe.Stream.Binder
  syntax:
    content: public const string NATIVE_HEADERS_PRESENT = "scst_nativeHeadersPresent"
    return:
      type: System.String
    content.vb: Public Const NATIVE_HEADERS_PRESENT As String = "scst_nativeHeadersPresent"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Steeltoe.Stream.Binder.BinderHeaders.STANDARD_HEADERS
  commentId: F:Steeltoe.Stream.Binder.BinderHeaders.STANDARD_HEADERS
  id: STANDARD_HEADERS
  parent: Steeltoe.Stream.Binder.BinderHeaders
  langs:
  - csharp
  - vb
  name: STANDARD_HEADERS
  nameWithType: BinderHeaders.STANDARD_HEADERS
  fullName: Steeltoe.Stream.Binder.BinderHeaders.STANDARD_HEADERS
  type: Field
  source:
    remote:
      path: src/Stream/src/StreamBase/Binder/BinderHeaders.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: STANDARD_HEADERS
    path: ../Steeltoe/src/Stream/src/StreamBase/Binder/BinderHeaders.cs
    startLine: 19
  assemblies:
  - Steeltoe.Stream.StreamBase
  namespace: Steeltoe.Stream.Binder
  syntax:
    content: public static readonly string[] STANDARD_HEADERS
    return:
      type: System.String[]
    content.vb: Public Shared ReadOnly STANDARD_HEADERS As String()
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
references:
- uid: Steeltoe.Stream.Binder
  commentId: N:Steeltoe.Stream.Binder
  name: Steeltoe.Stream.Binder
  nameWithType: Steeltoe.Stream.Binder
  fullName: Steeltoe.Stream.Binder
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.String[]
  isExternal: true
  name: String[]
  nameWithType: String[]
  fullName: System.String[]
  nameWithType.vb: String()
  fullName.vb: System.String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
