### YamlMime:ManagedReference
items:
- uid: Steeltoe.Discovery.Eureka.EurekaHealthCheckHandler
  commentId: T:Steeltoe.Discovery.Eureka.EurekaHealthCheckHandler
  id: EurekaHealthCheckHandler
  parent: Steeltoe.Discovery.Eureka
  children:
  - Steeltoe.Discovery.Eureka.EurekaHealthCheckHandler.#ctor(ILogger)
  - Steeltoe.Discovery.Eureka.EurekaHealthCheckHandler.#ctor(System.Collections.Generic.IEnumerable{IHealthContributor},ILogger{Steeltoe.Discovery.Eureka.EurekaHealthCheckHandler})
  - Steeltoe.Discovery.Eureka.EurekaHealthCheckHandler._contributors
  - Steeltoe.Discovery.Eureka.EurekaHealthCheckHandler.AggregateStatus(System.Collections.Generic.List{HealthCheckResult})
  - Steeltoe.Discovery.Eureka.EurekaHealthCheckHandler.DoHealthChecks(System.Collections.Generic.IList{IHealthContributor})
  - Steeltoe.Discovery.Eureka.EurekaHealthCheckHandler.GetStatus(Steeltoe.Discovery.Eureka.AppInfo.InstanceStatus)
  - Steeltoe.Discovery.Eureka.EurekaHealthCheckHandler.MapToInstanceStatus(HealthStatus)
  langs:
  - csharp
  - vb
  name: EurekaHealthCheckHandler
  nameWithType: EurekaHealthCheckHandler
  fullName: Steeltoe.Discovery.Eureka.EurekaHealthCheckHandler
  type: Class
  source:
    remote:
      path: src/Discovery/src/Eureka/EurekaHealthCheckHandler.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: EurekaHealthCheckHandler
    path: ../Steeltoe/src/Discovery/src/Eureka/EurekaHealthCheckHandler.cs
    startLine: 18
  assemblies:
  - Steeltoe.Discovery.Eureka
  namespace: Steeltoe.Discovery.Eureka
  summary: "\nComputes the Eureka InstanceStatus from all of the Steeltoe Health contributors registered for the application.\nWhen this handler is added to the container it registers with the DiscoveryClient as a IHealthCheckHandler.\nThe DiscoveryClient will then call it each time it is computing the InstanceStatus of the application.\n"
  example: []
  syntax:
    content: 'public class EurekaHealthCheckHandler : IHealthCheckHandler'
    content.vb: >-
      Public Class EurekaHealthCheckHandler

          Implements IHealthCheckHandler
  inheritance:
  - System.Object
  derivedClasses:
  - Steeltoe.Discovery.Eureka.ScopedEurekaHealthCheckHandler
  implements:
  - Steeltoe.Discovery.Eureka.IHealthCheckHandler
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Steeltoe.Discovery.Eureka.EurekaHealthCheckHandler._contributors
  commentId: F:Steeltoe.Discovery.Eureka.EurekaHealthCheckHandler._contributors
  id: _contributors
  parent: Steeltoe.Discovery.Eureka.EurekaHealthCheckHandler
  langs:
  - csharp
  - vb
  name: _contributors
  nameWithType: EurekaHealthCheckHandler._contributors
  fullName: Steeltoe.Discovery.Eureka.EurekaHealthCheckHandler._contributors
  type: Field
  source:
    remote:
      path: src/Discovery/src/Eureka/EurekaHealthCheckHandler.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: _contributors
    path: ../Steeltoe/src/Discovery/src/Eureka/EurekaHealthCheckHandler.cs
    startLine: 20
  assemblies:
  - Steeltoe.Discovery.Eureka
  namespace: Steeltoe.Discovery.Eureka
  syntax:
    content: protected IList<IHealthContributor> _contributors
    return:
      type: System.Collections.Generic.IList{IHealthContributor}
    content.vb: Protected _contributors As IList(Of IHealthContributor)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Steeltoe.Discovery.Eureka.EurekaHealthCheckHandler.#ctor(ILogger)
  commentId: M:Steeltoe.Discovery.Eureka.EurekaHealthCheckHandler.#ctor(ILogger)
  id: '#ctor(ILogger)'
  parent: Steeltoe.Discovery.Eureka.EurekaHealthCheckHandler
  langs:
  - csharp
  - vb
  name: EurekaHealthCheckHandler(ILogger)
  nameWithType: EurekaHealthCheckHandler.EurekaHealthCheckHandler(ILogger)
  fullName: Steeltoe.Discovery.Eureka.EurekaHealthCheckHandler.EurekaHealthCheckHandler(ILogger)
  type: Constructor
  source:
    remote:
      path: src/Discovery/src/Eureka/EurekaHealthCheckHandler.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: .ctor
    path: ../Steeltoe/src/Discovery/src/Eureka/EurekaHealthCheckHandler.cs
    startLine: 23
  assemblies:
  - Steeltoe.Discovery.Eureka
  namespace: Steeltoe.Discovery.Eureka
  syntax:
    content: public EurekaHealthCheckHandler(ILogger logger = null)
    parameters:
    - id: logger
      type: ILogger
    content.vb: Public Sub New(logger As ILogger = Nothing)
  overload: Steeltoe.Discovery.Eureka.EurekaHealthCheckHandler.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Steeltoe.Discovery.Eureka.EurekaHealthCheckHandler.#ctor(System.Collections.Generic.IEnumerable{IHealthContributor},ILogger{Steeltoe.Discovery.Eureka.EurekaHealthCheckHandler})
  commentId: M:Steeltoe.Discovery.Eureka.EurekaHealthCheckHandler.#ctor(System.Collections.Generic.IEnumerable{IHealthContributor},ILogger{Steeltoe.Discovery.Eureka.EurekaHealthCheckHandler})
  id: '#ctor(System.Collections.Generic.IEnumerable{IHealthContributor},ILogger{Steeltoe.Discovery.Eureka.EurekaHealthCheckHandler})'
  parent: Steeltoe.Discovery.Eureka.EurekaHealthCheckHandler
  langs:
  - csharp
  - vb
  name: EurekaHealthCheckHandler(IEnumerable<IHealthContributor>, ILogger<EurekaHealthCheckHandler>)
  nameWithType: EurekaHealthCheckHandler.EurekaHealthCheckHandler(IEnumerable<IHealthContributor>, ILogger<EurekaHealthCheckHandler>)
  fullName: Steeltoe.Discovery.Eureka.EurekaHealthCheckHandler.EurekaHealthCheckHandler(System.Collections.Generic.IEnumerable<IHealthContributor>, ILogger<Steeltoe.Discovery.Eureka.EurekaHealthCheckHandler>)
  type: Constructor
  source:
    remote:
      path: src/Discovery/src/Eureka/EurekaHealthCheckHandler.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: .ctor
    path: ../Steeltoe/src/Discovery/src/Eureka/EurekaHealthCheckHandler.cs
    startLine: 28
  assemblies:
  - Steeltoe.Discovery.Eureka
  namespace: Steeltoe.Discovery.Eureka
  syntax:
    content: public EurekaHealthCheckHandler(IEnumerable<IHealthContributor> contributors, ILogger<EurekaHealthCheckHandler> logger = null)
    parameters:
    - id: contributors
      type: System.Collections.Generic.IEnumerable{IHealthContributor}
    - id: logger
      type: ILogger{Steeltoe.Discovery.Eureka.EurekaHealthCheckHandler}
    content.vb: Public Sub New(contributors As IEnumerable(Of IHealthContributor), logger As ILogger(Of EurekaHealthCheckHandler) = Nothing)
  overload: Steeltoe.Discovery.Eureka.EurekaHealthCheckHandler.#ctor*
  nameWithType.vb: EurekaHealthCheckHandler.EurekaHealthCheckHandler(IEnumerable(Of IHealthContributor), ILogger(Of EurekaHealthCheckHandler))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Steeltoe.Discovery.Eureka.EurekaHealthCheckHandler.EurekaHealthCheckHandler(System.Collections.Generic.IEnumerable(Of IHealthContributor), ILogger(Of Steeltoe.Discovery.Eureka.EurekaHealthCheckHandler))
  name.vb: EurekaHealthCheckHandler(IEnumerable(Of IHealthContributor), ILogger(Of EurekaHealthCheckHandler))
- uid: Steeltoe.Discovery.Eureka.EurekaHealthCheckHandler.GetStatus(Steeltoe.Discovery.Eureka.AppInfo.InstanceStatus)
  commentId: M:Steeltoe.Discovery.Eureka.EurekaHealthCheckHandler.GetStatus(Steeltoe.Discovery.Eureka.AppInfo.InstanceStatus)
  id: GetStatus(Steeltoe.Discovery.Eureka.AppInfo.InstanceStatus)
  parent: Steeltoe.Discovery.Eureka.EurekaHealthCheckHandler
  langs:
  - csharp
  - vb
  name: GetStatus(InstanceStatus)
  nameWithType: EurekaHealthCheckHandler.GetStatus(InstanceStatus)
  fullName: Steeltoe.Discovery.Eureka.EurekaHealthCheckHandler.GetStatus(Steeltoe.Discovery.Eureka.AppInfo.InstanceStatus)
  type: Method
  source:
    remote:
      path: src/Discovery/src/Eureka/EurekaHealthCheckHandler.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: GetStatus
    path: ../Steeltoe/src/Discovery/src/Eureka/EurekaHealthCheckHandler.cs
    startLine: 34
  assemblies:
  - Steeltoe.Discovery.Eureka
  namespace: Steeltoe.Discovery.Eureka
  syntax:
    content: public virtual InstanceStatus GetStatus(InstanceStatus currentStatus)
    parameters:
    - id: currentStatus
      type: Steeltoe.Discovery.Eureka.AppInfo.InstanceStatus
    return:
      type: Steeltoe.Discovery.Eureka.AppInfo.InstanceStatus
    content.vb: Public Overridable Function GetStatus(currentStatus As InstanceStatus) As InstanceStatus
  overload: Steeltoe.Discovery.Eureka.EurekaHealthCheckHandler.GetStatus*
  implements:
  - Steeltoe.Discovery.Eureka.IHealthCheckHandler.GetStatus(Steeltoe.Discovery.Eureka.AppInfo.InstanceStatus)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Steeltoe.Discovery.Eureka.EurekaHealthCheckHandler.DoHealthChecks(System.Collections.Generic.IList{IHealthContributor})
  commentId: M:Steeltoe.Discovery.Eureka.EurekaHealthCheckHandler.DoHealthChecks(System.Collections.Generic.IList{IHealthContributor})
  id: DoHealthChecks(System.Collections.Generic.IList{IHealthContributor})
  parent: Steeltoe.Discovery.Eureka.EurekaHealthCheckHandler
  langs:
  - csharp
  - vb
  name: DoHealthChecks(IList<IHealthContributor>)
  nameWithType: EurekaHealthCheckHandler.DoHealthChecks(IList<IHealthContributor>)
  fullName: Steeltoe.Discovery.Eureka.EurekaHealthCheckHandler.DoHealthChecks(System.Collections.Generic.IList<IHealthContributor>)
  type: Method
  source:
    remote:
      path: src/Discovery/src/Eureka/EurekaHealthCheckHandler.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: DoHealthChecks
    path: ../Steeltoe/src/Discovery/src/Eureka/EurekaHealthCheckHandler.cs
    startLine: 41
  assemblies:
  - Steeltoe.Discovery.Eureka
  namespace: Steeltoe.Discovery.Eureka
  syntax:
    content: protected virtual List<HealthCheckResult> DoHealthChecks(IList<IHealthContributor> contributors)
    parameters:
    - id: contributors
      type: System.Collections.Generic.IList{IHealthContributor}
    return:
      type: System.Collections.Generic.List{HealthCheckResult}
    content.vb: Protected Overridable Function DoHealthChecks(contributors As IList(Of IHealthContributor)) As List(Of HealthCheckResult)
  overload: Steeltoe.Discovery.Eureka.EurekaHealthCheckHandler.DoHealthChecks*
  nameWithType.vb: EurekaHealthCheckHandler.DoHealthChecks(IList(Of IHealthContributor))
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
  fullName.vb: Steeltoe.Discovery.Eureka.EurekaHealthCheckHandler.DoHealthChecks(System.Collections.Generic.IList(Of IHealthContributor))
  name.vb: DoHealthChecks(IList(Of IHealthContributor))
- uid: Steeltoe.Discovery.Eureka.EurekaHealthCheckHandler.AggregateStatus(System.Collections.Generic.List{HealthCheckResult})
  commentId: M:Steeltoe.Discovery.Eureka.EurekaHealthCheckHandler.AggregateStatus(System.Collections.Generic.List{HealthCheckResult})
  id: AggregateStatus(System.Collections.Generic.List{HealthCheckResult})
  parent: Steeltoe.Discovery.Eureka.EurekaHealthCheckHandler
  langs:
  - csharp
  - vb
  name: AggregateStatus(List<HealthCheckResult>)
  nameWithType: EurekaHealthCheckHandler.AggregateStatus(List<HealthCheckResult>)
  fullName: Steeltoe.Discovery.Eureka.EurekaHealthCheckHandler.AggregateStatus(System.Collections.Generic.List<HealthCheckResult>)
  type: Method
  source:
    remote:
      path: src/Discovery/src/Eureka/EurekaHealthCheckHandler.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: AggregateStatus
    path: ../Steeltoe/src/Discovery/src/Eureka/EurekaHealthCheckHandler.cs
    startLine: 59
  assemblies:
  - Steeltoe.Discovery.Eureka
  namespace: Steeltoe.Discovery.Eureka
  syntax:
    content: protected virtual HealthStatus AggregateStatus(List<HealthCheckResult> results)
    parameters:
    - id: results
      type: System.Collections.Generic.List{HealthCheckResult}
    return:
      type: HealthStatus
    content.vb: Protected Overridable Function AggregateStatus(results As List(Of HealthCheckResult)) As HealthStatus
  overload: Steeltoe.Discovery.Eureka.EurekaHealthCheckHandler.AggregateStatus*
  nameWithType.vb: EurekaHealthCheckHandler.AggregateStatus(List(Of HealthCheckResult))
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
  fullName.vb: Steeltoe.Discovery.Eureka.EurekaHealthCheckHandler.AggregateStatus(System.Collections.Generic.List(Of HealthCheckResult))
  name.vb: AggregateStatus(List(Of HealthCheckResult))
- uid: Steeltoe.Discovery.Eureka.EurekaHealthCheckHandler.MapToInstanceStatus(HealthStatus)
  commentId: M:Steeltoe.Discovery.Eureka.EurekaHealthCheckHandler.MapToInstanceStatus(HealthStatus)
  id: MapToInstanceStatus(HealthStatus)
  parent: Steeltoe.Discovery.Eureka.EurekaHealthCheckHandler
  langs:
  - csharp
  - vb
  name: MapToInstanceStatus(HealthStatus)
  nameWithType: EurekaHealthCheckHandler.MapToInstanceStatus(HealthStatus)
  fullName: Steeltoe.Discovery.Eureka.EurekaHealthCheckHandler.MapToInstanceStatus(HealthStatus)
  type: Method
  source:
    remote:
      path: src/Discovery/src/Eureka/EurekaHealthCheckHandler.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: MapToInstanceStatus
    path: ../Steeltoe/src/Discovery/src/Eureka/EurekaHealthCheckHandler.cs
    startLine: 91
  assemblies:
  - Steeltoe.Discovery.Eureka
  namespace: Steeltoe.Discovery.Eureka
  syntax:
    content: protected virtual InstanceStatus MapToInstanceStatus(HealthStatus status)
    parameters:
    - id: status
      type: HealthStatus
    return:
      type: Steeltoe.Discovery.Eureka.AppInfo.InstanceStatus
    content.vb: Protected Overridable Function MapToInstanceStatus(status As HealthStatus) As InstanceStatus
  overload: Steeltoe.Discovery.Eureka.EurekaHealthCheckHandler.MapToInstanceStatus*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
references:
- uid: Steeltoe.Discovery.Eureka
  commentId: N:Steeltoe.Discovery.Eureka
  name: Steeltoe.Discovery.Eureka
  nameWithType: Steeltoe.Discovery.Eureka
  fullName: Steeltoe.Discovery.Eureka
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Steeltoe.Discovery.Eureka.IHealthCheckHandler
  commentId: T:Steeltoe.Discovery.Eureka.IHealthCheckHandler
  parent: Steeltoe.Discovery.Eureka
  name: IHealthCheckHandler
  nameWithType: IHealthCheckHandler
  fullName: Steeltoe.Discovery.Eureka.IHealthCheckHandler
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Collections.Generic.IList{IHealthContributor}
  commentId: T:System.Collections.Generic.IList{IHealthContributor}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<IHealthContributor>
  nameWithType: IList<IHealthContributor>
  fullName: System.Collections.Generic.IList<IHealthContributor>
  nameWithType.vb: IList(Of IHealthContributor)
  fullName.vb: System.Collections.Generic.IList(Of IHealthContributor)
  name.vb: IList(Of IHealthContributor)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: IHealthContributor
    name: IHealthContributor
    nameWithType: IHealthContributor
    fullName: IHealthContributor
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: IHealthContributor
    name: IHealthContributor
    nameWithType: IHealthContributor
    fullName: IHealthContributor
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullName.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Steeltoe.Discovery.Eureka.EurekaHealthCheckHandler.#ctor*
  commentId: Overload:Steeltoe.Discovery.Eureka.EurekaHealthCheckHandler.#ctor
  name: EurekaHealthCheckHandler
  nameWithType: EurekaHealthCheckHandler.EurekaHealthCheckHandler
  fullName: Steeltoe.Discovery.Eureka.EurekaHealthCheckHandler.EurekaHealthCheckHandler
- uid: ILogger
  isExternal: true
  name: ILogger
  nameWithType: ILogger
  fullName: ILogger
- uid: System.Collections.Generic.IEnumerable{IHealthContributor}
  commentId: T:System.Collections.Generic.IEnumerable{IHealthContributor}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<IHealthContributor>
  nameWithType: IEnumerable<IHealthContributor>
  fullName: System.Collections.Generic.IEnumerable<IHealthContributor>
  nameWithType.vb: IEnumerable(Of IHealthContributor)
  fullName.vb: System.Collections.Generic.IEnumerable(Of IHealthContributor)
  name.vb: IEnumerable(Of IHealthContributor)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: IHealthContributor
    name: IHealthContributor
    nameWithType: IHealthContributor
    fullName: IHealthContributor
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: IHealthContributor
    name: IHealthContributor
    nameWithType: IHealthContributor
    fullName: IHealthContributor
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: ILogger{Steeltoe.Discovery.Eureka.EurekaHealthCheckHandler}
  commentId: '!:ILogger{Steeltoe.Discovery.Eureka.EurekaHealthCheckHandler}'
  definition: ILogger`1
  name: ILogger<EurekaHealthCheckHandler>
  nameWithType: ILogger<EurekaHealthCheckHandler>
  fullName: ILogger<Steeltoe.Discovery.Eureka.EurekaHealthCheckHandler>
  nameWithType.vb: ILogger(Of EurekaHealthCheckHandler)
  fullName.vb: ILogger(Of Steeltoe.Discovery.Eureka.EurekaHealthCheckHandler)
  name.vb: ILogger(Of EurekaHealthCheckHandler)
  spec.csharp:
  - uid: ILogger`1
    name: ILogger
    nameWithType: ILogger
    fullName: ILogger
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Steeltoe.Discovery.Eureka.EurekaHealthCheckHandler
    name: EurekaHealthCheckHandler
    nameWithType: EurekaHealthCheckHandler
    fullName: Steeltoe.Discovery.Eureka.EurekaHealthCheckHandler
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: ILogger`1
    name: ILogger
    nameWithType: ILogger
    fullName: ILogger
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Steeltoe.Discovery.Eureka.EurekaHealthCheckHandler
    name: EurekaHealthCheckHandler
    nameWithType: EurekaHealthCheckHandler
    fullName: Steeltoe.Discovery.Eureka.EurekaHealthCheckHandler
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: ILogger`1
  isExternal: true
  name: ILogger<>
  nameWithType: ILogger<>
  fullName: ILogger<>
  nameWithType.vb: ILogger(Of )
  fullName.vb: ILogger(Of )
  name.vb: ILogger(Of )
  spec.csharp:
  - uid: ILogger`1
    name: ILogger
    nameWithType: ILogger
    fullName: ILogger
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: ILogger`1
    name: ILogger
    nameWithType: ILogger
    fullName: ILogger
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Discovery.Eureka.EurekaHealthCheckHandler.GetStatus*
  commentId: Overload:Steeltoe.Discovery.Eureka.EurekaHealthCheckHandler.GetStatus
  name: GetStatus
  nameWithType: EurekaHealthCheckHandler.GetStatus
  fullName: Steeltoe.Discovery.Eureka.EurekaHealthCheckHandler.GetStatus
- uid: Steeltoe.Discovery.Eureka.IHealthCheckHandler.GetStatus(Steeltoe.Discovery.Eureka.AppInfo.InstanceStatus)
  commentId: M:Steeltoe.Discovery.Eureka.IHealthCheckHandler.GetStatus(Steeltoe.Discovery.Eureka.AppInfo.InstanceStatus)
  parent: Steeltoe.Discovery.Eureka.IHealthCheckHandler
  name: GetStatus(InstanceStatus)
  nameWithType: IHealthCheckHandler.GetStatus(InstanceStatus)
  fullName: Steeltoe.Discovery.Eureka.IHealthCheckHandler.GetStatus(Steeltoe.Discovery.Eureka.AppInfo.InstanceStatus)
  spec.csharp:
  - uid: Steeltoe.Discovery.Eureka.IHealthCheckHandler.GetStatus(Steeltoe.Discovery.Eureka.AppInfo.InstanceStatus)
    name: GetStatus
    nameWithType: IHealthCheckHandler.GetStatus
    fullName: Steeltoe.Discovery.Eureka.IHealthCheckHandler.GetStatus
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Discovery.Eureka.AppInfo.InstanceStatus
    name: InstanceStatus
    nameWithType: InstanceStatus
    fullName: Steeltoe.Discovery.Eureka.AppInfo.InstanceStatus
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Discovery.Eureka.IHealthCheckHandler.GetStatus(Steeltoe.Discovery.Eureka.AppInfo.InstanceStatus)
    name: GetStatus
    nameWithType: IHealthCheckHandler.GetStatus
    fullName: Steeltoe.Discovery.Eureka.IHealthCheckHandler.GetStatus
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Discovery.Eureka.AppInfo.InstanceStatus
    name: InstanceStatus
    nameWithType: InstanceStatus
    fullName: Steeltoe.Discovery.Eureka.AppInfo.InstanceStatus
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Discovery.Eureka.AppInfo.InstanceStatus
  commentId: T:Steeltoe.Discovery.Eureka.AppInfo.InstanceStatus
  parent: Steeltoe.Discovery.Eureka.AppInfo
  name: InstanceStatus
  nameWithType: InstanceStatus
  fullName: Steeltoe.Discovery.Eureka.AppInfo.InstanceStatus
- uid: Steeltoe.Discovery.Eureka.AppInfo
  commentId: N:Steeltoe.Discovery.Eureka.AppInfo
  name: Steeltoe.Discovery.Eureka.AppInfo
  nameWithType: Steeltoe.Discovery.Eureka.AppInfo
  fullName: Steeltoe.Discovery.Eureka.AppInfo
- uid: Steeltoe.Discovery.Eureka.EurekaHealthCheckHandler.DoHealthChecks*
  commentId: Overload:Steeltoe.Discovery.Eureka.EurekaHealthCheckHandler.DoHealthChecks
  name: DoHealthChecks
  nameWithType: EurekaHealthCheckHandler.DoHealthChecks
  fullName: Steeltoe.Discovery.Eureka.EurekaHealthCheckHandler.DoHealthChecks
- uid: System.Collections.Generic.List{HealthCheckResult}
  commentId: T:System.Collections.Generic.List{HealthCheckResult}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<HealthCheckResult>
  nameWithType: List<HealthCheckResult>
  fullName: System.Collections.Generic.List<HealthCheckResult>
  nameWithType.vb: List(Of HealthCheckResult)
  fullName.vb: System.Collections.Generic.List(Of HealthCheckResult)
  name.vb: List(Of HealthCheckResult)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: HealthCheckResult
    name: HealthCheckResult
    nameWithType: HealthCheckResult
    fullName: HealthCheckResult
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: HealthCheckResult
    name: HealthCheckResult
    nameWithType: HealthCheckResult
    fullName: HealthCheckResult
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Discovery.Eureka.EurekaHealthCheckHandler.AggregateStatus*
  commentId: Overload:Steeltoe.Discovery.Eureka.EurekaHealthCheckHandler.AggregateStatus
  name: AggregateStatus
  nameWithType: EurekaHealthCheckHandler.AggregateStatus
  fullName: Steeltoe.Discovery.Eureka.EurekaHealthCheckHandler.AggregateStatus
- uid: HealthStatus
  isExternal: true
  name: HealthStatus
  nameWithType: HealthStatus
  fullName: HealthStatus
- uid: Steeltoe.Discovery.Eureka.EurekaHealthCheckHandler.MapToInstanceStatus*
  commentId: Overload:Steeltoe.Discovery.Eureka.EurekaHealthCheckHandler.MapToInstanceStatus
  name: MapToInstanceStatus
  nameWithType: EurekaHealthCheckHandler.MapToInstanceStatus
  fullName: Steeltoe.Discovery.Eureka.EurekaHealthCheckHandler.MapToInstanceStatus
