### YamlMime:ManagedReference
items:
- uid: Steeltoe.Management.OpenTelemetry.Metrics.Processor.ProcessedMetric`1
  commentId: T:Steeltoe.Management.OpenTelemetry.Metrics.Processor.ProcessedMetric`1
  id: ProcessedMetric`1
  parent: Steeltoe.Management.OpenTelemetry.Metrics.Processor
  children:
  - Steeltoe.Management.OpenTelemetry.Metrics.Processor.ProcessedMetric`1.#ctor(Steeltoe.Management.OpenTelemetry.Metrics.Processor.ProcessedMetric{`0})
  - Steeltoe.Management.OpenTelemetry.Metrics.Processor.ProcessedMetric`1.#ctor(System.String,System.String,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}},AggregationType)
  - Steeltoe.Management.OpenTelemetry.Metrics.Processor.ProcessedMetric`1.Data
  langs:
  - csharp
  - vb
  name: ProcessedMetric<T>
  nameWithType: ProcessedMetric<T>
  fullName: Steeltoe.Management.OpenTelemetry.Metrics.Processor.ProcessedMetric<T>
  type: Class
  source:
    remote:
      path: src/Management/src/OpenTelemetryBase/Metrics/Processor/ProcessedMetric.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: ProcessedMetric
    path: ../Steeltoe/src/Management/src/OpenTelemetryBase/Metrics/Processor/ProcessedMetric.cs
    startLine: 9
  assemblies:
  - Steeltoe.Management.OpenTelemetryBase
  namespace: Steeltoe.Management.OpenTelemetry.Metrics.Processor
  syntax:
    content: 'public class ProcessedMetric<T> : Metric<T>'
    typeParameters:
    - id: T
    content.vb: >-
      Public Class ProcessedMetric(Of T)

          Inherits Metric(Of T)
  inheritance:
  - System.Object
  nameWithType.vb: ProcessedMetric(Of T)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
  fullName.vb: Steeltoe.Management.OpenTelemetry.Metrics.Processor.ProcessedMetric(Of T)
  name.vb: ProcessedMetric(Of T)
- uid: Steeltoe.Management.OpenTelemetry.Metrics.Processor.ProcessedMetric`1.#ctor(System.String,System.String,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}},AggregationType)
  commentId: M:Steeltoe.Management.OpenTelemetry.Metrics.Processor.ProcessedMetric`1.#ctor(System.String,System.String,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}},AggregationType)
  id: '#ctor(System.String,System.String,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}},AggregationType)'
  parent: Steeltoe.Management.OpenTelemetry.Metrics.Processor.ProcessedMetric`1
  langs:
  - csharp
  - vb
  name: ProcessedMetric(String, String, String, IEnumerable<KeyValuePair<String, String>>, AggregationType)
  nameWithType: ProcessedMetric<T>.ProcessedMetric(String, String, String, IEnumerable<KeyValuePair<String, String>>, AggregationType)
  fullName: Steeltoe.Management.OpenTelemetry.Metrics.Processor.ProcessedMetric<T>.ProcessedMetric(System.String, System.String, System.String, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.String, System.String>>, AggregationType)
  type: Constructor
  source:
    remote:
      path: src/Management/src/OpenTelemetryBase/Metrics/Processor/ProcessedMetric.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: .ctor
    path: ../Steeltoe/src/Management/src/OpenTelemetryBase/Metrics/Processor/ProcessedMetric.cs
    startLine: 11
  assemblies:
  - Steeltoe.Management.OpenTelemetryBase
  namespace: Steeltoe.Management.OpenTelemetry.Metrics.Processor
  syntax:
    content: public ProcessedMetric(string metricNamespace, string metricName, string desc, IEnumerable<KeyValuePair<string, string>> labels, AggregationType type)
    parameters:
    - id: metricNamespace
      type: System.String
    - id: metricName
      type: System.String
    - id: desc
      type: System.String
    - id: labels
      type: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}}
    - id: type
      type: AggregationType
    content.vb: Public Sub New(metricNamespace As String, metricName As String, desc As String, labels As IEnumerable(Of KeyValuePair(Of String, String)), type As AggregationType)
  overload: Steeltoe.Management.OpenTelemetry.Metrics.Processor.ProcessedMetric`1.#ctor*
  nameWithType.vb: ProcessedMetric(Of T).ProcessedMetric(String, String, String, IEnumerable(Of KeyValuePair(Of String, String)), AggregationType)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Steeltoe.Management.OpenTelemetry.Metrics.Processor.ProcessedMetric(Of T).ProcessedMetric(System.String, System.String, System.String, System.Collections.Generic.IEnumerable(Of System.Collections.Generic.KeyValuePair(Of System.String, System.String)), AggregationType)
  name.vb: ProcessedMetric(String, String, String, IEnumerable(Of KeyValuePair(Of String, String)), AggregationType)
- uid: Steeltoe.Management.OpenTelemetry.Metrics.Processor.ProcessedMetric`1.#ctor(Steeltoe.Management.OpenTelemetry.Metrics.Processor.ProcessedMetric{`0})
  commentId: M:Steeltoe.Management.OpenTelemetry.Metrics.Processor.ProcessedMetric`1.#ctor(Steeltoe.Management.OpenTelemetry.Metrics.Processor.ProcessedMetric{`0})
  id: '#ctor(Steeltoe.Management.OpenTelemetry.Metrics.Processor.ProcessedMetric{`0})'
  parent: Steeltoe.Management.OpenTelemetry.Metrics.Processor.ProcessedMetric`1
  langs:
  - csharp
  - vb
  name: ProcessedMetric(ProcessedMetric<T>)
  nameWithType: ProcessedMetric<T>.ProcessedMetric(ProcessedMetric<T>)
  fullName: Steeltoe.Management.OpenTelemetry.Metrics.Processor.ProcessedMetric<T>.ProcessedMetric(Steeltoe.Management.OpenTelemetry.Metrics.Processor.ProcessedMetric<T>)
  type: Constructor
  source:
    remote:
      path: src/Management/src/OpenTelemetryBase/Metrics/Processor/ProcessedMetric.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: .ctor
    path: ../Steeltoe/src/Management/src/OpenTelemetryBase/Metrics/Processor/ProcessedMetric.cs
    startLine: 21
  assemblies:
  - Steeltoe.Management.OpenTelemetryBase
  namespace: Steeltoe.Management.OpenTelemetry.Metrics.Processor
  syntax:
    content: public ProcessedMetric(ProcessedMetric<T> metric)
    parameters:
    - id: metric
      type: Steeltoe.Management.OpenTelemetry.Metrics.Processor.ProcessedMetric`1
    content.vb: Public Sub New(metric As ProcessedMetric(Of T))
  overload: Steeltoe.Management.OpenTelemetry.Metrics.Processor.ProcessedMetric`1.#ctor*
  nameWithType.vb: ProcessedMetric(Of T).ProcessedMetric(ProcessedMetric(Of T))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Steeltoe.Management.OpenTelemetry.Metrics.Processor.ProcessedMetric(Of T).ProcessedMetric(Steeltoe.Management.OpenTelemetry.Metrics.Processor.ProcessedMetric(Of T))
  name.vb: ProcessedMetric(ProcessedMetric(Of T))
- uid: Steeltoe.Management.OpenTelemetry.Metrics.Processor.ProcessedMetric`1.Data
  commentId: P:Steeltoe.Management.OpenTelemetry.Metrics.Processor.ProcessedMetric`1.Data
  id: Data
  parent: Steeltoe.Management.OpenTelemetry.Metrics.Processor.ProcessedMetric`1
  langs:
  - csharp
  - vb
  name: Data
  nameWithType: ProcessedMetric<T>.Data
  fullName: Steeltoe.Management.OpenTelemetry.Metrics.Processor.ProcessedMetric<T>.Data
  type: Property
  source:
    remote:
      path: src/Management/src/OpenTelemetryBase/Metrics/Processor/ProcessedMetric.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Data
    path: ../Steeltoe/src/Management/src/OpenTelemetryBase/Metrics/Processor/ProcessedMetric.cs
    startLine: 26
  assemblies:
  - Steeltoe.Management.OpenTelemetryBase
  namespace: Steeltoe.Management.OpenTelemetry.Metrics.Processor
  syntax:
    content: public MetricData<T> Data { get; set; }
    parameters: []
    return:
      type: MetricData{{T}}
    content.vb: Public Property Data As MetricData(Of T)
  overload: Steeltoe.Management.OpenTelemetry.Metrics.Processor.ProcessedMetric`1.Data*
  nameWithType.vb: ProcessedMetric(Of T).Data
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  fullName.vb: Steeltoe.Management.OpenTelemetry.Metrics.Processor.ProcessedMetric(Of T).Data
references:
- uid: Steeltoe.Management.OpenTelemetry.Metrics.Processor
  commentId: N:Steeltoe.Management.OpenTelemetry.Metrics.Processor
  name: Steeltoe.Management.OpenTelemetry.Metrics.Processor
  nameWithType: Steeltoe.Management.OpenTelemetry.Metrics.Processor
  fullName: Steeltoe.Management.OpenTelemetry.Metrics.Processor
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Steeltoe.Management.OpenTelemetry.Metrics.Processor.ProcessedMetric`1.#ctor*
  commentId: Overload:Steeltoe.Management.OpenTelemetry.Metrics.Processor.ProcessedMetric`1.#ctor
  name: ProcessedMetric
  nameWithType: ProcessedMetric<T>.ProcessedMetric
  fullName: Steeltoe.Management.OpenTelemetry.Metrics.Processor.ProcessedMetric<T>.ProcessedMetric
  nameWithType.vb: ProcessedMetric(Of T).ProcessedMetric
  fullName.vb: Steeltoe.Management.OpenTelemetry.Metrics.Processor.ProcessedMetric(Of T).ProcessedMetric
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}}
  commentId: T:System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<KeyValuePair<String, String>>
  nameWithType: IEnumerable<KeyValuePair<String, String>>
  fullName: System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.String, System.String>>
  nameWithType.vb: IEnumerable(Of KeyValuePair(Of String, String))
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.Collections.Generic.KeyValuePair(Of System.String, System.String))
  name.vb: IEnumerable(Of KeyValuePair(Of String, String))
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: AggregationType
  commentId: '!:AggregationType'
  isExternal: true
  name: AggregationType
  nameWithType: AggregationType
  fullName: AggregationType
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Steeltoe.Management.OpenTelemetry.Metrics.Processor.ProcessedMetric`1
  commentId: T:Steeltoe.Management.OpenTelemetry.Metrics.Processor.ProcessedMetric`1
  parent: Steeltoe.Management.OpenTelemetry.Metrics.Processor
  name: ProcessedMetric<T>
  nameWithType: ProcessedMetric<T>
  fullName: Steeltoe.Management.OpenTelemetry.Metrics.Processor.ProcessedMetric<T>
  nameWithType.vb: ProcessedMetric(Of T)
  fullName.vb: Steeltoe.Management.OpenTelemetry.Metrics.Processor.ProcessedMetric(Of T)
  name.vb: ProcessedMetric(Of T)
  spec.csharp:
  - uid: Steeltoe.Management.OpenTelemetry.Metrics.Processor.ProcessedMetric`1
    name: ProcessedMetric
    nameWithType: ProcessedMetric
    fullName: Steeltoe.Management.OpenTelemetry.Metrics.Processor.ProcessedMetric
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Steeltoe.Management.OpenTelemetry.Metrics.Processor.ProcessedMetric`1
    name: ProcessedMetric
    nameWithType: ProcessedMetric
    fullName: Steeltoe.Management.OpenTelemetry.Metrics.Processor.ProcessedMetric
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Management.OpenTelemetry.Metrics.Processor.ProcessedMetric`1.Data*
  commentId: Overload:Steeltoe.Management.OpenTelemetry.Metrics.Processor.ProcessedMetric`1.Data
  name: Data
  nameWithType: ProcessedMetric<T>.Data
  fullName: Steeltoe.Management.OpenTelemetry.Metrics.Processor.ProcessedMetric<T>.Data
  nameWithType.vb: ProcessedMetric(Of T).Data
  fullName.vb: Steeltoe.Management.OpenTelemetry.Metrics.Processor.ProcessedMetric(Of T).Data
- uid: MetricData{{T}}
  commentId: '!:MetricData{`0}'
  definition: MetricData`1
  name: MetricData<T>
  nameWithType: MetricData<T>
  fullName: MetricData<T>
  nameWithType.vb: MetricData(Of T)
  fullName.vb: MetricData(Of T)
  name.vb: MetricData(Of T)
  spec.csharp:
  - uid: MetricData`1
    name: MetricData
    nameWithType: MetricData
    fullName: MetricData
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: MetricData`1
    name: MetricData
    nameWithType: MetricData
    fullName: MetricData
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: MetricData`1
  commentId: '!:MetricData`1'
  isExternal: true
  name: MetricData<>
  nameWithType: MetricData<>
  fullName: MetricData<>
  nameWithType.vb: MetricData(Of )
  fullName.vb: MetricData(Of )
  name.vb: MetricData(Of )
  spec.csharp:
  - uid: MetricData`1
    name: MetricData
    nameWithType: MetricData
    fullName: MetricData
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: MetricData`1
    name: MetricData
    nameWithType: MetricData
    fullName: MetricData
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
