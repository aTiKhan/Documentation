### YamlMime:ManagedReference
items:
- uid: Steeltoe.Messaging.RabbitMQ.Connection.IConnectionProxy
  commentId: T:Steeltoe.Messaging.RabbitMQ.Connection.IConnectionProxy
  id: IConnectionProxy
  parent: Steeltoe.Messaging.RabbitMQ.Connection
  children:
  - Steeltoe.Messaging.RabbitMQ.Connection.IConnectionProxy.TargetConnection
  langs:
  - csharp
  - vb
  name: IConnectionProxy
  nameWithType: IConnectionProxy
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.IConnectionProxy
  type: Interface
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Connection/IConnectionProxy.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: IConnectionProxy
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Connection/IConnectionProxy.cs
    startLine: 6
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Connection
  syntax:
    content: 'public interface IConnectionProxy : IConnection, IDisposable'
    content.vb: >-
      Public Interface IConnectionProxy

          Inherits IConnection
  inheritedMembers:
  - Steeltoe.Messaging.RabbitMQ.Connection.IConnection.IsOpen
  - Steeltoe.Messaging.RabbitMQ.Connection.IConnection.LocalPort
  - Steeltoe.Messaging.RabbitMQ.Connection.IConnection.CreateChannel(System.Boolean)
  - Steeltoe.Messaging.RabbitMQ.Connection.IConnection.Close
  - Steeltoe.Messaging.RabbitMQ.Connection.IConnection.Connection
  - Steeltoe.Messaging.RabbitMQ.Connection.IConnection.AddBlockedListener(Steeltoe.Messaging.RabbitMQ.Connection.IBlockedListener)
  - Steeltoe.Messaging.RabbitMQ.Connection.IConnection.RemoveBlockedListener(Steeltoe.Messaging.RabbitMQ.Connection.IBlockedListener)
  - System.IDisposable.Dispose
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Steeltoe.Messaging.RabbitMQ.Connection.IConnectionProxy.TargetConnection
  commentId: P:Steeltoe.Messaging.RabbitMQ.Connection.IConnectionProxy.TargetConnection
  id: TargetConnection
  parent: Steeltoe.Messaging.RabbitMQ.Connection.IConnectionProxy
  langs:
  - csharp
  - vb
  name: TargetConnection
  nameWithType: IConnectionProxy.TargetConnection
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.IConnectionProxy.TargetConnection
  type: Property
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Connection/IConnectionProxy.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: TargetConnection
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Connection/IConnectionProxy.cs
    startLine: 8
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Connection
  syntax:
    content: IConnection TargetConnection { get; }
    parameters: []
    return:
      type: Steeltoe.Messaging.RabbitMQ.Connection.IConnection
    content.vb: ReadOnly Property TargetConnection As IConnection
  overload: Steeltoe.Messaging.RabbitMQ.Connection.IConnectionProxy.TargetConnection*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
references:
- uid: Steeltoe.Messaging.RabbitMQ.Connection
  commentId: N:Steeltoe.Messaging.RabbitMQ.Connection
  name: Steeltoe.Messaging.RabbitMQ.Connection
  nameWithType: Steeltoe.Messaging.RabbitMQ.Connection
  fullName: Steeltoe.Messaging.RabbitMQ.Connection
- uid: Steeltoe.Messaging.RabbitMQ.Connection.IConnection.IsOpen
  commentId: P:Steeltoe.Messaging.RabbitMQ.Connection.IConnection.IsOpen
  parent: Steeltoe.Messaging.RabbitMQ.Connection.IConnection
  name: IsOpen
  nameWithType: IConnection.IsOpen
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.IConnection.IsOpen
- uid: Steeltoe.Messaging.RabbitMQ.Connection.IConnection.LocalPort
  commentId: P:Steeltoe.Messaging.RabbitMQ.Connection.IConnection.LocalPort
  parent: Steeltoe.Messaging.RabbitMQ.Connection.IConnection
  name: LocalPort
  nameWithType: IConnection.LocalPort
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.IConnection.LocalPort
- uid: Steeltoe.Messaging.RabbitMQ.Connection.IConnection.CreateChannel(System.Boolean)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Connection.IConnection.CreateChannel(System.Boolean)
  parent: Steeltoe.Messaging.RabbitMQ.Connection.IConnection
  isExternal: true
  name: CreateChannel(Boolean)
  nameWithType: IConnection.CreateChannel(Boolean)
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.IConnection.CreateChannel(System.Boolean)
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Connection.IConnection.CreateChannel(System.Boolean)
    name: CreateChannel
    nameWithType: IConnection.CreateChannel
    fullName: Steeltoe.Messaging.RabbitMQ.Connection.IConnection.CreateChannel
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Connection.IConnection.CreateChannel(System.Boolean)
    name: CreateChannel
    nameWithType: IConnection.CreateChannel
    fullName: Steeltoe.Messaging.RabbitMQ.Connection.IConnection.CreateChannel
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Connection.IConnection.Close
  commentId: M:Steeltoe.Messaging.RabbitMQ.Connection.IConnection.Close
  parent: Steeltoe.Messaging.RabbitMQ.Connection.IConnection
  name: Close()
  nameWithType: IConnection.Close()
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.IConnection.Close()
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Connection.IConnection.Close
    name: Close
    nameWithType: IConnection.Close
    fullName: Steeltoe.Messaging.RabbitMQ.Connection.IConnection.Close
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Connection.IConnection.Close
    name: Close
    nameWithType: IConnection.Close
    fullName: Steeltoe.Messaging.RabbitMQ.Connection.IConnection.Close
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Connection.IConnection.Connection
  commentId: P:Steeltoe.Messaging.RabbitMQ.Connection.IConnection.Connection
  parent: Steeltoe.Messaging.RabbitMQ.Connection.IConnection
  name: Connection
  nameWithType: IConnection.Connection
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.IConnection.Connection
- uid: Steeltoe.Messaging.RabbitMQ.Connection.IConnection.AddBlockedListener(Steeltoe.Messaging.RabbitMQ.Connection.IBlockedListener)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Connection.IConnection.AddBlockedListener(Steeltoe.Messaging.RabbitMQ.Connection.IBlockedListener)
  parent: Steeltoe.Messaging.RabbitMQ.Connection.IConnection
  name: AddBlockedListener(IBlockedListener)
  nameWithType: IConnection.AddBlockedListener(IBlockedListener)
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.IConnection.AddBlockedListener(Steeltoe.Messaging.RabbitMQ.Connection.IBlockedListener)
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Connection.IConnection.AddBlockedListener(Steeltoe.Messaging.RabbitMQ.Connection.IBlockedListener)
    name: AddBlockedListener
    nameWithType: IConnection.AddBlockedListener
    fullName: Steeltoe.Messaging.RabbitMQ.Connection.IConnection.AddBlockedListener
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.RabbitMQ.Connection.IBlockedListener
    name: IBlockedListener
    nameWithType: IBlockedListener
    fullName: Steeltoe.Messaging.RabbitMQ.Connection.IBlockedListener
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Connection.IConnection.AddBlockedListener(Steeltoe.Messaging.RabbitMQ.Connection.IBlockedListener)
    name: AddBlockedListener
    nameWithType: IConnection.AddBlockedListener
    fullName: Steeltoe.Messaging.RabbitMQ.Connection.IConnection.AddBlockedListener
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.RabbitMQ.Connection.IBlockedListener
    name: IBlockedListener
    nameWithType: IBlockedListener
    fullName: Steeltoe.Messaging.RabbitMQ.Connection.IBlockedListener
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Connection.IConnection.RemoveBlockedListener(Steeltoe.Messaging.RabbitMQ.Connection.IBlockedListener)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Connection.IConnection.RemoveBlockedListener(Steeltoe.Messaging.RabbitMQ.Connection.IBlockedListener)
  parent: Steeltoe.Messaging.RabbitMQ.Connection.IConnection
  name: RemoveBlockedListener(IBlockedListener)
  nameWithType: IConnection.RemoveBlockedListener(IBlockedListener)
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.IConnection.RemoveBlockedListener(Steeltoe.Messaging.RabbitMQ.Connection.IBlockedListener)
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Connection.IConnection.RemoveBlockedListener(Steeltoe.Messaging.RabbitMQ.Connection.IBlockedListener)
    name: RemoveBlockedListener
    nameWithType: IConnection.RemoveBlockedListener
    fullName: Steeltoe.Messaging.RabbitMQ.Connection.IConnection.RemoveBlockedListener
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.RabbitMQ.Connection.IBlockedListener
    name: IBlockedListener
    nameWithType: IBlockedListener
    fullName: Steeltoe.Messaging.RabbitMQ.Connection.IBlockedListener
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Connection.IConnection.RemoveBlockedListener(Steeltoe.Messaging.RabbitMQ.Connection.IBlockedListener)
    name: RemoveBlockedListener
    nameWithType: IConnection.RemoveBlockedListener
    fullName: Steeltoe.Messaging.RabbitMQ.Connection.IConnection.RemoveBlockedListener
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.RabbitMQ.Connection.IBlockedListener
    name: IBlockedListener
    nameWithType: IBlockedListener
    fullName: Steeltoe.Messaging.RabbitMQ.Connection.IBlockedListener
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IDisposable.Dispose
  commentId: M:System.IDisposable.Dispose
  parent: System.IDisposable
  isExternal: true
  name: Dispose()
  nameWithType: IDisposable.Dispose()
  fullName: System.IDisposable.Dispose()
  spec.csharp:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Connection.IConnection
  commentId: T:Steeltoe.Messaging.RabbitMQ.Connection.IConnection
  parent: Steeltoe.Messaging.RabbitMQ.Connection
  name: IConnection
  nameWithType: IConnection
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.IConnection
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Steeltoe.Messaging.RabbitMQ.Connection.IConnectionProxy.TargetConnection*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Connection.IConnectionProxy.TargetConnection
  name: TargetConnection
  nameWithType: IConnectionProxy.TargetConnection
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.IConnectionProxy.TargetConnection
