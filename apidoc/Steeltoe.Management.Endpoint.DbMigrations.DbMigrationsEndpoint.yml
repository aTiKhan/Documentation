### YamlMime:ManagedReference
items:
- uid: Steeltoe.Management.Endpoint.DbMigrations.DbMigrationsEndpoint
  commentId: T:Steeltoe.Management.Endpoint.DbMigrations.DbMigrationsEndpoint
  id: DbMigrationsEndpoint
  parent: Steeltoe.Management.Endpoint.DbMigrations
  children:
  - Steeltoe.Management.Endpoint.DbMigrations.DbMigrationsEndpoint.#ctor(Steeltoe.Management.Endpoint.DbMigrations.IDbMigrationsOptions,System.IServiceProvider,ILogger{Steeltoe.Management.Endpoint.DbMigrations.DbMigrationsEndpoint})
  - Steeltoe.Management.Endpoint.DbMigrations.DbMigrationsEndpoint.#ctor(Steeltoe.Management.Endpoint.DbMigrations.IDbMigrationsOptions,System.IServiceProvider,Steeltoe.Management.Endpoint.DbMigrations.DbMigrationsEndpoint.DbMigrationsEndpointHelper,ILogger{Steeltoe.Management.Endpoint.DbMigrations.DbMigrationsEndpoint})
  - Steeltoe.Management.Endpoint.DbMigrations.DbMigrationsEndpoint.Invoke
  langs:
  - csharp
  - vb
  name: DbMigrationsEndpoint
  nameWithType: DbMigrationsEndpoint
  fullName: Steeltoe.Management.Endpoint.DbMigrations.DbMigrationsEndpoint
  type: Class
  source:
    remote:
      path: src/Management/src/EndpointBase/DbMigrations/DbMigrationsEndpoint.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: DbMigrationsEndpoint
    path: ../Steeltoe/src/Management/src/EndpointBase/DbMigrations/DbMigrationsEndpoint.cs
    startLine: 13
  assemblies:
  - Steeltoe.Management.EndpointBase
  namespace: Steeltoe.Management.Endpoint.DbMigrations
  syntax:
    content: 'public class DbMigrationsEndpoint : AbstractEndpoint<Dictionary<string, DbMigrationsDescriptor>>, IEndpoint<Dictionary<string, DbMigrationsDescriptor>>, IEndpoint'
    content.vb: >-
      Public Class DbMigrationsEndpoint

          Inherits AbstractEndpoint(Of Dictionary(Of String, DbMigrationsDescriptor))

          Implements IEndpoint(Of Dictionary(Of String, DbMigrationsDescriptor)), IEndpoint
  inheritance:
  - System.Object
  - Steeltoe.Management.AbstractEndpoint
  - Steeltoe.Management.AbstractEndpoint{System.Collections.Generic.Dictionary{System.String,Steeltoe.Management.Endpoint.DbMigrations.DbMigrationsDescriptor}}
  implements:
  - Steeltoe.Management.IEndpoint{System.Collections.Generic.Dictionary{System.String,Steeltoe.Management.Endpoint.DbMigrations.DbMigrationsDescriptor}}
  - Steeltoe.Management.IEndpoint
  inheritedMembers:
  - Steeltoe.Management.AbstractEndpoint{System.Collections.Generic.Dictionary{System.String,Steeltoe.Management.Endpoint.DbMigrations.DbMigrationsDescriptor}}.Invoke
  - Steeltoe.Management.AbstractEndpoint.options
  - Steeltoe.Management.AbstractEndpoint.Id
  - Steeltoe.Management.AbstractEndpoint.Enabled
  - Steeltoe.Management.AbstractEndpoint.Options
  - Steeltoe.Management.AbstractEndpoint.Path
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - Steeltoe.Management.IEndpoint.Steeltoe.Management.Endpoint.EndPointExtensions.IsEnabled(Steeltoe.Management.IManagementOptions)
  - Steeltoe.Management.IEndpoint.Steeltoe.Management.Endpoint.EndPointExtensions.IsExposed(Steeltoe.Management.IManagementOptions)
  - Steeltoe.Management.IEndpoint.Steeltoe.Management.Endpoint.EndPointExtensions.ShouldInvoke(Steeltoe.Management.IManagementOptions,ILogger)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Steeltoe.Management.Endpoint.DbMigrations.DbMigrationsEndpoint.#ctor(Steeltoe.Management.Endpoint.DbMigrations.IDbMigrationsOptions,System.IServiceProvider,ILogger{Steeltoe.Management.Endpoint.DbMigrations.DbMigrationsEndpoint})
  commentId: M:Steeltoe.Management.Endpoint.DbMigrations.DbMigrationsEndpoint.#ctor(Steeltoe.Management.Endpoint.DbMigrations.IDbMigrationsOptions,System.IServiceProvider,ILogger{Steeltoe.Management.Endpoint.DbMigrations.DbMigrationsEndpoint})
  id: '#ctor(Steeltoe.Management.Endpoint.DbMigrations.IDbMigrationsOptions,System.IServiceProvider,ILogger{Steeltoe.Management.Endpoint.DbMigrations.DbMigrationsEndpoint})'
  parent: Steeltoe.Management.Endpoint.DbMigrations.DbMigrationsEndpoint
  langs:
  - csharp
  - vb
  name: DbMigrationsEndpoint(IDbMigrationsOptions, IServiceProvider, ILogger<DbMigrationsEndpoint>)
  nameWithType: DbMigrationsEndpoint.DbMigrationsEndpoint(IDbMigrationsOptions, IServiceProvider, ILogger<DbMigrationsEndpoint>)
  fullName: Steeltoe.Management.Endpoint.DbMigrations.DbMigrationsEndpoint.DbMigrationsEndpoint(Steeltoe.Management.Endpoint.DbMigrations.IDbMigrationsOptions, System.IServiceProvider, ILogger<Steeltoe.Management.Endpoint.DbMigrations.DbMigrationsEndpoint>)
  type: Constructor
  source:
    remote:
      path: src/Management/src/EndpointBase/DbMigrations/DbMigrationsEndpoint.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: .ctor
    path: ../Steeltoe/src/Management/src/EndpointBase/DbMigrations/DbMigrationsEndpoint.cs
    startLine: 46
  assemblies:
  - Steeltoe.Management.EndpointBase
  namespace: Steeltoe.Management.Endpoint.DbMigrations
  syntax:
    content: public DbMigrationsEndpoint(IDbMigrationsOptions options, IServiceProvider container, ILogger<DbMigrationsEndpoint> logger = null)
    parameters:
    - id: options
      type: Steeltoe.Management.Endpoint.DbMigrations.IDbMigrationsOptions
    - id: container
      type: System.IServiceProvider
    - id: logger
      type: ILogger{Steeltoe.Management.Endpoint.DbMigrations.DbMigrationsEndpoint}
    content.vb: Public Sub New(options As IDbMigrationsOptions, container As IServiceProvider, logger As ILogger(Of DbMigrationsEndpoint) = Nothing)
  overload: Steeltoe.Management.Endpoint.DbMigrations.DbMigrationsEndpoint.#ctor*
  nameWithType.vb: DbMigrationsEndpoint.DbMigrationsEndpoint(IDbMigrationsOptions, IServiceProvider, ILogger(Of DbMigrationsEndpoint))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Steeltoe.Management.Endpoint.DbMigrations.DbMigrationsEndpoint.DbMigrationsEndpoint(Steeltoe.Management.Endpoint.DbMigrations.IDbMigrationsOptions, System.IServiceProvider, ILogger(Of Steeltoe.Management.Endpoint.DbMigrations.DbMigrationsEndpoint))
  name.vb: DbMigrationsEndpoint(IDbMigrationsOptions, IServiceProvider, ILogger(Of DbMigrationsEndpoint))
- uid: Steeltoe.Management.Endpoint.DbMigrations.DbMigrationsEndpoint.#ctor(Steeltoe.Management.Endpoint.DbMigrations.IDbMigrationsOptions,System.IServiceProvider,Steeltoe.Management.Endpoint.DbMigrations.DbMigrationsEndpoint.DbMigrationsEndpointHelper,ILogger{Steeltoe.Management.Endpoint.DbMigrations.DbMigrationsEndpoint})
  commentId: M:Steeltoe.Management.Endpoint.DbMigrations.DbMigrationsEndpoint.#ctor(Steeltoe.Management.Endpoint.DbMigrations.IDbMigrationsOptions,System.IServiceProvider,Steeltoe.Management.Endpoint.DbMigrations.DbMigrationsEndpoint.DbMigrationsEndpointHelper,ILogger{Steeltoe.Management.Endpoint.DbMigrations.DbMigrationsEndpoint})
  id: '#ctor(Steeltoe.Management.Endpoint.DbMigrations.IDbMigrationsOptions,System.IServiceProvider,Steeltoe.Management.Endpoint.DbMigrations.DbMigrationsEndpoint.DbMigrationsEndpointHelper,ILogger{Steeltoe.Management.Endpoint.DbMigrations.DbMigrationsEndpoint})'
  parent: Steeltoe.Management.Endpoint.DbMigrations.DbMigrationsEndpoint
  langs:
  - csharp
  - vb
  name: DbMigrationsEndpoint(IDbMigrationsOptions, IServiceProvider, DbMigrationsEndpoint.DbMigrationsEndpointHelper, ILogger<DbMigrationsEndpoint>)
  nameWithType: DbMigrationsEndpoint.DbMigrationsEndpoint(IDbMigrationsOptions, IServiceProvider, DbMigrationsEndpoint.DbMigrationsEndpointHelper, ILogger<DbMigrationsEndpoint>)
  fullName: Steeltoe.Management.Endpoint.DbMigrations.DbMigrationsEndpoint.DbMigrationsEndpoint(Steeltoe.Management.Endpoint.DbMigrations.IDbMigrationsOptions, System.IServiceProvider, Steeltoe.Management.Endpoint.DbMigrations.DbMigrationsEndpoint.DbMigrationsEndpointHelper, ILogger<Steeltoe.Management.Endpoint.DbMigrations.DbMigrationsEndpoint>)
  type: Constructor
  source:
    remote:
      path: src/Management/src/EndpointBase/DbMigrations/DbMigrationsEndpoint.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: .ctor
    path: ../Steeltoe/src/Management/src/EndpointBase/DbMigrations/DbMigrationsEndpoint.cs
    startLine: 54
  assemblies:
  - Steeltoe.Management.EndpointBase
  namespace: Steeltoe.Management.Endpoint.DbMigrations
  syntax:
    content: public DbMigrationsEndpoint(IDbMigrationsOptions options, IServiceProvider container, DbMigrationsEndpoint.DbMigrationsEndpointHelper endpointHelper, ILogger<DbMigrationsEndpoint> logger = null)
    parameters:
    - id: options
      type: Steeltoe.Management.Endpoint.DbMigrations.IDbMigrationsOptions
    - id: container
      type: System.IServiceProvider
    - id: endpointHelper
      type: Steeltoe.Management.Endpoint.DbMigrations.DbMigrationsEndpoint.DbMigrationsEndpointHelper
    - id: logger
      type: ILogger{Steeltoe.Management.Endpoint.DbMigrations.DbMigrationsEndpoint}
    content.vb: Public Sub New(options As IDbMigrationsOptions, container As IServiceProvider, endpointHelper As DbMigrationsEndpoint.DbMigrationsEndpointHelper, logger As ILogger(Of DbMigrationsEndpoint) = Nothing)
  overload: Steeltoe.Management.Endpoint.DbMigrations.DbMigrationsEndpoint.#ctor*
  nameWithType.vb: DbMigrationsEndpoint.DbMigrationsEndpoint(IDbMigrationsOptions, IServiceProvider, DbMigrationsEndpoint.DbMigrationsEndpointHelper, ILogger(Of DbMigrationsEndpoint))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Steeltoe.Management.Endpoint.DbMigrations.DbMigrationsEndpoint.DbMigrationsEndpoint(Steeltoe.Management.Endpoint.DbMigrations.IDbMigrationsOptions, System.IServiceProvider, Steeltoe.Management.Endpoint.DbMigrations.DbMigrationsEndpoint.DbMigrationsEndpointHelper, ILogger(Of Steeltoe.Management.Endpoint.DbMigrations.DbMigrationsEndpoint))
  name.vb: DbMigrationsEndpoint(IDbMigrationsOptions, IServiceProvider, DbMigrationsEndpoint.DbMigrationsEndpointHelper, ILogger(Of DbMigrationsEndpoint))
- uid: Steeltoe.Management.Endpoint.DbMigrations.DbMigrationsEndpoint.Invoke
  commentId: M:Steeltoe.Management.Endpoint.DbMigrations.DbMigrationsEndpoint.Invoke
  id: Invoke
  parent: Steeltoe.Management.Endpoint.DbMigrations.DbMigrationsEndpoint
  langs:
  - csharp
  - vb
  name: Invoke()
  nameWithType: DbMigrationsEndpoint.Invoke()
  fullName: Steeltoe.Management.Endpoint.DbMigrations.DbMigrationsEndpoint.Invoke()
  type: Method
  source:
    remote:
      path: src/Management/src/EndpointBase/DbMigrations/DbMigrationsEndpoint.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Invoke
    path: ../Steeltoe/src/Management/src/EndpointBase/DbMigrations/DbMigrationsEndpoint.cs
    startLine: 66
  assemblies:
  - Steeltoe.Management.EndpointBase
  namespace: Steeltoe.Management.Endpoint.DbMigrations
  syntax:
    content: public override Dictionary<string, DbMigrationsDescriptor> Invoke()
    return:
      type: System.Collections.Generic.Dictionary{System.String,Steeltoe.Management.Endpoint.DbMigrations.DbMigrationsDescriptor}
    content.vb: Public Overrides Function Invoke As Dictionary(Of String, DbMigrationsDescriptor)
  overridden: Steeltoe.Management.AbstractEndpoint{System.Collections.Generic.Dictionary{System.String,Steeltoe.Management.Endpoint.DbMigrations.DbMigrationsDescriptor}}.Invoke
  overload: Steeltoe.Management.Endpoint.DbMigrations.DbMigrationsEndpoint.Invoke*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: Steeltoe.Management.Endpoint.DbMigrations
  commentId: N:Steeltoe.Management.Endpoint.DbMigrations
  name: Steeltoe.Management.Endpoint.DbMigrations
  nameWithType: Steeltoe.Management.Endpoint.DbMigrations
  fullName: Steeltoe.Management.Endpoint.DbMigrations
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Steeltoe.Management.AbstractEndpoint
  commentId: T:Steeltoe.Management.AbstractEndpoint
  parent: Steeltoe.Management
  name: AbstractEndpoint
  nameWithType: AbstractEndpoint
  fullName: Steeltoe.Management.AbstractEndpoint
- uid: Steeltoe.Management.AbstractEndpoint{System.Collections.Generic.Dictionary{System.String,Steeltoe.Management.Endpoint.DbMigrations.DbMigrationsDescriptor}}
  commentId: T:Steeltoe.Management.AbstractEndpoint{System.Collections.Generic.Dictionary{System.String,Steeltoe.Management.Endpoint.DbMigrations.DbMigrationsDescriptor}}
  parent: Steeltoe.Management
  definition: Steeltoe.Management.AbstractEndpoint`1
  name: AbstractEndpoint<Dictionary<String, DbMigrationsDescriptor>>
  nameWithType: AbstractEndpoint<Dictionary<String, DbMigrationsDescriptor>>
  fullName: Steeltoe.Management.AbstractEndpoint<System.Collections.Generic.Dictionary<System.String, Steeltoe.Management.Endpoint.DbMigrations.DbMigrationsDescriptor>>
  nameWithType.vb: AbstractEndpoint(Of Dictionary(Of String, DbMigrationsDescriptor))
  fullName.vb: Steeltoe.Management.AbstractEndpoint(Of System.Collections.Generic.Dictionary(Of System.String, Steeltoe.Management.Endpoint.DbMigrations.DbMigrationsDescriptor))
  name.vb: AbstractEndpoint(Of Dictionary(Of String, DbMigrationsDescriptor))
  spec.csharp:
  - uid: Steeltoe.Management.AbstractEndpoint`1
    name: AbstractEndpoint
    nameWithType: AbstractEndpoint
    fullName: Steeltoe.Management.AbstractEndpoint
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Management.Endpoint.DbMigrations.DbMigrationsDescriptor
    name: DbMigrationsDescriptor
    nameWithType: DbMigrationsDescriptor
    fullName: Steeltoe.Management.Endpoint.DbMigrations.DbMigrationsDescriptor
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Steeltoe.Management.AbstractEndpoint`1
    name: AbstractEndpoint
    nameWithType: AbstractEndpoint
    fullName: Steeltoe.Management.AbstractEndpoint
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Management.Endpoint.DbMigrations.DbMigrationsDescriptor
    name: DbMigrationsDescriptor
    nameWithType: DbMigrationsDescriptor
    fullName: Steeltoe.Management.Endpoint.DbMigrations.DbMigrationsDescriptor
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Management.IEndpoint{System.Collections.Generic.Dictionary{System.String,Steeltoe.Management.Endpoint.DbMigrations.DbMigrationsDescriptor}}
  commentId: T:Steeltoe.Management.IEndpoint{System.Collections.Generic.Dictionary{System.String,Steeltoe.Management.Endpoint.DbMigrations.DbMigrationsDescriptor}}
  parent: Steeltoe.Management
  definition: Steeltoe.Management.IEndpoint`1
  name: IEndpoint<Dictionary<String, DbMigrationsDescriptor>>
  nameWithType: IEndpoint<Dictionary<String, DbMigrationsDescriptor>>
  fullName: Steeltoe.Management.IEndpoint<System.Collections.Generic.Dictionary<System.String, Steeltoe.Management.Endpoint.DbMigrations.DbMigrationsDescriptor>>
  nameWithType.vb: IEndpoint(Of Dictionary(Of String, DbMigrationsDescriptor))
  fullName.vb: Steeltoe.Management.IEndpoint(Of System.Collections.Generic.Dictionary(Of System.String, Steeltoe.Management.Endpoint.DbMigrations.DbMigrationsDescriptor))
  name.vb: IEndpoint(Of Dictionary(Of String, DbMigrationsDescriptor))
  spec.csharp:
  - uid: Steeltoe.Management.IEndpoint`1
    name: IEndpoint
    nameWithType: IEndpoint
    fullName: Steeltoe.Management.IEndpoint
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Management.Endpoint.DbMigrations.DbMigrationsDescriptor
    name: DbMigrationsDescriptor
    nameWithType: DbMigrationsDescriptor
    fullName: Steeltoe.Management.Endpoint.DbMigrations.DbMigrationsDescriptor
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Steeltoe.Management.IEndpoint`1
    name: IEndpoint
    nameWithType: IEndpoint
    fullName: Steeltoe.Management.IEndpoint
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Management.Endpoint.DbMigrations.DbMigrationsDescriptor
    name: DbMigrationsDescriptor
    nameWithType: DbMigrationsDescriptor
    fullName: Steeltoe.Management.Endpoint.DbMigrations.DbMigrationsDescriptor
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Management.IEndpoint
  commentId: T:Steeltoe.Management.IEndpoint
  parent: Steeltoe.Management
  name: IEndpoint
  nameWithType: IEndpoint
  fullName: Steeltoe.Management.IEndpoint
- uid: Steeltoe.Management.AbstractEndpoint{System.Collections.Generic.Dictionary{System.String,Steeltoe.Management.Endpoint.DbMigrations.DbMigrationsDescriptor}}.Invoke
  commentId: M:Steeltoe.Management.AbstractEndpoint{System.Collections.Generic.Dictionary{System.String,Steeltoe.Management.Endpoint.DbMigrations.DbMigrationsDescriptor}}.Invoke
  parent: Steeltoe.Management.AbstractEndpoint{System.Collections.Generic.Dictionary{System.String,Steeltoe.Management.Endpoint.DbMigrations.DbMigrationsDescriptor}}
  definition: Steeltoe.Management.AbstractEndpoint`1.Invoke
  name: Invoke()
  nameWithType: AbstractEndpoint<Dictionary<String, DbMigrationsDescriptor>>.Invoke()
  fullName: Steeltoe.Management.AbstractEndpoint<System.Collections.Generic.Dictionary<System.String, Steeltoe.Management.Endpoint.DbMigrations.DbMigrationsDescriptor>>.Invoke()
  nameWithType.vb: AbstractEndpoint(Of Dictionary(Of String, DbMigrationsDescriptor)).Invoke()
  fullName.vb: Steeltoe.Management.AbstractEndpoint(Of System.Collections.Generic.Dictionary(Of System.String, Steeltoe.Management.Endpoint.DbMigrations.DbMigrationsDescriptor)).Invoke()
  spec.csharp:
  - uid: Steeltoe.Management.AbstractEndpoint`1.Invoke
    name: Invoke
    nameWithType: AbstractEndpoint<Dictionary<String, DbMigrationsDescriptor>>.Invoke
    fullName: Steeltoe.Management.AbstractEndpoint<System.Collections.Generic.Dictionary<System.String, Steeltoe.Management.Endpoint.DbMigrations.DbMigrationsDescriptor>>.Invoke
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Management.AbstractEndpoint`1.Invoke
    name: Invoke
    nameWithType: AbstractEndpoint(Of Dictionary(Of String, DbMigrationsDescriptor)).Invoke
    fullName: Steeltoe.Management.AbstractEndpoint(Of System.Collections.Generic.Dictionary(Of System.String, Steeltoe.Management.Endpoint.DbMigrations.DbMigrationsDescriptor)).Invoke
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Management.AbstractEndpoint.options
  commentId: F:Steeltoe.Management.AbstractEndpoint.options
  parent: Steeltoe.Management.AbstractEndpoint
  name: options
  nameWithType: AbstractEndpoint.options
  fullName: Steeltoe.Management.AbstractEndpoint.options
- uid: Steeltoe.Management.AbstractEndpoint.Id
  commentId: P:Steeltoe.Management.AbstractEndpoint.Id
  parent: Steeltoe.Management.AbstractEndpoint
  name: Id
  nameWithType: AbstractEndpoint.Id
  fullName: Steeltoe.Management.AbstractEndpoint.Id
- uid: Steeltoe.Management.AbstractEndpoint.Enabled
  commentId: P:Steeltoe.Management.AbstractEndpoint.Enabled
  parent: Steeltoe.Management.AbstractEndpoint
  name: Enabled
  nameWithType: AbstractEndpoint.Enabled
  fullName: Steeltoe.Management.AbstractEndpoint.Enabled
- uid: Steeltoe.Management.AbstractEndpoint.Options
  commentId: P:Steeltoe.Management.AbstractEndpoint.Options
  parent: Steeltoe.Management.AbstractEndpoint
  name: Options
  nameWithType: AbstractEndpoint.Options
  fullName: Steeltoe.Management.AbstractEndpoint.Options
- uid: Steeltoe.Management.AbstractEndpoint.Path
  commentId: P:Steeltoe.Management.AbstractEndpoint.Path
  parent: Steeltoe.Management.AbstractEndpoint
  name: Path
  nameWithType: AbstractEndpoint.Path
  fullName: Steeltoe.Management.AbstractEndpoint.Path
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Management.IEndpoint.Steeltoe.Management.Endpoint.EndPointExtensions.IsEnabled(Steeltoe.Management.IManagementOptions)
  commentId: M:Steeltoe.Management.Endpoint.EndPointExtensions.IsEnabled(Steeltoe.Management.IEndpoint,Steeltoe.Management.IManagementOptions)
  parent: Steeltoe.Management.Endpoint.EndPointExtensions
  definition: Steeltoe.Management.Endpoint.EndPointExtensions.IsEnabled(Steeltoe.Management.IEndpoint,Steeltoe.Management.IManagementOptions)
  name: IsEnabled(IManagementOptions)
  nameWithType: EndPointExtensions.IsEnabled(IManagementOptions)
  fullName: Steeltoe.Management.Endpoint.EndPointExtensions.IsEnabled(Steeltoe.Management.IManagementOptions)
  spec.csharp:
  - uid: Steeltoe.Management.Endpoint.EndPointExtensions.IsEnabled(Steeltoe.Management.IManagementOptions)
    name: IsEnabled
    nameWithType: EndPointExtensions.IsEnabled
    fullName: Steeltoe.Management.Endpoint.EndPointExtensions.IsEnabled
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Management.IManagementOptions
    name: IManagementOptions
    nameWithType: IManagementOptions
    fullName: Steeltoe.Management.IManagementOptions
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Management.Endpoint.EndPointExtensions.IsEnabled(Steeltoe.Management.IManagementOptions)
    name: IsEnabled
    nameWithType: EndPointExtensions.IsEnabled
    fullName: Steeltoe.Management.Endpoint.EndPointExtensions.IsEnabled
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Management.IManagementOptions
    name: IManagementOptions
    nameWithType: IManagementOptions
    fullName: Steeltoe.Management.IManagementOptions
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Management.IEndpoint.Steeltoe.Management.Endpoint.EndPointExtensions.IsExposed(Steeltoe.Management.IManagementOptions)
  commentId: M:Steeltoe.Management.Endpoint.EndPointExtensions.IsExposed(Steeltoe.Management.IEndpoint,Steeltoe.Management.IManagementOptions)
  parent: Steeltoe.Management.Endpoint.EndPointExtensions
  definition: Steeltoe.Management.Endpoint.EndPointExtensions.IsExposed(Steeltoe.Management.IEndpoint,Steeltoe.Management.IManagementOptions)
  name: IsExposed(IManagementOptions)
  nameWithType: EndPointExtensions.IsExposed(IManagementOptions)
  fullName: Steeltoe.Management.Endpoint.EndPointExtensions.IsExposed(Steeltoe.Management.IManagementOptions)
  spec.csharp:
  - uid: Steeltoe.Management.Endpoint.EndPointExtensions.IsExposed(Steeltoe.Management.IManagementOptions)
    name: IsExposed
    nameWithType: EndPointExtensions.IsExposed
    fullName: Steeltoe.Management.Endpoint.EndPointExtensions.IsExposed
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Management.IManagementOptions
    name: IManagementOptions
    nameWithType: IManagementOptions
    fullName: Steeltoe.Management.IManagementOptions
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Management.Endpoint.EndPointExtensions.IsExposed(Steeltoe.Management.IManagementOptions)
    name: IsExposed
    nameWithType: EndPointExtensions.IsExposed
    fullName: Steeltoe.Management.Endpoint.EndPointExtensions.IsExposed
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Management.IManagementOptions
    name: IManagementOptions
    nameWithType: IManagementOptions
    fullName: Steeltoe.Management.IManagementOptions
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Management.IEndpoint.Steeltoe.Management.Endpoint.EndPointExtensions.ShouldInvoke(Steeltoe.Management.IManagementOptions,ILogger)
  commentId: M:Steeltoe.Management.Endpoint.EndPointExtensions.ShouldInvoke(Steeltoe.Management.IEndpoint,Steeltoe.Management.IManagementOptions,ILogger)
  parent: Steeltoe.Management.Endpoint.EndPointExtensions
  definition: Steeltoe.Management.Endpoint.EndPointExtensions.ShouldInvoke(Steeltoe.Management.IEndpoint,Steeltoe.Management.IManagementOptions,ILogger)
  name: ShouldInvoke(IManagementOptions, ILogger)
  nameWithType: EndPointExtensions.ShouldInvoke(IManagementOptions, ILogger)
  fullName: Steeltoe.Management.Endpoint.EndPointExtensions.ShouldInvoke(Steeltoe.Management.IManagementOptions, ILogger)
  spec.csharp:
  - uid: Steeltoe.Management.Endpoint.EndPointExtensions.ShouldInvoke(Steeltoe.Management.IManagementOptions,ILogger)
    name: ShouldInvoke
    nameWithType: EndPointExtensions.ShouldInvoke
    fullName: Steeltoe.Management.Endpoint.EndPointExtensions.ShouldInvoke
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Management.IManagementOptions
    name: IManagementOptions
    nameWithType: IManagementOptions
    fullName: Steeltoe.Management.IManagementOptions
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: ILogger
    name: ILogger
    nameWithType: ILogger
    fullName: ILogger
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Management.Endpoint.EndPointExtensions.ShouldInvoke(Steeltoe.Management.IManagementOptions,ILogger)
    name: ShouldInvoke
    nameWithType: EndPointExtensions.ShouldInvoke
    fullName: Steeltoe.Management.Endpoint.EndPointExtensions.ShouldInvoke
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Management.IManagementOptions
    name: IManagementOptions
    nameWithType: IManagementOptions
    fullName: Steeltoe.Management.IManagementOptions
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: ILogger
    name: ILogger
    nameWithType: ILogger
    fullName: ILogger
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Steeltoe.Management
  commentId: N:Steeltoe.Management
  name: Steeltoe.Management
  nameWithType: Steeltoe.Management
  fullName: Steeltoe.Management
- uid: Steeltoe.Management.AbstractEndpoint`1
  commentId: T:Steeltoe.Management.AbstractEndpoint`1
  name: AbstractEndpoint<TResult>
  nameWithType: AbstractEndpoint<TResult>
  fullName: Steeltoe.Management.AbstractEndpoint<TResult>
  nameWithType.vb: AbstractEndpoint(Of TResult)
  fullName.vb: Steeltoe.Management.AbstractEndpoint(Of TResult)
  name.vb: AbstractEndpoint(Of TResult)
  spec.csharp:
  - uid: Steeltoe.Management.AbstractEndpoint`1
    name: AbstractEndpoint
    nameWithType: AbstractEndpoint
    fullName: Steeltoe.Management.AbstractEndpoint
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Steeltoe.Management.AbstractEndpoint`1
    name: AbstractEndpoint
    nameWithType: AbstractEndpoint
    fullName: Steeltoe.Management.AbstractEndpoint
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Management.IEndpoint`1
  commentId: T:Steeltoe.Management.IEndpoint`1
  name: IEndpoint<TResult>
  nameWithType: IEndpoint<TResult>
  fullName: Steeltoe.Management.IEndpoint<TResult>
  nameWithType.vb: IEndpoint(Of TResult)
  fullName.vb: Steeltoe.Management.IEndpoint(Of TResult)
  name.vb: IEndpoint(Of TResult)
  spec.csharp:
  - uid: Steeltoe.Management.IEndpoint`1
    name: IEndpoint
    nameWithType: IEndpoint
    fullName: Steeltoe.Management.IEndpoint
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Steeltoe.Management.IEndpoint`1
    name: IEndpoint
    nameWithType: IEndpoint
    fullName: Steeltoe.Management.IEndpoint
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Management.AbstractEndpoint`1.Invoke
  commentId: M:Steeltoe.Management.AbstractEndpoint`1.Invoke
  name: Invoke()
  nameWithType: AbstractEndpoint<TResult>.Invoke()
  fullName: Steeltoe.Management.AbstractEndpoint<TResult>.Invoke()
  nameWithType.vb: AbstractEndpoint(Of TResult).Invoke()
  fullName.vb: Steeltoe.Management.AbstractEndpoint(Of TResult).Invoke()
  spec.csharp:
  - uid: Steeltoe.Management.AbstractEndpoint`1.Invoke
    name: Invoke
    nameWithType: AbstractEndpoint<TResult>.Invoke
    fullName: Steeltoe.Management.AbstractEndpoint<TResult>.Invoke
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Management.AbstractEndpoint`1.Invoke
    name: Invoke
    nameWithType: AbstractEndpoint(Of TResult).Invoke
    fullName: Steeltoe.Management.AbstractEndpoint(Of TResult).Invoke
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Management.Endpoint.EndPointExtensions.IsEnabled(Steeltoe.Management.IEndpoint,Steeltoe.Management.IManagementOptions)
  commentId: M:Steeltoe.Management.Endpoint.EndPointExtensions.IsEnabled(Steeltoe.Management.IEndpoint,Steeltoe.Management.IManagementOptions)
  name: IsEnabled(IEndpoint, IManagementOptions)
  nameWithType: EndPointExtensions.IsEnabled(IEndpoint, IManagementOptions)
  fullName: Steeltoe.Management.Endpoint.EndPointExtensions.IsEnabled(Steeltoe.Management.IEndpoint, Steeltoe.Management.IManagementOptions)
  spec.csharp:
  - uid: Steeltoe.Management.Endpoint.EndPointExtensions.IsEnabled(Steeltoe.Management.IEndpoint,Steeltoe.Management.IManagementOptions)
    name: IsEnabled
    nameWithType: EndPointExtensions.IsEnabled
    fullName: Steeltoe.Management.Endpoint.EndPointExtensions.IsEnabled
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Management.IEndpoint
    name: IEndpoint
    nameWithType: IEndpoint
    fullName: Steeltoe.Management.IEndpoint
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Management.IManagementOptions
    name: IManagementOptions
    nameWithType: IManagementOptions
    fullName: Steeltoe.Management.IManagementOptions
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Management.Endpoint.EndPointExtensions.IsEnabled(Steeltoe.Management.IEndpoint,Steeltoe.Management.IManagementOptions)
    name: IsEnabled
    nameWithType: EndPointExtensions.IsEnabled
    fullName: Steeltoe.Management.Endpoint.EndPointExtensions.IsEnabled
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Management.IEndpoint
    name: IEndpoint
    nameWithType: IEndpoint
    fullName: Steeltoe.Management.IEndpoint
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Management.IManagementOptions
    name: IManagementOptions
    nameWithType: IManagementOptions
    fullName: Steeltoe.Management.IManagementOptions
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Management.Endpoint.EndPointExtensions
  commentId: T:Steeltoe.Management.Endpoint.EndPointExtensions
  parent: Steeltoe.Management.Endpoint
  name: EndPointExtensions
  nameWithType: EndPointExtensions
  fullName: Steeltoe.Management.Endpoint.EndPointExtensions
- uid: Steeltoe.Management.Endpoint.EndPointExtensions.IsExposed(Steeltoe.Management.IEndpoint,Steeltoe.Management.IManagementOptions)
  commentId: M:Steeltoe.Management.Endpoint.EndPointExtensions.IsExposed(Steeltoe.Management.IEndpoint,Steeltoe.Management.IManagementOptions)
  name: IsExposed(IEndpoint, IManagementOptions)
  nameWithType: EndPointExtensions.IsExposed(IEndpoint, IManagementOptions)
  fullName: Steeltoe.Management.Endpoint.EndPointExtensions.IsExposed(Steeltoe.Management.IEndpoint, Steeltoe.Management.IManagementOptions)
  spec.csharp:
  - uid: Steeltoe.Management.Endpoint.EndPointExtensions.IsExposed(Steeltoe.Management.IEndpoint,Steeltoe.Management.IManagementOptions)
    name: IsExposed
    nameWithType: EndPointExtensions.IsExposed
    fullName: Steeltoe.Management.Endpoint.EndPointExtensions.IsExposed
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Management.IEndpoint
    name: IEndpoint
    nameWithType: IEndpoint
    fullName: Steeltoe.Management.IEndpoint
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Management.IManagementOptions
    name: IManagementOptions
    nameWithType: IManagementOptions
    fullName: Steeltoe.Management.IManagementOptions
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Management.Endpoint.EndPointExtensions.IsExposed(Steeltoe.Management.IEndpoint,Steeltoe.Management.IManagementOptions)
    name: IsExposed
    nameWithType: EndPointExtensions.IsExposed
    fullName: Steeltoe.Management.Endpoint.EndPointExtensions.IsExposed
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Management.IEndpoint
    name: IEndpoint
    nameWithType: IEndpoint
    fullName: Steeltoe.Management.IEndpoint
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Management.IManagementOptions
    name: IManagementOptions
    nameWithType: IManagementOptions
    fullName: Steeltoe.Management.IManagementOptions
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Management.Endpoint.EndPointExtensions.ShouldInvoke(Steeltoe.Management.IEndpoint,Steeltoe.Management.IManagementOptions,ILogger)
  commentId: M:Steeltoe.Management.Endpoint.EndPointExtensions.ShouldInvoke(Steeltoe.Management.IEndpoint,Steeltoe.Management.IManagementOptions,ILogger)
  isExternal: true
  name: ShouldInvoke(IEndpoint, IManagementOptions, ILogger)
  nameWithType: EndPointExtensions.ShouldInvoke(IEndpoint, IManagementOptions, ILogger)
  fullName: Steeltoe.Management.Endpoint.EndPointExtensions.ShouldInvoke(Steeltoe.Management.IEndpoint, Steeltoe.Management.IManagementOptions, ILogger)
  spec.csharp:
  - uid: Steeltoe.Management.Endpoint.EndPointExtensions.ShouldInvoke(Steeltoe.Management.IEndpoint,Steeltoe.Management.IManagementOptions,ILogger)
    name: ShouldInvoke
    nameWithType: EndPointExtensions.ShouldInvoke
    fullName: Steeltoe.Management.Endpoint.EndPointExtensions.ShouldInvoke
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Management.IEndpoint
    name: IEndpoint
    nameWithType: IEndpoint
    fullName: Steeltoe.Management.IEndpoint
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Management.IManagementOptions
    name: IManagementOptions
    nameWithType: IManagementOptions
    fullName: Steeltoe.Management.IManagementOptions
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: ILogger
    name: ILogger
    nameWithType: ILogger
    fullName: ILogger
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Management.Endpoint.EndPointExtensions.ShouldInvoke(Steeltoe.Management.IEndpoint,Steeltoe.Management.IManagementOptions,ILogger)
    name: ShouldInvoke
    nameWithType: EndPointExtensions.ShouldInvoke
    fullName: Steeltoe.Management.Endpoint.EndPointExtensions.ShouldInvoke
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Management.IEndpoint
    name: IEndpoint
    nameWithType: IEndpoint
    fullName: Steeltoe.Management.IEndpoint
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Management.IManagementOptions
    name: IManagementOptions
    nameWithType: IManagementOptions
    fullName: Steeltoe.Management.IManagementOptions
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: ILogger
    name: ILogger
    nameWithType: ILogger
    fullName: ILogger
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Management.Endpoint
  commentId: N:Steeltoe.Management.Endpoint
  name: Steeltoe.Management.Endpoint
  nameWithType: Steeltoe.Management.Endpoint
  fullName: Steeltoe.Management.Endpoint
- uid: Steeltoe.Management.Endpoint.DbMigrations.DbMigrationsEndpoint.#ctor*
  commentId: Overload:Steeltoe.Management.Endpoint.DbMigrations.DbMigrationsEndpoint.#ctor
  name: DbMigrationsEndpoint
  nameWithType: DbMigrationsEndpoint.DbMigrationsEndpoint
  fullName: Steeltoe.Management.Endpoint.DbMigrations.DbMigrationsEndpoint.DbMigrationsEndpoint
- uid: Steeltoe.Management.Endpoint.DbMigrations.IDbMigrationsOptions
  commentId: T:Steeltoe.Management.Endpoint.DbMigrations.IDbMigrationsOptions
  parent: Steeltoe.Management.Endpoint.DbMigrations
  name: IDbMigrationsOptions
  nameWithType: IDbMigrationsOptions
  fullName: Steeltoe.Management.Endpoint.DbMigrations.IDbMigrationsOptions
- uid: System.IServiceProvider
  commentId: T:System.IServiceProvider
  parent: System
  isExternal: true
  name: IServiceProvider
  nameWithType: IServiceProvider
  fullName: System.IServiceProvider
- uid: ILogger{Steeltoe.Management.Endpoint.DbMigrations.DbMigrationsEndpoint}
  commentId: '!:ILogger{Steeltoe.Management.Endpoint.DbMigrations.DbMigrationsEndpoint}'
  definition: ILogger`1
  name: ILogger<DbMigrationsEndpoint>
  nameWithType: ILogger<DbMigrationsEndpoint>
  fullName: ILogger<Steeltoe.Management.Endpoint.DbMigrations.DbMigrationsEndpoint>
  nameWithType.vb: ILogger(Of DbMigrationsEndpoint)
  fullName.vb: ILogger(Of Steeltoe.Management.Endpoint.DbMigrations.DbMigrationsEndpoint)
  name.vb: ILogger(Of DbMigrationsEndpoint)
  spec.csharp:
  - uid: ILogger`1
    name: ILogger
    nameWithType: ILogger
    fullName: ILogger
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Steeltoe.Management.Endpoint.DbMigrations.DbMigrationsEndpoint
    name: DbMigrationsEndpoint
    nameWithType: DbMigrationsEndpoint
    fullName: Steeltoe.Management.Endpoint.DbMigrations.DbMigrationsEndpoint
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: ILogger`1
    name: ILogger
    nameWithType: ILogger
    fullName: ILogger
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Steeltoe.Management.Endpoint.DbMigrations.DbMigrationsEndpoint
    name: DbMigrationsEndpoint
    nameWithType: DbMigrationsEndpoint
    fullName: Steeltoe.Management.Endpoint.DbMigrations.DbMigrationsEndpoint
  - name: )
    nameWithType: )
    fullName: )
- uid: ILogger`1
  isExternal: true
  name: ILogger<>
  nameWithType: ILogger<>
  fullName: ILogger<>
  nameWithType.vb: ILogger(Of )
  fullName.vb: ILogger(Of )
  name.vb: ILogger(Of )
  spec.csharp:
  - uid: ILogger`1
    name: ILogger
    nameWithType: ILogger
    fullName: ILogger
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: ILogger`1
    name: ILogger
    nameWithType: ILogger
    fullName: ILogger
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Management.Endpoint.DbMigrations.DbMigrationsEndpoint.DbMigrationsEndpointHelper
  commentId: T:Steeltoe.Management.Endpoint.DbMigrations.DbMigrationsEndpoint.DbMigrationsEndpointHelper
  parent: Steeltoe.Management.Endpoint.DbMigrations
  name: DbMigrationsEndpoint.DbMigrationsEndpointHelper
  nameWithType: DbMigrationsEndpoint.DbMigrationsEndpointHelper
  fullName: Steeltoe.Management.Endpoint.DbMigrations.DbMigrationsEndpoint.DbMigrationsEndpointHelper
- uid: Steeltoe.Management.Endpoint.DbMigrations.DbMigrationsEndpoint.Invoke*
  commentId: Overload:Steeltoe.Management.Endpoint.DbMigrations.DbMigrationsEndpoint.Invoke
  name: Invoke
  nameWithType: DbMigrationsEndpoint.Invoke
  fullName: Steeltoe.Management.Endpoint.DbMigrations.DbMigrationsEndpoint.Invoke
- uid: System.Collections.Generic.Dictionary{System.String,Steeltoe.Management.Endpoint.DbMigrations.DbMigrationsDescriptor}
  commentId: T:System.Collections.Generic.Dictionary{System.String,Steeltoe.Management.Endpoint.DbMigrations.DbMigrationsDescriptor}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  name: Dictionary<String, DbMigrationsDescriptor>
  nameWithType: Dictionary<String, DbMigrationsDescriptor>
  fullName: System.Collections.Generic.Dictionary<System.String, Steeltoe.Management.Endpoint.DbMigrations.DbMigrationsDescriptor>
  nameWithType.vb: Dictionary(Of String, DbMigrationsDescriptor)
  fullName.vb: System.Collections.Generic.Dictionary(Of System.String, Steeltoe.Management.Endpoint.DbMigrations.DbMigrationsDescriptor)
  name.vb: Dictionary(Of String, DbMigrationsDescriptor)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Management.Endpoint.DbMigrations.DbMigrationsDescriptor
    name: DbMigrationsDescriptor
    nameWithType: DbMigrationsDescriptor
    fullName: Steeltoe.Management.Endpoint.DbMigrations.DbMigrationsDescriptor
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Management.Endpoint.DbMigrations.DbMigrationsDescriptor
    name: DbMigrationsDescriptor
    nameWithType: DbMigrationsDescriptor
    fullName: Steeltoe.Management.Endpoint.DbMigrations.DbMigrationsDescriptor
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Dictionary`2
  commentId: T:System.Collections.Generic.Dictionary`2
  isExternal: true
  name: Dictionary<TKey, TValue>
  nameWithType: Dictionary<TKey, TValue>
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>
  nameWithType.vb: Dictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue)
  name.vb: Dictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
