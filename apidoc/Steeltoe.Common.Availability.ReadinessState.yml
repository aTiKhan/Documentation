### YamlMime:ManagedReference
items:
- uid: Steeltoe.Common.Availability.ReadinessState
  commentId: T:Steeltoe.Common.Availability.ReadinessState
  id: ReadinessState
  parent: Steeltoe.Common.Availability
  children:
  - Steeltoe.Common.Availability.ReadinessState.AcceptingTraffic
  - Steeltoe.Common.Availability.ReadinessState.RefusingTraffic
  - Steeltoe.Common.Availability.ReadinessState.ToString
  langs:
  - csharp
  - vb
  name: ReadinessState
  nameWithType: ReadinessState
  fullName: Steeltoe.Common.Availability.ReadinessState
  type: Class
  source:
    remote:
      path: src/Common/src/Common/Availability/ReadinessState.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: ReadinessState
    path: ../Steeltoe/src/Common/src/Common/Availability/ReadinessState.cs
    startLine: 12
  assemblies:
  - Steeltoe.Common
  namespace: Steeltoe.Common.Availability
  summary: "\nThe Readiness state of the application. <p></p>\nAn application is considered ready when it&apos;s <xref href=\"Steeltoe.Common.Availability.LivenessState.Correct\" data-throw-if-not-resolved=\"false\"></xref> and willing to\naccept traffic. &quot;Readiness&quot; failure means that the application is not able to accept\ntraffic and that the infrastructure should not route requests to it.\n"
  example: []
  syntax:
    content: 'public class ReadinessState : IAvailabilityState'
    content.vb: >-
      Public Class ReadinessState

          Implements IAvailabilityState
  inheritance:
  - System.Object
  implements:
  - Steeltoe.Common.Availability.IAvailabilityState
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Steeltoe.Common.Availability.ReadinessState.AcceptingTraffic
  commentId: F:Steeltoe.Common.Availability.ReadinessState.AcceptingTraffic
  id: AcceptingTraffic
  parent: Steeltoe.Common.Availability.ReadinessState
  langs:
  - csharp
  - vb
  name: AcceptingTraffic
  nameWithType: ReadinessState.AcceptingTraffic
  fullName: Steeltoe.Common.Availability.ReadinessState.AcceptingTraffic
  type: Field
  source:
    remote:
      path: src/Common/src/Common/Availability/ReadinessState.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: AcceptingTraffic
    path: ../Steeltoe/src/Common/src/Common/Availability/ReadinessState.cs
    startLine: 21
  assemblies:
  - Steeltoe.Common
  namespace: Steeltoe.Common.Availability
  summary: "\nThe application is ready to receive traffic.\n"
  example: []
  syntax:
    content: public static readonly ReadinessState AcceptingTraffic
    return:
      type: Steeltoe.Common.Availability.ReadinessState
    content.vb: Public Shared ReadOnly AcceptingTraffic As ReadinessState
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Steeltoe.Common.Availability.ReadinessState.RefusingTraffic
  commentId: F:Steeltoe.Common.Availability.ReadinessState.RefusingTraffic
  id: RefusingTraffic
  parent: Steeltoe.Common.Availability.ReadinessState
  langs:
  - csharp
  - vb
  name: RefusingTraffic
  nameWithType: ReadinessState.RefusingTraffic
  fullName: Steeltoe.Common.Availability.ReadinessState.RefusingTraffic
  type: Field
  source:
    remote:
      path: src/Common/src/Common/Availability/ReadinessState.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: RefusingTraffic
    path: ../Steeltoe/src/Common/src/Common/Availability/ReadinessState.cs
    startLine: 26
  assemblies:
  - Steeltoe.Common
  namespace: Steeltoe.Common.Availability
  summary: "\nThe application is not willing to receive traffic.\n"
  example: []
  syntax:
    content: public static readonly ReadinessState RefusingTraffic
    return:
      type: Steeltoe.Common.Availability.ReadinessState
    content.vb: Public Shared ReadOnly RefusingTraffic As ReadinessState
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Steeltoe.Common.Availability.ReadinessState.ToString
  commentId: M:Steeltoe.Common.Availability.ReadinessState.ToString
  id: ToString
  parent: Steeltoe.Common.Availability.ReadinessState
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: ReadinessState.ToString()
  fullName: Steeltoe.Common.Availability.ReadinessState.ToString()
  type: Method
  source:
    remote:
      path: src/Common/src/Common/Availability/ReadinessState.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: ToString
    path: ../Steeltoe/src/Common/src/Common/Availability/ReadinessState.cs
    startLine: 28
  assemblies:
  - Steeltoe.Common
  namespace: Steeltoe.Common.Availability
  syntax:
    content: public override string ToString()
    return:
      type: System.String
    content.vb: Public Overrides Function ToString As String
  overridden: System.Object.ToString
  overload: Steeltoe.Common.Availability.ReadinessState.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: Steeltoe.Common.Availability.LivenessState.Correct
  commentId: F:Steeltoe.Common.Availability.LivenessState.Correct
  isExternal: true
- uid: Steeltoe.Common.Availability
  commentId: N:Steeltoe.Common.Availability
  name: Steeltoe.Common.Availability
  nameWithType: Steeltoe.Common.Availability
  fullName: Steeltoe.Common.Availability
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Steeltoe.Common.Availability.IAvailabilityState
  commentId: T:Steeltoe.Common.Availability.IAvailabilityState
  parent: Steeltoe.Common.Availability
  name: IAvailabilityState
  nameWithType: IAvailabilityState
  fullName: Steeltoe.Common.Availability.IAvailabilityState
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Steeltoe.Common.Availability.ReadinessState
  commentId: T:Steeltoe.Common.Availability.ReadinessState
  parent: Steeltoe.Common.Availability
  name: ReadinessState
  nameWithType: ReadinessState
  fullName: Steeltoe.Common.Availability.ReadinessState
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Common.Availability.ReadinessState.ToString*
  commentId: Overload:Steeltoe.Common.Availability.ReadinessState.ToString
  name: ToString
  nameWithType: ReadinessState.ToString
  fullName: Steeltoe.Common.Availability.ReadinessState.ToString
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
