### YamlMime:ManagedReference
items:
- uid: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter
  commentId: T:Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter
  id: AbstractMessageListenerAdapter
  parent: Steeltoe.Messaging.RabbitMQ.Listener.Adapters
  children:
  - Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.#ctor(Steeltoe.Common.Contexts.IApplicationContext,Microsoft.Extensions.Logging.ILogger)
  - Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter._logger
  - Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.ApplicationContext
  - Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.BeforeSendReplyPostProcessors
  - Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.BuildMessage(RabbitMQ.Client.IModel,System.Object,System.Type)
  - Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.ContainerAckMode
  - Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.DefaultRequeueRejected
  - Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.DoHandleResult(Steeltoe.Messaging.RabbitMQ.Listener.Adapters.InvocationResult,Steeltoe.Messaging.IMessage,RabbitMQ.Client.IModel,System.Object)
  - Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.DoPublish(RabbitMQ.Client.IModel,Steeltoe.Messaging.RabbitMQ.Core.Address,Steeltoe.Messaging.IMessage{System.Byte[]})
  - Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.Encoding
  - Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.EvalContext
  - Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.ExtractMessage(Steeltoe.Messaging.IMessage)
  - Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.GetReceivedExchange(Steeltoe.Messaging.IMessage)
  - Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.GetReplyToAddress(Steeltoe.Messaging.IMessage,System.Object,Steeltoe.Messaging.RabbitMQ.Listener.Adapters.InvocationResult)
  - Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.HandleListenerException(System.Exception)
  - Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.HandleResult(Steeltoe.Messaging.RabbitMQ.Listener.Adapters.InvocationResult,Steeltoe.Messaging.IMessage,RabbitMQ.Client.IModel)
  - Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.HandleResult(Steeltoe.Messaging.RabbitMQ.Listener.Adapters.InvocationResult,Steeltoe.Messaging.IMessage,RabbitMQ.Client.IModel,System.Object)
  - Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.IsManualAck
  - Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.MandatoryPublish
  - Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.MessageConverter
  - Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.MessagePropertiesConverter
  - Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.OnMessage(Steeltoe.Messaging.IMessage)
  - Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.OnMessage(Steeltoe.Messaging.IMessage,RabbitMQ.Client.IModel)
  - Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.OnMessageBatch(System.Collections.Generic.List{Steeltoe.Messaging.IMessage})
  - Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.OnMessageBatch(System.Collections.Generic.List{Steeltoe.Messaging.IMessage},RabbitMQ.Client.IModel)
  - Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.PostProcessChannel(RabbitMQ.Client.IModel,Steeltoe.Messaging.IMessage)
  - Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.PostProcessResponse(Steeltoe.Messaging.IMessage,Steeltoe.Messaging.IMessage)
  - Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.RecoveryCallback
  - Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.ReplyPostProcessor
  - Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.ResponseAddress
  - Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.ResponseExchange
  - Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.ResponseExpression
  - Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.ResponseRoutingKey
  - Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.RetryTemplate
  - Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.SendResponse(RabbitMQ.Client.IModel,Steeltoe.Messaging.RabbitMQ.Core.Address,Steeltoe.Messaging.IMessage{System.Byte[]})
  - Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.SetBeforeSendReplyPostProcessors(Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor[])
  - Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.SetResponseAddress(System.String)
  - Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.SetServiceResolver(Steeltoe.Messaging.RabbitMQ.Expressions.IServiceResolver)
  langs:
  - csharp
  - vb
  name: AbstractMessageListenerAdapter
  nameWithType: AbstractMessageListenerAdapter
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter
  type: Class
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Listener/Adapters/AbstractMessageListenerAdapter.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: AbstractMessageListenerAdapter
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Listener/Adapters/AbstractMessageListenerAdapter.cs
    startLine: 24
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Listener.Adapters
  syntax:
    content: 'public abstract class AbstractMessageListenerAdapter : IChannelAwareMessageListener, IMessageListener'
    content.vb: >-
      Public MustInherit Class AbstractMessageListenerAdapter

          Implements IChannelAwareMessageListener, IMessageListener
  inheritance:
  - System.Object
  derivedClasses:
  - Steeltoe.Messaging.RabbitMQ.Listener.Adapters.MessageListenerAdapter
  - Steeltoe.Messaging.RabbitMQ.Listener.Adapters.MessagingMessageListenerAdapter
  implements:
  - Steeltoe.Messaging.RabbitMQ.Listener.IChannelAwareMessageListener
  - Steeltoe.Messaging.RabbitMQ.Listener.IMessageListener
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter._logger
  commentId: F:Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter._logger
  id: _logger
  parent: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter
  langs:
  - csharp
  - vb
  name: _logger
  nameWithType: AbstractMessageListenerAdapter._logger
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter._logger
  type: Field
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Listener/Adapters/AbstractMessageListenerAdapter.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: _logger
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Listener/Adapters/AbstractMessageListenerAdapter.cs
    startLine: 26
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Listener.Adapters
  syntax:
    content: protected readonly ILogger _logger
    return:
      type: Microsoft.Extensions.Logging.ILogger
    content.vb: Protected ReadOnly _logger As ILogger
  modifiers.csharp:
  - protected
  - readonly
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.#ctor(Steeltoe.Common.Contexts.IApplicationContext,Microsoft.Extensions.Logging.ILogger)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.#ctor(Steeltoe.Common.Contexts.IApplicationContext,Microsoft.Extensions.Logging.ILogger)
  id: '#ctor(Steeltoe.Common.Contexts.IApplicationContext,Microsoft.Extensions.Logging.ILogger)'
  parent: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter
  langs:
  - csharp
  - vb
  name: AbstractMessageListenerAdapter(IApplicationContext, ILogger)
  nameWithType: AbstractMessageListenerAdapter.AbstractMessageListenerAdapter(IApplicationContext, ILogger)
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.AbstractMessageListenerAdapter(Steeltoe.Common.Contexts.IApplicationContext, Microsoft.Extensions.Logging.ILogger)
  type: Constructor
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Listener/Adapters/AbstractMessageListenerAdapter.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: .ctor
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Listener/Adapters/AbstractMessageListenerAdapter.cs
    startLine: 29
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Listener.Adapters
  syntax:
    content: protected AbstractMessageListenerAdapter(IApplicationContext context, ILogger logger = null)
    parameters:
    - id: context
      type: Steeltoe.Common.Contexts.IApplicationContext
    - id: logger
      type: Microsoft.Extensions.Logging.ILogger
    content.vb: Protected Sub New(context As IApplicationContext, logger As ILogger = Nothing)
  overload: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.#ctor*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.ApplicationContext
  commentId: P:Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.ApplicationContext
  id: ApplicationContext
  parent: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter
  langs:
  - csharp
  - vb
  name: ApplicationContext
  nameWithType: AbstractMessageListenerAdapter.ApplicationContext
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.ApplicationContext
  type: Property
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Listener/Adapters/AbstractMessageListenerAdapter.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: ApplicationContext
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Listener/Adapters/AbstractMessageListenerAdapter.cs
    startLine: 36
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Listener.Adapters
  syntax:
    content: public IApplicationContext ApplicationContext { get; set; }
    parameters: []
    return:
      type: Steeltoe.Common.Contexts.IApplicationContext
    content.vb: Public Property ApplicationContext As IApplicationContext
  overload: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.ApplicationContext*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.Encoding
  commentId: P:Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.Encoding
  id: Encoding
  parent: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter
  langs:
  - csharp
  - vb
  name: Encoding
  nameWithType: AbstractMessageListenerAdapter.Encoding
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.Encoding
  type: Property
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Listener/Adapters/AbstractMessageListenerAdapter.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Encoding
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Listener/Adapters/AbstractMessageListenerAdapter.cs
    startLine: 38
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Listener.Adapters
  syntax:
    content: public virtual string Encoding { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Overridable Property Encoding As String
  overload: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.Encoding*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.ResponseRoutingKey
  commentId: P:Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.ResponseRoutingKey
  id: ResponseRoutingKey
  parent: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter
  langs:
  - csharp
  - vb
  name: ResponseRoutingKey
  nameWithType: AbstractMessageListenerAdapter.ResponseRoutingKey
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.ResponseRoutingKey
  type: Property
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Listener/Adapters/AbstractMessageListenerAdapter.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: ResponseRoutingKey
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Listener/Adapters/AbstractMessageListenerAdapter.cs
    startLine: 40
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Listener.Adapters
  syntax:
    content: public virtual string ResponseRoutingKey { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Overridable Property ResponseRoutingKey As String
  overload: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.ResponseRoutingKey*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.ResponseExchange
  commentId: P:Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.ResponseExchange
  id: ResponseExchange
  parent: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter
  langs:
  - csharp
  - vb
  name: ResponseExchange
  nameWithType: AbstractMessageListenerAdapter.ResponseExchange
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.ResponseExchange
  type: Property
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Listener/Adapters/AbstractMessageListenerAdapter.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: ResponseExchange
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Listener/Adapters/AbstractMessageListenerAdapter.cs
    startLine: 42
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Listener.Adapters
  syntax:
    content: public virtual string ResponseExchange { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Overridable Property ResponseExchange As String
  overload: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.ResponseExchange*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.ResponseAddress
  commentId: P:Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.ResponseAddress
  id: ResponseAddress
  parent: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter
  langs:
  - csharp
  - vb
  name: ResponseAddress
  nameWithType: AbstractMessageListenerAdapter.ResponseAddress
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.ResponseAddress
  type: Property
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Listener/Adapters/AbstractMessageListenerAdapter.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: ResponseAddress
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Listener/Adapters/AbstractMessageListenerAdapter.cs
    startLine: 44
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Listener.Adapters
  syntax:
    content: public virtual Address ResponseAddress { get; set; }
    parameters: []
    return:
      type: Steeltoe.Messaging.RabbitMQ.Core.Address
    content.vb: Public Overridable Property ResponseAddress As Address
  overload: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.ResponseAddress*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.MandatoryPublish
  commentId: P:Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.MandatoryPublish
  id: MandatoryPublish
  parent: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter
  langs:
  - csharp
  - vb
  name: MandatoryPublish
  nameWithType: AbstractMessageListenerAdapter.MandatoryPublish
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.MandatoryPublish
  type: Property
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Listener/Adapters/AbstractMessageListenerAdapter.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: MandatoryPublish
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Listener/Adapters/AbstractMessageListenerAdapter.cs
    startLine: 46
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Listener.Adapters
  syntax:
    content: public virtual bool MandatoryPublish { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Overridable Property MandatoryPublish As Boolean
  overload: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.MandatoryPublish*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.MessageConverter
  commentId: P:Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.MessageConverter
  id: MessageConverter
  parent: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter
  langs:
  - csharp
  - vb
  name: MessageConverter
  nameWithType: AbstractMessageListenerAdapter.MessageConverter
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.MessageConverter
  type: Property
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Listener/Adapters/AbstractMessageListenerAdapter.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: MessageConverter
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Listener/Adapters/AbstractMessageListenerAdapter.cs
    startLine: 48
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Listener.Adapters
  syntax:
    content: public virtual ISmartMessageConverter MessageConverter { get; set; }
    parameters: []
    return:
      type: Steeltoe.Messaging.Converter.ISmartMessageConverter
    content.vb: Public Overridable Property MessageConverter As ISmartMessageConverter
  overload: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.MessageConverter*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.BeforeSendReplyPostProcessors
  commentId: P:Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.BeforeSendReplyPostProcessors
  id: BeforeSendReplyPostProcessors
  parent: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter
  langs:
  - csharp
  - vb
  name: BeforeSendReplyPostProcessors
  nameWithType: AbstractMessageListenerAdapter.BeforeSendReplyPostProcessors
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.BeforeSendReplyPostProcessors
  type: Property
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Listener/Adapters/AbstractMessageListenerAdapter.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: BeforeSendReplyPostProcessors
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Listener/Adapters/AbstractMessageListenerAdapter.cs
    startLine: 50
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Listener.Adapters
  syntax:
    content: public virtual List<IMessagePostProcessor> BeforeSendReplyPostProcessors { get; }
    parameters: []
    return:
      type: System.Collections.Generic.List{Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor}
    content.vb: Public Overridable ReadOnly Property BeforeSendReplyPostProcessors As List(Of IMessagePostProcessor)
  overload: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.BeforeSendReplyPostProcessors*
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.RetryTemplate
  commentId: P:Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.RetryTemplate
  id: RetryTemplate
  parent: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter
  langs:
  - csharp
  - vb
  name: RetryTemplate
  nameWithType: AbstractMessageListenerAdapter.RetryTemplate
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.RetryTemplate
  type: Property
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Listener/Adapters/AbstractMessageListenerAdapter.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: RetryTemplate
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Listener/Adapters/AbstractMessageListenerAdapter.cs
    startLine: 52
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Listener.Adapters
  syntax:
    content: public virtual RetryTemplate RetryTemplate { get; set; }
    parameters: []
    return:
      type: Steeltoe.Common.Retry.RetryTemplate
    content.vb: Public Overridable Property RetryTemplate As RetryTemplate
  overload: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.RetryTemplate*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.RecoveryCallback
  commentId: P:Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.RecoveryCallback
  id: RecoveryCallback
  parent: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter
  langs:
  - csharp
  - vb
  name: RecoveryCallback
  nameWithType: AbstractMessageListenerAdapter.RecoveryCallback
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.RecoveryCallback
  type: Property
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Listener/Adapters/AbstractMessageListenerAdapter.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: RecoveryCallback
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Listener/Adapters/AbstractMessageListenerAdapter.cs
    startLine: 54
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Listener.Adapters
  syntax:
    content: public virtual IRecoveryCallback RecoveryCallback { get; set; }
    parameters: []
    return:
      type: Steeltoe.Common.Retry.IRecoveryCallback
    content.vb: Public Overridable Property RecoveryCallback As IRecoveryCallback
  overload: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.RecoveryCallback*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.DefaultRequeueRejected
  commentId: P:Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.DefaultRequeueRejected
  id: DefaultRequeueRejected
  parent: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter
  langs:
  - csharp
  - vb
  name: DefaultRequeueRejected
  nameWithType: AbstractMessageListenerAdapter.DefaultRequeueRejected
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.DefaultRequeueRejected
  type: Property
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Listener/Adapters/AbstractMessageListenerAdapter.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: DefaultRequeueRejected
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Listener/Adapters/AbstractMessageListenerAdapter.cs
    startLine: 56
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Listener.Adapters
  syntax:
    content: public virtual bool DefaultRequeueRejected { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Overridable Property DefaultRequeueRejected As Boolean
  overload: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.DefaultRequeueRejected*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.ContainerAckMode
  commentId: P:Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.ContainerAckMode
  id: ContainerAckMode
  parent: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter
  langs:
  - csharp
  - vb
  name: ContainerAckMode
  nameWithType: AbstractMessageListenerAdapter.ContainerAckMode
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.ContainerAckMode
  type: Property
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Listener/Adapters/AbstractMessageListenerAdapter.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: ContainerAckMode
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Listener/Adapters/AbstractMessageListenerAdapter.cs
    startLine: 58
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Listener.Adapters
  syntax:
    content: public virtual AcknowledgeMode ContainerAckMode { get; set; }
    parameters: []
    return:
      type: Steeltoe.Messaging.RabbitMQ.Core.AcknowledgeMode
    content.vb: Public Overridable Property ContainerAckMode As AcknowledgeMode
  overload: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.ContainerAckMode*
  implements:
  - Steeltoe.Messaging.RabbitMQ.Listener.IMessageListener.ContainerAckMode
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.IsManualAck
  commentId: P:Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.IsManualAck
  id: IsManualAck
  parent: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter
  langs:
  - csharp
  - vb
  name: IsManualAck
  nameWithType: AbstractMessageListenerAdapter.IsManualAck
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.IsManualAck
  type: Property
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Listener/Adapters/AbstractMessageListenerAdapter.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: IsManualAck
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Listener/Adapters/AbstractMessageListenerAdapter.cs
    startLine: 60
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Listener.Adapters
  syntax:
    content: public virtual bool IsManualAck { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Overridable ReadOnly Property IsManualAck As Boolean
  overload: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.IsManualAck*
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.EvalContext
  commentId: P:Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.EvalContext
  id: EvalContext
  parent: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter
  langs:
  - csharp
  - vb
  name: EvalContext
  nameWithType: AbstractMessageListenerAdapter.EvalContext
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.EvalContext
  type: Property
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Listener/Adapters/AbstractMessageListenerAdapter.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: EvalContext
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Listener/Adapters/AbstractMessageListenerAdapter.cs
    startLine: 62
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Listener.Adapters
  syntax:
    content: public virtual IEvaluationContext EvalContext { get; set; }
    parameters: []
    return:
      type: Steeltoe.Common.Expression.IEvaluationContext
    content.vb: Public Overridable Property EvalContext As IEvaluationContext
  overload: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.EvalContext*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.MessagePropertiesConverter
  commentId: P:Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.MessagePropertiesConverter
  id: MessagePropertiesConverter
  parent: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter
  langs:
  - csharp
  - vb
  name: MessagePropertiesConverter
  nameWithType: AbstractMessageListenerAdapter.MessagePropertiesConverter
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.MessagePropertiesConverter
  type: Property
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Listener/Adapters/AbstractMessageListenerAdapter.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: MessagePropertiesConverter
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Listener/Adapters/AbstractMessageListenerAdapter.cs
    startLine: 64
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Listener.Adapters
  syntax:
    content: public virtual IMessageHeadersConverter MessagePropertiesConverter { get; set; }
    parameters: []
    return:
      type: Steeltoe.Messaging.RabbitMQ.Support.IMessageHeadersConverter
    content.vb: Public Overridable Property MessagePropertiesConverter As IMessageHeadersConverter
  overload: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.MessagePropertiesConverter*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.ResponseExpression
  commentId: P:Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.ResponseExpression
  id: ResponseExpression
  parent: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter
  langs:
  - csharp
  - vb
  name: ResponseExpression
  nameWithType: AbstractMessageListenerAdapter.ResponseExpression
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.ResponseExpression
  type: Property
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Listener/Adapters/AbstractMessageListenerAdapter.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: ResponseExpression
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Listener/Adapters/AbstractMessageListenerAdapter.cs
    startLine: 66
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Listener.Adapters
  syntax:
    content: public virtual IExpression ResponseExpression { get; set; }
    parameters: []
    return:
      type: Steeltoe.Common.Expression.IExpression
    content.vb: Public Overridable Property ResponseExpression As IExpression
  overload: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.ResponseExpression*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.ReplyPostProcessor
  commentId: P:Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.ReplyPostProcessor
  id: ReplyPostProcessor
  parent: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter
  langs:
  - csharp
  - vb
  name: ReplyPostProcessor
  nameWithType: AbstractMessageListenerAdapter.ReplyPostProcessor
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.ReplyPostProcessor
  type: Property
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Listener/Adapters/AbstractMessageListenerAdapter.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: ReplyPostProcessor
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Listener/Adapters/AbstractMessageListenerAdapter.cs
    startLine: 68
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Listener.Adapters
  syntax:
    content: public virtual IReplyPostProcessor ReplyPostProcessor { get; set; }
    parameters: []
    return:
      type: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.IReplyPostProcessor
    content.vb: Public Overridable Property ReplyPostProcessor As IReplyPostProcessor
  overload: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.ReplyPostProcessor*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.SetResponseAddress(System.String)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.SetResponseAddress(System.String)
  id: SetResponseAddress(System.String)
  parent: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter
  langs:
  - csharp
  - vb
  name: SetResponseAddress(String)
  nameWithType: AbstractMessageListenerAdapter.SetResponseAddress(String)
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.SetResponseAddress(System.String)
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Listener/Adapters/AbstractMessageListenerAdapter.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: SetResponseAddress
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Listener/Adapters/AbstractMessageListenerAdapter.cs
    startLine: 70
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Listener.Adapters
  syntax:
    content: public virtual void SetResponseAddress(string defaultReplyTo)
    parameters:
    - id: defaultReplyTo
      type: System.String
    content.vb: Public Overridable Sub SetResponseAddress(defaultReplyTo As String)
  overload: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.SetResponseAddress*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.SetServiceResolver(Steeltoe.Messaging.RabbitMQ.Expressions.IServiceResolver)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.SetServiceResolver(Steeltoe.Messaging.RabbitMQ.Expressions.IServiceResolver)
  id: SetServiceResolver(Steeltoe.Messaging.RabbitMQ.Expressions.IServiceResolver)
  parent: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter
  langs:
  - csharp
  - vb
  name: SetServiceResolver(IServiceResolver)
  nameWithType: AbstractMessageListenerAdapter.SetServiceResolver(IServiceResolver)
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.SetServiceResolver(Steeltoe.Messaging.RabbitMQ.Expressions.IServiceResolver)
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Listener/Adapters/AbstractMessageListenerAdapter.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: SetServiceResolver
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Listener/Adapters/AbstractMessageListenerAdapter.cs
    startLine: 76
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Listener.Adapters
  syntax:
    content: public void SetServiceResolver(IServiceResolver serviceResolver)
    parameters:
    - id: serviceResolver
      type: Steeltoe.Messaging.RabbitMQ.Expressions.IServiceResolver
    content.vb: Public Sub SetServiceResolver(serviceResolver As IServiceResolver)
  overload: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.SetServiceResolver*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.SetBeforeSendReplyPostProcessors(Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor[])
  commentId: M:Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.SetBeforeSendReplyPostProcessors(Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor[])
  id: SetBeforeSendReplyPostProcessors(Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor[])
  parent: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter
  langs:
  - csharp
  - vb
  name: SetBeforeSendReplyPostProcessors(IMessagePostProcessor[])
  nameWithType: AbstractMessageListenerAdapter.SetBeforeSendReplyPostProcessors(IMessagePostProcessor[])
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.SetBeforeSendReplyPostProcessors(Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor[])
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Listener/Adapters/AbstractMessageListenerAdapter.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: SetBeforeSendReplyPostProcessors
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Listener/Adapters/AbstractMessageListenerAdapter.cs
    startLine: 85
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Listener.Adapters
  syntax:
    content: public virtual void SetBeforeSendReplyPostProcessors(params IMessagePostProcessor[] beforeSendReplyPostProcessors)
    parameters:
    - id: beforeSendReplyPostProcessors
      type: Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor[]
    content.vb: Public Overridable Sub SetBeforeSendReplyPostProcessors(ParamArray beforeSendReplyPostProcessors As IMessagePostProcessor())
  overload: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.SetBeforeSendReplyPostProcessors*
  nameWithType.vb: AbstractMessageListenerAdapter.SetBeforeSendReplyPostProcessors(IMessagePostProcessor())
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.SetBeforeSendReplyPostProcessors(Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor())
  name.vb: SetBeforeSendReplyPostProcessors(IMessagePostProcessor())
- uid: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.OnMessage(Steeltoe.Messaging.IMessage,RabbitMQ.Client.IModel)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.OnMessage(Steeltoe.Messaging.IMessage,RabbitMQ.Client.IModel)
  id: OnMessage(Steeltoe.Messaging.IMessage,RabbitMQ.Client.IModel)
  parent: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter
  langs:
  - csharp
  - vb
  name: OnMessage(IMessage, IModel)
  nameWithType: AbstractMessageListenerAdapter.OnMessage(IMessage, IModel)
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.OnMessage(Steeltoe.Messaging.IMessage, RabbitMQ.Client.IModel)
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Listener/Adapters/AbstractMessageListenerAdapter.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: OnMessage
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Listener/Adapters/AbstractMessageListenerAdapter.cs
    startLine: 103
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Listener.Adapters
  syntax:
    content: public abstract void OnMessage(IMessage message, IModel channel)
    parameters:
    - id: message
      type: Steeltoe.Messaging.IMessage
    - id: channel
      type: RabbitMQ.Client.IModel
    content.vb: Public MustOverride Sub OnMessage(message As IMessage, channel As IModel)
  overload: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.OnMessage*
  implements:
  - Steeltoe.Messaging.RabbitMQ.Listener.IChannelAwareMessageListener.OnMessage(Steeltoe.Messaging.IMessage,RabbitMQ.Client.IModel)
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
- uid: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.OnMessage(Steeltoe.Messaging.IMessage)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.OnMessage(Steeltoe.Messaging.IMessage)
  id: OnMessage(Steeltoe.Messaging.IMessage)
  parent: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter
  langs:
  - csharp
  - vb
  name: OnMessage(IMessage)
  nameWithType: AbstractMessageListenerAdapter.OnMessage(IMessage)
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.OnMessage(Steeltoe.Messaging.IMessage)
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Listener/Adapters/AbstractMessageListenerAdapter.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: OnMessage
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Listener/Adapters/AbstractMessageListenerAdapter.cs
    startLine: 105
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Listener.Adapters
  syntax:
    content: public virtual void OnMessage(IMessage message)
    parameters:
    - id: message
      type: Steeltoe.Messaging.IMessage
    content.vb: Public Overridable Sub OnMessage(message As IMessage)
  overload: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.OnMessage*
  implements:
  - Steeltoe.Messaging.RabbitMQ.Listener.IMessageListener.OnMessage(Steeltoe.Messaging.IMessage)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.OnMessageBatch(System.Collections.Generic.List{Steeltoe.Messaging.IMessage},RabbitMQ.Client.IModel)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.OnMessageBatch(System.Collections.Generic.List{Steeltoe.Messaging.IMessage},RabbitMQ.Client.IModel)
  id: OnMessageBatch(System.Collections.Generic.List{Steeltoe.Messaging.IMessage},RabbitMQ.Client.IModel)
  parent: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter
  langs:
  - csharp
  - vb
  name: OnMessageBatch(List<IMessage>, IModel)
  nameWithType: AbstractMessageListenerAdapter.OnMessageBatch(List<IMessage>, IModel)
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.OnMessageBatch(System.Collections.Generic.List<Steeltoe.Messaging.IMessage>, RabbitMQ.Client.IModel)
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Listener/Adapters/AbstractMessageListenerAdapter.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: OnMessageBatch
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Listener/Adapters/AbstractMessageListenerAdapter.cs
    startLine: 110
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Listener.Adapters
  syntax:
    content: public virtual void OnMessageBatch(List<IMessage> messages, IModel channel)
    parameters:
    - id: messages
      type: System.Collections.Generic.List{Steeltoe.Messaging.IMessage}
    - id: channel
      type: RabbitMQ.Client.IModel
    content.vb: Public Overridable Sub OnMessageBatch(messages As List(Of IMessage), channel As IModel)
  overload: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.OnMessageBatch*
  implements:
  - Steeltoe.Messaging.RabbitMQ.Listener.IChannelAwareMessageListener.OnMessageBatch(System.Collections.Generic.List{Steeltoe.Messaging.IMessage},RabbitMQ.Client.IModel)
  nameWithType.vb: AbstractMessageListenerAdapter.OnMessageBatch(List(Of IMessage), IModel)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.OnMessageBatch(System.Collections.Generic.List(Of Steeltoe.Messaging.IMessage), RabbitMQ.Client.IModel)
  name.vb: OnMessageBatch(List(Of IMessage), IModel)
- uid: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.OnMessageBatch(System.Collections.Generic.List{Steeltoe.Messaging.IMessage})
  commentId: M:Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.OnMessageBatch(System.Collections.Generic.List{Steeltoe.Messaging.IMessage})
  id: OnMessageBatch(System.Collections.Generic.List{Steeltoe.Messaging.IMessage})
  parent: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter
  langs:
  - csharp
  - vb
  name: OnMessageBatch(List<IMessage>)
  nameWithType: AbstractMessageListenerAdapter.OnMessageBatch(List<IMessage>)
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.OnMessageBatch(System.Collections.Generic.List<Steeltoe.Messaging.IMessage>)
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Listener/Adapters/AbstractMessageListenerAdapter.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: OnMessageBatch
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Listener/Adapters/AbstractMessageListenerAdapter.cs
    startLine: 115
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Listener.Adapters
  syntax:
    content: public virtual void OnMessageBatch(List<IMessage> messages)
    parameters:
    - id: messages
      type: System.Collections.Generic.List{Steeltoe.Messaging.IMessage}
    content.vb: Public Overridable Sub OnMessageBatch(messages As List(Of IMessage))
  overload: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.OnMessageBatch*
  implements:
  - Steeltoe.Messaging.RabbitMQ.Listener.IMessageListener.OnMessageBatch(System.Collections.Generic.List{Steeltoe.Messaging.IMessage})
  nameWithType.vb: AbstractMessageListenerAdapter.OnMessageBatch(List(Of IMessage))
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.OnMessageBatch(System.Collections.Generic.List(Of Steeltoe.Messaging.IMessage))
  name.vb: OnMessageBatch(List(Of IMessage))
- uid: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.BuildMessage(RabbitMQ.Client.IModel,System.Object,System.Type)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.BuildMessage(RabbitMQ.Client.IModel,System.Object,System.Type)
  id: BuildMessage(RabbitMQ.Client.IModel,System.Object,System.Type)
  parent: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter
  langs:
  - csharp
  - vb
  name: BuildMessage(IModel, Object, Type)
  nameWithType: AbstractMessageListenerAdapter.BuildMessage(IModel, Object, Type)
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.BuildMessage(RabbitMQ.Client.IModel, System.Object, System.Type)
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Listener/Adapters/AbstractMessageListenerAdapter.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: BuildMessage
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Listener/Adapters/AbstractMessageListenerAdapter.cs
    startLine: 120
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Listener.Adapters
  syntax:
    content: protected virtual IMessage<byte[]> BuildMessage(IModel channel, object result, Type genericType)
    parameters:
    - id: channel
      type: RabbitMQ.Client.IModel
    - id: result
      type: System.Object
    - id: genericType
      type: System.Type
    return:
      type: Steeltoe.Messaging.IMessage{System.Byte[]}
    content.vb: Protected Overridable Function BuildMessage(channel As IModel, result As Object, genericType As Type) As IMessage(Of Byte())
  overload: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.BuildMessage*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.HandleListenerException(System.Exception)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.HandleListenerException(System.Exception)
  id: HandleListenerException(System.Exception)
  parent: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter
  langs:
  - csharp
  - vb
  name: HandleListenerException(Exception)
  nameWithType: AbstractMessageListenerAdapter.HandleListenerException(Exception)
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.HandleListenerException(System.Exception)
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Listener/Adapters/AbstractMessageListenerAdapter.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: HandleListenerException
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Listener/Adapters/AbstractMessageListenerAdapter.cs
    startLine: 136
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Listener.Adapters
  syntax:
    content: protected virtual void HandleListenerException(Exception exception)
    parameters:
    - id: exception
      type: System.Exception
    content.vb: Protected Overridable Sub HandleListenerException(exception As Exception)
  overload: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.HandleListenerException*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.ExtractMessage(Steeltoe.Messaging.IMessage)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.ExtractMessage(Steeltoe.Messaging.IMessage)
  id: ExtractMessage(Steeltoe.Messaging.IMessage)
  parent: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter
  langs:
  - csharp
  - vb
  name: ExtractMessage(IMessage)
  nameWithType: AbstractMessageListenerAdapter.ExtractMessage(IMessage)
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.ExtractMessage(Steeltoe.Messaging.IMessage)
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Listener/Adapters/AbstractMessageListenerAdapter.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: ExtractMessage
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Listener/Adapters/AbstractMessageListenerAdapter.cs
    startLine: 141
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Listener.Adapters
  syntax:
    content: protected virtual object ExtractMessage(IMessage message)
    parameters:
    - id: message
      type: Steeltoe.Messaging.IMessage
    return:
      type: System.Object
    content.vb: Protected Overridable Function ExtractMessage(message As IMessage) As Object
  overload: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.ExtractMessage*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.HandleResult(Steeltoe.Messaging.RabbitMQ.Listener.Adapters.InvocationResult,Steeltoe.Messaging.IMessage,RabbitMQ.Client.IModel)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.HandleResult(Steeltoe.Messaging.RabbitMQ.Listener.Adapters.InvocationResult,Steeltoe.Messaging.IMessage,RabbitMQ.Client.IModel)
  id: HandleResult(Steeltoe.Messaging.RabbitMQ.Listener.Adapters.InvocationResult,Steeltoe.Messaging.IMessage,RabbitMQ.Client.IModel)
  parent: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter
  langs:
  - csharp
  - vb
  name: HandleResult(InvocationResult, IMessage, IModel)
  nameWithType: AbstractMessageListenerAdapter.HandleResult(InvocationResult, IMessage, IModel)
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.HandleResult(Steeltoe.Messaging.RabbitMQ.Listener.Adapters.InvocationResult, Steeltoe.Messaging.IMessage, RabbitMQ.Client.IModel)
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Listener/Adapters/AbstractMessageListenerAdapter.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: HandleResult
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Listener/Adapters/AbstractMessageListenerAdapter.cs
    startLine: 152
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Listener.Adapters
  syntax:
    content: protected virtual void HandleResult(InvocationResult resultArg, IMessage request, IModel channel)
    parameters:
    - id: resultArg
      type: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.InvocationResult
    - id: request
      type: Steeltoe.Messaging.IMessage
    - id: channel
      type: RabbitMQ.Client.IModel
    content.vb: Protected Overridable Sub HandleResult(resultArg As InvocationResult, request As IMessage, channel As IModel)
  overload: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.HandleResult*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.HandleResult(Steeltoe.Messaging.RabbitMQ.Listener.Adapters.InvocationResult,Steeltoe.Messaging.IMessage,RabbitMQ.Client.IModel,System.Object)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.HandleResult(Steeltoe.Messaging.RabbitMQ.Listener.Adapters.InvocationResult,Steeltoe.Messaging.IMessage,RabbitMQ.Client.IModel,System.Object)
  id: HandleResult(Steeltoe.Messaging.RabbitMQ.Listener.Adapters.InvocationResult,Steeltoe.Messaging.IMessage,RabbitMQ.Client.IModel,System.Object)
  parent: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter
  langs:
  - csharp
  - vb
  name: HandleResult(InvocationResult, IMessage, IModel, Object)
  nameWithType: AbstractMessageListenerAdapter.HandleResult(InvocationResult, IMessage, IModel, Object)
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.HandleResult(Steeltoe.Messaging.RabbitMQ.Listener.Adapters.InvocationResult, Steeltoe.Messaging.IMessage, RabbitMQ.Client.IModel, System.Object)
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Listener/Adapters/AbstractMessageListenerAdapter.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: HandleResult
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Listener/Adapters/AbstractMessageListenerAdapter.cs
    startLine: 157
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Listener.Adapters
  syntax:
    content: protected virtual void HandleResult(InvocationResult resultArg, IMessage request, IModel channel, object source)
    parameters:
    - id: resultArg
      type: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.InvocationResult
    - id: request
      type: Steeltoe.Messaging.IMessage
    - id: channel
      type: RabbitMQ.Client.IModel
    - id: source
      type: System.Object
    content.vb: Protected Overridable Sub HandleResult(resultArg As InvocationResult, request As IMessage, channel As IModel, source As Object)
  overload: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.HandleResult*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.DoHandleResult(Steeltoe.Messaging.RabbitMQ.Listener.Adapters.InvocationResult,Steeltoe.Messaging.IMessage,RabbitMQ.Client.IModel,System.Object)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.DoHandleResult(Steeltoe.Messaging.RabbitMQ.Listener.Adapters.InvocationResult,Steeltoe.Messaging.IMessage,RabbitMQ.Client.IModel,System.Object)
  id: DoHandleResult(Steeltoe.Messaging.RabbitMQ.Listener.Adapters.InvocationResult,Steeltoe.Messaging.IMessage,RabbitMQ.Client.IModel,System.Object)
  parent: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter
  langs:
  - csharp
  - vb
  name: DoHandleResult(InvocationResult, IMessage, IModel, Object)
  nameWithType: AbstractMessageListenerAdapter.DoHandleResult(InvocationResult, IMessage, IModel, Object)
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.DoHandleResult(Steeltoe.Messaging.RabbitMQ.Listener.Adapters.InvocationResult, Steeltoe.Messaging.IMessage, RabbitMQ.Client.IModel, System.Object)
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Listener/Adapters/AbstractMessageListenerAdapter.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: DoHandleResult
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Listener/Adapters/AbstractMessageListenerAdapter.cs
    startLine: 196
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Listener.Adapters
  syntax:
    content: protected virtual void DoHandleResult(InvocationResult resultArg, IMessage request, IModel channel, object source)
    parameters:
    - id: resultArg
      type: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.InvocationResult
    - id: request
      type: Steeltoe.Messaging.IMessage
    - id: channel
      type: RabbitMQ.Client.IModel
    - id: source
      type: System.Object
    content.vb: Protected Overridable Sub DoHandleResult(resultArg As InvocationResult, request As IMessage, channel As IModel, source As Object)
  overload: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.DoHandleResult*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.GetReceivedExchange(Steeltoe.Messaging.IMessage)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.GetReceivedExchange(Steeltoe.Messaging.IMessage)
  id: GetReceivedExchange(Steeltoe.Messaging.IMessage)
  parent: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter
  langs:
  - csharp
  - vb
  name: GetReceivedExchange(IMessage)
  nameWithType: AbstractMessageListenerAdapter.GetReceivedExchange(IMessage)
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.GetReceivedExchange(Steeltoe.Messaging.IMessage)
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Listener/Adapters/AbstractMessageListenerAdapter.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: GetReceivedExchange
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Listener/Adapters/AbstractMessageListenerAdapter.cs
    startLine: 215
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Listener.Adapters
  syntax:
    content: protected virtual string GetReceivedExchange(IMessage request)
    parameters:
    - id: request
      type: Steeltoe.Messaging.IMessage
    return:
      type: System.String
    content.vb: Protected Overridable Function GetReceivedExchange(request As IMessage) As String
  overload: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.GetReceivedExchange*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.PostProcessResponse(Steeltoe.Messaging.IMessage,Steeltoe.Messaging.IMessage)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.PostProcessResponse(Steeltoe.Messaging.IMessage,Steeltoe.Messaging.IMessage)
  id: PostProcessResponse(Steeltoe.Messaging.IMessage,Steeltoe.Messaging.IMessage)
  parent: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter
  langs:
  - csharp
  - vb
  name: PostProcessResponse(IMessage, IMessage)
  nameWithType: AbstractMessageListenerAdapter.PostProcessResponse(IMessage, IMessage)
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.PostProcessResponse(Steeltoe.Messaging.IMessage, Steeltoe.Messaging.IMessage)
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Listener/Adapters/AbstractMessageListenerAdapter.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: PostProcessResponse
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Listener/Adapters/AbstractMessageListenerAdapter.cs
    startLine: 220
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Listener.Adapters
  syntax:
    content: protected virtual void PostProcessResponse(IMessage request, IMessage response)
    parameters:
    - id: request
      type: Steeltoe.Messaging.IMessage
    - id: response
      type: Steeltoe.Messaging.IMessage
    content.vb: Protected Overridable Sub PostProcessResponse(request As IMessage, response As IMessage)
  overload: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.PostProcessResponse*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.GetReplyToAddress(Steeltoe.Messaging.IMessage,System.Object,Steeltoe.Messaging.RabbitMQ.Listener.Adapters.InvocationResult)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.GetReplyToAddress(Steeltoe.Messaging.IMessage,System.Object,Steeltoe.Messaging.RabbitMQ.Listener.Adapters.InvocationResult)
  id: GetReplyToAddress(Steeltoe.Messaging.IMessage,System.Object,Steeltoe.Messaging.RabbitMQ.Listener.Adapters.InvocationResult)
  parent: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter
  langs:
  - csharp
  - vb
  name: GetReplyToAddress(IMessage, Object, InvocationResult)
  nameWithType: AbstractMessageListenerAdapter.GetReplyToAddress(IMessage, Object, InvocationResult)
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.GetReplyToAddress(Steeltoe.Messaging.IMessage, System.Object, Steeltoe.Messaging.RabbitMQ.Listener.Adapters.InvocationResult)
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Listener/Adapters/AbstractMessageListenerAdapter.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: GetReplyToAddress
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Listener/Adapters/AbstractMessageListenerAdapter.cs
    startLine: 237
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Listener.Adapters
  syntax:
    content: protected virtual Address GetReplyToAddress(IMessage request, object source, InvocationResult result)
    parameters:
    - id: request
      type: Steeltoe.Messaging.IMessage
    - id: source
      type: System.Object
    - id: result
      type: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.InvocationResult
    return:
      type: Steeltoe.Messaging.RabbitMQ.Core.Address
    content.vb: Protected Overridable Function GetReplyToAddress(request As IMessage, source As Object, result As InvocationResult) As Address
  overload: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.GetReplyToAddress*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.SendResponse(RabbitMQ.Client.IModel,Steeltoe.Messaging.RabbitMQ.Core.Address,Steeltoe.Messaging.IMessage{System.Byte[]})
  commentId: M:Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.SendResponse(RabbitMQ.Client.IModel,Steeltoe.Messaging.RabbitMQ.Core.Address,Steeltoe.Messaging.IMessage{System.Byte[]})
  id: SendResponse(RabbitMQ.Client.IModel,Steeltoe.Messaging.RabbitMQ.Core.Address,Steeltoe.Messaging.IMessage{System.Byte[]})
  parent: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter
  langs:
  - csharp
  - vb
  name: SendResponse(IModel, Address, IMessage<Byte[]>)
  nameWithType: AbstractMessageListenerAdapter.SendResponse(IModel, Address, IMessage<Byte[]>)
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.SendResponse(RabbitMQ.Client.IModel, Steeltoe.Messaging.RabbitMQ.Core.Address, Steeltoe.Messaging.IMessage<System.Byte[]>)
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Listener/Adapters/AbstractMessageListenerAdapter.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: SendResponse
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Listener/Adapters/AbstractMessageListenerAdapter.cs
    startLine: 277
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Listener.Adapters
  syntax:
    content: protected void SendResponse(IModel channel, Address replyTo, IMessage<byte[]> messageIn)
    parameters:
    - id: channel
      type: RabbitMQ.Client.IModel
    - id: replyTo
      type: Steeltoe.Messaging.RabbitMQ.Core.Address
    - id: messageIn
      type: Steeltoe.Messaging.IMessage{System.Byte[]}
    content.vb: Protected Sub SendResponse(channel As IModel, replyTo As Address, messageIn As IMessage(Of Byte()))
  overload: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.SendResponse*
  nameWithType.vb: AbstractMessageListenerAdapter.SendResponse(IModel, Address, IMessage(Of Byte()))
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.SendResponse(RabbitMQ.Client.IModel, Steeltoe.Messaging.RabbitMQ.Core.Address, Steeltoe.Messaging.IMessage(Of System.Byte()))
  name.vb: SendResponse(IModel, Address, IMessage(Of Byte()))
- uid: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.DoPublish(RabbitMQ.Client.IModel,Steeltoe.Messaging.RabbitMQ.Core.Address,Steeltoe.Messaging.IMessage{System.Byte[]})
  commentId: M:Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.DoPublish(RabbitMQ.Client.IModel,Steeltoe.Messaging.RabbitMQ.Core.Address,Steeltoe.Messaging.IMessage{System.Byte[]})
  id: DoPublish(RabbitMQ.Client.IModel,Steeltoe.Messaging.RabbitMQ.Core.Address,Steeltoe.Messaging.IMessage{System.Byte[]})
  parent: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter
  langs:
  - csharp
  - vb
  name: DoPublish(IModel, Address, IMessage<Byte[]>)
  nameWithType: AbstractMessageListenerAdapter.DoPublish(IModel, Address, IMessage<Byte[]>)
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.DoPublish(RabbitMQ.Client.IModel, Steeltoe.Messaging.RabbitMQ.Core.Address, Steeltoe.Messaging.IMessage<System.Byte[]>)
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Listener/Adapters/AbstractMessageListenerAdapter.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: DoPublish
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Listener/Adapters/AbstractMessageListenerAdapter.cs
    startLine: 336
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Listener.Adapters
  syntax:
    content: protected virtual void DoPublish(IModel channel, Address replyTo, IMessage<byte[]> message)
    parameters:
    - id: channel
      type: RabbitMQ.Client.IModel
    - id: replyTo
      type: Steeltoe.Messaging.RabbitMQ.Core.Address
    - id: message
      type: Steeltoe.Messaging.IMessage{System.Byte[]}
    content.vb: Protected Overridable Sub DoPublish(channel As IModel, replyTo As Address, message As IMessage(Of Byte()))
  overload: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.DoPublish*
  nameWithType.vb: AbstractMessageListenerAdapter.DoPublish(IModel, Address, IMessage(Of Byte()))
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
  fullName.vb: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.DoPublish(RabbitMQ.Client.IModel, Steeltoe.Messaging.RabbitMQ.Core.Address, Steeltoe.Messaging.IMessage(Of System.Byte()))
  name.vb: DoPublish(IModel, Address, IMessage(Of Byte()))
- uid: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.PostProcessChannel(RabbitMQ.Client.IModel,Steeltoe.Messaging.IMessage)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.PostProcessChannel(RabbitMQ.Client.IModel,Steeltoe.Messaging.IMessage)
  id: PostProcessChannel(RabbitMQ.Client.IModel,Steeltoe.Messaging.IMessage)
  parent: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter
  langs:
  - csharp
  - vb
  name: PostProcessChannel(IModel, IMessage)
  nameWithType: AbstractMessageListenerAdapter.PostProcessChannel(IModel, IMessage)
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.PostProcessChannel(RabbitMQ.Client.IModel, Steeltoe.Messaging.IMessage)
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Listener/Adapters/AbstractMessageListenerAdapter.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: PostProcessChannel
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Listener/Adapters/AbstractMessageListenerAdapter.cs
    startLine: 343
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Listener.Adapters
  syntax:
    content: protected virtual void PostProcessChannel(IModel channel, IMessage response)
    parameters:
    - id: channel
      type: RabbitMQ.Client.IModel
    - id: response
      type: Steeltoe.Messaging.IMessage
    content.vb: Protected Overridable Sub PostProcessChannel(channel As IModel, response As IMessage)
  overload: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.PostProcessChannel*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
references:
- uid: Steeltoe.Messaging.RabbitMQ.Listener.Adapters
  commentId: N:Steeltoe.Messaging.RabbitMQ.Listener.Adapters
  name: Steeltoe.Messaging.RabbitMQ.Listener.Adapters
  nameWithType: Steeltoe.Messaging.RabbitMQ.Listener.Adapters
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.Adapters
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Steeltoe.Messaging.RabbitMQ.Listener.IChannelAwareMessageListener
  commentId: T:Steeltoe.Messaging.RabbitMQ.Listener.IChannelAwareMessageListener
  parent: Steeltoe.Messaging.RabbitMQ.Listener
  name: IChannelAwareMessageListener
  nameWithType: IChannelAwareMessageListener
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.IChannelAwareMessageListener
- uid: Steeltoe.Messaging.RabbitMQ.Listener.IMessageListener
  commentId: T:Steeltoe.Messaging.RabbitMQ.Listener.IMessageListener
  parent: Steeltoe.Messaging.RabbitMQ.Listener
  name: IMessageListener
  nameWithType: IMessageListener
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.IMessageListener
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Steeltoe.Messaging.RabbitMQ.Listener
  commentId: N:Steeltoe.Messaging.RabbitMQ.Listener
  name: Steeltoe.Messaging.RabbitMQ.Listener
  nameWithType: Steeltoe.Messaging.RabbitMQ.Listener
  fullName: Steeltoe.Messaging.RabbitMQ.Listener
- uid: Microsoft.Extensions.Logging.ILogger
  commentId: T:Microsoft.Extensions.Logging.ILogger
  parent: Microsoft.Extensions.Logging
  isExternal: true
  name: ILogger
  nameWithType: ILogger
  fullName: Microsoft.Extensions.Logging.ILogger
- uid: Microsoft.Extensions.Logging
  commentId: N:Microsoft.Extensions.Logging
  isExternal: true
  name: Microsoft.Extensions.Logging
  nameWithType: Microsoft.Extensions.Logging
  fullName: Microsoft.Extensions.Logging
- uid: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.#ctor*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.#ctor
  name: AbstractMessageListenerAdapter
  nameWithType: AbstractMessageListenerAdapter.AbstractMessageListenerAdapter
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.AbstractMessageListenerAdapter
- uid: Steeltoe.Common.Contexts.IApplicationContext
  commentId: T:Steeltoe.Common.Contexts.IApplicationContext
  parent: Steeltoe.Common.Contexts
  name: IApplicationContext
  nameWithType: IApplicationContext
  fullName: Steeltoe.Common.Contexts.IApplicationContext
- uid: Steeltoe.Common.Contexts
  commentId: N:Steeltoe.Common.Contexts
  name: Steeltoe.Common.Contexts
  nameWithType: Steeltoe.Common.Contexts
  fullName: Steeltoe.Common.Contexts
- uid: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.ApplicationContext*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.ApplicationContext
  name: ApplicationContext
  nameWithType: AbstractMessageListenerAdapter.ApplicationContext
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.ApplicationContext
- uid: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.Encoding*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.Encoding
  name: Encoding
  nameWithType: AbstractMessageListenerAdapter.Encoding
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.Encoding
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.ResponseRoutingKey*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.ResponseRoutingKey
  name: ResponseRoutingKey
  nameWithType: AbstractMessageListenerAdapter.ResponseRoutingKey
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.ResponseRoutingKey
- uid: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.ResponseExchange*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.ResponseExchange
  name: ResponseExchange
  nameWithType: AbstractMessageListenerAdapter.ResponseExchange
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.ResponseExchange
- uid: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.ResponseAddress*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.ResponseAddress
  name: ResponseAddress
  nameWithType: AbstractMessageListenerAdapter.ResponseAddress
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.ResponseAddress
- uid: Steeltoe.Messaging.RabbitMQ.Core.Address
  commentId: T:Steeltoe.Messaging.RabbitMQ.Core.Address
  parent: Steeltoe.Messaging.RabbitMQ.Core
  name: Address
  nameWithType: Address
  fullName: Steeltoe.Messaging.RabbitMQ.Core.Address
- uid: Steeltoe.Messaging.RabbitMQ.Core
  commentId: N:Steeltoe.Messaging.RabbitMQ.Core
  name: Steeltoe.Messaging.RabbitMQ.Core
  nameWithType: Steeltoe.Messaging.RabbitMQ.Core
  fullName: Steeltoe.Messaging.RabbitMQ.Core
- uid: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.MandatoryPublish*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.MandatoryPublish
  name: MandatoryPublish
  nameWithType: AbstractMessageListenerAdapter.MandatoryPublish
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.MandatoryPublish
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.MessageConverter*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.MessageConverter
  name: MessageConverter
  nameWithType: AbstractMessageListenerAdapter.MessageConverter
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.MessageConverter
- uid: Steeltoe.Messaging.Converter.ISmartMessageConverter
  commentId: T:Steeltoe.Messaging.Converter.ISmartMessageConverter
  parent: Steeltoe.Messaging.Converter
  name: ISmartMessageConverter
  nameWithType: ISmartMessageConverter
  fullName: Steeltoe.Messaging.Converter.ISmartMessageConverter
- uid: Steeltoe.Messaging.Converter
  commentId: N:Steeltoe.Messaging.Converter
  name: Steeltoe.Messaging.Converter
  nameWithType: Steeltoe.Messaging.Converter
  fullName: Steeltoe.Messaging.Converter
- uid: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.BeforeSendReplyPostProcessors*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.BeforeSendReplyPostProcessors
  name: BeforeSendReplyPostProcessors
  nameWithType: AbstractMessageListenerAdapter.BeforeSendReplyPostProcessors
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.BeforeSendReplyPostProcessors
- uid: System.Collections.Generic.List{Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor}
  commentId: T:System.Collections.Generic.List{Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<IMessagePostProcessor>
  nameWithType: List<IMessagePostProcessor>
  fullName: System.Collections.Generic.List<Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor>
  nameWithType.vb: List(Of IMessagePostProcessor)
  fullName.vb: System.Collections.Generic.List(Of Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor)
  name.vb: List(Of IMessagePostProcessor)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor
    name: IMessagePostProcessor
    nameWithType: IMessagePostProcessor
    fullName: Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor
    name: IMessagePostProcessor
    nameWithType: IMessagePostProcessor
    fullName: Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.RetryTemplate*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.RetryTemplate
  name: RetryTemplate
  nameWithType: AbstractMessageListenerAdapter.RetryTemplate
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.RetryTemplate
- uid: Steeltoe.Common.Retry.RetryTemplate
  commentId: T:Steeltoe.Common.Retry.RetryTemplate
  parent: Steeltoe.Common.Retry
  name: RetryTemplate
  nameWithType: RetryTemplate
  fullName: Steeltoe.Common.Retry.RetryTemplate
- uid: Steeltoe.Common.Retry
  commentId: N:Steeltoe.Common.Retry
  name: Steeltoe.Common.Retry
  nameWithType: Steeltoe.Common.Retry
  fullName: Steeltoe.Common.Retry
- uid: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.RecoveryCallback*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.RecoveryCallback
  name: RecoveryCallback
  nameWithType: AbstractMessageListenerAdapter.RecoveryCallback
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.RecoveryCallback
- uid: Steeltoe.Common.Retry.IRecoveryCallback
  commentId: T:Steeltoe.Common.Retry.IRecoveryCallback
  parent: Steeltoe.Common.Retry
  name: IRecoveryCallback
  nameWithType: IRecoveryCallback
  fullName: Steeltoe.Common.Retry.IRecoveryCallback
- uid: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.DefaultRequeueRejected*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.DefaultRequeueRejected
  name: DefaultRequeueRejected
  nameWithType: AbstractMessageListenerAdapter.DefaultRequeueRejected
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.DefaultRequeueRejected
- uid: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.ContainerAckMode*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.ContainerAckMode
  name: ContainerAckMode
  nameWithType: AbstractMessageListenerAdapter.ContainerAckMode
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.ContainerAckMode
- uid: Steeltoe.Messaging.RabbitMQ.Listener.IMessageListener.ContainerAckMode
  commentId: P:Steeltoe.Messaging.RabbitMQ.Listener.IMessageListener.ContainerAckMode
  parent: Steeltoe.Messaging.RabbitMQ.Listener.IMessageListener
  name: ContainerAckMode
  nameWithType: IMessageListener.ContainerAckMode
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.IMessageListener.ContainerAckMode
- uid: Steeltoe.Messaging.RabbitMQ.Core.AcknowledgeMode
  commentId: T:Steeltoe.Messaging.RabbitMQ.Core.AcknowledgeMode
  parent: Steeltoe.Messaging.RabbitMQ.Core
  name: AcknowledgeMode
  nameWithType: AcknowledgeMode
  fullName: Steeltoe.Messaging.RabbitMQ.Core.AcknowledgeMode
- uid: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.IsManualAck*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.IsManualAck
  name: IsManualAck
  nameWithType: AbstractMessageListenerAdapter.IsManualAck
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.IsManualAck
- uid: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.EvalContext*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.EvalContext
  name: EvalContext
  nameWithType: AbstractMessageListenerAdapter.EvalContext
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.EvalContext
- uid: Steeltoe.Common.Expression.IEvaluationContext
  commentId: T:Steeltoe.Common.Expression.IEvaluationContext
  parent: Steeltoe.Common.Expression
  name: IEvaluationContext
  nameWithType: IEvaluationContext
  fullName: Steeltoe.Common.Expression.IEvaluationContext
- uid: Steeltoe.Common.Expression
  commentId: N:Steeltoe.Common.Expression
  name: Steeltoe.Common.Expression
  nameWithType: Steeltoe.Common.Expression
  fullName: Steeltoe.Common.Expression
- uid: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.MessagePropertiesConverter*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.MessagePropertiesConverter
  name: MessagePropertiesConverter
  nameWithType: AbstractMessageListenerAdapter.MessagePropertiesConverter
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.MessagePropertiesConverter
- uid: Steeltoe.Messaging.RabbitMQ.Support.IMessageHeadersConverter
  commentId: T:Steeltoe.Messaging.RabbitMQ.Support.IMessageHeadersConverter
  parent: Steeltoe.Messaging.RabbitMQ.Support
  name: IMessageHeadersConverter
  nameWithType: IMessageHeadersConverter
  fullName: Steeltoe.Messaging.RabbitMQ.Support.IMessageHeadersConverter
- uid: Steeltoe.Messaging.RabbitMQ.Support
  commentId: N:Steeltoe.Messaging.RabbitMQ.Support
  name: Steeltoe.Messaging.RabbitMQ.Support
  nameWithType: Steeltoe.Messaging.RabbitMQ.Support
  fullName: Steeltoe.Messaging.RabbitMQ.Support
- uid: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.ResponseExpression*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.ResponseExpression
  name: ResponseExpression
  nameWithType: AbstractMessageListenerAdapter.ResponseExpression
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.ResponseExpression
- uid: Steeltoe.Common.Expression.IExpression
  commentId: T:Steeltoe.Common.Expression.IExpression
  parent: Steeltoe.Common.Expression
  name: IExpression
  nameWithType: IExpression
  fullName: Steeltoe.Common.Expression.IExpression
- uid: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.ReplyPostProcessor*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.ReplyPostProcessor
  name: ReplyPostProcessor
  nameWithType: AbstractMessageListenerAdapter.ReplyPostProcessor
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.ReplyPostProcessor
- uid: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.IReplyPostProcessor
  commentId: T:Steeltoe.Messaging.RabbitMQ.Listener.Adapters.IReplyPostProcessor
  parent: Steeltoe.Messaging.RabbitMQ.Listener.Adapters
  name: IReplyPostProcessor
  nameWithType: IReplyPostProcessor
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.IReplyPostProcessor
- uid: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.SetResponseAddress*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.SetResponseAddress
  name: SetResponseAddress
  nameWithType: AbstractMessageListenerAdapter.SetResponseAddress
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.SetResponseAddress
- uid: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.SetServiceResolver*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.SetServiceResolver
  name: SetServiceResolver
  nameWithType: AbstractMessageListenerAdapter.SetServiceResolver
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.SetServiceResolver
- uid: Steeltoe.Messaging.RabbitMQ.Expressions.IServiceResolver
  commentId: T:Steeltoe.Messaging.RabbitMQ.Expressions.IServiceResolver
  parent: Steeltoe.Messaging.RabbitMQ.Expressions
  name: IServiceResolver
  nameWithType: IServiceResolver
  fullName: Steeltoe.Messaging.RabbitMQ.Expressions.IServiceResolver
- uid: Steeltoe.Messaging.RabbitMQ.Expressions
  commentId: N:Steeltoe.Messaging.RabbitMQ.Expressions
  name: Steeltoe.Messaging.RabbitMQ.Expressions
  nameWithType: Steeltoe.Messaging.RabbitMQ.Expressions
  fullName: Steeltoe.Messaging.RabbitMQ.Expressions
- uid: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.SetBeforeSendReplyPostProcessors*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.SetBeforeSendReplyPostProcessors
  name: SetBeforeSendReplyPostProcessors
  nameWithType: AbstractMessageListenerAdapter.SetBeforeSendReplyPostProcessors
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.SetBeforeSendReplyPostProcessors
- uid: Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor[]
  isExternal: true
  name: IMessagePostProcessor[]
  nameWithType: IMessagePostProcessor[]
  fullName: Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor[]
  nameWithType.vb: IMessagePostProcessor()
  fullName.vb: Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor()
  name.vb: IMessagePostProcessor()
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor
    name: IMessagePostProcessor
    nameWithType: IMessagePostProcessor
    fullName: Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor
    name: IMessagePostProcessor
    nameWithType: IMessagePostProcessor
    fullName: Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.OnMessage*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.OnMessage
  name: OnMessage
  nameWithType: AbstractMessageListenerAdapter.OnMessage
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.OnMessage
- uid: Steeltoe.Messaging.RabbitMQ.Listener.IChannelAwareMessageListener.OnMessage(Steeltoe.Messaging.IMessage,RabbitMQ.Client.IModel)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Listener.IChannelAwareMessageListener.OnMessage(Steeltoe.Messaging.IMessage,RabbitMQ.Client.IModel)
  parent: Steeltoe.Messaging.RabbitMQ.Listener.IChannelAwareMessageListener
  isExternal: true
  name: OnMessage(IMessage, IModel)
  nameWithType: IChannelAwareMessageListener.OnMessage(IMessage, IModel)
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.IChannelAwareMessageListener.OnMessage(Steeltoe.Messaging.IMessage, RabbitMQ.Client.IModel)
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Listener.IChannelAwareMessageListener.OnMessage(Steeltoe.Messaging.IMessage,RabbitMQ.Client.IModel)
    name: OnMessage
    nameWithType: IChannelAwareMessageListener.OnMessage
    fullName: Steeltoe.Messaging.RabbitMQ.Listener.IChannelAwareMessageListener.OnMessage
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: RabbitMQ.Client.IModel
    name: IModel
    nameWithType: IModel
    fullName: RabbitMQ.Client.IModel
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Listener.IChannelAwareMessageListener.OnMessage(Steeltoe.Messaging.IMessage,RabbitMQ.Client.IModel)
    name: OnMessage
    nameWithType: IChannelAwareMessageListener.OnMessage
    fullName: Steeltoe.Messaging.RabbitMQ.Listener.IChannelAwareMessageListener.OnMessage
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: RabbitMQ.Client.IModel
    name: IModel
    nameWithType: IModel
    fullName: RabbitMQ.Client.IModel
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.IMessage
  commentId: T:Steeltoe.Messaging.IMessage
  parent: Steeltoe.Messaging
  name: IMessage
  nameWithType: IMessage
  fullName: Steeltoe.Messaging.IMessage
- uid: RabbitMQ.Client.IModel
  commentId: T:RabbitMQ.Client.IModel
  parent: RabbitMQ.Client
  isExternal: true
  name: IModel
  nameWithType: IModel
  fullName: RabbitMQ.Client.IModel
- uid: Steeltoe.Messaging
  commentId: N:Steeltoe.Messaging
  name: Steeltoe.Messaging
  nameWithType: Steeltoe.Messaging
  fullName: Steeltoe.Messaging
- uid: RabbitMQ.Client
  commentId: N:RabbitMQ.Client
  isExternal: true
  name: RabbitMQ.Client
  nameWithType: RabbitMQ.Client
  fullName: RabbitMQ.Client
- uid: Steeltoe.Messaging.RabbitMQ.Listener.IMessageListener.OnMessage(Steeltoe.Messaging.IMessage)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Listener.IMessageListener.OnMessage(Steeltoe.Messaging.IMessage)
  parent: Steeltoe.Messaging.RabbitMQ.Listener.IMessageListener
  name: OnMessage(IMessage)
  nameWithType: IMessageListener.OnMessage(IMessage)
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.IMessageListener.OnMessage(Steeltoe.Messaging.IMessage)
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Listener.IMessageListener.OnMessage(Steeltoe.Messaging.IMessage)
    name: OnMessage
    nameWithType: IMessageListener.OnMessage
    fullName: Steeltoe.Messaging.RabbitMQ.Listener.IMessageListener.OnMessage
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Listener.IMessageListener.OnMessage(Steeltoe.Messaging.IMessage)
    name: OnMessage
    nameWithType: IMessageListener.OnMessage
    fullName: Steeltoe.Messaging.RabbitMQ.Listener.IMessageListener.OnMessage
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.OnMessageBatch*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.OnMessageBatch
  name: OnMessageBatch
  nameWithType: AbstractMessageListenerAdapter.OnMessageBatch
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.OnMessageBatch
- uid: Steeltoe.Messaging.RabbitMQ.Listener.IChannelAwareMessageListener.OnMessageBatch(System.Collections.Generic.List{Steeltoe.Messaging.IMessage},RabbitMQ.Client.IModel)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Listener.IChannelAwareMessageListener.OnMessageBatch(System.Collections.Generic.List{Steeltoe.Messaging.IMessage},RabbitMQ.Client.IModel)
  parent: Steeltoe.Messaging.RabbitMQ.Listener.IChannelAwareMessageListener
  isExternal: true
  name: OnMessageBatch(List<IMessage>, IModel)
  nameWithType: IChannelAwareMessageListener.OnMessageBatch(List<IMessage>, IModel)
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.IChannelAwareMessageListener.OnMessageBatch(System.Collections.Generic.List<Steeltoe.Messaging.IMessage>, RabbitMQ.Client.IModel)
  nameWithType.vb: IChannelAwareMessageListener.OnMessageBatch(List(Of IMessage), IModel)
  fullName.vb: Steeltoe.Messaging.RabbitMQ.Listener.IChannelAwareMessageListener.OnMessageBatch(System.Collections.Generic.List(Of Steeltoe.Messaging.IMessage), RabbitMQ.Client.IModel)
  name.vb: OnMessageBatch(List(Of IMessage), IModel)
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Listener.IChannelAwareMessageListener.OnMessageBatch(System.Collections.Generic.List{Steeltoe.Messaging.IMessage},RabbitMQ.Client.IModel)
    name: OnMessageBatch
    nameWithType: IChannelAwareMessageListener.OnMessageBatch
    fullName: Steeltoe.Messaging.RabbitMQ.Listener.IChannelAwareMessageListener.OnMessageBatch
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: RabbitMQ.Client.IModel
    name: IModel
    nameWithType: IModel
    fullName: RabbitMQ.Client.IModel
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Listener.IChannelAwareMessageListener.OnMessageBatch(System.Collections.Generic.List{Steeltoe.Messaging.IMessage},RabbitMQ.Client.IModel)
    name: OnMessageBatch
    nameWithType: IChannelAwareMessageListener.OnMessageBatch
    fullName: Steeltoe.Messaging.RabbitMQ.Listener.IChannelAwareMessageListener.OnMessageBatch
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: RabbitMQ.Client.IModel
    name: IModel
    nameWithType: IModel
    fullName: RabbitMQ.Client.IModel
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{Steeltoe.Messaging.IMessage}
  commentId: T:System.Collections.Generic.List{Steeltoe.Messaging.IMessage}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<IMessage>
  nameWithType: List<IMessage>
  fullName: System.Collections.Generic.List<Steeltoe.Messaging.IMessage>
  nameWithType.vb: List(Of IMessage)
  fullName.vb: System.Collections.Generic.List(Of Steeltoe.Messaging.IMessage)
  name.vb: List(Of IMessage)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Listener.IMessageListener.OnMessageBatch(System.Collections.Generic.List{Steeltoe.Messaging.IMessage})
  commentId: M:Steeltoe.Messaging.RabbitMQ.Listener.IMessageListener.OnMessageBatch(System.Collections.Generic.List{Steeltoe.Messaging.IMessage})
  parent: Steeltoe.Messaging.RabbitMQ.Listener.IMessageListener
  isExternal: true
  name: OnMessageBatch(List<IMessage>)
  nameWithType: IMessageListener.OnMessageBatch(List<IMessage>)
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.IMessageListener.OnMessageBatch(System.Collections.Generic.List<Steeltoe.Messaging.IMessage>)
  nameWithType.vb: IMessageListener.OnMessageBatch(List(Of IMessage))
  fullName.vb: Steeltoe.Messaging.RabbitMQ.Listener.IMessageListener.OnMessageBatch(System.Collections.Generic.List(Of Steeltoe.Messaging.IMessage))
  name.vb: OnMessageBatch(List(Of IMessage))
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Listener.IMessageListener.OnMessageBatch(System.Collections.Generic.List{Steeltoe.Messaging.IMessage})
    name: OnMessageBatch
    nameWithType: IMessageListener.OnMessageBatch
    fullName: Steeltoe.Messaging.RabbitMQ.Listener.IMessageListener.OnMessageBatch
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Listener.IMessageListener.OnMessageBatch(System.Collections.Generic.List{Steeltoe.Messaging.IMessage})
    name: OnMessageBatch
    nameWithType: IMessageListener.OnMessageBatch
    fullName: Steeltoe.Messaging.RabbitMQ.Listener.IMessageListener.OnMessageBatch
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.BuildMessage*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.BuildMessage
  name: BuildMessage
  nameWithType: AbstractMessageListenerAdapter.BuildMessage
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.BuildMessage
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: Steeltoe.Messaging.IMessage{System.Byte[]}
  commentId: T:Steeltoe.Messaging.IMessage{System.Byte[]}
  parent: Steeltoe.Messaging
  definition: Steeltoe.Messaging.IMessage`1
  name: IMessage<Byte[]>
  nameWithType: IMessage<Byte[]>
  fullName: Steeltoe.Messaging.IMessage<System.Byte[]>
  nameWithType.vb: IMessage(Of Byte())
  fullName.vb: Steeltoe.Messaging.IMessage(Of System.Byte())
  name.vb: IMessage(Of Byte())
  spec.csharp:
  - uid: Steeltoe.Messaging.IMessage`1
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Steeltoe.Messaging.IMessage`1
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.IMessage`1
  commentId: T:Steeltoe.Messaging.IMessage`1
  name: IMessage<T>
  nameWithType: IMessage<T>
  fullName: Steeltoe.Messaging.IMessage<T>
  nameWithType.vb: IMessage(Of T)
  fullName.vb: Steeltoe.Messaging.IMessage(Of T)
  name.vb: IMessage(Of T)
  spec.csharp:
  - uid: Steeltoe.Messaging.IMessage`1
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Steeltoe.Messaging.IMessage`1
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.HandleListenerException*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.HandleListenerException
  name: HandleListenerException
  nameWithType: AbstractMessageListenerAdapter.HandleListenerException
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.HandleListenerException
- uid: System.Exception
  commentId: T:System.Exception
  parent: System
  isExternal: true
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.ExtractMessage*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.ExtractMessage
  name: ExtractMessage
  nameWithType: AbstractMessageListenerAdapter.ExtractMessage
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.ExtractMessage
- uid: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.HandleResult*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.HandleResult
  name: HandleResult
  nameWithType: AbstractMessageListenerAdapter.HandleResult
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.HandleResult
- uid: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.InvocationResult
  commentId: T:Steeltoe.Messaging.RabbitMQ.Listener.Adapters.InvocationResult
  parent: Steeltoe.Messaging.RabbitMQ.Listener.Adapters
  name: InvocationResult
  nameWithType: InvocationResult
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.InvocationResult
- uid: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.DoHandleResult*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.DoHandleResult
  name: DoHandleResult
  nameWithType: AbstractMessageListenerAdapter.DoHandleResult
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.DoHandleResult
- uid: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.GetReceivedExchange*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.GetReceivedExchange
  name: GetReceivedExchange
  nameWithType: AbstractMessageListenerAdapter.GetReceivedExchange
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.GetReceivedExchange
- uid: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.PostProcessResponse*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.PostProcessResponse
  name: PostProcessResponse
  nameWithType: AbstractMessageListenerAdapter.PostProcessResponse
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.PostProcessResponse
- uid: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.GetReplyToAddress*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.GetReplyToAddress
  name: GetReplyToAddress
  nameWithType: AbstractMessageListenerAdapter.GetReplyToAddress
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.GetReplyToAddress
- uid: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.SendResponse*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.SendResponse
  name: SendResponse
  nameWithType: AbstractMessageListenerAdapter.SendResponse
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.SendResponse
- uid: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.DoPublish*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.DoPublish
  name: DoPublish
  nameWithType: AbstractMessageListenerAdapter.DoPublish
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.DoPublish
- uid: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.PostProcessChannel*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.PostProcessChannel
  name: PostProcessChannel
  nameWithType: AbstractMessageListenerAdapter.PostProcessChannel
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.PostProcessChannel
