### YamlMime:ManagedReference
items:
- uid: Steeltoe.Messaging.RabbitMQ.Connection.ConsumerChannelRegistry
  commentId: T:Steeltoe.Messaging.RabbitMQ.Connection.ConsumerChannelRegistry
  id: ConsumerChannelRegistry
  parent: Steeltoe.Messaging.RabbitMQ.Connection
  children:
  - Steeltoe.Messaging.RabbitMQ.Connection.ConsumerChannelRegistry.GetConsumerChannel
  - Steeltoe.Messaging.RabbitMQ.Connection.ConsumerChannelRegistry.GetConsumerChannel(Steeltoe.Messaging.RabbitMQ.Connection.IConnectionFactory)
  - Steeltoe.Messaging.RabbitMQ.Connection.ConsumerChannelRegistry.RegisterConsumerChannel(RabbitMQ.Client.IModel,Steeltoe.Messaging.RabbitMQ.Connection.IConnectionFactory,Microsoft.Extensions.Logging.ILogger)
  - Steeltoe.Messaging.RabbitMQ.Connection.ConsumerChannelRegistry.UnRegisterConsumerChannel(Microsoft.Extensions.Logging.ILogger)
  langs:
  - csharp
  - vb
  name: ConsumerChannelRegistry
  nameWithType: ConsumerChannelRegistry
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.ConsumerChannelRegistry
  type: Class
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Connection/ConsumerChannelRegistry.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: ConsumerChannelRegistry
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Connection/ConsumerChannelRegistry.cs
    startLine: 10
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Connection
  syntax:
    content: public static class ConsumerChannelRegistry
    content.vb: Public Module ConsumerChannelRegistry
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Steeltoe.Messaging.RabbitMQ.Connection.ConsumerChannelRegistry.RegisterConsumerChannel(RabbitMQ.Client.IModel,Steeltoe.Messaging.RabbitMQ.Connection.IConnectionFactory,Microsoft.Extensions.Logging.ILogger)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Connection.ConsumerChannelRegistry.RegisterConsumerChannel(RabbitMQ.Client.IModel,Steeltoe.Messaging.RabbitMQ.Connection.IConnectionFactory,Microsoft.Extensions.Logging.ILogger)
  id: RegisterConsumerChannel(RabbitMQ.Client.IModel,Steeltoe.Messaging.RabbitMQ.Connection.IConnectionFactory,Microsoft.Extensions.Logging.ILogger)
  parent: Steeltoe.Messaging.RabbitMQ.Connection.ConsumerChannelRegistry
  langs:
  - csharp
  - vb
  name: RegisterConsumerChannel(IModel, IConnectionFactory, ILogger)
  nameWithType: ConsumerChannelRegistry.RegisterConsumerChannel(IModel, IConnectionFactory, ILogger)
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.ConsumerChannelRegistry.RegisterConsumerChannel(RabbitMQ.Client.IModel, Steeltoe.Messaging.RabbitMQ.Connection.IConnectionFactory, Microsoft.Extensions.Logging.ILogger)
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Connection/ConsumerChannelRegistry.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: RegisterConsumerChannel
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Connection/ConsumerChannelRegistry.cs
    startLine: 14
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Connection
  syntax:
    content: public static void RegisterConsumerChannel(IModel channel, IConnectionFactory connectionFactory, ILogger logger = null)
    parameters:
    - id: channel
      type: RabbitMQ.Client.IModel
    - id: connectionFactory
      type: Steeltoe.Messaging.RabbitMQ.Connection.IConnectionFactory
    - id: logger
      type: Microsoft.Extensions.Logging.ILogger
    content.vb: Public Shared Sub RegisterConsumerChannel(channel As IModel, connectionFactory As IConnectionFactory, logger As ILogger = Nothing)
  overload: Steeltoe.Messaging.RabbitMQ.Connection.ConsumerChannelRegistry.RegisterConsumerChannel*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Steeltoe.Messaging.RabbitMQ.Connection.ConsumerChannelRegistry.UnRegisterConsumerChannel(Microsoft.Extensions.Logging.ILogger)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Connection.ConsumerChannelRegistry.UnRegisterConsumerChannel(Microsoft.Extensions.Logging.ILogger)
  id: UnRegisterConsumerChannel(Microsoft.Extensions.Logging.ILogger)
  parent: Steeltoe.Messaging.RabbitMQ.Connection.ConsumerChannelRegistry
  langs:
  - csharp
  - vb
  name: UnRegisterConsumerChannel(ILogger)
  nameWithType: ConsumerChannelRegistry.UnRegisterConsumerChannel(ILogger)
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.ConsumerChannelRegistry.UnRegisterConsumerChannel(Microsoft.Extensions.Logging.ILogger)
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Connection/ConsumerChannelRegistry.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: UnRegisterConsumerChannel
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Connection/ConsumerChannelRegistry.cs
    startLine: 20
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Connection
  syntax:
    content: public static void UnRegisterConsumerChannel(ILogger logger = null)
    parameters:
    - id: logger
      type: Microsoft.Extensions.Logging.ILogger
    content.vb: Public Shared Sub UnRegisterConsumerChannel(logger As ILogger = Nothing)
  overload: Steeltoe.Messaging.RabbitMQ.Connection.ConsumerChannelRegistry.UnRegisterConsumerChannel*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Steeltoe.Messaging.RabbitMQ.Connection.ConsumerChannelRegistry.GetConsumerChannel
  commentId: M:Steeltoe.Messaging.RabbitMQ.Connection.ConsumerChannelRegistry.GetConsumerChannel
  id: GetConsumerChannel
  parent: Steeltoe.Messaging.RabbitMQ.Connection.ConsumerChannelRegistry
  langs:
  - csharp
  - vb
  name: GetConsumerChannel()
  nameWithType: ConsumerChannelRegistry.GetConsumerChannel()
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.ConsumerChannelRegistry.GetConsumerChannel()
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Connection/ConsumerChannelRegistry.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: GetConsumerChannel
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Connection/ConsumerChannelRegistry.cs
    startLine: 26
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Connection
  syntax:
    content: public static IModel GetConsumerChannel()
    return:
      type: RabbitMQ.Client.IModel
    content.vb: Public Shared Function GetConsumerChannel As IModel
  overload: Steeltoe.Messaging.RabbitMQ.Connection.ConsumerChannelRegistry.GetConsumerChannel*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Steeltoe.Messaging.RabbitMQ.Connection.ConsumerChannelRegistry.GetConsumerChannel(Steeltoe.Messaging.RabbitMQ.Connection.IConnectionFactory)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Connection.ConsumerChannelRegistry.GetConsumerChannel(Steeltoe.Messaging.RabbitMQ.Connection.IConnectionFactory)
  id: GetConsumerChannel(Steeltoe.Messaging.RabbitMQ.Connection.IConnectionFactory)
  parent: Steeltoe.Messaging.RabbitMQ.Connection.ConsumerChannelRegistry
  langs:
  - csharp
  - vb
  name: GetConsumerChannel(IConnectionFactory)
  nameWithType: ConsumerChannelRegistry.GetConsumerChannel(IConnectionFactory)
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.ConsumerChannelRegistry.GetConsumerChannel(Steeltoe.Messaging.RabbitMQ.Connection.IConnectionFactory)
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Connection/ConsumerChannelRegistry.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: GetConsumerChannel
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Connection/ConsumerChannelRegistry.cs
    startLine: 38
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Connection
  syntax:
    content: public static IModel GetConsumerChannel(IConnectionFactory connectionFactory)
    parameters:
    - id: connectionFactory
      type: Steeltoe.Messaging.RabbitMQ.Connection.IConnectionFactory
    return:
      type: RabbitMQ.Client.IModel
    content.vb: Public Shared Function GetConsumerChannel(connectionFactory As IConnectionFactory) As IModel
  overload: Steeltoe.Messaging.RabbitMQ.Connection.ConsumerChannelRegistry.GetConsumerChannel*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Steeltoe.Messaging.RabbitMQ.Connection
  commentId: N:Steeltoe.Messaging.RabbitMQ.Connection
  name: Steeltoe.Messaging.RabbitMQ.Connection
  nameWithType: Steeltoe.Messaging.RabbitMQ.Connection
  fullName: Steeltoe.Messaging.RabbitMQ.Connection
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Steeltoe.Messaging.RabbitMQ.Connection.ConsumerChannelRegistry.RegisterConsumerChannel*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Connection.ConsumerChannelRegistry.RegisterConsumerChannel
  name: RegisterConsumerChannel
  nameWithType: ConsumerChannelRegistry.RegisterConsumerChannel
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.ConsumerChannelRegistry.RegisterConsumerChannel
- uid: RabbitMQ.Client.IModel
  commentId: T:RabbitMQ.Client.IModel
  parent: RabbitMQ.Client
  isExternal: true
  name: IModel
  nameWithType: IModel
  fullName: RabbitMQ.Client.IModel
- uid: Steeltoe.Messaging.RabbitMQ.Connection.IConnectionFactory
  commentId: T:Steeltoe.Messaging.RabbitMQ.Connection.IConnectionFactory
  parent: Steeltoe.Messaging.RabbitMQ.Connection
  name: IConnectionFactory
  nameWithType: IConnectionFactory
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.IConnectionFactory
- uid: Microsoft.Extensions.Logging.ILogger
  commentId: T:Microsoft.Extensions.Logging.ILogger
  parent: Microsoft.Extensions.Logging
  isExternal: true
  name: ILogger
  nameWithType: ILogger
  fullName: Microsoft.Extensions.Logging.ILogger
- uid: RabbitMQ.Client
  commentId: N:RabbitMQ.Client
  isExternal: true
  name: RabbitMQ.Client
  nameWithType: RabbitMQ.Client
  fullName: RabbitMQ.Client
- uid: Microsoft.Extensions.Logging
  commentId: N:Microsoft.Extensions.Logging
  isExternal: true
  name: Microsoft.Extensions.Logging
  nameWithType: Microsoft.Extensions.Logging
  fullName: Microsoft.Extensions.Logging
- uid: Steeltoe.Messaging.RabbitMQ.Connection.ConsumerChannelRegistry.UnRegisterConsumerChannel*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Connection.ConsumerChannelRegistry.UnRegisterConsumerChannel
  name: UnRegisterConsumerChannel
  nameWithType: ConsumerChannelRegistry.UnRegisterConsumerChannel
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.ConsumerChannelRegistry.UnRegisterConsumerChannel
- uid: Steeltoe.Messaging.RabbitMQ.Connection.ConsumerChannelRegistry.GetConsumerChannel*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Connection.ConsumerChannelRegistry.GetConsumerChannel
  name: GetConsumerChannel
  nameWithType: ConsumerChannelRegistry.GetConsumerChannel
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.ConsumerChannelRegistry.GetConsumerChannel
