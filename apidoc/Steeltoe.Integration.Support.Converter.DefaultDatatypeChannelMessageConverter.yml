### YamlMime:ManagedReference
items:
- uid: Steeltoe.Integration.Support.Converter.DefaultDatatypeChannelMessageConverter
  commentId: T:Steeltoe.Integration.Support.Converter.DefaultDatatypeChannelMessageConverter
  id: DefaultDatatypeChannelMessageConverter
  parent: Steeltoe.Integration.Support.Converter
  children:
  - Steeltoe.Integration.Support.Converter.DefaultDatatypeChannelMessageConverter.#ctor(Steeltoe.Common.Converter.IConversionService)
  - Steeltoe.Integration.Support.Converter.DefaultDatatypeChannelMessageConverter.DEFAULT_SERVICE_NAME
  - Steeltoe.Integration.Support.Converter.DefaultDatatypeChannelMessageConverter.FromMessage(Steeltoe.Messaging.IMessage,System.Type)
  - Steeltoe.Integration.Support.Converter.DefaultDatatypeChannelMessageConverter.FromMessage``1(Steeltoe.Messaging.IMessage)
  - Steeltoe.Integration.Support.Converter.DefaultDatatypeChannelMessageConverter.ServiceName
  - Steeltoe.Integration.Support.Converter.DefaultDatatypeChannelMessageConverter.ToMessage(System.Object,Steeltoe.Messaging.IMessageHeaders)
  langs:
  - csharp
  - vb
  name: DefaultDatatypeChannelMessageConverter
  nameWithType: DefaultDatatypeChannelMessageConverter
  fullName: Steeltoe.Integration.Support.Converter.DefaultDatatypeChannelMessageConverter
  type: Class
  source:
    remote:
      path: src/Integration/src/IntegrationBase/Support/Converter/DefaultDatatypeChannelMessageConverter.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: DefaultDatatypeChannelMessageConverter
    path: ../Steeltoe/src/Integration/src/IntegrationBase/Support/Converter/DefaultDatatypeChannelMessageConverter.cs
    startLine: 11
  assemblies:
  - Steeltoe.Integration.IntegrationBase
  namespace: Steeltoe.Integration.Support.Converter
  syntax:
    content: 'public class DefaultDatatypeChannelMessageConverter : IMessageConverter, IServiceNameAware'
    content.vb: >-
      Public Class DefaultDatatypeChannelMessageConverter

          Implements IMessageConverter, IServiceNameAware
  inheritance:
  - System.Object
  implements:
  - Steeltoe.Messaging.Converter.IMessageConverter
  - IServiceNameAware
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Steeltoe.Integration.Support.Converter.DefaultDatatypeChannelMessageConverter.DEFAULT_SERVICE_NAME
  commentId: F:Steeltoe.Integration.Support.Converter.DefaultDatatypeChannelMessageConverter.DEFAULT_SERVICE_NAME
  id: DEFAULT_SERVICE_NAME
  parent: Steeltoe.Integration.Support.Converter.DefaultDatatypeChannelMessageConverter
  langs:
  - csharp
  - vb
  name: DEFAULT_SERVICE_NAME
  nameWithType: DefaultDatatypeChannelMessageConverter.DEFAULT_SERVICE_NAME
  fullName: Steeltoe.Integration.Support.Converter.DefaultDatatypeChannelMessageConverter.DEFAULT_SERVICE_NAME
  type: Field
  source:
    remote:
      path: src/Integration/src/IntegrationBase/Support/Converter/DefaultDatatypeChannelMessageConverter.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: DEFAULT_SERVICE_NAME
    path: ../Steeltoe/src/Integration/src/IntegrationBase/Support/Converter/DefaultDatatypeChannelMessageConverter.cs
    startLine: 13
  assemblies:
  - Steeltoe.Integration.IntegrationBase
  namespace: Steeltoe.Integration.Support.Converter
  syntax:
    content: public const string DEFAULT_SERVICE_NAME = "DefaultDatatypeChannelMessageConverter"
    return:
      type: System.String
    content.vb: Public Const DEFAULT_SERVICE_NAME As String = "DefaultDatatypeChannelMessageConverter"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Steeltoe.Integration.Support.Converter.DefaultDatatypeChannelMessageConverter.#ctor(Steeltoe.Common.Converter.IConversionService)
  commentId: M:Steeltoe.Integration.Support.Converter.DefaultDatatypeChannelMessageConverter.#ctor(Steeltoe.Common.Converter.IConversionService)
  id: '#ctor(Steeltoe.Common.Converter.IConversionService)'
  parent: Steeltoe.Integration.Support.Converter.DefaultDatatypeChannelMessageConverter
  langs:
  - csharp
  - vb
  name: DefaultDatatypeChannelMessageConverter(IConversionService)
  nameWithType: DefaultDatatypeChannelMessageConverter.DefaultDatatypeChannelMessageConverter(IConversionService)
  fullName: Steeltoe.Integration.Support.Converter.DefaultDatatypeChannelMessageConverter.DefaultDatatypeChannelMessageConverter(Steeltoe.Common.Converter.IConversionService)
  type: Constructor
  source:
    remote:
      path: src/Integration/src/IntegrationBase/Support/Converter/DefaultDatatypeChannelMessageConverter.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: .ctor
    path: ../Steeltoe/src/Integration/src/IntegrationBase/Support/Converter/DefaultDatatypeChannelMessageConverter.cs
    startLine: 17
  assemblies:
  - Steeltoe.Integration.IntegrationBase
  namespace: Steeltoe.Integration.Support.Converter
  syntax:
    content: public DefaultDatatypeChannelMessageConverter(IConversionService conversionService = null)
    parameters:
    - id: conversionService
      type: Steeltoe.Common.Converter.IConversionService
    content.vb: Public Sub New(conversionService As IConversionService = Nothing)
  overload: Steeltoe.Integration.Support.Converter.DefaultDatatypeChannelMessageConverter.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Steeltoe.Integration.Support.Converter.DefaultDatatypeChannelMessageConverter.ServiceName
  commentId: P:Steeltoe.Integration.Support.Converter.DefaultDatatypeChannelMessageConverter.ServiceName
  id: ServiceName
  parent: Steeltoe.Integration.Support.Converter.DefaultDatatypeChannelMessageConverter
  langs:
  - csharp
  - vb
  name: ServiceName
  nameWithType: DefaultDatatypeChannelMessageConverter.ServiceName
  fullName: Steeltoe.Integration.Support.Converter.DefaultDatatypeChannelMessageConverter.ServiceName
  type: Property
  source:
    remote:
      path: src/Integration/src/IntegrationBase/Support/Converter/DefaultDatatypeChannelMessageConverter.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: ServiceName
    path: ../Steeltoe/src/Integration/src/IntegrationBase/Support/Converter/DefaultDatatypeChannelMessageConverter.cs
    startLine: 22
  assemblies:
  - Steeltoe.Integration.IntegrationBase
  namespace: Steeltoe.Integration.Support.Converter
  syntax:
    content: public string ServiceName { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property ServiceName As String
  overload: Steeltoe.Integration.Support.Converter.DefaultDatatypeChannelMessageConverter.ServiceName*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Steeltoe.Integration.Support.Converter.DefaultDatatypeChannelMessageConverter.FromMessage(Steeltoe.Messaging.IMessage,System.Type)
  commentId: M:Steeltoe.Integration.Support.Converter.DefaultDatatypeChannelMessageConverter.FromMessage(Steeltoe.Messaging.IMessage,System.Type)
  id: FromMessage(Steeltoe.Messaging.IMessage,System.Type)
  parent: Steeltoe.Integration.Support.Converter.DefaultDatatypeChannelMessageConverter
  langs:
  - csharp
  - vb
  name: FromMessage(IMessage, Type)
  nameWithType: DefaultDatatypeChannelMessageConverter.FromMessage(IMessage, Type)
  fullName: Steeltoe.Integration.Support.Converter.DefaultDatatypeChannelMessageConverter.FromMessage(Steeltoe.Messaging.IMessage, System.Type)
  type: Method
  source:
    remote:
      path: src/Integration/src/IntegrationBase/Support/Converter/DefaultDatatypeChannelMessageConverter.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: FromMessage
    path: ../Steeltoe/src/Integration/src/IntegrationBase/Support/Converter/DefaultDatatypeChannelMessageConverter.cs
    startLine: 24
  assemblies:
  - Steeltoe.Integration.IntegrationBase
  namespace: Steeltoe.Integration.Support.Converter
  syntax:
    content: public object FromMessage(IMessage message, Type targetClass)
    parameters:
    - id: message
      type: Steeltoe.Messaging.IMessage
    - id: targetClass
      type: System.Type
    return:
      type: System.Object
    content.vb: Public Function FromMessage(message As IMessage, targetClass As Type) As Object
  overload: Steeltoe.Integration.Support.Converter.DefaultDatatypeChannelMessageConverter.FromMessage*
  implements:
  - Steeltoe.Messaging.Converter.IMessageConverter.FromMessage(Steeltoe.Messaging.IMessage,System.Type)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Steeltoe.Integration.Support.Converter.DefaultDatatypeChannelMessageConverter.FromMessage``1(Steeltoe.Messaging.IMessage)
  commentId: M:Steeltoe.Integration.Support.Converter.DefaultDatatypeChannelMessageConverter.FromMessage``1(Steeltoe.Messaging.IMessage)
  id: FromMessage``1(Steeltoe.Messaging.IMessage)
  parent: Steeltoe.Integration.Support.Converter.DefaultDatatypeChannelMessageConverter
  langs:
  - csharp
  - vb
  name: FromMessage<T>(IMessage)
  nameWithType: DefaultDatatypeChannelMessageConverter.FromMessage<T>(IMessage)
  fullName: Steeltoe.Integration.Support.Converter.DefaultDatatypeChannelMessageConverter.FromMessage<T>(Steeltoe.Messaging.IMessage)
  type: Method
  source:
    remote:
      path: src/Integration/src/IntegrationBase/Support/Converter/DefaultDatatypeChannelMessageConverter.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: FromMessage
    path: ../Steeltoe/src/Integration/src/IntegrationBase/Support/Converter/DefaultDatatypeChannelMessageConverter.cs
    startLine: 36
  assemblies:
  - Steeltoe.Integration.IntegrationBase
  namespace: Steeltoe.Integration.Support.Converter
  syntax:
    content: public T FromMessage<T>(IMessage message)
    parameters:
    - id: message
      type: Steeltoe.Messaging.IMessage
    typeParameters:
    - id: T
    return:
      type: '{T}'
    content.vb: Public Function FromMessage(Of T)(message As IMessage) As T
  overload: Steeltoe.Integration.Support.Converter.DefaultDatatypeChannelMessageConverter.FromMessage*
  implements:
  - Steeltoe.Messaging.Converter.IMessageConverter.FromMessage``1(Steeltoe.Messaging.IMessage)
  nameWithType.vb: DefaultDatatypeChannelMessageConverter.FromMessage(Of T)(IMessage)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Steeltoe.Integration.Support.Converter.DefaultDatatypeChannelMessageConverter.FromMessage(Of T)(Steeltoe.Messaging.IMessage)
  name.vb: FromMessage(Of T)(IMessage)
- uid: Steeltoe.Integration.Support.Converter.DefaultDatatypeChannelMessageConverter.ToMessage(System.Object,Steeltoe.Messaging.IMessageHeaders)
  commentId: M:Steeltoe.Integration.Support.Converter.DefaultDatatypeChannelMessageConverter.ToMessage(System.Object,Steeltoe.Messaging.IMessageHeaders)
  id: ToMessage(System.Object,Steeltoe.Messaging.IMessageHeaders)
  parent: Steeltoe.Integration.Support.Converter.DefaultDatatypeChannelMessageConverter
  langs:
  - csharp
  - vb
  name: ToMessage(Object, IMessageHeaders)
  nameWithType: DefaultDatatypeChannelMessageConverter.ToMessage(Object, IMessageHeaders)
  fullName: Steeltoe.Integration.Support.Converter.DefaultDatatypeChannelMessageConverter.ToMessage(System.Object, Steeltoe.Messaging.IMessageHeaders)
  type: Method
  source:
    remote:
      path: src/Integration/src/IntegrationBase/Support/Converter/DefaultDatatypeChannelMessageConverter.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: ToMessage
    path: ../Steeltoe/src/Integration/src/IntegrationBase/Support/Converter/DefaultDatatypeChannelMessageConverter.cs
    startLine: 41
  assemblies:
  - Steeltoe.Integration.IntegrationBase
  namespace: Steeltoe.Integration.Support.Converter
  syntax:
    content: public IMessage ToMessage(object payload, IMessageHeaders headers)
    parameters:
    - id: payload
      type: System.Object
    - id: headers
      type: Steeltoe.Messaging.IMessageHeaders
    return:
      type: Steeltoe.Messaging.IMessage
    content.vb: Public Function ToMessage(payload As Object, headers As IMessageHeaders) As IMessage
  overload: Steeltoe.Integration.Support.Converter.DefaultDatatypeChannelMessageConverter.ToMessage*
  implements:
  - Steeltoe.Messaging.Converter.IMessageConverter.ToMessage(System.Object,Steeltoe.Messaging.IMessageHeaders)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Steeltoe.Integration.Support.Converter
  commentId: N:Steeltoe.Integration.Support.Converter
  name: Steeltoe.Integration.Support.Converter
  nameWithType: Steeltoe.Integration.Support.Converter
  fullName: Steeltoe.Integration.Support.Converter
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Steeltoe.Messaging.Converter.IMessageConverter
  commentId: T:Steeltoe.Messaging.Converter.IMessageConverter
  parent: Steeltoe.Messaging.Converter
  name: IMessageConverter
  nameWithType: IMessageConverter
  fullName: Steeltoe.Messaging.Converter.IMessageConverter
- uid: IServiceNameAware
  isExternal: true
  name: IServiceNameAware
  nameWithType: IServiceNameAware
  fullName: IServiceNameAware
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Steeltoe.Messaging.Converter
  commentId: N:Steeltoe.Messaging.Converter
  name: Steeltoe.Messaging.Converter
  nameWithType: Steeltoe.Messaging.Converter
  fullName: Steeltoe.Messaging.Converter
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Steeltoe.Integration.Support.Converter.DefaultDatatypeChannelMessageConverter.#ctor*
  commentId: Overload:Steeltoe.Integration.Support.Converter.DefaultDatatypeChannelMessageConverter.#ctor
  name: DefaultDatatypeChannelMessageConverter
  nameWithType: DefaultDatatypeChannelMessageConverter.DefaultDatatypeChannelMessageConverter
  fullName: Steeltoe.Integration.Support.Converter.DefaultDatatypeChannelMessageConverter.DefaultDatatypeChannelMessageConverter
- uid: Steeltoe.Common.Converter.IConversionService
  commentId: T:Steeltoe.Common.Converter.IConversionService
  parent: Steeltoe.Common.Converter
  name: IConversionService
  nameWithType: IConversionService
  fullName: Steeltoe.Common.Converter.IConversionService
- uid: Steeltoe.Common.Converter
  commentId: N:Steeltoe.Common.Converter
  name: Steeltoe.Common.Converter
  nameWithType: Steeltoe.Common.Converter
  fullName: Steeltoe.Common.Converter
- uid: Steeltoe.Integration.Support.Converter.DefaultDatatypeChannelMessageConverter.ServiceName*
  commentId: Overload:Steeltoe.Integration.Support.Converter.DefaultDatatypeChannelMessageConverter.ServiceName
  name: ServiceName
  nameWithType: DefaultDatatypeChannelMessageConverter.ServiceName
  fullName: Steeltoe.Integration.Support.Converter.DefaultDatatypeChannelMessageConverter.ServiceName
- uid: Steeltoe.Integration.Support.Converter.DefaultDatatypeChannelMessageConverter.FromMessage*
  commentId: Overload:Steeltoe.Integration.Support.Converter.DefaultDatatypeChannelMessageConverter.FromMessage
  name: FromMessage
  nameWithType: DefaultDatatypeChannelMessageConverter.FromMessage
  fullName: Steeltoe.Integration.Support.Converter.DefaultDatatypeChannelMessageConverter.FromMessage
- uid: Steeltoe.Messaging.Converter.IMessageConverter.FromMessage(Steeltoe.Messaging.IMessage,System.Type)
  commentId: M:Steeltoe.Messaging.Converter.IMessageConverter.FromMessage(Steeltoe.Messaging.IMessage,System.Type)
  parent: Steeltoe.Messaging.Converter.IMessageConverter
  isExternal: true
  name: FromMessage(IMessage, Type)
  nameWithType: IMessageConverter.FromMessage(IMessage, Type)
  fullName: Steeltoe.Messaging.Converter.IMessageConverter.FromMessage(Steeltoe.Messaging.IMessage, System.Type)
  spec.csharp:
  - uid: Steeltoe.Messaging.Converter.IMessageConverter.FromMessage(Steeltoe.Messaging.IMessage,System.Type)
    name: FromMessage
    nameWithType: IMessageConverter.FromMessage
    fullName: Steeltoe.Messaging.Converter.IMessageConverter.FromMessage
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Converter.IMessageConverter.FromMessage(Steeltoe.Messaging.IMessage,System.Type)
    name: FromMessage
    nameWithType: IMessageConverter.FromMessage
    fullName: Steeltoe.Messaging.Converter.IMessageConverter.FromMessage
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.IMessage
  commentId: T:Steeltoe.Messaging.IMessage
  parent: Steeltoe.Messaging
  name: IMessage
  nameWithType: IMessage
  fullName: Steeltoe.Messaging.IMessage
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: Steeltoe.Messaging
  commentId: N:Steeltoe.Messaging
  name: Steeltoe.Messaging
  nameWithType: Steeltoe.Messaging
  fullName: Steeltoe.Messaging
- uid: Steeltoe.Messaging.Converter.IMessageConverter.FromMessage``1(Steeltoe.Messaging.IMessage)
  commentId: M:Steeltoe.Messaging.Converter.IMessageConverter.FromMessage``1(Steeltoe.Messaging.IMessage)
  parent: Steeltoe.Messaging.Converter.IMessageConverter
  name: FromMessage<T>(IMessage)
  nameWithType: IMessageConverter.FromMessage<T>(IMessage)
  fullName: Steeltoe.Messaging.Converter.IMessageConverter.FromMessage<T>(Steeltoe.Messaging.IMessage)
  nameWithType.vb: IMessageConverter.FromMessage(Of T)(IMessage)
  fullName.vb: Steeltoe.Messaging.Converter.IMessageConverter.FromMessage(Of T)(Steeltoe.Messaging.IMessage)
  name.vb: FromMessage(Of T)(IMessage)
  spec.csharp:
  - uid: Steeltoe.Messaging.Converter.IMessageConverter.FromMessage``1(Steeltoe.Messaging.IMessage)
    name: FromMessage<T>
    nameWithType: IMessageConverter.FromMessage<T>
    fullName: Steeltoe.Messaging.Converter.IMessageConverter.FromMessage<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Converter.IMessageConverter.FromMessage``1(Steeltoe.Messaging.IMessage)
    name: FromMessage(Of T)
    nameWithType: IMessageConverter.FromMessage(Of T)
    fullName: Steeltoe.Messaging.Converter.IMessageConverter.FromMessage(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: )
    nameWithType: )
    fullName: )
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: Steeltoe.Integration.Support.Converter.DefaultDatatypeChannelMessageConverter.ToMessage*
  commentId: Overload:Steeltoe.Integration.Support.Converter.DefaultDatatypeChannelMessageConverter.ToMessage
  name: ToMessage
  nameWithType: DefaultDatatypeChannelMessageConverter.ToMessage
  fullName: Steeltoe.Integration.Support.Converter.DefaultDatatypeChannelMessageConverter.ToMessage
- uid: Steeltoe.Messaging.Converter.IMessageConverter.ToMessage(System.Object,Steeltoe.Messaging.IMessageHeaders)
  commentId: M:Steeltoe.Messaging.Converter.IMessageConverter.ToMessage(System.Object,Steeltoe.Messaging.IMessageHeaders)
  parent: Steeltoe.Messaging.Converter.IMessageConverter
  isExternal: true
  name: ToMessage(Object, IMessageHeaders)
  nameWithType: IMessageConverter.ToMessage(Object, IMessageHeaders)
  fullName: Steeltoe.Messaging.Converter.IMessageConverter.ToMessage(System.Object, Steeltoe.Messaging.IMessageHeaders)
  spec.csharp:
  - uid: Steeltoe.Messaging.Converter.IMessageConverter.ToMessage(System.Object,Steeltoe.Messaging.IMessageHeaders)
    name: ToMessage
    nameWithType: IMessageConverter.ToMessage
    fullName: Steeltoe.Messaging.Converter.IMessageConverter.ToMessage
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.IMessageHeaders
    name: IMessageHeaders
    nameWithType: IMessageHeaders
    fullName: Steeltoe.Messaging.IMessageHeaders
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Converter.IMessageConverter.ToMessage(System.Object,Steeltoe.Messaging.IMessageHeaders)
    name: ToMessage
    nameWithType: IMessageConverter.ToMessage
    fullName: Steeltoe.Messaging.Converter.IMessageConverter.ToMessage
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.IMessageHeaders
    name: IMessageHeaders
    nameWithType: IMessageHeaders
    fullName: Steeltoe.Messaging.IMessageHeaders
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.IMessageHeaders
  commentId: T:Steeltoe.Messaging.IMessageHeaders
  parent: Steeltoe.Messaging
  name: IMessageHeaders
  nameWithType: IMessageHeaders
  fullName: Steeltoe.Messaging.IMessageHeaders
