### YamlMime:ManagedReference
items:
- uid: Steeltoe.Messaging.Handler.Invocation.IHandlerMethodArgumentResolver
  commentId: T:Steeltoe.Messaging.Handler.Invocation.IHandlerMethodArgumentResolver
  id: IHandlerMethodArgumentResolver
  parent: Steeltoe.Messaging.Handler.Invocation
  children:
  - Steeltoe.Messaging.Handler.Invocation.IHandlerMethodArgumentResolver.ResolveArgument(System.Reflection.ParameterInfo,Steeltoe.Messaging.IMessage)
  - Steeltoe.Messaging.Handler.Invocation.IHandlerMethodArgumentResolver.SupportsParameter(System.Reflection.ParameterInfo)
  langs:
  - csharp
  - vb
  name: IHandlerMethodArgumentResolver
  nameWithType: IHandlerMethodArgumentResolver
  fullName: Steeltoe.Messaging.Handler.Invocation.IHandlerMethodArgumentResolver
  type: Interface
  source:
    remote:
      path: src/Messaging/src/Abstractions/Handler/Invocation/IHandlerMethodArgumentResolver.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: IHandlerMethodArgumentResolver
    path: ../Steeltoe/src/Messaging/src/Abstractions/Handler/Invocation/IHandlerMethodArgumentResolver.cs
    startLine: 11
  assemblies:
  - Steeltoe.Messaging.Abstractions
  namespace: Steeltoe.Messaging.Handler.Invocation
  summary: "\nStrategy interface for resolving method parameters into argument values in the context of a given request.\n"
  example: []
  syntax:
    content: public interface IHandlerMethodArgumentResolver
    content.vb: Public Interface IHandlerMethodArgumentResolver
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Steeltoe.Messaging.Handler.Invocation.IHandlerMethodArgumentResolver.SupportsParameter(System.Reflection.ParameterInfo)
  commentId: M:Steeltoe.Messaging.Handler.Invocation.IHandlerMethodArgumentResolver.SupportsParameter(System.Reflection.ParameterInfo)
  id: SupportsParameter(System.Reflection.ParameterInfo)
  parent: Steeltoe.Messaging.Handler.Invocation.IHandlerMethodArgumentResolver
  langs:
  - csharp
  - vb
  name: SupportsParameter(ParameterInfo)
  nameWithType: IHandlerMethodArgumentResolver.SupportsParameter(ParameterInfo)
  fullName: Steeltoe.Messaging.Handler.Invocation.IHandlerMethodArgumentResolver.SupportsParameter(System.Reflection.ParameterInfo)
  type: Method
  source:
    remote:
      path: src/Messaging/src/Abstractions/Handler/Invocation/IHandlerMethodArgumentResolver.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: SupportsParameter
    path: ../Steeltoe/src/Messaging/src/Abstractions/Handler/Invocation/IHandlerMethodArgumentResolver.cs
    startLine: 18
  assemblies:
  - Steeltoe.Messaging.Abstractions
  namespace: Steeltoe.Messaging.Handler.Invocation
  summary: "\nDetermine whether the given method parameter is supported by this resolver.\n"
  example: []
  syntax:
    content: bool SupportsParameter(ParameterInfo parameter)
    parameters:
    - id: parameter
      type: System.Reflection.ParameterInfo
      description: the parameter info to consideer
    return:
      type: System.Boolean
      description: true if it is supported
    content.vb: Function SupportsParameter(parameter As ParameterInfo) As Boolean
  overload: Steeltoe.Messaging.Handler.Invocation.IHandlerMethodArgumentResolver.SupportsParameter*
- uid: Steeltoe.Messaging.Handler.Invocation.IHandlerMethodArgumentResolver.ResolveArgument(System.Reflection.ParameterInfo,Steeltoe.Messaging.IMessage)
  commentId: M:Steeltoe.Messaging.Handler.Invocation.IHandlerMethodArgumentResolver.ResolveArgument(System.Reflection.ParameterInfo,Steeltoe.Messaging.IMessage)
  id: ResolveArgument(System.Reflection.ParameterInfo,Steeltoe.Messaging.IMessage)
  parent: Steeltoe.Messaging.Handler.Invocation.IHandlerMethodArgumentResolver
  langs:
  - csharp
  - vb
  name: ResolveArgument(ParameterInfo, IMessage)
  nameWithType: IHandlerMethodArgumentResolver.ResolveArgument(ParameterInfo, IMessage)
  fullName: Steeltoe.Messaging.Handler.Invocation.IHandlerMethodArgumentResolver.ResolveArgument(System.Reflection.ParameterInfo, Steeltoe.Messaging.IMessage)
  type: Method
  source:
    remote:
      path: src/Messaging/src/Abstractions/Handler/Invocation/IHandlerMethodArgumentResolver.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: ResolveArgument
    path: ../Steeltoe/src/Messaging/src/Abstractions/Handler/Invocation/IHandlerMethodArgumentResolver.cs
    startLine: 26
  assemblies:
  - Steeltoe.Messaging.Abstractions
  namespace: Steeltoe.Messaging.Handler.Invocation
  summary: "\nResolves a method parameter into an argument value from a given message.\n"
  example: []
  syntax:
    content: object ResolveArgument(ParameterInfo parameter, IMessage message)
    parameters:
    - id: parameter
      type: System.Reflection.ParameterInfo
      description: the parameter info to consideer
    - id: message
      type: Steeltoe.Messaging.IMessage
      description: the message
    return:
      type: System.Object
      description: the resolved argument value
    content.vb: Function ResolveArgument(parameter As ParameterInfo, message As IMessage) As Object
  overload: Steeltoe.Messaging.Handler.Invocation.IHandlerMethodArgumentResolver.ResolveArgument*
references:
- uid: Steeltoe.Messaging.Handler.Invocation
  commentId: N:Steeltoe.Messaging.Handler.Invocation
  name: Steeltoe.Messaging.Handler.Invocation
  nameWithType: Steeltoe.Messaging.Handler.Invocation
  fullName: Steeltoe.Messaging.Handler.Invocation
- uid: Steeltoe.Messaging.Handler.Invocation.IHandlerMethodArgumentResolver.SupportsParameter*
  commentId: Overload:Steeltoe.Messaging.Handler.Invocation.IHandlerMethodArgumentResolver.SupportsParameter
  name: SupportsParameter
  nameWithType: IHandlerMethodArgumentResolver.SupportsParameter
  fullName: Steeltoe.Messaging.Handler.Invocation.IHandlerMethodArgumentResolver.SupportsParameter
- uid: System.Reflection.ParameterInfo
  commentId: T:System.Reflection.ParameterInfo
  parent: System.Reflection
  isExternal: true
  name: ParameterInfo
  nameWithType: ParameterInfo
  fullName: System.Reflection.ParameterInfo
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Reflection
  commentId: N:System.Reflection
  isExternal: true
  name: System.Reflection
  nameWithType: System.Reflection
  fullName: System.Reflection
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Steeltoe.Messaging.Handler.Invocation.IHandlerMethodArgumentResolver.ResolveArgument*
  commentId: Overload:Steeltoe.Messaging.Handler.Invocation.IHandlerMethodArgumentResolver.ResolveArgument
  name: ResolveArgument
  nameWithType: IHandlerMethodArgumentResolver.ResolveArgument
  fullName: Steeltoe.Messaging.Handler.Invocation.IHandlerMethodArgumentResolver.ResolveArgument
- uid: Steeltoe.Messaging.IMessage
  commentId: T:Steeltoe.Messaging.IMessage
  parent: Steeltoe.Messaging
  name: IMessage
  nameWithType: IMessage
  fullName: Steeltoe.Messaging.IMessage
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Steeltoe.Messaging
  commentId: N:Steeltoe.Messaging
  name: Steeltoe.Messaging
  nameWithType: Steeltoe.Messaging
  fullName: Steeltoe.Messaging
