### YamlMime:ManagedReference
items:
- uid: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.AtomicThreadState
  commentId: T:Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.AtomicThreadState
  id: AbstractCommand`1.AtomicThreadState
  parent: Steeltoe.CircuitBreaker.Hystrix
  children:
  - Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.AtomicThreadState.#ctor(Steeltoe.CircuitBreaker.Hystrix.AbstractCommand{`0}.ThreadState)
  - Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.AtomicThreadState.CompareAndSet(Steeltoe.CircuitBreaker.Hystrix.AbstractCommand{`0}.ThreadState,Steeltoe.CircuitBreaker.Hystrix.AbstractCommand{`0}.ThreadState)
  - Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.AtomicThreadState.Value
  langs:
  - csharp
  - vb
  name: AbstractCommand<TResult>.AtomicThreadState
  nameWithType: AbstractCommand<TResult>.AtomicThreadState
  fullName: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand<TResult>.AtomicThreadState
  type: Class
  source:
    remote:
      path: src/CircuitBreaker/src/HystrixBase/AbstractCommand.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: AtomicThreadState
    path: ../Steeltoe/src/CircuitBreaker/src/HystrixBase/AbstractCommand.cs
    startLine: 72
  assemblies:
  - Steeltoe.CircuitBreaker.HystrixBase
  namespace: Steeltoe.CircuitBreaker.Hystrix
  syntax:
    content: 'protected class AtomicThreadState : AtomicInteger'
    content.vb: >-
      Protected Class AtomicThreadState

          Inherits AtomicInteger
  inheritance:
  - System.Object
  nameWithType.vb: AbstractCommand(Of TResult).AtomicThreadState
  modifiers.csharp:
  - protected
  - class
  modifiers.vb:
  - Protected
  - Class
  fullName.vb: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand(Of TResult).AtomicThreadState
  name.vb: AbstractCommand(Of TResult).AtomicThreadState
- uid: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.AtomicThreadState.#ctor(Steeltoe.CircuitBreaker.Hystrix.AbstractCommand{`0}.ThreadState)
  commentId: M:Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.AtomicThreadState.#ctor(Steeltoe.CircuitBreaker.Hystrix.AbstractCommand{`0}.ThreadState)
  id: '#ctor(Steeltoe.CircuitBreaker.Hystrix.AbstractCommand{`0}.ThreadState)'
  parent: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.AtomicThreadState
  langs:
  - csharp
  - vb
  name: AtomicThreadState(AbstractCommand<TResult>.ThreadState)
  nameWithType: AbstractCommand<TResult>.AtomicThreadState.AtomicThreadState(AbstractCommand<TResult>.ThreadState)
  fullName: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand<TResult>.AtomicThreadState.AtomicThreadState(Steeltoe.CircuitBreaker.Hystrix.AbstractCommand<TResult>.ThreadState)
  type: Constructor
  source:
    remote:
      path: src/CircuitBreaker/src/HystrixBase/AbstractCommand.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: .ctor
    path: ../Steeltoe/src/CircuitBreaker/src/HystrixBase/AbstractCommand.cs
    startLine: 74
  assemblies:
  - Steeltoe.CircuitBreaker.HystrixBase
  namespace: Steeltoe.CircuitBreaker.Hystrix
  syntax:
    content: public AtomicThreadState(AbstractCommand<TResult>.ThreadState state)
    parameters:
    - id: state
      type: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.ThreadState
    content.vb: Public Sub New(state As AbstractCommand(Of TResult).ThreadState)
  overload: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.AtomicThreadState.#ctor*
  nameWithType.vb: AbstractCommand(Of TResult).AtomicThreadState.AtomicThreadState(AbstractCommand(Of TResult).ThreadState)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand(Of TResult).AtomicThreadState.AtomicThreadState(Steeltoe.CircuitBreaker.Hystrix.AbstractCommand(Of TResult).ThreadState)
  name.vb: AtomicThreadState(AbstractCommand(Of TResult).ThreadState)
- uid: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.AtomicThreadState.Value
  commentId: P:Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.AtomicThreadState.Value
  id: Value
  parent: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.AtomicThreadState
  langs:
  - csharp
  - vb
  name: Value
  nameWithType: AbstractCommand<TResult>.AtomicThreadState.Value
  fullName: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand<TResult>.AtomicThreadState.Value
  type: Property
  source:
    remote:
      path: src/CircuitBreaker/src/HystrixBase/AbstractCommand.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Value
    path: ../Steeltoe/src/CircuitBreaker/src/HystrixBase/AbstractCommand.cs
    startLine: 79
  assemblies:
  - Steeltoe.CircuitBreaker.HystrixBase
  namespace: Steeltoe.CircuitBreaker.Hystrix
  syntax:
    content: public AbstractCommand<TResult>.ThreadState Value { get; set; }
    parameters: []
    return:
      type: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.ThreadState
    content.vb: Public Property Value As AbstractCommand(Of TResult).ThreadState
  overload: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.AtomicThreadState.Value*
  nameWithType.vb: AbstractCommand(Of TResult).AtomicThreadState.Value
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  fullName.vb: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand(Of TResult).AtomicThreadState.Value
- uid: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.AtomicThreadState.CompareAndSet(Steeltoe.CircuitBreaker.Hystrix.AbstractCommand{`0}.ThreadState,Steeltoe.CircuitBreaker.Hystrix.AbstractCommand{`0}.ThreadState)
  commentId: M:Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.AtomicThreadState.CompareAndSet(Steeltoe.CircuitBreaker.Hystrix.AbstractCommand{`0}.ThreadState,Steeltoe.CircuitBreaker.Hystrix.AbstractCommand{`0}.ThreadState)
  id: CompareAndSet(Steeltoe.CircuitBreaker.Hystrix.AbstractCommand{`0}.ThreadState,Steeltoe.CircuitBreaker.Hystrix.AbstractCommand{`0}.ThreadState)
  parent: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.AtomicThreadState
  langs:
  - csharp
  - vb
  name: CompareAndSet(AbstractCommand<TResult>.ThreadState, AbstractCommand<TResult>.ThreadState)
  nameWithType: AbstractCommand<TResult>.AtomicThreadState.CompareAndSet(AbstractCommand<TResult>.ThreadState, AbstractCommand<TResult>.ThreadState)
  fullName: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand<TResult>.AtomicThreadState.CompareAndSet(Steeltoe.CircuitBreaker.Hystrix.AbstractCommand<TResult>.ThreadState, Steeltoe.CircuitBreaker.Hystrix.AbstractCommand<TResult>.ThreadState)
  type: Method
  source:
    remote:
      path: src/CircuitBreaker/src/HystrixBase/AbstractCommand.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: CompareAndSet
    path: ../Steeltoe/src/CircuitBreaker/src/HystrixBase/AbstractCommand.cs
    startLine: 86
  assemblies:
  - Steeltoe.CircuitBreaker.HystrixBase
  namespace: Steeltoe.CircuitBreaker.Hystrix
  syntax:
    content: public bool CompareAndSet(AbstractCommand<TResult>.ThreadState expected, AbstractCommand<TResult>.ThreadState update)
    parameters:
    - id: expected
      type: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.ThreadState
    - id: update
      type: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.ThreadState
    return:
      type: System.Boolean
    content.vb: Public Function CompareAndSet(expected As AbstractCommand(Of TResult).ThreadState, update As AbstractCommand(Of TResult).ThreadState) As Boolean
  overload: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.AtomicThreadState.CompareAndSet*
  nameWithType.vb: AbstractCommand(Of TResult).AtomicThreadState.CompareAndSet(AbstractCommand(Of TResult).ThreadState, AbstractCommand(Of TResult).ThreadState)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand(Of TResult).AtomicThreadState.CompareAndSet(Steeltoe.CircuitBreaker.Hystrix.AbstractCommand(Of TResult).ThreadState, Steeltoe.CircuitBreaker.Hystrix.AbstractCommand(Of TResult).ThreadState)
  name.vb: CompareAndSet(AbstractCommand(Of TResult).ThreadState, AbstractCommand(Of TResult).ThreadState)
references:
- uid: Steeltoe.CircuitBreaker.Hystrix
  commentId: N:Steeltoe.CircuitBreaker.Hystrix
  name: Steeltoe.CircuitBreaker.Hystrix
  nameWithType: Steeltoe.CircuitBreaker.Hystrix
  fullName: Steeltoe.CircuitBreaker.Hystrix
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.AtomicThreadState.#ctor*
  commentId: Overload:Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.AtomicThreadState.#ctor
  name: AtomicThreadState
  nameWithType: AbstractCommand<TResult>.AtomicThreadState.AtomicThreadState
  fullName: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand<TResult>.AtomicThreadState.AtomicThreadState
  nameWithType.vb: AbstractCommand(Of TResult).AtomicThreadState.AtomicThreadState
  fullName.vb: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand(Of TResult).AtomicThreadState.AtomicThreadState
- uid: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.ThreadState
  commentId: T:Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.ThreadState
  parent: Steeltoe.CircuitBreaker.Hystrix
  name: AbstractCommand.ThreadState<>
  nameWithType: AbstractCommand.ThreadState<>
  fullName: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand.ThreadState<>
  nameWithType.vb: AbstractCommand.ThreadState(Of )
  fullName.vb: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand.ThreadState(Of )
  name.vb: AbstractCommand.ThreadState(Of )
  spec.csharp:
  - uid: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.ThreadState
    name: AbstractCommand.ThreadState
    nameWithType: AbstractCommand.ThreadState
    fullName: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand.ThreadState
  - name: <
    nameWithType: <
    fullName: <
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.ThreadState
    name: AbstractCommand.ThreadState
    nameWithType: AbstractCommand.ThreadState
    fullName: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand.ThreadState
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.AtomicThreadState.Value*
  commentId: Overload:Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.AtomicThreadState.Value
  name: Value
  nameWithType: AbstractCommand<TResult>.AtomicThreadState.Value
  fullName: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand<TResult>.AtomicThreadState.Value
  nameWithType.vb: AbstractCommand(Of TResult).AtomicThreadState.Value
  fullName.vb: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand(Of TResult).AtomicThreadState.Value
- uid: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.AtomicThreadState.CompareAndSet*
  commentId: Overload:Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.AtomicThreadState.CompareAndSet
  name: CompareAndSet
  nameWithType: AbstractCommand<TResult>.AtomicThreadState.CompareAndSet
  fullName: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand<TResult>.AtomicThreadState.CompareAndSet
  nameWithType.vb: AbstractCommand(Of TResult).AtomicThreadState.CompareAndSet
  fullName.vb: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand(Of TResult).AtomicThreadState.CompareAndSet
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
