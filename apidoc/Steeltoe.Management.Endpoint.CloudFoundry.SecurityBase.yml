### YamlMime:ManagedReference
items:
- uid: Steeltoe.Management.Endpoint.CloudFoundry.SecurityBase
  commentId: T:Steeltoe.Management.Endpoint.CloudFoundry.SecurityBase
  id: SecurityBase
  parent: Steeltoe.Management.Endpoint.CloudFoundry
  children:
  - Steeltoe.Management.Endpoint.CloudFoundry.SecurityBase.#ctor(Steeltoe.Management.Endpoint.CloudFoundry.ICloudFoundryOptions,Steeltoe.Management.IManagementOptions,ILogger,System.Net.Http.HttpClient)
  - Steeltoe.Management.Endpoint.CloudFoundry.SecurityBase.ACCESS_DENIED_MESSAGE
  - Steeltoe.Management.Endpoint.CloudFoundry.SecurityBase.APPLICATION_ID_MISSING_MESSAGE
  - Steeltoe.Management.Endpoint.CloudFoundry.SecurityBase.AUTHORIZATION_HEADER
  - Steeltoe.Management.Endpoint.CloudFoundry.SecurityBase.AUTHORIZATION_HEADER_INVALID
  - Steeltoe.Management.Endpoint.CloudFoundry.SecurityBase.BEARER
  - Steeltoe.Management.Endpoint.CloudFoundry.SecurityBase.CLOUDFOUNDRY_API_MISSING_MESSAGE
  - Steeltoe.Management.Endpoint.CloudFoundry.SecurityBase.CLOUDFOUNDRY_NOT_REACHABLE_MESSAGE
  - Steeltoe.Management.Endpoint.CloudFoundry.SecurityBase.DEFAULT_GETPERMISSIONS_TIMEOUT
  - Steeltoe.Management.Endpoint.CloudFoundry.SecurityBase.ENDPOINT_NOT_CONFIGURED_MESSAGE
  - Steeltoe.Management.Endpoint.CloudFoundry.SecurityBase.GetPermissions(System.Net.Http.HttpResponseMessage)
  - Steeltoe.Management.Endpoint.CloudFoundry.SecurityBase.GetPermissionsAsync(System.String)
  - Steeltoe.Management.Endpoint.CloudFoundry.SecurityBase.IsCloudFoundryRequest(System.String)
  - Steeltoe.Management.Endpoint.CloudFoundry.SecurityBase.READ_SENSITIVE_DATA
  - Steeltoe.Management.Endpoint.CloudFoundry.SecurityBase.Serialize(Steeltoe.Management.Endpoint.CloudFoundry.SecurityResult)
  langs:
  - csharp
  - vb
  name: SecurityBase
  nameWithType: SecurityBase
  fullName: Steeltoe.Management.Endpoint.CloudFoundry.SecurityBase
  type: Class
  source:
    remote:
      path: src/Management/src/EndpointBase/CloudFoundry/SecurityBase.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: SecurityBase
    path: ../Steeltoe/src/Management/src/EndpointBase/CloudFoundry/SecurityBase.cs
    startLine: 17
  assemblies:
  - Steeltoe.Management.EndpointBase
  namespace: Steeltoe.Management.Endpoint.CloudFoundry
  syntax:
    content: public class SecurityBase
    content.vb: Public Class SecurityBase
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Steeltoe.Management.Endpoint.CloudFoundry.SecurityBase.DEFAULT_GETPERMISSIONS_TIMEOUT
  commentId: F:Steeltoe.Management.Endpoint.CloudFoundry.SecurityBase.DEFAULT_GETPERMISSIONS_TIMEOUT
  id: DEFAULT_GETPERMISSIONS_TIMEOUT
  parent: Steeltoe.Management.Endpoint.CloudFoundry.SecurityBase
  langs:
  - csharp
  - vb
  name: DEFAULT_GETPERMISSIONS_TIMEOUT
  nameWithType: SecurityBase.DEFAULT_GETPERMISSIONS_TIMEOUT
  fullName: Steeltoe.Management.Endpoint.CloudFoundry.SecurityBase.DEFAULT_GETPERMISSIONS_TIMEOUT
  type: Field
  source:
    remote:
      path: src/Management/src/EndpointBase/CloudFoundry/SecurityBase.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: DEFAULT_GETPERMISSIONS_TIMEOUT
    path: ../Steeltoe/src/Management/src/EndpointBase/CloudFoundry/SecurityBase.cs
    startLine: 19
  assemblies:
  - Steeltoe.Management.EndpointBase
  namespace: Steeltoe.Management.Endpoint.CloudFoundry
  syntax:
    content: public readonly int DEFAULT_GETPERMISSIONS_TIMEOUT
    return:
      type: System.Int32
    content.vb: Public ReadOnly DEFAULT_GETPERMISSIONS_TIMEOUT As Integer
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Steeltoe.Management.Endpoint.CloudFoundry.SecurityBase.APPLICATION_ID_MISSING_MESSAGE
  commentId: F:Steeltoe.Management.Endpoint.CloudFoundry.SecurityBase.APPLICATION_ID_MISSING_MESSAGE
  id: APPLICATION_ID_MISSING_MESSAGE
  parent: Steeltoe.Management.Endpoint.CloudFoundry.SecurityBase
  langs:
  - csharp
  - vb
  name: APPLICATION_ID_MISSING_MESSAGE
  nameWithType: SecurityBase.APPLICATION_ID_MISSING_MESSAGE
  fullName: Steeltoe.Management.Endpoint.CloudFoundry.SecurityBase.APPLICATION_ID_MISSING_MESSAGE
  type: Field
  source:
    remote:
      path: src/Management/src/EndpointBase/CloudFoundry/SecurityBase.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: APPLICATION_ID_MISSING_MESSAGE
    path: ../Steeltoe/src/Management/src/EndpointBase/CloudFoundry/SecurityBase.cs
    startLine: 20
  assemblies:
  - Steeltoe.Management.EndpointBase
  namespace: Steeltoe.Management.Endpoint.CloudFoundry
  syntax:
    content: public readonly string APPLICATION_ID_MISSING_MESSAGE
    return:
      type: System.String
    content.vb: Public ReadOnly APPLICATION_ID_MISSING_MESSAGE As String
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Steeltoe.Management.Endpoint.CloudFoundry.SecurityBase.ENDPOINT_NOT_CONFIGURED_MESSAGE
  commentId: F:Steeltoe.Management.Endpoint.CloudFoundry.SecurityBase.ENDPOINT_NOT_CONFIGURED_MESSAGE
  id: ENDPOINT_NOT_CONFIGURED_MESSAGE
  parent: Steeltoe.Management.Endpoint.CloudFoundry.SecurityBase
  langs:
  - csharp
  - vb
  name: ENDPOINT_NOT_CONFIGURED_MESSAGE
  nameWithType: SecurityBase.ENDPOINT_NOT_CONFIGURED_MESSAGE
  fullName: Steeltoe.Management.Endpoint.CloudFoundry.SecurityBase.ENDPOINT_NOT_CONFIGURED_MESSAGE
  type: Field
  source:
    remote:
      path: src/Management/src/EndpointBase/CloudFoundry/SecurityBase.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: ENDPOINT_NOT_CONFIGURED_MESSAGE
    path: ../Steeltoe/src/Management/src/EndpointBase/CloudFoundry/SecurityBase.cs
    startLine: 21
  assemblies:
  - Steeltoe.Management.EndpointBase
  namespace: Steeltoe.Management.Endpoint.CloudFoundry
  syntax:
    content: public readonly string ENDPOINT_NOT_CONFIGURED_MESSAGE
    return:
      type: System.String
    content.vb: Public ReadOnly ENDPOINT_NOT_CONFIGURED_MESSAGE As String
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Steeltoe.Management.Endpoint.CloudFoundry.SecurityBase.AUTHORIZATION_HEADER_INVALID
  commentId: F:Steeltoe.Management.Endpoint.CloudFoundry.SecurityBase.AUTHORIZATION_HEADER_INVALID
  id: AUTHORIZATION_HEADER_INVALID
  parent: Steeltoe.Management.Endpoint.CloudFoundry.SecurityBase
  langs:
  - csharp
  - vb
  name: AUTHORIZATION_HEADER_INVALID
  nameWithType: SecurityBase.AUTHORIZATION_HEADER_INVALID
  fullName: Steeltoe.Management.Endpoint.CloudFoundry.SecurityBase.AUTHORIZATION_HEADER_INVALID
  type: Field
  source:
    remote:
      path: src/Management/src/EndpointBase/CloudFoundry/SecurityBase.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: AUTHORIZATION_HEADER_INVALID
    path: ../Steeltoe/src/Management/src/EndpointBase/CloudFoundry/SecurityBase.cs
    startLine: 22
  assemblies:
  - Steeltoe.Management.EndpointBase
  namespace: Steeltoe.Management.Endpoint.CloudFoundry
  syntax:
    content: public readonly string AUTHORIZATION_HEADER_INVALID
    return:
      type: System.String
    content.vb: Public ReadOnly AUTHORIZATION_HEADER_INVALID As String
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Steeltoe.Management.Endpoint.CloudFoundry.SecurityBase.CLOUDFOUNDRY_API_MISSING_MESSAGE
  commentId: F:Steeltoe.Management.Endpoint.CloudFoundry.SecurityBase.CLOUDFOUNDRY_API_MISSING_MESSAGE
  id: CLOUDFOUNDRY_API_MISSING_MESSAGE
  parent: Steeltoe.Management.Endpoint.CloudFoundry.SecurityBase
  langs:
  - csharp
  - vb
  name: CLOUDFOUNDRY_API_MISSING_MESSAGE
  nameWithType: SecurityBase.CLOUDFOUNDRY_API_MISSING_MESSAGE
  fullName: Steeltoe.Management.Endpoint.CloudFoundry.SecurityBase.CLOUDFOUNDRY_API_MISSING_MESSAGE
  type: Field
  source:
    remote:
      path: src/Management/src/EndpointBase/CloudFoundry/SecurityBase.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: CLOUDFOUNDRY_API_MISSING_MESSAGE
    path: ../Steeltoe/src/Management/src/EndpointBase/CloudFoundry/SecurityBase.cs
    startLine: 23
  assemblies:
  - Steeltoe.Management.EndpointBase
  namespace: Steeltoe.Management.Endpoint.CloudFoundry
  syntax:
    content: public readonly string CLOUDFOUNDRY_API_MISSING_MESSAGE
    return:
      type: System.String
    content.vb: Public ReadOnly CLOUDFOUNDRY_API_MISSING_MESSAGE As String
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Steeltoe.Management.Endpoint.CloudFoundry.SecurityBase.CLOUDFOUNDRY_NOT_REACHABLE_MESSAGE
  commentId: F:Steeltoe.Management.Endpoint.CloudFoundry.SecurityBase.CLOUDFOUNDRY_NOT_REACHABLE_MESSAGE
  id: CLOUDFOUNDRY_NOT_REACHABLE_MESSAGE
  parent: Steeltoe.Management.Endpoint.CloudFoundry.SecurityBase
  langs:
  - csharp
  - vb
  name: CLOUDFOUNDRY_NOT_REACHABLE_MESSAGE
  nameWithType: SecurityBase.CLOUDFOUNDRY_NOT_REACHABLE_MESSAGE
  fullName: Steeltoe.Management.Endpoint.CloudFoundry.SecurityBase.CLOUDFOUNDRY_NOT_REACHABLE_MESSAGE
  type: Field
  source:
    remote:
      path: src/Management/src/EndpointBase/CloudFoundry/SecurityBase.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: CLOUDFOUNDRY_NOT_REACHABLE_MESSAGE
    path: ../Steeltoe/src/Management/src/EndpointBase/CloudFoundry/SecurityBase.cs
    startLine: 24
  assemblies:
  - Steeltoe.Management.EndpointBase
  namespace: Steeltoe.Management.Endpoint.CloudFoundry
  syntax:
    content: public readonly string CLOUDFOUNDRY_NOT_REACHABLE_MESSAGE
    return:
      type: System.String
    content.vb: Public ReadOnly CLOUDFOUNDRY_NOT_REACHABLE_MESSAGE As String
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Steeltoe.Management.Endpoint.CloudFoundry.SecurityBase.ACCESS_DENIED_MESSAGE
  commentId: F:Steeltoe.Management.Endpoint.CloudFoundry.SecurityBase.ACCESS_DENIED_MESSAGE
  id: ACCESS_DENIED_MESSAGE
  parent: Steeltoe.Management.Endpoint.CloudFoundry.SecurityBase
  langs:
  - csharp
  - vb
  name: ACCESS_DENIED_MESSAGE
  nameWithType: SecurityBase.ACCESS_DENIED_MESSAGE
  fullName: Steeltoe.Management.Endpoint.CloudFoundry.SecurityBase.ACCESS_DENIED_MESSAGE
  type: Field
  source:
    remote:
      path: src/Management/src/EndpointBase/CloudFoundry/SecurityBase.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: ACCESS_DENIED_MESSAGE
    path: ../Steeltoe/src/Management/src/EndpointBase/CloudFoundry/SecurityBase.cs
    startLine: 25
  assemblies:
  - Steeltoe.Management.EndpointBase
  namespace: Steeltoe.Management.Endpoint.CloudFoundry
  syntax:
    content: public readonly string ACCESS_DENIED_MESSAGE
    return:
      type: System.String
    content.vb: Public ReadOnly ACCESS_DENIED_MESSAGE As String
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Steeltoe.Management.Endpoint.CloudFoundry.SecurityBase.AUTHORIZATION_HEADER
  commentId: F:Steeltoe.Management.Endpoint.CloudFoundry.SecurityBase.AUTHORIZATION_HEADER
  id: AUTHORIZATION_HEADER
  parent: Steeltoe.Management.Endpoint.CloudFoundry.SecurityBase
  langs:
  - csharp
  - vb
  name: AUTHORIZATION_HEADER
  nameWithType: SecurityBase.AUTHORIZATION_HEADER
  fullName: Steeltoe.Management.Endpoint.CloudFoundry.SecurityBase.AUTHORIZATION_HEADER
  type: Field
  source:
    remote:
      path: src/Management/src/EndpointBase/CloudFoundry/SecurityBase.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: AUTHORIZATION_HEADER
    path: ../Steeltoe/src/Management/src/EndpointBase/CloudFoundry/SecurityBase.cs
    startLine: 26
  assemblies:
  - Steeltoe.Management.EndpointBase
  namespace: Steeltoe.Management.Endpoint.CloudFoundry
  syntax:
    content: public readonly string AUTHORIZATION_HEADER
    return:
      type: System.String
    content.vb: Public ReadOnly AUTHORIZATION_HEADER As String
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Steeltoe.Management.Endpoint.CloudFoundry.SecurityBase.BEARER
  commentId: F:Steeltoe.Management.Endpoint.CloudFoundry.SecurityBase.BEARER
  id: BEARER
  parent: Steeltoe.Management.Endpoint.CloudFoundry.SecurityBase
  langs:
  - csharp
  - vb
  name: BEARER
  nameWithType: SecurityBase.BEARER
  fullName: Steeltoe.Management.Endpoint.CloudFoundry.SecurityBase.BEARER
  type: Field
  source:
    remote:
      path: src/Management/src/EndpointBase/CloudFoundry/SecurityBase.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: BEARER
    path: ../Steeltoe/src/Management/src/EndpointBase/CloudFoundry/SecurityBase.cs
    startLine: 27
  assemblies:
  - Steeltoe.Management.EndpointBase
  namespace: Steeltoe.Management.Endpoint.CloudFoundry
  syntax:
    content: public readonly string BEARER
    return:
      type: System.String
    content.vb: Public ReadOnly BEARER As String
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Steeltoe.Management.Endpoint.CloudFoundry.SecurityBase.READ_SENSITIVE_DATA
  commentId: F:Steeltoe.Management.Endpoint.CloudFoundry.SecurityBase.READ_SENSITIVE_DATA
  id: READ_SENSITIVE_DATA
  parent: Steeltoe.Management.Endpoint.CloudFoundry.SecurityBase
  langs:
  - csharp
  - vb
  name: READ_SENSITIVE_DATA
  nameWithType: SecurityBase.READ_SENSITIVE_DATA
  fullName: Steeltoe.Management.Endpoint.CloudFoundry.SecurityBase.READ_SENSITIVE_DATA
  type: Field
  source:
    remote:
      path: src/Management/src/EndpointBase/CloudFoundry/SecurityBase.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: READ_SENSITIVE_DATA
    path: ../Steeltoe/src/Management/src/EndpointBase/CloudFoundry/SecurityBase.cs
    startLine: 28
  assemblies:
  - Steeltoe.Management.EndpointBase
  namespace: Steeltoe.Management.Endpoint.CloudFoundry
  syntax:
    content: public readonly string READ_SENSITIVE_DATA
    return:
      type: System.String
    content.vb: Public ReadOnly READ_SENSITIVE_DATA As String
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Steeltoe.Management.Endpoint.CloudFoundry.SecurityBase.#ctor(Steeltoe.Management.Endpoint.CloudFoundry.ICloudFoundryOptions,Steeltoe.Management.IManagementOptions,ILogger,System.Net.Http.HttpClient)
  commentId: M:Steeltoe.Management.Endpoint.CloudFoundry.SecurityBase.#ctor(Steeltoe.Management.Endpoint.CloudFoundry.ICloudFoundryOptions,Steeltoe.Management.IManagementOptions,ILogger,System.Net.Http.HttpClient)
  id: '#ctor(Steeltoe.Management.Endpoint.CloudFoundry.ICloudFoundryOptions,Steeltoe.Management.IManagementOptions,ILogger,System.Net.Http.HttpClient)'
  parent: Steeltoe.Management.Endpoint.CloudFoundry.SecurityBase
  langs:
  - csharp
  - vb
  name: SecurityBase(ICloudFoundryOptions, IManagementOptions, ILogger, HttpClient)
  nameWithType: SecurityBase.SecurityBase(ICloudFoundryOptions, IManagementOptions, ILogger, HttpClient)
  fullName: Steeltoe.Management.Endpoint.CloudFoundry.SecurityBase.SecurityBase(Steeltoe.Management.Endpoint.CloudFoundry.ICloudFoundryOptions, Steeltoe.Management.IManagementOptions, ILogger, System.Net.Http.HttpClient)
  type: Constructor
  source:
    remote:
      path: src/Management/src/EndpointBase/CloudFoundry/SecurityBase.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: .ctor
    path: ../Steeltoe/src/Management/src/EndpointBase/CloudFoundry/SecurityBase.cs
    startLine: 34
  assemblies:
  - Steeltoe.Management.EndpointBase
  namespace: Steeltoe.Management.Endpoint.CloudFoundry
  syntax:
    content: public SecurityBase(ICloudFoundryOptions options, IManagementOptions mgmtOptions, ILogger logger = null, HttpClient httpClient = null)
    parameters:
    - id: options
      type: Steeltoe.Management.Endpoint.CloudFoundry.ICloudFoundryOptions
    - id: mgmtOptions
      type: Steeltoe.Management.IManagementOptions
    - id: logger
      type: ILogger
    - id: httpClient
      type: System.Net.Http.HttpClient
    content.vb: Public Sub New(options As ICloudFoundryOptions, mgmtOptions As IManagementOptions, logger As ILogger = Nothing, httpClient As HttpClient = Nothing)
  overload: Steeltoe.Management.Endpoint.CloudFoundry.SecurityBase.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Steeltoe.Management.Endpoint.CloudFoundry.SecurityBase.IsCloudFoundryRequest(System.String)
  commentId: M:Steeltoe.Management.Endpoint.CloudFoundry.SecurityBase.IsCloudFoundryRequest(System.String)
  id: IsCloudFoundryRequest(System.String)
  parent: Steeltoe.Management.Endpoint.CloudFoundry.SecurityBase
  langs:
  - csharp
  - vb
  name: IsCloudFoundryRequest(String)
  nameWithType: SecurityBase.IsCloudFoundryRequest(String)
  fullName: Steeltoe.Management.Endpoint.CloudFoundry.SecurityBase.IsCloudFoundryRequest(System.String)
  type: Method
  source:
    remote:
      path: src/Management/src/EndpointBase/CloudFoundry/SecurityBase.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: IsCloudFoundryRequest
    path: ../Steeltoe/src/Management/src/EndpointBase/CloudFoundry/SecurityBase.cs
    startLine: 42
  assemblies:
  - Steeltoe.Management.EndpointBase
  namespace: Steeltoe.Management.Endpoint.CloudFoundry
  syntax:
    content: public bool IsCloudFoundryRequest(string requestPath)
    parameters:
    - id: requestPath
      type: System.String
    return:
      type: System.Boolean
    content.vb: Public Function IsCloudFoundryRequest(requestPath As String) As Boolean
  overload: Steeltoe.Management.Endpoint.CloudFoundry.SecurityBase.IsCloudFoundryRequest*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Steeltoe.Management.Endpoint.CloudFoundry.SecurityBase.Serialize(Steeltoe.Management.Endpoint.CloudFoundry.SecurityResult)
  commentId: M:Steeltoe.Management.Endpoint.CloudFoundry.SecurityBase.Serialize(Steeltoe.Management.Endpoint.CloudFoundry.SecurityResult)
  id: Serialize(Steeltoe.Management.Endpoint.CloudFoundry.SecurityResult)
  parent: Steeltoe.Management.Endpoint.CloudFoundry.SecurityBase
  langs:
  - csharp
  - vb
  name: Serialize(SecurityResult)
  nameWithType: SecurityBase.Serialize(SecurityResult)
  fullName: Steeltoe.Management.Endpoint.CloudFoundry.SecurityBase.Serialize(Steeltoe.Management.Endpoint.CloudFoundry.SecurityResult)
  type: Method
  source:
    remote:
      path: src/Management/src/EndpointBase/CloudFoundry/SecurityBase.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Serialize
    path: ../Steeltoe/src/Management/src/EndpointBase/CloudFoundry/SecurityBase.cs
    startLine: 48
  assemblies:
  - Steeltoe.Management.EndpointBase
  namespace: Steeltoe.Management.Endpoint.CloudFoundry
  syntax:
    content: public string Serialize(SecurityResult error)
    parameters:
    - id: error
      type: Steeltoe.Management.Endpoint.CloudFoundry.SecurityResult
    return:
      type: System.String
    content.vb: Public Function Serialize(error As SecurityResult) As String
  overload: Steeltoe.Management.Endpoint.CloudFoundry.SecurityBase.Serialize*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Steeltoe.Management.Endpoint.CloudFoundry.SecurityBase.GetPermissionsAsync(System.String)
  commentId: M:Steeltoe.Management.Endpoint.CloudFoundry.SecurityBase.GetPermissionsAsync(System.String)
  id: GetPermissionsAsync(System.String)
  parent: Steeltoe.Management.Endpoint.CloudFoundry.SecurityBase
  langs:
  - csharp
  - vb
  name: GetPermissionsAsync(String)
  nameWithType: SecurityBase.GetPermissionsAsync(String)
  fullName: Steeltoe.Management.Endpoint.CloudFoundry.SecurityBase.GetPermissionsAsync(System.String)
  type: Method
  source:
    remote:
      path: src/Management/src/EndpointBase/CloudFoundry/SecurityBase.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: GetPermissionsAsync
    path: ../Steeltoe/src/Management/src/EndpointBase/CloudFoundry/SecurityBase.cs
    startLine: 62
  assemblies:
  - Steeltoe.Management.EndpointBase
  namespace: Steeltoe.Management.Endpoint.CloudFoundry
  syntax:
    content: public Task<SecurityResult> GetPermissionsAsync(string token)
    parameters:
    - id: token
      type: System.String
    return:
      type: System.Threading.Tasks.Task{Steeltoe.Management.Endpoint.CloudFoundry.SecurityResult}
    content.vb: Public Function GetPermissionsAsync(token As String) As Task(Of SecurityResult)
  overload: Steeltoe.Management.Endpoint.CloudFoundry.SecurityBase.GetPermissionsAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Steeltoe.Management.Endpoint.CloudFoundry.SecurityBase.GetPermissions(System.Net.Http.HttpResponseMessage)
  commentId: M:Steeltoe.Management.Endpoint.CloudFoundry.SecurityBase.GetPermissions(System.Net.Http.HttpResponseMessage)
  id: GetPermissions(System.Net.Http.HttpResponseMessage)
  parent: Steeltoe.Management.Endpoint.CloudFoundry.SecurityBase
  langs:
  - csharp
  - vb
  name: GetPermissions(HttpResponseMessage)
  nameWithType: SecurityBase.GetPermissions(HttpResponseMessage)
  fullName: Steeltoe.Management.Endpoint.CloudFoundry.SecurityBase.GetPermissions(System.Net.Http.HttpResponseMessage)
  type: Method
  source:
    remote:
      path: src/Management/src/EndpointBase/CloudFoundry/SecurityBase.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: GetPermissions
    path: ../Steeltoe/src/Management/src/EndpointBase/CloudFoundry/SecurityBase.cs
    startLine: 109
  assemblies:
  - Steeltoe.Management.EndpointBase
  namespace: Steeltoe.Management.Endpoint.CloudFoundry
  syntax:
    content: public Task<Permissions> GetPermissions(HttpResponseMessage response)
    parameters:
    - id: response
      type: System.Net.Http.HttpResponseMessage
    return:
      type: System.Threading.Tasks.Task{Steeltoe.Management.Permissions}
    content.vb: Public Function GetPermissions(response As HttpResponseMessage) As Task(Of Permissions)
  overload: Steeltoe.Management.Endpoint.CloudFoundry.SecurityBase.GetPermissions*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Steeltoe.Management.Endpoint.CloudFoundry
  commentId: N:Steeltoe.Management.Endpoint.CloudFoundry
  name: Steeltoe.Management.Endpoint.CloudFoundry
  nameWithType: Steeltoe.Management.Endpoint.CloudFoundry
  fullName: Steeltoe.Management.Endpoint.CloudFoundry
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Steeltoe.Management.Endpoint.CloudFoundry.SecurityBase.#ctor*
  commentId: Overload:Steeltoe.Management.Endpoint.CloudFoundry.SecurityBase.#ctor
  name: SecurityBase
  nameWithType: SecurityBase.SecurityBase
  fullName: Steeltoe.Management.Endpoint.CloudFoundry.SecurityBase.SecurityBase
- uid: Steeltoe.Management.Endpoint.CloudFoundry.ICloudFoundryOptions
  commentId: T:Steeltoe.Management.Endpoint.CloudFoundry.ICloudFoundryOptions
  parent: Steeltoe.Management.Endpoint.CloudFoundry
  name: ICloudFoundryOptions
  nameWithType: ICloudFoundryOptions
  fullName: Steeltoe.Management.Endpoint.CloudFoundry.ICloudFoundryOptions
- uid: Steeltoe.Management.IManagementOptions
  commentId: T:Steeltoe.Management.IManagementOptions
  parent: Steeltoe.Management
  name: IManagementOptions
  nameWithType: IManagementOptions
  fullName: Steeltoe.Management.IManagementOptions
- uid: ILogger
  isExternal: true
  name: ILogger
  nameWithType: ILogger
  fullName: ILogger
- uid: System.Net.Http.HttpClient
  commentId: T:System.Net.Http.HttpClient
  parent: System.Net.Http
  isExternal: true
  name: HttpClient
  nameWithType: HttpClient
  fullName: System.Net.Http.HttpClient
- uid: Steeltoe.Management
  commentId: N:Steeltoe.Management
  name: Steeltoe.Management
  nameWithType: Steeltoe.Management
  fullName: Steeltoe.Management
- uid: System.Net.Http
  commentId: N:System.Net.Http
  isExternal: true
  name: System.Net.Http
  nameWithType: System.Net.Http
  fullName: System.Net.Http
- uid: Steeltoe.Management.Endpoint.CloudFoundry.SecurityBase.IsCloudFoundryRequest*
  commentId: Overload:Steeltoe.Management.Endpoint.CloudFoundry.SecurityBase.IsCloudFoundryRequest
  name: IsCloudFoundryRequest
  nameWithType: SecurityBase.IsCloudFoundryRequest
  fullName: Steeltoe.Management.Endpoint.CloudFoundry.SecurityBase.IsCloudFoundryRequest
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Steeltoe.Management.Endpoint.CloudFoundry.SecurityBase.Serialize*
  commentId: Overload:Steeltoe.Management.Endpoint.CloudFoundry.SecurityBase.Serialize
  name: Serialize
  nameWithType: SecurityBase.Serialize
  fullName: Steeltoe.Management.Endpoint.CloudFoundry.SecurityBase.Serialize
- uid: Steeltoe.Management.Endpoint.CloudFoundry.SecurityResult
  commentId: T:Steeltoe.Management.Endpoint.CloudFoundry.SecurityResult
  parent: Steeltoe.Management.Endpoint.CloudFoundry
  name: SecurityResult
  nameWithType: SecurityResult
  fullName: Steeltoe.Management.Endpoint.CloudFoundry.SecurityResult
- uid: Steeltoe.Management.Endpoint.CloudFoundry.SecurityBase.GetPermissionsAsync*
  commentId: Overload:Steeltoe.Management.Endpoint.CloudFoundry.SecurityBase.GetPermissionsAsync
  name: GetPermissionsAsync
  nameWithType: SecurityBase.GetPermissionsAsync
  fullName: Steeltoe.Management.Endpoint.CloudFoundry.SecurityBase.GetPermissionsAsync
- uid: System.Threading.Tasks.Task{Steeltoe.Management.Endpoint.CloudFoundry.SecurityResult}
  commentId: T:System.Threading.Tasks.Task{Steeltoe.Management.Endpoint.CloudFoundry.SecurityResult}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<SecurityResult>
  nameWithType: Task<SecurityResult>
  fullName: System.Threading.Tasks.Task<Steeltoe.Management.Endpoint.CloudFoundry.SecurityResult>
  nameWithType.vb: Task(Of SecurityResult)
  fullName.vb: System.Threading.Tasks.Task(Of Steeltoe.Management.Endpoint.CloudFoundry.SecurityResult)
  name.vb: Task(Of SecurityResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Steeltoe.Management.Endpoint.CloudFoundry.SecurityResult
    name: SecurityResult
    nameWithType: SecurityResult
    fullName: Steeltoe.Management.Endpoint.CloudFoundry.SecurityResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Steeltoe.Management.Endpoint.CloudFoundry.SecurityResult
    name: SecurityResult
    nameWithType: SecurityResult
    fullName: Steeltoe.Management.Endpoint.CloudFoundry.SecurityResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: Steeltoe.Management.Endpoint.CloudFoundry.SecurityBase.GetPermissions*
  commentId: Overload:Steeltoe.Management.Endpoint.CloudFoundry.SecurityBase.GetPermissions
  name: GetPermissions
  nameWithType: SecurityBase.GetPermissions
  fullName: Steeltoe.Management.Endpoint.CloudFoundry.SecurityBase.GetPermissions
- uid: System.Net.Http.HttpResponseMessage
  commentId: T:System.Net.Http.HttpResponseMessage
  parent: System.Net.Http
  isExternal: true
  name: HttpResponseMessage
  nameWithType: HttpResponseMessage
  fullName: System.Net.Http.HttpResponseMessage
- uid: System.Threading.Tasks.Task{Steeltoe.Management.Permissions}
  commentId: T:System.Threading.Tasks.Task{Steeltoe.Management.Permissions}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<Permissions>
  nameWithType: Task<Permissions>
  fullName: System.Threading.Tasks.Task<Steeltoe.Management.Permissions>
  nameWithType.vb: Task(Of Permissions)
  fullName.vb: System.Threading.Tasks.Task(Of Steeltoe.Management.Permissions)
  name.vb: Task(Of Permissions)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Steeltoe.Management.Permissions
    name: Permissions
    nameWithType: Permissions
    fullName: Steeltoe.Management.Permissions
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Steeltoe.Management.Permissions
    name: Permissions
    nameWithType: Permissions
    fullName: Steeltoe.Management.Permissions
  - name: )
    nameWithType: )
    fullName: )
