### YamlMime:ManagedReference
items:
- uid: Steeltoe.Common.Transaction.IResourceHolder
  commentId: T:Steeltoe.Common.Transaction.IResourceHolder
  id: IResourceHolder
  parent: Steeltoe.Common.Transaction
  children:
  - Steeltoe.Common.Transaction.IResourceHolder.IsVoid
  - Steeltoe.Common.Transaction.IResourceHolder.Reset
  - Steeltoe.Common.Transaction.IResourceHolder.Unbound
  langs:
  - csharp
  - vb
  name: IResourceHolder
  nameWithType: IResourceHolder
  fullName: Steeltoe.Common.Transaction.IResourceHolder
  type: Interface
  source:
    remote:
      path: src/Common/src/Abstractions/Transaction/IResourceHolder.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: IResourceHolder
    path: ../Steeltoe/src/Common/src/Abstractions/Transaction/IResourceHolder.cs
    startLine: 6
  assemblies:
  - Steeltoe.Common.Abstractions
  namespace: Steeltoe.Common.Transaction
  syntax:
    content: public interface IResourceHolder
    content.vb: Public Interface IResourceHolder
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Steeltoe.Common.Transaction.IResourceHolder.Reset
  commentId: M:Steeltoe.Common.Transaction.IResourceHolder.Reset
  id: Reset
  parent: Steeltoe.Common.Transaction.IResourceHolder
  langs:
  - csharp
  - vb
  name: Reset()
  nameWithType: IResourceHolder.Reset()
  fullName: Steeltoe.Common.Transaction.IResourceHolder.Reset()
  type: Method
  source:
    remote:
      path: src/Common/src/Abstractions/Transaction/IResourceHolder.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Reset
    path: ../Steeltoe/src/Common/src/Abstractions/Transaction/IResourceHolder.cs
    startLine: 11
  assemblies:
  - Steeltoe.Common.Abstractions
  namespace: Steeltoe.Common.Transaction
  summary: "\nReset the transactional state\n"
  example: []
  syntax:
    content: void Reset()
    content.vb: Sub Reset
  overload: Steeltoe.Common.Transaction.IResourceHolder.Reset*
- uid: Steeltoe.Common.Transaction.IResourceHolder.Unbound
  commentId: M:Steeltoe.Common.Transaction.IResourceHolder.Unbound
  id: Unbound
  parent: Steeltoe.Common.Transaction.IResourceHolder
  langs:
  - csharp
  - vb
  name: Unbound()
  nameWithType: IResourceHolder.Unbound()
  fullName: Steeltoe.Common.Transaction.IResourceHolder.Unbound()
  type: Method
  source:
    remote:
      path: src/Common/src/Abstractions/Transaction/IResourceHolder.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Unbound
    path: ../Steeltoe/src/Common/src/Abstractions/Transaction/IResourceHolder.cs
    startLine: 16
  assemblies:
  - Steeltoe.Common.Abstractions
  namespace: Steeltoe.Common.Transaction
  summary: "\nNotify holder that it has been unbound from transaction\n"
  example: []
  syntax:
    content: void Unbound()
    content.vb: Sub Unbound
  overload: Steeltoe.Common.Transaction.IResourceHolder.Unbound*
- uid: Steeltoe.Common.Transaction.IResourceHolder.IsVoid
  commentId: P:Steeltoe.Common.Transaction.IResourceHolder.IsVoid
  id: IsVoid
  parent: Steeltoe.Common.Transaction.IResourceHolder
  langs:
  - csharp
  - vb
  name: IsVoid
  nameWithType: IResourceHolder.IsVoid
  fullName: Steeltoe.Common.Transaction.IResourceHolder.IsVoid
  type: Property
  source:
    remote:
      path: src/Common/src/Abstractions/Transaction/IResourceHolder.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: IsVoid
    path: ../Steeltoe/src/Common/src/Abstractions/Transaction/IResourceHolder.cs
    startLine: 21
  assemblies:
  - Steeltoe.Common.Abstractions
  namespace: Steeltoe.Common.Transaction
  summary: "\nGets a value indicating whether this holder is considered void, leftover from previous thread\n"
  example: []
  syntax:
    content: bool IsVoid { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: ReadOnly Property IsVoid As Boolean
  overload: Steeltoe.Common.Transaction.IResourceHolder.IsVoid*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
references:
- uid: Steeltoe.Common.Transaction
  commentId: N:Steeltoe.Common.Transaction
  name: Steeltoe.Common.Transaction
  nameWithType: Steeltoe.Common.Transaction
  fullName: Steeltoe.Common.Transaction
- uid: Steeltoe.Common.Transaction.IResourceHolder.Reset*
  commentId: Overload:Steeltoe.Common.Transaction.IResourceHolder.Reset
  name: Reset
  nameWithType: IResourceHolder.Reset
  fullName: Steeltoe.Common.Transaction.IResourceHolder.Reset
- uid: Steeltoe.Common.Transaction.IResourceHolder.Unbound*
  commentId: Overload:Steeltoe.Common.Transaction.IResourceHolder.Unbound
  name: Unbound
  nameWithType: IResourceHolder.Unbound
  fullName: Steeltoe.Common.Transaction.IResourceHolder.Unbound
- uid: Steeltoe.Common.Transaction.IResourceHolder.IsVoid*
  commentId: Overload:Steeltoe.Common.Transaction.IResourceHolder.IsVoid
  name: IsVoid
  nameWithType: IResourceHolder.IsVoid
  fullName: Steeltoe.Common.Transaction.IResourceHolder.IsVoid
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
