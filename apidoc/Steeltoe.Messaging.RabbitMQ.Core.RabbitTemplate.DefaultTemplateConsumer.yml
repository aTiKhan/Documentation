### YamlMime:ManagedReference
items:
- uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.DefaultTemplateConsumer
  commentId: T:Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.DefaultTemplateConsumer
  id: RabbitTemplate.DefaultTemplateConsumer
  parent: Steeltoe.Messaging.RabbitMQ.Core
  children:
  - Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.DefaultTemplateConsumer.#ctor(RabbitMQ.Client.IModel,System.Threading.CountdownEvent,System.Threading.Tasks.TaskCompletionSource{Steeltoe.Messaging.RabbitMQ.Support.Delivery},System.String,System.Threading.CancellationToken)
  - Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.DefaultTemplateConsumer.HandleBasicCancel(System.String)
  - Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.DefaultTemplateConsumer.HandleBasicConsumeOk(System.String)
  - Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.DefaultTemplateConsumer.HandleBasicDeliver(System.String,System.UInt64,System.Boolean,System.String,System.String,RabbitMQ.Client.IBasicProperties,System.Byte[])
  - Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.DefaultTemplateConsumer.HandleModelShutdown(System.Object,RabbitMQ.Client.ShutdownEventArgs)
  langs:
  - csharp
  - vb
  name: RabbitTemplate.DefaultTemplateConsumer
  nameWithType: RabbitTemplate.DefaultTemplateConsumer
  fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.DefaultTemplateConsumer
  type: Class
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Core/RabbitTemplate.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: DefaultTemplateConsumer
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Core/RabbitTemplate.cs
    startLine: 2688
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Core
  syntax:
    content: 'protected class DefaultTemplateConsumer : RabbitTemplate.AbstractTemplateConsumer, IBasicConsumer'
    content.vb: >-
      Protected Class DefaultTemplateConsumer

          Inherits RabbitTemplate.AbstractTemplateConsumer

          Implements IBasicConsumer
  inheritance:
  - System.Object
  - RabbitMQ.Client.DefaultBasicConsumer
  - Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.AbstractTemplateConsumer
  implements:
  - RabbitMQ.Client.IBasicConsumer
  inheritedMembers:
  - Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.AbstractTemplateConsumer.ToString
  - RabbitMQ.Client.DefaultBasicConsumer.m_eventLock
  - RabbitMQ.Client.DefaultBasicConsumer.m_consumerCancelled
  - RabbitMQ.Client.DefaultBasicConsumer.HandleBasicCancelOk(System.String)
  - RabbitMQ.Client.DefaultBasicConsumer.OnCancel
  - RabbitMQ.Client.DefaultBasicConsumer.ConsumerTag
  - RabbitMQ.Client.DefaultBasicConsumer.IsRunning
  - RabbitMQ.Client.DefaultBasicConsumer.ShutdownReason
  - RabbitMQ.Client.DefaultBasicConsumer.Model
  - RabbitMQ.Client.DefaultBasicConsumer.ConsumerCancelled
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  modifiers.csharp:
  - protected
  - class
  modifiers.vb:
  - Protected
  - Class
- uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.DefaultTemplateConsumer.#ctor(RabbitMQ.Client.IModel,System.Threading.CountdownEvent,System.Threading.Tasks.TaskCompletionSource{Steeltoe.Messaging.RabbitMQ.Support.Delivery},System.String,System.Threading.CancellationToken)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.DefaultTemplateConsumer.#ctor(RabbitMQ.Client.IModel,System.Threading.CountdownEvent,System.Threading.Tasks.TaskCompletionSource{Steeltoe.Messaging.RabbitMQ.Support.Delivery},System.String,System.Threading.CancellationToken)
  id: '#ctor(RabbitMQ.Client.IModel,System.Threading.CountdownEvent,System.Threading.Tasks.TaskCompletionSource{Steeltoe.Messaging.RabbitMQ.Support.Delivery},System.String,System.Threading.CancellationToken)'
  parent: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.DefaultTemplateConsumer
  langs:
  - csharp
  - vb
  name: DefaultTemplateConsumer(IModel, CountdownEvent, TaskCompletionSource<Delivery>, String, CancellationToken)
  nameWithType: RabbitTemplate.DefaultTemplateConsumer.DefaultTemplateConsumer(IModel, CountdownEvent, TaskCompletionSource<Delivery>, String, CancellationToken)
  fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.DefaultTemplateConsumer.DefaultTemplateConsumer(RabbitMQ.Client.IModel, System.Threading.CountdownEvent, System.Threading.Tasks.TaskCompletionSource<Steeltoe.Messaging.RabbitMQ.Support.Delivery>, System.String, System.Threading.CancellationToken)
  type: Constructor
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Core/RabbitTemplate.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: .ctor
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Core/RabbitTemplate.cs
    startLine: 2695
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Core
  syntax:
    content: public DefaultTemplateConsumer(IModel channel, CountdownEvent latch, TaskCompletionSource<Delivery> completionSource, string queueName, CancellationToken cancelationToken)
    parameters:
    - id: channel
      type: RabbitMQ.Client.IModel
    - id: latch
      type: System.Threading.CountdownEvent
    - id: completionSource
      type: System.Threading.Tasks.TaskCompletionSource{Steeltoe.Messaging.RabbitMQ.Support.Delivery}
    - id: queueName
      type: System.String
    - id: cancelationToken
      type: System.Threading.CancellationToken
    content.vb: Public Sub New(channel As IModel, latch As CountdownEvent, completionSource As TaskCompletionSource(Of Delivery), queueName As String, cancelationToken As CancellationToken)
  overload: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.DefaultTemplateConsumer.#ctor*
  nameWithType.vb: RabbitTemplate.DefaultTemplateConsumer.DefaultTemplateConsumer(IModel, CountdownEvent, TaskCompletionSource(Of Delivery), String, CancellationToken)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.DefaultTemplateConsumer.DefaultTemplateConsumer(RabbitMQ.Client.IModel, System.Threading.CountdownEvent, System.Threading.Tasks.TaskCompletionSource(Of Steeltoe.Messaging.RabbitMQ.Support.Delivery), System.String, System.Threading.CancellationToken)
  name.vb: DefaultTemplateConsumer(IModel, CountdownEvent, TaskCompletionSource(Of Delivery), String, CancellationToken)
- uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.DefaultTemplateConsumer.HandleBasicCancel(System.String)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.DefaultTemplateConsumer.HandleBasicCancel(System.String)
  id: HandleBasicCancel(System.String)
  parent: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.DefaultTemplateConsumer
  langs:
  - csharp
  - vb
  name: HandleBasicCancel(String)
  nameWithType: RabbitTemplate.DefaultTemplateConsumer.HandleBasicCancel(String)
  fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.DefaultTemplateConsumer.HandleBasicCancel(System.String)
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Core/RabbitTemplate.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: HandleBasicCancel
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Core/RabbitTemplate.cs
    startLine: 2710
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Core
  syntax:
    content: public override void HandleBasicCancel(string consumerTag)
    parameters:
    - id: consumerTag
      type: System.String
    content.vb: Public Overrides Sub HandleBasicCancel(consumerTag As String)
  overridden: RabbitMQ.Client.DefaultBasicConsumer.HandleBasicCancel(System.String)
  overload: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.DefaultTemplateConsumer.HandleBasicCancel*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.DefaultTemplateConsumer.HandleBasicConsumeOk(System.String)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.DefaultTemplateConsumer.HandleBasicConsumeOk(System.String)
  id: HandleBasicConsumeOk(System.String)
  parent: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.DefaultTemplateConsumer
  langs:
  - csharp
  - vb
  name: HandleBasicConsumeOk(String)
  nameWithType: RabbitTemplate.DefaultTemplateConsumer.HandleBasicConsumeOk(String)
  fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.DefaultTemplateConsumer.HandleBasicConsumeOk(System.String)
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Core/RabbitTemplate.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: HandleBasicConsumeOk
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Core/RabbitTemplate.cs
    startLine: 2716
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Core
  syntax:
    content: public override void HandleBasicConsumeOk(string consumerTag)
    parameters:
    - id: consumerTag
      type: System.String
    content.vb: Public Overrides Sub HandleBasicConsumeOk(consumerTag As String)
  overridden: RabbitMQ.Client.DefaultBasicConsumer.HandleBasicConsumeOk(System.String)
  overload: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.DefaultTemplateConsumer.HandleBasicConsumeOk*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.DefaultTemplateConsumer.HandleBasicDeliver(System.String,System.UInt64,System.Boolean,System.String,System.String,RabbitMQ.Client.IBasicProperties,System.Byte[])
  commentId: M:Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.DefaultTemplateConsumer.HandleBasicDeliver(System.String,System.UInt64,System.Boolean,System.String,System.String,RabbitMQ.Client.IBasicProperties,System.Byte[])
  id: HandleBasicDeliver(System.String,System.UInt64,System.Boolean,System.String,System.String,RabbitMQ.Client.IBasicProperties,System.Byte[])
  parent: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.DefaultTemplateConsumer
  langs:
  - csharp
  - vb
  name: HandleBasicDeliver(String, UInt64, Boolean, String, String, IBasicProperties, Byte[])
  nameWithType: RabbitTemplate.DefaultTemplateConsumer.HandleBasicDeliver(String, UInt64, Boolean, String, String, IBasicProperties, Byte[])
  fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.DefaultTemplateConsumer.HandleBasicDeliver(System.String, System.UInt64, System.Boolean, System.String, System.String, RabbitMQ.Client.IBasicProperties, System.Byte[])
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Core/RabbitTemplate.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: HandleBasicDeliver
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Core/RabbitTemplate.cs
    startLine: 2722
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Core
  syntax:
    content: public override void HandleBasicDeliver(string consumerTag, ulong deliveryTag, bool redelivered, string exchange, string routingKey, IBasicProperties properties, byte[] body)
    parameters:
    - id: consumerTag
      type: System.String
    - id: deliveryTag
      type: System.UInt64
    - id: redelivered
      type: System.Boolean
    - id: exchange
      type: System.String
    - id: routingKey
      type: System.String
    - id: properties
      type: RabbitMQ.Client.IBasicProperties
    - id: body
      type: System.Byte[]
    content.vb: Public Overrides Sub HandleBasicDeliver(consumerTag As String, deliveryTag As ULong, redelivered As Boolean, exchange As String, routingKey As String, properties As IBasicProperties, body As Byte())
  overridden: RabbitMQ.Client.DefaultBasicConsumer.HandleBasicDeliver(System.String,System.UInt64,System.Boolean,System.String,System.String,RabbitMQ.Client.IBasicProperties,System.Byte[])
  overload: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.DefaultTemplateConsumer.HandleBasicDeliver*
  nameWithType.vb: RabbitTemplate.DefaultTemplateConsumer.HandleBasicDeliver(String, UInt64, Boolean, String, String, IBasicProperties, Byte())
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.DefaultTemplateConsumer.HandleBasicDeliver(System.String, System.UInt64, System.Boolean, System.String, System.String, RabbitMQ.Client.IBasicProperties, System.Byte())
  name.vb: HandleBasicDeliver(String, UInt64, Boolean, String, String, IBasicProperties, Byte())
- uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.DefaultTemplateConsumer.HandleModelShutdown(System.Object,RabbitMQ.Client.ShutdownEventArgs)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.DefaultTemplateConsumer.HandleModelShutdown(System.Object,RabbitMQ.Client.ShutdownEventArgs)
  id: HandleModelShutdown(System.Object,RabbitMQ.Client.ShutdownEventArgs)
  parent: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.DefaultTemplateConsumer
  langs:
  - csharp
  - vb
  name: HandleModelShutdown(Object, ShutdownEventArgs)
  nameWithType: RabbitTemplate.DefaultTemplateConsumer.HandleModelShutdown(Object, ShutdownEventArgs)
  fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.DefaultTemplateConsumer.HandleModelShutdown(System.Object, RabbitMQ.Client.ShutdownEventArgs)
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Core/RabbitTemplate.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: HandleModelShutdown
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Core/RabbitTemplate.cs
    startLine: 2729
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Core
  syntax:
    content: public override void HandleModelShutdown(object model, ShutdownEventArgs reason)
    parameters:
    - id: model
      type: System.Object
    - id: reason
      type: RabbitMQ.Client.ShutdownEventArgs
    content.vb: Public Overrides Sub HandleModelShutdown(model As Object, reason As ShutdownEventArgs)
  overridden: RabbitMQ.Client.DefaultBasicConsumer.HandleModelShutdown(System.Object,RabbitMQ.Client.ShutdownEventArgs)
  overload: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.DefaultTemplateConsumer.HandleModelShutdown*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: Steeltoe.Messaging.RabbitMQ.Core
  commentId: N:Steeltoe.Messaging.RabbitMQ.Core
  name: Steeltoe.Messaging.RabbitMQ.Core
  nameWithType: Steeltoe.Messaging.RabbitMQ.Core
  fullName: Steeltoe.Messaging.RabbitMQ.Core
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: RabbitMQ.Client.DefaultBasicConsumer
  commentId: T:RabbitMQ.Client.DefaultBasicConsumer
  parent: RabbitMQ.Client
  isExternal: true
  name: DefaultBasicConsumer
  nameWithType: DefaultBasicConsumer
  fullName: RabbitMQ.Client.DefaultBasicConsumer
- uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.AbstractTemplateConsumer
  commentId: T:Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.AbstractTemplateConsumer
  parent: Steeltoe.Messaging.RabbitMQ.Core
  name: RabbitTemplate.AbstractTemplateConsumer
  nameWithType: RabbitTemplate.AbstractTemplateConsumer
  fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.AbstractTemplateConsumer
- uid: RabbitMQ.Client.IBasicConsumer
  commentId: T:RabbitMQ.Client.IBasicConsumer
  parent: RabbitMQ.Client
  isExternal: true
  name: IBasicConsumer
  nameWithType: IBasicConsumer
  fullName: RabbitMQ.Client.IBasicConsumer
- uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.AbstractTemplateConsumer.ToString
  commentId: M:Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.AbstractTemplateConsumer.ToString
  parent: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.AbstractTemplateConsumer
  name: ToString()
  nameWithType: RabbitTemplate.AbstractTemplateConsumer.ToString()
  fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.AbstractTemplateConsumer.ToString()
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.AbstractTemplateConsumer.ToString
    name: ToString
    nameWithType: RabbitTemplate.AbstractTemplateConsumer.ToString
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.AbstractTemplateConsumer.ToString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.AbstractTemplateConsumer.ToString
    name: ToString
    nameWithType: RabbitTemplate.AbstractTemplateConsumer.ToString
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.AbstractTemplateConsumer.ToString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: RabbitMQ.Client.DefaultBasicConsumer.m_eventLock
  commentId: F:RabbitMQ.Client.DefaultBasicConsumer.m_eventLock
  parent: RabbitMQ.Client.DefaultBasicConsumer
  isExternal: true
  name: m_eventLock
  nameWithType: DefaultBasicConsumer.m_eventLock
  fullName: RabbitMQ.Client.DefaultBasicConsumer.m_eventLock
- uid: RabbitMQ.Client.DefaultBasicConsumer.m_consumerCancelled
  commentId: F:RabbitMQ.Client.DefaultBasicConsumer.m_consumerCancelled
  parent: RabbitMQ.Client.DefaultBasicConsumer
  isExternal: true
  name: m_consumerCancelled
  nameWithType: DefaultBasicConsumer.m_consumerCancelled
  fullName: RabbitMQ.Client.DefaultBasicConsumer.m_consumerCancelled
- uid: RabbitMQ.Client.DefaultBasicConsumer.HandleBasicCancelOk(System.String)
  commentId: M:RabbitMQ.Client.DefaultBasicConsumer.HandleBasicCancelOk(System.String)
  parent: RabbitMQ.Client.DefaultBasicConsumer
  isExternal: true
  name: HandleBasicCancelOk(String)
  nameWithType: DefaultBasicConsumer.HandleBasicCancelOk(String)
  fullName: RabbitMQ.Client.DefaultBasicConsumer.HandleBasicCancelOk(System.String)
  spec.csharp:
  - uid: RabbitMQ.Client.DefaultBasicConsumer.HandleBasicCancelOk(System.String)
    name: HandleBasicCancelOk
    nameWithType: DefaultBasicConsumer.HandleBasicCancelOk
    fullName: RabbitMQ.Client.DefaultBasicConsumer.HandleBasicCancelOk
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: RabbitMQ.Client.DefaultBasicConsumer.HandleBasicCancelOk(System.String)
    name: HandleBasicCancelOk
    nameWithType: DefaultBasicConsumer.HandleBasicCancelOk
    fullName: RabbitMQ.Client.DefaultBasicConsumer.HandleBasicCancelOk
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: RabbitMQ.Client.DefaultBasicConsumer.OnCancel
  commentId: M:RabbitMQ.Client.DefaultBasicConsumer.OnCancel
  parent: RabbitMQ.Client.DefaultBasicConsumer
  isExternal: true
  name: OnCancel()
  nameWithType: DefaultBasicConsumer.OnCancel()
  fullName: RabbitMQ.Client.DefaultBasicConsumer.OnCancel()
  spec.csharp:
  - uid: RabbitMQ.Client.DefaultBasicConsumer.OnCancel
    name: OnCancel
    nameWithType: DefaultBasicConsumer.OnCancel
    fullName: RabbitMQ.Client.DefaultBasicConsumer.OnCancel
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: RabbitMQ.Client.DefaultBasicConsumer.OnCancel
    name: OnCancel
    nameWithType: DefaultBasicConsumer.OnCancel
    fullName: RabbitMQ.Client.DefaultBasicConsumer.OnCancel
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: RabbitMQ.Client.DefaultBasicConsumer.ConsumerTag
  commentId: P:RabbitMQ.Client.DefaultBasicConsumer.ConsumerTag
  parent: RabbitMQ.Client.DefaultBasicConsumer
  isExternal: true
  name: ConsumerTag
  nameWithType: DefaultBasicConsumer.ConsumerTag
  fullName: RabbitMQ.Client.DefaultBasicConsumer.ConsumerTag
- uid: RabbitMQ.Client.DefaultBasicConsumer.IsRunning
  commentId: P:RabbitMQ.Client.DefaultBasicConsumer.IsRunning
  parent: RabbitMQ.Client.DefaultBasicConsumer
  isExternal: true
  name: IsRunning
  nameWithType: DefaultBasicConsumer.IsRunning
  fullName: RabbitMQ.Client.DefaultBasicConsumer.IsRunning
- uid: RabbitMQ.Client.DefaultBasicConsumer.ShutdownReason
  commentId: P:RabbitMQ.Client.DefaultBasicConsumer.ShutdownReason
  parent: RabbitMQ.Client.DefaultBasicConsumer
  isExternal: true
  name: ShutdownReason
  nameWithType: DefaultBasicConsumer.ShutdownReason
  fullName: RabbitMQ.Client.DefaultBasicConsumer.ShutdownReason
- uid: RabbitMQ.Client.DefaultBasicConsumer.Model
  commentId: P:RabbitMQ.Client.DefaultBasicConsumer.Model
  parent: RabbitMQ.Client.DefaultBasicConsumer
  isExternal: true
  name: Model
  nameWithType: DefaultBasicConsumer.Model
  fullName: RabbitMQ.Client.DefaultBasicConsumer.Model
- uid: RabbitMQ.Client.DefaultBasicConsumer.ConsumerCancelled
  commentId: E:RabbitMQ.Client.DefaultBasicConsumer.ConsumerCancelled
  parent: RabbitMQ.Client.DefaultBasicConsumer
  isExternal: true
  name: ConsumerCancelled
  nameWithType: DefaultBasicConsumer.ConsumerCancelled
  fullName: RabbitMQ.Client.DefaultBasicConsumer.ConsumerCancelled
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: RabbitMQ.Client
  commentId: N:RabbitMQ.Client
  isExternal: true
  name: RabbitMQ.Client
  nameWithType: RabbitMQ.Client
  fullName: RabbitMQ.Client
- uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.DefaultTemplateConsumer.#ctor*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.DefaultTemplateConsumer.#ctor
  name: DefaultTemplateConsumer
  nameWithType: RabbitTemplate.DefaultTemplateConsumer.DefaultTemplateConsumer
  fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.DefaultTemplateConsumer.DefaultTemplateConsumer
- uid: RabbitMQ.Client.IModel
  commentId: T:RabbitMQ.Client.IModel
  parent: RabbitMQ.Client
  isExternal: true
  name: IModel
  nameWithType: IModel
  fullName: RabbitMQ.Client.IModel
- uid: System.Threading.CountdownEvent
  commentId: T:System.Threading.CountdownEvent
  parent: System.Threading
  isExternal: true
  name: CountdownEvent
  nameWithType: CountdownEvent
  fullName: System.Threading.CountdownEvent
- uid: System.Threading.Tasks.TaskCompletionSource{Steeltoe.Messaging.RabbitMQ.Support.Delivery}
  commentId: T:System.Threading.Tasks.TaskCompletionSource{Steeltoe.Messaging.RabbitMQ.Support.Delivery}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.TaskCompletionSource`1
  name: TaskCompletionSource<Delivery>
  nameWithType: TaskCompletionSource<Delivery>
  fullName: System.Threading.Tasks.TaskCompletionSource<Steeltoe.Messaging.RabbitMQ.Support.Delivery>
  nameWithType.vb: TaskCompletionSource(Of Delivery)
  fullName.vb: System.Threading.Tasks.TaskCompletionSource(Of Steeltoe.Messaging.RabbitMQ.Support.Delivery)
  name.vb: TaskCompletionSource(Of Delivery)
  spec.csharp:
  - uid: System.Threading.Tasks.TaskCompletionSource`1
    name: TaskCompletionSource
    nameWithType: TaskCompletionSource
    fullName: System.Threading.Tasks.TaskCompletionSource
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Steeltoe.Messaging.RabbitMQ.Support.Delivery
    name: Delivery
    nameWithType: Delivery
    fullName: Steeltoe.Messaging.RabbitMQ.Support.Delivery
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.TaskCompletionSource`1
    name: TaskCompletionSource
    nameWithType: TaskCompletionSource
    fullName: System.Threading.Tasks.TaskCompletionSource
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Steeltoe.Messaging.RabbitMQ.Support.Delivery
    name: Delivery
    nameWithType: Delivery
    fullName: Steeltoe.Messaging.RabbitMQ.Support.Delivery
  - name: )
    nameWithType: )
    fullName: )
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: true
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
- uid: System.Threading.Tasks.TaskCompletionSource`1
  commentId: T:System.Threading.Tasks.TaskCompletionSource`1
  isExternal: true
  name: TaskCompletionSource<TResult>
  nameWithType: TaskCompletionSource<TResult>
  fullName: System.Threading.Tasks.TaskCompletionSource<TResult>
  nameWithType.vb: TaskCompletionSource(Of TResult)
  fullName.vb: System.Threading.Tasks.TaskCompletionSource(Of TResult)
  name.vb: TaskCompletionSource(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.TaskCompletionSource`1
    name: TaskCompletionSource
    nameWithType: TaskCompletionSource
    fullName: System.Threading.Tasks.TaskCompletionSource
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.TaskCompletionSource`1
    name: TaskCompletionSource
    nameWithType: TaskCompletionSource
    fullName: System.Threading.Tasks.TaskCompletionSource
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: RabbitMQ.Client.DefaultBasicConsumer.HandleBasicCancel(System.String)
  commentId: M:RabbitMQ.Client.DefaultBasicConsumer.HandleBasicCancel(System.String)
  parent: RabbitMQ.Client.DefaultBasicConsumer
  isExternal: true
  name: HandleBasicCancel(String)
  nameWithType: DefaultBasicConsumer.HandleBasicCancel(String)
  fullName: RabbitMQ.Client.DefaultBasicConsumer.HandleBasicCancel(System.String)
  spec.csharp:
  - uid: RabbitMQ.Client.DefaultBasicConsumer.HandleBasicCancel(System.String)
    name: HandleBasicCancel
    nameWithType: DefaultBasicConsumer.HandleBasicCancel
    fullName: RabbitMQ.Client.DefaultBasicConsumer.HandleBasicCancel
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: RabbitMQ.Client.DefaultBasicConsumer.HandleBasicCancel(System.String)
    name: HandleBasicCancel
    nameWithType: DefaultBasicConsumer.HandleBasicCancel
    fullName: RabbitMQ.Client.DefaultBasicConsumer.HandleBasicCancel
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.DefaultTemplateConsumer.HandleBasicCancel*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.DefaultTemplateConsumer.HandleBasicCancel
  name: HandleBasicCancel
  nameWithType: RabbitTemplate.DefaultTemplateConsumer.HandleBasicCancel
  fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.DefaultTemplateConsumer.HandleBasicCancel
- uid: RabbitMQ.Client.DefaultBasicConsumer.HandleBasicConsumeOk(System.String)
  commentId: M:RabbitMQ.Client.DefaultBasicConsumer.HandleBasicConsumeOk(System.String)
  parent: RabbitMQ.Client.DefaultBasicConsumer
  isExternal: true
  name: HandleBasicConsumeOk(String)
  nameWithType: DefaultBasicConsumer.HandleBasicConsumeOk(String)
  fullName: RabbitMQ.Client.DefaultBasicConsumer.HandleBasicConsumeOk(System.String)
  spec.csharp:
  - uid: RabbitMQ.Client.DefaultBasicConsumer.HandleBasicConsumeOk(System.String)
    name: HandleBasicConsumeOk
    nameWithType: DefaultBasicConsumer.HandleBasicConsumeOk
    fullName: RabbitMQ.Client.DefaultBasicConsumer.HandleBasicConsumeOk
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: RabbitMQ.Client.DefaultBasicConsumer.HandleBasicConsumeOk(System.String)
    name: HandleBasicConsumeOk
    nameWithType: DefaultBasicConsumer.HandleBasicConsumeOk
    fullName: RabbitMQ.Client.DefaultBasicConsumer.HandleBasicConsumeOk
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.DefaultTemplateConsumer.HandleBasicConsumeOk*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.DefaultTemplateConsumer.HandleBasicConsumeOk
  name: HandleBasicConsumeOk
  nameWithType: RabbitTemplate.DefaultTemplateConsumer.HandleBasicConsumeOk
  fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.DefaultTemplateConsumer.HandleBasicConsumeOk
- uid: RabbitMQ.Client.DefaultBasicConsumer.HandleBasicDeliver(System.String,System.UInt64,System.Boolean,System.String,System.String,RabbitMQ.Client.IBasicProperties,System.Byte[])
  commentId: M:RabbitMQ.Client.DefaultBasicConsumer.HandleBasicDeliver(System.String,System.UInt64,System.Boolean,System.String,System.String,RabbitMQ.Client.IBasicProperties,System.Byte[])
  parent: RabbitMQ.Client.DefaultBasicConsumer
  isExternal: true
  name: HandleBasicDeliver(String, UInt64, Boolean, String, String, IBasicProperties, Byte[])
  nameWithType: DefaultBasicConsumer.HandleBasicDeliver(String, UInt64, Boolean, String, String, IBasicProperties, Byte[])
  fullName: RabbitMQ.Client.DefaultBasicConsumer.HandleBasicDeliver(System.String, System.UInt64, System.Boolean, System.String, System.String, RabbitMQ.Client.IBasicProperties, System.Byte[])
  nameWithType.vb: DefaultBasicConsumer.HandleBasicDeliver(String, UInt64, Boolean, String, String, IBasicProperties, Byte())
  fullName.vb: RabbitMQ.Client.DefaultBasicConsumer.HandleBasicDeliver(System.String, System.UInt64, System.Boolean, System.String, System.String, RabbitMQ.Client.IBasicProperties, System.Byte())
  name.vb: HandleBasicDeliver(String, UInt64, Boolean, String, String, IBasicProperties, Byte())
  spec.csharp:
  - uid: RabbitMQ.Client.DefaultBasicConsumer.HandleBasicDeliver(System.String,System.UInt64,System.Boolean,System.String,System.String,RabbitMQ.Client.IBasicProperties,System.Byte[])
    name: HandleBasicDeliver
    nameWithType: DefaultBasicConsumer.HandleBasicDeliver
    fullName: RabbitMQ.Client.DefaultBasicConsumer.HandleBasicDeliver
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.UInt64
    name: UInt64
    nameWithType: UInt64
    fullName: System.UInt64
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: RabbitMQ.Client.IBasicProperties
    name: IBasicProperties
    nameWithType: IBasicProperties
    fullName: RabbitMQ.Client.IBasicProperties
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: RabbitMQ.Client.DefaultBasicConsumer.HandleBasicDeliver(System.String,System.UInt64,System.Boolean,System.String,System.String,RabbitMQ.Client.IBasicProperties,System.Byte[])
    name: HandleBasicDeliver
    nameWithType: DefaultBasicConsumer.HandleBasicDeliver
    fullName: RabbitMQ.Client.DefaultBasicConsumer.HandleBasicDeliver
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.UInt64
    name: UInt64
    nameWithType: UInt64
    fullName: System.UInt64
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: RabbitMQ.Client.IBasicProperties
    name: IBasicProperties
    nameWithType: IBasicProperties
    fullName: RabbitMQ.Client.IBasicProperties
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.DefaultTemplateConsumer.HandleBasicDeliver*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.DefaultTemplateConsumer.HandleBasicDeliver
  name: HandleBasicDeliver
  nameWithType: RabbitTemplate.DefaultTemplateConsumer.HandleBasicDeliver
  fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.DefaultTemplateConsumer.HandleBasicDeliver
- uid: System.UInt64
  commentId: T:System.UInt64
  parent: System
  isExternal: true
  name: UInt64
  nameWithType: UInt64
  fullName: System.UInt64
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: RabbitMQ.Client.IBasicProperties
  commentId: T:RabbitMQ.Client.IBasicProperties
  parent: RabbitMQ.Client
  isExternal: true
  name: IBasicProperties
  nameWithType: IBasicProperties
  fullName: RabbitMQ.Client.IBasicProperties
- uid: System.Byte[]
  isExternal: true
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  nameWithType.vb: Byte()
  fullName.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: RabbitMQ.Client.DefaultBasicConsumer.HandleModelShutdown(System.Object,RabbitMQ.Client.ShutdownEventArgs)
  commentId: M:RabbitMQ.Client.DefaultBasicConsumer.HandleModelShutdown(System.Object,RabbitMQ.Client.ShutdownEventArgs)
  parent: RabbitMQ.Client.DefaultBasicConsumer
  isExternal: true
  name: HandleModelShutdown(Object, ShutdownEventArgs)
  nameWithType: DefaultBasicConsumer.HandleModelShutdown(Object, ShutdownEventArgs)
  fullName: RabbitMQ.Client.DefaultBasicConsumer.HandleModelShutdown(System.Object, RabbitMQ.Client.ShutdownEventArgs)
  spec.csharp:
  - uid: RabbitMQ.Client.DefaultBasicConsumer.HandleModelShutdown(System.Object,RabbitMQ.Client.ShutdownEventArgs)
    name: HandleModelShutdown
    nameWithType: DefaultBasicConsumer.HandleModelShutdown
    fullName: RabbitMQ.Client.DefaultBasicConsumer.HandleModelShutdown
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: RabbitMQ.Client.ShutdownEventArgs
    name: ShutdownEventArgs
    nameWithType: ShutdownEventArgs
    fullName: RabbitMQ.Client.ShutdownEventArgs
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: RabbitMQ.Client.DefaultBasicConsumer.HandleModelShutdown(System.Object,RabbitMQ.Client.ShutdownEventArgs)
    name: HandleModelShutdown
    nameWithType: DefaultBasicConsumer.HandleModelShutdown
    fullName: RabbitMQ.Client.DefaultBasicConsumer.HandleModelShutdown
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: RabbitMQ.Client.ShutdownEventArgs
    name: ShutdownEventArgs
    nameWithType: ShutdownEventArgs
    fullName: RabbitMQ.Client.ShutdownEventArgs
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.DefaultTemplateConsumer.HandleModelShutdown*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.DefaultTemplateConsumer.HandleModelShutdown
  name: HandleModelShutdown
  nameWithType: RabbitTemplate.DefaultTemplateConsumer.HandleModelShutdown
  fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.DefaultTemplateConsumer.HandleModelShutdown
- uid: RabbitMQ.Client.ShutdownEventArgs
  commentId: T:RabbitMQ.Client.ShutdownEventArgs
  parent: RabbitMQ.Client
  isExternal: true
  name: ShutdownEventArgs
  nameWithType: ShutdownEventArgs
  fullName: RabbitMQ.Client.ShutdownEventArgs
