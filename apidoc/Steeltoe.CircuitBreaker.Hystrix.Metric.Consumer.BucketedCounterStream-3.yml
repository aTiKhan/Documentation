### YamlMime:ManagedReference
items:
- uid: Steeltoe.CircuitBreaker.Hystrix.Metric.Consumer.BucketedCounterStream`3
  commentId: T:Steeltoe.CircuitBreaker.Hystrix.Metric.Consumer.BucketedCounterStream`3
  id: BucketedCounterStream`3
  parent: Steeltoe.CircuitBreaker.Hystrix.Metric.Consumer
  children:
  - Steeltoe.CircuitBreaker.Hystrix.Metric.Consumer.BucketedCounterStream`3.#ctor(Steeltoe.CircuitBreaker.Hystrix.Metric.IHystrixEventStream{`0},System.Int32,System.Int32,System.Func{`1,`0,`1})
  - Steeltoe.CircuitBreaker.Hystrix.Metric.Consumer.BucketedCounterStream`3.bucketedStream
  - Steeltoe.CircuitBreaker.Hystrix.Metric.Consumer.BucketedCounterStream`3.bucketSizeInMs
  - Steeltoe.CircuitBreaker.Hystrix.Metric.Consumer.BucketedCounterStream`3.EmptyBucketSummary
  - Steeltoe.CircuitBreaker.Hystrix.Metric.Consumer.BucketedCounterStream`3.EmptyOutputValue
  - Steeltoe.CircuitBreaker.Hystrix.Metric.Consumer.BucketedCounterStream`3.numBuckets
  - Steeltoe.CircuitBreaker.Hystrix.Metric.Consumer.BucketedCounterStream`3.Observe
  - Steeltoe.CircuitBreaker.Hystrix.Metric.Consumer.BucketedCounterStream`3.subscription
  - Steeltoe.CircuitBreaker.Hystrix.Metric.Consumer.BucketedCounterStream`3.Unsubscribe
  langs:
  - csharp
  - vb
  name: BucketedCounterStream<Event, Bucket, Output>
  nameWithType: BucketedCounterStream<Event, Bucket, Output>
  fullName: Steeltoe.CircuitBreaker.Hystrix.Metric.Consumer.BucketedCounterStream<Event, Bucket, Output>
  type: Class
  source:
    remote:
      path: src/CircuitBreaker/src/HystrixBase/Metric/Consumer/BucketedCounterStream.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: BucketedCounterStream
    path: ../Steeltoe/src/CircuitBreaker/src/HystrixBase/Metric/Consumer/BucketedCounterStream.cs
    startLine: 13
  assemblies:
  - Steeltoe.CircuitBreaker.HystrixBase
  namespace: Steeltoe.CircuitBreaker.Hystrix.Metric.Consumer
  syntax:
    content: >-
      public abstract class BucketedCounterStream<Event, Bucket, Output>

          where Event : IHystrixEvent
    typeParameters:
    - id: Event
    - id: Bucket
    - id: Output
    content.vb: Public MustInherit Class BucketedCounterStream(Of Event As IHystrixEvent, Bucket, Output)
  inheritance:
  - System.Object
  derivedClasses:
  - Steeltoe.CircuitBreaker.Hystrix.Metric.Consumer.BucketedCumulativeCounterStream`3
  - Steeltoe.CircuitBreaker.Hystrix.Metric.Consumer.BucketedRollingCounterStream`3
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  nameWithType.vb: BucketedCounterStream(Of Event, Bucket, Output)
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
  fullName.vb: Steeltoe.CircuitBreaker.Hystrix.Metric.Consumer.BucketedCounterStream(Of Event, Bucket, Output)
  name.vb: BucketedCounterStream(Of Event, Bucket, Output)
- uid: Steeltoe.CircuitBreaker.Hystrix.Metric.Consumer.BucketedCounterStream`3.numBuckets
  commentId: F:Steeltoe.CircuitBreaker.Hystrix.Metric.Consumer.BucketedCounterStream`3.numBuckets
  id: numBuckets
  parent: Steeltoe.CircuitBreaker.Hystrix.Metric.Consumer.BucketedCounterStream`3
  langs:
  - csharp
  - vb
  name: numBuckets
  nameWithType: BucketedCounterStream<Event, Bucket, Output>.numBuckets
  fullName: Steeltoe.CircuitBreaker.Hystrix.Metric.Consumer.BucketedCounterStream<Event, Bucket, Output>.numBuckets
  type: Field
  source:
    remote:
      path: src/CircuitBreaker/src/HystrixBase/Metric/Consumer/BucketedCounterStream.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: numBuckets
    path: ../Steeltoe/src/CircuitBreaker/src/HystrixBase/Metric/Consumer/BucketedCounterStream.cs
    startLine: 16
  assemblies:
  - Steeltoe.CircuitBreaker.HystrixBase
  namespace: Steeltoe.CircuitBreaker.Hystrix.Metric.Consumer
  syntax:
    content: protected readonly int numBuckets
    return:
      type: System.Int32
    content.vb: Protected ReadOnly numBuckets As Integer
  nameWithType.vb: BucketedCounterStream(Of Event, Bucket, Output).numBuckets
  modifiers.csharp:
  - protected
  - readonly
  modifiers.vb:
  - Protected
  - ReadOnly
  fullName.vb: Steeltoe.CircuitBreaker.Hystrix.Metric.Consumer.BucketedCounterStream(Of Event, Bucket, Output).numBuckets
- uid: Steeltoe.CircuitBreaker.Hystrix.Metric.Consumer.BucketedCounterStream`3.bucketSizeInMs
  commentId: F:Steeltoe.CircuitBreaker.Hystrix.Metric.Consumer.BucketedCounterStream`3.bucketSizeInMs
  id: bucketSizeInMs
  parent: Steeltoe.CircuitBreaker.Hystrix.Metric.Consumer.BucketedCounterStream`3
  langs:
  - csharp
  - vb
  name: bucketSizeInMs
  nameWithType: BucketedCounterStream<Event, Bucket, Output>.bucketSizeInMs
  fullName: Steeltoe.CircuitBreaker.Hystrix.Metric.Consumer.BucketedCounterStream<Event, Bucket, Output>.bucketSizeInMs
  type: Field
  source:
    remote:
      path: src/CircuitBreaker/src/HystrixBase/Metric/Consumer/BucketedCounterStream.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: bucketSizeInMs
    path: ../Steeltoe/src/CircuitBreaker/src/HystrixBase/Metric/Consumer/BucketedCounterStream.cs
    startLine: 17
  assemblies:
  - Steeltoe.CircuitBreaker.HystrixBase
  namespace: Steeltoe.CircuitBreaker.Hystrix.Metric.Consumer
  syntax:
    content: protected readonly int bucketSizeInMs
    return:
      type: System.Int32
    content.vb: Protected ReadOnly bucketSizeInMs As Integer
  nameWithType.vb: BucketedCounterStream(Of Event, Bucket, Output).bucketSizeInMs
  modifiers.csharp:
  - protected
  - readonly
  modifiers.vb:
  - Protected
  - ReadOnly
  fullName.vb: Steeltoe.CircuitBreaker.Hystrix.Metric.Consumer.BucketedCounterStream(Of Event, Bucket, Output).bucketSizeInMs
- uid: Steeltoe.CircuitBreaker.Hystrix.Metric.Consumer.BucketedCounterStream`3.bucketedStream
  commentId: F:Steeltoe.CircuitBreaker.Hystrix.Metric.Consumer.BucketedCounterStream`3.bucketedStream
  id: bucketedStream
  parent: Steeltoe.CircuitBreaker.Hystrix.Metric.Consumer.BucketedCounterStream`3
  langs:
  - csharp
  - vb
  name: bucketedStream
  nameWithType: BucketedCounterStream<Event, Bucket, Output>.bucketedStream
  fullName: Steeltoe.CircuitBreaker.Hystrix.Metric.Consumer.BucketedCounterStream<Event, Bucket, Output>.bucketedStream
  type: Field
  source:
    remote:
      path: src/CircuitBreaker/src/HystrixBase/Metric/Consumer/BucketedCounterStream.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: bucketedStream
    path: ../Steeltoe/src/CircuitBreaker/src/HystrixBase/Metric/Consumer/BucketedCounterStream.cs
    startLine: 18
  assemblies:
  - Steeltoe.CircuitBreaker.HystrixBase
  namespace: Steeltoe.CircuitBreaker.Hystrix.Metric.Consumer
  syntax:
    content: protected readonly IObservable<Bucket> bucketedStream
    return:
      type: System.IObservable{{Bucket}}
    content.vb: Protected ReadOnly bucketedStream As IObservable(Of Bucket)
  nameWithType.vb: BucketedCounterStream(Of Event, Bucket, Output).bucketedStream
  modifiers.csharp:
  - protected
  - readonly
  modifiers.vb:
  - Protected
  - ReadOnly
  fullName.vb: Steeltoe.CircuitBreaker.Hystrix.Metric.Consumer.BucketedCounterStream(Of Event, Bucket, Output).bucketedStream
- uid: Steeltoe.CircuitBreaker.Hystrix.Metric.Consumer.BucketedCounterStream`3.subscription
  commentId: F:Steeltoe.CircuitBreaker.Hystrix.Metric.Consumer.BucketedCounterStream`3.subscription
  id: subscription
  parent: Steeltoe.CircuitBreaker.Hystrix.Metric.Consumer.BucketedCounterStream`3
  langs:
  - csharp
  - vb
  name: subscription
  nameWithType: BucketedCounterStream<Event, Bucket, Output>.subscription
  fullName: Steeltoe.CircuitBreaker.Hystrix.Metric.Consumer.BucketedCounterStream<Event, Bucket, Output>.subscription
  type: Field
  source:
    remote:
      path: src/CircuitBreaker/src/HystrixBase/Metric/Consumer/BucketedCounterStream.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: subscription
    path: ../Steeltoe/src/CircuitBreaker/src/HystrixBase/Metric/Consumer/BucketedCounterStream.cs
    startLine: 19
  assemblies:
  - Steeltoe.CircuitBreaker.HystrixBase
  namespace: Steeltoe.CircuitBreaker.Hystrix.Metric.Consumer
  syntax:
    content: protected readonly AtomicReference<IDisposable> subscription
    return:
      type: AtomicReference{System.IDisposable}
    content.vb: Protected ReadOnly subscription As AtomicReference(Of IDisposable)
  nameWithType.vb: BucketedCounterStream(Of Event, Bucket, Output).subscription
  modifiers.csharp:
  - protected
  - readonly
  modifiers.vb:
  - Protected
  - ReadOnly
  fullName.vb: Steeltoe.CircuitBreaker.Hystrix.Metric.Consumer.BucketedCounterStream(Of Event, Bucket, Output).subscription
- uid: Steeltoe.CircuitBreaker.Hystrix.Metric.Consumer.BucketedCounterStream`3.#ctor(Steeltoe.CircuitBreaker.Hystrix.Metric.IHystrixEventStream{`0},System.Int32,System.Int32,System.Func{`1,`0,`1})
  commentId: M:Steeltoe.CircuitBreaker.Hystrix.Metric.Consumer.BucketedCounterStream`3.#ctor(Steeltoe.CircuitBreaker.Hystrix.Metric.IHystrixEventStream{`0},System.Int32,System.Int32,System.Func{`1,`0,`1})
  id: '#ctor(Steeltoe.CircuitBreaker.Hystrix.Metric.IHystrixEventStream{`0},System.Int32,System.Int32,System.Func{`1,`0,`1})'
  parent: Steeltoe.CircuitBreaker.Hystrix.Metric.Consumer.BucketedCounterStream`3
  langs:
  - csharp
  - vb
  name: BucketedCounterStream(IHystrixEventStream<Event>, Int32, Int32, Func<Bucket, Event, Bucket>)
  nameWithType: BucketedCounterStream<Event, Bucket, Output>.BucketedCounterStream(IHystrixEventStream<Event>, Int32, Int32, Func<Bucket, Event, Bucket>)
  fullName: Steeltoe.CircuitBreaker.Hystrix.Metric.Consumer.BucketedCounterStream<Event, Bucket, Output>.BucketedCounterStream(Steeltoe.CircuitBreaker.Hystrix.Metric.IHystrixEventStream<Event>, System.Int32, System.Int32, System.Func<Bucket, Event, Bucket>)
  type: Constructor
  source:
    remote:
      path: src/CircuitBreaker/src/HystrixBase/Metric/Consumer/BucketedCounterStream.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: .ctor
    path: ../Steeltoe/src/CircuitBreaker/src/HystrixBase/Metric/Consumer/BucketedCounterStream.cs
    startLine: 23
  assemblies:
  - Steeltoe.CircuitBreaker.HystrixBase
  namespace: Steeltoe.CircuitBreaker.Hystrix.Metric.Consumer
  syntax:
    content: protected BucketedCounterStream(IHystrixEventStream<Event> inputEventStream, int numBuckets, int bucketSizeInMs, Func<Bucket, Event, Bucket> appendRawEventToBucket)
    parameters:
    - id: inputEventStream
      type: Steeltoe.CircuitBreaker.Hystrix.Metric.IHystrixEventStream{{Event}}
    - id: numBuckets
      type: System.Int32
    - id: bucketSizeInMs
      type: System.Int32
    - id: appendRawEventToBucket
      type: System.Func{{Bucket},{Event},{Bucket}}
    content.vb: Protected Sub New(inputEventStream As IHystrixEventStream(Of  Event), numBuckets As Integer, bucketSizeInMs As Integer, appendRawEventToBucket As Func(Of Bucket,  Event, Bucket))
  overload: Steeltoe.CircuitBreaker.Hystrix.Metric.Consumer.BucketedCounterStream`3.#ctor*
  nameWithType.vb: BucketedCounterStream(Of Event, Bucket, Output).BucketedCounterStream(IHystrixEventStream(Of Event), Int32, Int32, Func(Of Bucket, Event, Bucket))
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: Steeltoe.CircuitBreaker.Hystrix.Metric.Consumer.BucketedCounterStream(Of Event, Bucket, Output).BucketedCounterStream(Steeltoe.CircuitBreaker.Hystrix.Metric.IHystrixEventStream(Of Event), System.Int32, System.Int32, System.Func(Of Bucket, Event, Bucket))
  name.vb: BucketedCounterStream(IHystrixEventStream(Of Event), Int32, Int32, Func(Of Bucket, Event, Bucket))
- uid: Steeltoe.CircuitBreaker.Hystrix.Metric.Consumer.BucketedCounterStream`3.EmptyBucketSummary
  commentId: P:Steeltoe.CircuitBreaker.Hystrix.Metric.Consumer.BucketedCounterStream`3.EmptyBucketSummary
  id: EmptyBucketSummary
  parent: Steeltoe.CircuitBreaker.Hystrix.Metric.Consumer.BucketedCounterStream`3
  langs:
  - csharp
  - vb
  name: EmptyBucketSummary
  nameWithType: BucketedCounterStream<Event, Bucket, Output>.EmptyBucketSummary
  fullName: Steeltoe.CircuitBreaker.Hystrix.Metric.Consumer.BucketedCounterStream<Event, Bucket, Output>.EmptyBucketSummary
  type: Property
  source:
    remote:
      path: src/CircuitBreaker/src/HystrixBase/Metric/Consumer/BucketedCounterStream.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: EmptyBucketSummary
    path: ../Steeltoe/src/CircuitBreaker/src/HystrixBase/Metric/Consumer/BucketedCounterStream.cs
    startLine: 52
  assemblies:
  - Steeltoe.CircuitBreaker.HystrixBase
  namespace: Steeltoe.CircuitBreaker.Hystrix.Metric.Consumer
  syntax:
    content: public abstract Bucket EmptyBucketSummary { get; }
    parameters: []
    return:
      type: '{Bucket}'
    content.vb: Public MustOverride ReadOnly Property EmptyBucketSummary As Bucket
  overload: Steeltoe.CircuitBreaker.Hystrix.Metric.Consumer.BucketedCounterStream`3.EmptyBucketSummary*
  nameWithType.vb: BucketedCounterStream(Of Event, Bucket, Output).EmptyBucketSummary
  modifiers.csharp:
  - public
  - abstract
  - get
  modifiers.vb:
  - Public
  - MustOverride
  - ReadOnly
  fullName.vb: Steeltoe.CircuitBreaker.Hystrix.Metric.Consumer.BucketedCounterStream(Of Event, Bucket, Output).EmptyBucketSummary
- uid: Steeltoe.CircuitBreaker.Hystrix.Metric.Consumer.BucketedCounterStream`3.EmptyOutputValue
  commentId: P:Steeltoe.CircuitBreaker.Hystrix.Metric.Consumer.BucketedCounterStream`3.EmptyOutputValue
  id: EmptyOutputValue
  parent: Steeltoe.CircuitBreaker.Hystrix.Metric.Consumer.BucketedCounterStream`3
  langs:
  - csharp
  - vb
  name: EmptyOutputValue
  nameWithType: BucketedCounterStream<Event, Bucket, Output>.EmptyOutputValue
  fullName: Steeltoe.CircuitBreaker.Hystrix.Metric.Consumer.BucketedCounterStream<Event, Bucket, Output>.EmptyOutputValue
  type: Property
  source:
    remote:
      path: src/CircuitBreaker/src/HystrixBase/Metric/Consumer/BucketedCounterStream.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: EmptyOutputValue
    path: ../Steeltoe/src/CircuitBreaker/src/HystrixBase/Metric/Consumer/BucketedCounterStream.cs
    startLine: 54
  assemblies:
  - Steeltoe.CircuitBreaker.HystrixBase
  namespace: Steeltoe.CircuitBreaker.Hystrix.Metric.Consumer
  syntax:
    content: public abstract Output EmptyOutputValue { get; }
    parameters: []
    return:
      type: '{Output}'
    content.vb: Public MustOverride ReadOnly Property EmptyOutputValue As Output
  overload: Steeltoe.CircuitBreaker.Hystrix.Metric.Consumer.BucketedCounterStream`3.EmptyOutputValue*
  nameWithType.vb: BucketedCounterStream(Of Event, Bucket, Output).EmptyOutputValue
  modifiers.csharp:
  - public
  - abstract
  - get
  modifiers.vb:
  - Public
  - MustOverride
  - ReadOnly
  fullName.vb: Steeltoe.CircuitBreaker.Hystrix.Metric.Consumer.BucketedCounterStream(Of Event, Bucket, Output).EmptyOutputValue
- uid: Steeltoe.CircuitBreaker.Hystrix.Metric.Consumer.BucketedCounterStream`3.Observe
  commentId: M:Steeltoe.CircuitBreaker.Hystrix.Metric.Consumer.BucketedCounterStream`3.Observe
  id: Observe
  parent: Steeltoe.CircuitBreaker.Hystrix.Metric.Consumer.BucketedCounterStream`3
  langs:
  - csharp
  - vb
  name: Observe()
  nameWithType: BucketedCounterStream<Event, Bucket, Output>.Observe()
  fullName: Steeltoe.CircuitBreaker.Hystrix.Metric.Consumer.BucketedCounterStream<Event, Bucket, Output>.Observe()
  type: Method
  source:
    remote:
      path: src/CircuitBreaker/src/HystrixBase/Metric/Consumer/BucketedCounterStream.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Observe
    path: ../Steeltoe/src/CircuitBreaker/src/HystrixBase/Metric/Consumer/BucketedCounterStream.cs
    startLine: 56
  assemblies:
  - Steeltoe.CircuitBreaker.HystrixBase
  namespace: Steeltoe.CircuitBreaker.Hystrix.Metric.Consumer
  syntax:
    content: public abstract IObservable<Output> Observe()
    return:
      type: System.IObservable{{Output}}
    content.vb: Public MustOverride Function Observe As IObservable(Of Output)
  overload: Steeltoe.CircuitBreaker.Hystrix.Metric.Consumer.BucketedCounterStream`3.Observe*
  nameWithType.vb: BucketedCounterStream(Of Event, Bucket, Output).Observe()
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
  fullName.vb: Steeltoe.CircuitBreaker.Hystrix.Metric.Consumer.BucketedCounterStream(Of Event, Bucket, Output).Observe()
- uid: Steeltoe.CircuitBreaker.Hystrix.Metric.Consumer.BucketedCounterStream`3.Unsubscribe
  commentId: M:Steeltoe.CircuitBreaker.Hystrix.Metric.Consumer.BucketedCounterStream`3.Unsubscribe
  id: Unsubscribe
  parent: Steeltoe.CircuitBreaker.Hystrix.Metric.Consumer.BucketedCounterStream`3
  langs:
  - csharp
  - vb
  name: Unsubscribe()
  nameWithType: BucketedCounterStream<Event, Bucket, Output>.Unsubscribe()
  fullName: Steeltoe.CircuitBreaker.Hystrix.Metric.Consumer.BucketedCounterStream<Event, Bucket, Output>.Unsubscribe()
  type: Method
  source:
    remote:
      path: src/CircuitBreaker/src/HystrixBase/Metric/Consumer/BucketedCounterStream.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Unsubscribe
    path: ../Steeltoe/src/CircuitBreaker/src/HystrixBase/Metric/Consumer/BucketedCounterStream.cs
    startLine: 58
  assemblies:
  - Steeltoe.CircuitBreaker.HystrixBase
  namespace: Steeltoe.CircuitBreaker.Hystrix.Metric.Consumer
  syntax:
    content: public void Unsubscribe()
    content.vb: Public Sub Unsubscribe
  overload: Steeltoe.CircuitBreaker.Hystrix.Metric.Consumer.BucketedCounterStream`3.Unsubscribe*
  nameWithType.vb: BucketedCounterStream(Of Event, Bucket, Output).Unsubscribe()
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Steeltoe.CircuitBreaker.Hystrix.Metric.Consumer.BucketedCounterStream(Of Event, Bucket, Output).Unsubscribe()
references:
- uid: Steeltoe.CircuitBreaker.Hystrix.Metric.Consumer
  commentId: N:Steeltoe.CircuitBreaker.Hystrix.Metric.Consumer
  name: Steeltoe.CircuitBreaker.Hystrix.Metric.Consumer
  nameWithType: Steeltoe.CircuitBreaker.Hystrix.Metric.Consumer
  fullName: Steeltoe.CircuitBreaker.Hystrix.Metric.Consumer
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.IObservable{{Bucket}}
  commentId: T:System.IObservable{`1}
  parent: System
  definition: System.IObservable`1
  name: IObservable<Bucket>
  nameWithType: IObservable<Bucket>
  fullName: System.IObservable<Bucket>
  nameWithType.vb: IObservable(Of Bucket)
  fullName.vb: System.IObservable(Of Bucket)
  name.vb: IObservable(Of Bucket)
  spec.csharp:
  - uid: System.IObservable`1
    name: IObservable
    nameWithType: IObservable
    fullName: System.IObservable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: Bucket
    nameWithType: Bucket
    fullName: Bucket
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IObservable`1
    name: IObservable
    nameWithType: IObservable
    fullName: System.IObservable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: Bucket
    nameWithType: Bucket
    fullName: Bucket
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IObservable`1
  commentId: T:System.IObservable`1
  isExternal: true
  name: IObservable<T>
  nameWithType: IObservable<T>
  fullName: System.IObservable<T>
  nameWithType.vb: IObservable(Of T)
  fullName.vb: System.IObservable(Of T)
  name.vb: IObservable(Of T)
  spec.csharp:
  - uid: System.IObservable`1
    name: IObservable
    nameWithType: IObservable
    fullName: System.IObservable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IObservable`1
    name: IObservable
    nameWithType: IObservable
    fullName: System.IObservable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: AtomicReference{System.IDisposable}
  commentId: '!:AtomicReference{System.IDisposable}'
  definition: AtomicReference`1
  name: AtomicReference<IDisposable>
  nameWithType: AtomicReference<IDisposable>
  fullName: AtomicReference<System.IDisposable>
  nameWithType.vb: AtomicReference(Of IDisposable)
  fullName.vb: AtomicReference(Of System.IDisposable)
  name.vb: AtomicReference(Of IDisposable)
  spec.csharp:
  - uid: AtomicReference`1
    name: AtomicReference
    nameWithType: AtomicReference
    fullName: AtomicReference
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.IDisposable
    name: IDisposable
    nameWithType: IDisposable
    fullName: System.IDisposable
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: AtomicReference`1
    name: AtomicReference
    nameWithType: AtomicReference
    fullName: AtomicReference
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.IDisposable
    name: IDisposable
    nameWithType: IDisposable
    fullName: System.IDisposable
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: AtomicReference`1
  isExternal: true
  name: AtomicReference<>
  nameWithType: AtomicReference<>
  fullName: AtomicReference<>
  nameWithType.vb: AtomicReference(Of )
  fullName.vb: AtomicReference(Of )
  name.vb: AtomicReference(Of )
  spec.csharp:
  - uid: AtomicReference`1
    name: AtomicReference
    nameWithType: AtomicReference
    fullName: AtomicReference
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: AtomicReference`1
    name: AtomicReference
    nameWithType: AtomicReference
    fullName: AtomicReference
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.CircuitBreaker.Hystrix.Metric.Consumer.BucketedCounterStream`3.#ctor*
  commentId: Overload:Steeltoe.CircuitBreaker.Hystrix.Metric.Consumer.BucketedCounterStream`3.#ctor
  name: BucketedCounterStream
  nameWithType: BucketedCounterStream<Event, Bucket, Output>.BucketedCounterStream
  fullName: Steeltoe.CircuitBreaker.Hystrix.Metric.Consumer.BucketedCounterStream<Event, Bucket, Output>.BucketedCounterStream
  nameWithType.vb: BucketedCounterStream(Of Event, Bucket, Output).BucketedCounterStream
  fullName.vb: Steeltoe.CircuitBreaker.Hystrix.Metric.Consumer.BucketedCounterStream(Of Event, Bucket, Output).BucketedCounterStream
- uid: Steeltoe.CircuitBreaker.Hystrix.Metric.IHystrixEventStream{{Event}}
  commentId: T:Steeltoe.CircuitBreaker.Hystrix.Metric.IHystrixEventStream{`0}
  parent: Steeltoe.CircuitBreaker.Hystrix.Metric
  definition: Steeltoe.CircuitBreaker.Hystrix.Metric.IHystrixEventStream`1
  name: IHystrixEventStream<Event>
  nameWithType: IHystrixEventStream<Event>
  fullName: Steeltoe.CircuitBreaker.Hystrix.Metric.IHystrixEventStream<Event>
  nameWithType.vb: IHystrixEventStream(Of Event)
  fullName.vb: Steeltoe.CircuitBreaker.Hystrix.Metric.IHystrixEventStream(Of Event)
  name.vb: IHystrixEventStream(Of Event)
  spec.csharp:
  - uid: Steeltoe.CircuitBreaker.Hystrix.Metric.IHystrixEventStream`1
    name: IHystrixEventStream
    nameWithType: IHystrixEventStream
    fullName: Steeltoe.CircuitBreaker.Hystrix.Metric.IHystrixEventStream
  - name: <
    nameWithType: <
    fullName: <
  - name: Event
    nameWithType: Event
    fullName: Event
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Steeltoe.CircuitBreaker.Hystrix.Metric.IHystrixEventStream`1
    name: IHystrixEventStream
    nameWithType: IHystrixEventStream
    fullName: Steeltoe.CircuitBreaker.Hystrix.Metric.IHystrixEventStream
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: Event
    nameWithType: Event
    fullName: Event
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Func{{Bucket},{Event},{Bucket}}
  commentId: T:System.Func{`1,`0,`1}
  parent: System
  definition: System.Func`3
  name: Func<Bucket, Event, Bucket>
  nameWithType: Func<Bucket, Event, Bucket>
  fullName: System.Func<Bucket, Event, Bucket>
  nameWithType.vb: Func(Of Bucket, Event, Bucket)
  fullName.vb: System.Func(Of Bucket, Event, Bucket)
  name.vb: Func(Of Bucket, Event, Bucket)
  spec.csharp:
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: Bucket
    nameWithType: Bucket
    fullName: Bucket
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: Event
    nameWithType: Event
    fullName: Event
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: Bucket
    nameWithType: Bucket
    fullName: Bucket
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: Bucket
    nameWithType: Bucket
    fullName: Bucket
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: Event
    nameWithType: Event
    fullName: Event
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: Bucket
    nameWithType: Bucket
    fullName: Bucket
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.CircuitBreaker.Hystrix.Metric.IHystrixEventStream`1
  commentId: T:Steeltoe.CircuitBreaker.Hystrix.Metric.IHystrixEventStream`1
  name: IHystrixEventStream<E>
  nameWithType: IHystrixEventStream<E>
  fullName: Steeltoe.CircuitBreaker.Hystrix.Metric.IHystrixEventStream<E>
  nameWithType.vb: IHystrixEventStream(Of E)
  fullName.vb: Steeltoe.CircuitBreaker.Hystrix.Metric.IHystrixEventStream(Of E)
  name.vb: IHystrixEventStream(Of E)
  spec.csharp:
  - uid: Steeltoe.CircuitBreaker.Hystrix.Metric.IHystrixEventStream`1
    name: IHystrixEventStream
    nameWithType: IHystrixEventStream
    fullName: Steeltoe.CircuitBreaker.Hystrix.Metric.IHystrixEventStream
  - name: <
    nameWithType: <
    fullName: <
  - name: E
    nameWithType: E
    fullName: E
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Steeltoe.CircuitBreaker.Hystrix.Metric.IHystrixEventStream`1
    name: IHystrixEventStream
    nameWithType: IHystrixEventStream
    fullName: Steeltoe.CircuitBreaker.Hystrix.Metric.IHystrixEventStream
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: E
    nameWithType: E
    fullName: E
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.CircuitBreaker.Hystrix.Metric
  commentId: N:Steeltoe.CircuitBreaker.Hystrix.Metric
  name: Steeltoe.CircuitBreaker.Hystrix.Metric
  nameWithType: Steeltoe.CircuitBreaker.Hystrix.Metric
  fullName: Steeltoe.CircuitBreaker.Hystrix.Metric
- uid: System.Func`3
  commentId: T:System.Func`3
  isExternal: true
  name: Func<T1, T2, TResult>
  nameWithType: Func<T1, T2, TResult>
  fullName: System.Func<T1, T2, TResult>
  nameWithType.vb: Func(Of T1, T2, TResult)
  fullName.vb: System.Func(Of T1, T2, TResult)
  name.vb: Func(Of T1, T2, TResult)
  spec.csharp:
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.CircuitBreaker.Hystrix.Metric.Consumer.BucketedCounterStream`3.EmptyBucketSummary*
  commentId: Overload:Steeltoe.CircuitBreaker.Hystrix.Metric.Consumer.BucketedCounterStream`3.EmptyBucketSummary
  name: EmptyBucketSummary
  nameWithType: BucketedCounterStream<Event, Bucket, Output>.EmptyBucketSummary
  fullName: Steeltoe.CircuitBreaker.Hystrix.Metric.Consumer.BucketedCounterStream<Event, Bucket, Output>.EmptyBucketSummary
  nameWithType.vb: BucketedCounterStream(Of Event, Bucket, Output).EmptyBucketSummary
  fullName.vb: Steeltoe.CircuitBreaker.Hystrix.Metric.Consumer.BucketedCounterStream(Of Event, Bucket, Output).EmptyBucketSummary
- uid: '{Bucket}'
  commentId: '!:Bucket'
  definition: Bucket
  name: Bucket
  nameWithType: Bucket
  fullName: Bucket
- uid: Bucket
  commentId: '!:Bucket'
  name: Bucket
  nameWithType: Bucket
  fullName: Bucket
- uid: Steeltoe.CircuitBreaker.Hystrix.Metric.Consumer.BucketedCounterStream`3.EmptyOutputValue*
  commentId: Overload:Steeltoe.CircuitBreaker.Hystrix.Metric.Consumer.BucketedCounterStream`3.EmptyOutputValue
  name: EmptyOutputValue
  nameWithType: BucketedCounterStream<Event, Bucket, Output>.EmptyOutputValue
  fullName: Steeltoe.CircuitBreaker.Hystrix.Metric.Consumer.BucketedCounterStream<Event, Bucket, Output>.EmptyOutputValue
  nameWithType.vb: BucketedCounterStream(Of Event, Bucket, Output).EmptyOutputValue
  fullName.vb: Steeltoe.CircuitBreaker.Hystrix.Metric.Consumer.BucketedCounterStream(Of Event, Bucket, Output).EmptyOutputValue
- uid: '{Output}'
  commentId: '!:Output'
  definition: Output
  name: Output
  nameWithType: Output
  fullName: Output
- uid: Output
  name: Output
  nameWithType: Output
  fullName: Output
- uid: Steeltoe.CircuitBreaker.Hystrix.Metric.Consumer.BucketedCounterStream`3.Observe*
  commentId: Overload:Steeltoe.CircuitBreaker.Hystrix.Metric.Consumer.BucketedCounterStream`3.Observe
  name: Observe
  nameWithType: BucketedCounterStream<Event, Bucket, Output>.Observe
  fullName: Steeltoe.CircuitBreaker.Hystrix.Metric.Consumer.BucketedCounterStream<Event, Bucket, Output>.Observe
  nameWithType.vb: BucketedCounterStream(Of Event, Bucket, Output).Observe
  fullName.vb: Steeltoe.CircuitBreaker.Hystrix.Metric.Consumer.BucketedCounterStream(Of Event, Bucket, Output).Observe
- uid: System.IObservable{{Output}}
  commentId: T:System.IObservable{`2}
  parent: System
  definition: System.IObservable`1
  name: IObservable<Output>
  nameWithType: IObservable<Output>
  fullName: System.IObservable<Output>
  nameWithType.vb: IObservable(Of Output)
  fullName.vb: System.IObservable(Of Output)
  name.vb: IObservable(Of Output)
  spec.csharp:
  - uid: System.IObservable`1
    name: IObservable
    nameWithType: IObservable
    fullName: System.IObservable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: Output
    nameWithType: Output
    fullName: Output
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IObservable`1
    name: IObservable
    nameWithType: IObservable
    fullName: System.IObservable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: Output
    nameWithType: Output
    fullName: Output
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.CircuitBreaker.Hystrix.Metric.Consumer.BucketedCounterStream`3.Unsubscribe*
  commentId: Overload:Steeltoe.CircuitBreaker.Hystrix.Metric.Consumer.BucketedCounterStream`3.Unsubscribe
  name: Unsubscribe
  nameWithType: BucketedCounterStream<Event, Bucket, Output>.Unsubscribe
  fullName: Steeltoe.CircuitBreaker.Hystrix.Metric.Consumer.BucketedCounterStream<Event, Bucket, Output>.Unsubscribe
  nameWithType.vb: BucketedCounterStream(Of Event, Bucket, Output).Unsubscribe
  fullName.vb: Steeltoe.CircuitBreaker.Hystrix.Metric.Consumer.BucketedCounterStream(Of Event, Bucket, Output).Unsubscribe
