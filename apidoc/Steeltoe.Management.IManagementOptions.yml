### YamlMime:ManagedReference
items:
- uid: Steeltoe.Management.IManagementOptions
  commentId: T:Steeltoe.Management.IManagementOptions
  id: IManagementOptions
  parent: Steeltoe.Management
  children:
  - Steeltoe.Management.IManagementOptions.Enabled
  - Steeltoe.Management.IManagementOptions.EndpointOptions
  - Steeltoe.Management.IManagementOptions.Path
  - Steeltoe.Management.IManagementOptions.UseStatusCodeFromResponse
  langs:
  - csharp
  - vb
  name: IManagementOptions
  nameWithType: IManagementOptions
  fullName: Steeltoe.Management.IManagementOptions
  type: Interface
  source:
    remote:
      path: src/Management/src/Abstractions/IManagementOptions.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: IManagementOptions
    path: ../Steeltoe/src/Management/src/Abstractions/IManagementOptions.cs
    startLine: 8
  assemblies:
  - Steeltoe.Management.Abstractions
  namespace: Steeltoe.Management
  syntax:
    content: public interface IManagementOptions
    content.vb: Public Interface IManagementOptions
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Steeltoe.Management.IManagementOptions.Enabled
  commentId: P:Steeltoe.Management.IManagementOptions.Enabled
  id: Enabled
  parent: Steeltoe.Management.IManagementOptions
  langs:
  - csharp
  - vb
  name: Enabled
  nameWithType: IManagementOptions.Enabled
  fullName: Steeltoe.Management.IManagementOptions.Enabled
  type: Property
  source:
    remote:
      path: src/Management/src/Abstractions/IManagementOptions.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Enabled
    path: ../Steeltoe/src/Management/src/Abstractions/IManagementOptions.cs
    startLine: 10
  assemblies:
  - Steeltoe.Management.Abstractions
  namespace: Steeltoe.Management
  syntax:
    content: bool? Enabled { get; }
    parameters: []
    return:
      type: System.Nullable{System.Boolean}
    content.vb: ReadOnly Property Enabled As Boolean?
  overload: Steeltoe.Management.IManagementOptions.Enabled*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Steeltoe.Management.IManagementOptions.Path
  commentId: P:Steeltoe.Management.IManagementOptions.Path
  id: Path
  parent: Steeltoe.Management.IManagementOptions
  langs:
  - csharp
  - vb
  name: Path
  nameWithType: IManagementOptions.Path
  fullName: Steeltoe.Management.IManagementOptions.Path
  type: Property
  source:
    remote:
      path: src/Management/src/Abstractions/IManagementOptions.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Path
    path: ../Steeltoe/src/Management/src/Abstractions/IManagementOptions.cs
    startLine: 12
  assemblies:
  - Steeltoe.Management.Abstractions
  namespace: Steeltoe.Management
  syntax:
    content: string Path { get; }
    parameters: []
    return:
      type: System.String
    content.vb: ReadOnly Property Path As String
  overload: Steeltoe.Management.IManagementOptions.Path*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Steeltoe.Management.IManagementOptions.EndpointOptions
  commentId: P:Steeltoe.Management.IManagementOptions.EndpointOptions
  id: EndpointOptions
  parent: Steeltoe.Management.IManagementOptions
  langs:
  - csharp
  - vb
  name: EndpointOptions
  nameWithType: IManagementOptions.EndpointOptions
  fullName: Steeltoe.Management.IManagementOptions.EndpointOptions
  type: Property
  source:
    remote:
      path: src/Management/src/Abstractions/IManagementOptions.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: EndpointOptions
    path: ../Steeltoe/src/Management/src/Abstractions/IManagementOptions.cs
    startLine: 14
  assemblies:
  - Steeltoe.Management.Abstractions
  namespace: Steeltoe.Management
  syntax:
    content: List<IEndpointOptions> EndpointOptions { get; }
    parameters: []
    return:
      type: System.Collections.Generic.List{Steeltoe.Management.IEndpointOptions}
    content.vb: ReadOnly Property EndpointOptions As List(Of IEndpointOptions)
  overload: Steeltoe.Management.IManagementOptions.EndpointOptions*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Steeltoe.Management.IManagementOptions.UseStatusCodeFromResponse
  commentId: P:Steeltoe.Management.IManagementOptions.UseStatusCodeFromResponse
  id: UseStatusCodeFromResponse
  parent: Steeltoe.Management.IManagementOptions
  langs:
  - csharp
  - vb
  name: UseStatusCodeFromResponse
  nameWithType: IManagementOptions.UseStatusCodeFromResponse
  fullName: Steeltoe.Management.IManagementOptions.UseStatusCodeFromResponse
  type: Property
  source:
    remote:
      path: src/Management/src/Abstractions/IManagementOptions.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: UseStatusCodeFromResponse
    path: ../Steeltoe/src/Management/src/Abstractions/IManagementOptions.cs
    startLine: 16
  assemblies:
  - Steeltoe.Management.Abstractions
  namespace: Steeltoe.Management
  syntax:
    content: bool UseStatusCodeFromResponse { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Property UseStatusCodeFromResponse As Boolean
  overload: Steeltoe.Management.IManagementOptions.UseStatusCodeFromResponse*
  modifiers.csharp:
  - get
  - set
references:
- uid: Steeltoe.Management
  commentId: N:Steeltoe.Management
  name: Steeltoe.Management
  nameWithType: Steeltoe.Management
  fullName: Steeltoe.Management
- uid: Steeltoe.Management.IManagementOptions.Enabled*
  commentId: Overload:Steeltoe.Management.IManagementOptions.Enabled
  name: Enabled
  nameWithType: IManagementOptions.Enabled
  fullName: Steeltoe.Management.IManagementOptions.Enabled
- uid: System.Nullable{System.Boolean}
  commentId: T:System.Nullable{System.Boolean}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Boolean>
  nameWithType: Nullable<Boolean>
  fullName: System.Nullable<System.Boolean>
  nameWithType.vb: Nullable(Of Boolean)
  fullName.vb: System.Nullable(Of System.Boolean)
  name.vb: Nullable(Of Boolean)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Steeltoe.Management.IManagementOptions.Path*
  commentId: Overload:Steeltoe.Management.IManagementOptions.Path
  name: Path
  nameWithType: IManagementOptions.Path
  fullName: Steeltoe.Management.IManagementOptions.Path
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Steeltoe.Management.IManagementOptions.EndpointOptions*
  commentId: Overload:Steeltoe.Management.IManagementOptions.EndpointOptions
  name: EndpointOptions
  nameWithType: IManagementOptions.EndpointOptions
  fullName: Steeltoe.Management.IManagementOptions.EndpointOptions
- uid: System.Collections.Generic.List{Steeltoe.Management.IEndpointOptions}
  commentId: T:System.Collections.Generic.List{Steeltoe.Management.IEndpointOptions}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<IEndpointOptions>
  nameWithType: List<IEndpointOptions>
  fullName: System.Collections.Generic.List<Steeltoe.Management.IEndpointOptions>
  nameWithType.vb: List(Of IEndpointOptions)
  fullName.vb: System.Collections.Generic.List(Of Steeltoe.Management.IEndpointOptions)
  name.vb: List(Of IEndpointOptions)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Steeltoe.Management.IEndpointOptions
    name: IEndpointOptions
    nameWithType: IEndpointOptions
    fullName: Steeltoe.Management.IEndpointOptions
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Steeltoe.Management.IEndpointOptions
    name: IEndpointOptions
    nameWithType: IEndpointOptions
    fullName: Steeltoe.Management.IEndpointOptions
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Steeltoe.Management.IManagementOptions.UseStatusCodeFromResponse*
  commentId: Overload:Steeltoe.Management.IManagementOptions.UseStatusCodeFromResponse
  name: UseStatusCodeFromResponse
  nameWithType: IManagementOptions.UseStatusCodeFromResponse
  fullName: Steeltoe.Management.IManagementOptions.UseStatusCodeFromResponse
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
