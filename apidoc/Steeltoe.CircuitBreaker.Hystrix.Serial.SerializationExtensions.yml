### YamlMime:ManagedReference
items:
- uid: Steeltoe.CircuitBreaker.Hystrix.Serial.SerializationExtensions
  commentId: T:Steeltoe.CircuitBreaker.Hystrix.Serial.SerializationExtensions
  id: SerializationExtensions
  parent: Steeltoe.CircuitBreaker.Hystrix.Serial
  children:
  - Steeltoe.CircuitBreaker.Hystrix.Serial.SerializationExtensions.WriteArrayFieldStart(JsonTextWriter,System.String)
  - Steeltoe.CircuitBreaker.Hystrix.Serial.SerializationExtensions.WriteBooleanField(JsonTextWriter,System.String,System.Boolean)
  - Steeltoe.CircuitBreaker.Hystrix.Serial.SerializationExtensions.WriteIntegerField(JsonTextWriter,System.String,System.Int32)
  - Steeltoe.CircuitBreaker.Hystrix.Serial.SerializationExtensions.WriteLongField(JsonTextWriter,System.String,System.Int64)
  - Steeltoe.CircuitBreaker.Hystrix.Serial.SerializationExtensions.WriteObjectFieldStart(JsonTextWriter,System.String)
  - Steeltoe.CircuitBreaker.Hystrix.Serial.SerializationExtensions.WriteStringField(JsonTextWriter,System.String,System.String)
  langs:
  - csharp
  - vb
  name: SerializationExtensions
  nameWithType: SerializationExtensions
  fullName: Steeltoe.CircuitBreaker.Hystrix.Serial.SerializationExtensions
  type: Class
  source:
    remote:
      path: src/CircuitBreaker/src/HystrixBase/Serial/SerializationExtensions.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: SerializationExtensions
    path: ../Steeltoe/src/CircuitBreaker/src/HystrixBase/Serial/SerializationExtensions.cs
    startLine: 8
  assemblies:
  - Steeltoe.CircuitBreaker.HystrixBase
  namespace: Steeltoe.CircuitBreaker.Hystrix.Serial
  syntax:
    content: public static class SerializationExtensions
    content.vb: Public Module SerializationExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Steeltoe.CircuitBreaker.Hystrix.Serial.SerializationExtensions.WriteStringField(JsonTextWriter,System.String,System.String)
  commentId: M:Steeltoe.CircuitBreaker.Hystrix.Serial.SerializationExtensions.WriteStringField(JsonTextWriter,System.String,System.String)
  id: WriteStringField(JsonTextWriter,System.String,System.String)
  isExtensionMethod: true
  parent: Steeltoe.CircuitBreaker.Hystrix.Serial.SerializationExtensions
  langs:
  - csharp
  - vb
  name: WriteStringField(JsonTextWriter, String, String)
  nameWithType: SerializationExtensions.WriteStringField(JsonTextWriter, String, String)
  fullName: Steeltoe.CircuitBreaker.Hystrix.Serial.SerializationExtensions.WriteStringField(JsonTextWriter, System.String, System.String)
  type: Method
  source:
    remote:
      path: src/CircuitBreaker/src/HystrixBase/Serial/SerializationExtensions.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: WriteStringField
    path: ../Steeltoe/src/CircuitBreaker/src/HystrixBase/Serial/SerializationExtensions.cs
    startLine: 10
  assemblies:
  - Steeltoe.CircuitBreaker.HystrixBase
  namespace: Steeltoe.CircuitBreaker.Hystrix.Serial
  syntax:
    content: public static void WriteStringField(this JsonTextWriter writer, string fieldName, string fieldValue)
    parameters:
    - id: writer
      type: JsonTextWriter
    - id: fieldName
      type: System.String
    - id: fieldValue
      type: System.String
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Sub WriteStringField(writer As JsonTextWriter, fieldName As String, fieldValue As String)
  overload: Steeltoe.CircuitBreaker.Hystrix.Serial.SerializationExtensions.WriteStringField*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Steeltoe.CircuitBreaker.Hystrix.Serial.SerializationExtensions.WriteLongField(JsonTextWriter,System.String,System.Int64)
  commentId: M:Steeltoe.CircuitBreaker.Hystrix.Serial.SerializationExtensions.WriteLongField(JsonTextWriter,System.String,System.Int64)
  id: WriteLongField(JsonTextWriter,System.String,System.Int64)
  isExtensionMethod: true
  parent: Steeltoe.CircuitBreaker.Hystrix.Serial.SerializationExtensions
  langs:
  - csharp
  - vb
  name: WriteLongField(JsonTextWriter, String, Int64)
  nameWithType: SerializationExtensions.WriteLongField(JsonTextWriter, String, Int64)
  fullName: Steeltoe.CircuitBreaker.Hystrix.Serial.SerializationExtensions.WriteLongField(JsonTextWriter, System.String, System.Int64)
  type: Method
  source:
    remote:
      path: src/CircuitBreaker/src/HystrixBase/Serial/SerializationExtensions.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: WriteLongField
    path: ../Steeltoe/src/CircuitBreaker/src/HystrixBase/Serial/SerializationExtensions.cs
    startLine: 16
  assemblies:
  - Steeltoe.CircuitBreaker.HystrixBase
  namespace: Steeltoe.CircuitBreaker.Hystrix.Serial
  syntax:
    content: public static void WriteLongField(this JsonTextWriter writer, string fieldName, long fieldValue)
    parameters:
    - id: writer
      type: JsonTextWriter
    - id: fieldName
      type: System.String
    - id: fieldValue
      type: System.Int64
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Sub WriteLongField(writer As JsonTextWriter, fieldName As String, fieldValue As Long)
  overload: Steeltoe.CircuitBreaker.Hystrix.Serial.SerializationExtensions.WriteLongField*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Steeltoe.CircuitBreaker.Hystrix.Serial.SerializationExtensions.WriteBooleanField(JsonTextWriter,System.String,System.Boolean)
  commentId: M:Steeltoe.CircuitBreaker.Hystrix.Serial.SerializationExtensions.WriteBooleanField(JsonTextWriter,System.String,System.Boolean)
  id: WriteBooleanField(JsonTextWriter,System.String,System.Boolean)
  isExtensionMethod: true
  parent: Steeltoe.CircuitBreaker.Hystrix.Serial.SerializationExtensions
  langs:
  - csharp
  - vb
  name: WriteBooleanField(JsonTextWriter, String, Boolean)
  nameWithType: SerializationExtensions.WriteBooleanField(JsonTextWriter, String, Boolean)
  fullName: Steeltoe.CircuitBreaker.Hystrix.Serial.SerializationExtensions.WriteBooleanField(JsonTextWriter, System.String, System.Boolean)
  type: Method
  source:
    remote:
      path: src/CircuitBreaker/src/HystrixBase/Serial/SerializationExtensions.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: WriteBooleanField
    path: ../Steeltoe/src/CircuitBreaker/src/HystrixBase/Serial/SerializationExtensions.cs
    startLine: 22
  assemblies:
  - Steeltoe.CircuitBreaker.HystrixBase
  namespace: Steeltoe.CircuitBreaker.Hystrix.Serial
  syntax:
    content: public static void WriteBooleanField(this JsonTextWriter writer, string fieldName, bool fieldValue)
    parameters:
    - id: writer
      type: JsonTextWriter
    - id: fieldName
      type: System.String
    - id: fieldValue
      type: System.Boolean
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Sub WriteBooleanField(writer As JsonTextWriter, fieldName As String, fieldValue As Boolean)
  overload: Steeltoe.CircuitBreaker.Hystrix.Serial.SerializationExtensions.WriteBooleanField*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Steeltoe.CircuitBreaker.Hystrix.Serial.SerializationExtensions.WriteIntegerField(JsonTextWriter,System.String,System.Int32)
  commentId: M:Steeltoe.CircuitBreaker.Hystrix.Serial.SerializationExtensions.WriteIntegerField(JsonTextWriter,System.String,System.Int32)
  id: WriteIntegerField(JsonTextWriter,System.String,System.Int32)
  isExtensionMethod: true
  parent: Steeltoe.CircuitBreaker.Hystrix.Serial.SerializationExtensions
  langs:
  - csharp
  - vb
  name: WriteIntegerField(JsonTextWriter, String, Int32)
  nameWithType: SerializationExtensions.WriteIntegerField(JsonTextWriter, String, Int32)
  fullName: Steeltoe.CircuitBreaker.Hystrix.Serial.SerializationExtensions.WriteIntegerField(JsonTextWriter, System.String, System.Int32)
  type: Method
  source:
    remote:
      path: src/CircuitBreaker/src/HystrixBase/Serial/SerializationExtensions.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: WriteIntegerField
    path: ../Steeltoe/src/CircuitBreaker/src/HystrixBase/Serial/SerializationExtensions.cs
    startLine: 28
  assemblies:
  - Steeltoe.CircuitBreaker.HystrixBase
  namespace: Steeltoe.CircuitBreaker.Hystrix.Serial
  syntax:
    content: public static void WriteIntegerField(this JsonTextWriter writer, string fieldName, int fieldValue)
    parameters:
    - id: writer
      type: JsonTextWriter
    - id: fieldName
      type: System.String
    - id: fieldValue
      type: System.Int32
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Sub WriteIntegerField(writer As JsonTextWriter, fieldName As String, fieldValue As Integer)
  overload: Steeltoe.CircuitBreaker.Hystrix.Serial.SerializationExtensions.WriteIntegerField*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Steeltoe.CircuitBreaker.Hystrix.Serial.SerializationExtensions.WriteObjectFieldStart(JsonTextWriter,System.String)
  commentId: M:Steeltoe.CircuitBreaker.Hystrix.Serial.SerializationExtensions.WriteObjectFieldStart(JsonTextWriter,System.String)
  id: WriteObjectFieldStart(JsonTextWriter,System.String)
  isExtensionMethod: true
  parent: Steeltoe.CircuitBreaker.Hystrix.Serial.SerializationExtensions
  langs:
  - csharp
  - vb
  name: WriteObjectFieldStart(JsonTextWriter, String)
  nameWithType: SerializationExtensions.WriteObjectFieldStart(JsonTextWriter, String)
  fullName: Steeltoe.CircuitBreaker.Hystrix.Serial.SerializationExtensions.WriteObjectFieldStart(JsonTextWriter, System.String)
  type: Method
  source:
    remote:
      path: src/CircuitBreaker/src/HystrixBase/Serial/SerializationExtensions.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: WriteObjectFieldStart
    path: ../Steeltoe/src/CircuitBreaker/src/HystrixBase/Serial/SerializationExtensions.cs
    startLine: 34
  assemblies:
  - Steeltoe.CircuitBreaker.HystrixBase
  namespace: Steeltoe.CircuitBreaker.Hystrix.Serial
  syntax:
    content: public static void WriteObjectFieldStart(this JsonTextWriter writer, string fieldName)
    parameters:
    - id: writer
      type: JsonTextWriter
    - id: fieldName
      type: System.String
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Sub WriteObjectFieldStart(writer As JsonTextWriter, fieldName As String)
  overload: Steeltoe.CircuitBreaker.Hystrix.Serial.SerializationExtensions.WriteObjectFieldStart*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Steeltoe.CircuitBreaker.Hystrix.Serial.SerializationExtensions.WriteArrayFieldStart(JsonTextWriter,System.String)
  commentId: M:Steeltoe.CircuitBreaker.Hystrix.Serial.SerializationExtensions.WriteArrayFieldStart(JsonTextWriter,System.String)
  id: WriteArrayFieldStart(JsonTextWriter,System.String)
  isExtensionMethod: true
  parent: Steeltoe.CircuitBreaker.Hystrix.Serial.SerializationExtensions
  langs:
  - csharp
  - vb
  name: WriteArrayFieldStart(JsonTextWriter, String)
  nameWithType: SerializationExtensions.WriteArrayFieldStart(JsonTextWriter, String)
  fullName: Steeltoe.CircuitBreaker.Hystrix.Serial.SerializationExtensions.WriteArrayFieldStart(JsonTextWriter, System.String)
  type: Method
  source:
    remote:
      path: src/CircuitBreaker/src/HystrixBase/Serial/SerializationExtensions.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: WriteArrayFieldStart
    path: ../Steeltoe/src/CircuitBreaker/src/HystrixBase/Serial/SerializationExtensions.cs
    startLine: 40
  assemblies:
  - Steeltoe.CircuitBreaker.HystrixBase
  namespace: Steeltoe.CircuitBreaker.Hystrix.Serial
  syntax:
    content: public static void WriteArrayFieldStart(this JsonTextWriter writer, string fieldName)
    parameters:
    - id: writer
      type: JsonTextWriter
    - id: fieldName
      type: System.String
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Sub WriteArrayFieldStart(writer As JsonTextWriter, fieldName As String)
  overload: Steeltoe.CircuitBreaker.Hystrix.Serial.SerializationExtensions.WriteArrayFieldStart*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Steeltoe.CircuitBreaker.Hystrix.Serial
  commentId: N:Steeltoe.CircuitBreaker.Hystrix.Serial
  name: Steeltoe.CircuitBreaker.Hystrix.Serial
  nameWithType: Steeltoe.CircuitBreaker.Hystrix.Serial
  fullName: Steeltoe.CircuitBreaker.Hystrix.Serial
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Steeltoe.CircuitBreaker.Hystrix.Serial.SerializationExtensions.WriteStringField*
  commentId: Overload:Steeltoe.CircuitBreaker.Hystrix.Serial.SerializationExtensions.WriteStringField
  name: WriteStringField
  nameWithType: SerializationExtensions.WriteStringField
  fullName: Steeltoe.CircuitBreaker.Hystrix.Serial.SerializationExtensions.WriteStringField
- uid: JsonTextWriter
  isExternal: true
  name: JsonTextWriter
  nameWithType: JsonTextWriter
  fullName: JsonTextWriter
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Steeltoe.CircuitBreaker.Hystrix.Serial.SerializationExtensions.WriteLongField*
  commentId: Overload:Steeltoe.CircuitBreaker.Hystrix.Serial.SerializationExtensions.WriteLongField
  name: WriteLongField
  nameWithType: SerializationExtensions.WriteLongField
  fullName: Steeltoe.CircuitBreaker.Hystrix.Serial.SerializationExtensions.WriteLongField
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: Steeltoe.CircuitBreaker.Hystrix.Serial.SerializationExtensions.WriteBooleanField*
  commentId: Overload:Steeltoe.CircuitBreaker.Hystrix.Serial.SerializationExtensions.WriteBooleanField
  name: WriteBooleanField
  nameWithType: SerializationExtensions.WriteBooleanField
  fullName: Steeltoe.CircuitBreaker.Hystrix.Serial.SerializationExtensions.WriteBooleanField
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Steeltoe.CircuitBreaker.Hystrix.Serial.SerializationExtensions.WriteIntegerField*
  commentId: Overload:Steeltoe.CircuitBreaker.Hystrix.Serial.SerializationExtensions.WriteIntegerField
  name: WriteIntegerField
  nameWithType: SerializationExtensions.WriteIntegerField
  fullName: Steeltoe.CircuitBreaker.Hystrix.Serial.SerializationExtensions.WriteIntegerField
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Steeltoe.CircuitBreaker.Hystrix.Serial.SerializationExtensions.WriteObjectFieldStart*
  commentId: Overload:Steeltoe.CircuitBreaker.Hystrix.Serial.SerializationExtensions.WriteObjectFieldStart
  name: WriteObjectFieldStart
  nameWithType: SerializationExtensions.WriteObjectFieldStart
  fullName: Steeltoe.CircuitBreaker.Hystrix.Serial.SerializationExtensions.WriteObjectFieldStart
- uid: Steeltoe.CircuitBreaker.Hystrix.Serial.SerializationExtensions.WriteArrayFieldStart*
  commentId: Overload:Steeltoe.CircuitBreaker.Hystrix.Serial.SerializationExtensions.WriteArrayFieldStart
  name: WriteArrayFieldStart
  nameWithType: SerializationExtensions.WriteArrayFieldStart
  fullName: Steeltoe.CircuitBreaker.Hystrix.Serial.SerializationExtensions.WriteArrayFieldStart
