### YamlMime:ManagedReference
items:
- uid: Steeltoe.CircuitBreaker.Hystrix.HystrixCachedTask`1
  commentId: T:Steeltoe.CircuitBreaker.Hystrix.HystrixCachedTask`1
  id: HystrixCachedTask`1
  parent: Steeltoe.CircuitBreaker.Hystrix
  children:
  - Steeltoe.CircuitBreaker.Hystrix.HystrixCachedTask`1.#ctor
  - Steeltoe.CircuitBreaker.Hystrix.HystrixCachedTask`1.CachedTask
  langs:
  - csharp
  - vb
  name: HystrixCachedTask<T>
  nameWithType: HystrixCachedTask<T>
  fullName: Steeltoe.CircuitBreaker.Hystrix.HystrixCachedTask<T>
  type: Class
  source:
    remote:
      path: src/CircuitBreaker/src/HystrixBase/HystrixCachedTask.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: HystrixCachedTask
    path: ../Steeltoe/src/CircuitBreaker/src/HystrixBase/HystrixCachedTask.cs
    startLine: 8
  assemblies:
  - Steeltoe.CircuitBreaker.HystrixBase
  namespace: Steeltoe.CircuitBreaker.Hystrix
  syntax:
    content: public class HystrixCachedTask<T>
    typeParameters:
    - id: T
    content.vb: Public Class HystrixCachedTask(Of T)
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  nameWithType.vb: HystrixCachedTask(Of T)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
  fullName.vb: Steeltoe.CircuitBreaker.Hystrix.HystrixCachedTask(Of T)
  name.vb: HystrixCachedTask(Of T)
- uid: Steeltoe.CircuitBreaker.Hystrix.HystrixCachedTask`1.#ctor
  commentId: M:Steeltoe.CircuitBreaker.Hystrix.HystrixCachedTask`1.#ctor
  id: '#ctor'
  parent: Steeltoe.CircuitBreaker.Hystrix.HystrixCachedTask`1
  langs:
  - csharp
  - vb
  name: HystrixCachedTask()
  nameWithType: HystrixCachedTask<T>.HystrixCachedTask()
  fullName: Steeltoe.CircuitBreaker.Hystrix.HystrixCachedTask<T>.HystrixCachedTask()
  type: Constructor
  source:
    remote:
      path: src/CircuitBreaker/src/HystrixBase/HystrixCachedTask.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: .ctor
    path: ../Steeltoe/src/CircuitBreaker/src/HystrixBase/HystrixCachedTask.cs
    startLine: 10
  assemblies:
  - Steeltoe.CircuitBreaker.HystrixBase
  namespace: Steeltoe.CircuitBreaker.Hystrix
  syntax:
    content: public HystrixCachedTask()
    content.vb: Public Sub New
  overload: Steeltoe.CircuitBreaker.Hystrix.HystrixCachedTask`1.#ctor*
  nameWithType.vb: HystrixCachedTask(Of T).HystrixCachedTask()
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Steeltoe.CircuitBreaker.Hystrix.HystrixCachedTask(Of T).HystrixCachedTask()
- uid: Steeltoe.CircuitBreaker.Hystrix.HystrixCachedTask`1.CachedTask
  commentId: P:Steeltoe.CircuitBreaker.Hystrix.HystrixCachedTask`1.CachedTask
  id: CachedTask
  parent: Steeltoe.CircuitBreaker.Hystrix.HystrixCachedTask`1
  langs:
  - csharp
  - vb
  name: CachedTask
  nameWithType: HystrixCachedTask<T>.CachedTask
  fullName: Steeltoe.CircuitBreaker.Hystrix.HystrixCachedTask<T>.CachedTask
  type: Property
  source:
    remote:
      path: src/CircuitBreaker/src/HystrixBase/HystrixCachedTask.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: CachedTask
    path: ../Steeltoe/src/CircuitBreaker/src/HystrixBase/HystrixCachedTask.cs
    startLine: 14
  assemblies:
  - Steeltoe.CircuitBreaker.HystrixBase
  namespace: Steeltoe.CircuitBreaker.Hystrix
  syntax:
    content: public Task<T> CachedTask { get; set; }
    parameters: []
    return:
      type: System.Threading.Tasks.Task{{T}}
    content.vb: Public Property CachedTask As Task(Of T)
  overload: Steeltoe.CircuitBreaker.Hystrix.HystrixCachedTask`1.CachedTask*
  nameWithType.vb: HystrixCachedTask(Of T).CachedTask
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  fullName.vb: Steeltoe.CircuitBreaker.Hystrix.HystrixCachedTask(Of T).CachedTask
references:
- uid: Steeltoe.CircuitBreaker.Hystrix
  commentId: N:Steeltoe.CircuitBreaker.Hystrix
  name: Steeltoe.CircuitBreaker.Hystrix
  nameWithType: Steeltoe.CircuitBreaker.Hystrix
  fullName: Steeltoe.CircuitBreaker.Hystrix
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Steeltoe.CircuitBreaker.Hystrix.HystrixCachedTask`1.#ctor*
  commentId: Overload:Steeltoe.CircuitBreaker.Hystrix.HystrixCachedTask`1.#ctor
  name: HystrixCachedTask
  nameWithType: HystrixCachedTask<T>.HystrixCachedTask
  fullName: Steeltoe.CircuitBreaker.Hystrix.HystrixCachedTask<T>.HystrixCachedTask
  nameWithType.vb: HystrixCachedTask(Of T).HystrixCachedTask
  fullName.vb: Steeltoe.CircuitBreaker.Hystrix.HystrixCachedTask(Of T).HystrixCachedTask
- uid: Steeltoe.CircuitBreaker.Hystrix.HystrixCachedTask`1.CachedTask*
  commentId: Overload:Steeltoe.CircuitBreaker.Hystrix.HystrixCachedTask`1.CachedTask
  name: CachedTask
  nameWithType: HystrixCachedTask<T>.CachedTask
  fullName: Steeltoe.CircuitBreaker.Hystrix.HystrixCachedTask<T>.CachedTask
  nameWithType.vb: HystrixCachedTask(Of T).CachedTask
  fullName.vb: Steeltoe.CircuitBreaker.Hystrix.HystrixCachedTask(Of T).CachedTask
- uid: System.Threading.Tasks.Task{{T}}
  commentId: T:System.Threading.Tasks.Task{``0}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<T>
  nameWithType: Task<T>
  fullName: System.Threading.Tasks.Task<T>
  nameWithType.vb: Task(Of T)
  fullName.vb: System.Threading.Tasks.Task(Of T)
  name.vb: Task(Of T)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
