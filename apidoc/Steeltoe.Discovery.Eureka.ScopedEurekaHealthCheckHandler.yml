### YamlMime:ManagedReference
items:
- uid: Steeltoe.Discovery.Eureka.ScopedEurekaHealthCheckHandler
  commentId: T:Steeltoe.Discovery.Eureka.ScopedEurekaHealthCheckHandler
  id: ScopedEurekaHealthCheckHandler
  parent: Steeltoe.Discovery.Eureka
  children:
  - Steeltoe.Discovery.Eureka.ScopedEurekaHealthCheckHandler.#ctor(IServiceScopeFactory,ILogger{Steeltoe.Discovery.Eureka.ScopedEurekaHealthCheckHandler})
  - Steeltoe.Discovery.Eureka.ScopedEurekaHealthCheckHandler.GetStatus(Steeltoe.Discovery.Eureka.AppInfo.InstanceStatus)
  langs:
  - csharp
  - vb
  name: ScopedEurekaHealthCheckHandler
  nameWithType: ScopedEurekaHealthCheckHandler
  fullName: Steeltoe.Discovery.Eureka.ScopedEurekaHealthCheckHandler
  type: Class
  source:
    remote:
      path: src/Discovery/src/Eureka/ScopedEurekaHealthCheckHandler.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: ScopedEurekaHealthCheckHandler
    path: ../Steeltoe/src/Discovery/src/Eureka/ScopedEurekaHealthCheckHandler.cs
    startLine: 12
  assemblies:
  - Steeltoe.Discovery.Eureka
  namespace: Steeltoe.Discovery.Eureka
  syntax:
    content: 'public class ScopedEurekaHealthCheckHandler : EurekaHealthCheckHandler, IHealthCheckHandler'
    content.vb: >-
      Public Class ScopedEurekaHealthCheckHandler

          Inherits EurekaHealthCheckHandler

          Implements IHealthCheckHandler
  inheritance:
  - System.Object
  - Steeltoe.Discovery.Eureka.EurekaHealthCheckHandler
  implements:
  - Steeltoe.Discovery.Eureka.IHealthCheckHandler
  inheritedMembers:
  - Steeltoe.Discovery.Eureka.EurekaHealthCheckHandler._contributors
  - Steeltoe.Discovery.Eureka.EurekaHealthCheckHandler.DoHealthChecks(System.Collections.Generic.IList{IHealthContributor})
  - Steeltoe.Discovery.Eureka.EurekaHealthCheckHandler.AggregateStatus(System.Collections.Generic.List{HealthCheckResult})
  - Steeltoe.Discovery.Eureka.EurekaHealthCheckHandler.MapToInstanceStatus(HealthStatus)
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Steeltoe.Discovery.Eureka.ScopedEurekaHealthCheckHandler.#ctor(IServiceScopeFactory,ILogger{Steeltoe.Discovery.Eureka.ScopedEurekaHealthCheckHandler})
  commentId: M:Steeltoe.Discovery.Eureka.ScopedEurekaHealthCheckHandler.#ctor(IServiceScopeFactory,ILogger{Steeltoe.Discovery.Eureka.ScopedEurekaHealthCheckHandler})
  id: '#ctor(IServiceScopeFactory,ILogger{Steeltoe.Discovery.Eureka.ScopedEurekaHealthCheckHandler})'
  parent: Steeltoe.Discovery.Eureka.ScopedEurekaHealthCheckHandler
  langs:
  - csharp
  - vb
  name: ScopedEurekaHealthCheckHandler(IServiceScopeFactory, ILogger<ScopedEurekaHealthCheckHandler>)
  nameWithType: ScopedEurekaHealthCheckHandler.ScopedEurekaHealthCheckHandler(IServiceScopeFactory, ILogger<ScopedEurekaHealthCheckHandler>)
  fullName: Steeltoe.Discovery.Eureka.ScopedEurekaHealthCheckHandler.ScopedEurekaHealthCheckHandler(IServiceScopeFactory, ILogger<Steeltoe.Discovery.Eureka.ScopedEurekaHealthCheckHandler>)
  type: Constructor
  source:
    remote:
      path: src/Discovery/src/Eureka/ScopedEurekaHealthCheckHandler.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: .ctor
    path: ../Steeltoe/src/Discovery/src/Eureka/ScopedEurekaHealthCheckHandler.cs
    startLine: 16
  assemblies:
  - Steeltoe.Discovery.Eureka
  namespace: Steeltoe.Discovery.Eureka
  syntax:
    content: public ScopedEurekaHealthCheckHandler(IServiceScopeFactory scopeFactory, ILogger<ScopedEurekaHealthCheckHandler> logger = null)
    parameters:
    - id: scopeFactory
      type: IServiceScopeFactory
    - id: logger
      type: ILogger{Steeltoe.Discovery.Eureka.ScopedEurekaHealthCheckHandler}
    content.vb: Public Sub New(scopeFactory As IServiceScopeFactory, logger As ILogger(Of ScopedEurekaHealthCheckHandler) = Nothing)
  overload: Steeltoe.Discovery.Eureka.ScopedEurekaHealthCheckHandler.#ctor*
  nameWithType.vb: ScopedEurekaHealthCheckHandler.ScopedEurekaHealthCheckHandler(IServiceScopeFactory, ILogger(Of ScopedEurekaHealthCheckHandler))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Steeltoe.Discovery.Eureka.ScopedEurekaHealthCheckHandler.ScopedEurekaHealthCheckHandler(IServiceScopeFactory, ILogger(Of Steeltoe.Discovery.Eureka.ScopedEurekaHealthCheckHandler))
  name.vb: ScopedEurekaHealthCheckHandler(IServiceScopeFactory, ILogger(Of ScopedEurekaHealthCheckHandler))
- uid: Steeltoe.Discovery.Eureka.ScopedEurekaHealthCheckHandler.GetStatus(Steeltoe.Discovery.Eureka.AppInfo.InstanceStatus)
  commentId: M:Steeltoe.Discovery.Eureka.ScopedEurekaHealthCheckHandler.GetStatus(Steeltoe.Discovery.Eureka.AppInfo.InstanceStatus)
  id: GetStatus(Steeltoe.Discovery.Eureka.AppInfo.InstanceStatus)
  parent: Steeltoe.Discovery.Eureka.ScopedEurekaHealthCheckHandler
  langs:
  - csharp
  - vb
  name: GetStatus(InstanceStatus)
  nameWithType: ScopedEurekaHealthCheckHandler.GetStatus(InstanceStatus)
  fullName: Steeltoe.Discovery.Eureka.ScopedEurekaHealthCheckHandler.GetStatus(Steeltoe.Discovery.Eureka.AppInfo.InstanceStatus)
  type: Method
  source:
    remote:
      path: src/Discovery/src/Eureka/ScopedEurekaHealthCheckHandler.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: GetStatus
    path: ../Steeltoe/src/Discovery/src/Eureka/ScopedEurekaHealthCheckHandler.cs
    startLine: 22
  assemblies:
  - Steeltoe.Discovery.Eureka
  namespace: Steeltoe.Discovery.Eureka
  syntax:
    content: public override InstanceStatus GetStatus(InstanceStatus currentStatus)
    parameters:
    - id: currentStatus
      type: Steeltoe.Discovery.Eureka.AppInfo.InstanceStatus
    return:
      type: Steeltoe.Discovery.Eureka.AppInfo.InstanceStatus
    content.vb: Public Overrides Function GetStatus(currentStatus As InstanceStatus) As InstanceStatus
  overridden: Steeltoe.Discovery.Eureka.EurekaHealthCheckHandler.GetStatus(Steeltoe.Discovery.Eureka.AppInfo.InstanceStatus)
  overload: Steeltoe.Discovery.Eureka.ScopedEurekaHealthCheckHandler.GetStatus*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: Steeltoe.Discovery.Eureka
  commentId: N:Steeltoe.Discovery.Eureka
  name: Steeltoe.Discovery.Eureka
  nameWithType: Steeltoe.Discovery.Eureka
  fullName: Steeltoe.Discovery.Eureka
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Steeltoe.Discovery.Eureka.EurekaHealthCheckHandler
  commentId: T:Steeltoe.Discovery.Eureka.EurekaHealthCheckHandler
  parent: Steeltoe.Discovery.Eureka
  name: EurekaHealthCheckHandler
  nameWithType: EurekaHealthCheckHandler
  fullName: Steeltoe.Discovery.Eureka.EurekaHealthCheckHandler
- uid: Steeltoe.Discovery.Eureka.IHealthCheckHandler
  commentId: T:Steeltoe.Discovery.Eureka.IHealthCheckHandler
  parent: Steeltoe.Discovery.Eureka
  name: IHealthCheckHandler
  nameWithType: IHealthCheckHandler
  fullName: Steeltoe.Discovery.Eureka.IHealthCheckHandler
- uid: Steeltoe.Discovery.Eureka.EurekaHealthCheckHandler._contributors
  commentId: F:Steeltoe.Discovery.Eureka.EurekaHealthCheckHandler._contributors
  parent: Steeltoe.Discovery.Eureka.EurekaHealthCheckHandler
  name: _contributors
  nameWithType: EurekaHealthCheckHandler._contributors
  fullName: Steeltoe.Discovery.Eureka.EurekaHealthCheckHandler._contributors
- uid: Steeltoe.Discovery.Eureka.EurekaHealthCheckHandler.DoHealthChecks(System.Collections.Generic.IList{IHealthContributor})
  commentId: M:Steeltoe.Discovery.Eureka.EurekaHealthCheckHandler.DoHealthChecks(System.Collections.Generic.IList{IHealthContributor})
  parent: Steeltoe.Discovery.Eureka.EurekaHealthCheckHandler
  isExternal: true
  name: DoHealthChecks(IList<IHealthContributor>)
  nameWithType: EurekaHealthCheckHandler.DoHealthChecks(IList<IHealthContributor>)
  fullName: Steeltoe.Discovery.Eureka.EurekaHealthCheckHandler.DoHealthChecks(System.Collections.Generic.IList<IHealthContributor>)
  nameWithType.vb: EurekaHealthCheckHandler.DoHealthChecks(IList(Of IHealthContributor))
  fullName.vb: Steeltoe.Discovery.Eureka.EurekaHealthCheckHandler.DoHealthChecks(System.Collections.Generic.IList(Of IHealthContributor))
  name.vb: DoHealthChecks(IList(Of IHealthContributor))
  spec.csharp:
  - uid: Steeltoe.Discovery.Eureka.EurekaHealthCheckHandler.DoHealthChecks(System.Collections.Generic.IList{IHealthContributor})
    name: DoHealthChecks
    nameWithType: EurekaHealthCheckHandler.DoHealthChecks
    fullName: Steeltoe.Discovery.Eureka.EurekaHealthCheckHandler.DoHealthChecks
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: IHealthContributor
    name: IHealthContributor
    nameWithType: IHealthContributor
    fullName: IHealthContributor
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Discovery.Eureka.EurekaHealthCheckHandler.DoHealthChecks(System.Collections.Generic.IList{IHealthContributor})
    name: DoHealthChecks
    nameWithType: EurekaHealthCheckHandler.DoHealthChecks
    fullName: Steeltoe.Discovery.Eureka.EurekaHealthCheckHandler.DoHealthChecks
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: IHealthContributor
    name: IHealthContributor
    nameWithType: IHealthContributor
    fullName: IHealthContributor
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Discovery.Eureka.EurekaHealthCheckHandler.AggregateStatus(System.Collections.Generic.List{HealthCheckResult})
  commentId: M:Steeltoe.Discovery.Eureka.EurekaHealthCheckHandler.AggregateStatus(System.Collections.Generic.List{HealthCheckResult})
  parent: Steeltoe.Discovery.Eureka.EurekaHealthCheckHandler
  isExternal: true
  name: AggregateStatus(List<HealthCheckResult>)
  nameWithType: EurekaHealthCheckHandler.AggregateStatus(List<HealthCheckResult>)
  fullName: Steeltoe.Discovery.Eureka.EurekaHealthCheckHandler.AggregateStatus(System.Collections.Generic.List<HealthCheckResult>)
  nameWithType.vb: EurekaHealthCheckHandler.AggregateStatus(List(Of HealthCheckResult))
  fullName.vb: Steeltoe.Discovery.Eureka.EurekaHealthCheckHandler.AggregateStatus(System.Collections.Generic.List(Of HealthCheckResult))
  name.vb: AggregateStatus(List(Of HealthCheckResult))
  spec.csharp:
  - uid: Steeltoe.Discovery.Eureka.EurekaHealthCheckHandler.AggregateStatus(System.Collections.Generic.List{HealthCheckResult})
    name: AggregateStatus
    nameWithType: EurekaHealthCheckHandler.AggregateStatus
    fullName: Steeltoe.Discovery.Eureka.EurekaHealthCheckHandler.AggregateStatus
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: HealthCheckResult
    name: HealthCheckResult
    nameWithType: HealthCheckResult
    fullName: HealthCheckResult
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Discovery.Eureka.EurekaHealthCheckHandler.AggregateStatus(System.Collections.Generic.List{HealthCheckResult})
    name: AggregateStatus
    nameWithType: EurekaHealthCheckHandler.AggregateStatus
    fullName: Steeltoe.Discovery.Eureka.EurekaHealthCheckHandler.AggregateStatus
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: HealthCheckResult
    name: HealthCheckResult
    nameWithType: HealthCheckResult
    fullName: HealthCheckResult
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Discovery.Eureka.EurekaHealthCheckHandler.MapToInstanceStatus(HealthStatus)
  commentId: M:Steeltoe.Discovery.Eureka.EurekaHealthCheckHandler.MapToInstanceStatus(HealthStatus)
  parent: Steeltoe.Discovery.Eureka.EurekaHealthCheckHandler
  isExternal: true
  name: MapToInstanceStatus(HealthStatus)
  nameWithType: EurekaHealthCheckHandler.MapToInstanceStatus(HealthStatus)
  fullName: Steeltoe.Discovery.Eureka.EurekaHealthCheckHandler.MapToInstanceStatus(HealthStatus)
  spec.csharp:
  - uid: Steeltoe.Discovery.Eureka.EurekaHealthCheckHandler.MapToInstanceStatus(HealthStatus)
    name: MapToInstanceStatus
    nameWithType: EurekaHealthCheckHandler.MapToInstanceStatus
    fullName: Steeltoe.Discovery.Eureka.EurekaHealthCheckHandler.MapToInstanceStatus
  - name: (
    nameWithType: (
    fullName: (
  - uid: HealthStatus
    name: HealthStatus
    nameWithType: HealthStatus
    fullName: HealthStatus
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Discovery.Eureka.EurekaHealthCheckHandler.MapToInstanceStatus(HealthStatus)
    name: MapToInstanceStatus
    nameWithType: EurekaHealthCheckHandler.MapToInstanceStatus
    fullName: Steeltoe.Discovery.Eureka.EurekaHealthCheckHandler.MapToInstanceStatus
  - name: (
    nameWithType: (
    fullName: (
  - uid: HealthStatus
    name: HealthStatus
    nameWithType: HealthStatus
    fullName: HealthStatus
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Steeltoe.Discovery.Eureka.ScopedEurekaHealthCheckHandler.#ctor*
  commentId: Overload:Steeltoe.Discovery.Eureka.ScopedEurekaHealthCheckHandler.#ctor
  name: ScopedEurekaHealthCheckHandler
  nameWithType: ScopedEurekaHealthCheckHandler.ScopedEurekaHealthCheckHandler
  fullName: Steeltoe.Discovery.Eureka.ScopedEurekaHealthCheckHandler.ScopedEurekaHealthCheckHandler
- uid: IServiceScopeFactory
  commentId: '!:IServiceScopeFactory'
  isExternal: true
  name: IServiceScopeFactory
  nameWithType: IServiceScopeFactory
  fullName: IServiceScopeFactory
- uid: ILogger{Steeltoe.Discovery.Eureka.ScopedEurekaHealthCheckHandler}
  commentId: '!:ILogger{Steeltoe.Discovery.Eureka.ScopedEurekaHealthCheckHandler}'
  definition: ILogger`1
  name: ILogger<ScopedEurekaHealthCheckHandler>
  nameWithType: ILogger<ScopedEurekaHealthCheckHandler>
  fullName: ILogger<Steeltoe.Discovery.Eureka.ScopedEurekaHealthCheckHandler>
  nameWithType.vb: ILogger(Of ScopedEurekaHealthCheckHandler)
  fullName.vb: ILogger(Of Steeltoe.Discovery.Eureka.ScopedEurekaHealthCheckHandler)
  name.vb: ILogger(Of ScopedEurekaHealthCheckHandler)
  spec.csharp:
  - uid: ILogger`1
    name: ILogger
    nameWithType: ILogger
    fullName: ILogger
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Steeltoe.Discovery.Eureka.ScopedEurekaHealthCheckHandler
    name: ScopedEurekaHealthCheckHandler
    nameWithType: ScopedEurekaHealthCheckHandler
    fullName: Steeltoe.Discovery.Eureka.ScopedEurekaHealthCheckHandler
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: ILogger`1
    name: ILogger
    nameWithType: ILogger
    fullName: ILogger
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Steeltoe.Discovery.Eureka.ScopedEurekaHealthCheckHandler
    name: ScopedEurekaHealthCheckHandler
    nameWithType: ScopedEurekaHealthCheckHandler
    fullName: Steeltoe.Discovery.Eureka.ScopedEurekaHealthCheckHandler
  - name: )
    nameWithType: )
    fullName: )
- uid: ILogger`1
  isExternal: true
  name: ILogger<>
  nameWithType: ILogger<>
  fullName: ILogger<>
  nameWithType.vb: ILogger(Of )
  fullName.vb: ILogger(Of )
  name.vb: ILogger(Of )
  spec.csharp:
  - uid: ILogger`1
    name: ILogger
    nameWithType: ILogger
    fullName: ILogger
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: ILogger`1
    name: ILogger
    nameWithType: ILogger
    fullName: ILogger
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Discovery.Eureka.EurekaHealthCheckHandler.GetStatus(Steeltoe.Discovery.Eureka.AppInfo.InstanceStatus)
  commentId: M:Steeltoe.Discovery.Eureka.EurekaHealthCheckHandler.GetStatus(Steeltoe.Discovery.Eureka.AppInfo.InstanceStatus)
  parent: Steeltoe.Discovery.Eureka.EurekaHealthCheckHandler
  name: GetStatus(InstanceStatus)
  nameWithType: EurekaHealthCheckHandler.GetStatus(InstanceStatus)
  fullName: Steeltoe.Discovery.Eureka.EurekaHealthCheckHandler.GetStatus(Steeltoe.Discovery.Eureka.AppInfo.InstanceStatus)
  spec.csharp:
  - uid: Steeltoe.Discovery.Eureka.EurekaHealthCheckHandler.GetStatus(Steeltoe.Discovery.Eureka.AppInfo.InstanceStatus)
    name: GetStatus
    nameWithType: EurekaHealthCheckHandler.GetStatus
    fullName: Steeltoe.Discovery.Eureka.EurekaHealthCheckHandler.GetStatus
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Discovery.Eureka.AppInfo.InstanceStatus
    name: InstanceStatus
    nameWithType: InstanceStatus
    fullName: Steeltoe.Discovery.Eureka.AppInfo.InstanceStatus
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Discovery.Eureka.EurekaHealthCheckHandler.GetStatus(Steeltoe.Discovery.Eureka.AppInfo.InstanceStatus)
    name: GetStatus
    nameWithType: EurekaHealthCheckHandler.GetStatus
    fullName: Steeltoe.Discovery.Eureka.EurekaHealthCheckHandler.GetStatus
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Discovery.Eureka.AppInfo.InstanceStatus
    name: InstanceStatus
    nameWithType: InstanceStatus
    fullName: Steeltoe.Discovery.Eureka.AppInfo.InstanceStatus
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Discovery.Eureka.ScopedEurekaHealthCheckHandler.GetStatus*
  commentId: Overload:Steeltoe.Discovery.Eureka.ScopedEurekaHealthCheckHandler.GetStatus
  name: GetStatus
  nameWithType: ScopedEurekaHealthCheckHandler.GetStatus
  fullName: Steeltoe.Discovery.Eureka.ScopedEurekaHealthCheckHandler.GetStatus
- uid: Steeltoe.Discovery.Eureka.AppInfo.InstanceStatus
  commentId: T:Steeltoe.Discovery.Eureka.AppInfo.InstanceStatus
  parent: Steeltoe.Discovery.Eureka.AppInfo
  name: InstanceStatus
  nameWithType: InstanceStatus
  fullName: Steeltoe.Discovery.Eureka.AppInfo.InstanceStatus
- uid: Steeltoe.Discovery.Eureka.AppInfo
  commentId: N:Steeltoe.Discovery.Eureka.AppInfo
  name: Steeltoe.Discovery.Eureka.AppInfo
  nameWithType: Steeltoe.Discovery.Eureka.AppInfo
  fullName: Steeltoe.Discovery.Eureka.AppInfo
