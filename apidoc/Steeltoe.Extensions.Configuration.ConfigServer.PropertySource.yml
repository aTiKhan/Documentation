### YamlMime:ManagedReference
items:
- uid: Steeltoe.Extensions.Configuration.ConfigServer.PropertySource
  commentId: T:Steeltoe.Extensions.Configuration.ConfigServer.PropertySource
  id: PropertySource
  parent: Steeltoe.Extensions.Configuration.ConfigServer
  children:
  - Steeltoe.Extensions.Configuration.ConfigServer.PropertySource.#ctor
  - Steeltoe.Extensions.Configuration.ConfigServer.PropertySource.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.Object})
  - Steeltoe.Extensions.Configuration.ConfigServer.PropertySource.Name
  - Steeltoe.Extensions.Configuration.ConfigServer.PropertySource.Source
  langs:
  - csharp
  - vb
  name: PropertySource
  nameWithType: PropertySource
  fullName: Steeltoe.Extensions.Configuration.ConfigServer.PropertySource
  type: Class
  source:
    remote:
      path: src/Configuration/src/ConfigServerBase/PropertySource.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: PropertySource
    path: ../Steeltoe/src/Configuration/src/ConfigServerBase/PropertySource.cs
    startLine: 8
  assemblies:
  - Steeltoe.Extensions.Configuration.ConfigServerBase
  namespace: Steeltoe.Extensions.Configuration.ConfigServer
  syntax:
    content: public class PropertySource
    content.vb: Public Class PropertySource
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Steeltoe.Extensions.Configuration.ConfigServer.PropertySource.#ctor
  commentId: M:Steeltoe.Extensions.Configuration.ConfigServer.PropertySource.#ctor
  id: '#ctor'
  parent: Steeltoe.Extensions.Configuration.ConfigServer.PropertySource
  langs:
  - csharp
  - vb
  name: PropertySource()
  nameWithType: PropertySource.PropertySource()
  fullName: Steeltoe.Extensions.Configuration.ConfigServer.PropertySource.PropertySource()
  type: Constructor
  source:
    remote:
      path: src/Configuration/src/ConfigServerBase/PropertySource.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: .ctor
    path: ../Steeltoe/src/Configuration/src/ConfigServerBase/PropertySource.cs
    startLine: 10
  assemblies:
  - Steeltoe.Extensions.Configuration.ConfigServerBase
  namespace: Steeltoe.Extensions.Configuration.ConfigServer
  syntax:
    content: public PropertySource()
    content.vb: Public Sub New
  overload: Steeltoe.Extensions.Configuration.ConfigServer.PropertySource.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Steeltoe.Extensions.Configuration.ConfigServer.PropertySource.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.Object})
  commentId: M:Steeltoe.Extensions.Configuration.ConfigServer.PropertySource.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.Object})
  id: '#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.Object})'
  parent: Steeltoe.Extensions.Configuration.ConfigServer.PropertySource
  langs:
  - csharp
  - vb
  name: PropertySource(String, IDictionary<String, Object>)
  nameWithType: PropertySource.PropertySource(String, IDictionary<String, Object>)
  fullName: Steeltoe.Extensions.Configuration.ConfigServer.PropertySource.PropertySource(System.String, System.Collections.Generic.IDictionary<System.String, System.Object>)
  type: Constructor
  source:
    remote:
      path: src/Configuration/src/ConfigServerBase/PropertySource.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: .ctor
    path: ../Steeltoe/src/Configuration/src/ConfigServerBase/PropertySource.cs
    startLine: 14
  assemblies:
  - Steeltoe.Extensions.Configuration.ConfigServerBase
  namespace: Steeltoe.Extensions.Configuration.ConfigServer
  syntax:
    content: public PropertySource(string name, IDictionary<string, object> properties)
    parameters:
    - id: name
      type: System.String
    - id: properties
      type: System.Collections.Generic.IDictionary{System.String,System.Object}
    content.vb: Public Sub New(name As String, properties As IDictionary(Of String, Object))
  overload: Steeltoe.Extensions.Configuration.ConfigServer.PropertySource.#ctor*
  nameWithType.vb: PropertySource.PropertySource(String, IDictionary(Of String, Object))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Steeltoe.Extensions.Configuration.ConfigServer.PropertySource.PropertySource(System.String, System.Collections.Generic.IDictionary(Of System.String, System.Object))
  name.vb: PropertySource(String, IDictionary(Of String, Object))
- uid: Steeltoe.Extensions.Configuration.ConfigServer.PropertySource.Name
  commentId: P:Steeltoe.Extensions.Configuration.ConfigServer.PropertySource.Name
  id: Name
  parent: Steeltoe.Extensions.Configuration.ConfigServer.PropertySource
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: PropertySource.Name
  fullName: Steeltoe.Extensions.Configuration.ConfigServer.PropertySource.Name
  type: Property
  source:
    remote:
      path: src/Configuration/src/ConfigServerBase/PropertySource.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Name
    path: ../Steeltoe/src/Configuration/src/ConfigServerBase/PropertySource.cs
    startLine: 20
  assemblies:
  - Steeltoe.Extensions.Configuration.ConfigServerBase
  namespace: Steeltoe.Extensions.Configuration.ConfigServer
  syntax:
    content: public string Name { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Name As String
  overload: Steeltoe.Extensions.Configuration.ConfigServer.PropertySource.Name*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Steeltoe.Extensions.Configuration.ConfigServer.PropertySource.Source
  commentId: P:Steeltoe.Extensions.Configuration.ConfigServer.PropertySource.Source
  id: Source
  parent: Steeltoe.Extensions.Configuration.ConfigServer.PropertySource
  langs:
  - csharp
  - vb
  name: Source
  nameWithType: PropertySource.Source
  fullName: Steeltoe.Extensions.Configuration.ConfigServer.PropertySource.Source
  type: Property
  source:
    remote:
      path: src/Configuration/src/ConfigServerBase/PropertySource.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Source
    path: ../Steeltoe/src/Configuration/src/ConfigServerBase/PropertySource.cs
    startLine: 22
  assemblies:
  - Steeltoe.Extensions.Configuration.ConfigServerBase
  namespace: Steeltoe.Extensions.Configuration.ConfigServer
  syntax:
    content: public IDictionary<string, object> Source { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.IDictionary{System.String,System.Object}
    content.vb: Public Property Source As IDictionary(Of String, Object)
  overload: Steeltoe.Extensions.Configuration.ConfigServer.PropertySource.Source*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Steeltoe.Extensions.Configuration.ConfigServer
  commentId: N:Steeltoe.Extensions.Configuration.ConfigServer
  name: Steeltoe.Extensions.Configuration.ConfigServer
  nameWithType: Steeltoe.Extensions.Configuration.ConfigServer
  fullName: Steeltoe.Extensions.Configuration.ConfigServer
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Steeltoe.Extensions.Configuration.ConfigServer.PropertySource.#ctor*
  commentId: Overload:Steeltoe.Extensions.Configuration.ConfigServer.PropertySource.#ctor
  name: PropertySource
  nameWithType: PropertySource.PropertySource
  fullName: Steeltoe.Extensions.Configuration.ConfigServer.PropertySource.PropertySource
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Collections.Generic.IDictionary{System.String,System.Object}
  commentId: T:System.Collections.Generic.IDictionary{System.String,System.Object}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IDictionary`2
  name: IDictionary<String, Object>
  nameWithType: IDictionary<String, Object>
  fullName: System.Collections.Generic.IDictionary<System.String, System.Object>
  nameWithType.vb: IDictionary(Of String, Object)
  fullName.vb: System.Collections.Generic.IDictionary(Of System.String, System.Object)
  name.vb: IDictionary(Of String, Object)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IDictionary`2
  commentId: T:System.Collections.Generic.IDictionary`2
  isExternal: true
  name: IDictionary<TKey, TValue>
  nameWithType: IDictionary<TKey, TValue>
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>
  nameWithType.vb: IDictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.IDictionary(Of TKey, TValue)
  name.vb: IDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Steeltoe.Extensions.Configuration.ConfigServer.PropertySource.Name*
  commentId: Overload:Steeltoe.Extensions.Configuration.ConfigServer.PropertySource.Name
  name: Name
  nameWithType: PropertySource.Name
  fullName: Steeltoe.Extensions.Configuration.ConfigServer.PropertySource.Name
- uid: Steeltoe.Extensions.Configuration.ConfigServer.PropertySource.Source*
  commentId: Overload:Steeltoe.Extensions.Configuration.ConfigServer.PropertySource.Source
  name: Source
  nameWithType: PropertySource.Source
  fullName: Steeltoe.Extensions.Configuration.ConfigServer.PropertySource.Source
