### YamlMime:ManagedReference
items:
- uid: Steeltoe.Stream.Binder.IBinderTypeRegistry
  commentId: T:Steeltoe.Stream.Binder.IBinderTypeRegistry
  id: IBinderTypeRegistry
  parent: Steeltoe.Stream.Binder
  children:
  - Steeltoe.Stream.Binder.IBinderTypeRegistry.Get(System.String)
  - Steeltoe.Stream.Binder.IBinderTypeRegistry.GetAll
  langs:
  - csharp
  - vb
  name: IBinderTypeRegistry
  nameWithType: IBinderTypeRegistry
  fullName: Steeltoe.Stream.Binder.IBinderTypeRegistry
  type: Interface
  source:
    remote:
      path: src/Stream/src/Abstractions/Binder/IBinderTypeRegistry.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: IBinderTypeRegistry
    path: ../Steeltoe/src/Stream/src/Abstractions/Binder/IBinderTypeRegistry.cs
    startLine: 11
  assemblies:
  - Steeltoe.Stream.Abstractions
  namespace: Steeltoe.Stream.Binder
  summary: "\nTODO: See if this can be made internal\n"
  example: []
  syntax:
    content: public interface IBinderTypeRegistry
    content.vb: Public Interface IBinderTypeRegistry
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Steeltoe.Stream.Binder.IBinderTypeRegistry.Get(System.String)
  commentId: M:Steeltoe.Stream.Binder.IBinderTypeRegistry.Get(System.String)
  id: Get(System.String)
  parent: Steeltoe.Stream.Binder.IBinderTypeRegistry
  langs:
  - csharp
  - vb
  name: Get(String)
  nameWithType: IBinderTypeRegistry.Get(String)
  fullName: Steeltoe.Stream.Binder.IBinderTypeRegistry.Get(System.String)
  type: Method
  source:
    remote:
      path: src/Stream/src/Abstractions/Binder/IBinderTypeRegistry.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Get
    path: ../Steeltoe/src/Stream/src/Abstractions/Binder/IBinderTypeRegistry.cs
    startLine: 13
  assemblies:
  - Steeltoe.Stream.Abstractions
  namespace: Steeltoe.Stream.Binder
  syntax:
    content: IBinderType Get(string name)
    parameters:
    - id: name
      type: System.String
    return:
      type: Steeltoe.Stream.Binder.IBinderType
    content.vb: Function Get(name As String) As IBinderType
  overload: Steeltoe.Stream.Binder.IBinderTypeRegistry.Get*
- uid: Steeltoe.Stream.Binder.IBinderTypeRegistry.GetAll
  commentId: M:Steeltoe.Stream.Binder.IBinderTypeRegistry.GetAll
  id: GetAll
  parent: Steeltoe.Stream.Binder.IBinderTypeRegistry
  langs:
  - csharp
  - vb
  name: GetAll()
  nameWithType: IBinderTypeRegistry.GetAll()
  fullName: Steeltoe.Stream.Binder.IBinderTypeRegistry.GetAll()
  type: Method
  source:
    remote:
      path: src/Stream/src/Abstractions/Binder/IBinderTypeRegistry.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: GetAll
    path: ../Steeltoe/src/Stream/src/Abstractions/Binder/IBinderTypeRegistry.cs
    startLine: 15
  assemblies:
  - Steeltoe.Stream.Abstractions
  namespace: Steeltoe.Stream.Binder
  syntax:
    content: IDictionary<string, IBinderType> GetAll()
    return:
      type: System.Collections.Generic.IDictionary{System.String,Steeltoe.Stream.Binder.IBinderType}
    content.vb: Function GetAll As IDictionary(Of String, IBinderType)
  overload: Steeltoe.Stream.Binder.IBinderTypeRegistry.GetAll*
references:
- uid: Steeltoe.Stream.Binder
  commentId: N:Steeltoe.Stream.Binder
  name: Steeltoe.Stream.Binder
  nameWithType: Steeltoe.Stream.Binder
  fullName: Steeltoe.Stream.Binder
- uid: Steeltoe.Stream.Binder.IBinderTypeRegistry.Get*
  commentId: Overload:Steeltoe.Stream.Binder.IBinderTypeRegistry.Get
  name: Get
  nameWithType: IBinderTypeRegistry.Get
  fullName: Steeltoe.Stream.Binder.IBinderTypeRegistry.Get
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Steeltoe.Stream.Binder.IBinderType
  commentId: T:Steeltoe.Stream.Binder.IBinderType
  parent: Steeltoe.Stream.Binder
  name: IBinderType
  nameWithType: IBinderType
  fullName: Steeltoe.Stream.Binder.IBinderType
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Steeltoe.Stream.Binder.IBinderTypeRegistry.GetAll*
  commentId: Overload:Steeltoe.Stream.Binder.IBinderTypeRegistry.GetAll
  name: GetAll
  nameWithType: IBinderTypeRegistry.GetAll
  fullName: Steeltoe.Stream.Binder.IBinderTypeRegistry.GetAll
- uid: System.Collections.Generic.IDictionary{System.String,Steeltoe.Stream.Binder.IBinderType}
  commentId: T:System.Collections.Generic.IDictionary{System.String,Steeltoe.Stream.Binder.IBinderType}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IDictionary`2
  name: IDictionary<String, IBinderType>
  nameWithType: IDictionary<String, IBinderType>
  fullName: System.Collections.Generic.IDictionary<System.String, Steeltoe.Stream.Binder.IBinderType>
  nameWithType.vb: IDictionary(Of String, IBinderType)
  fullName.vb: System.Collections.Generic.IDictionary(Of System.String, Steeltoe.Stream.Binder.IBinderType)
  name.vb: IDictionary(Of String, IBinderType)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Stream.Binder.IBinderType
    name: IBinderType
    nameWithType: IBinderType
    fullName: Steeltoe.Stream.Binder.IBinderType
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Stream.Binder.IBinderType
    name: IBinderType
    nameWithType: IBinderType
    fullName: Steeltoe.Stream.Binder.IBinderType
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IDictionary`2
  commentId: T:System.Collections.Generic.IDictionary`2
  isExternal: true
  name: IDictionary<TKey, TValue>
  nameWithType: IDictionary<TKey, TValue>
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>
  nameWithType.vb: IDictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.IDictionary(Of TKey, TValue)
  name.vb: IDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
