### YamlMime:ManagedReference
items:
- uid: Steeltoe.Management.Endpoint.Env.EnvEndpoint
  commentId: T:Steeltoe.Management.Endpoint.Env.EnvEndpoint
  id: EnvEndpoint
  parent: Steeltoe.Management.Endpoint.Env
  children:
  - Steeltoe.Management.Endpoint.Env.EnvEndpoint.#ctor(Steeltoe.Management.Endpoint.Env.IEnvOptions,IConfiguration,IHostEnvironment,ILogger{Steeltoe.Management.Endpoint.Env.EnvEndpoint})
  - Steeltoe.Management.Endpoint.Env.EnvEndpoint.DoInvoke(IConfiguration)
  - Steeltoe.Management.Endpoint.Env.EnvEndpoint.GetPropertySourceDescriptor(IConfigurationProvider)
  - Steeltoe.Management.Endpoint.Env.EnvEndpoint.GetPropertySourceName(IConfigurationProvider)
  - Steeltoe.Management.Endpoint.Env.EnvEndpoint.GetPropertySources(IConfiguration)
  - Steeltoe.Management.Endpoint.Env.EnvEndpoint.Invoke
  - Steeltoe.Management.Endpoint.Env.EnvEndpoint.Options
  langs:
  - csharp
  - vb
  name: EnvEndpoint
  nameWithType: EnvEndpoint
  fullName: Steeltoe.Management.Endpoint.Env.EnvEndpoint
  type: Class
  source:
    remote:
      path: src/Management/src/EndpointBase/Env/EnvEndpoint.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: EnvEndpoint
    path: ../Steeltoe/src/Management/src/EndpointBase/Env/EnvEndpoint.cs
    startLine: 14
  assemblies:
  - Steeltoe.Management.EndpointBase
  namespace: Steeltoe.Management.Endpoint.Env
  syntax:
    content: 'public class EnvEndpoint : AbstractEndpoint<EnvironmentDescriptor>, IEndpoint<EnvironmentDescriptor>, IEndpoint'
    content.vb: >-
      Public Class EnvEndpoint

          Inherits AbstractEndpoint(Of EnvironmentDescriptor)

          Implements IEndpoint(Of EnvironmentDescriptor), IEndpoint
  inheritance:
  - System.Object
  - Steeltoe.Management.AbstractEndpoint
  - Steeltoe.Management.AbstractEndpoint{Steeltoe.Management.Endpoint.Env.EnvironmentDescriptor}
  implements:
  - Steeltoe.Management.IEndpoint{Steeltoe.Management.Endpoint.Env.EnvironmentDescriptor}
  - Steeltoe.Management.IEndpoint
  inheritedMembers:
  - Steeltoe.Management.AbstractEndpoint.options
  - Steeltoe.Management.AbstractEndpoint.Id
  - Steeltoe.Management.AbstractEndpoint.Enabled
  - Steeltoe.Management.AbstractEndpoint.Path
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - Steeltoe.Management.IEndpoint.Steeltoe.Management.Endpoint.EndPointExtensions.IsEnabled(Steeltoe.Management.IManagementOptions)
  - Steeltoe.Management.IEndpoint.Steeltoe.Management.Endpoint.EndPointExtensions.IsExposed(Steeltoe.Management.IManagementOptions)
  - Steeltoe.Management.IEndpoint.Steeltoe.Management.Endpoint.EndPointExtensions.ShouldInvoke(Steeltoe.Management.IManagementOptions,ILogger)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Steeltoe.Management.Endpoint.Env.EnvEndpoint.#ctor(Steeltoe.Management.Endpoint.Env.IEnvOptions,IConfiguration,IHostEnvironment,ILogger{Steeltoe.Management.Endpoint.Env.EnvEndpoint})
  commentId: M:Steeltoe.Management.Endpoint.Env.EnvEndpoint.#ctor(Steeltoe.Management.Endpoint.Env.IEnvOptions,IConfiguration,IHostEnvironment,ILogger{Steeltoe.Management.Endpoint.Env.EnvEndpoint})
  id: '#ctor(Steeltoe.Management.Endpoint.Env.IEnvOptions,IConfiguration,IHostEnvironment,ILogger{Steeltoe.Management.Endpoint.Env.EnvEndpoint})'
  parent: Steeltoe.Management.Endpoint.Env.EnvEndpoint
  langs:
  - csharp
  - vb
  name: EnvEndpoint(IEnvOptions, IConfiguration, IHostEnvironment, ILogger<EnvEndpoint>)
  nameWithType: EnvEndpoint.EnvEndpoint(IEnvOptions, IConfiguration, IHostEnvironment, ILogger<EnvEndpoint>)
  fullName: Steeltoe.Management.Endpoint.Env.EnvEndpoint.EnvEndpoint(Steeltoe.Management.Endpoint.Env.IEnvOptions, IConfiguration, IHostEnvironment, ILogger<Steeltoe.Management.Endpoint.Env.EnvEndpoint>)
  type: Constructor
  source:
    remote:
      path: src/Management/src/EndpointBase/Env/EnvEndpoint.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: .ctor
    path: ../Steeltoe/src/Management/src/EndpointBase/Env/EnvEndpoint.cs
    startLine: 22
  assemblies:
  - Steeltoe.Management.EndpointBase
  namespace: Steeltoe.Management.Endpoint.Env
  syntax:
    content: public EnvEndpoint(IEnvOptions options, IConfiguration configuration, IHostEnvironment env, ILogger<EnvEndpoint> logger = null)
    parameters:
    - id: options
      type: Steeltoe.Management.Endpoint.Env.IEnvOptions
    - id: configuration
      type: IConfiguration
    - id: env
      type: IHostEnvironment
    - id: logger
      type: ILogger{Steeltoe.Management.Endpoint.Env.EnvEndpoint}
    content.vb: Public Sub New(options As IEnvOptions, configuration As IConfiguration, env As IHostEnvironment, logger As ILogger(Of EnvEndpoint) = Nothing)
  overload: Steeltoe.Management.Endpoint.Env.EnvEndpoint.#ctor*
  nameWithType.vb: EnvEndpoint.EnvEndpoint(IEnvOptions, IConfiguration, IHostEnvironment, ILogger(Of EnvEndpoint))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Steeltoe.Management.Endpoint.Env.EnvEndpoint.EnvEndpoint(Steeltoe.Management.Endpoint.Env.IEnvOptions, IConfiguration, IHostEnvironment, ILogger(Of Steeltoe.Management.Endpoint.Env.EnvEndpoint))
  name.vb: EnvEndpoint(IEnvOptions, IConfiguration, IHostEnvironment, ILogger(Of EnvEndpoint))
- uid: Steeltoe.Management.Endpoint.Env.EnvEndpoint.Options
  commentId: P:Steeltoe.Management.Endpoint.Env.EnvEndpoint.Options
  id: Options
  parent: Steeltoe.Management.Endpoint.Env.EnvEndpoint
  langs:
  - csharp
  - vb
  name: Options
  nameWithType: EnvEndpoint.Options
  fullName: Steeltoe.Management.Endpoint.Env.EnvEndpoint.Options
  type: Property
  source:
    remote:
      path: src/Management/src/EndpointBase/Env/EnvEndpoint.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Options
    path: ../Steeltoe/src/Management/src/EndpointBase/Env/EnvEndpoint.cs
    startLine: 31
  assemblies:
  - Steeltoe.Management.EndpointBase
  namespace: Steeltoe.Management.Endpoint.Env
  syntax:
    content: public IEnvOptions Options { get; }
    parameters: []
    return:
      type: Steeltoe.Management.Endpoint.Env.IEnvOptions
    content.vb: Public ReadOnly Property Options As IEnvOptions
  overload: Steeltoe.Management.Endpoint.Env.EnvEndpoint.Options*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Steeltoe.Management.Endpoint.Env.EnvEndpoint.Invoke
  commentId: M:Steeltoe.Management.Endpoint.Env.EnvEndpoint.Invoke
  id: Invoke
  parent: Steeltoe.Management.Endpoint.Env.EnvEndpoint
  langs:
  - csharp
  - vb
  name: Invoke()
  nameWithType: EnvEndpoint.Invoke()
  fullName: Steeltoe.Management.Endpoint.Env.EnvEndpoint.Invoke()
  type: Method
  source:
    remote:
      path: src/Management/src/EndpointBase/Env/EnvEndpoint.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Invoke
    path: ../Steeltoe/src/Management/src/EndpointBase/Env/EnvEndpoint.cs
    startLine: 39
  assemblies:
  - Steeltoe.Management.EndpointBase
  namespace: Steeltoe.Management.Endpoint.Env
  syntax:
    content: public override EnvironmentDescriptor Invoke()
    return:
      type: Steeltoe.Management.Endpoint.Env.EnvironmentDescriptor
    content.vb: Public Overrides Function Invoke As EnvironmentDescriptor
  overridden: Steeltoe.Management.AbstractEndpoint{Steeltoe.Management.Endpoint.Env.EnvironmentDescriptor}.Invoke
  overload: Steeltoe.Management.Endpoint.Env.EnvEndpoint.Invoke*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Steeltoe.Management.Endpoint.Env.EnvEndpoint.DoInvoke(IConfiguration)
  commentId: M:Steeltoe.Management.Endpoint.Env.EnvEndpoint.DoInvoke(IConfiguration)
  id: DoInvoke(IConfiguration)
  parent: Steeltoe.Management.Endpoint.Env.EnvEndpoint
  langs:
  - csharp
  - vb
  name: DoInvoke(IConfiguration)
  nameWithType: EnvEndpoint.DoInvoke(IConfiguration)
  fullName: Steeltoe.Management.Endpoint.Env.EnvEndpoint.DoInvoke(IConfiguration)
  type: Method
  source:
    remote:
      path: src/Management/src/EndpointBase/Env/EnvEndpoint.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: DoInvoke
    path: ../Steeltoe/src/Management/src/EndpointBase/Env/EnvEndpoint.cs
    startLine: 44
  assemblies:
  - Steeltoe.Management.EndpointBase
  namespace: Steeltoe.Management.Endpoint.Env
  syntax:
    content: public EnvironmentDescriptor DoInvoke(IConfiguration configuration)
    parameters:
    - id: configuration
      type: IConfiguration
    return:
      type: Steeltoe.Management.Endpoint.Env.EnvironmentDescriptor
    content.vb: Public Function DoInvoke(configuration As IConfiguration) As EnvironmentDescriptor
  overload: Steeltoe.Management.Endpoint.Env.EnvEndpoint.DoInvoke*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Steeltoe.Management.Endpoint.Env.EnvEndpoint.GetPropertySources(IConfiguration)
  commentId: M:Steeltoe.Management.Endpoint.Env.EnvEndpoint.GetPropertySources(IConfiguration)
  id: GetPropertySources(IConfiguration)
  parent: Steeltoe.Management.Endpoint.Env.EnvEndpoint
  langs:
  - csharp
  - vb
  name: GetPropertySources(IConfiguration)
  nameWithType: EnvEndpoint.GetPropertySources(IConfiguration)
  fullName: Steeltoe.Management.Endpoint.Env.EnvEndpoint.GetPropertySources(IConfiguration)
  type: Method
  source:
    remote:
      path: src/Management/src/EndpointBase/Env/EnvEndpoint.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: GetPropertySources
    path: ../Steeltoe/src/Management/src/EndpointBase/Env/EnvEndpoint.cs
    startLine: 51
  assemblies:
  - Steeltoe.Management.EndpointBase
  namespace: Steeltoe.Management.Endpoint.Env
  syntax:
    content: public virtual IList<PropertySourceDescriptor> GetPropertySources(IConfiguration configuration)
    parameters:
    - id: configuration
      type: IConfiguration
    return:
      type: System.Collections.Generic.IList{Steeltoe.Management.Endpoint.Env.PropertySourceDescriptor}
    content.vb: Public Overridable Function GetPropertySources(configuration As IConfiguration) As IList(Of PropertySourceDescriptor)
  overload: Steeltoe.Management.Endpoint.Env.EnvEndpoint.GetPropertySources*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Steeltoe.Management.Endpoint.Env.EnvEndpoint.GetPropertySourceDescriptor(IConfigurationProvider)
  commentId: M:Steeltoe.Management.Endpoint.Env.EnvEndpoint.GetPropertySourceDescriptor(IConfigurationProvider)
  id: GetPropertySourceDescriptor(IConfigurationProvider)
  parent: Steeltoe.Management.Endpoint.Env.EnvEndpoint
  langs:
  - csharp
  - vb
  name: GetPropertySourceDescriptor(IConfigurationProvider)
  nameWithType: EnvEndpoint.GetPropertySourceDescriptor(IConfigurationProvider)
  fullName: Steeltoe.Management.Endpoint.Env.EnvEndpoint.GetPropertySourceDescriptor(IConfigurationProvider)
  type: Method
  source:
    remote:
      path: src/Management/src/EndpointBase/Env/EnvEndpoint.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: GetPropertySourceDescriptor
    path: ../Steeltoe/src/Management/src/EndpointBase/Env/EnvEndpoint.cs
    startLine: 77
  assemblies:
  - Steeltoe.Management.EndpointBase
  namespace: Steeltoe.Management.Endpoint.Env
  syntax:
    content: public virtual PropertySourceDescriptor GetPropertySourceDescriptor(IConfigurationProvider provider)
    parameters:
    - id: provider
      type: IConfigurationProvider
    return:
      type: Steeltoe.Management.Endpoint.Env.PropertySourceDescriptor
    content.vb: Public Overridable Function GetPropertySourceDescriptor(provider As IConfigurationProvider) As PropertySourceDescriptor
  overload: Steeltoe.Management.Endpoint.Env.EnvEndpoint.GetPropertySourceDescriptor*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Steeltoe.Management.Endpoint.Env.EnvEndpoint.GetPropertySourceName(IConfigurationProvider)
  commentId: M:Steeltoe.Management.Endpoint.Env.EnvEndpoint.GetPropertySourceName(IConfigurationProvider)
  id: GetPropertySourceName(IConfigurationProvider)
  parent: Steeltoe.Management.Endpoint.Env.EnvEndpoint
  langs:
  - csharp
  - vb
  name: GetPropertySourceName(IConfigurationProvider)
  nameWithType: EnvEndpoint.GetPropertySourceName(IConfigurationProvider)
  fullName: Steeltoe.Management.Endpoint.Env.EnvEndpoint.GetPropertySourceName(IConfigurationProvider)
  type: Method
  source:
    remote:
      path: src/Management/src/EndpointBase/Env/EnvEndpoint.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: GetPropertySourceName
    path: ../Steeltoe/src/Management/src/EndpointBase/Env/EnvEndpoint.cs
    startLine: 99
  assemblies:
  - Steeltoe.Management.EndpointBase
  namespace: Steeltoe.Management.Endpoint.Env
  syntax:
    content: public virtual string GetPropertySourceName(IConfigurationProvider provider)
    parameters:
    - id: provider
      type: IConfigurationProvider
    return:
      type: System.String
    content.vb: Public Overridable Function GetPropertySourceName(provider As IConfigurationProvider) As String
  overload: Steeltoe.Management.Endpoint.Env.EnvEndpoint.GetPropertySourceName*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
references:
- uid: Steeltoe.Management.Endpoint.Env
  commentId: N:Steeltoe.Management.Endpoint.Env
  name: Steeltoe.Management.Endpoint.Env
  nameWithType: Steeltoe.Management.Endpoint.Env
  fullName: Steeltoe.Management.Endpoint.Env
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Steeltoe.Management.AbstractEndpoint
  commentId: T:Steeltoe.Management.AbstractEndpoint
  parent: Steeltoe.Management
  name: AbstractEndpoint
  nameWithType: AbstractEndpoint
  fullName: Steeltoe.Management.AbstractEndpoint
- uid: Steeltoe.Management.AbstractEndpoint{Steeltoe.Management.Endpoint.Env.EnvironmentDescriptor}
  commentId: T:Steeltoe.Management.AbstractEndpoint{Steeltoe.Management.Endpoint.Env.EnvironmentDescriptor}
  parent: Steeltoe.Management
  definition: Steeltoe.Management.AbstractEndpoint`1
  name: AbstractEndpoint<EnvironmentDescriptor>
  nameWithType: AbstractEndpoint<EnvironmentDescriptor>
  fullName: Steeltoe.Management.AbstractEndpoint<Steeltoe.Management.Endpoint.Env.EnvironmentDescriptor>
  nameWithType.vb: AbstractEndpoint(Of EnvironmentDescriptor)
  fullName.vb: Steeltoe.Management.AbstractEndpoint(Of Steeltoe.Management.Endpoint.Env.EnvironmentDescriptor)
  name.vb: AbstractEndpoint(Of EnvironmentDescriptor)
  spec.csharp:
  - uid: Steeltoe.Management.AbstractEndpoint`1
    name: AbstractEndpoint
    nameWithType: AbstractEndpoint
    fullName: Steeltoe.Management.AbstractEndpoint
  - name: <
    nameWithType: <
    fullName: <
  - uid: Steeltoe.Management.Endpoint.Env.EnvironmentDescriptor
    name: EnvironmentDescriptor
    nameWithType: EnvironmentDescriptor
    fullName: Steeltoe.Management.Endpoint.Env.EnvironmentDescriptor
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Steeltoe.Management.AbstractEndpoint`1
    name: AbstractEndpoint
    nameWithType: AbstractEndpoint
    fullName: Steeltoe.Management.AbstractEndpoint
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Steeltoe.Management.Endpoint.Env.EnvironmentDescriptor
    name: EnvironmentDescriptor
    nameWithType: EnvironmentDescriptor
    fullName: Steeltoe.Management.Endpoint.Env.EnvironmentDescriptor
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Management.IEndpoint{Steeltoe.Management.Endpoint.Env.EnvironmentDescriptor}
  commentId: T:Steeltoe.Management.IEndpoint{Steeltoe.Management.Endpoint.Env.EnvironmentDescriptor}
  parent: Steeltoe.Management
  definition: Steeltoe.Management.IEndpoint`1
  name: IEndpoint<EnvironmentDescriptor>
  nameWithType: IEndpoint<EnvironmentDescriptor>
  fullName: Steeltoe.Management.IEndpoint<Steeltoe.Management.Endpoint.Env.EnvironmentDescriptor>
  nameWithType.vb: IEndpoint(Of EnvironmentDescriptor)
  fullName.vb: Steeltoe.Management.IEndpoint(Of Steeltoe.Management.Endpoint.Env.EnvironmentDescriptor)
  name.vb: IEndpoint(Of EnvironmentDescriptor)
  spec.csharp:
  - uid: Steeltoe.Management.IEndpoint`1
    name: IEndpoint
    nameWithType: IEndpoint
    fullName: Steeltoe.Management.IEndpoint
  - name: <
    nameWithType: <
    fullName: <
  - uid: Steeltoe.Management.Endpoint.Env.EnvironmentDescriptor
    name: EnvironmentDescriptor
    nameWithType: EnvironmentDescriptor
    fullName: Steeltoe.Management.Endpoint.Env.EnvironmentDescriptor
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Steeltoe.Management.IEndpoint`1
    name: IEndpoint
    nameWithType: IEndpoint
    fullName: Steeltoe.Management.IEndpoint
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Steeltoe.Management.Endpoint.Env.EnvironmentDescriptor
    name: EnvironmentDescriptor
    nameWithType: EnvironmentDescriptor
    fullName: Steeltoe.Management.Endpoint.Env.EnvironmentDescriptor
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Management.IEndpoint
  commentId: T:Steeltoe.Management.IEndpoint
  parent: Steeltoe.Management
  name: IEndpoint
  nameWithType: IEndpoint
  fullName: Steeltoe.Management.IEndpoint
- uid: Steeltoe.Management.AbstractEndpoint.options
  commentId: F:Steeltoe.Management.AbstractEndpoint.options
  parent: Steeltoe.Management.AbstractEndpoint
  name: options
  nameWithType: AbstractEndpoint.options
  fullName: Steeltoe.Management.AbstractEndpoint.options
- uid: Steeltoe.Management.AbstractEndpoint.Id
  commentId: P:Steeltoe.Management.AbstractEndpoint.Id
  parent: Steeltoe.Management.AbstractEndpoint
  name: Id
  nameWithType: AbstractEndpoint.Id
  fullName: Steeltoe.Management.AbstractEndpoint.Id
- uid: Steeltoe.Management.AbstractEndpoint.Enabled
  commentId: P:Steeltoe.Management.AbstractEndpoint.Enabled
  parent: Steeltoe.Management.AbstractEndpoint
  name: Enabled
  nameWithType: AbstractEndpoint.Enabled
  fullName: Steeltoe.Management.AbstractEndpoint.Enabled
- uid: Steeltoe.Management.AbstractEndpoint.Path
  commentId: P:Steeltoe.Management.AbstractEndpoint.Path
  parent: Steeltoe.Management.AbstractEndpoint
  name: Path
  nameWithType: AbstractEndpoint.Path
  fullName: Steeltoe.Management.AbstractEndpoint.Path
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Management.IEndpoint.Steeltoe.Management.Endpoint.EndPointExtensions.IsEnabled(Steeltoe.Management.IManagementOptions)
  commentId: M:Steeltoe.Management.Endpoint.EndPointExtensions.IsEnabled(Steeltoe.Management.IEndpoint,Steeltoe.Management.IManagementOptions)
  parent: Steeltoe.Management.Endpoint.EndPointExtensions
  definition: Steeltoe.Management.Endpoint.EndPointExtensions.IsEnabled(Steeltoe.Management.IEndpoint,Steeltoe.Management.IManagementOptions)
  name: IsEnabled(IManagementOptions)
  nameWithType: EndPointExtensions.IsEnabled(IManagementOptions)
  fullName: Steeltoe.Management.Endpoint.EndPointExtensions.IsEnabled(Steeltoe.Management.IManagementOptions)
  spec.csharp:
  - uid: Steeltoe.Management.Endpoint.EndPointExtensions.IsEnabled(Steeltoe.Management.IManagementOptions)
    name: IsEnabled
    nameWithType: EndPointExtensions.IsEnabled
    fullName: Steeltoe.Management.Endpoint.EndPointExtensions.IsEnabled
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Management.IManagementOptions
    name: IManagementOptions
    nameWithType: IManagementOptions
    fullName: Steeltoe.Management.IManagementOptions
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Management.Endpoint.EndPointExtensions.IsEnabled(Steeltoe.Management.IManagementOptions)
    name: IsEnabled
    nameWithType: EndPointExtensions.IsEnabled
    fullName: Steeltoe.Management.Endpoint.EndPointExtensions.IsEnabled
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Management.IManagementOptions
    name: IManagementOptions
    nameWithType: IManagementOptions
    fullName: Steeltoe.Management.IManagementOptions
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Management.IEndpoint.Steeltoe.Management.Endpoint.EndPointExtensions.IsExposed(Steeltoe.Management.IManagementOptions)
  commentId: M:Steeltoe.Management.Endpoint.EndPointExtensions.IsExposed(Steeltoe.Management.IEndpoint,Steeltoe.Management.IManagementOptions)
  parent: Steeltoe.Management.Endpoint.EndPointExtensions
  definition: Steeltoe.Management.Endpoint.EndPointExtensions.IsExposed(Steeltoe.Management.IEndpoint,Steeltoe.Management.IManagementOptions)
  name: IsExposed(IManagementOptions)
  nameWithType: EndPointExtensions.IsExposed(IManagementOptions)
  fullName: Steeltoe.Management.Endpoint.EndPointExtensions.IsExposed(Steeltoe.Management.IManagementOptions)
  spec.csharp:
  - uid: Steeltoe.Management.Endpoint.EndPointExtensions.IsExposed(Steeltoe.Management.IManagementOptions)
    name: IsExposed
    nameWithType: EndPointExtensions.IsExposed
    fullName: Steeltoe.Management.Endpoint.EndPointExtensions.IsExposed
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Management.IManagementOptions
    name: IManagementOptions
    nameWithType: IManagementOptions
    fullName: Steeltoe.Management.IManagementOptions
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Management.Endpoint.EndPointExtensions.IsExposed(Steeltoe.Management.IManagementOptions)
    name: IsExposed
    nameWithType: EndPointExtensions.IsExposed
    fullName: Steeltoe.Management.Endpoint.EndPointExtensions.IsExposed
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Management.IManagementOptions
    name: IManagementOptions
    nameWithType: IManagementOptions
    fullName: Steeltoe.Management.IManagementOptions
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Management.IEndpoint.Steeltoe.Management.Endpoint.EndPointExtensions.ShouldInvoke(Steeltoe.Management.IManagementOptions,ILogger)
  commentId: M:Steeltoe.Management.Endpoint.EndPointExtensions.ShouldInvoke(Steeltoe.Management.IEndpoint,Steeltoe.Management.IManagementOptions,ILogger)
  parent: Steeltoe.Management.Endpoint.EndPointExtensions
  definition: Steeltoe.Management.Endpoint.EndPointExtensions.ShouldInvoke(Steeltoe.Management.IEndpoint,Steeltoe.Management.IManagementOptions,ILogger)
  name: ShouldInvoke(IManagementOptions, ILogger)
  nameWithType: EndPointExtensions.ShouldInvoke(IManagementOptions, ILogger)
  fullName: Steeltoe.Management.Endpoint.EndPointExtensions.ShouldInvoke(Steeltoe.Management.IManagementOptions, ILogger)
  spec.csharp:
  - uid: Steeltoe.Management.Endpoint.EndPointExtensions.ShouldInvoke(Steeltoe.Management.IManagementOptions,ILogger)
    name: ShouldInvoke
    nameWithType: EndPointExtensions.ShouldInvoke
    fullName: Steeltoe.Management.Endpoint.EndPointExtensions.ShouldInvoke
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Management.IManagementOptions
    name: IManagementOptions
    nameWithType: IManagementOptions
    fullName: Steeltoe.Management.IManagementOptions
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: ILogger
    name: ILogger
    nameWithType: ILogger
    fullName: ILogger
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Management.Endpoint.EndPointExtensions.ShouldInvoke(Steeltoe.Management.IManagementOptions,ILogger)
    name: ShouldInvoke
    nameWithType: EndPointExtensions.ShouldInvoke
    fullName: Steeltoe.Management.Endpoint.EndPointExtensions.ShouldInvoke
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Management.IManagementOptions
    name: IManagementOptions
    nameWithType: IManagementOptions
    fullName: Steeltoe.Management.IManagementOptions
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: ILogger
    name: ILogger
    nameWithType: ILogger
    fullName: ILogger
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Steeltoe.Management
  commentId: N:Steeltoe.Management
  name: Steeltoe.Management
  nameWithType: Steeltoe.Management
  fullName: Steeltoe.Management
- uid: Steeltoe.Management.AbstractEndpoint`1
  commentId: T:Steeltoe.Management.AbstractEndpoint`1
  name: AbstractEndpoint<TResult>
  nameWithType: AbstractEndpoint<TResult>
  fullName: Steeltoe.Management.AbstractEndpoint<TResult>
  nameWithType.vb: AbstractEndpoint(Of TResult)
  fullName.vb: Steeltoe.Management.AbstractEndpoint(Of TResult)
  name.vb: AbstractEndpoint(Of TResult)
  spec.csharp:
  - uid: Steeltoe.Management.AbstractEndpoint`1
    name: AbstractEndpoint
    nameWithType: AbstractEndpoint
    fullName: Steeltoe.Management.AbstractEndpoint
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Steeltoe.Management.AbstractEndpoint`1
    name: AbstractEndpoint
    nameWithType: AbstractEndpoint
    fullName: Steeltoe.Management.AbstractEndpoint
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Management.IEndpoint`1
  commentId: T:Steeltoe.Management.IEndpoint`1
  name: IEndpoint<TResult>
  nameWithType: IEndpoint<TResult>
  fullName: Steeltoe.Management.IEndpoint<TResult>
  nameWithType.vb: IEndpoint(Of TResult)
  fullName.vb: Steeltoe.Management.IEndpoint(Of TResult)
  name.vb: IEndpoint(Of TResult)
  spec.csharp:
  - uid: Steeltoe.Management.IEndpoint`1
    name: IEndpoint
    nameWithType: IEndpoint
    fullName: Steeltoe.Management.IEndpoint
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Steeltoe.Management.IEndpoint`1
    name: IEndpoint
    nameWithType: IEndpoint
    fullName: Steeltoe.Management.IEndpoint
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Management.Endpoint.EndPointExtensions.IsEnabled(Steeltoe.Management.IEndpoint,Steeltoe.Management.IManagementOptions)
  commentId: M:Steeltoe.Management.Endpoint.EndPointExtensions.IsEnabled(Steeltoe.Management.IEndpoint,Steeltoe.Management.IManagementOptions)
  name: IsEnabled(IEndpoint, IManagementOptions)
  nameWithType: EndPointExtensions.IsEnabled(IEndpoint, IManagementOptions)
  fullName: Steeltoe.Management.Endpoint.EndPointExtensions.IsEnabled(Steeltoe.Management.IEndpoint, Steeltoe.Management.IManagementOptions)
  spec.csharp:
  - uid: Steeltoe.Management.Endpoint.EndPointExtensions.IsEnabled(Steeltoe.Management.IEndpoint,Steeltoe.Management.IManagementOptions)
    name: IsEnabled
    nameWithType: EndPointExtensions.IsEnabled
    fullName: Steeltoe.Management.Endpoint.EndPointExtensions.IsEnabled
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Management.IEndpoint
    name: IEndpoint
    nameWithType: IEndpoint
    fullName: Steeltoe.Management.IEndpoint
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Management.IManagementOptions
    name: IManagementOptions
    nameWithType: IManagementOptions
    fullName: Steeltoe.Management.IManagementOptions
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Management.Endpoint.EndPointExtensions.IsEnabled(Steeltoe.Management.IEndpoint,Steeltoe.Management.IManagementOptions)
    name: IsEnabled
    nameWithType: EndPointExtensions.IsEnabled
    fullName: Steeltoe.Management.Endpoint.EndPointExtensions.IsEnabled
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Management.IEndpoint
    name: IEndpoint
    nameWithType: IEndpoint
    fullName: Steeltoe.Management.IEndpoint
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Management.IManagementOptions
    name: IManagementOptions
    nameWithType: IManagementOptions
    fullName: Steeltoe.Management.IManagementOptions
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Management.Endpoint.EndPointExtensions
  commentId: T:Steeltoe.Management.Endpoint.EndPointExtensions
  parent: Steeltoe.Management.Endpoint
  name: EndPointExtensions
  nameWithType: EndPointExtensions
  fullName: Steeltoe.Management.Endpoint.EndPointExtensions
- uid: Steeltoe.Management.Endpoint.EndPointExtensions.IsExposed(Steeltoe.Management.IEndpoint,Steeltoe.Management.IManagementOptions)
  commentId: M:Steeltoe.Management.Endpoint.EndPointExtensions.IsExposed(Steeltoe.Management.IEndpoint,Steeltoe.Management.IManagementOptions)
  name: IsExposed(IEndpoint, IManagementOptions)
  nameWithType: EndPointExtensions.IsExposed(IEndpoint, IManagementOptions)
  fullName: Steeltoe.Management.Endpoint.EndPointExtensions.IsExposed(Steeltoe.Management.IEndpoint, Steeltoe.Management.IManagementOptions)
  spec.csharp:
  - uid: Steeltoe.Management.Endpoint.EndPointExtensions.IsExposed(Steeltoe.Management.IEndpoint,Steeltoe.Management.IManagementOptions)
    name: IsExposed
    nameWithType: EndPointExtensions.IsExposed
    fullName: Steeltoe.Management.Endpoint.EndPointExtensions.IsExposed
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Management.IEndpoint
    name: IEndpoint
    nameWithType: IEndpoint
    fullName: Steeltoe.Management.IEndpoint
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Management.IManagementOptions
    name: IManagementOptions
    nameWithType: IManagementOptions
    fullName: Steeltoe.Management.IManagementOptions
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Management.Endpoint.EndPointExtensions.IsExposed(Steeltoe.Management.IEndpoint,Steeltoe.Management.IManagementOptions)
    name: IsExposed
    nameWithType: EndPointExtensions.IsExposed
    fullName: Steeltoe.Management.Endpoint.EndPointExtensions.IsExposed
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Management.IEndpoint
    name: IEndpoint
    nameWithType: IEndpoint
    fullName: Steeltoe.Management.IEndpoint
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Management.IManagementOptions
    name: IManagementOptions
    nameWithType: IManagementOptions
    fullName: Steeltoe.Management.IManagementOptions
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Management.Endpoint.EndPointExtensions.ShouldInvoke(Steeltoe.Management.IEndpoint,Steeltoe.Management.IManagementOptions,ILogger)
  commentId: M:Steeltoe.Management.Endpoint.EndPointExtensions.ShouldInvoke(Steeltoe.Management.IEndpoint,Steeltoe.Management.IManagementOptions,ILogger)
  isExternal: true
  name: ShouldInvoke(IEndpoint, IManagementOptions, ILogger)
  nameWithType: EndPointExtensions.ShouldInvoke(IEndpoint, IManagementOptions, ILogger)
  fullName: Steeltoe.Management.Endpoint.EndPointExtensions.ShouldInvoke(Steeltoe.Management.IEndpoint, Steeltoe.Management.IManagementOptions, ILogger)
  spec.csharp:
  - uid: Steeltoe.Management.Endpoint.EndPointExtensions.ShouldInvoke(Steeltoe.Management.IEndpoint,Steeltoe.Management.IManagementOptions,ILogger)
    name: ShouldInvoke
    nameWithType: EndPointExtensions.ShouldInvoke
    fullName: Steeltoe.Management.Endpoint.EndPointExtensions.ShouldInvoke
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Management.IEndpoint
    name: IEndpoint
    nameWithType: IEndpoint
    fullName: Steeltoe.Management.IEndpoint
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Management.IManagementOptions
    name: IManagementOptions
    nameWithType: IManagementOptions
    fullName: Steeltoe.Management.IManagementOptions
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: ILogger
    name: ILogger
    nameWithType: ILogger
    fullName: ILogger
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Management.Endpoint.EndPointExtensions.ShouldInvoke(Steeltoe.Management.IEndpoint,Steeltoe.Management.IManagementOptions,ILogger)
    name: ShouldInvoke
    nameWithType: EndPointExtensions.ShouldInvoke
    fullName: Steeltoe.Management.Endpoint.EndPointExtensions.ShouldInvoke
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Management.IEndpoint
    name: IEndpoint
    nameWithType: IEndpoint
    fullName: Steeltoe.Management.IEndpoint
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Management.IManagementOptions
    name: IManagementOptions
    nameWithType: IManagementOptions
    fullName: Steeltoe.Management.IManagementOptions
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: ILogger
    name: ILogger
    nameWithType: ILogger
    fullName: ILogger
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Management.Endpoint
  commentId: N:Steeltoe.Management.Endpoint
  name: Steeltoe.Management.Endpoint
  nameWithType: Steeltoe.Management.Endpoint
  fullName: Steeltoe.Management.Endpoint
- uid: Steeltoe.Management.Endpoint.Env.EnvEndpoint.#ctor*
  commentId: Overload:Steeltoe.Management.Endpoint.Env.EnvEndpoint.#ctor
  name: EnvEndpoint
  nameWithType: EnvEndpoint.EnvEndpoint
  fullName: Steeltoe.Management.Endpoint.Env.EnvEndpoint.EnvEndpoint
- uid: Steeltoe.Management.Endpoint.Env.IEnvOptions
  commentId: T:Steeltoe.Management.Endpoint.Env.IEnvOptions
  parent: Steeltoe.Management.Endpoint.Env
  name: IEnvOptions
  nameWithType: IEnvOptions
  fullName: Steeltoe.Management.Endpoint.Env.IEnvOptions
- uid: IConfiguration
  isExternal: true
  name: IConfiguration
  nameWithType: IConfiguration
  fullName: IConfiguration
- uid: IHostEnvironment
  commentId: '!:IHostEnvironment'
  isExternal: true
  name: IHostEnvironment
  nameWithType: IHostEnvironment
  fullName: IHostEnvironment
- uid: ILogger{Steeltoe.Management.Endpoint.Env.EnvEndpoint}
  commentId: '!:ILogger{Steeltoe.Management.Endpoint.Env.EnvEndpoint}'
  definition: ILogger`1
  name: ILogger<EnvEndpoint>
  nameWithType: ILogger<EnvEndpoint>
  fullName: ILogger<Steeltoe.Management.Endpoint.Env.EnvEndpoint>
  nameWithType.vb: ILogger(Of EnvEndpoint)
  fullName.vb: ILogger(Of Steeltoe.Management.Endpoint.Env.EnvEndpoint)
  name.vb: ILogger(Of EnvEndpoint)
  spec.csharp:
  - uid: ILogger`1
    name: ILogger
    nameWithType: ILogger
    fullName: ILogger
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Steeltoe.Management.Endpoint.Env.EnvEndpoint
    name: EnvEndpoint
    nameWithType: EnvEndpoint
    fullName: Steeltoe.Management.Endpoint.Env.EnvEndpoint
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: ILogger`1
    name: ILogger
    nameWithType: ILogger
    fullName: ILogger
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Steeltoe.Management.Endpoint.Env.EnvEndpoint
    name: EnvEndpoint
    nameWithType: EnvEndpoint
    fullName: Steeltoe.Management.Endpoint.Env.EnvEndpoint
  - name: )
    nameWithType: )
    fullName: )
- uid: ILogger`1
  isExternal: true
  name: ILogger<>
  nameWithType: ILogger<>
  fullName: ILogger<>
  nameWithType.vb: ILogger(Of )
  fullName.vb: ILogger(Of )
  name.vb: ILogger(Of )
  spec.csharp:
  - uid: ILogger`1
    name: ILogger
    nameWithType: ILogger
    fullName: ILogger
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: ILogger`1
    name: ILogger
    nameWithType: ILogger
    fullName: ILogger
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Management.Endpoint.Env.EnvEndpoint.Options*
  commentId: Overload:Steeltoe.Management.Endpoint.Env.EnvEndpoint.Options
  name: Options
  nameWithType: EnvEndpoint.Options
  fullName: Steeltoe.Management.Endpoint.Env.EnvEndpoint.Options
- uid: Steeltoe.Management.AbstractEndpoint{Steeltoe.Management.Endpoint.Env.EnvironmentDescriptor}.Invoke
  commentId: M:Steeltoe.Management.AbstractEndpoint{Steeltoe.Management.Endpoint.Env.EnvironmentDescriptor}.Invoke
  parent: Steeltoe.Management.AbstractEndpoint{Steeltoe.Management.Endpoint.Env.EnvironmentDescriptor}
  definition: Steeltoe.Management.AbstractEndpoint`1.Invoke
  name: Invoke()
  nameWithType: AbstractEndpoint<EnvironmentDescriptor>.Invoke()
  fullName: Steeltoe.Management.AbstractEndpoint<Steeltoe.Management.Endpoint.Env.EnvironmentDescriptor>.Invoke()
  nameWithType.vb: AbstractEndpoint(Of EnvironmentDescriptor).Invoke()
  fullName.vb: Steeltoe.Management.AbstractEndpoint(Of Steeltoe.Management.Endpoint.Env.EnvironmentDescriptor).Invoke()
  spec.csharp:
  - uid: Steeltoe.Management.AbstractEndpoint`1.Invoke
    name: Invoke
    nameWithType: AbstractEndpoint<EnvironmentDescriptor>.Invoke
    fullName: Steeltoe.Management.AbstractEndpoint<Steeltoe.Management.Endpoint.Env.EnvironmentDescriptor>.Invoke
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Management.AbstractEndpoint`1.Invoke
    name: Invoke
    nameWithType: AbstractEndpoint(Of EnvironmentDescriptor).Invoke
    fullName: Steeltoe.Management.AbstractEndpoint(Of Steeltoe.Management.Endpoint.Env.EnvironmentDescriptor).Invoke
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Management.Endpoint.Env.EnvEndpoint.Invoke*
  commentId: Overload:Steeltoe.Management.Endpoint.Env.EnvEndpoint.Invoke
  name: Invoke
  nameWithType: EnvEndpoint.Invoke
  fullName: Steeltoe.Management.Endpoint.Env.EnvEndpoint.Invoke
- uid: Steeltoe.Management.Endpoint.Env.EnvironmentDescriptor
  commentId: T:Steeltoe.Management.Endpoint.Env.EnvironmentDescriptor
  parent: Steeltoe.Management.Endpoint.Env
  name: EnvironmentDescriptor
  nameWithType: EnvironmentDescriptor
  fullName: Steeltoe.Management.Endpoint.Env.EnvironmentDescriptor
- uid: Steeltoe.Management.AbstractEndpoint`1.Invoke
  commentId: M:Steeltoe.Management.AbstractEndpoint`1.Invoke
  name: Invoke()
  nameWithType: AbstractEndpoint<TResult>.Invoke()
  fullName: Steeltoe.Management.AbstractEndpoint<TResult>.Invoke()
  nameWithType.vb: AbstractEndpoint(Of TResult).Invoke()
  fullName.vb: Steeltoe.Management.AbstractEndpoint(Of TResult).Invoke()
  spec.csharp:
  - uid: Steeltoe.Management.AbstractEndpoint`1.Invoke
    name: Invoke
    nameWithType: AbstractEndpoint<TResult>.Invoke
    fullName: Steeltoe.Management.AbstractEndpoint<TResult>.Invoke
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Management.AbstractEndpoint`1.Invoke
    name: Invoke
    nameWithType: AbstractEndpoint(Of TResult).Invoke
    fullName: Steeltoe.Management.AbstractEndpoint(Of TResult).Invoke
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Management.Endpoint.Env.EnvEndpoint.DoInvoke*
  commentId: Overload:Steeltoe.Management.Endpoint.Env.EnvEndpoint.DoInvoke
  name: DoInvoke
  nameWithType: EnvEndpoint.DoInvoke
  fullName: Steeltoe.Management.Endpoint.Env.EnvEndpoint.DoInvoke
- uid: Steeltoe.Management.Endpoint.Env.EnvEndpoint.GetPropertySources*
  commentId: Overload:Steeltoe.Management.Endpoint.Env.EnvEndpoint.GetPropertySources
  name: GetPropertySources
  nameWithType: EnvEndpoint.GetPropertySources
  fullName: Steeltoe.Management.Endpoint.Env.EnvEndpoint.GetPropertySources
- uid: System.Collections.Generic.IList{Steeltoe.Management.Endpoint.Env.PropertySourceDescriptor}
  commentId: T:System.Collections.Generic.IList{Steeltoe.Management.Endpoint.Env.PropertySourceDescriptor}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<PropertySourceDescriptor>
  nameWithType: IList<PropertySourceDescriptor>
  fullName: System.Collections.Generic.IList<Steeltoe.Management.Endpoint.Env.PropertySourceDescriptor>
  nameWithType.vb: IList(Of PropertySourceDescriptor)
  fullName.vb: System.Collections.Generic.IList(Of Steeltoe.Management.Endpoint.Env.PropertySourceDescriptor)
  name.vb: IList(Of PropertySourceDescriptor)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Steeltoe.Management.Endpoint.Env.PropertySourceDescriptor
    name: PropertySourceDescriptor
    nameWithType: PropertySourceDescriptor
    fullName: Steeltoe.Management.Endpoint.Env.PropertySourceDescriptor
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Steeltoe.Management.Endpoint.Env.PropertySourceDescriptor
    name: PropertySourceDescriptor
    nameWithType: PropertySourceDescriptor
    fullName: Steeltoe.Management.Endpoint.Env.PropertySourceDescriptor
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullName.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Steeltoe.Management.Endpoint.Env.EnvEndpoint.GetPropertySourceDescriptor*
  commentId: Overload:Steeltoe.Management.Endpoint.Env.EnvEndpoint.GetPropertySourceDescriptor
  name: GetPropertySourceDescriptor
  nameWithType: EnvEndpoint.GetPropertySourceDescriptor
  fullName: Steeltoe.Management.Endpoint.Env.EnvEndpoint.GetPropertySourceDescriptor
- uid: IConfigurationProvider
  isExternal: true
  name: IConfigurationProvider
  nameWithType: IConfigurationProvider
  fullName: IConfigurationProvider
- uid: Steeltoe.Management.Endpoint.Env.PropertySourceDescriptor
  commentId: T:Steeltoe.Management.Endpoint.Env.PropertySourceDescriptor
  parent: Steeltoe.Management.Endpoint.Env
  name: PropertySourceDescriptor
  nameWithType: PropertySourceDescriptor
  fullName: Steeltoe.Management.Endpoint.Env.PropertySourceDescriptor
- uid: Steeltoe.Management.Endpoint.Env.EnvEndpoint.GetPropertySourceName*
  commentId: Overload:Steeltoe.Management.Endpoint.Env.EnvEndpoint.GetPropertySourceName
  name: GetPropertySourceName
  nameWithType: EnvEndpoint.GetPropertySourceName
  fullName: Steeltoe.Management.Endpoint.Env.EnvEndpoint.GetPropertySourceName
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
