### YamlMime:ManagedReference
items:
- uid: Steeltoe.Stream.Binder.DirectHandler
  commentId: T:Steeltoe.Stream.Binder.DirectHandler
  id: DirectHandler
  parent: Steeltoe.Stream.Binder
  children:
  - Steeltoe.Stream.Binder.DirectHandler.#ctor(Steeltoe.Messaging.IMessageChannel)
  - Steeltoe.Stream.Binder.DirectHandler.HandleMessage(Steeltoe.Messaging.IMessage)
  - Steeltoe.Stream.Binder.DirectHandler.ServiceName
  langs:
  - csharp
  - vb
  name: DirectHandler
  nameWithType: DirectHandler
  fullName: Steeltoe.Stream.Binder.DirectHandler
  type: Class
  source:
    remote:
      path: src/Stream/src/StreamBase/Binder/DirectHandler.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: DirectHandler
    path: ../Steeltoe/src/Stream/src/StreamBase/Binder/DirectHandler.cs
    startLine: 8
  assemblies:
  - Steeltoe.Stream.StreamBase
  namespace: Steeltoe.Stream.Binder
  syntax:
    content: 'public class DirectHandler : IMessageHandler, IServiceNameAware'
    content.vb: >-
      Public Class DirectHandler

          Implements IMessageHandler, IServiceNameAware
  inheritance:
  - System.Object
  implements:
  - Steeltoe.Messaging.IMessageHandler
  - IServiceNameAware
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Steeltoe.Stream.Binder.DirectHandler.#ctor(Steeltoe.Messaging.IMessageChannel)
  commentId: M:Steeltoe.Stream.Binder.DirectHandler.#ctor(Steeltoe.Messaging.IMessageChannel)
  id: '#ctor(Steeltoe.Messaging.IMessageChannel)'
  parent: Steeltoe.Stream.Binder.DirectHandler
  langs:
  - csharp
  - vb
  name: DirectHandler(IMessageChannel)
  nameWithType: DirectHandler.DirectHandler(IMessageChannel)
  fullName: Steeltoe.Stream.Binder.DirectHandler.DirectHandler(Steeltoe.Messaging.IMessageChannel)
  type: Constructor
  source:
    remote:
      path: src/Stream/src/StreamBase/Binder/DirectHandler.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: .ctor
    path: ../Steeltoe/src/Stream/src/StreamBase/Binder/DirectHandler.cs
    startLine: 12
  assemblies:
  - Steeltoe.Stream.StreamBase
  namespace: Steeltoe.Stream.Binder
  syntax:
    content: public DirectHandler(IMessageChannel outputChannel)
    parameters:
    - id: outputChannel
      type: Steeltoe.Messaging.IMessageChannel
    content.vb: Public Sub New(outputChannel As IMessageChannel)
  overload: Steeltoe.Stream.Binder.DirectHandler.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Steeltoe.Stream.Binder.DirectHandler.ServiceName
  commentId: P:Steeltoe.Stream.Binder.DirectHandler.ServiceName
  id: ServiceName
  parent: Steeltoe.Stream.Binder.DirectHandler
  langs:
  - csharp
  - vb
  name: ServiceName
  nameWithType: DirectHandler.ServiceName
  fullName: Steeltoe.Stream.Binder.DirectHandler.ServiceName
  type: Property
  source:
    remote:
      path: src/Stream/src/StreamBase/Binder/DirectHandler.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: ServiceName
    path: ../Steeltoe/src/Stream/src/StreamBase/Binder/DirectHandler.cs
    startLine: 18
  assemblies:
  - Steeltoe.Stream.StreamBase
  namespace: Steeltoe.Stream.Binder
  syntax:
    content: public virtual string ServiceName { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Overridable Property ServiceName As String
  overload: Steeltoe.Stream.Binder.DirectHandler.ServiceName*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Steeltoe.Stream.Binder.DirectHandler.HandleMessage(Steeltoe.Messaging.IMessage)
  commentId: M:Steeltoe.Stream.Binder.DirectHandler.HandleMessage(Steeltoe.Messaging.IMessage)
  id: HandleMessage(Steeltoe.Messaging.IMessage)
  parent: Steeltoe.Stream.Binder.DirectHandler
  langs:
  - csharp
  - vb
  name: HandleMessage(IMessage)
  nameWithType: DirectHandler.HandleMessage(IMessage)
  fullName: Steeltoe.Stream.Binder.DirectHandler.HandleMessage(Steeltoe.Messaging.IMessage)
  type: Method
  source:
    remote:
      path: src/Stream/src/StreamBase/Binder/DirectHandler.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: HandleMessage
    path: ../Steeltoe/src/Stream/src/StreamBase/Binder/DirectHandler.cs
    startLine: 20
  assemblies:
  - Steeltoe.Stream.StreamBase
  namespace: Steeltoe.Stream.Binder
  syntax:
    content: public void HandleMessage(IMessage message)
    parameters:
    - id: message
      type: Steeltoe.Messaging.IMessage
    content.vb: Public Sub HandleMessage(message As IMessage)
  overload: Steeltoe.Stream.Binder.DirectHandler.HandleMessage*
  implements:
  - Steeltoe.Messaging.IMessageHandler.HandleMessage(Steeltoe.Messaging.IMessage)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Steeltoe.Stream.Binder
  commentId: N:Steeltoe.Stream.Binder
  name: Steeltoe.Stream.Binder
  nameWithType: Steeltoe.Stream.Binder
  fullName: Steeltoe.Stream.Binder
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Steeltoe.Messaging.IMessageHandler
  commentId: T:Steeltoe.Messaging.IMessageHandler
  parent: Steeltoe.Messaging
  name: IMessageHandler
  nameWithType: IMessageHandler
  fullName: Steeltoe.Messaging.IMessageHandler
- uid: IServiceNameAware
  isExternal: true
  name: IServiceNameAware
  nameWithType: IServiceNameAware
  fullName: IServiceNameAware
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Steeltoe.Messaging
  commentId: N:Steeltoe.Messaging
  name: Steeltoe.Messaging
  nameWithType: Steeltoe.Messaging
  fullName: Steeltoe.Messaging
- uid: Steeltoe.Stream.Binder.DirectHandler.#ctor*
  commentId: Overload:Steeltoe.Stream.Binder.DirectHandler.#ctor
  name: DirectHandler
  nameWithType: DirectHandler.DirectHandler
  fullName: Steeltoe.Stream.Binder.DirectHandler.DirectHandler
- uid: Steeltoe.Messaging.IMessageChannel
  commentId: T:Steeltoe.Messaging.IMessageChannel
  parent: Steeltoe.Messaging
  name: IMessageChannel
  nameWithType: IMessageChannel
  fullName: Steeltoe.Messaging.IMessageChannel
- uid: Steeltoe.Stream.Binder.DirectHandler.ServiceName*
  commentId: Overload:Steeltoe.Stream.Binder.DirectHandler.ServiceName
  name: ServiceName
  nameWithType: DirectHandler.ServiceName
  fullName: Steeltoe.Stream.Binder.DirectHandler.ServiceName
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Steeltoe.Stream.Binder.DirectHandler.HandleMessage*
  commentId: Overload:Steeltoe.Stream.Binder.DirectHandler.HandleMessage
  name: HandleMessage
  nameWithType: DirectHandler.HandleMessage
  fullName: Steeltoe.Stream.Binder.DirectHandler.HandleMessage
- uid: Steeltoe.Messaging.IMessageHandler.HandleMessage(Steeltoe.Messaging.IMessage)
  commentId: M:Steeltoe.Messaging.IMessageHandler.HandleMessage(Steeltoe.Messaging.IMessage)
  parent: Steeltoe.Messaging.IMessageHandler
  name: HandleMessage(IMessage)
  nameWithType: IMessageHandler.HandleMessage(IMessage)
  fullName: Steeltoe.Messaging.IMessageHandler.HandleMessage(Steeltoe.Messaging.IMessage)
  spec.csharp:
  - uid: Steeltoe.Messaging.IMessageHandler.HandleMessage(Steeltoe.Messaging.IMessage)
    name: HandleMessage
    nameWithType: IMessageHandler.HandleMessage
    fullName: Steeltoe.Messaging.IMessageHandler.HandleMessage
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.IMessageHandler.HandleMessage(Steeltoe.Messaging.IMessage)
    name: HandleMessage
    nameWithType: IMessageHandler.HandleMessage
    fullName: Steeltoe.Messaging.IMessageHandler.HandleMessage
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.IMessage
  commentId: T:Steeltoe.Messaging.IMessage
  parent: Steeltoe.Messaging
  name: IMessage
  nameWithType: IMessage
  fullName: Steeltoe.Messaging.IMessage
