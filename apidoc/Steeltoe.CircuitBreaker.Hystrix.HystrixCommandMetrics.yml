### YamlMime:ManagedReference
items:
- uid: Steeltoe.CircuitBreaker.Hystrix.HystrixCommandMetrics
  commentId: T:Steeltoe.CircuitBreaker.Hystrix.HystrixCommandMetrics
  id: HystrixCommandMetrics
  parent: Steeltoe.CircuitBreaker.Hystrix
  children:
  - Steeltoe.CircuitBreaker.Hystrix.HystrixCommandMetrics.AppendEventToBucket
  - Steeltoe.CircuitBreaker.Hystrix.HystrixCommandMetrics.BucketAggregator
  - Steeltoe.CircuitBreaker.Hystrix.HystrixCommandMetrics.CommandGroup
  - Steeltoe.CircuitBreaker.Hystrix.HystrixCommandMetrics.CommandKey
  - Steeltoe.CircuitBreaker.Hystrix.HystrixCommandMetrics.CurrentConcurrentExecutionCount
  - Steeltoe.CircuitBreaker.Hystrix.HystrixCommandMetrics.ExecutionTimeMean
  - Steeltoe.CircuitBreaker.Hystrix.HystrixCommandMetrics.GetCumulativeCount(Steeltoe.CircuitBreaker.Hystrix.HystrixEventType)
  - Steeltoe.CircuitBreaker.Hystrix.HystrixCommandMetrics.GetCumulativeCount(Steeltoe.CircuitBreaker.Hystrix.Util.HystrixRollingNumberEvent)
  - Steeltoe.CircuitBreaker.Hystrix.HystrixCommandMetrics.GetExecutionTimePercentile(System.Double)
  - Steeltoe.CircuitBreaker.Hystrix.HystrixCommandMetrics.GetInstance(Steeltoe.CircuitBreaker.Hystrix.IHystrixCommandKey)
  - Steeltoe.CircuitBreaker.Hystrix.HystrixCommandMetrics.GetInstance(Steeltoe.CircuitBreaker.Hystrix.IHystrixCommandKey,Steeltoe.CircuitBreaker.Hystrix.IHystrixCommandGroupKey,Steeltoe.CircuitBreaker.Hystrix.IHystrixCommandOptions)
  - Steeltoe.CircuitBreaker.Hystrix.HystrixCommandMetrics.GetInstance(Steeltoe.CircuitBreaker.Hystrix.IHystrixCommandKey,Steeltoe.CircuitBreaker.Hystrix.IHystrixCommandGroupKey,Steeltoe.CircuitBreaker.Hystrix.IHystrixThreadPoolKey,Steeltoe.CircuitBreaker.Hystrix.IHystrixCommandOptions)
  - Steeltoe.CircuitBreaker.Hystrix.HystrixCommandMetrics.GetInstances
  - Steeltoe.CircuitBreaker.Hystrix.HystrixCommandMetrics.GetRollingCount(Steeltoe.CircuitBreaker.Hystrix.HystrixEventType)
  - Steeltoe.CircuitBreaker.Hystrix.HystrixCommandMetrics.GetRollingCount(Steeltoe.CircuitBreaker.Hystrix.Util.HystrixRollingNumberEvent)
  - Steeltoe.CircuitBreaker.Hystrix.HystrixCommandMetrics.GetTotalTimePercentile(System.Double)
  - Steeltoe.CircuitBreaker.Hystrix.HystrixCommandMetrics.Healthcounts
  - Steeltoe.CircuitBreaker.Hystrix.HystrixCommandMetrics.Properties
  - Steeltoe.CircuitBreaker.Hystrix.HystrixCommandMetrics.RollingMaxConcurrentExecutions
  - Steeltoe.CircuitBreaker.Hystrix.HystrixCommandMetrics.ThreadPoolKey
  - Steeltoe.CircuitBreaker.Hystrix.HystrixCommandMetrics.TotalTimeMean
  langs:
  - csharp
  - vb
  name: HystrixCommandMetrics
  nameWithType: HystrixCommandMetrics
  fullName: Steeltoe.CircuitBreaker.Hystrix.HystrixCommandMetrics
  type: Class
  source:
    remote:
      path: src/CircuitBreaker/src/HystrixBase/HystrixCommandMetrics.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: HystrixCommandMetrics
    path: ../Steeltoe/src/CircuitBreaker/src/HystrixBase/HystrixCommandMetrics.cs
    startLine: 17
  assemblies:
  - Steeltoe.CircuitBreaker.HystrixBase
  namespace: Steeltoe.CircuitBreaker.Hystrix
  syntax:
    content: 'public class HystrixCommandMetrics : HystrixMetrics'
    content.vb: >-
      Public Class HystrixCommandMetrics

          Inherits HystrixMetrics
  inheritance:
  - System.Object
  - Steeltoe.CircuitBreaker.Hystrix.HystrixMetrics
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Steeltoe.CircuitBreaker.Hystrix.HystrixCommandMetrics.AppendEventToBucket
  commentId: P:Steeltoe.CircuitBreaker.Hystrix.HystrixCommandMetrics.AppendEventToBucket
  id: AppendEventToBucket
  parent: Steeltoe.CircuitBreaker.Hystrix.HystrixCommandMetrics
  langs:
  - csharp
  - vb
  name: AppendEventToBucket
  nameWithType: HystrixCommandMetrics.AppendEventToBucket
  fullName: Steeltoe.CircuitBreaker.Hystrix.HystrixCommandMetrics.AppendEventToBucket
  type: Property
  source:
    remote:
      path: src/CircuitBreaker/src/HystrixBase/HystrixCommandMetrics.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: AppendEventToBucket
    path: ../Steeltoe/src/CircuitBreaker/src/HystrixBase/HystrixCommandMetrics.cs
    startLine: 21
  assemblies:
  - Steeltoe.CircuitBreaker.HystrixBase
  namespace: Steeltoe.CircuitBreaker.Hystrix
  syntax:
    content: public static Func<long[], HystrixCommandCompletion, long[]> AppendEventToBucket { get; }
    parameters: []
    return:
      type: System.Func{System.Int64[],Steeltoe.CircuitBreaker.Hystrix.Metric.HystrixCommandCompletion,System.Int64[]}
    content.vb: Public Shared ReadOnly Property AppendEventToBucket As Func(Of Long(), HystrixCommandCompletion, Long())
  overload: Steeltoe.CircuitBreaker.Hystrix.HystrixCommandMetrics.AppendEventToBucket*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Steeltoe.CircuitBreaker.Hystrix.HystrixCommandMetrics.BucketAggregator
  commentId: P:Steeltoe.CircuitBreaker.Hystrix.HystrixCommandMetrics.BucketAggregator
  id: BucketAggregator
  parent: Steeltoe.CircuitBreaker.Hystrix.HystrixCommandMetrics
  langs:
  - csharp
  - vb
  name: BucketAggregator
  nameWithType: HystrixCommandMetrics.BucketAggregator
  fullName: Steeltoe.CircuitBreaker.Hystrix.HystrixCommandMetrics.BucketAggregator
  type: Property
  source:
    remote:
      path: src/CircuitBreaker/src/HystrixBase/HystrixCommandMetrics.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: BucketAggregator
    path: ../Steeltoe/src/CircuitBreaker/src/HystrixBase/HystrixCommandMetrics.cs
    startLine: 39
  assemblies:
  - Steeltoe.CircuitBreaker.HystrixBase
  namespace: Steeltoe.CircuitBreaker.Hystrix
  syntax:
    content: public static Func<long[], long[], long[]> BucketAggregator { get; }
    parameters: []
    return:
      type: System.Func{System.Int64[],System.Int64[],System.Int64[]}
    content.vb: Public Shared ReadOnly Property BucketAggregator As Func(Of Long(), Long(), Long())
  overload: Steeltoe.CircuitBreaker.Hystrix.HystrixCommandMetrics.BucketAggregator*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Steeltoe.CircuitBreaker.Hystrix.HystrixCommandMetrics.GetInstance(Steeltoe.CircuitBreaker.Hystrix.IHystrixCommandKey,Steeltoe.CircuitBreaker.Hystrix.IHystrixCommandGroupKey,Steeltoe.CircuitBreaker.Hystrix.IHystrixCommandOptions)
  commentId: M:Steeltoe.CircuitBreaker.Hystrix.HystrixCommandMetrics.GetInstance(Steeltoe.CircuitBreaker.Hystrix.IHystrixCommandKey,Steeltoe.CircuitBreaker.Hystrix.IHystrixCommandGroupKey,Steeltoe.CircuitBreaker.Hystrix.IHystrixCommandOptions)
  id: GetInstance(Steeltoe.CircuitBreaker.Hystrix.IHystrixCommandKey,Steeltoe.CircuitBreaker.Hystrix.IHystrixCommandGroupKey,Steeltoe.CircuitBreaker.Hystrix.IHystrixCommandOptions)
  parent: Steeltoe.CircuitBreaker.Hystrix.HystrixCommandMetrics
  langs:
  - csharp
  - vb
  name: GetInstance(IHystrixCommandKey, IHystrixCommandGroupKey, IHystrixCommandOptions)
  nameWithType: HystrixCommandMetrics.GetInstance(IHystrixCommandKey, IHystrixCommandGroupKey, IHystrixCommandOptions)
  fullName: Steeltoe.CircuitBreaker.Hystrix.HystrixCommandMetrics.GetInstance(Steeltoe.CircuitBreaker.Hystrix.IHystrixCommandKey, Steeltoe.CircuitBreaker.Hystrix.IHystrixCommandGroupKey, Steeltoe.CircuitBreaker.Hystrix.IHystrixCommandOptions)
  type: Method
  source:
    remote:
      path: src/CircuitBreaker/src/HystrixBase/HystrixCommandMetrics.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: GetInstance
    path: ../Steeltoe/src/CircuitBreaker/src/HystrixBase/HystrixCommandMetrics.cs
    startLine: 66
  assemblies:
  - Steeltoe.CircuitBreaker.HystrixBase
  namespace: Steeltoe.CircuitBreaker.Hystrix
  syntax:
    content: public static HystrixCommandMetrics GetInstance(IHystrixCommandKey key, IHystrixCommandGroupKey commandGroup, IHystrixCommandOptions properties)
    parameters:
    - id: key
      type: Steeltoe.CircuitBreaker.Hystrix.IHystrixCommandKey
    - id: commandGroup
      type: Steeltoe.CircuitBreaker.Hystrix.IHystrixCommandGroupKey
    - id: properties
      type: Steeltoe.CircuitBreaker.Hystrix.IHystrixCommandOptions
    return:
      type: Steeltoe.CircuitBreaker.Hystrix.HystrixCommandMetrics
    content.vb: Public Shared Function GetInstance(key As IHystrixCommandKey, commandGroup As IHystrixCommandGroupKey, properties As IHystrixCommandOptions) As HystrixCommandMetrics
  overload: Steeltoe.CircuitBreaker.Hystrix.HystrixCommandMetrics.GetInstance*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Steeltoe.CircuitBreaker.Hystrix.HystrixCommandMetrics.GetInstance(Steeltoe.CircuitBreaker.Hystrix.IHystrixCommandKey,Steeltoe.CircuitBreaker.Hystrix.IHystrixCommandGroupKey,Steeltoe.CircuitBreaker.Hystrix.IHystrixThreadPoolKey,Steeltoe.CircuitBreaker.Hystrix.IHystrixCommandOptions)
  commentId: M:Steeltoe.CircuitBreaker.Hystrix.HystrixCommandMetrics.GetInstance(Steeltoe.CircuitBreaker.Hystrix.IHystrixCommandKey,Steeltoe.CircuitBreaker.Hystrix.IHystrixCommandGroupKey,Steeltoe.CircuitBreaker.Hystrix.IHystrixThreadPoolKey,Steeltoe.CircuitBreaker.Hystrix.IHystrixCommandOptions)
  id: GetInstance(Steeltoe.CircuitBreaker.Hystrix.IHystrixCommandKey,Steeltoe.CircuitBreaker.Hystrix.IHystrixCommandGroupKey,Steeltoe.CircuitBreaker.Hystrix.IHystrixThreadPoolKey,Steeltoe.CircuitBreaker.Hystrix.IHystrixCommandOptions)
  parent: Steeltoe.CircuitBreaker.Hystrix.HystrixCommandMetrics
  langs:
  - csharp
  - vb
  name: GetInstance(IHystrixCommandKey, IHystrixCommandGroupKey, IHystrixThreadPoolKey, IHystrixCommandOptions)
  nameWithType: HystrixCommandMetrics.GetInstance(IHystrixCommandKey, IHystrixCommandGroupKey, IHystrixThreadPoolKey, IHystrixCommandOptions)
  fullName: Steeltoe.CircuitBreaker.Hystrix.HystrixCommandMetrics.GetInstance(Steeltoe.CircuitBreaker.Hystrix.IHystrixCommandKey, Steeltoe.CircuitBreaker.Hystrix.IHystrixCommandGroupKey, Steeltoe.CircuitBreaker.Hystrix.IHystrixThreadPoolKey, Steeltoe.CircuitBreaker.Hystrix.IHystrixCommandOptions)
  type: Method
  source:
    remote:
      path: src/CircuitBreaker/src/HystrixBase/HystrixCommandMetrics.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: GetInstance
    path: ../Steeltoe/src/CircuitBreaker/src/HystrixBase/HystrixCommandMetrics.cs
    startLine: 71
  assemblies:
  - Steeltoe.CircuitBreaker.HystrixBase
  namespace: Steeltoe.CircuitBreaker.Hystrix
  syntax:
    content: public static HystrixCommandMetrics GetInstance(IHystrixCommandKey key, IHystrixCommandGroupKey commandGroup, IHystrixThreadPoolKey threadPoolKey, IHystrixCommandOptions properties)
    parameters:
    - id: key
      type: Steeltoe.CircuitBreaker.Hystrix.IHystrixCommandKey
    - id: commandGroup
      type: Steeltoe.CircuitBreaker.Hystrix.IHystrixCommandGroupKey
    - id: threadPoolKey
      type: Steeltoe.CircuitBreaker.Hystrix.IHystrixThreadPoolKey
    - id: properties
      type: Steeltoe.CircuitBreaker.Hystrix.IHystrixCommandOptions
    return:
      type: Steeltoe.CircuitBreaker.Hystrix.HystrixCommandMetrics
    content.vb: Public Shared Function GetInstance(key As IHystrixCommandKey, commandGroup As IHystrixCommandGroupKey, threadPoolKey As IHystrixThreadPoolKey, properties As IHystrixCommandOptions) As HystrixCommandMetrics
  overload: Steeltoe.CircuitBreaker.Hystrix.HystrixCommandMetrics.GetInstance*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Steeltoe.CircuitBreaker.Hystrix.HystrixCommandMetrics.GetInstance(Steeltoe.CircuitBreaker.Hystrix.IHystrixCommandKey)
  commentId: M:Steeltoe.CircuitBreaker.Hystrix.HystrixCommandMetrics.GetInstance(Steeltoe.CircuitBreaker.Hystrix.IHystrixCommandKey)
  id: GetInstance(Steeltoe.CircuitBreaker.Hystrix.IHystrixCommandKey)
  parent: Steeltoe.CircuitBreaker.Hystrix.HystrixCommandMetrics
  langs:
  - csharp
  - vb
  name: GetInstance(IHystrixCommandKey)
  nameWithType: HystrixCommandMetrics.GetInstance(IHystrixCommandKey)
  fullName: Steeltoe.CircuitBreaker.Hystrix.HystrixCommandMetrics.GetInstance(Steeltoe.CircuitBreaker.Hystrix.IHystrixCommandKey)
  type: Method
  source:
    remote:
      path: src/CircuitBreaker/src/HystrixBase/HystrixCommandMetrics.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: GetInstance
    path: ../Steeltoe/src/CircuitBreaker/src/HystrixBase/HystrixCommandMetrics.cs
    startLine: 87
  assemblies:
  - Steeltoe.CircuitBreaker.HystrixBase
  namespace: Steeltoe.CircuitBreaker.Hystrix
  syntax:
    content: public static HystrixCommandMetrics GetInstance(IHystrixCommandKey key)
    parameters:
    - id: key
      type: Steeltoe.CircuitBreaker.Hystrix.IHystrixCommandKey
    return:
      type: Steeltoe.CircuitBreaker.Hystrix.HystrixCommandMetrics
    content.vb: Public Shared Function GetInstance(key As IHystrixCommandKey) As HystrixCommandMetrics
  overload: Steeltoe.CircuitBreaker.Hystrix.HystrixCommandMetrics.GetInstance*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Steeltoe.CircuitBreaker.Hystrix.HystrixCommandMetrics.GetInstances
  commentId: M:Steeltoe.CircuitBreaker.Hystrix.HystrixCommandMetrics.GetInstances
  id: GetInstances
  parent: Steeltoe.CircuitBreaker.Hystrix.HystrixCommandMetrics
  langs:
  - csharp
  - vb
  name: GetInstances()
  nameWithType: HystrixCommandMetrics.GetInstances()
  fullName: Steeltoe.CircuitBreaker.Hystrix.HystrixCommandMetrics.GetInstances()
  type: Method
  source:
    remote:
      path: src/CircuitBreaker/src/HystrixBase/HystrixCommandMetrics.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: GetInstances
    path: ../Steeltoe/src/CircuitBreaker/src/HystrixBase/HystrixCommandMetrics.cs
    startLine: 93
  assemblies:
  - Steeltoe.CircuitBreaker.HystrixBase
  namespace: Steeltoe.CircuitBreaker.Hystrix
  syntax:
    content: public static ICollection<HystrixCommandMetrics> GetInstances()
    return:
      type: System.Collections.Generic.ICollection{Steeltoe.CircuitBreaker.Hystrix.HystrixCommandMetrics}
    content.vb: Public Shared Function GetInstances As ICollection(Of HystrixCommandMetrics)
  overload: Steeltoe.CircuitBreaker.Hystrix.HystrixCommandMetrics.GetInstances*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Steeltoe.CircuitBreaker.Hystrix.HystrixCommandMetrics.CommandKey
  commentId: P:Steeltoe.CircuitBreaker.Hystrix.HystrixCommandMetrics.CommandKey
  id: CommandKey
  parent: Steeltoe.CircuitBreaker.Hystrix.HystrixCommandMetrics
  langs:
  - csharp
  - vb
  name: CommandKey
  nameWithType: HystrixCommandMetrics.CommandKey
  fullName: Steeltoe.CircuitBreaker.Hystrix.HystrixCommandMetrics.CommandKey
  type: Property
  source:
    remote:
      path: src/CircuitBreaker/src/HystrixBase/HystrixCommandMetrics.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: CommandKey
    path: ../Steeltoe/src/CircuitBreaker/src/HystrixBase/HystrixCommandMetrics.cs
    startLine: 162
  assemblies:
  - Steeltoe.CircuitBreaker.HystrixBase
  namespace: Steeltoe.CircuitBreaker.Hystrix
  syntax:
    content: public IHystrixCommandKey CommandKey { get; }
    parameters: []
    return:
      type: Steeltoe.CircuitBreaker.Hystrix.IHystrixCommandKey
    content.vb: Public ReadOnly Property CommandKey As IHystrixCommandKey
  overload: Steeltoe.CircuitBreaker.Hystrix.HystrixCommandMetrics.CommandKey*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Steeltoe.CircuitBreaker.Hystrix.HystrixCommandMetrics.CommandGroup
  commentId: P:Steeltoe.CircuitBreaker.Hystrix.HystrixCommandMetrics.CommandGroup
  id: CommandGroup
  parent: Steeltoe.CircuitBreaker.Hystrix.HystrixCommandMetrics
  langs:
  - csharp
  - vb
  name: CommandGroup
  nameWithType: HystrixCommandMetrics.CommandGroup
  fullName: Steeltoe.CircuitBreaker.Hystrix.HystrixCommandMetrics.CommandGroup
  type: Property
  source:
    remote:
      path: src/CircuitBreaker/src/HystrixBase/HystrixCommandMetrics.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: CommandGroup
    path: ../Steeltoe/src/CircuitBreaker/src/HystrixBase/HystrixCommandMetrics.cs
    startLine: 164
  assemblies:
  - Steeltoe.CircuitBreaker.HystrixBase
  namespace: Steeltoe.CircuitBreaker.Hystrix
  syntax:
    content: public IHystrixCommandGroupKey CommandGroup { get; }
    parameters: []
    return:
      type: Steeltoe.CircuitBreaker.Hystrix.IHystrixCommandGroupKey
    content.vb: Public ReadOnly Property CommandGroup As IHystrixCommandGroupKey
  overload: Steeltoe.CircuitBreaker.Hystrix.HystrixCommandMetrics.CommandGroup*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Steeltoe.CircuitBreaker.Hystrix.HystrixCommandMetrics.ThreadPoolKey
  commentId: P:Steeltoe.CircuitBreaker.Hystrix.HystrixCommandMetrics.ThreadPoolKey
  id: ThreadPoolKey
  parent: Steeltoe.CircuitBreaker.Hystrix.HystrixCommandMetrics
  langs:
  - csharp
  - vb
  name: ThreadPoolKey
  nameWithType: HystrixCommandMetrics.ThreadPoolKey
  fullName: Steeltoe.CircuitBreaker.Hystrix.HystrixCommandMetrics.ThreadPoolKey
  type: Property
  source:
    remote:
      path: src/CircuitBreaker/src/HystrixBase/HystrixCommandMetrics.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: ThreadPoolKey
    path: ../Steeltoe/src/CircuitBreaker/src/HystrixBase/HystrixCommandMetrics.cs
    startLine: 166
  assemblies:
  - Steeltoe.CircuitBreaker.HystrixBase
  namespace: Steeltoe.CircuitBreaker.Hystrix
  syntax:
    content: public IHystrixThreadPoolKey ThreadPoolKey { get; }
    parameters: []
    return:
      type: Steeltoe.CircuitBreaker.Hystrix.IHystrixThreadPoolKey
    content.vb: Public ReadOnly Property ThreadPoolKey As IHystrixThreadPoolKey
  overload: Steeltoe.CircuitBreaker.Hystrix.HystrixCommandMetrics.ThreadPoolKey*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Steeltoe.CircuitBreaker.Hystrix.HystrixCommandMetrics.Properties
  commentId: P:Steeltoe.CircuitBreaker.Hystrix.HystrixCommandMetrics.Properties
  id: Properties
  parent: Steeltoe.CircuitBreaker.Hystrix.HystrixCommandMetrics
  langs:
  - csharp
  - vb
  name: Properties
  nameWithType: HystrixCommandMetrics.Properties
  fullName: Steeltoe.CircuitBreaker.Hystrix.HystrixCommandMetrics.Properties
  type: Property
  source:
    remote:
      path: src/CircuitBreaker/src/HystrixBase/HystrixCommandMetrics.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Properties
    path: ../Steeltoe/src/CircuitBreaker/src/HystrixBase/HystrixCommandMetrics.cs
    startLine: 168
  assemblies:
  - Steeltoe.CircuitBreaker.HystrixBase
  namespace: Steeltoe.CircuitBreaker.Hystrix
  syntax:
    content: public IHystrixCommandOptions Properties { get; }
    parameters: []
    return:
      type: Steeltoe.CircuitBreaker.Hystrix.IHystrixCommandOptions
    content.vb: Public ReadOnly Property Properties As IHystrixCommandOptions
  overload: Steeltoe.CircuitBreaker.Hystrix.HystrixCommandMetrics.Properties*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Steeltoe.CircuitBreaker.Hystrix.HystrixCommandMetrics.GetRollingCount(Steeltoe.CircuitBreaker.Hystrix.HystrixEventType)
  commentId: M:Steeltoe.CircuitBreaker.Hystrix.HystrixCommandMetrics.GetRollingCount(Steeltoe.CircuitBreaker.Hystrix.HystrixEventType)
  id: GetRollingCount(Steeltoe.CircuitBreaker.Hystrix.HystrixEventType)
  parent: Steeltoe.CircuitBreaker.Hystrix.HystrixCommandMetrics
  langs:
  - csharp
  - vb
  name: GetRollingCount(HystrixEventType)
  nameWithType: HystrixCommandMetrics.GetRollingCount(HystrixEventType)
  fullName: Steeltoe.CircuitBreaker.Hystrix.HystrixCommandMetrics.GetRollingCount(Steeltoe.CircuitBreaker.Hystrix.HystrixEventType)
  type: Method
  source:
    remote:
      path: src/CircuitBreaker/src/HystrixBase/HystrixCommandMetrics.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: GetRollingCount
    path: ../Steeltoe/src/CircuitBreaker/src/HystrixBase/HystrixCommandMetrics.cs
    startLine: 170
  assemblies:
  - Steeltoe.CircuitBreaker.HystrixBase
  namespace: Steeltoe.CircuitBreaker.Hystrix
  syntax:
    content: public long GetRollingCount(HystrixEventType eventType)
    parameters:
    - id: eventType
      type: Steeltoe.CircuitBreaker.Hystrix.HystrixEventType
    return:
      type: System.Int64
    content.vb: Public Function GetRollingCount(eventType As HystrixEventType) As Long
  overload: Steeltoe.CircuitBreaker.Hystrix.HystrixCommandMetrics.GetRollingCount*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Steeltoe.CircuitBreaker.Hystrix.HystrixCommandMetrics.GetRollingCount(Steeltoe.CircuitBreaker.Hystrix.Util.HystrixRollingNumberEvent)
  commentId: M:Steeltoe.CircuitBreaker.Hystrix.HystrixCommandMetrics.GetRollingCount(Steeltoe.CircuitBreaker.Hystrix.Util.HystrixRollingNumberEvent)
  id: GetRollingCount(Steeltoe.CircuitBreaker.Hystrix.Util.HystrixRollingNumberEvent)
  parent: Steeltoe.CircuitBreaker.Hystrix.HystrixCommandMetrics
  langs:
  - csharp
  - vb
  name: GetRollingCount(HystrixRollingNumberEvent)
  nameWithType: HystrixCommandMetrics.GetRollingCount(HystrixRollingNumberEvent)
  fullName: Steeltoe.CircuitBreaker.Hystrix.HystrixCommandMetrics.GetRollingCount(Steeltoe.CircuitBreaker.Hystrix.Util.HystrixRollingNumberEvent)
  type: Method
  source:
    remote:
      path: src/CircuitBreaker/src/HystrixBase/HystrixCommandMetrics.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: GetRollingCount
    path: ../Steeltoe/src/CircuitBreaker/src/HystrixBase/HystrixCommandMetrics.cs
    startLine: 175
  assemblies:
  - Steeltoe.CircuitBreaker.HystrixBase
  namespace: Steeltoe.CircuitBreaker.Hystrix
  syntax:
    content: public override long GetRollingCount(HystrixRollingNumberEvent event)
    parameters:
    - id: event
      type: Steeltoe.CircuitBreaker.Hystrix.Util.HystrixRollingNumberEvent
    return:
      type: System.Int64
    content.vb: Public Overrides Function GetRollingCount(event As HystrixRollingNumberEvent) As Long
  overridden: Steeltoe.CircuitBreaker.Hystrix.HystrixMetrics.GetRollingCount(Steeltoe.CircuitBreaker.Hystrix.Util.HystrixRollingNumberEvent)
  overload: Steeltoe.CircuitBreaker.Hystrix.HystrixCommandMetrics.GetRollingCount*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Steeltoe.CircuitBreaker.Hystrix.HystrixCommandMetrics.GetCumulativeCount(Steeltoe.CircuitBreaker.Hystrix.HystrixEventType)
  commentId: M:Steeltoe.CircuitBreaker.Hystrix.HystrixCommandMetrics.GetCumulativeCount(Steeltoe.CircuitBreaker.Hystrix.HystrixEventType)
  id: GetCumulativeCount(Steeltoe.CircuitBreaker.Hystrix.HystrixEventType)
  parent: Steeltoe.CircuitBreaker.Hystrix.HystrixCommandMetrics
  langs:
  - csharp
  - vb
  name: GetCumulativeCount(HystrixEventType)
  nameWithType: HystrixCommandMetrics.GetCumulativeCount(HystrixEventType)
  fullName: Steeltoe.CircuitBreaker.Hystrix.HystrixCommandMetrics.GetCumulativeCount(Steeltoe.CircuitBreaker.Hystrix.HystrixEventType)
  type: Method
  source:
    remote:
      path: src/CircuitBreaker/src/HystrixBase/HystrixCommandMetrics.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: GetCumulativeCount
    path: ../Steeltoe/src/CircuitBreaker/src/HystrixBase/HystrixCommandMetrics.cs
    startLine: 180
  assemblies:
  - Steeltoe.CircuitBreaker.HystrixBase
  namespace: Steeltoe.CircuitBreaker.Hystrix
  syntax:
    content: public long GetCumulativeCount(HystrixEventType eventType)
    parameters:
    - id: eventType
      type: Steeltoe.CircuitBreaker.Hystrix.HystrixEventType
    return:
      type: System.Int64
    content.vb: Public Function GetCumulativeCount(eventType As HystrixEventType) As Long
  overload: Steeltoe.CircuitBreaker.Hystrix.HystrixCommandMetrics.GetCumulativeCount*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Steeltoe.CircuitBreaker.Hystrix.HystrixCommandMetrics.GetCumulativeCount(Steeltoe.CircuitBreaker.Hystrix.Util.HystrixRollingNumberEvent)
  commentId: M:Steeltoe.CircuitBreaker.Hystrix.HystrixCommandMetrics.GetCumulativeCount(Steeltoe.CircuitBreaker.Hystrix.Util.HystrixRollingNumberEvent)
  id: GetCumulativeCount(Steeltoe.CircuitBreaker.Hystrix.Util.HystrixRollingNumberEvent)
  parent: Steeltoe.CircuitBreaker.Hystrix.HystrixCommandMetrics
  langs:
  - csharp
  - vb
  name: GetCumulativeCount(HystrixRollingNumberEvent)
  nameWithType: HystrixCommandMetrics.GetCumulativeCount(HystrixRollingNumberEvent)
  fullName: Steeltoe.CircuitBreaker.Hystrix.HystrixCommandMetrics.GetCumulativeCount(Steeltoe.CircuitBreaker.Hystrix.Util.HystrixRollingNumberEvent)
  type: Method
  source:
    remote:
      path: src/CircuitBreaker/src/HystrixBase/HystrixCommandMetrics.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: GetCumulativeCount
    path: ../Steeltoe/src/CircuitBreaker/src/HystrixBase/HystrixCommandMetrics.cs
    startLine: 185
  assemblies:
  - Steeltoe.CircuitBreaker.HystrixBase
  namespace: Steeltoe.CircuitBreaker.Hystrix
  syntax:
    content: public override long GetCumulativeCount(HystrixRollingNumberEvent event)
    parameters:
    - id: event
      type: Steeltoe.CircuitBreaker.Hystrix.Util.HystrixRollingNumberEvent
    return:
      type: System.Int64
    content.vb: Public Overrides Function GetCumulativeCount(event As HystrixRollingNumberEvent) As Long
  overridden: Steeltoe.CircuitBreaker.Hystrix.HystrixMetrics.GetCumulativeCount(Steeltoe.CircuitBreaker.Hystrix.Util.HystrixRollingNumberEvent)
  overload: Steeltoe.CircuitBreaker.Hystrix.HystrixCommandMetrics.GetCumulativeCount*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Steeltoe.CircuitBreaker.Hystrix.HystrixCommandMetrics.GetExecutionTimePercentile(System.Double)
  commentId: M:Steeltoe.CircuitBreaker.Hystrix.HystrixCommandMetrics.GetExecutionTimePercentile(System.Double)
  id: GetExecutionTimePercentile(System.Double)
  parent: Steeltoe.CircuitBreaker.Hystrix.HystrixCommandMetrics
  langs:
  - csharp
  - vb
  name: GetExecutionTimePercentile(Double)
  nameWithType: HystrixCommandMetrics.GetExecutionTimePercentile(Double)
  fullName: Steeltoe.CircuitBreaker.Hystrix.HystrixCommandMetrics.GetExecutionTimePercentile(System.Double)
  type: Method
  source:
    remote:
      path: src/CircuitBreaker/src/HystrixBase/HystrixCommandMetrics.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: GetExecutionTimePercentile
    path: ../Steeltoe/src/CircuitBreaker/src/HystrixBase/HystrixCommandMetrics.cs
    startLine: 190
  assemblies:
  - Steeltoe.CircuitBreaker.HystrixBase
  namespace: Steeltoe.CircuitBreaker.Hystrix
  syntax:
    content: public int GetExecutionTimePercentile(double percentile)
    parameters:
    - id: percentile
      type: System.Double
    return:
      type: System.Int32
    content.vb: Public Function GetExecutionTimePercentile(percentile As Double) As Integer
  overload: Steeltoe.CircuitBreaker.Hystrix.HystrixCommandMetrics.GetExecutionTimePercentile*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Steeltoe.CircuitBreaker.Hystrix.HystrixCommandMetrics.ExecutionTimeMean
  commentId: P:Steeltoe.CircuitBreaker.Hystrix.HystrixCommandMetrics.ExecutionTimeMean
  id: ExecutionTimeMean
  parent: Steeltoe.CircuitBreaker.Hystrix.HystrixCommandMetrics
  langs:
  - csharp
  - vb
  name: ExecutionTimeMean
  nameWithType: HystrixCommandMetrics.ExecutionTimeMean
  fullName: Steeltoe.CircuitBreaker.Hystrix.HystrixCommandMetrics.ExecutionTimeMean
  type: Property
  source:
    remote:
      path: src/CircuitBreaker/src/HystrixBase/HystrixCommandMetrics.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: ExecutionTimeMean
    path: ../Steeltoe/src/CircuitBreaker/src/HystrixBase/HystrixCommandMetrics.cs
    startLine: 195
  assemblies:
  - Steeltoe.CircuitBreaker.HystrixBase
  namespace: Steeltoe.CircuitBreaker.Hystrix
  syntax:
    content: public int ExecutionTimeMean { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property ExecutionTimeMean As Integer
  overload: Steeltoe.CircuitBreaker.Hystrix.HystrixCommandMetrics.ExecutionTimeMean*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Steeltoe.CircuitBreaker.Hystrix.HystrixCommandMetrics.GetTotalTimePercentile(System.Double)
  commentId: M:Steeltoe.CircuitBreaker.Hystrix.HystrixCommandMetrics.GetTotalTimePercentile(System.Double)
  id: GetTotalTimePercentile(System.Double)
  parent: Steeltoe.CircuitBreaker.Hystrix.HystrixCommandMetrics
  langs:
  - csharp
  - vb
  name: GetTotalTimePercentile(Double)
  nameWithType: HystrixCommandMetrics.GetTotalTimePercentile(Double)
  fullName: Steeltoe.CircuitBreaker.Hystrix.HystrixCommandMetrics.GetTotalTimePercentile(System.Double)
  type: Method
  source:
    remote:
      path: src/CircuitBreaker/src/HystrixBase/HystrixCommandMetrics.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: GetTotalTimePercentile
    path: ../Steeltoe/src/CircuitBreaker/src/HystrixBase/HystrixCommandMetrics.cs
    startLine: 200
  assemblies:
  - Steeltoe.CircuitBreaker.HystrixBase
  namespace: Steeltoe.CircuitBreaker.Hystrix
  syntax:
    content: public int GetTotalTimePercentile(double percentile)
    parameters:
    - id: percentile
      type: System.Double
    return:
      type: System.Int32
    content.vb: Public Function GetTotalTimePercentile(percentile As Double) As Integer
  overload: Steeltoe.CircuitBreaker.Hystrix.HystrixCommandMetrics.GetTotalTimePercentile*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Steeltoe.CircuitBreaker.Hystrix.HystrixCommandMetrics.TotalTimeMean
  commentId: P:Steeltoe.CircuitBreaker.Hystrix.HystrixCommandMetrics.TotalTimeMean
  id: TotalTimeMean
  parent: Steeltoe.CircuitBreaker.Hystrix.HystrixCommandMetrics
  langs:
  - csharp
  - vb
  name: TotalTimeMean
  nameWithType: HystrixCommandMetrics.TotalTimeMean
  fullName: Steeltoe.CircuitBreaker.Hystrix.HystrixCommandMetrics.TotalTimeMean
  type: Property
  source:
    remote:
      path: src/CircuitBreaker/src/HystrixBase/HystrixCommandMetrics.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: TotalTimeMean
    path: ../Steeltoe/src/CircuitBreaker/src/HystrixBase/HystrixCommandMetrics.cs
    startLine: 205
  assemblies:
  - Steeltoe.CircuitBreaker.HystrixBase
  namespace: Steeltoe.CircuitBreaker.Hystrix
  syntax:
    content: public int TotalTimeMean { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property TotalTimeMean As Integer
  overload: Steeltoe.CircuitBreaker.Hystrix.HystrixCommandMetrics.TotalTimeMean*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Steeltoe.CircuitBreaker.Hystrix.HystrixCommandMetrics.RollingMaxConcurrentExecutions
  commentId: P:Steeltoe.CircuitBreaker.Hystrix.HystrixCommandMetrics.RollingMaxConcurrentExecutions
  id: RollingMaxConcurrentExecutions
  parent: Steeltoe.CircuitBreaker.Hystrix.HystrixCommandMetrics
  langs:
  - csharp
  - vb
  name: RollingMaxConcurrentExecutions
  nameWithType: HystrixCommandMetrics.RollingMaxConcurrentExecutions
  fullName: Steeltoe.CircuitBreaker.Hystrix.HystrixCommandMetrics.RollingMaxConcurrentExecutions
  type: Property
  source:
    remote:
      path: src/CircuitBreaker/src/HystrixBase/HystrixCommandMetrics.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: RollingMaxConcurrentExecutions
    path: ../Steeltoe/src/CircuitBreaker/src/HystrixBase/HystrixCommandMetrics.cs
    startLine: 207
  assemblies:
  - Steeltoe.CircuitBreaker.HystrixBase
  namespace: Steeltoe.CircuitBreaker.Hystrix
  syntax:
    content: public long RollingMaxConcurrentExecutions { get; }
    parameters: []
    return:
      type: System.Int64
    content.vb: Public ReadOnly Property RollingMaxConcurrentExecutions As Long
  overload: Steeltoe.CircuitBreaker.Hystrix.HystrixCommandMetrics.RollingMaxConcurrentExecutions*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Steeltoe.CircuitBreaker.Hystrix.HystrixCommandMetrics.CurrentConcurrentExecutionCount
  commentId: P:Steeltoe.CircuitBreaker.Hystrix.HystrixCommandMetrics.CurrentConcurrentExecutionCount
  id: CurrentConcurrentExecutionCount
  parent: Steeltoe.CircuitBreaker.Hystrix.HystrixCommandMetrics
  langs:
  - csharp
  - vb
  name: CurrentConcurrentExecutionCount
  nameWithType: HystrixCommandMetrics.CurrentConcurrentExecutionCount
  fullName: Steeltoe.CircuitBreaker.Hystrix.HystrixCommandMetrics.CurrentConcurrentExecutionCount
  type: Property
  source:
    remote:
      path: src/CircuitBreaker/src/HystrixBase/HystrixCommandMetrics.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: CurrentConcurrentExecutionCount
    path: ../Steeltoe/src/CircuitBreaker/src/HystrixBase/HystrixCommandMetrics.cs
    startLine: 209
  assemblies:
  - Steeltoe.CircuitBreaker.HystrixBase
  namespace: Steeltoe.CircuitBreaker.Hystrix
  syntax:
    content: public int CurrentConcurrentExecutionCount { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property CurrentConcurrentExecutionCount As Integer
  overload: Steeltoe.CircuitBreaker.Hystrix.HystrixCommandMetrics.CurrentConcurrentExecutionCount*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Steeltoe.CircuitBreaker.Hystrix.HystrixCommandMetrics.Healthcounts
  commentId: P:Steeltoe.CircuitBreaker.Hystrix.HystrixCommandMetrics.Healthcounts
  id: Healthcounts
  parent: Steeltoe.CircuitBreaker.Hystrix.HystrixCommandMetrics
  langs:
  - csharp
  - vb
  name: Healthcounts
  nameWithType: HystrixCommandMetrics.Healthcounts
  fullName: Steeltoe.CircuitBreaker.Hystrix.HystrixCommandMetrics.Healthcounts
  type: Property
  source:
    remote:
      path: src/CircuitBreaker/src/HystrixBase/HystrixCommandMetrics.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Healthcounts
    path: ../Steeltoe/src/CircuitBreaker/src/HystrixBase/HystrixCommandMetrics.cs
    startLine: 226
  assemblies:
  - Steeltoe.CircuitBreaker.HystrixBase
  namespace: Steeltoe.CircuitBreaker.Hystrix
  syntax:
    content: public HealthCounts Healthcounts { get; }
    parameters: []
    return:
      type: Steeltoe.CircuitBreaker.Hystrix.HealthCounts
    content.vb: Public ReadOnly Property Healthcounts As HealthCounts
  overload: Steeltoe.CircuitBreaker.Hystrix.HystrixCommandMetrics.Healthcounts*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: Steeltoe.CircuitBreaker.Hystrix
  commentId: N:Steeltoe.CircuitBreaker.Hystrix
  name: Steeltoe.CircuitBreaker.Hystrix
  nameWithType: Steeltoe.CircuitBreaker.Hystrix
  fullName: Steeltoe.CircuitBreaker.Hystrix
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Steeltoe.CircuitBreaker.Hystrix.HystrixMetrics
  commentId: T:Steeltoe.CircuitBreaker.Hystrix.HystrixMetrics
  parent: Steeltoe.CircuitBreaker.Hystrix
  name: HystrixMetrics
  nameWithType: HystrixMetrics
  fullName: Steeltoe.CircuitBreaker.Hystrix.HystrixMetrics
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Steeltoe.CircuitBreaker.Hystrix.HystrixCommandMetrics.AppendEventToBucket*
  commentId: Overload:Steeltoe.CircuitBreaker.Hystrix.HystrixCommandMetrics.AppendEventToBucket
  name: AppendEventToBucket
  nameWithType: HystrixCommandMetrics.AppendEventToBucket
  fullName: Steeltoe.CircuitBreaker.Hystrix.HystrixCommandMetrics.AppendEventToBucket
- uid: System.Func{System.Int64[],Steeltoe.CircuitBreaker.Hystrix.Metric.HystrixCommandCompletion,System.Int64[]}
  commentId: T:System.Func{System.Int64[],Steeltoe.CircuitBreaker.Hystrix.Metric.HystrixCommandCompletion,System.Int64[]}
  parent: System
  definition: System.Func`3
  name: Func<Int64[], HystrixCommandCompletion, Int64[]>
  nameWithType: Func<Int64[], HystrixCommandCompletion, Int64[]>
  fullName: System.Func<System.Int64[], Steeltoe.CircuitBreaker.Hystrix.Metric.HystrixCommandCompletion, System.Int64[]>
  nameWithType.vb: Func(Of Int64(), HystrixCommandCompletion, Int64())
  fullName.vb: System.Func(Of System.Int64(), Steeltoe.CircuitBreaker.Hystrix.Metric.HystrixCommandCompletion, System.Int64())
  name.vb: Func(Of Int64(), HystrixCommandCompletion, Int64())
  spec.csharp:
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.CircuitBreaker.Hystrix.Metric.HystrixCommandCompletion
    name: HystrixCommandCompletion
    nameWithType: HystrixCommandCompletion
    fullName: Steeltoe.CircuitBreaker.Hystrix.Metric.HystrixCommandCompletion
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.CircuitBreaker.Hystrix.Metric.HystrixCommandCompletion
    name: HystrixCommandCompletion
    nameWithType: HystrixCommandCompletion
    fullName: Steeltoe.CircuitBreaker.Hystrix.Metric.HystrixCommandCompletion
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Func`3
  commentId: T:System.Func`3
  isExternal: true
  name: Func<T1, T2, TResult>
  nameWithType: Func<T1, T2, TResult>
  fullName: System.Func<T1, T2, TResult>
  nameWithType.vb: Func(Of T1, T2, TResult)
  fullName.vb: System.Func(Of T1, T2, TResult)
  name.vb: Func(Of T1, T2, TResult)
  spec.csharp:
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.CircuitBreaker.Hystrix.HystrixCommandMetrics.BucketAggregator*
  commentId: Overload:Steeltoe.CircuitBreaker.Hystrix.HystrixCommandMetrics.BucketAggregator
  name: BucketAggregator
  nameWithType: HystrixCommandMetrics.BucketAggregator
  fullName: Steeltoe.CircuitBreaker.Hystrix.HystrixCommandMetrics.BucketAggregator
- uid: System.Func{System.Int64[],System.Int64[],System.Int64[]}
  commentId: T:System.Func{System.Int64[],System.Int64[],System.Int64[]}
  parent: System
  definition: System.Func`3
  name: Func<Int64[], Int64[], Int64[]>
  nameWithType: Func<Int64[], Int64[], Int64[]>
  fullName: System.Func<System.Int64[], System.Int64[], System.Int64[]>
  nameWithType.vb: Func(Of Int64(), Int64(), Int64())
  fullName.vb: System.Func(Of System.Int64(), System.Int64(), System.Int64())
  name.vb: Func(Of Int64(), Int64(), Int64())
  spec.csharp:
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.CircuitBreaker.Hystrix.HystrixCommandMetrics.GetInstance*
  commentId: Overload:Steeltoe.CircuitBreaker.Hystrix.HystrixCommandMetrics.GetInstance
  name: GetInstance
  nameWithType: HystrixCommandMetrics.GetInstance
  fullName: Steeltoe.CircuitBreaker.Hystrix.HystrixCommandMetrics.GetInstance
- uid: Steeltoe.CircuitBreaker.Hystrix.IHystrixCommandKey
  commentId: T:Steeltoe.CircuitBreaker.Hystrix.IHystrixCommandKey
  parent: Steeltoe.CircuitBreaker.Hystrix
  name: IHystrixCommandKey
  nameWithType: IHystrixCommandKey
  fullName: Steeltoe.CircuitBreaker.Hystrix.IHystrixCommandKey
- uid: Steeltoe.CircuitBreaker.Hystrix.IHystrixCommandGroupKey
  commentId: T:Steeltoe.CircuitBreaker.Hystrix.IHystrixCommandGroupKey
  parent: Steeltoe.CircuitBreaker.Hystrix
  name: IHystrixCommandGroupKey
  nameWithType: IHystrixCommandGroupKey
  fullName: Steeltoe.CircuitBreaker.Hystrix.IHystrixCommandGroupKey
- uid: Steeltoe.CircuitBreaker.Hystrix.IHystrixCommandOptions
  commentId: T:Steeltoe.CircuitBreaker.Hystrix.IHystrixCommandOptions
  parent: Steeltoe.CircuitBreaker.Hystrix
  name: IHystrixCommandOptions
  nameWithType: IHystrixCommandOptions
  fullName: Steeltoe.CircuitBreaker.Hystrix.IHystrixCommandOptions
- uid: Steeltoe.CircuitBreaker.Hystrix.HystrixCommandMetrics
  commentId: T:Steeltoe.CircuitBreaker.Hystrix.HystrixCommandMetrics
  parent: Steeltoe.CircuitBreaker.Hystrix
  name: HystrixCommandMetrics
  nameWithType: HystrixCommandMetrics
  fullName: Steeltoe.CircuitBreaker.Hystrix.HystrixCommandMetrics
- uid: Steeltoe.CircuitBreaker.Hystrix.IHystrixThreadPoolKey
  commentId: T:Steeltoe.CircuitBreaker.Hystrix.IHystrixThreadPoolKey
  parent: Steeltoe.CircuitBreaker.Hystrix
  name: IHystrixThreadPoolKey
  nameWithType: IHystrixThreadPoolKey
  fullName: Steeltoe.CircuitBreaker.Hystrix.IHystrixThreadPoolKey
- uid: Steeltoe.CircuitBreaker.Hystrix.HystrixCommandMetrics.GetInstances*
  commentId: Overload:Steeltoe.CircuitBreaker.Hystrix.HystrixCommandMetrics.GetInstances
  name: GetInstances
  nameWithType: HystrixCommandMetrics.GetInstances
  fullName: Steeltoe.CircuitBreaker.Hystrix.HystrixCommandMetrics.GetInstances
- uid: System.Collections.Generic.ICollection{Steeltoe.CircuitBreaker.Hystrix.HystrixCommandMetrics}
  commentId: T:System.Collections.Generic.ICollection{Steeltoe.CircuitBreaker.Hystrix.HystrixCommandMetrics}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.ICollection`1
  name: ICollection<HystrixCommandMetrics>
  nameWithType: ICollection<HystrixCommandMetrics>
  fullName: System.Collections.Generic.ICollection<Steeltoe.CircuitBreaker.Hystrix.HystrixCommandMetrics>
  nameWithType.vb: ICollection(Of HystrixCommandMetrics)
  fullName.vb: System.Collections.Generic.ICollection(Of Steeltoe.CircuitBreaker.Hystrix.HystrixCommandMetrics)
  name.vb: ICollection(Of HystrixCommandMetrics)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Steeltoe.CircuitBreaker.Hystrix.HystrixCommandMetrics
    name: HystrixCommandMetrics
    nameWithType: HystrixCommandMetrics
    fullName: Steeltoe.CircuitBreaker.Hystrix.HystrixCommandMetrics
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Steeltoe.CircuitBreaker.Hystrix.HystrixCommandMetrics
    name: HystrixCommandMetrics
    nameWithType: HystrixCommandMetrics
    fullName: Steeltoe.CircuitBreaker.Hystrix.HystrixCommandMetrics
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.ICollection`1
  commentId: T:System.Collections.Generic.ICollection`1
  isExternal: true
  name: ICollection<T>
  nameWithType: ICollection<T>
  fullName: System.Collections.Generic.ICollection<T>
  nameWithType.vb: ICollection(Of T)
  fullName.vb: System.Collections.Generic.ICollection(Of T)
  name.vb: ICollection(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Steeltoe.CircuitBreaker.Hystrix.HystrixCommandMetrics.CommandKey*
  commentId: Overload:Steeltoe.CircuitBreaker.Hystrix.HystrixCommandMetrics.CommandKey
  name: CommandKey
  nameWithType: HystrixCommandMetrics.CommandKey
  fullName: Steeltoe.CircuitBreaker.Hystrix.HystrixCommandMetrics.CommandKey
- uid: Steeltoe.CircuitBreaker.Hystrix.HystrixCommandMetrics.CommandGroup*
  commentId: Overload:Steeltoe.CircuitBreaker.Hystrix.HystrixCommandMetrics.CommandGroup
  name: CommandGroup
  nameWithType: HystrixCommandMetrics.CommandGroup
  fullName: Steeltoe.CircuitBreaker.Hystrix.HystrixCommandMetrics.CommandGroup
- uid: Steeltoe.CircuitBreaker.Hystrix.HystrixCommandMetrics.ThreadPoolKey*
  commentId: Overload:Steeltoe.CircuitBreaker.Hystrix.HystrixCommandMetrics.ThreadPoolKey
  name: ThreadPoolKey
  nameWithType: HystrixCommandMetrics.ThreadPoolKey
  fullName: Steeltoe.CircuitBreaker.Hystrix.HystrixCommandMetrics.ThreadPoolKey
- uid: Steeltoe.CircuitBreaker.Hystrix.HystrixCommandMetrics.Properties*
  commentId: Overload:Steeltoe.CircuitBreaker.Hystrix.HystrixCommandMetrics.Properties
  name: Properties
  nameWithType: HystrixCommandMetrics.Properties
  fullName: Steeltoe.CircuitBreaker.Hystrix.HystrixCommandMetrics.Properties
- uid: Steeltoe.CircuitBreaker.Hystrix.HystrixCommandMetrics.GetRollingCount*
  commentId: Overload:Steeltoe.CircuitBreaker.Hystrix.HystrixCommandMetrics.GetRollingCount
  name: GetRollingCount
  nameWithType: HystrixCommandMetrics.GetRollingCount
  fullName: Steeltoe.CircuitBreaker.Hystrix.HystrixCommandMetrics.GetRollingCount
- uid: Steeltoe.CircuitBreaker.Hystrix.HystrixEventType
  commentId: T:Steeltoe.CircuitBreaker.Hystrix.HystrixEventType
  parent: Steeltoe.CircuitBreaker.Hystrix
  name: HystrixEventType
  nameWithType: HystrixEventType
  fullName: Steeltoe.CircuitBreaker.Hystrix.HystrixEventType
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: Steeltoe.CircuitBreaker.Hystrix.HystrixMetrics.GetRollingCount(Steeltoe.CircuitBreaker.Hystrix.Util.HystrixRollingNumberEvent)
  commentId: M:Steeltoe.CircuitBreaker.Hystrix.HystrixMetrics.GetRollingCount(Steeltoe.CircuitBreaker.Hystrix.Util.HystrixRollingNumberEvent)
  parent: Steeltoe.CircuitBreaker.Hystrix.HystrixMetrics
  name: GetRollingCount(HystrixRollingNumberEvent)
  nameWithType: HystrixMetrics.GetRollingCount(HystrixRollingNumberEvent)
  fullName: Steeltoe.CircuitBreaker.Hystrix.HystrixMetrics.GetRollingCount(Steeltoe.CircuitBreaker.Hystrix.Util.HystrixRollingNumberEvent)
  spec.csharp:
  - uid: Steeltoe.CircuitBreaker.Hystrix.HystrixMetrics.GetRollingCount(Steeltoe.CircuitBreaker.Hystrix.Util.HystrixRollingNumberEvent)
    name: GetRollingCount
    nameWithType: HystrixMetrics.GetRollingCount
    fullName: Steeltoe.CircuitBreaker.Hystrix.HystrixMetrics.GetRollingCount
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.CircuitBreaker.Hystrix.Util.HystrixRollingNumberEvent
    name: HystrixRollingNumberEvent
    nameWithType: HystrixRollingNumberEvent
    fullName: Steeltoe.CircuitBreaker.Hystrix.Util.HystrixRollingNumberEvent
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.CircuitBreaker.Hystrix.HystrixMetrics.GetRollingCount(Steeltoe.CircuitBreaker.Hystrix.Util.HystrixRollingNumberEvent)
    name: GetRollingCount
    nameWithType: HystrixMetrics.GetRollingCount
    fullName: Steeltoe.CircuitBreaker.Hystrix.HystrixMetrics.GetRollingCount
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.CircuitBreaker.Hystrix.Util.HystrixRollingNumberEvent
    name: HystrixRollingNumberEvent
    nameWithType: HystrixRollingNumberEvent
    fullName: Steeltoe.CircuitBreaker.Hystrix.Util.HystrixRollingNumberEvent
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.CircuitBreaker.Hystrix.Util.HystrixRollingNumberEvent
  commentId: T:Steeltoe.CircuitBreaker.Hystrix.Util.HystrixRollingNumberEvent
  parent: Steeltoe.CircuitBreaker.Hystrix.Util
  name: HystrixRollingNumberEvent
  nameWithType: HystrixRollingNumberEvent
  fullName: Steeltoe.CircuitBreaker.Hystrix.Util.HystrixRollingNumberEvent
- uid: Steeltoe.CircuitBreaker.Hystrix.Util
  commentId: N:Steeltoe.CircuitBreaker.Hystrix.Util
  name: Steeltoe.CircuitBreaker.Hystrix.Util
  nameWithType: Steeltoe.CircuitBreaker.Hystrix.Util
  fullName: Steeltoe.CircuitBreaker.Hystrix.Util
- uid: Steeltoe.CircuitBreaker.Hystrix.HystrixCommandMetrics.GetCumulativeCount*
  commentId: Overload:Steeltoe.CircuitBreaker.Hystrix.HystrixCommandMetrics.GetCumulativeCount
  name: GetCumulativeCount
  nameWithType: HystrixCommandMetrics.GetCumulativeCount
  fullName: Steeltoe.CircuitBreaker.Hystrix.HystrixCommandMetrics.GetCumulativeCount
- uid: Steeltoe.CircuitBreaker.Hystrix.HystrixMetrics.GetCumulativeCount(Steeltoe.CircuitBreaker.Hystrix.Util.HystrixRollingNumberEvent)
  commentId: M:Steeltoe.CircuitBreaker.Hystrix.HystrixMetrics.GetCumulativeCount(Steeltoe.CircuitBreaker.Hystrix.Util.HystrixRollingNumberEvent)
  parent: Steeltoe.CircuitBreaker.Hystrix.HystrixMetrics
  name: GetCumulativeCount(HystrixRollingNumberEvent)
  nameWithType: HystrixMetrics.GetCumulativeCount(HystrixRollingNumberEvent)
  fullName: Steeltoe.CircuitBreaker.Hystrix.HystrixMetrics.GetCumulativeCount(Steeltoe.CircuitBreaker.Hystrix.Util.HystrixRollingNumberEvent)
  spec.csharp:
  - uid: Steeltoe.CircuitBreaker.Hystrix.HystrixMetrics.GetCumulativeCount(Steeltoe.CircuitBreaker.Hystrix.Util.HystrixRollingNumberEvent)
    name: GetCumulativeCount
    nameWithType: HystrixMetrics.GetCumulativeCount
    fullName: Steeltoe.CircuitBreaker.Hystrix.HystrixMetrics.GetCumulativeCount
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.CircuitBreaker.Hystrix.Util.HystrixRollingNumberEvent
    name: HystrixRollingNumberEvent
    nameWithType: HystrixRollingNumberEvent
    fullName: Steeltoe.CircuitBreaker.Hystrix.Util.HystrixRollingNumberEvent
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.CircuitBreaker.Hystrix.HystrixMetrics.GetCumulativeCount(Steeltoe.CircuitBreaker.Hystrix.Util.HystrixRollingNumberEvent)
    name: GetCumulativeCount
    nameWithType: HystrixMetrics.GetCumulativeCount
    fullName: Steeltoe.CircuitBreaker.Hystrix.HystrixMetrics.GetCumulativeCount
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.CircuitBreaker.Hystrix.Util.HystrixRollingNumberEvent
    name: HystrixRollingNumberEvent
    nameWithType: HystrixRollingNumberEvent
    fullName: Steeltoe.CircuitBreaker.Hystrix.Util.HystrixRollingNumberEvent
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.CircuitBreaker.Hystrix.HystrixCommandMetrics.GetExecutionTimePercentile*
  commentId: Overload:Steeltoe.CircuitBreaker.Hystrix.HystrixCommandMetrics.GetExecutionTimePercentile
  name: GetExecutionTimePercentile
  nameWithType: HystrixCommandMetrics.GetExecutionTimePercentile
  fullName: Steeltoe.CircuitBreaker.Hystrix.HystrixCommandMetrics.GetExecutionTimePercentile
- uid: System.Double
  commentId: T:System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Steeltoe.CircuitBreaker.Hystrix.HystrixCommandMetrics.ExecutionTimeMean*
  commentId: Overload:Steeltoe.CircuitBreaker.Hystrix.HystrixCommandMetrics.ExecutionTimeMean
  name: ExecutionTimeMean
  nameWithType: HystrixCommandMetrics.ExecutionTimeMean
  fullName: Steeltoe.CircuitBreaker.Hystrix.HystrixCommandMetrics.ExecutionTimeMean
- uid: Steeltoe.CircuitBreaker.Hystrix.HystrixCommandMetrics.GetTotalTimePercentile*
  commentId: Overload:Steeltoe.CircuitBreaker.Hystrix.HystrixCommandMetrics.GetTotalTimePercentile
  name: GetTotalTimePercentile
  nameWithType: HystrixCommandMetrics.GetTotalTimePercentile
  fullName: Steeltoe.CircuitBreaker.Hystrix.HystrixCommandMetrics.GetTotalTimePercentile
- uid: Steeltoe.CircuitBreaker.Hystrix.HystrixCommandMetrics.TotalTimeMean*
  commentId: Overload:Steeltoe.CircuitBreaker.Hystrix.HystrixCommandMetrics.TotalTimeMean
  name: TotalTimeMean
  nameWithType: HystrixCommandMetrics.TotalTimeMean
  fullName: Steeltoe.CircuitBreaker.Hystrix.HystrixCommandMetrics.TotalTimeMean
- uid: Steeltoe.CircuitBreaker.Hystrix.HystrixCommandMetrics.RollingMaxConcurrentExecutions*
  commentId: Overload:Steeltoe.CircuitBreaker.Hystrix.HystrixCommandMetrics.RollingMaxConcurrentExecutions
  name: RollingMaxConcurrentExecutions
  nameWithType: HystrixCommandMetrics.RollingMaxConcurrentExecutions
  fullName: Steeltoe.CircuitBreaker.Hystrix.HystrixCommandMetrics.RollingMaxConcurrentExecutions
- uid: Steeltoe.CircuitBreaker.Hystrix.HystrixCommandMetrics.CurrentConcurrentExecutionCount*
  commentId: Overload:Steeltoe.CircuitBreaker.Hystrix.HystrixCommandMetrics.CurrentConcurrentExecutionCount
  name: CurrentConcurrentExecutionCount
  nameWithType: HystrixCommandMetrics.CurrentConcurrentExecutionCount
  fullName: Steeltoe.CircuitBreaker.Hystrix.HystrixCommandMetrics.CurrentConcurrentExecutionCount
- uid: Steeltoe.CircuitBreaker.Hystrix.HystrixCommandMetrics.Healthcounts*
  commentId: Overload:Steeltoe.CircuitBreaker.Hystrix.HystrixCommandMetrics.Healthcounts
  name: Healthcounts
  nameWithType: HystrixCommandMetrics.Healthcounts
  fullName: Steeltoe.CircuitBreaker.Hystrix.HystrixCommandMetrics.Healthcounts
- uid: Steeltoe.CircuitBreaker.Hystrix.HealthCounts
  commentId: T:Steeltoe.CircuitBreaker.Hystrix.HealthCounts
  parent: Steeltoe.CircuitBreaker.Hystrix
  name: HealthCounts
  nameWithType: HealthCounts
  fullName: Steeltoe.CircuitBreaker.Hystrix.HealthCounts
