### YamlMime:ManagedReference
items:
- uid: Steeltoe.Integration.Expression.ExpressionEvalDictionary.ComponentsEvaluationCallback
  commentId: T:Steeltoe.Integration.Expression.ExpressionEvalDictionary.ComponentsEvaluationCallback
  id: ExpressionEvalDictionary.ComponentsEvaluationCallback
  parent: Steeltoe.Integration.Expression
  children:
  - Steeltoe.Integration.Expression.ExpressionEvalDictionary.ComponentsEvaluationCallback.#ctor(Steeltoe.Common.Expression.IEvaluationContext,System.Object,System.Boolean,System.Type)
  - Steeltoe.Integration.Expression.ExpressionEvalDictionary.ComponentsEvaluationCallback.Evaluate(Steeltoe.Common.Expression.IExpression)
  langs:
  - csharp
  - vb
  name: ExpressionEvalDictionary.ComponentsEvaluationCallback
  nameWithType: ExpressionEvalDictionary.ComponentsEvaluationCallback
  fullName: Steeltoe.Integration.Expression.ExpressionEvalDictionary.ComponentsEvaluationCallback
  type: Class
  source:
    remote:
      path: src/Integration/src/IntegrationBase/Expression/ExpressionEvalDictionary.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: ComponentsEvaluationCallback
    path: ../Steeltoe/src/Integration/src/IntegrationBase/Expression/ExpressionEvalDictionary.cs
    startLine: 138
  assemblies:
  - Steeltoe.Integration.IntegrationBase
  namespace: Steeltoe.Integration.Expression
  syntax:
    content: 'public class ComponentsEvaluationCallback : IEvaluationCallback'
    content.vb: >-
      Public Class ComponentsEvaluationCallback

          Implements IEvaluationCallback
  inheritance:
  - System.Object
  implements:
  - Steeltoe.Integration.Expression.IEvaluationCallback
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Steeltoe.Integration.Expression.ExpressionEvalDictionary.ComponentsEvaluationCallback.#ctor(Steeltoe.Common.Expression.IEvaluationContext,System.Object,System.Boolean,System.Type)
  commentId: M:Steeltoe.Integration.Expression.ExpressionEvalDictionary.ComponentsEvaluationCallback.#ctor(Steeltoe.Common.Expression.IEvaluationContext,System.Object,System.Boolean,System.Type)
  id: '#ctor(Steeltoe.Common.Expression.IEvaluationContext,System.Object,System.Boolean,System.Type)'
  parent: Steeltoe.Integration.Expression.ExpressionEvalDictionary.ComponentsEvaluationCallback
  langs:
  - csharp
  - vb
  name: ComponentsEvaluationCallback(IEvaluationContext, Object, Boolean, Type)
  nameWithType: ExpressionEvalDictionary.ComponentsEvaluationCallback.ComponentsEvaluationCallback(IEvaluationContext, Object, Boolean, Type)
  fullName: Steeltoe.Integration.Expression.ExpressionEvalDictionary.ComponentsEvaluationCallback.ComponentsEvaluationCallback(Steeltoe.Common.Expression.IEvaluationContext, System.Object, System.Boolean, System.Type)
  type: Constructor
  source:
    remote:
      path: src/Integration/src/IntegrationBase/Expression/ExpressionEvalDictionary.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: .ctor
    path: ../Steeltoe/src/Integration/src/IntegrationBase/Expression/ExpressionEvalDictionary.cs
    startLine: 148
  assemblies:
  - Steeltoe.Integration.IntegrationBase
  namespace: Steeltoe.Integration.Expression
  syntax:
    content: public ComponentsEvaluationCallback(IEvaluationContext context, object root, bool rootExplicitlySet, Type returnType)
    parameters:
    - id: context
      type: Steeltoe.Common.Expression.IEvaluationContext
    - id: root
      type: System.Object
    - id: rootExplicitlySet
      type: System.Boolean
    - id: returnType
      type: System.Type
    content.vb: Public Sub New(context As IEvaluationContext, root As Object, rootExplicitlySet As Boolean, returnType As Type)
  overload: Steeltoe.Integration.Expression.ExpressionEvalDictionary.ComponentsEvaluationCallback.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Steeltoe.Integration.Expression.ExpressionEvalDictionary.ComponentsEvaluationCallback.Evaluate(Steeltoe.Common.Expression.IExpression)
  commentId: M:Steeltoe.Integration.Expression.ExpressionEvalDictionary.ComponentsEvaluationCallback.Evaluate(Steeltoe.Common.Expression.IExpression)
  id: Evaluate(Steeltoe.Common.Expression.IExpression)
  parent: Steeltoe.Integration.Expression.ExpressionEvalDictionary.ComponentsEvaluationCallback
  langs:
  - csharp
  - vb
  name: Evaluate(IExpression)
  nameWithType: ExpressionEvalDictionary.ComponentsEvaluationCallback.Evaluate(IExpression)
  fullName: Steeltoe.Integration.Expression.ExpressionEvalDictionary.ComponentsEvaluationCallback.Evaluate(Steeltoe.Common.Expression.IExpression)
  type: Method
  source:
    remote:
      path: src/Integration/src/IntegrationBase/Expression/ExpressionEvalDictionary.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Evaluate
    path: ../Steeltoe/src/Integration/src/IntegrationBase/Expression/ExpressionEvalDictionary.cs
    startLine: 156
  assemblies:
  - Steeltoe.Integration.IntegrationBase
  namespace: Steeltoe.Integration.Expression
  syntax:
    content: public object Evaluate(IExpression expression)
    parameters:
    - id: expression
      type: Steeltoe.Common.Expression.IExpression
    return:
      type: System.Object
    content.vb: Public Function Evaluate(expression As IExpression) As Object
  overload: Steeltoe.Integration.Expression.ExpressionEvalDictionary.ComponentsEvaluationCallback.Evaluate*
  implements:
  - Steeltoe.Integration.Expression.IEvaluationCallback.Evaluate(Steeltoe.Common.Expression.IExpression)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Steeltoe.Integration.Expression
  commentId: N:Steeltoe.Integration.Expression
  name: Steeltoe.Integration.Expression
  nameWithType: Steeltoe.Integration.Expression
  fullName: Steeltoe.Integration.Expression
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Steeltoe.Integration.Expression.IEvaluationCallback
  commentId: T:Steeltoe.Integration.Expression.IEvaluationCallback
  parent: Steeltoe.Integration.Expression
  name: IEvaluationCallback
  nameWithType: IEvaluationCallback
  fullName: Steeltoe.Integration.Expression.IEvaluationCallback
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Steeltoe.Integration.Expression.ExpressionEvalDictionary.ComponentsEvaluationCallback.#ctor*
  commentId: Overload:Steeltoe.Integration.Expression.ExpressionEvalDictionary.ComponentsEvaluationCallback.#ctor
  name: ComponentsEvaluationCallback
  nameWithType: ExpressionEvalDictionary.ComponentsEvaluationCallback.ComponentsEvaluationCallback
  fullName: Steeltoe.Integration.Expression.ExpressionEvalDictionary.ComponentsEvaluationCallback.ComponentsEvaluationCallback
- uid: Steeltoe.Common.Expression.IEvaluationContext
  commentId: T:Steeltoe.Common.Expression.IEvaluationContext
  parent: Steeltoe.Common.Expression
  name: IEvaluationContext
  nameWithType: IEvaluationContext
  fullName: Steeltoe.Common.Expression.IEvaluationContext
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: Steeltoe.Common.Expression
  commentId: N:Steeltoe.Common.Expression
  name: Steeltoe.Common.Expression
  nameWithType: Steeltoe.Common.Expression
  fullName: Steeltoe.Common.Expression
- uid: Steeltoe.Integration.Expression.ExpressionEvalDictionary.ComponentsEvaluationCallback.Evaluate*
  commentId: Overload:Steeltoe.Integration.Expression.ExpressionEvalDictionary.ComponentsEvaluationCallback.Evaluate
  name: Evaluate
  nameWithType: ExpressionEvalDictionary.ComponentsEvaluationCallback.Evaluate
  fullName: Steeltoe.Integration.Expression.ExpressionEvalDictionary.ComponentsEvaluationCallback.Evaluate
- uid: Steeltoe.Integration.Expression.IEvaluationCallback.Evaluate(Steeltoe.Common.Expression.IExpression)
  commentId: M:Steeltoe.Integration.Expression.IEvaluationCallback.Evaluate(Steeltoe.Common.Expression.IExpression)
  parent: Steeltoe.Integration.Expression.IEvaluationCallback
  name: Evaluate(IExpression)
  nameWithType: IEvaluationCallback.Evaluate(IExpression)
  fullName: Steeltoe.Integration.Expression.IEvaluationCallback.Evaluate(Steeltoe.Common.Expression.IExpression)
  spec.csharp:
  - uid: Steeltoe.Integration.Expression.IEvaluationCallback.Evaluate(Steeltoe.Common.Expression.IExpression)
    name: Evaluate
    nameWithType: IEvaluationCallback.Evaluate
    fullName: Steeltoe.Integration.Expression.IEvaluationCallback.Evaluate
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Common.Expression.IExpression
    name: IExpression
    nameWithType: IExpression
    fullName: Steeltoe.Common.Expression.IExpression
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Integration.Expression.IEvaluationCallback.Evaluate(Steeltoe.Common.Expression.IExpression)
    name: Evaluate
    nameWithType: IEvaluationCallback.Evaluate
    fullName: Steeltoe.Integration.Expression.IEvaluationCallback.Evaluate
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Common.Expression.IExpression
    name: IExpression
    nameWithType: IExpression
    fullName: Steeltoe.Common.Expression.IExpression
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Common.Expression.IExpression
  commentId: T:Steeltoe.Common.Expression.IExpression
  parent: Steeltoe.Common.Expression
  name: IExpression
  nameWithType: IExpression
  fullName: Steeltoe.Common.Expression.IExpression
