### YamlMime:ManagedReference
items:
- uid: Steeltoe.Connector.Services.IServiceInfoFactory
  commentId: T:Steeltoe.Connector.Services.IServiceInfoFactory
  id: IServiceInfoFactory
  parent: Steeltoe.Connector.Services
  children:
  - Steeltoe.Connector.Services.IServiceInfoFactory.Accepts(Steeltoe.Extensions.Configuration.Service)
  - Steeltoe.Connector.Services.IServiceInfoFactory.Create(Steeltoe.Extensions.Configuration.Service)
  langs:
  - csharp
  - vb
  name: IServiceInfoFactory
  nameWithType: IServiceInfoFactory
  fullName: Steeltoe.Connector.Services.IServiceInfoFactory
  type: Interface
  source:
    remote:
      path: src/Connectors/src/Abstractions/Services/IServiceInfoFactory.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: IServiceInfoFactory
    path: ../Steeltoe/src/Connectors/src/Abstractions/Services/IServiceInfoFactory.cs
    startLine: 8
  assemblies:
  - Steeltoe.Connector.Abstractions
  namespace: Steeltoe.Connector.Services
  syntax:
    content: public interface IServiceInfoFactory
    content.vb: Public Interface IServiceInfoFactory
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Steeltoe.Connector.Services.IServiceInfoFactory.Accepts(Steeltoe.Extensions.Configuration.Service)
  commentId: M:Steeltoe.Connector.Services.IServiceInfoFactory.Accepts(Steeltoe.Extensions.Configuration.Service)
  id: Accepts(Steeltoe.Extensions.Configuration.Service)
  parent: Steeltoe.Connector.Services.IServiceInfoFactory
  langs:
  - csharp
  - vb
  name: Accepts(Service)
  nameWithType: IServiceInfoFactory.Accepts(Service)
  fullName: Steeltoe.Connector.Services.IServiceInfoFactory.Accepts(Steeltoe.Extensions.Configuration.Service)
  type: Method
  source:
    remote:
      path: src/Connectors/src/Abstractions/Services/IServiceInfoFactory.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Accepts
    path: ../Steeltoe/src/Connectors/src/Abstractions/Services/IServiceInfoFactory.cs
    startLine: 15
  assemblies:
  - Steeltoe.Connector.Abstractions
  namespace: Steeltoe.Connector.Services
  summary: "\nCheck if this factory can create <xref href=\"Steeltoe.Connector.Services.IServiceInfo\" data-throw-if-not-resolved=\"false\"></xref> from the given binding\n"
  example: []
  syntax:
    content: bool Accepts(Service binding)
    parameters:
    - id: binding
      type: Steeltoe.Extensions.Configuration.Service
      description: A service binding to evaluate
    return:
      type: System.Boolean
      description: Gets a value indicating whether or not the binding is compatible with this factory
    content.vb: Function Accepts(binding As Service) As Boolean
  overload: Steeltoe.Connector.Services.IServiceInfoFactory.Accepts*
- uid: Steeltoe.Connector.Services.IServiceInfoFactory.Create(Steeltoe.Extensions.Configuration.Service)
  commentId: M:Steeltoe.Connector.Services.IServiceInfoFactory.Create(Steeltoe.Extensions.Configuration.Service)
  id: Create(Steeltoe.Extensions.Configuration.Service)
  parent: Steeltoe.Connector.Services.IServiceInfoFactory
  langs:
  - csharp
  - vb
  name: Create(Service)
  nameWithType: IServiceInfoFactory.Create(Service)
  fullName: Steeltoe.Connector.Services.IServiceInfoFactory.Create(Steeltoe.Extensions.Configuration.Service)
  type: Method
  source:
    remote:
      path: src/Connectors/src/Abstractions/Services/IServiceInfoFactory.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Create
    path: ../Steeltoe/src/Connectors/src/Abstractions/Services/IServiceInfoFactory.cs
    startLine: 22
  assemblies:
  - Steeltoe.Connector.Abstractions
  namespace: Steeltoe.Connector.Services
  summary: "\nReturn service information from a service binding\n"
  example: []
  syntax:
    content: IServiceInfo Create(Service binding)
    parameters:
    - id: binding
      type: Steeltoe.Extensions.Configuration.Service
      description: A service binding
    return:
      type: Steeltoe.Connector.Services.IServiceInfo
      description: Relevant <xref href="Steeltoe.Connector.Services.IServiceInfo" data-throw-if-not-resolved="false"></xref>
    content.vb: Function Create(binding As Service) As IServiceInfo
  overload: Steeltoe.Connector.Services.IServiceInfoFactory.Create*
references:
- uid: Steeltoe.Connector.Services
  commentId: N:Steeltoe.Connector.Services
  name: Steeltoe.Connector.Services
  nameWithType: Steeltoe.Connector.Services
  fullName: Steeltoe.Connector.Services
- uid: Steeltoe.Connector.Services.IServiceInfo
  commentId: T:Steeltoe.Connector.Services.IServiceInfo
  parent: Steeltoe.Connector.Services
  name: IServiceInfo
  nameWithType: IServiceInfo
  fullName: Steeltoe.Connector.Services.IServiceInfo
- uid: Steeltoe.Connector.Services.IServiceInfoFactory.Accepts*
  commentId: Overload:Steeltoe.Connector.Services.IServiceInfoFactory.Accepts
  name: Accepts
  nameWithType: IServiceInfoFactory.Accepts
  fullName: Steeltoe.Connector.Services.IServiceInfoFactory.Accepts
- uid: Steeltoe.Extensions.Configuration.Service
  commentId: T:Steeltoe.Extensions.Configuration.Service
  parent: Steeltoe.Extensions.Configuration
  name: Service
  nameWithType: Service
  fullName: Steeltoe.Extensions.Configuration.Service
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Steeltoe.Extensions.Configuration
  commentId: N:Steeltoe.Extensions.Configuration
  name: Steeltoe.Extensions.Configuration
  nameWithType: Steeltoe.Extensions.Configuration
  fullName: Steeltoe.Extensions.Configuration
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Steeltoe.Connector.Services.IServiceInfoFactory.Create*
  commentId: Overload:Steeltoe.Connector.Services.IServiceInfoFactory.Create
  name: Create
  nameWithType: IServiceInfoFactory.Create
  fullName: Steeltoe.Connector.Services.IServiceInfoFactory.Create
