### YamlMime:ManagedReference
items:
- uid: Steeltoe.Common.Security.CertificateRotationService
  commentId: T:Steeltoe.Common.Security.CertificateRotationService
  id: CertificateRotationService
  parent: Steeltoe.Common.Security
  children:
  - Steeltoe.Common.Security.CertificateRotationService.#ctor(IOptionsMonitor{Steeltoe.Common.Options.CertificateOptions})
  - Steeltoe.Common.Security.CertificateRotationService.Dispose
  - Steeltoe.Common.Security.CertificateRotationService.Dispose(System.Boolean)
  - Steeltoe.Common.Security.CertificateRotationService.Start
  langs:
  - csharp
  - vb
  name: CertificateRotationService
  nameWithType: CertificateRotationService
  fullName: Steeltoe.Common.Security.CertificateRotationService
  type: Class
  source:
    remote:
      path: src/Common/src/Common.Security/CertificateRotationService.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: CertificateRotationService
    path: ../Steeltoe/src/Common/src/Common.Security/CertificateRotationService.cs
    startLine: 11
  assemblies:
  - Steeltoe.Common.Security
  namespace: Steeltoe.Common.Security
  syntax:
    content: 'public class CertificateRotationService : IDisposable, ICertificateRotationService'
    content.vb: >-
      Public Class CertificateRotationService

          Implements IDisposable, ICertificateRotationService
  inheritance:
  - System.Object
  implements:
  - System.IDisposable
  - Steeltoe.Common.Security.ICertificateRotationService
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Steeltoe.Common.Security.CertificateRotationService.#ctor(IOptionsMonitor{Steeltoe.Common.Options.CertificateOptions})
  commentId: M:Steeltoe.Common.Security.CertificateRotationService.#ctor(IOptionsMonitor{Steeltoe.Common.Options.CertificateOptions})
  id: '#ctor(IOptionsMonitor{Steeltoe.Common.Options.CertificateOptions})'
  parent: Steeltoe.Common.Security.CertificateRotationService
  langs:
  - csharp
  - vb
  name: CertificateRotationService(IOptionsMonitor<CertificateOptions>)
  nameWithType: CertificateRotationService.CertificateRotationService(IOptionsMonitor<CertificateOptions>)
  fullName: Steeltoe.Common.Security.CertificateRotationService.CertificateRotationService(IOptionsMonitor<Steeltoe.Common.Options.CertificateOptions>)
  type: Constructor
  source:
    remote:
      path: src/Common/src/Common.Security/CertificateRotationService.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: .ctor
    path: ../Steeltoe/src/Common/src/Common.Security/CertificateRotationService.cs
    startLine: 18
  assemblies:
  - Steeltoe.Common.Security
  namespace: Steeltoe.Common.Security
  syntax:
    content: public CertificateRotationService(IOptionsMonitor<CertificateOptions> optionsMonitor)
    parameters:
    - id: optionsMonitor
      type: IOptionsMonitor{Steeltoe.Common.Options.CertificateOptions}
    content.vb: Public Sub New(optionsMonitor As IOptionsMonitor(Of CertificateOptions))
  overload: Steeltoe.Common.Security.CertificateRotationService.#ctor*
  nameWithType.vb: CertificateRotationService.CertificateRotationService(IOptionsMonitor(Of CertificateOptions))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Steeltoe.Common.Security.CertificateRotationService.CertificateRotationService(IOptionsMonitor(Of Steeltoe.Common.Options.CertificateOptions))
  name.vb: CertificateRotationService(IOptionsMonitor(Of CertificateOptions))
- uid: Steeltoe.Common.Security.CertificateRotationService.Start
  commentId: M:Steeltoe.Common.Security.CertificateRotationService.Start
  id: Start
  parent: Steeltoe.Common.Security.CertificateRotationService
  langs:
  - csharp
  - vb
  name: Start()
  nameWithType: CertificateRotationService.Start()
  fullName: Steeltoe.Common.Security.CertificateRotationService.Start()
  type: Method
  source:
    remote:
      path: src/Common/src/Common.Security/CertificateRotationService.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Start
    path: ../Steeltoe/src/Common/src/Common.Security/CertificateRotationService.cs
    startLine: 24
  assemblies:
  - Steeltoe.Common.Security
  namespace: Steeltoe.Common.Security
  syntax:
    content: public void Start()
    content.vb: Public Sub Start
  overload: Steeltoe.Common.Security.CertificateRotationService.Start*
  implements:
  - Steeltoe.Common.Security.ICertificateRotationService.Start
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Steeltoe.Common.Security.CertificateRotationService.Dispose
  commentId: M:Steeltoe.Common.Security.CertificateRotationService.Dispose
  id: Dispose
  parent: Steeltoe.Common.Security.CertificateRotationService
  langs:
  - csharp
  - vb
  name: Dispose()
  nameWithType: CertificateRotationService.Dispose()
  fullName: Steeltoe.Common.Security.CertificateRotationService.Dispose()
  type: Method
  source:
    remote:
      path: src/Common/src/Common.Security/CertificateRotationService.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Dispose
    path: ../Steeltoe/src/Common/src/Common.Security/CertificateRotationService.cs
    startLine: 35
  assemblies:
  - Steeltoe.Common.Security
  namespace: Steeltoe.Common.Security
  syntax:
    content: public void Dispose()
    content.vb: Public Sub Dispose
  overload: Steeltoe.Common.Security.CertificateRotationService.Dispose*
  implements:
  - System.IDisposable.Dispose
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Steeltoe.Common.Security.CertificateRotationService.Dispose(System.Boolean)
  commentId: M:Steeltoe.Common.Security.CertificateRotationService.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: Steeltoe.Common.Security.CertificateRotationService
  langs:
  - csharp
  - vb
  name: Dispose(Boolean)
  nameWithType: CertificateRotationService.Dispose(Boolean)
  fullName: Steeltoe.Common.Security.CertificateRotationService.Dispose(System.Boolean)
  type: Method
  source:
    remote:
      path: src/Common/src/Common.Security/CertificateRotationService.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Dispose
    path: ../Steeltoe/src/Common/src/Common.Security/CertificateRotationService.cs
    startLine: 41
  assemblies:
  - Steeltoe.Common.Security
  namespace: Steeltoe.Common.Security
  syntax:
    content: protected virtual void Dispose(bool disposing)
    parameters:
    - id: disposing
      type: System.Boolean
    content.vb: Protected Overridable Sub Dispose(disposing As Boolean)
  overload: Steeltoe.Common.Security.CertificateRotationService.Dispose*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
references:
- uid: Steeltoe.Common.Security
  commentId: N:Steeltoe.Common.Security
  name: Steeltoe.Common.Security
  nameWithType: Steeltoe.Common.Security
  fullName: Steeltoe.Common.Security
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: Steeltoe.Common.Security.ICertificateRotationService
  commentId: T:Steeltoe.Common.Security.ICertificateRotationService
  parent: Steeltoe.Common.Security
  name: ICertificateRotationService
  nameWithType: ICertificateRotationService
  fullName: Steeltoe.Common.Security.ICertificateRotationService
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Steeltoe.Common.Security.CertificateRotationService.#ctor*
  commentId: Overload:Steeltoe.Common.Security.CertificateRotationService.#ctor
  name: CertificateRotationService
  nameWithType: CertificateRotationService.CertificateRotationService
  fullName: Steeltoe.Common.Security.CertificateRotationService.CertificateRotationService
- uid: IOptionsMonitor{Steeltoe.Common.Options.CertificateOptions}
  commentId: '!:IOptionsMonitor{Steeltoe.Common.Options.CertificateOptions}'
  definition: IOptionsMonitor`1
  name: IOptionsMonitor<CertificateOptions>
  nameWithType: IOptionsMonitor<CertificateOptions>
  fullName: IOptionsMonitor<Steeltoe.Common.Options.CertificateOptions>
  nameWithType.vb: IOptionsMonitor(Of CertificateOptions)
  fullName.vb: IOptionsMonitor(Of Steeltoe.Common.Options.CertificateOptions)
  name.vb: IOptionsMonitor(Of CertificateOptions)
  spec.csharp:
  - uid: IOptionsMonitor`1
    name: IOptionsMonitor
    nameWithType: IOptionsMonitor
    fullName: IOptionsMonitor
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Steeltoe.Common.Options.CertificateOptions
    name: CertificateOptions
    nameWithType: CertificateOptions
    fullName: Steeltoe.Common.Options.CertificateOptions
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IOptionsMonitor`1
    name: IOptionsMonitor
    nameWithType: IOptionsMonitor
    fullName: IOptionsMonitor
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Steeltoe.Common.Options.CertificateOptions
    name: CertificateOptions
    nameWithType: CertificateOptions
    fullName: Steeltoe.Common.Options.CertificateOptions
  - name: )
    nameWithType: )
    fullName: )
- uid: IOptionsMonitor`1
  isExternal: true
  name: IOptionsMonitor<>
  nameWithType: IOptionsMonitor<>
  fullName: IOptionsMonitor<>
  nameWithType.vb: IOptionsMonitor(Of )
  fullName.vb: IOptionsMonitor(Of )
  name.vb: IOptionsMonitor(Of )
  spec.csharp:
  - uid: IOptionsMonitor`1
    name: IOptionsMonitor
    nameWithType: IOptionsMonitor
    fullName: IOptionsMonitor
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IOptionsMonitor`1
    name: IOptionsMonitor
    nameWithType: IOptionsMonitor
    fullName: IOptionsMonitor
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Common.Security.CertificateRotationService.Start*
  commentId: Overload:Steeltoe.Common.Security.CertificateRotationService.Start
  name: Start
  nameWithType: CertificateRotationService.Start
  fullName: Steeltoe.Common.Security.CertificateRotationService.Start
- uid: Steeltoe.Common.Security.ICertificateRotationService.Start
  commentId: M:Steeltoe.Common.Security.ICertificateRotationService.Start
  parent: Steeltoe.Common.Security.ICertificateRotationService
  name: Start()
  nameWithType: ICertificateRotationService.Start()
  fullName: Steeltoe.Common.Security.ICertificateRotationService.Start()
  spec.csharp:
  - uid: Steeltoe.Common.Security.ICertificateRotationService.Start
    name: Start
    nameWithType: ICertificateRotationService.Start
    fullName: Steeltoe.Common.Security.ICertificateRotationService.Start
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Common.Security.ICertificateRotationService.Start
    name: Start
    nameWithType: ICertificateRotationService.Start
    fullName: Steeltoe.Common.Security.ICertificateRotationService.Start
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Common.Security.CertificateRotationService.Dispose*
  commentId: Overload:Steeltoe.Common.Security.CertificateRotationService.Dispose
  name: Dispose
  nameWithType: CertificateRotationService.Dispose
  fullName: Steeltoe.Common.Security.CertificateRotationService.Dispose
- uid: System.IDisposable.Dispose
  commentId: M:System.IDisposable.Dispose
  parent: System.IDisposable
  isExternal: true
  name: Dispose()
  nameWithType: IDisposable.Dispose()
  fullName: System.IDisposable.Dispose()
  spec.csharp:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
