### YamlMime:ManagedReference
items:
- uid: Steeltoe.Messaging.Support.AbstractSubscribableChannel
  commentId: T:Steeltoe.Messaging.Support.AbstractSubscribableChannel
  id: AbstractSubscribableChannel
  parent: Steeltoe.Messaging.Support
  children:
  - Steeltoe.Messaging.Support.AbstractSubscribableChannel.#ctor(Microsoft.Extensions.Logging.ILogger)
  - Steeltoe.Messaging.Support.AbstractSubscribableChannel.HasSubscription(Steeltoe.Messaging.IMessageHandler)
  - Steeltoe.Messaging.Support.AbstractSubscribableChannel.Subscribe(Steeltoe.Messaging.IMessageHandler)
  - Steeltoe.Messaging.Support.AbstractSubscribableChannel.SubscriberCount
  - Steeltoe.Messaging.Support.AbstractSubscribableChannel.Subscribers
  - Steeltoe.Messaging.Support.AbstractSubscribableChannel.Unsubscribe(Steeltoe.Messaging.IMessageHandler)
  langs:
  - csharp
  - vb
  name: AbstractSubscribableChannel
  nameWithType: AbstractSubscribableChannel
  fullName: Steeltoe.Messaging.Support.AbstractSubscribableChannel
  type: Class
  source:
    remote:
      path: src/Messaging/src/MessagingBase/Support/AbstractSubscribableChannel.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: AbstractSubscribableChannel
    path: ../Steeltoe/src/Messaging/src/MessagingBase/Support/AbstractSubscribableChannel.cs
    startLine: 9
  assemblies:
  - Steeltoe.Messaging.MessagingBase
  namespace: Steeltoe.Messaging.Support
  syntax:
    content: 'public abstract class AbstractSubscribableChannel : AbstractMessageChannel, IInterceptableChannel, ISubscribableChannel, IMessageChannel, IServiceNameAware'
    content.vb: >-
      Public MustInherit Class AbstractSubscribableChannel

          Inherits AbstractMessageChannel

          Implements IInterceptableChannel, ISubscribableChannel, IMessageChannel, IServiceNameAware
  inheritance:
  - System.Object
  - System.Threading.Channels.Channel{Steeltoe.Messaging.IMessage,Steeltoe.Messaging.IMessage}
  - System.Threading.Channels.Channel{Steeltoe.Messaging.IMessage}
  - Steeltoe.Messaging.Support.AbstractMessageChannel
  derivedClasses:
  - Steeltoe.Messaging.Support.TaskSchedulerSubscribableChannel
  implements:
  - Steeltoe.Messaging.Support.IInterceptableChannel
  - Steeltoe.Messaging.ISubscribableChannel
  - Steeltoe.Messaging.IMessageChannel
  - IServiceNameAware
  inheritedMembers:
  - Steeltoe.Messaging.Support.AbstractMessageChannel.INDEFINITE_TIMEOUT
  - Steeltoe.Messaging.Support.AbstractMessageChannel.ServiceName
  - Steeltoe.Messaging.Support.AbstractMessageChannel.Logger
  - Steeltoe.Messaging.Support.AbstractMessageChannel.SetInterceptors(System.Collections.Generic.List{Steeltoe.Messaging.Support.IChannelInterceptor})
  - Steeltoe.Messaging.Support.AbstractMessageChannel.AddInterceptor(Steeltoe.Messaging.Support.IChannelInterceptor)
  - Steeltoe.Messaging.Support.AbstractMessageChannel.AddInterceptor(System.Int32,Steeltoe.Messaging.Support.IChannelInterceptor)
  - Steeltoe.Messaging.Support.AbstractMessageChannel.GetInterceptors
  - Steeltoe.Messaging.Support.AbstractMessageChannel.RemoveInterceptor(Steeltoe.Messaging.Support.IChannelInterceptor)
  - Steeltoe.Messaging.Support.AbstractMessageChannel.RemoveInterceptor(System.Int32)
  - Steeltoe.Messaging.Support.AbstractMessageChannel.Send(Steeltoe.Messaging.IMessage)
  - Steeltoe.Messaging.Support.AbstractMessageChannel.Send(Steeltoe.Messaging.IMessage,System.Int32)
  - Steeltoe.Messaging.Support.AbstractMessageChannel.SendAsync(Steeltoe.Messaging.IMessage,System.Threading.CancellationToken)
  - Steeltoe.Messaging.Support.AbstractMessageChannel.ToString
  - Steeltoe.Messaging.Support.AbstractMessageChannel.DoSend(Steeltoe.Messaging.IMessage,System.Int32)
  - Steeltoe.Messaging.Support.AbstractMessageChannel.DoSend(Steeltoe.Messaging.IMessage,System.Threading.CancellationToken)
  - Steeltoe.Messaging.Support.AbstractMessageChannel.DoSendInternal(Steeltoe.Messaging.IMessage,System.Threading.CancellationToken)
  - System.Threading.Channels.Channel{Steeltoe.Messaging.IMessage,Steeltoe.Messaging.IMessage}.Reader
  - System.Threading.Channels.Channel{Steeltoe.Messaging.IMessage,Steeltoe.Messaging.IMessage}.Writer
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: Steeltoe.Messaging.Support.AbstractSubscribableChannel.#ctor(Microsoft.Extensions.Logging.ILogger)
  commentId: M:Steeltoe.Messaging.Support.AbstractSubscribableChannel.#ctor(Microsoft.Extensions.Logging.ILogger)
  id: '#ctor(Microsoft.Extensions.Logging.ILogger)'
  parent: Steeltoe.Messaging.Support.AbstractSubscribableChannel
  langs:
  - csharp
  - vb
  name: AbstractSubscribableChannel(ILogger)
  nameWithType: AbstractSubscribableChannel.AbstractSubscribableChannel(ILogger)
  fullName: Steeltoe.Messaging.Support.AbstractSubscribableChannel.AbstractSubscribableChannel(Microsoft.Extensions.Logging.ILogger)
  type: Constructor
  source:
    remote:
      path: src/Messaging/src/MessagingBase/Support/AbstractSubscribableChannel.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: .ctor
    path: ../Steeltoe/src/Messaging/src/MessagingBase/Support/AbstractSubscribableChannel.cs
    startLine: 14
  assemblies:
  - Steeltoe.Messaging.MessagingBase
  namespace: Steeltoe.Messaging.Support
  syntax:
    content: public AbstractSubscribableChannel(ILogger logger = null)
    parameters:
    - id: logger
      type: Microsoft.Extensions.Logging.ILogger
    content.vb: Public Sub New(logger As ILogger = Nothing)
  overload: Steeltoe.Messaging.Support.AbstractSubscribableChannel.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Steeltoe.Messaging.Support.AbstractSubscribableChannel.SubscriberCount
  commentId: P:Steeltoe.Messaging.Support.AbstractSubscribableChannel.SubscriberCount
  id: SubscriberCount
  parent: Steeltoe.Messaging.Support.AbstractSubscribableChannel
  langs:
  - csharp
  - vb
  name: SubscriberCount
  nameWithType: AbstractSubscribableChannel.SubscriberCount
  fullName: Steeltoe.Messaging.Support.AbstractSubscribableChannel.SubscriberCount
  type: Property
  source:
    remote:
      path: src/Messaging/src/MessagingBase/Support/AbstractSubscribableChannel.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: SubscriberCount
    path: ../Steeltoe/src/Messaging/src/MessagingBase/Support/AbstractSubscribableChannel.cs
    startLine: 19
  assemblies:
  - Steeltoe.Messaging.MessagingBase
  namespace: Steeltoe.Messaging.Support
  syntax:
    content: public virtual int SubscriberCount { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Overridable ReadOnly Property SubscriberCount As Integer
  overload: Steeltoe.Messaging.Support.AbstractSubscribableChannel.SubscriberCount*
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: Steeltoe.Messaging.Support.AbstractSubscribableChannel.Subscribers
  commentId: P:Steeltoe.Messaging.Support.AbstractSubscribableChannel.Subscribers
  id: Subscribers
  parent: Steeltoe.Messaging.Support.AbstractSubscribableChannel
  langs:
  - csharp
  - vb
  name: Subscribers
  nameWithType: AbstractSubscribableChannel.Subscribers
  fullName: Steeltoe.Messaging.Support.AbstractSubscribableChannel.Subscribers
  type: Property
  source:
    remote:
      path: src/Messaging/src/MessagingBase/Support/AbstractSubscribableChannel.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Subscribers
    path: ../Steeltoe/src/Messaging/src/MessagingBase/Support/AbstractSubscribableChannel.cs
    startLine: 27
  assemblies:
  - Steeltoe.Messaging.MessagingBase
  namespace: Steeltoe.Messaging.Support
  syntax:
    content: public virtual ISet<IMessageHandler> Subscribers { get; }
    parameters: []
    return:
      type: System.Collections.Generic.ISet{Steeltoe.Messaging.IMessageHandler}
    content.vb: Public Overridable ReadOnly Property Subscribers As ISet(Of IMessageHandler)
  overload: Steeltoe.Messaging.Support.AbstractSubscribableChannel.Subscribers*
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: Steeltoe.Messaging.Support.AbstractSubscribableChannel.HasSubscription(Steeltoe.Messaging.IMessageHandler)
  commentId: M:Steeltoe.Messaging.Support.AbstractSubscribableChannel.HasSubscription(Steeltoe.Messaging.IMessageHandler)
  id: HasSubscription(Steeltoe.Messaging.IMessageHandler)
  parent: Steeltoe.Messaging.Support.AbstractSubscribableChannel
  langs:
  - csharp
  - vb
  name: HasSubscription(IMessageHandler)
  nameWithType: AbstractSubscribableChannel.HasSubscription(IMessageHandler)
  fullName: Steeltoe.Messaging.Support.AbstractSubscribableChannel.HasSubscription(Steeltoe.Messaging.IMessageHandler)
  type: Method
  source:
    remote:
      path: src/Messaging/src/MessagingBase/Support/AbstractSubscribableChannel.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: HasSubscription
    path: ../Steeltoe/src/Messaging/src/MessagingBase/Support/AbstractSubscribableChannel.cs
    startLine: 38
  assemblies:
  - Steeltoe.Messaging.MessagingBase
  namespace: Steeltoe.Messaging.Support
  syntax:
    content: public virtual bool HasSubscription(IMessageHandler handler)
    parameters:
    - id: handler
      type: Steeltoe.Messaging.IMessageHandler
    return:
      type: System.Boolean
    content.vb: Public Overridable Function HasSubscription(handler As IMessageHandler) As Boolean
  overload: Steeltoe.Messaging.Support.AbstractSubscribableChannel.HasSubscription*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Steeltoe.Messaging.Support.AbstractSubscribableChannel.Subscribe(Steeltoe.Messaging.IMessageHandler)
  commentId: M:Steeltoe.Messaging.Support.AbstractSubscribableChannel.Subscribe(Steeltoe.Messaging.IMessageHandler)
  id: Subscribe(Steeltoe.Messaging.IMessageHandler)
  parent: Steeltoe.Messaging.Support.AbstractSubscribableChannel
  langs:
  - csharp
  - vb
  name: Subscribe(IMessageHandler)
  nameWithType: AbstractSubscribableChannel.Subscribe(IMessageHandler)
  fullName: Steeltoe.Messaging.Support.AbstractSubscribableChannel.Subscribe(Steeltoe.Messaging.IMessageHandler)
  type: Method
  source:
    remote:
      path: src/Messaging/src/MessagingBase/Support/AbstractSubscribableChannel.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Subscribe
    path: ../Steeltoe/src/Messaging/src/MessagingBase/Support/AbstractSubscribableChannel.cs
    startLine: 46
  assemblies:
  - Steeltoe.Messaging.MessagingBase
  namespace: Steeltoe.Messaging.Support
  syntax:
    content: public virtual bool Subscribe(IMessageHandler handler)
    parameters:
    - id: handler
      type: Steeltoe.Messaging.IMessageHandler
    return:
      type: System.Boolean
    content.vb: Public Overridable Function Subscribe(handler As IMessageHandler) As Boolean
  overload: Steeltoe.Messaging.Support.AbstractSubscribableChannel.Subscribe*
  implements:
  - Steeltoe.Messaging.ISubscribableChannel.Subscribe(Steeltoe.Messaging.IMessageHandler)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Steeltoe.Messaging.Support.AbstractSubscribableChannel.Unsubscribe(Steeltoe.Messaging.IMessageHandler)
  commentId: M:Steeltoe.Messaging.Support.AbstractSubscribableChannel.Unsubscribe(Steeltoe.Messaging.IMessageHandler)
  id: Unsubscribe(Steeltoe.Messaging.IMessageHandler)
  parent: Steeltoe.Messaging.Support.AbstractSubscribableChannel
  langs:
  - csharp
  - vb
  name: Unsubscribe(IMessageHandler)
  nameWithType: AbstractSubscribableChannel.Unsubscribe(IMessageHandler)
  fullName: Steeltoe.Messaging.Support.AbstractSubscribableChannel.Unsubscribe(Steeltoe.Messaging.IMessageHandler)
  type: Method
  source:
    remote:
      path: src/Messaging/src/MessagingBase/Support/AbstractSubscribableChannel.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Unsubscribe
    path: ../Steeltoe/src/Messaging/src/MessagingBase/Support/AbstractSubscribableChannel.cs
    startLine: 62
  assemblies:
  - Steeltoe.Messaging.MessagingBase
  namespace: Steeltoe.Messaging.Support
  syntax:
    content: public virtual bool Unsubscribe(IMessageHandler handler)
    parameters:
    - id: handler
      type: Steeltoe.Messaging.IMessageHandler
    return:
      type: System.Boolean
    content.vb: Public Overridable Function Unsubscribe(handler As IMessageHandler) As Boolean
  overload: Steeltoe.Messaging.Support.AbstractSubscribableChannel.Unsubscribe*
  implements:
  - Steeltoe.Messaging.ISubscribableChannel.Unsubscribe(Steeltoe.Messaging.IMessageHandler)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
references:
- uid: Steeltoe.Messaging.Support
  commentId: N:Steeltoe.Messaging.Support
  name: Steeltoe.Messaging.Support
  nameWithType: Steeltoe.Messaging.Support
  fullName: Steeltoe.Messaging.Support
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Threading.Channels.Channel{Steeltoe.Messaging.IMessage,Steeltoe.Messaging.IMessage}
  commentId: T:System.Threading.Channels.Channel{Steeltoe.Messaging.IMessage,Steeltoe.Messaging.IMessage}
  parent: System.Threading.Channels
  definition: System.Threading.Channels.Channel`2
  name: Channel<IMessage, IMessage>
  nameWithType: Channel<IMessage, IMessage>
  fullName: System.Threading.Channels.Channel<Steeltoe.Messaging.IMessage, Steeltoe.Messaging.IMessage>
  nameWithType.vb: Channel(Of IMessage, IMessage)
  fullName.vb: System.Threading.Channels.Channel(Of Steeltoe.Messaging.IMessage, Steeltoe.Messaging.IMessage)
  name.vb: Channel(Of IMessage, IMessage)
  spec.csharp:
  - uid: System.Threading.Channels.Channel`2
    name: Channel
    nameWithType: Channel
    fullName: System.Threading.Channels.Channel
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Channels.Channel`2
    name: Channel
    nameWithType: Channel
    fullName: System.Threading.Channels.Channel
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Channels.Channel{Steeltoe.Messaging.IMessage}
  commentId: T:System.Threading.Channels.Channel{Steeltoe.Messaging.IMessage}
  parent: System.Threading.Channels
  definition: System.Threading.Channels.Channel`1
  name: Channel<IMessage>
  nameWithType: Channel<IMessage>
  fullName: System.Threading.Channels.Channel<Steeltoe.Messaging.IMessage>
  nameWithType.vb: Channel(Of IMessage)
  fullName.vb: System.Threading.Channels.Channel(Of Steeltoe.Messaging.IMessage)
  name.vb: Channel(Of IMessage)
  spec.csharp:
  - uid: System.Threading.Channels.Channel`1
    name: Channel
    nameWithType: Channel
    fullName: System.Threading.Channels.Channel
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Channels.Channel`1
    name: Channel
    nameWithType: Channel
    fullName: System.Threading.Channels.Channel
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Support.AbstractMessageChannel
  commentId: T:Steeltoe.Messaging.Support.AbstractMessageChannel
  parent: Steeltoe.Messaging.Support
  name: AbstractMessageChannel
  nameWithType: AbstractMessageChannel
  fullName: Steeltoe.Messaging.Support.AbstractMessageChannel
- uid: Steeltoe.Messaging.Support.IInterceptableChannel
  commentId: T:Steeltoe.Messaging.Support.IInterceptableChannel
  parent: Steeltoe.Messaging.Support
  name: IInterceptableChannel
  nameWithType: IInterceptableChannel
  fullName: Steeltoe.Messaging.Support.IInterceptableChannel
- uid: Steeltoe.Messaging.ISubscribableChannel
  commentId: T:Steeltoe.Messaging.ISubscribableChannel
  parent: Steeltoe.Messaging
  name: ISubscribableChannel
  nameWithType: ISubscribableChannel
  fullName: Steeltoe.Messaging.ISubscribableChannel
- uid: Steeltoe.Messaging.IMessageChannel
  commentId: T:Steeltoe.Messaging.IMessageChannel
  parent: Steeltoe.Messaging
  name: IMessageChannel
  nameWithType: IMessageChannel
  fullName: Steeltoe.Messaging.IMessageChannel
- uid: IServiceNameAware
  isExternal: true
  name: IServiceNameAware
  nameWithType: IServiceNameAware
  fullName: IServiceNameAware
- uid: Steeltoe.Messaging.Support.AbstractMessageChannel.INDEFINITE_TIMEOUT
  commentId: F:Steeltoe.Messaging.Support.AbstractMessageChannel.INDEFINITE_TIMEOUT
  parent: Steeltoe.Messaging.Support.AbstractMessageChannel
  name: INDEFINITE_TIMEOUT
  nameWithType: AbstractMessageChannel.INDEFINITE_TIMEOUT
  fullName: Steeltoe.Messaging.Support.AbstractMessageChannel.INDEFINITE_TIMEOUT
- uid: Steeltoe.Messaging.Support.AbstractMessageChannel.ServiceName
  commentId: P:Steeltoe.Messaging.Support.AbstractMessageChannel.ServiceName
  parent: Steeltoe.Messaging.Support.AbstractMessageChannel
  name: ServiceName
  nameWithType: AbstractMessageChannel.ServiceName
  fullName: Steeltoe.Messaging.Support.AbstractMessageChannel.ServiceName
- uid: Steeltoe.Messaging.Support.AbstractMessageChannel.Logger
  commentId: P:Steeltoe.Messaging.Support.AbstractMessageChannel.Logger
  parent: Steeltoe.Messaging.Support.AbstractMessageChannel
  name: Logger
  nameWithType: AbstractMessageChannel.Logger
  fullName: Steeltoe.Messaging.Support.AbstractMessageChannel.Logger
- uid: Steeltoe.Messaging.Support.AbstractMessageChannel.SetInterceptors(System.Collections.Generic.List{Steeltoe.Messaging.Support.IChannelInterceptor})
  commentId: M:Steeltoe.Messaging.Support.AbstractMessageChannel.SetInterceptors(System.Collections.Generic.List{Steeltoe.Messaging.Support.IChannelInterceptor})
  parent: Steeltoe.Messaging.Support.AbstractMessageChannel
  isExternal: true
  name: SetInterceptors(List<IChannelInterceptor>)
  nameWithType: AbstractMessageChannel.SetInterceptors(List<IChannelInterceptor>)
  fullName: Steeltoe.Messaging.Support.AbstractMessageChannel.SetInterceptors(System.Collections.Generic.List<Steeltoe.Messaging.Support.IChannelInterceptor>)
  nameWithType.vb: AbstractMessageChannel.SetInterceptors(List(Of IChannelInterceptor))
  fullName.vb: Steeltoe.Messaging.Support.AbstractMessageChannel.SetInterceptors(System.Collections.Generic.List(Of Steeltoe.Messaging.Support.IChannelInterceptor))
  name.vb: SetInterceptors(List(Of IChannelInterceptor))
  spec.csharp:
  - uid: Steeltoe.Messaging.Support.AbstractMessageChannel.SetInterceptors(System.Collections.Generic.List{Steeltoe.Messaging.Support.IChannelInterceptor})
    name: SetInterceptors
    nameWithType: AbstractMessageChannel.SetInterceptors
    fullName: Steeltoe.Messaging.Support.AbstractMessageChannel.SetInterceptors
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Steeltoe.Messaging.Support.IChannelInterceptor
    name: IChannelInterceptor
    nameWithType: IChannelInterceptor
    fullName: Steeltoe.Messaging.Support.IChannelInterceptor
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Support.AbstractMessageChannel.SetInterceptors(System.Collections.Generic.List{Steeltoe.Messaging.Support.IChannelInterceptor})
    name: SetInterceptors
    nameWithType: AbstractMessageChannel.SetInterceptors
    fullName: Steeltoe.Messaging.Support.AbstractMessageChannel.SetInterceptors
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Steeltoe.Messaging.Support.IChannelInterceptor
    name: IChannelInterceptor
    nameWithType: IChannelInterceptor
    fullName: Steeltoe.Messaging.Support.IChannelInterceptor
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Support.AbstractMessageChannel.AddInterceptor(Steeltoe.Messaging.Support.IChannelInterceptor)
  commentId: M:Steeltoe.Messaging.Support.AbstractMessageChannel.AddInterceptor(Steeltoe.Messaging.Support.IChannelInterceptor)
  parent: Steeltoe.Messaging.Support.AbstractMessageChannel
  name: AddInterceptor(IChannelInterceptor)
  nameWithType: AbstractMessageChannel.AddInterceptor(IChannelInterceptor)
  fullName: Steeltoe.Messaging.Support.AbstractMessageChannel.AddInterceptor(Steeltoe.Messaging.Support.IChannelInterceptor)
  spec.csharp:
  - uid: Steeltoe.Messaging.Support.AbstractMessageChannel.AddInterceptor(Steeltoe.Messaging.Support.IChannelInterceptor)
    name: AddInterceptor
    nameWithType: AbstractMessageChannel.AddInterceptor
    fullName: Steeltoe.Messaging.Support.AbstractMessageChannel.AddInterceptor
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.Support.IChannelInterceptor
    name: IChannelInterceptor
    nameWithType: IChannelInterceptor
    fullName: Steeltoe.Messaging.Support.IChannelInterceptor
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Support.AbstractMessageChannel.AddInterceptor(Steeltoe.Messaging.Support.IChannelInterceptor)
    name: AddInterceptor
    nameWithType: AbstractMessageChannel.AddInterceptor
    fullName: Steeltoe.Messaging.Support.AbstractMessageChannel.AddInterceptor
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.Support.IChannelInterceptor
    name: IChannelInterceptor
    nameWithType: IChannelInterceptor
    fullName: Steeltoe.Messaging.Support.IChannelInterceptor
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Support.AbstractMessageChannel.AddInterceptor(System.Int32,Steeltoe.Messaging.Support.IChannelInterceptor)
  commentId: M:Steeltoe.Messaging.Support.AbstractMessageChannel.AddInterceptor(System.Int32,Steeltoe.Messaging.Support.IChannelInterceptor)
  parent: Steeltoe.Messaging.Support.AbstractMessageChannel
  isExternal: true
  name: AddInterceptor(Int32, IChannelInterceptor)
  nameWithType: AbstractMessageChannel.AddInterceptor(Int32, IChannelInterceptor)
  fullName: Steeltoe.Messaging.Support.AbstractMessageChannel.AddInterceptor(System.Int32, Steeltoe.Messaging.Support.IChannelInterceptor)
  spec.csharp:
  - uid: Steeltoe.Messaging.Support.AbstractMessageChannel.AddInterceptor(System.Int32,Steeltoe.Messaging.Support.IChannelInterceptor)
    name: AddInterceptor
    nameWithType: AbstractMessageChannel.AddInterceptor
    fullName: Steeltoe.Messaging.Support.AbstractMessageChannel.AddInterceptor
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.Support.IChannelInterceptor
    name: IChannelInterceptor
    nameWithType: IChannelInterceptor
    fullName: Steeltoe.Messaging.Support.IChannelInterceptor
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Support.AbstractMessageChannel.AddInterceptor(System.Int32,Steeltoe.Messaging.Support.IChannelInterceptor)
    name: AddInterceptor
    nameWithType: AbstractMessageChannel.AddInterceptor
    fullName: Steeltoe.Messaging.Support.AbstractMessageChannel.AddInterceptor
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.Support.IChannelInterceptor
    name: IChannelInterceptor
    nameWithType: IChannelInterceptor
    fullName: Steeltoe.Messaging.Support.IChannelInterceptor
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Support.AbstractMessageChannel.GetInterceptors
  commentId: M:Steeltoe.Messaging.Support.AbstractMessageChannel.GetInterceptors
  parent: Steeltoe.Messaging.Support.AbstractMessageChannel
  name: GetInterceptors()
  nameWithType: AbstractMessageChannel.GetInterceptors()
  fullName: Steeltoe.Messaging.Support.AbstractMessageChannel.GetInterceptors()
  spec.csharp:
  - uid: Steeltoe.Messaging.Support.AbstractMessageChannel.GetInterceptors
    name: GetInterceptors
    nameWithType: AbstractMessageChannel.GetInterceptors
    fullName: Steeltoe.Messaging.Support.AbstractMessageChannel.GetInterceptors
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Support.AbstractMessageChannel.GetInterceptors
    name: GetInterceptors
    nameWithType: AbstractMessageChannel.GetInterceptors
    fullName: Steeltoe.Messaging.Support.AbstractMessageChannel.GetInterceptors
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Support.AbstractMessageChannel.RemoveInterceptor(Steeltoe.Messaging.Support.IChannelInterceptor)
  commentId: M:Steeltoe.Messaging.Support.AbstractMessageChannel.RemoveInterceptor(Steeltoe.Messaging.Support.IChannelInterceptor)
  parent: Steeltoe.Messaging.Support.AbstractMessageChannel
  name: RemoveInterceptor(IChannelInterceptor)
  nameWithType: AbstractMessageChannel.RemoveInterceptor(IChannelInterceptor)
  fullName: Steeltoe.Messaging.Support.AbstractMessageChannel.RemoveInterceptor(Steeltoe.Messaging.Support.IChannelInterceptor)
  spec.csharp:
  - uid: Steeltoe.Messaging.Support.AbstractMessageChannel.RemoveInterceptor(Steeltoe.Messaging.Support.IChannelInterceptor)
    name: RemoveInterceptor
    nameWithType: AbstractMessageChannel.RemoveInterceptor
    fullName: Steeltoe.Messaging.Support.AbstractMessageChannel.RemoveInterceptor
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.Support.IChannelInterceptor
    name: IChannelInterceptor
    nameWithType: IChannelInterceptor
    fullName: Steeltoe.Messaging.Support.IChannelInterceptor
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Support.AbstractMessageChannel.RemoveInterceptor(Steeltoe.Messaging.Support.IChannelInterceptor)
    name: RemoveInterceptor
    nameWithType: AbstractMessageChannel.RemoveInterceptor
    fullName: Steeltoe.Messaging.Support.AbstractMessageChannel.RemoveInterceptor
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.Support.IChannelInterceptor
    name: IChannelInterceptor
    nameWithType: IChannelInterceptor
    fullName: Steeltoe.Messaging.Support.IChannelInterceptor
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Support.AbstractMessageChannel.RemoveInterceptor(System.Int32)
  commentId: M:Steeltoe.Messaging.Support.AbstractMessageChannel.RemoveInterceptor(System.Int32)
  parent: Steeltoe.Messaging.Support.AbstractMessageChannel
  isExternal: true
  name: RemoveInterceptor(Int32)
  nameWithType: AbstractMessageChannel.RemoveInterceptor(Int32)
  fullName: Steeltoe.Messaging.Support.AbstractMessageChannel.RemoveInterceptor(System.Int32)
  spec.csharp:
  - uid: Steeltoe.Messaging.Support.AbstractMessageChannel.RemoveInterceptor(System.Int32)
    name: RemoveInterceptor
    nameWithType: AbstractMessageChannel.RemoveInterceptor
    fullName: Steeltoe.Messaging.Support.AbstractMessageChannel.RemoveInterceptor
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Support.AbstractMessageChannel.RemoveInterceptor(System.Int32)
    name: RemoveInterceptor
    nameWithType: AbstractMessageChannel.RemoveInterceptor
    fullName: Steeltoe.Messaging.Support.AbstractMessageChannel.RemoveInterceptor
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Support.AbstractMessageChannel.Send(Steeltoe.Messaging.IMessage)
  commentId: M:Steeltoe.Messaging.Support.AbstractMessageChannel.Send(Steeltoe.Messaging.IMessage)
  parent: Steeltoe.Messaging.Support.AbstractMessageChannel
  name: Send(IMessage)
  nameWithType: AbstractMessageChannel.Send(IMessage)
  fullName: Steeltoe.Messaging.Support.AbstractMessageChannel.Send(Steeltoe.Messaging.IMessage)
  spec.csharp:
  - uid: Steeltoe.Messaging.Support.AbstractMessageChannel.Send(Steeltoe.Messaging.IMessage)
    name: Send
    nameWithType: AbstractMessageChannel.Send
    fullName: Steeltoe.Messaging.Support.AbstractMessageChannel.Send
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Support.AbstractMessageChannel.Send(Steeltoe.Messaging.IMessage)
    name: Send
    nameWithType: AbstractMessageChannel.Send
    fullName: Steeltoe.Messaging.Support.AbstractMessageChannel.Send
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Support.AbstractMessageChannel.Send(Steeltoe.Messaging.IMessage,System.Int32)
  commentId: M:Steeltoe.Messaging.Support.AbstractMessageChannel.Send(Steeltoe.Messaging.IMessage,System.Int32)
  parent: Steeltoe.Messaging.Support.AbstractMessageChannel
  isExternal: true
  name: Send(IMessage, Int32)
  nameWithType: AbstractMessageChannel.Send(IMessage, Int32)
  fullName: Steeltoe.Messaging.Support.AbstractMessageChannel.Send(Steeltoe.Messaging.IMessage, System.Int32)
  spec.csharp:
  - uid: Steeltoe.Messaging.Support.AbstractMessageChannel.Send(Steeltoe.Messaging.IMessage,System.Int32)
    name: Send
    nameWithType: AbstractMessageChannel.Send
    fullName: Steeltoe.Messaging.Support.AbstractMessageChannel.Send
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Support.AbstractMessageChannel.Send(Steeltoe.Messaging.IMessage,System.Int32)
    name: Send
    nameWithType: AbstractMessageChannel.Send
    fullName: Steeltoe.Messaging.Support.AbstractMessageChannel.Send
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Support.AbstractMessageChannel.SendAsync(Steeltoe.Messaging.IMessage,System.Threading.CancellationToken)
  commentId: M:Steeltoe.Messaging.Support.AbstractMessageChannel.SendAsync(Steeltoe.Messaging.IMessage,System.Threading.CancellationToken)
  parent: Steeltoe.Messaging.Support.AbstractMessageChannel
  isExternal: true
  name: SendAsync(IMessage, CancellationToken)
  nameWithType: AbstractMessageChannel.SendAsync(IMessage, CancellationToken)
  fullName: Steeltoe.Messaging.Support.AbstractMessageChannel.SendAsync(Steeltoe.Messaging.IMessage, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Steeltoe.Messaging.Support.AbstractMessageChannel.SendAsync(Steeltoe.Messaging.IMessage,System.Threading.CancellationToken)
    name: SendAsync
    nameWithType: AbstractMessageChannel.SendAsync
    fullName: Steeltoe.Messaging.Support.AbstractMessageChannel.SendAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Support.AbstractMessageChannel.SendAsync(Steeltoe.Messaging.IMessage,System.Threading.CancellationToken)
    name: SendAsync
    nameWithType: AbstractMessageChannel.SendAsync
    fullName: Steeltoe.Messaging.Support.AbstractMessageChannel.SendAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Support.AbstractMessageChannel.ToString
  commentId: M:Steeltoe.Messaging.Support.AbstractMessageChannel.ToString
  parent: Steeltoe.Messaging.Support.AbstractMessageChannel
  name: ToString()
  nameWithType: AbstractMessageChannel.ToString()
  fullName: Steeltoe.Messaging.Support.AbstractMessageChannel.ToString()
  spec.csharp:
  - uid: Steeltoe.Messaging.Support.AbstractMessageChannel.ToString
    name: ToString
    nameWithType: AbstractMessageChannel.ToString
    fullName: Steeltoe.Messaging.Support.AbstractMessageChannel.ToString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Support.AbstractMessageChannel.ToString
    name: ToString
    nameWithType: AbstractMessageChannel.ToString
    fullName: Steeltoe.Messaging.Support.AbstractMessageChannel.ToString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Support.AbstractMessageChannel.DoSend(Steeltoe.Messaging.IMessage,System.Int32)
  commentId: M:Steeltoe.Messaging.Support.AbstractMessageChannel.DoSend(Steeltoe.Messaging.IMessage,System.Int32)
  parent: Steeltoe.Messaging.Support.AbstractMessageChannel
  isExternal: true
  name: DoSend(IMessage, Int32)
  nameWithType: AbstractMessageChannel.DoSend(IMessage, Int32)
  fullName: Steeltoe.Messaging.Support.AbstractMessageChannel.DoSend(Steeltoe.Messaging.IMessage, System.Int32)
  spec.csharp:
  - uid: Steeltoe.Messaging.Support.AbstractMessageChannel.DoSend(Steeltoe.Messaging.IMessage,System.Int32)
    name: DoSend
    nameWithType: AbstractMessageChannel.DoSend
    fullName: Steeltoe.Messaging.Support.AbstractMessageChannel.DoSend
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Support.AbstractMessageChannel.DoSend(Steeltoe.Messaging.IMessage,System.Int32)
    name: DoSend
    nameWithType: AbstractMessageChannel.DoSend
    fullName: Steeltoe.Messaging.Support.AbstractMessageChannel.DoSend
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Support.AbstractMessageChannel.DoSend(Steeltoe.Messaging.IMessage,System.Threading.CancellationToken)
  commentId: M:Steeltoe.Messaging.Support.AbstractMessageChannel.DoSend(Steeltoe.Messaging.IMessage,System.Threading.CancellationToken)
  parent: Steeltoe.Messaging.Support.AbstractMessageChannel
  isExternal: true
  name: DoSend(IMessage, CancellationToken)
  nameWithType: AbstractMessageChannel.DoSend(IMessage, CancellationToken)
  fullName: Steeltoe.Messaging.Support.AbstractMessageChannel.DoSend(Steeltoe.Messaging.IMessage, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Steeltoe.Messaging.Support.AbstractMessageChannel.DoSend(Steeltoe.Messaging.IMessage,System.Threading.CancellationToken)
    name: DoSend
    nameWithType: AbstractMessageChannel.DoSend
    fullName: Steeltoe.Messaging.Support.AbstractMessageChannel.DoSend
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Support.AbstractMessageChannel.DoSend(Steeltoe.Messaging.IMessage,System.Threading.CancellationToken)
    name: DoSend
    nameWithType: AbstractMessageChannel.DoSend
    fullName: Steeltoe.Messaging.Support.AbstractMessageChannel.DoSend
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Support.AbstractMessageChannel.DoSendInternal(Steeltoe.Messaging.IMessage,System.Threading.CancellationToken)
  commentId: M:Steeltoe.Messaging.Support.AbstractMessageChannel.DoSendInternal(Steeltoe.Messaging.IMessage,System.Threading.CancellationToken)
  parent: Steeltoe.Messaging.Support.AbstractMessageChannel
  isExternal: true
  name: DoSendInternal(IMessage, CancellationToken)
  nameWithType: AbstractMessageChannel.DoSendInternal(IMessage, CancellationToken)
  fullName: Steeltoe.Messaging.Support.AbstractMessageChannel.DoSendInternal(Steeltoe.Messaging.IMessage, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Steeltoe.Messaging.Support.AbstractMessageChannel.DoSendInternal(Steeltoe.Messaging.IMessage,System.Threading.CancellationToken)
    name: DoSendInternal
    nameWithType: AbstractMessageChannel.DoSendInternal
    fullName: Steeltoe.Messaging.Support.AbstractMessageChannel.DoSendInternal
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Support.AbstractMessageChannel.DoSendInternal(Steeltoe.Messaging.IMessage,System.Threading.CancellationToken)
    name: DoSendInternal
    nameWithType: AbstractMessageChannel.DoSendInternal
    fullName: Steeltoe.Messaging.Support.AbstractMessageChannel.DoSendInternal
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Channels.Channel{Steeltoe.Messaging.IMessage,Steeltoe.Messaging.IMessage}.Reader
  commentId: P:System.Threading.Channels.Channel{Steeltoe.Messaging.IMessage,Steeltoe.Messaging.IMessage}.Reader
  parent: System.Threading.Channels.Channel{Steeltoe.Messaging.IMessage,Steeltoe.Messaging.IMessage}
  definition: System.Threading.Channels.Channel`2.Reader
  name: Reader
  nameWithType: Channel<IMessage, IMessage>.Reader
  fullName: System.Threading.Channels.Channel<Steeltoe.Messaging.IMessage, Steeltoe.Messaging.IMessage>.Reader
  nameWithType.vb: Channel(Of IMessage, IMessage).Reader
  fullName.vb: System.Threading.Channels.Channel(Of Steeltoe.Messaging.IMessage, Steeltoe.Messaging.IMessage).Reader
- uid: System.Threading.Channels.Channel{Steeltoe.Messaging.IMessage,Steeltoe.Messaging.IMessage}.Writer
  commentId: P:System.Threading.Channels.Channel{Steeltoe.Messaging.IMessage,Steeltoe.Messaging.IMessage}.Writer
  parent: System.Threading.Channels.Channel{Steeltoe.Messaging.IMessage,Steeltoe.Messaging.IMessage}
  definition: System.Threading.Channels.Channel`2.Writer
  name: Writer
  nameWithType: Channel<IMessage, IMessage>.Writer
  fullName: System.Threading.Channels.Channel<Steeltoe.Messaging.IMessage, Steeltoe.Messaging.IMessage>.Writer
  nameWithType.vb: Channel(Of IMessage, IMessage).Writer
  fullName.vb: System.Threading.Channels.Channel(Of Steeltoe.Messaging.IMessage, Steeltoe.Messaging.IMessage).Writer
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Threading.Channels.Channel`2
  commentId: T:System.Threading.Channels.Channel`2
  isExternal: true
  name: Channel<TWrite, TRead>
  nameWithType: Channel<TWrite, TRead>
  fullName: System.Threading.Channels.Channel<TWrite, TRead>
  nameWithType.vb: Channel(Of TWrite, TRead)
  fullName.vb: System.Threading.Channels.Channel(Of TWrite, TRead)
  name.vb: Channel(Of TWrite, TRead)
  spec.csharp:
  - uid: System.Threading.Channels.Channel`2
    name: Channel
    nameWithType: Channel
    fullName: System.Threading.Channels.Channel
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TWrite
    nameWithType: TWrite
    fullName: TWrite
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TRead
    nameWithType: TRead
    fullName: TRead
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Channels.Channel`2
    name: Channel
    nameWithType: Channel
    fullName: System.Threading.Channels.Channel
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TWrite
    nameWithType: TWrite
    fullName: TWrite
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TRead
    nameWithType: TRead
    fullName: TRead
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Channels
  commentId: N:System.Threading.Channels
  isExternal: true
  name: System.Threading.Channels
  nameWithType: System.Threading.Channels
  fullName: System.Threading.Channels
- uid: System.Threading.Channels.Channel`1
  commentId: T:System.Threading.Channels.Channel`1
  isExternal: true
  name: Channel<T>
  nameWithType: Channel<T>
  fullName: System.Threading.Channels.Channel<T>
  nameWithType.vb: Channel(Of T)
  fullName.vb: System.Threading.Channels.Channel(Of T)
  name.vb: Channel(Of T)
  spec.csharp:
  - uid: System.Threading.Channels.Channel`1
    name: Channel
    nameWithType: Channel
    fullName: System.Threading.Channels.Channel
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Channels.Channel`1
    name: Channel
    nameWithType: Channel
    fullName: System.Threading.Channels.Channel
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging
  commentId: N:Steeltoe.Messaging
  name: Steeltoe.Messaging
  nameWithType: Steeltoe.Messaging
  fullName: Steeltoe.Messaging
- uid: System.Threading.Channels.Channel`2.Reader
  commentId: P:System.Threading.Channels.Channel`2.Reader
  isExternal: true
  name: Reader
  nameWithType: Channel<TWrite, TRead>.Reader
  fullName: System.Threading.Channels.Channel<TWrite, TRead>.Reader
  nameWithType.vb: Channel(Of TWrite, TRead).Reader
  fullName.vb: System.Threading.Channels.Channel(Of TWrite, TRead).Reader
- uid: System.Threading.Channels.Channel`2.Writer
  commentId: P:System.Threading.Channels.Channel`2.Writer
  isExternal: true
  name: Writer
  nameWithType: Channel<TWrite, TRead>.Writer
  fullName: System.Threading.Channels.Channel<TWrite, TRead>.Writer
  nameWithType.vb: Channel(Of TWrite, TRead).Writer
  fullName.vb: System.Threading.Channels.Channel(Of TWrite, TRead).Writer
- uid: Steeltoe.Messaging.Support.AbstractSubscribableChannel.#ctor*
  commentId: Overload:Steeltoe.Messaging.Support.AbstractSubscribableChannel.#ctor
  name: AbstractSubscribableChannel
  nameWithType: AbstractSubscribableChannel.AbstractSubscribableChannel
  fullName: Steeltoe.Messaging.Support.AbstractSubscribableChannel.AbstractSubscribableChannel
- uid: Microsoft.Extensions.Logging.ILogger
  commentId: T:Microsoft.Extensions.Logging.ILogger
  parent: Microsoft.Extensions.Logging
  isExternal: true
  name: ILogger
  nameWithType: ILogger
  fullName: Microsoft.Extensions.Logging.ILogger
- uid: Microsoft.Extensions.Logging
  commentId: N:Microsoft.Extensions.Logging
  isExternal: true
  name: Microsoft.Extensions.Logging
  nameWithType: Microsoft.Extensions.Logging
  fullName: Microsoft.Extensions.Logging
- uid: Steeltoe.Messaging.Support.AbstractSubscribableChannel.SubscriberCount*
  commentId: Overload:Steeltoe.Messaging.Support.AbstractSubscribableChannel.SubscriberCount
  name: SubscriberCount
  nameWithType: AbstractSubscribableChannel.SubscriberCount
  fullName: Steeltoe.Messaging.Support.AbstractSubscribableChannel.SubscriberCount
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Steeltoe.Messaging.Support.AbstractSubscribableChannel.Subscribers*
  commentId: Overload:Steeltoe.Messaging.Support.AbstractSubscribableChannel.Subscribers
  name: Subscribers
  nameWithType: AbstractSubscribableChannel.Subscribers
  fullName: Steeltoe.Messaging.Support.AbstractSubscribableChannel.Subscribers
- uid: System.Collections.Generic.ISet{Steeltoe.Messaging.IMessageHandler}
  commentId: T:System.Collections.Generic.ISet{Steeltoe.Messaging.IMessageHandler}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.ISet`1
  name: ISet<IMessageHandler>
  nameWithType: ISet<IMessageHandler>
  fullName: System.Collections.Generic.ISet<Steeltoe.Messaging.IMessageHandler>
  nameWithType.vb: ISet(Of IMessageHandler)
  fullName.vb: System.Collections.Generic.ISet(Of Steeltoe.Messaging.IMessageHandler)
  name.vb: ISet(Of IMessageHandler)
  spec.csharp:
  - uid: System.Collections.Generic.ISet`1
    name: ISet
    nameWithType: ISet
    fullName: System.Collections.Generic.ISet
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Steeltoe.Messaging.IMessageHandler
    name: IMessageHandler
    nameWithType: IMessageHandler
    fullName: Steeltoe.Messaging.IMessageHandler
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ISet`1
    name: ISet
    nameWithType: ISet
    fullName: System.Collections.Generic.ISet
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Steeltoe.Messaging.IMessageHandler
    name: IMessageHandler
    nameWithType: IMessageHandler
    fullName: Steeltoe.Messaging.IMessageHandler
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.ISet`1
  commentId: T:System.Collections.Generic.ISet`1
  isExternal: true
  name: ISet<T>
  nameWithType: ISet<T>
  fullName: System.Collections.Generic.ISet<T>
  nameWithType.vb: ISet(Of T)
  fullName.vb: System.Collections.Generic.ISet(Of T)
  name.vb: ISet(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.ISet`1
    name: ISet
    nameWithType: ISet
    fullName: System.Collections.Generic.ISet
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ISet`1
    name: ISet
    nameWithType: ISet
    fullName: System.Collections.Generic.ISet
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Steeltoe.Messaging.Support.AbstractSubscribableChannel.HasSubscription*
  commentId: Overload:Steeltoe.Messaging.Support.AbstractSubscribableChannel.HasSubscription
  name: HasSubscription
  nameWithType: AbstractSubscribableChannel.HasSubscription
  fullName: Steeltoe.Messaging.Support.AbstractSubscribableChannel.HasSubscription
- uid: Steeltoe.Messaging.IMessageHandler
  commentId: T:Steeltoe.Messaging.IMessageHandler
  parent: Steeltoe.Messaging
  name: IMessageHandler
  nameWithType: IMessageHandler
  fullName: Steeltoe.Messaging.IMessageHandler
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Steeltoe.Messaging.Support.AbstractSubscribableChannel.Subscribe*
  commentId: Overload:Steeltoe.Messaging.Support.AbstractSubscribableChannel.Subscribe
  name: Subscribe
  nameWithType: AbstractSubscribableChannel.Subscribe
  fullName: Steeltoe.Messaging.Support.AbstractSubscribableChannel.Subscribe
- uid: Steeltoe.Messaging.ISubscribableChannel.Subscribe(Steeltoe.Messaging.IMessageHandler)
  commentId: M:Steeltoe.Messaging.ISubscribableChannel.Subscribe(Steeltoe.Messaging.IMessageHandler)
  parent: Steeltoe.Messaging.ISubscribableChannel
  name: Subscribe(IMessageHandler)
  nameWithType: ISubscribableChannel.Subscribe(IMessageHandler)
  fullName: Steeltoe.Messaging.ISubscribableChannel.Subscribe(Steeltoe.Messaging.IMessageHandler)
  spec.csharp:
  - uid: Steeltoe.Messaging.ISubscribableChannel.Subscribe(Steeltoe.Messaging.IMessageHandler)
    name: Subscribe
    nameWithType: ISubscribableChannel.Subscribe
    fullName: Steeltoe.Messaging.ISubscribableChannel.Subscribe
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.IMessageHandler
    name: IMessageHandler
    nameWithType: IMessageHandler
    fullName: Steeltoe.Messaging.IMessageHandler
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.ISubscribableChannel.Subscribe(Steeltoe.Messaging.IMessageHandler)
    name: Subscribe
    nameWithType: ISubscribableChannel.Subscribe
    fullName: Steeltoe.Messaging.ISubscribableChannel.Subscribe
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.IMessageHandler
    name: IMessageHandler
    nameWithType: IMessageHandler
    fullName: Steeltoe.Messaging.IMessageHandler
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Support.AbstractSubscribableChannel.Unsubscribe*
  commentId: Overload:Steeltoe.Messaging.Support.AbstractSubscribableChannel.Unsubscribe
  name: Unsubscribe
  nameWithType: AbstractSubscribableChannel.Unsubscribe
  fullName: Steeltoe.Messaging.Support.AbstractSubscribableChannel.Unsubscribe
- uid: Steeltoe.Messaging.ISubscribableChannel.Unsubscribe(Steeltoe.Messaging.IMessageHandler)
  commentId: M:Steeltoe.Messaging.ISubscribableChannel.Unsubscribe(Steeltoe.Messaging.IMessageHandler)
  parent: Steeltoe.Messaging.ISubscribableChannel
  name: Unsubscribe(IMessageHandler)
  nameWithType: ISubscribableChannel.Unsubscribe(IMessageHandler)
  fullName: Steeltoe.Messaging.ISubscribableChannel.Unsubscribe(Steeltoe.Messaging.IMessageHandler)
  spec.csharp:
  - uid: Steeltoe.Messaging.ISubscribableChannel.Unsubscribe(Steeltoe.Messaging.IMessageHandler)
    name: Unsubscribe
    nameWithType: ISubscribableChannel.Unsubscribe
    fullName: Steeltoe.Messaging.ISubscribableChannel.Unsubscribe
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.IMessageHandler
    name: IMessageHandler
    nameWithType: IMessageHandler
    fullName: Steeltoe.Messaging.IMessageHandler
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.ISubscribableChannel.Unsubscribe(Steeltoe.Messaging.IMessageHandler)
    name: Unsubscribe
    nameWithType: ISubscribableChannel.Unsubscribe
    fullName: Steeltoe.Messaging.ISubscribableChannel.Unsubscribe
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.IMessageHandler
    name: IMessageHandler
    nameWithType: IMessageHandler
    fullName: Steeltoe.Messaging.IMessageHandler
  - name: )
    nameWithType: )
    fullName: )
