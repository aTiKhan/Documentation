### YamlMime:ManagedReference
items:
- uid: Steeltoe.Security.Authentication.CloudFoundry.ApplicationBuilderExtensions
  commentId: T:Steeltoe.Security.Authentication.CloudFoundry.ApplicationBuilderExtensions
  id: ApplicationBuilderExtensions
  parent: Steeltoe.Security.Authentication.CloudFoundry
  children:
  - Steeltoe.Security.Authentication.CloudFoundry.ApplicationBuilderExtensions.UseCloudFoundryCertificateAuth(Microsoft.AspNetCore.Builder.IApplicationBuilder,Microsoft.AspNetCore.Builder.ForwardedHeadersOptions)
  - Steeltoe.Security.Authentication.CloudFoundry.ApplicationBuilderExtensions.UseCloudFoundryContainerIdentity(Microsoft.AspNetCore.Builder.IApplicationBuilder)
  langs:
  - csharp
  - vb
  name: ApplicationBuilderExtensions
  nameWithType: ApplicationBuilderExtensions
  fullName: Steeltoe.Security.Authentication.CloudFoundry.ApplicationBuilderExtensions
  type: Class
  source:
    remote:
      path: src/Security/src/Authentication.CloudFoundryCore/ApplicationBuilderExtensions.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: ApplicationBuilderExtensions
    path: ../Steeltoe/src/Security/src/Authentication.CloudFoundryCore/ApplicationBuilderExtensions.cs
    startLine: 11
  assemblies:
  - Steeltoe.Security.Authentication.CloudFoundryCore
  namespace: Steeltoe.Security.Authentication.CloudFoundry
  syntax:
    content: public static class ApplicationBuilderExtensions
    content.vb: Public Module ApplicationBuilderExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Steeltoe.Security.Authentication.CloudFoundry.ApplicationBuilderExtensions.UseCloudFoundryContainerIdentity(Microsoft.AspNetCore.Builder.IApplicationBuilder)
  commentId: M:Steeltoe.Security.Authentication.CloudFoundry.ApplicationBuilderExtensions.UseCloudFoundryContainerIdentity(Microsoft.AspNetCore.Builder.IApplicationBuilder)
  id: UseCloudFoundryContainerIdentity(Microsoft.AspNetCore.Builder.IApplicationBuilder)
  isExtensionMethod: true
  parent: Steeltoe.Security.Authentication.CloudFoundry.ApplicationBuilderExtensions
  langs:
  - csharp
  - vb
  name: UseCloudFoundryContainerIdentity(IApplicationBuilder)
  nameWithType: ApplicationBuilderExtensions.UseCloudFoundryContainerIdentity(IApplicationBuilder)
  fullName: Steeltoe.Security.Authentication.CloudFoundry.ApplicationBuilderExtensions.UseCloudFoundryContainerIdentity(Microsoft.AspNetCore.Builder.IApplicationBuilder)
  type: Method
  source:
    remote:
      path: src/Security/src/Authentication.CloudFoundryCore/ApplicationBuilderExtensions.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: UseCloudFoundryContainerIdentity
    path: ../Steeltoe/src/Security/src/Authentication.CloudFoundryCore/ApplicationBuilderExtensions.cs
    startLine: 17
  assemblies:
  - Steeltoe.Security.Authentication.CloudFoundryCore
  namespace: Steeltoe.Security.Authentication.CloudFoundry
  summary: "\nEnable certificate rotation and forwarding\n"
  example: []
  syntax:
    content: public static IApplicationBuilder UseCloudFoundryContainerIdentity(this IApplicationBuilder app)
    parameters:
    - id: app
      type: Microsoft.AspNetCore.Builder.IApplicationBuilder
      description: The <xref href="Microsoft.AspNetCore.Builder.IApplicationBuilder" data-throw-if-not-resolved="false"></xref>
    return:
      type: Microsoft.AspNetCore.Builder.IApplicationBuilder
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function UseCloudFoundryContainerIdentity(app As IApplicationBuilder) As IApplicationBuilder
  overload: Steeltoe.Security.Authentication.CloudFoundry.ApplicationBuilderExtensions.UseCloudFoundryContainerIdentity*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Steeltoe.Security.Authentication.CloudFoundry.ApplicationBuilderExtensions.UseCloudFoundryCertificateAuth(Microsoft.AspNetCore.Builder.IApplicationBuilder,Microsoft.AspNetCore.Builder.ForwardedHeadersOptions)
  commentId: M:Steeltoe.Security.Authentication.CloudFoundry.ApplicationBuilderExtensions.UseCloudFoundryCertificateAuth(Microsoft.AspNetCore.Builder.IApplicationBuilder,Microsoft.AspNetCore.Builder.ForwardedHeadersOptions)
  id: UseCloudFoundryCertificateAuth(Microsoft.AspNetCore.Builder.IApplicationBuilder,Microsoft.AspNetCore.Builder.ForwardedHeadersOptions)
  isExtensionMethod: true
  parent: Steeltoe.Security.Authentication.CloudFoundry.ApplicationBuilderExtensions
  langs:
  - csharp
  - vb
  name: UseCloudFoundryCertificateAuth(IApplicationBuilder, ForwardedHeadersOptions)
  nameWithType: ApplicationBuilderExtensions.UseCloudFoundryCertificateAuth(IApplicationBuilder, ForwardedHeadersOptions)
  fullName: Steeltoe.Security.Authentication.CloudFoundry.ApplicationBuilderExtensions.UseCloudFoundryCertificateAuth(Microsoft.AspNetCore.Builder.IApplicationBuilder, Microsoft.AspNetCore.Builder.ForwardedHeadersOptions)
  type: Method
  source:
    remote:
      path: src/Security/src/Authentication.CloudFoundryCore/ApplicationBuilderExtensions.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: UseCloudFoundryCertificateAuth
    path: ../Steeltoe/src/Security/src/Authentication.CloudFoundryCore/ApplicationBuilderExtensions.cs
    startLine: 35
  assemblies:
  - Steeltoe.Security.Authentication.CloudFoundryCore
  namespace: Steeltoe.Security.Authentication.CloudFoundry
  summary: "\nEnable identity certificate rotation, certificate and header forwarding, authentication and authorization\nDefault ForwardedHeadersOptions only includes <xref href=\"Microsoft.AspNetCore.HttpOverrides.ForwardedHeaders.XForwardedProto\" data-throw-if-not-resolved=\"false\"></xref>\n"
  example: []
  syntax:
    content: public static IApplicationBuilder UseCloudFoundryCertificateAuth(this IApplicationBuilder app, ForwardedHeadersOptions forwardedHeaders = null)
    parameters:
    - id: app
      type: Microsoft.AspNetCore.Builder.IApplicationBuilder
      description: The <xref href="Microsoft.AspNetCore.Builder.IApplicationBuilder" data-throw-if-not-resolved="false"></xref>
    - id: forwardedHeaders
      type: Microsoft.AspNetCore.Builder.ForwardedHeadersOptions
      description: Custom header forwarding policy
    return:
      type: Microsoft.AspNetCore.Builder.IApplicationBuilder
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function UseCloudFoundryCertificateAuth(app As IApplicationBuilder, forwardedHeaders As ForwardedHeadersOptions = Nothing) As IApplicationBuilder
  overload: Steeltoe.Security.Authentication.CloudFoundry.ApplicationBuilderExtensions.UseCloudFoundryCertificateAuth*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Steeltoe.Security.Authentication.CloudFoundry
  commentId: N:Steeltoe.Security.Authentication.CloudFoundry
  name: Steeltoe.Security.Authentication.CloudFoundry
  nameWithType: Steeltoe.Security.Authentication.CloudFoundry
  fullName: Steeltoe.Security.Authentication.CloudFoundry
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.AspNetCore.Builder.IApplicationBuilder
  commentId: T:Microsoft.AspNetCore.Builder.IApplicationBuilder
  parent: Microsoft.AspNetCore.Builder
  isExternal: true
  name: IApplicationBuilder
  nameWithType: IApplicationBuilder
  fullName: Microsoft.AspNetCore.Builder.IApplicationBuilder
- uid: Steeltoe.Security.Authentication.CloudFoundry.ApplicationBuilderExtensions.UseCloudFoundryContainerIdentity*
  commentId: Overload:Steeltoe.Security.Authentication.CloudFoundry.ApplicationBuilderExtensions.UseCloudFoundryContainerIdentity
  name: UseCloudFoundryContainerIdentity
  nameWithType: ApplicationBuilderExtensions.UseCloudFoundryContainerIdentity
  fullName: Steeltoe.Security.Authentication.CloudFoundry.ApplicationBuilderExtensions.UseCloudFoundryContainerIdentity
- uid: Microsoft.AspNetCore.Builder
  commentId: N:Microsoft.AspNetCore.Builder
  isExternal: true
  name: Microsoft.AspNetCore.Builder
  nameWithType: Microsoft.AspNetCore.Builder
  fullName: Microsoft.AspNetCore.Builder
- uid: Microsoft.AspNetCore.HttpOverrides.ForwardedHeaders.XForwardedProto
  commentId: F:Microsoft.AspNetCore.HttpOverrides.ForwardedHeaders.XForwardedProto
  isExternal: true
- uid: Steeltoe.Security.Authentication.CloudFoundry.ApplicationBuilderExtensions.UseCloudFoundryCertificateAuth*
  commentId: Overload:Steeltoe.Security.Authentication.CloudFoundry.ApplicationBuilderExtensions.UseCloudFoundryCertificateAuth
  name: UseCloudFoundryCertificateAuth
  nameWithType: ApplicationBuilderExtensions.UseCloudFoundryCertificateAuth
  fullName: Steeltoe.Security.Authentication.CloudFoundry.ApplicationBuilderExtensions.UseCloudFoundryCertificateAuth
- uid: Microsoft.AspNetCore.Builder.ForwardedHeadersOptions
  commentId: T:Microsoft.AspNetCore.Builder.ForwardedHeadersOptions
  parent: Microsoft.AspNetCore.Builder
  isExternal: true
  name: ForwardedHeadersOptions
  nameWithType: ForwardedHeadersOptions
  fullName: Microsoft.AspNetCore.Builder.ForwardedHeadersOptions
