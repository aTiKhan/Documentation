### YamlMime:ManagedReference
items:
- uid: Steeltoe.Management.Info.InfoBuilder
  commentId: T:Steeltoe.Management.Info.InfoBuilder
  id: InfoBuilder
  parent: Steeltoe.Management.Info
  children:
  - Steeltoe.Management.Info.InfoBuilder.Build
  - Steeltoe.Management.Info.InfoBuilder.WithInfo(System.Collections.Generic.Dictionary{System.String,System.Object})
  - Steeltoe.Management.Info.InfoBuilder.WithInfo(System.String,System.Object)
  langs:
  - csharp
  - vb
  name: InfoBuilder
  nameWithType: InfoBuilder
  fullName: Steeltoe.Management.Info.InfoBuilder
  type: Class
  source:
    remote:
      path: src/Management/src/Abstractions/Info/InfoBuilder.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: InfoBuilder
    path: ../Steeltoe/src/Management/src/Abstractions/Info/InfoBuilder.cs
    startLine: 8
  assemblies:
  - Steeltoe.Management.Abstractions
  namespace: Steeltoe.Management.Info
  syntax:
    content: 'public class InfoBuilder : IInfoBuilder'
    content.vb: >-
      Public Class InfoBuilder

          Implements IInfoBuilder
  inheritance:
  - System.Object
  implements:
  - Steeltoe.Management.Info.IInfoBuilder
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Steeltoe.Management.Info.InfoBuilder.Build
  commentId: M:Steeltoe.Management.Info.InfoBuilder.Build
  id: Build
  parent: Steeltoe.Management.Info.InfoBuilder
  langs:
  - csharp
  - vb
  name: Build()
  nameWithType: InfoBuilder.Build()
  fullName: Steeltoe.Management.Info.InfoBuilder.Build()
  type: Method
  source:
    remote:
      path: src/Management/src/Abstractions/Info/InfoBuilder.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Build
    path: ../Steeltoe/src/Management/src/Abstractions/Info/InfoBuilder.cs
    startLine: 12
  assemblies:
  - Steeltoe.Management.Abstractions
  namespace: Steeltoe.Management.Info
  syntax:
    content: public Dictionary<string, object> Build()
    return:
      type: System.Collections.Generic.Dictionary{System.String,System.Object}
    content.vb: Public Function Build As Dictionary(Of String, Object)
  overload: Steeltoe.Management.Info.InfoBuilder.Build*
  implements:
  - Steeltoe.Management.Info.IInfoBuilder.Build
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Steeltoe.Management.Info.InfoBuilder.WithInfo(System.String,System.Object)
  commentId: M:Steeltoe.Management.Info.InfoBuilder.WithInfo(System.String,System.Object)
  id: WithInfo(System.String,System.Object)
  parent: Steeltoe.Management.Info.InfoBuilder
  langs:
  - csharp
  - vb
  name: WithInfo(String, Object)
  nameWithType: InfoBuilder.WithInfo(String, Object)
  fullName: Steeltoe.Management.Info.InfoBuilder.WithInfo(System.String, System.Object)
  type: Method
  source:
    remote:
      path: src/Management/src/Abstractions/Info/InfoBuilder.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: WithInfo
    path: ../Steeltoe/src/Management/src/Abstractions/Info/InfoBuilder.cs
    startLine: 17
  assemblies:
  - Steeltoe.Management.Abstractions
  namespace: Steeltoe.Management.Info
  syntax:
    content: public IInfoBuilder WithInfo(string key, object value)
    parameters:
    - id: key
      type: System.String
    - id: value
      type: System.Object
    return:
      type: Steeltoe.Management.Info.IInfoBuilder
    content.vb: Public Function WithInfo(key As String, value As Object) As IInfoBuilder
  overload: Steeltoe.Management.Info.InfoBuilder.WithInfo*
  implements:
  - Steeltoe.Management.Info.IInfoBuilder.WithInfo(System.String,System.Object)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Steeltoe.Management.Info.InfoBuilder.WithInfo(System.Collections.Generic.Dictionary{System.String,System.Object})
  commentId: M:Steeltoe.Management.Info.InfoBuilder.WithInfo(System.Collections.Generic.Dictionary{System.String,System.Object})
  id: WithInfo(System.Collections.Generic.Dictionary{System.String,System.Object})
  parent: Steeltoe.Management.Info.InfoBuilder
  langs:
  - csharp
  - vb
  name: WithInfo(Dictionary<String, Object>)
  nameWithType: InfoBuilder.WithInfo(Dictionary<String, Object>)
  fullName: Steeltoe.Management.Info.InfoBuilder.WithInfo(System.Collections.Generic.Dictionary<System.String, System.Object>)
  type: Method
  source:
    remote:
      path: src/Management/src/Abstractions/Info/InfoBuilder.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: WithInfo
    path: ../Steeltoe/src/Management/src/Abstractions/Info/InfoBuilder.cs
    startLine: 27
  assemblies:
  - Steeltoe.Management.Abstractions
  namespace: Steeltoe.Management.Info
  syntax:
    content: public IInfoBuilder WithInfo(Dictionary<string, object> items)
    parameters:
    - id: items
      type: System.Collections.Generic.Dictionary{System.String,System.Object}
    return:
      type: Steeltoe.Management.Info.IInfoBuilder
    content.vb: Public Function WithInfo(items As Dictionary(Of String, Object)) As IInfoBuilder
  overload: Steeltoe.Management.Info.InfoBuilder.WithInfo*
  implements:
  - Steeltoe.Management.Info.IInfoBuilder.WithInfo(System.Collections.Generic.Dictionary{System.String,System.Object})
  nameWithType.vb: InfoBuilder.WithInfo(Dictionary(Of String, Object))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Steeltoe.Management.Info.InfoBuilder.WithInfo(System.Collections.Generic.Dictionary(Of System.String, System.Object))
  name.vb: WithInfo(Dictionary(Of String, Object))
references:
- uid: Steeltoe.Management.Info
  commentId: N:Steeltoe.Management.Info
  name: Steeltoe.Management.Info
  nameWithType: Steeltoe.Management.Info
  fullName: Steeltoe.Management.Info
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Steeltoe.Management.Info.IInfoBuilder
  commentId: T:Steeltoe.Management.Info.IInfoBuilder
  parent: Steeltoe.Management.Info
  name: IInfoBuilder
  nameWithType: IInfoBuilder
  fullName: Steeltoe.Management.Info.IInfoBuilder
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Steeltoe.Management.Info.InfoBuilder.Build*
  commentId: Overload:Steeltoe.Management.Info.InfoBuilder.Build
  name: Build
  nameWithType: InfoBuilder.Build
  fullName: Steeltoe.Management.Info.InfoBuilder.Build
- uid: Steeltoe.Management.Info.IInfoBuilder.Build
  commentId: M:Steeltoe.Management.Info.IInfoBuilder.Build
  parent: Steeltoe.Management.Info.IInfoBuilder
  name: Build()
  nameWithType: IInfoBuilder.Build()
  fullName: Steeltoe.Management.Info.IInfoBuilder.Build()
  spec.csharp:
  - uid: Steeltoe.Management.Info.IInfoBuilder.Build
    name: Build
    nameWithType: IInfoBuilder.Build
    fullName: Steeltoe.Management.Info.IInfoBuilder.Build
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Management.Info.IInfoBuilder.Build
    name: Build
    nameWithType: IInfoBuilder.Build
    fullName: Steeltoe.Management.Info.IInfoBuilder.Build
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Dictionary{System.String,System.Object}
  commentId: T:System.Collections.Generic.Dictionary{System.String,System.Object}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  name: Dictionary<String, Object>
  nameWithType: Dictionary<String, Object>
  fullName: System.Collections.Generic.Dictionary<System.String, System.Object>
  nameWithType.vb: Dictionary(Of String, Object)
  fullName.vb: System.Collections.Generic.Dictionary(Of System.String, System.Object)
  name.vb: Dictionary(Of String, Object)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Dictionary`2
  commentId: T:System.Collections.Generic.Dictionary`2
  isExternal: true
  name: Dictionary<TKey, TValue>
  nameWithType: Dictionary<TKey, TValue>
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>
  nameWithType.vb: Dictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue)
  name.vb: Dictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Steeltoe.Management.Info.InfoBuilder.WithInfo*
  commentId: Overload:Steeltoe.Management.Info.InfoBuilder.WithInfo
  name: WithInfo
  nameWithType: InfoBuilder.WithInfo
  fullName: Steeltoe.Management.Info.InfoBuilder.WithInfo
- uid: Steeltoe.Management.Info.IInfoBuilder.WithInfo(System.String,System.Object)
  commentId: M:Steeltoe.Management.Info.IInfoBuilder.WithInfo(System.String,System.Object)
  parent: Steeltoe.Management.Info.IInfoBuilder
  isExternal: true
  name: WithInfo(String, Object)
  nameWithType: IInfoBuilder.WithInfo(String, Object)
  fullName: Steeltoe.Management.Info.IInfoBuilder.WithInfo(System.String, System.Object)
  spec.csharp:
  - uid: Steeltoe.Management.Info.IInfoBuilder.WithInfo(System.String,System.Object)
    name: WithInfo
    nameWithType: IInfoBuilder.WithInfo
    fullName: Steeltoe.Management.Info.IInfoBuilder.WithInfo
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Management.Info.IInfoBuilder.WithInfo(System.String,System.Object)
    name: WithInfo
    nameWithType: IInfoBuilder.WithInfo
    fullName: Steeltoe.Management.Info.IInfoBuilder.WithInfo
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Steeltoe.Management.Info.IInfoBuilder.WithInfo(System.Collections.Generic.Dictionary{System.String,System.Object})
  commentId: M:Steeltoe.Management.Info.IInfoBuilder.WithInfo(System.Collections.Generic.Dictionary{System.String,System.Object})
  parent: Steeltoe.Management.Info.IInfoBuilder
  isExternal: true
  name: WithInfo(Dictionary<String, Object>)
  nameWithType: IInfoBuilder.WithInfo(Dictionary<String, Object>)
  fullName: Steeltoe.Management.Info.IInfoBuilder.WithInfo(System.Collections.Generic.Dictionary<System.String, System.Object>)
  nameWithType.vb: IInfoBuilder.WithInfo(Dictionary(Of String, Object))
  fullName.vb: Steeltoe.Management.Info.IInfoBuilder.WithInfo(System.Collections.Generic.Dictionary(Of System.String, System.Object))
  name.vb: WithInfo(Dictionary(Of String, Object))
  spec.csharp:
  - uid: Steeltoe.Management.Info.IInfoBuilder.WithInfo(System.Collections.Generic.Dictionary{System.String,System.Object})
    name: WithInfo
    nameWithType: IInfoBuilder.WithInfo
    fullName: Steeltoe.Management.Info.IInfoBuilder.WithInfo
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Management.Info.IInfoBuilder.WithInfo(System.Collections.Generic.Dictionary{System.String,System.Object})
    name: WithInfo
    nameWithType: IInfoBuilder.WithInfo
    fullName: Steeltoe.Management.Info.IInfoBuilder.WithInfo
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
