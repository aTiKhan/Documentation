### YamlMime:ManagedReference
items:
- uid: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate`1
  commentId: T:Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate`1
  id: AbstractMessageReceivingTemplate`1
  parent: Steeltoe.Messaging.Core
  children:
  - Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate`1.DefaultReceiveDestination
  - Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate`1.DoConvert``1(Steeltoe.Messaging.IMessage)
  - Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate`1.DoReceive(`0)
  - Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate`1.DoReceiveAsync(`0,System.Threading.CancellationToken)
  - Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate`1.Receive
  - Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate`1.Receive(`0)
  - Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate`1.ReceiveAndConvert``1
  - Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate`1.ReceiveAndConvert``1(`0)
  - Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate`1.ReceiveAndConvertAsync``1(`0,System.Threading.CancellationToken)
  - Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate`1.ReceiveAndConvertAsync``1(System.Threading.CancellationToken)
  - Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate`1.ReceiveAsync(`0,System.Threading.CancellationToken)
  - Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate`1.ReceiveAsync(System.Threading.CancellationToken)
  - Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate`1.RequiredDefaultReceiveDestination
  - Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate`1.ThrowReceivedExceptions
  langs:
  - csharp
  - vb
  name: AbstractMessageReceivingTemplate<D>
  nameWithType: AbstractMessageReceivingTemplate<D>
  fullName: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate<D>
  type: Class
  source:
    remote:
      path: src/Messaging/src/MessagingBase/Core/AbstractMessageReceivingTemplate.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: AbstractMessageReceivingTemplate
    path: ../Steeltoe/src/Messaging/src/MessagingBase/Core/AbstractMessageReceivingTemplate.cs
    startLine: 11
  assemblies:
  - Steeltoe.Messaging.MessagingBase
  namespace: Steeltoe.Messaging.Core
  syntax:
    content: 'public abstract class AbstractMessageReceivingTemplate<D> : AbstractMessageSendingTemplate<D>, IMessageSendingOperations<D>, IMessageReceivingOperations<D>'
    typeParameters:
    - id: D
    content.vb: >-
      Public MustInherit Class AbstractMessageReceivingTemplate(Of D)

          Inherits AbstractMessageSendingTemplate(Of D)

          Implements IMessageSendingOperations(Of D), IMessageReceivingOperations(Of D)
  inheritance:
  - System.Object
  - Steeltoe.Messaging.Core.AbstractMessageSendingTemplate{{D}}
  derivedClasses:
  - Steeltoe.Messaging.Core.AbstractMessagingTemplate`1
  implements:
  - Steeltoe.Messaging.Core.IMessageSendingOperations{{D}}
  - Steeltoe.Messaging.Core.IMessageReceivingOperations{{D}}
  inheritedMembers:
  - Steeltoe.Messaging.Core.AbstractMessageSendingTemplate{{D}}.CONVERSION_HINT_HEADER
  - Steeltoe.Messaging.Core.AbstractMessageSendingTemplate{{D}}.DefaultSendDestination
  - Steeltoe.Messaging.Core.AbstractMessageSendingTemplate{{D}}.MessageConverter
  - Steeltoe.Messaging.Core.AbstractMessageSendingTemplate{{D}}.ConvertAndSendAsync(System.Object,System.Threading.CancellationToken)
  - Steeltoe.Messaging.Core.AbstractMessageSendingTemplate{{D}}.ConvertAndSendAsync({D},System.Object,System.Threading.CancellationToken)
  - Steeltoe.Messaging.Core.AbstractMessageSendingTemplate{{D}}.ConvertAndSendAsync({D},System.Object,System.Collections.Generic.IDictionary{System.String,System.Object},System.Threading.CancellationToken)
  - Steeltoe.Messaging.Core.AbstractMessageSendingTemplate{{D}}.ConvertAndSendAsync(System.Object,Steeltoe.Messaging.Core.IMessagePostProcessor,System.Threading.CancellationToken)
  - Steeltoe.Messaging.Core.AbstractMessageSendingTemplate{{D}}.ConvertAndSendAsync({D},System.Object,Steeltoe.Messaging.Core.IMessagePostProcessor,System.Threading.CancellationToken)
  - Steeltoe.Messaging.Core.AbstractMessageSendingTemplate{{D}}.ConvertAndSendAsync({D},System.Object,System.Collections.Generic.IDictionary{System.String,System.Object},Steeltoe.Messaging.Core.IMessagePostProcessor,System.Threading.CancellationToken)
  - Steeltoe.Messaging.Core.AbstractMessageSendingTemplate{{D}}.SendAsync(Steeltoe.Messaging.IMessage,System.Threading.CancellationToken)
  - Steeltoe.Messaging.Core.AbstractMessageSendingTemplate{{D}}.SendAsync({D},Steeltoe.Messaging.IMessage,System.Threading.CancellationToken)
  - Steeltoe.Messaging.Core.AbstractMessageSendingTemplate{{D}}.ConvertAndSend(System.Object)
  - Steeltoe.Messaging.Core.AbstractMessageSendingTemplate{{D}}.ConvertAndSend({D},System.Object)
  - Steeltoe.Messaging.Core.AbstractMessageSendingTemplate{{D}}.ConvertAndSend({D},System.Object,System.Collections.Generic.IDictionary{System.String,System.Object})
  - Steeltoe.Messaging.Core.AbstractMessageSendingTemplate{{D}}.ConvertAndSend(System.Object,Steeltoe.Messaging.Core.IMessagePostProcessor)
  - Steeltoe.Messaging.Core.AbstractMessageSendingTemplate{{D}}.ConvertAndSend({D},System.Object,Steeltoe.Messaging.Core.IMessagePostProcessor)
  - Steeltoe.Messaging.Core.AbstractMessageSendingTemplate{{D}}.ConvertAndSend({D},System.Object,System.Collections.Generic.IDictionary{System.String,System.Object},Steeltoe.Messaging.Core.IMessagePostProcessor)
  - Steeltoe.Messaging.Core.AbstractMessageSendingTemplate{{D}}.Send(Steeltoe.Messaging.IMessage)
  - Steeltoe.Messaging.Core.AbstractMessageSendingTemplate{{D}}.Send({D},Steeltoe.Messaging.IMessage)
  - Steeltoe.Messaging.Core.AbstractMessageSendingTemplate{{D}}.DoSendAsync({D},Steeltoe.Messaging.IMessage,System.Threading.CancellationToken)
  - Steeltoe.Messaging.Core.AbstractMessageSendingTemplate{{D}}.DoSend({D},Steeltoe.Messaging.IMessage)
  - Steeltoe.Messaging.Core.AbstractMessageSendingTemplate{{D}}.RequiredDefaultSendDestination
  - Steeltoe.Messaging.Core.AbstractMessageSendingTemplate{{D}}.DoConvert(System.Object,System.Collections.Generic.IDictionary{System.String,System.Object},Steeltoe.Messaging.Core.IMessagePostProcessor)
  - Steeltoe.Messaging.Core.AbstractMessageSendingTemplate{{D}}.ProcessHeadersToSend(System.Collections.Generic.IDictionary{System.String,System.Object})
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  nameWithType.vb: AbstractMessageReceivingTemplate(Of D)
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
  fullName.vb: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate(Of D)
  name.vb: AbstractMessageReceivingTemplate(Of D)
- uid: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate`1.DefaultReceiveDestination
  commentId: P:Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate`1.DefaultReceiveDestination
  id: DefaultReceiveDestination
  parent: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate`1
  langs:
  - csharp
  - vb
  name: DefaultReceiveDestination
  nameWithType: AbstractMessageReceivingTemplate<D>.DefaultReceiveDestination
  fullName: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate<D>.DefaultReceiveDestination
  type: Property
  source:
    remote:
      path: src/Messaging/src/MessagingBase/Core/AbstractMessageReceivingTemplate.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: DefaultReceiveDestination
    path: ../Steeltoe/src/Messaging/src/MessagingBase/Core/AbstractMessageReceivingTemplate.cs
    startLine: 15
  assemblies:
  - Steeltoe.Messaging.MessagingBase
  namespace: Steeltoe.Messaging.Core
  syntax:
    content: public virtual D DefaultReceiveDestination { get; set; }
    parameters: []
    return:
      type: '{D}'
    content.vb: Public Overridable Property DefaultReceiveDestination As D
  overload: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate`1.DefaultReceiveDestination*
  nameWithType.vb: AbstractMessageReceivingTemplate(Of D).DefaultReceiveDestination
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate(Of D).DefaultReceiveDestination
- uid: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate`1.ThrowReceivedExceptions
  commentId: P:Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate`1.ThrowReceivedExceptions
  id: ThrowReceivedExceptions
  parent: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate`1
  langs:
  - csharp
  - vb
  name: ThrowReceivedExceptions
  nameWithType: AbstractMessageReceivingTemplate<D>.ThrowReceivedExceptions
  fullName: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate<D>.ThrowReceivedExceptions
  type: Property
  source:
    remote:
      path: src/Messaging/src/MessagingBase/Core/AbstractMessageReceivingTemplate.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: ThrowReceivedExceptions
    path: ../Steeltoe/src/Messaging/src/MessagingBase/Core/AbstractMessageReceivingTemplate.cs
    startLine: 28
  assemblies:
  - Steeltoe.Messaging.MessagingBase
  namespace: Steeltoe.Messaging.Core
  syntax:
    content: public virtual bool ThrowReceivedExceptions { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Overridable Property ThrowReceivedExceptions As Boolean
  overload: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate`1.ThrowReceivedExceptions*
  nameWithType.vb: AbstractMessageReceivingTemplate(Of D).ThrowReceivedExceptions
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate(Of D).ThrowReceivedExceptions
- uid: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate`1.ReceiveAsync(System.Threading.CancellationToken)
  commentId: M:Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate`1.ReceiveAsync(System.Threading.CancellationToken)
  id: ReceiveAsync(System.Threading.CancellationToken)
  parent: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate`1
  langs:
  - csharp
  - vb
  name: ReceiveAsync(CancellationToken)
  nameWithType: AbstractMessageReceivingTemplate<D>.ReceiveAsync(CancellationToken)
  fullName: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate<D>.ReceiveAsync(System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Messaging/src/MessagingBase/Core/AbstractMessageReceivingTemplate.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: ReceiveAsync
    path: ../Steeltoe/src/Messaging/src/MessagingBase/Core/AbstractMessageReceivingTemplate.cs
    startLine: 30
  assemblies:
  - Steeltoe.Messaging.MessagingBase
  namespace: Steeltoe.Messaging.Core
  syntax:
    content: public virtual Task<IMessage> ReceiveAsync(CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{Steeltoe.Messaging.IMessage}
    content.vb: Public Overridable Function ReceiveAsync(cancellationToken As CancellationToken = Nothing) As Task(Of IMessage)
  overload: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate`1.ReceiveAsync*
  implements:
  - Steeltoe.Messaging.Core.IMessageReceivingOperations{{D}}.ReceiveAsync(System.Threading.CancellationToken)
  nameWithType.vb: AbstractMessageReceivingTemplate(Of D).ReceiveAsync(CancellationToken)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate(Of D).ReceiveAsync(System.Threading.CancellationToken)
- uid: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate`1.ReceiveAsync(`0,System.Threading.CancellationToken)
  commentId: M:Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate`1.ReceiveAsync(`0,System.Threading.CancellationToken)
  id: ReceiveAsync(`0,System.Threading.CancellationToken)
  parent: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate`1
  langs:
  - csharp
  - vb
  name: ReceiveAsync(D, CancellationToken)
  nameWithType: AbstractMessageReceivingTemplate<D>.ReceiveAsync(D, CancellationToken)
  fullName: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate<D>.ReceiveAsync(D, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Messaging/src/MessagingBase/Core/AbstractMessageReceivingTemplate.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: ReceiveAsync
    path: ../Steeltoe/src/Messaging/src/MessagingBase/Core/AbstractMessageReceivingTemplate.cs
    startLine: 35
  assemblies:
  - Steeltoe.Messaging.MessagingBase
  namespace: Steeltoe.Messaging.Core
  syntax:
    content: public virtual Task<IMessage> ReceiveAsync(D destination, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: destination
      type: '{D}'
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{Steeltoe.Messaging.IMessage}
    content.vb: Public Overridable Function ReceiveAsync(destination As D, cancellationToken As CancellationToken = Nothing) As Task(Of IMessage)
  overload: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate`1.ReceiveAsync*
  implements:
  - Steeltoe.Messaging.Core.IMessageReceivingOperations{{D}}.ReceiveAsync({D},System.Threading.CancellationToken)
  nameWithType.vb: AbstractMessageReceivingTemplate(Of D).ReceiveAsync(D, CancellationToken)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate(Of D).ReceiveAsync(D, System.Threading.CancellationToken)
- uid: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate`1.ReceiveAndConvertAsync``1(System.Threading.CancellationToken)
  commentId: M:Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate`1.ReceiveAndConvertAsync``1(System.Threading.CancellationToken)
  id: ReceiveAndConvertAsync``1(System.Threading.CancellationToken)
  parent: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate`1
  langs:
  - csharp
  - vb
  name: ReceiveAndConvertAsync<T>(CancellationToken)
  nameWithType: AbstractMessageReceivingTemplate<D>.ReceiveAndConvertAsync<T>(CancellationToken)
  fullName: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate<D>.ReceiveAndConvertAsync<T>(System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Messaging/src/MessagingBase/Core/AbstractMessageReceivingTemplate.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: ReceiveAndConvertAsync
    path: ../Steeltoe/src/Messaging/src/MessagingBase/Core/AbstractMessageReceivingTemplate.cs
    startLine: 40
  assemblies:
  - Steeltoe.Messaging.MessagingBase
  namespace: Steeltoe.Messaging.Core
  syntax:
    content: public virtual Task<T> ReceiveAndConvertAsync<T>(CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
    typeParameters:
    - id: T
    return:
      type: System.Threading.Tasks.Task{{T}}
    content.vb: Public Overridable Function ReceiveAndConvertAsync(Of T)(cancellationToken As CancellationToken = Nothing) As Task(Of T)
  overload: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate`1.ReceiveAndConvertAsync*
  implements:
  - Steeltoe.Messaging.Core.IMessageReceivingOperations{{D}}.ReceiveAndConvertAsync``1(System.Threading.CancellationToken)
  nameWithType.vb: AbstractMessageReceivingTemplate(Of D).ReceiveAndConvertAsync(Of T)(CancellationToken)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate(Of D).ReceiveAndConvertAsync(Of T)(System.Threading.CancellationToken)
  name.vb: ReceiveAndConvertAsync(Of T)(CancellationToken)
- uid: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate`1.ReceiveAndConvertAsync``1(`0,System.Threading.CancellationToken)
  commentId: M:Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate`1.ReceiveAndConvertAsync``1(`0,System.Threading.CancellationToken)
  id: ReceiveAndConvertAsync``1(`0,System.Threading.CancellationToken)
  parent: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate`1
  langs:
  - csharp
  - vb
  name: ReceiveAndConvertAsync<T>(D, CancellationToken)
  nameWithType: AbstractMessageReceivingTemplate<D>.ReceiveAndConvertAsync<T>(D, CancellationToken)
  fullName: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate<D>.ReceiveAndConvertAsync<T>(D, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Messaging/src/MessagingBase/Core/AbstractMessageReceivingTemplate.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: ReceiveAndConvertAsync
    path: ../Steeltoe/src/Messaging/src/MessagingBase/Core/AbstractMessageReceivingTemplate.cs
    startLine: 45
  assemblies:
  - Steeltoe.Messaging.MessagingBase
  namespace: Steeltoe.Messaging.Core
  syntax:
    content: public virtual Task<T> ReceiveAndConvertAsync<T>(D destination, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: destination
      type: '{D}'
    - id: cancellationToken
      type: System.Threading.CancellationToken
    typeParameters:
    - id: T
    return:
      type: System.Threading.Tasks.Task{{T}}
    content.vb: Public Overridable Function ReceiveAndConvertAsync(Of T)(destination As D, cancellationToken As CancellationToken = Nothing) As Task(Of T)
  overload: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate`1.ReceiveAndConvertAsync*
  implements:
  - Steeltoe.Messaging.Core.IMessageReceivingOperations{{D}}.ReceiveAndConvertAsync``1({D},System.Threading.CancellationToken)
  nameWithType.vb: AbstractMessageReceivingTemplate(Of D).ReceiveAndConvertAsync(Of T)(D, CancellationToken)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate(Of D).ReceiveAndConvertAsync(Of T)(D, System.Threading.CancellationToken)
  name.vb: ReceiveAndConvertAsync(Of T)(D, CancellationToken)
- uid: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate`1.Receive
  commentId: M:Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate`1.Receive
  id: Receive
  parent: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate`1
  langs:
  - csharp
  - vb
  name: Receive()
  nameWithType: AbstractMessageReceivingTemplate<D>.Receive()
  fullName: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate<D>.Receive()
  type: Method
  source:
    remote:
      path: src/Messaging/src/MessagingBase/Core/AbstractMessageReceivingTemplate.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Receive
    path: ../Steeltoe/src/Messaging/src/MessagingBase/Core/AbstractMessageReceivingTemplate.cs
    startLine: 58
  assemblies:
  - Steeltoe.Messaging.MessagingBase
  namespace: Steeltoe.Messaging.Core
  syntax:
    content: public virtual IMessage Receive()
    return:
      type: Steeltoe.Messaging.IMessage
    content.vb: Public Overridable Function Receive As IMessage
  overload: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate`1.Receive*
  implements:
  - Steeltoe.Messaging.Core.IMessageReceivingOperations{{D}}.Receive
  nameWithType.vb: AbstractMessageReceivingTemplate(Of D).Receive()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate(Of D).Receive()
- uid: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate`1.Receive(`0)
  commentId: M:Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate`1.Receive(`0)
  id: Receive(`0)
  parent: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate`1
  langs:
  - csharp
  - vb
  name: Receive(D)
  nameWithType: AbstractMessageReceivingTemplate<D>.Receive(D)
  fullName: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate<D>.Receive(D)
  type: Method
  source:
    remote:
      path: src/Messaging/src/MessagingBase/Core/AbstractMessageReceivingTemplate.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Receive
    path: ../Steeltoe/src/Messaging/src/MessagingBase/Core/AbstractMessageReceivingTemplate.cs
    startLine: 63
  assemblies:
  - Steeltoe.Messaging.MessagingBase
  namespace: Steeltoe.Messaging.Core
  syntax:
    content: public virtual IMessage Receive(D destination)
    parameters:
    - id: destination
      type: '{D}'
    return:
      type: Steeltoe.Messaging.IMessage
    content.vb: Public Overridable Function Receive(destination As D) As IMessage
  overload: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate`1.Receive*
  implements:
  - Steeltoe.Messaging.Core.IMessageReceivingOperations{{D}}.Receive({D})
  nameWithType.vb: AbstractMessageReceivingTemplate(Of D).Receive(D)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate(Of D).Receive(D)
- uid: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate`1.ReceiveAndConvert``1
  commentId: M:Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate`1.ReceiveAndConvert``1
  id: ReceiveAndConvert``1
  parent: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate`1
  langs:
  - csharp
  - vb
  name: ReceiveAndConvert<T>()
  nameWithType: AbstractMessageReceivingTemplate<D>.ReceiveAndConvert<T>()
  fullName: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate<D>.ReceiveAndConvert<T>()
  type: Method
  source:
    remote:
      path: src/Messaging/src/MessagingBase/Core/AbstractMessageReceivingTemplate.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: ReceiveAndConvert
    path: ../Steeltoe/src/Messaging/src/MessagingBase/Core/AbstractMessageReceivingTemplate.cs
    startLine: 68
  assemblies:
  - Steeltoe.Messaging.MessagingBase
  namespace: Steeltoe.Messaging.Core
  syntax:
    content: public virtual T ReceiveAndConvert<T>()
    typeParameters:
    - id: T
    return:
      type: '{T}'
    content.vb: Public Overridable Function ReceiveAndConvert(Of T) As T
  overload: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate`1.ReceiveAndConvert*
  implements:
  - Steeltoe.Messaging.Core.IMessageReceivingOperations{{D}}.ReceiveAndConvert``1
  nameWithType.vb: AbstractMessageReceivingTemplate(Of D).ReceiveAndConvert(Of T)()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate(Of D).ReceiveAndConvert(Of T)()
  name.vb: ReceiveAndConvert(Of T)()
- uid: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate`1.ReceiveAndConvert``1(`0)
  commentId: M:Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate`1.ReceiveAndConvert``1(`0)
  id: ReceiveAndConvert``1(`0)
  parent: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate`1
  langs:
  - csharp
  - vb
  name: ReceiveAndConvert<T>(D)
  nameWithType: AbstractMessageReceivingTemplate<D>.ReceiveAndConvert<T>(D)
  fullName: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate<D>.ReceiveAndConvert<T>(D)
  type: Method
  source:
    remote:
      path: src/Messaging/src/MessagingBase/Core/AbstractMessageReceivingTemplate.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: ReceiveAndConvert
    path: ../Steeltoe/src/Messaging/src/MessagingBase/Core/AbstractMessageReceivingTemplate.cs
    startLine: 73
  assemblies:
  - Steeltoe.Messaging.MessagingBase
  namespace: Steeltoe.Messaging.Core
  syntax:
    content: public virtual T ReceiveAndConvert<T>(D destination)
    parameters:
    - id: destination
      type: '{D}'
    typeParameters:
    - id: T
    return:
      type: '{T}'
    content.vb: Public Overridable Function ReceiveAndConvert(Of T)(destination As D) As T
  overload: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate`1.ReceiveAndConvert*
  implements:
  - Steeltoe.Messaging.Core.IMessageReceivingOperations{{D}}.ReceiveAndConvert``1({D})
  nameWithType.vb: AbstractMessageReceivingTemplate(Of D).ReceiveAndConvert(Of T)(D)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate(Of D).ReceiveAndConvert(Of T)(D)
  name.vb: ReceiveAndConvert(Of T)(D)
- uid: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate`1.RequiredDefaultReceiveDestination
  commentId: P:Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate`1.RequiredDefaultReceiveDestination
  id: RequiredDefaultReceiveDestination
  parent: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate`1
  langs:
  - csharp
  - vb
  name: RequiredDefaultReceiveDestination
  nameWithType: AbstractMessageReceivingTemplate<D>.RequiredDefaultReceiveDestination
  fullName: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate<D>.RequiredDefaultReceiveDestination
  type: Property
  source:
    remote:
      path: src/Messaging/src/MessagingBase/Core/AbstractMessageReceivingTemplate.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: RequiredDefaultReceiveDestination
    path: ../Steeltoe/src/Messaging/src/MessagingBase/Core/AbstractMessageReceivingTemplate.cs
    startLine: 86
  assemblies:
  - Steeltoe.Messaging.MessagingBase
  namespace: Steeltoe.Messaging.Core
  syntax:
    content: protected virtual D RequiredDefaultReceiveDestination { get; }
    parameters: []
    return:
      type: '{D}'
    content.vb: Protected Overridable ReadOnly Property RequiredDefaultReceiveDestination As D
  overload: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate`1.RequiredDefaultReceiveDestination*
  nameWithType.vb: AbstractMessageReceivingTemplate(Of D).RequiredDefaultReceiveDestination
  modifiers.csharp:
  - protected
  - virtual
  - get
  modifiers.vb:
  - Protected
  - Overridable
  - ReadOnly
  fullName.vb: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate(Of D).RequiredDefaultReceiveDestination
- uid: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate`1.DoReceiveAsync(`0,System.Threading.CancellationToken)
  commentId: M:Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate`1.DoReceiveAsync(`0,System.Threading.CancellationToken)
  id: DoReceiveAsync(`0,System.Threading.CancellationToken)
  parent: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate`1
  langs:
  - csharp
  - vb
  name: DoReceiveAsync(D, CancellationToken)
  nameWithType: AbstractMessageReceivingTemplate<D>.DoReceiveAsync(D, CancellationToken)
  fullName: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate<D>.DoReceiveAsync(D, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Messaging/src/MessagingBase/Core/AbstractMessageReceivingTemplate.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: DoReceiveAsync
    path: ../Steeltoe/src/Messaging/src/MessagingBase/Core/AbstractMessageReceivingTemplate.cs
    startLine: 99
  assemblies:
  - Steeltoe.Messaging.MessagingBase
  namespace: Steeltoe.Messaging.Core
  syntax:
    content: protected abstract Task<IMessage> DoReceiveAsync(D destination, CancellationToken cancellationToken)
    parameters:
    - id: destination
      type: '{D}'
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{Steeltoe.Messaging.IMessage}
    content.vb: Protected MustOverride Function DoReceiveAsync(destination As D, cancellationToken As CancellationToken) As Task(Of IMessage)
  overload: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate`1.DoReceiveAsync*
  nameWithType.vb: AbstractMessageReceivingTemplate(Of D).DoReceiveAsync(D, CancellationToken)
  modifiers.csharp:
  - protected
  - abstract
  modifiers.vb:
  - Protected
  - MustOverride
  fullName.vb: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate(Of D).DoReceiveAsync(D, System.Threading.CancellationToken)
- uid: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate`1.DoReceive(`0)
  commentId: M:Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate`1.DoReceive(`0)
  id: DoReceive(`0)
  parent: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate`1
  langs:
  - csharp
  - vb
  name: DoReceive(D)
  nameWithType: AbstractMessageReceivingTemplate<D>.DoReceive(D)
  fullName: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate<D>.DoReceive(D)
  type: Method
  source:
    remote:
      path: src/Messaging/src/MessagingBase/Core/AbstractMessageReceivingTemplate.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: DoReceive
    path: ../Steeltoe/src/Messaging/src/MessagingBase/Core/AbstractMessageReceivingTemplate.cs
    startLine: 101
  assemblies:
  - Steeltoe.Messaging.MessagingBase
  namespace: Steeltoe.Messaging.Core
  syntax:
    content: protected abstract IMessage DoReceive(D destination)
    parameters:
    - id: destination
      type: '{D}'
    return:
      type: Steeltoe.Messaging.IMessage
    content.vb: Protected MustOverride Function DoReceive(destination As D) As IMessage
  overload: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate`1.DoReceive*
  nameWithType.vb: AbstractMessageReceivingTemplate(Of D).DoReceive(D)
  modifiers.csharp:
  - protected
  - abstract
  modifiers.vb:
  - Protected
  - MustOverride
  fullName.vb: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate(Of D).DoReceive(D)
- uid: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate`1.DoConvert``1(Steeltoe.Messaging.IMessage)
  commentId: M:Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate`1.DoConvert``1(Steeltoe.Messaging.IMessage)
  id: DoConvert``1(Steeltoe.Messaging.IMessage)
  parent: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate`1
  langs:
  - csharp
  - vb
  name: DoConvert<T>(IMessage)
  nameWithType: AbstractMessageReceivingTemplate<D>.DoConvert<T>(IMessage)
  fullName: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate<D>.DoConvert<T>(Steeltoe.Messaging.IMessage)
  type: Method
  source:
    remote:
      path: src/Messaging/src/MessagingBase/Core/AbstractMessageReceivingTemplate.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: DoConvert
    path: ../Steeltoe/src/Messaging/src/MessagingBase/Core/AbstractMessageReceivingTemplate.cs
    startLine: 103
  assemblies:
  - Steeltoe.Messaging.MessagingBase
  namespace: Steeltoe.Messaging.Core
  syntax:
    content: protected virtual T DoConvert<T>(IMessage message)
    parameters:
    - id: message
      type: Steeltoe.Messaging.IMessage
    typeParameters:
    - id: T
    return:
      type: '{T}'
    content.vb: Protected Overridable Function DoConvert(Of T)(message As IMessage) As T
  overload: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate`1.DoConvert*
  nameWithType.vb: AbstractMessageReceivingTemplate(Of D).DoConvert(Of T)(IMessage)
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
  fullName.vb: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate(Of D).DoConvert(Of T)(Steeltoe.Messaging.IMessage)
  name.vb: DoConvert(Of T)(IMessage)
references:
- uid: Steeltoe.Messaging.Core
  commentId: N:Steeltoe.Messaging.Core
  name: Steeltoe.Messaging.Core
  nameWithType: Steeltoe.Messaging.Core
  fullName: Steeltoe.Messaging.Core
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate{{D}}
  commentId: T:Steeltoe.Messaging.Core.AbstractMessageSendingTemplate{`0}
  parent: Steeltoe.Messaging.Core
  definition: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1
  name: AbstractMessageSendingTemplate<D>
  nameWithType: AbstractMessageSendingTemplate<D>
  fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate<D>
  nameWithType.vb: AbstractMessageSendingTemplate(Of D)
  fullName.vb: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate(Of D)
  name.vb: AbstractMessageSendingTemplate(Of D)
  spec.csharp:
  - uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1
    name: AbstractMessageSendingTemplate
    nameWithType: AbstractMessageSendingTemplate
    fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate
  - name: <
    nameWithType: <
    fullName: <
  - name: D
    nameWithType: D
    fullName: D
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1
    name: AbstractMessageSendingTemplate
    nameWithType: AbstractMessageSendingTemplate
    fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: D
    nameWithType: D
    fullName: D
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Core.IMessageSendingOperations{{D}}
  commentId: T:Steeltoe.Messaging.Core.IMessageSendingOperations{`0}
  parent: Steeltoe.Messaging.Core
  definition: Steeltoe.Messaging.Core.IMessageSendingOperations`1
  name: IMessageSendingOperations<D>
  nameWithType: IMessageSendingOperations<D>
  fullName: Steeltoe.Messaging.Core.IMessageSendingOperations<D>
  nameWithType.vb: IMessageSendingOperations(Of D)
  fullName.vb: Steeltoe.Messaging.Core.IMessageSendingOperations(Of D)
  name.vb: IMessageSendingOperations(Of D)
  spec.csharp:
  - uid: Steeltoe.Messaging.Core.IMessageSendingOperations`1
    name: IMessageSendingOperations
    nameWithType: IMessageSendingOperations
    fullName: Steeltoe.Messaging.Core.IMessageSendingOperations
  - name: <
    nameWithType: <
    fullName: <
  - name: D
    nameWithType: D
    fullName: D
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Steeltoe.Messaging.Core.IMessageSendingOperations`1
    name: IMessageSendingOperations
    nameWithType: IMessageSendingOperations
    fullName: Steeltoe.Messaging.Core.IMessageSendingOperations
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: D
    nameWithType: D
    fullName: D
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Core.IMessageReceivingOperations{{D}}
  commentId: T:Steeltoe.Messaging.Core.IMessageReceivingOperations{`0}
  parent: Steeltoe.Messaging.Core
  definition: Steeltoe.Messaging.Core.IMessageReceivingOperations`1
  name: IMessageReceivingOperations<D>
  nameWithType: IMessageReceivingOperations<D>
  fullName: Steeltoe.Messaging.Core.IMessageReceivingOperations<D>
  nameWithType.vb: IMessageReceivingOperations(Of D)
  fullName.vb: Steeltoe.Messaging.Core.IMessageReceivingOperations(Of D)
  name.vb: IMessageReceivingOperations(Of D)
  spec.csharp:
  - uid: Steeltoe.Messaging.Core.IMessageReceivingOperations`1
    name: IMessageReceivingOperations
    nameWithType: IMessageReceivingOperations
    fullName: Steeltoe.Messaging.Core.IMessageReceivingOperations
  - name: <
    nameWithType: <
    fullName: <
  - name: D
    nameWithType: D
    fullName: D
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Steeltoe.Messaging.Core.IMessageReceivingOperations`1
    name: IMessageReceivingOperations
    nameWithType: IMessageReceivingOperations
    fullName: Steeltoe.Messaging.Core.IMessageReceivingOperations
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: D
    nameWithType: D
    fullName: D
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate{{D}}.CONVERSION_HINT_HEADER
  commentId: F:Steeltoe.Messaging.Core.AbstractMessageSendingTemplate{`0}.CONVERSION_HINT_HEADER
  parent: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate{{D}}
  definition: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.CONVERSION_HINT_HEADER
  name: CONVERSION_HINT_HEADER
  nameWithType: AbstractMessageSendingTemplate<D>.CONVERSION_HINT_HEADER
  fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate<D>.CONVERSION_HINT_HEADER
  nameWithType.vb: AbstractMessageSendingTemplate(Of D).CONVERSION_HINT_HEADER
  fullName.vb: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate(Of D).CONVERSION_HINT_HEADER
- uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate{{D}}.DefaultSendDestination
  commentId: P:Steeltoe.Messaging.Core.AbstractMessageSendingTemplate{`0}.DefaultSendDestination
  parent: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate{{D}}
  definition: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.DefaultSendDestination
  name: DefaultSendDestination
  nameWithType: AbstractMessageSendingTemplate<D>.DefaultSendDestination
  fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate<D>.DefaultSendDestination
  nameWithType.vb: AbstractMessageSendingTemplate(Of D).DefaultSendDestination
  fullName.vb: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate(Of D).DefaultSendDestination
- uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate{{D}}.MessageConverter
  commentId: P:Steeltoe.Messaging.Core.AbstractMessageSendingTemplate{`0}.MessageConverter
  parent: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate{{D}}
  definition: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.MessageConverter
  name: MessageConverter
  nameWithType: AbstractMessageSendingTemplate<D>.MessageConverter
  fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate<D>.MessageConverter
  nameWithType.vb: AbstractMessageSendingTemplate(Of D).MessageConverter
  fullName.vb: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate(Of D).MessageConverter
- uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate{{D}}.ConvertAndSendAsync(System.Object,System.Threading.CancellationToken)
  commentId: M:Steeltoe.Messaging.Core.AbstractMessageSendingTemplate{`0}.ConvertAndSendAsync(System.Object,System.Threading.CancellationToken)
  parent: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate{{D}}
  definition: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.ConvertAndSendAsync(System.Object,System.Threading.CancellationToken)
  name: ConvertAndSendAsync(Object, CancellationToken)
  nameWithType: AbstractMessageSendingTemplate<D>.ConvertAndSendAsync(Object, CancellationToken)
  fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate<D>.ConvertAndSendAsync(System.Object, System.Threading.CancellationToken)
  nameWithType.vb: AbstractMessageSendingTemplate(Of D).ConvertAndSendAsync(Object, CancellationToken)
  fullName.vb: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate(Of D).ConvertAndSendAsync(System.Object, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.ConvertAndSendAsync(System.Object,System.Threading.CancellationToken)
    name: ConvertAndSendAsync
    nameWithType: AbstractMessageSendingTemplate<D>.ConvertAndSendAsync
    fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate<D>.ConvertAndSendAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.ConvertAndSendAsync(System.Object,System.Threading.CancellationToken)
    name: ConvertAndSendAsync
    nameWithType: AbstractMessageSendingTemplate(Of D).ConvertAndSendAsync
    fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate(Of D).ConvertAndSendAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate{{D}}.ConvertAndSendAsync({D},System.Object,System.Threading.CancellationToken)
  commentId: M:Steeltoe.Messaging.Core.AbstractMessageSendingTemplate{`0}.ConvertAndSendAsync(`0,System.Object,System.Threading.CancellationToken)
  parent: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate{{D}}
  definition: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.ConvertAndSendAsync(`0,System.Object,System.Threading.CancellationToken)
  name: ConvertAndSendAsync(D, Object, CancellationToken)
  nameWithType: AbstractMessageSendingTemplate<D>.ConvertAndSendAsync(D, Object, CancellationToken)
  fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate<D>.ConvertAndSendAsync(D, System.Object, System.Threading.CancellationToken)
  nameWithType.vb: AbstractMessageSendingTemplate(Of D).ConvertAndSendAsync(D, Object, CancellationToken)
  fullName.vb: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate(Of D).ConvertAndSendAsync(D, System.Object, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.ConvertAndSendAsync(`0,System.Object,System.Threading.CancellationToken)
    name: ConvertAndSendAsync
    nameWithType: AbstractMessageSendingTemplate<D>.ConvertAndSendAsync
    fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate<D>.ConvertAndSendAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: D
    nameWithType: D
    fullName: D
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.ConvertAndSendAsync(`0,System.Object,System.Threading.CancellationToken)
    name: ConvertAndSendAsync
    nameWithType: AbstractMessageSendingTemplate(Of D).ConvertAndSendAsync
    fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate(Of D).ConvertAndSendAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: D
    nameWithType: D
    fullName: D
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate{{D}}.ConvertAndSendAsync({D},System.Object,System.Collections.Generic.IDictionary{System.String,System.Object},System.Threading.CancellationToken)
  commentId: M:Steeltoe.Messaging.Core.AbstractMessageSendingTemplate{`0}.ConvertAndSendAsync(`0,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object},System.Threading.CancellationToken)
  parent: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate{{D}}
  definition: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.ConvertAndSendAsync(`0,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object},System.Threading.CancellationToken)
  name: ConvertAndSendAsync(D, Object, IDictionary<String, Object>, CancellationToken)
  nameWithType: AbstractMessageSendingTemplate<D>.ConvertAndSendAsync(D, Object, IDictionary<String, Object>, CancellationToken)
  fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate<D>.ConvertAndSendAsync(D, System.Object, System.Collections.Generic.IDictionary<System.String, System.Object>, System.Threading.CancellationToken)
  nameWithType.vb: AbstractMessageSendingTemplate(Of D).ConvertAndSendAsync(D, Object, IDictionary(Of String, Object), CancellationToken)
  fullName.vb: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate(Of D).ConvertAndSendAsync(D, System.Object, System.Collections.Generic.IDictionary(Of System.String, System.Object), System.Threading.CancellationToken)
  name.vb: ConvertAndSendAsync(D, Object, IDictionary(Of String, Object), CancellationToken)
  spec.csharp:
  - uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.ConvertAndSendAsync(`0,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object},System.Threading.CancellationToken)
    name: ConvertAndSendAsync
    nameWithType: AbstractMessageSendingTemplate<D>.ConvertAndSendAsync
    fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate<D>.ConvertAndSendAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: D
    nameWithType: D
    fullName: D
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.ConvertAndSendAsync(`0,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object},System.Threading.CancellationToken)
    name: ConvertAndSendAsync
    nameWithType: AbstractMessageSendingTemplate(Of D).ConvertAndSendAsync
    fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate(Of D).ConvertAndSendAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: D
    nameWithType: D
    fullName: D
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate{{D}}.ConvertAndSendAsync(System.Object,Steeltoe.Messaging.Core.IMessagePostProcessor,System.Threading.CancellationToken)
  commentId: M:Steeltoe.Messaging.Core.AbstractMessageSendingTemplate{`0}.ConvertAndSendAsync(System.Object,Steeltoe.Messaging.Core.IMessagePostProcessor,System.Threading.CancellationToken)
  parent: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate{{D}}
  definition: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.ConvertAndSendAsync(System.Object,Steeltoe.Messaging.Core.IMessagePostProcessor,System.Threading.CancellationToken)
  name: ConvertAndSendAsync(Object, IMessagePostProcessor, CancellationToken)
  nameWithType: AbstractMessageSendingTemplate<D>.ConvertAndSendAsync(Object, IMessagePostProcessor, CancellationToken)
  fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate<D>.ConvertAndSendAsync(System.Object, Steeltoe.Messaging.Core.IMessagePostProcessor, System.Threading.CancellationToken)
  nameWithType.vb: AbstractMessageSendingTemplate(Of D).ConvertAndSendAsync(Object, IMessagePostProcessor, CancellationToken)
  fullName.vb: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate(Of D).ConvertAndSendAsync(System.Object, Steeltoe.Messaging.Core.IMessagePostProcessor, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.ConvertAndSendAsync(System.Object,Steeltoe.Messaging.Core.IMessagePostProcessor,System.Threading.CancellationToken)
    name: ConvertAndSendAsync
    nameWithType: AbstractMessageSendingTemplate<D>.ConvertAndSendAsync
    fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate<D>.ConvertAndSendAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.Core.IMessagePostProcessor
    name: IMessagePostProcessor
    nameWithType: IMessagePostProcessor
    fullName: Steeltoe.Messaging.Core.IMessagePostProcessor
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.ConvertAndSendAsync(System.Object,Steeltoe.Messaging.Core.IMessagePostProcessor,System.Threading.CancellationToken)
    name: ConvertAndSendAsync
    nameWithType: AbstractMessageSendingTemplate(Of D).ConvertAndSendAsync
    fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate(Of D).ConvertAndSendAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.Core.IMessagePostProcessor
    name: IMessagePostProcessor
    nameWithType: IMessagePostProcessor
    fullName: Steeltoe.Messaging.Core.IMessagePostProcessor
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate{{D}}.ConvertAndSendAsync({D},System.Object,Steeltoe.Messaging.Core.IMessagePostProcessor,System.Threading.CancellationToken)
  commentId: M:Steeltoe.Messaging.Core.AbstractMessageSendingTemplate{`0}.ConvertAndSendAsync(`0,System.Object,Steeltoe.Messaging.Core.IMessagePostProcessor,System.Threading.CancellationToken)
  parent: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate{{D}}
  definition: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.ConvertAndSendAsync(`0,System.Object,Steeltoe.Messaging.Core.IMessagePostProcessor,System.Threading.CancellationToken)
  name: ConvertAndSendAsync(D, Object, IMessagePostProcessor, CancellationToken)
  nameWithType: AbstractMessageSendingTemplate<D>.ConvertAndSendAsync(D, Object, IMessagePostProcessor, CancellationToken)
  fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate<D>.ConvertAndSendAsync(D, System.Object, Steeltoe.Messaging.Core.IMessagePostProcessor, System.Threading.CancellationToken)
  nameWithType.vb: AbstractMessageSendingTemplate(Of D).ConvertAndSendAsync(D, Object, IMessagePostProcessor, CancellationToken)
  fullName.vb: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate(Of D).ConvertAndSendAsync(D, System.Object, Steeltoe.Messaging.Core.IMessagePostProcessor, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.ConvertAndSendAsync(`0,System.Object,Steeltoe.Messaging.Core.IMessagePostProcessor,System.Threading.CancellationToken)
    name: ConvertAndSendAsync
    nameWithType: AbstractMessageSendingTemplate<D>.ConvertAndSendAsync
    fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate<D>.ConvertAndSendAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: D
    nameWithType: D
    fullName: D
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.Core.IMessagePostProcessor
    name: IMessagePostProcessor
    nameWithType: IMessagePostProcessor
    fullName: Steeltoe.Messaging.Core.IMessagePostProcessor
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.ConvertAndSendAsync(`0,System.Object,Steeltoe.Messaging.Core.IMessagePostProcessor,System.Threading.CancellationToken)
    name: ConvertAndSendAsync
    nameWithType: AbstractMessageSendingTemplate(Of D).ConvertAndSendAsync
    fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate(Of D).ConvertAndSendAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: D
    nameWithType: D
    fullName: D
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.Core.IMessagePostProcessor
    name: IMessagePostProcessor
    nameWithType: IMessagePostProcessor
    fullName: Steeltoe.Messaging.Core.IMessagePostProcessor
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate{{D}}.ConvertAndSendAsync({D},System.Object,System.Collections.Generic.IDictionary{System.String,System.Object},Steeltoe.Messaging.Core.IMessagePostProcessor,System.Threading.CancellationToken)
  commentId: M:Steeltoe.Messaging.Core.AbstractMessageSendingTemplate{`0}.ConvertAndSendAsync(`0,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object},Steeltoe.Messaging.Core.IMessagePostProcessor,System.Threading.CancellationToken)
  parent: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate{{D}}
  definition: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.ConvertAndSendAsync(`0,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object},Steeltoe.Messaging.Core.IMessagePostProcessor,System.Threading.CancellationToken)
  name: ConvertAndSendAsync(D, Object, IDictionary<String, Object>, IMessagePostProcessor, CancellationToken)
  nameWithType: AbstractMessageSendingTemplate<D>.ConvertAndSendAsync(D, Object, IDictionary<String, Object>, IMessagePostProcessor, CancellationToken)
  fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate<D>.ConvertAndSendAsync(D, System.Object, System.Collections.Generic.IDictionary<System.String, System.Object>, Steeltoe.Messaging.Core.IMessagePostProcessor, System.Threading.CancellationToken)
  nameWithType.vb: AbstractMessageSendingTemplate(Of D).ConvertAndSendAsync(D, Object, IDictionary(Of String, Object), IMessagePostProcessor, CancellationToken)
  fullName.vb: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate(Of D).ConvertAndSendAsync(D, System.Object, System.Collections.Generic.IDictionary(Of System.String, System.Object), Steeltoe.Messaging.Core.IMessagePostProcessor, System.Threading.CancellationToken)
  name.vb: ConvertAndSendAsync(D, Object, IDictionary(Of String, Object), IMessagePostProcessor, CancellationToken)
  spec.csharp:
  - uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.ConvertAndSendAsync(`0,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object},Steeltoe.Messaging.Core.IMessagePostProcessor,System.Threading.CancellationToken)
    name: ConvertAndSendAsync
    nameWithType: AbstractMessageSendingTemplate<D>.ConvertAndSendAsync
    fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate<D>.ConvertAndSendAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: D
    nameWithType: D
    fullName: D
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.Core.IMessagePostProcessor
    name: IMessagePostProcessor
    nameWithType: IMessagePostProcessor
    fullName: Steeltoe.Messaging.Core.IMessagePostProcessor
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.ConvertAndSendAsync(`0,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object},Steeltoe.Messaging.Core.IMessagePostProcessor,System.Threading.CancellationToken)
    name: ConvertAndSendAsync
    nameWithType: AbstractMessageSendingTemplate(Of D).ConvertAndSendAsync
    fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate(Of D).ConvertAndSendAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: D
    nameWithType: D
    fullName: D
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.Core.IMessagePostProcessor
    name: IMessagePostProcessor
    nameWithType: IMessagePostProcessor
    fullName: Steeltoe.Messaging.Core.IMessagePostProcessor
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate{{D}}.SendAsync(Steeltoe.Messaging.IMessage,System.Threading.CancellationToken)
  commentId: M:Steeltoe.Messaging.Core.AbstractMessageSendingTemplate{`0}.SendAsync(Steeltoe.Messaging.IMessage,System.Threading.CancellationToken)
  parent: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate{{D}}
  definition: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.SendAsync(Steeltoe.Messaging.IMessage,System.Threading.CancellationToken)
  name: SendAsync(IMessage, CancellationToken)
  nameWithType: AbstractMessageSendingTemplate<D>.SendAsync(IMessage, CancellationToken)
  fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate<D>.SendAsync(Steeltoe.Messaging.IMessage, System.Threading.CancellationToken)
  nameWithType.vb: AbstractMessageSendingTemplate(Of D).SendAsync(IMessage, CancellationToken)
  fullName.vb: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate(Of D).SendAsync(Steeltoe.Messaging.IMessage, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.SendAsync(Steeltoe.Messaging.IMessage,System.Threading.CancellationToken)
    name: SendAsync
    nameWithType: AbstractMessageSendingTemplate<D>.SendAsync
    fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate<D>.SendAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.SendAsync(Steeltoe.Messaging.IMessage,System.Threading.CancellationToken)
    name: SendAsync
    nameWithType: AbstractMessageSendingTemplate(Of D).SendAsync
    fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate(Of D).SendAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate{{D}}.SendAsync({D},Steeltoe.Messaging.IMessage,System.Threading.CancellationToken)
  commentId: M:Steeltoe.Messaging.Core.AbstractMessageSendingTemplate{`0}.SendAsync(`0,Steeltoe.Messaging.IMessage,System.Threading.CancellationToken)
  parent: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate{{D}}
  definition: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.SendAsync(`0,Steeltoe.Messaging.IMessage,System.Threading.CancellationToken)
  name: SendAsync(D, IMessage, CancellationToken)
  nameWithType: AbstractMessageSendingTemplate<D>.SendAsync(D, IMessage, CancellationToken)
  fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate<D>.SendAsync(D, Steeltoe.Messaging.IMessage, System.Threading.CancellationToken)
  nameWithType.vb: AbstractMessageSendingTemplate(Of D).SendAsync(D, IMessage, CancellationToken)
  fullName.vb: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate(Of D).SendAsync(D, Steeltoe.Messaging.IMessage, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.SendAsync(`0,Steeltoe.Messaging.IMessage,System.Threading.CancellationToken)
    name: SendAsync
    nameWithType: AbstractMessageSendingTemplate<D>.SendAsync
    fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate<D>.SendAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: D
    nameWithType: D
    fullName: D
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.SendAsync(`0,Steeltoe.Messaging.IMessage,System.Threading.CancellationToken)
    name: SendAsync
    nameWithType: AbstractMessageSendingTemplate(Of D).SendAsync
    fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate(Of D).SendAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: D
    nameWithType: D
    fullName: D
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate{{D}}.ConvertAndSend(System.Object)
  commentId: M:Steeltoe.Messaging.Core.AbstractMessageSendingTemplate{`0}.ConvertAndSend(System.Object)
  parent: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate{{D}}
  definition: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.ConvertAndSend(System.Object)
  name: ConvertAndSend(Object)
  nameWithType: AbstractMessageSendingTemplate<D>.ConvertAndSend(Object)
  fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate<D>.ConvertAndSend(System.Object)
  nameWithType.vb: AbstractMessageSendingTemplate(Of D).ConvertAndSend(Object)
  fullName.vb: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate(Of D).ConvertAndSend(System.Object)
  spec.csharp:
  - uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.ConvertAndSend(System.Object)
    name: ConvertAndSend
    nameWithType: AbstractMessageSendingTemplate<D>.ConvertAndSend
    fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate<D>.ConvertAndSend
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.ConvertAndSend(System.Object)
    name: ConvertAndSend
    nameWithType: AbstractMessageSendingTemplate(Of D).ConvertAndSend
    fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate(Of D).ConvertAndSend
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate{{D}}.ConvertAndSend({D},System.Object)
  commentId: M:Steeltoe.Messaging.Core.AbstractMessageSendingTemplate{`0}.ConvertAndSend(`0,System.Object)
  parent: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate{{D}}
  definition: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.ConvertAndSend(`0,System.Object)
  name: ConvertAndSend(D, Object)
  nameWithType: AbstractMessageSendingTemplate<D>.ConvertAndSend(D, Object)
  fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate<D>.ConvertAndSend(D, System.Object)
  nameWithType.vb: AbstractMessageSendingTemplate(Of D).ConvertAndSend(D, Object)
  fullName.vb: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate(Of D).ConvertAndSend(D, System.Object)
  spec.csharp:
  - uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.ConvertAndSend(`0,System.Object)
    name: ConvertAndSend
    nameWithType: AbstractMessageSendingTemplate<D>.ConvertAndSend
    fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate<D>.ConvertAndSend
  - name: (
    nameWithType: (
    fullName: (
  - name: D
    nameWithType: D
    fullName: D
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.ConvertAndSend(`0,System.Object)
    name: ConvertAndSend
    nameWithType: AbstractMessageSendingTemplate(Of D).ConvertAndSend
    fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate(Of D).ConvertAndSend
  - name: (
    nameWithType: (
    fullName: (
  - name: D
    nameWithType: D
    fullName: D
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate{{D}}.ConvertAndSend({D},System.Object,System.Collections.Generic.IDictionary{System.String,System.Object})
  commentId: M:Steeltoe.Messaging.Core.AbstractMessageSendingTemplate{`0}.ConvertAndSend(`0,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object})
  parent: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate{{D}}
  definition: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.ConvertAndSend(`0,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object})
  name: ConvertAndSend(D, Object, IDictionary<String, Object>)
  nameWithType: AbstractMessageSendingTemplate<D>.ConvertAndSend(D, Object, IDictionary<String, Object>)
  fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate<D>.ConvertAndSend(D, System.Object, System.Collections.Generic.IDictionary<System.String, System.Object>)
  nameWithType.vb: AbstractMessageSendingTemplate(Of D).ConvertAndSend(D, Object, IDictionary(Of String, Object))
  fullName.vb: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate(Of D).ConvertAndSend(D, System.Object, System.Collections.Generic.IDictionary(Of System.String, System.Object))
  name.vb: ConvertAndSend(D, Object, IDictionary(Of String, Object))
  spec.csharp:
  - uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.ConvertAndSend(`0,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object})
    name: ConvertAndSend
    nameWithType: AbstractMessageSendingTemplate<D>.ConvertAndSend
    fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate<D>.ConvertAndSend
  - name: (
    nameWithType: (
    fullName: (
  - name: D
    nameWithType: D
    fullName: D
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.ConvertAndSend(`0,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object})
    name: ConvertAndSend
    nameWithType: AbstractMessageSendingTemplate(Of D).ConvertAndSend
    fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate(Of D).ConvertAndSend
  - name: (
    nameWithType: (
    fullName: (
  - name: D
    nameWithType: D
    fullName: D
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate{{D}}.ConvertAndSend(System.Object,Steeltoe.Messaging.Core.IMessagePostProcessor)
  commentId: M:Steeltoe.Messaging.Core.AbstractMessageSendingTemplate{`0}.ConvertAndSend(System.Object,Steeltoe.Messaging.Core.IMessagePostProcessor)
  parent: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate{{D}}
  definition: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.ConvertAndSend(System.Object,Steeltoe.Messaging.Core.IMessagePostProcessor)
  name: ConvertAndSend(Object, IMessagePostProcessor)
  nameWithType: AbstractMessageSendingTemplate<D>.ConvertAndSend(Object, IMessagePostProcessor)
  fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate<D>.ConvertAndSend(System.Object, Steeltoe.Messaging.Core.IMessagePostProcessor)
  nameWithType.vb: AbstractMessageSendingTemplate(Of D).ConvertAndSend(Object, IMessagePostProcessor)
  fullName.vb: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate(Of D).ConvertAndSend(System.Object, Steeltoe.Messaging.Core.IMessagePostProcessor)
  spec.csharp:
  - uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.ConvertAndSend(System.Object,Steeltoe.Messaging.Core.IMessagePostProcessor)
    name: ConvertAndSend
    nameWithType: AbstractMessageSendingTemplate<D>.ConvertAndSend
    fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate<D>.ConvertAndSend
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.Core.IMessagePostProcessor
    name: IMessagePostProcessor
    nameWithType: IMessagePostProcessor
    fullName: Steeltoe.Messaging.Core.IMessagePostProcessor
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.ConvertAndSend(System.Object,Steeltoe.Messaging.Core.IMessagePostProcessor)
    name: ConvertAndSend
    nameWithType: AbstractMessageSendingTemplate(Of D).ConvertAndSend
    fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate(Of D).ConvertAndSend
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.Core.IMessagePostProcessor
    name: IMessagePostProcessor
    nameWithType: IMessagePostProcessor
    fullName: Steeltoe.Messaging.Core.IMessagePostProcessor
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate{{D}}.ConvertAndSend({D},System.Object,Steeltoe.Messaging.Core.IMessagePostProcessor)
  commentId: M:Steeltoe.Messaging.Core.AbstractMessageSendingTemplate{`0}.ConvertAndSend(`0,System.Object,Steeltoe.Messaging.Core.IMessagePostProcessor)
  parent: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate{{D}}
  definition: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.ConvertAndSend(`0,System.Object,Steeltoe.Messaging.Core.IMessagePostProcessor)
  name: ConvertAndSend(D, Object, IMessagePostProcessor)
  nameWithType: AbstractMessageSendingTemplate<D>.ConvertAndSend(D, Object, IMessagePostProcessor)
  fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate<D>.ConvertAndSend(D, System.Object, Steeltoe.Messaging.Core.IMessagePostProcessor)
  nameWithType.vb: AbstractMessageSendingTemplate(Of D).ConvertAndSend(D, Object, IMessagePostProcessor)
  fullName.vb: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate(Of D).ConvertAndSend(D, System.Object, Steeltoe.Messaging.Core.IMessagePostProcessor)
  spec.csharp:
  - uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.ConvertAndSend(`0,System.Object,Steeltoe.Messaging.Core.IMessagePostProcessor)
    name: ConvertAndSend
    nameWithType: AbstractMessageSendingTemplate<D>.ConvertAndSend
    fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate<D>.ConvertAndSend
  - name: (
    nameWithType: (
    fullName: (
  - name: D
    nameWithType: D
    fullName: D
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.Core.IMessagePostProcessor
    name: IMessagePostProcessor
    nameWithType: IMessagePostProcessor
    fullName: Steeltoe.Messaging.Core.IMessagePostProcessor
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.ConvertAndSend(`0,System.Object,Steeltoe.Messaging.Core.IMessagePostProcessor)
    name: ConvertAndSend
    nameWithType: AbstractMessageSendingTemplate(Of D).ConvertAndSend
    fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate(Of D).ConvertAndSend
  - name: (
    nameWithType: (
    fullName: (
  - name: D
    nameWithType: D
    fullName: D
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.Core.IMessagePostProcessor
    name: IMessagePostProcessor
    nameWithType: IMessagePostProcessor
    fullName: Steeltoe.Messaging.Core.IMessagePostProcessor
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate{{D}}.ConvertAndSend({D},System.Object,System.Collections.Generic.IDictionary{System.String,System.Object},Steeltoe.Messaging.Core.IMessagePostProcessor)
  commentId: M:Steeltoe.Messaging.Core.AbstractMessageSendingTemplate{`0}.ConvertAndSend(`0,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object},Steeltoe.Messaging.Core.IMessagePostProcessor)
  parent: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate{{D}}
  definition: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.ConvertAndSend(`0,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object},Steeltoe.Messaging.Core.IMessagePostProcessor)
  name: ConvertAndSend(D, Object, IDictionary<String, Object>, IMessagePostProcessor)
  nameWithType: AbstractMessageSendingTemplate<D>.ConvertAndSend(D, Object, IDictionary<String, Object>, IMessagePostProcessor)
  fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate<D>.ConvertAndSend(D, System.Object, System.Collections.Generic.IDictionary<System.String, System.Object>, Steeltoe.Messaging.Core.IMessagePostProcessor)
  nameWithType.vb: AbstractMessageSendingTemplate(Of D).ConvertAndSend(D, Object, IDictionary(Of String, Object), IMessagePostProcessor)
  fullName.vb: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate(Of D).ConvertAndSend(D, System.Object, System.Collections.Generic.IDictionary(Of System.String, System.Object), Steeltoe.Messaging.Core.IMessagePostProcessor)
  name.vb: ConvertAndSend(D, Object, IDictionary(Of String, Object), IMessagePostProcessor)
  spec.csharp:
  - uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.ConvertAndSend(`0,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object},Steeltoe.Messaging.Core.IMessagePostProcessor)
    name: ConvertAndSend
    nameWithType: AbstractMessageSendingTemplate<D>.ConvertAndSend
    fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate<D>.ConvertAndSend
  - name: (
    nameWithType: (
    fullName: (
  - name: D
    nameWithType: D
    fullName: D
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.Core.IMessagePostProcessor
    name: IMessagePostProcessor
    nameWithType: IMessagePostProcessor
    fullName: Steeltoe.Messaging.Core.IMessagePostProcessor
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.ConvertAndSend(`0,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object},Steeltoe.Messaging.Core.IMessagePostProcessor)
    name: ConvertAndSend
    nameWithType: AbstractMessageSendingTemplate(Of D).ConvertAndSend
    fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate(Of D).ConvertAndSend
  - name: (
    nameWithType: (
    fullName: (
  - name: D
    nameWithType: D
    fullName: D
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.Core.IMessagePostProcessor
    name: IMessagePostProcessor
    nameWithType: IMessagePostProcessor
    fullName: Steeltoe.Messaging.Core.IMessagePostProcessor
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate{{D}}.Send(Steeltoe.Messaging.IMessage)
  commentId: M:Steeltoe.Messaging.Core.AbstractMessageSendingTemplate{`0}.Send(Steeltoe.Messaging.IMessage)
  parent: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate{{D}}
  definition: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.Send(Steeltoe.Messaging.IMessage)
  name: Send(IMessage)
  nameWithType: AbstractMessageSendingTemplate<D>.Send(IMessage)
  fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate<D>.Send(Steeltoe.Messaging.IMessage)
  nameWithType.vb: AbstractMessageSendingTemplate(Of D).Send(IMessage)
  fullName.vb: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate(Of D).Send(Steeltoe.Messaging.IMessage)
  spec.csharp:
  - uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.Send(Steeltoe.Messaging.IMessage)
    name: Send
    nameWithType: AbstractMessageSendingTemplate<D>.Send
    fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate<D>.Send
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.Send(Steeltoe.Messaging.IMessage)
    name: Send
    nameWithType: AbstractMessageSendingTemplate(Of D).Send
    fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate(Of D).Send
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate{{D}}.Send({D},Steeltoe.Messaging.IMessage)
  commentId: M:Steeltoe.Messaging.Core.AbstractMessageSendingTemplate{`0}.Send(`0,Steeltoe.Messaging.IMessage)
  parent: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate{{D}}
  definition: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.Send(`0,Steeltoe.Messaging.IMessage)
  name: Send(D, IMessage)
  nameWithType: AbstractMessageSendingTemplate<D>.Send(D, IMessage)
  fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate<D>.Send(D, Steeltoe.Messaging.IMessage)
  nameWithType.vb: AbstractMessageSendingTemplate(Of D).Send(D, IMessage)
  fullName.vb: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate(Of D).Send(D, Steeltoe.Messaging.IMessage)
  spec.csharp:
  - uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.Send(`0,Steeltoe.Messaging.IMessage)
    name: Send
    nameWithType: AbstractMessageSendingTemplate<D>.Send
    fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate<D>.Send
  - name: (
    nameWithType: (
    fullName: (
  - name: D
    nameWithType: D
    fullName: D
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.Send(`0,Steeltoe.Messaging.IMessage)
    name: Send
    nameWithType: AbstractMessageSendingTemplate(Of D).Send
    fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate(Of D).Send
  - name: (
    nameWithType: (
    fullName: (
  - name: D
    nameWithType: D
    fullName: D
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate{{D}}.DoSendAsync({D},Steeltoe.Messaging.IMessage,System.Threading.CancellationToken)
  commentId: M:Steeltoe.Messaging.Core.AbstractMessageSendingTemplate{`0}.DoSendAsync(`0,Steeltoe.Messaging.IMessage,System.Threading.CancellationToken)
  parent: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate{{D}}
  definition: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.DoSendAsync(`0,Steeltoe.Messaging.IMessage,System.Threading.CancellationToken)
  name: DoSendAsync(D, IMessage, CancellationToken)
  nameWithType: AbstractMessageSendingTemplate<D>.DoSendAsync(D, IMessage, CancellationToken)
  fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate<D>.DoSendAsync(D, Steeltoe.Messaging.IMessage, System.Threading.CancellationToken)
  nameWithType.vb: AbstractMessageSendingTemplate(Of D).DoSendAsync(D, IMessage, CancellationToken)
  fullName.vb: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate(Of D).DoSendAsync(D, Steeltoe.Messaging.IMessage, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.DoSendAsync(`0,Steeltoe.Messaging.IMessage,System.Threading.CancellationToken)
    name: DoSendAsync
    nameWithType: AbstractMessageSendingTemplate<D>.DoSendAsync
    fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate<D>.DoSendAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: D
    nameWithType: D
    fullName: D
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.DoSendAsync(`0,Steeltoe.Messaging.IMessage,System.Threading.CancellationToken)
    name: DoSendAsync
    nameWithType: AbstractMessageSendingTemplate(Of D).DoSendAsync
    fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate(Of D).DoSendAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: D
    nameWithType: D
    fullName: D
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate{{D}}.DoSend({D},Steeltoe.Messaging.IMessage)
  commentId: M:Steeltoe.Messaging.Core.AbstractMessageSendingTemplate{`0}.DoSend(`0,Steeltoe.Messaging.IMessage)
  parent: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate{{D}}
  definition: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.DoSend(`0,Steeltoe.Messaging.IMessage)
  name: DoSend(D, IMessage)
  nameWithType: AbstractMessageSendingTemplate<D>.DoSend(D, IMessage)
  fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate<D>.DoSend(D, Steeltoe.Messaging.IMessage)
  nameWithType.vb: AbstractMessageSendingTemplate(Of D).DoSend(D, IMessage)
  fullName.vb: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate(Of D).DoSend(D, Steeltoe.Messaging.IMessage)
  spec.csharp:
  - uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.DoSend(`0,Steeltoe.Messaging.IMessage)
    name: DoSend
    nameWithType: AbstractMessageSendingTemplate<D>.DoSend
    fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate<D>.DoSend
  - name: (
    nameWithType: (
    fullName: (
  - name: D
    nameWithType: D
    fullName: D
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.DoSend(`0,Steeltoe.Messaging.IMessage)
    name: DoSend
    nameWithType: AbstractMessageSendingTemplate(Of D).DoSend
    fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate(Of D).DoSend
  - name: (
    nameWithType: (
    fullName: (
  - name: D
    nameWithType: D
    fullName: D
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate{{D}}.RequiredDefaultSendDestination
  commentId: P:Steeltoe.Messaging.Core.AbstractMessageSendingTemplate{`0}.RequiredDefaultSendDestination
  parent: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate{{D}}
  definition: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.RequiredDefaultSendDestination
  name: RequiredDefaultSendDestination
  nameWithType: AbstractMessageSendingTemplate<D>.RequiredDefaultSendDestination
  fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate<D>.RequiredDefaultSendDestination
  nameWithType.vb: AbstractMessageSendingTemplate(Of D).RequiredDefaultSendDestination
  fullName.vb: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate(Of D).RequiredDefaultSendDestination
- uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate{{D}}.DoConvert(System.Object,System.Collections.Generic.IDictionary{System.String,System.Object},Steeltoe.Messaging.Core.IMessagePostProcessor)
  commentId: M:Steeltoe.Messaging.Core.AbstractMessageSendingTemplate{`0}.DoConvert(System.Object,System.Collections.Generic.IDictionary{System.String,System.Object},Steeltoe.Messaging.Core.IMessagePostProcessor)
  parent: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate{{D}}
  definition: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.DoConvert(System.Object,System.Collections.Generic.IDictionary{System.String,System.Object},Steeltoe.Messaging.Core.IMessagePostProcessor)
  name: DoConvert(Object, IDictionary<String, Object>, IMessagePostProcessor)
  nameWithType: AbstractMessageSendingTemplate<D>.DoConvert(Object, IDictionary<String, Object>, IMessagePostProcessor)
  fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate<D>.DoConvert(System.Object, System.Collections.Generic.IDictionary<System.String, System.Object>, Steeltoe.Messaging.Core.IMessagePostProcessor)
  nameWithType.vb: AbstractMessageSendingTemplate(Of D).DoConvert(Object, IDictionary(Of String, Object), IMessagePostProcessor)
  fullName.vb: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate(Of D).DoConvert(System.Object, System.Collections.Generic.IDictionary(Of System.String, System.Object), Steeltoe.Messaging.Core.IMessagePostProcessor)
  name.vb: DoConvert(Object, IDictionary(Of String, Object), IMessagePostProcessor)
  spec.csharp:
  - uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.DoConvert(System.Object,System.Collections.Generic.IDictionary{System.String,System.Object},Steeltoe.Messaging.Core.IMessagePostProcessor)
    name: DoConvert
    nameWithType: AbstractMessageSendingTemplate<D>.DoConvert
    fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate<D>.DoConvert
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.Core.IMessagePostProcessor
    name: IMessagePostProcessor
    nameWithType: IMessagePostProcessor
    fullName: Steeltoe.Messaging.Core.IMessagePostProcessor
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.DoConvert(System.Object,System.Collections.Generic.IDictionary{System.String,System.Object},Steeltoe.Messaging.Core.IMessagePostProcessor)
    name: DoConvert
    nameWithType: AbstractMessageSendingTemplate(Of D).DoConvert
    fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate(Of D).DoConvert
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.Core.IMessagePostProcessor
    name: IMessagePostProcessor
    nameWithType: IMessagePostProcessor
    fullName: Steeltoe.Messaging.Core.IMessagePostProcessor
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate{{D}}.ProcessHeadersToSend(System.Collections.Generic.IDictionary{System.String,System.Object})
  commentId: M:Steeltoe.Messaging.Core.AbstractMessageSendingTemplate{`0}.ProcessHeadersToSend(System.Collections.Generic.IDictionary{System.String,System.Object})
  parent: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate{{D}}
  definition: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.ProcessHeadersToSend(System.Collections.Generic.IDictionary{System.String,System.Object})
  name: ProcessHeadersToSend(IDictionary<String, Object>)
  nameWithType: AbstractMessageSendingTemplate<D>.ProcessHeadersToSend(IDictionary<String, Object>)
  fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate<D>.ProcessHeadersToSend(System.Collections.Generic.IDictionary<System.String, System.Object>)
  nameWithType.vb: AbstractMessageSendingTemplate(Of D).ProcessHeadersToSend(IDictionary(Of String, Object))
  fullName.vb: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate(Of D).ProcessHeadersToSend(System.Collections.Generic.IDictionary(Of System.String, System.Object))
  name.vb: ProcessHeadersToSend(IDictionary(Of String, Object))
  spec.csharp:
  - uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.ProcessHeadersToSend(System.Collections.Generic.IDictionary{System.String,System.Object})
    name: ProcessHeadersToSend
    nameWithType: AbstractMessageSendingTemplate<D>.ProcessHeadersToSend
    fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate<D>.ProcessHeadersToSend
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.ProcessHeadersToSend(System.Collections.Generic.IDictionary{System.String,System.Object})
    name: ProcessHeadersToSend
    nameWithType: AbstractMessageSendingTemplate(Of D).ProcessHeadersToSend
    fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate(Of D).ProcessHeadersToSend
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1
  commentId: T:Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1
  name: AbstractMessageSendingTemplate<D>
  nameWithType: AbstractMessageSendingTemplate<D>
  fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate<D>
  nameWithType.vb: AbstractMessageSendingTemplate(Of D)
  fullName.vb: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate(Of D)
  name.vb: AbstractMessageSendingTemplate(Of D)
  spec.csharp:
  - uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1
    name: AbstractMessageSendingTemplate
    nameWithType: AbstractMessageSendingTemplate
    fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate
  - name: <
    nameWithType: <
    fullName: <
  - name: D
    nameWithType: D
    fullName: D
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1
    name: AbstractMessageSendingTemplate
    nameWithType: AbstractMessageSendingTemplate
    fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: D
    nameWithType: D
    fullName: D
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Core.IMessageSendingOperations`1
  commentId: T:Steeltoe.Messaging.Core.IMessageSendingOperations`1
  name: IMessageSendingOperations<D>
  nameWithType: IMessageSendingOperations<D>
  fullName: Steeltoe.Messaging.Core.IMessageSendingOperations<D>
  nameWithType.vb: IMessageSendingOperations(Of D)
  fullName.vb: Steeltoe.Messaging.Core.IMessageSendingOperations(Of D)
  name.vb: IMessageSendingOperations(Of D)
  spec.csharp:
  - uid: Steeltoe.Messaging.Core.IMessageSendingOperations`1
    name: IMessageSendingOperations
    nameWithType: IMessageSendingOperations
    fullName: Steeltoe.Messaging.Core.IMessageSendingOperations
  - name: <
    nameWithType: <
    fullName: <
  - name: D
    nameWithType: D
    fullName: D
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Steeltoe.Messaging.Core.IMessageSendingOperations`1
    name: IMessageSendingOperations
    nameWithType: IMessageSendingOperations
    fullName: Steeltoe.Messaging.Core.IMessageSendingOperations
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: D
    nameWithType: D
    fullName: D
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Core.IMessageReceivingOperations`1
  commentId: T:Steeltoe.Messaging.Core.IMessageReceivingOperations`1
  name: IMessageReceivingOperations<D>
  nameWithType: IMessageReceivingOperations<D>
  fullName: Steeltoe.Messaging.Core.IMessageReceivingOperations<D>
  nameWithType.vb: IMessageReceivingOperations(Of D)
  fullName.vb: Steeltoe.Messaging.Core.IMessageReceivingOperations(Of D)
  name.vb: IMessageReceivingOperations(Of D)
  spec.csharp:
  - uid: Steeltoe.Messaging.Core.IMessageReceivingOperations`1
    name: IMessageReceivingOperations
    nameWithType: IMessageReceivingOperations
    fullName: Steeltoe.Messaging.Core.IMessageReceivingOperations
  - name: <
    nameWithType: <
    fullName: <
  - name: D
    nameWithType: D
    fullName: D
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Steeltoe.Messaging.Core.IMessageReceivingOperations`1
    name: IMessageReceivingOperations
    nameWithType: IMessageReceivingOperations
    fullName: Steeltoe.Messaging.Core.IMessageReceivingOperations
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: D
    nameWithType: D
    fullName: D
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.CONVERSION_HINT_HEADER
  commentId: F:Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.CONVERSION_HINT_HEADER
  name: CONVERSION_HINT_HEADER
  nameWithType: AbstractMessageSendingTemplate<D>.CONVERSION_HINT_HEADER
  fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate<D>.CONVERSION_HINT_HEADER
  nameWithType.vb: AbstractMessageSendingTemplate(Of D).CONVERSION_HINT_HEADER
  fullName.vb: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate(Of D).CONVERSION_HINT_HEADER
- uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.DefaultSendDestination
  commentId: P:Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.DefaultSendDestination
  name: DefaultSendDestination
  nameWithType: AbstractMessageSendingTemplate<D>.DefaultSendDestination
  fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate<D>.DefaultSendDestination
  nameWithType.vb: AbstractMessageSendingTemplate(Of D).DefaultSendDestination
  fullName.vb: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate(Of D).DefaultSendDestination
- uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.MessageConverter
  commentId: P:Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.MessageConverter
  name: MessageConverter
  nameWithType: AbstractMessageSendingTemplate<D>.MessageConverter
  fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate<D>.MessageConverter
  nameWithType.vb: AbstractMessageSendingTemplate(Of D).MessageConverter
  fullName.vb: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate(Of D).MessageConverter
- uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.ConvertAndSendAsync(System.Object,System.Threading.CancellationToken)
  commentId: M:Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.ConvertAndSendAsync(System.Object,System.Threading.CancellationToken)
  isExternal: true
  name: ConvertAndSendAsync(Object, CancellationToken)
  nameWithType: AbstractMessageSendingTemplate<D>.ConvertAndSendAsync(Object, CancellationToken)
  fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate<D>.ConvertAndSendAsync(System.Object, System.Threading.CancellationToken)
  nameWithType.vb: AbstractMessageSendingTemplate(Of D).ConvertAndSendAsync(Object, CancellationToken)
  fullName.vb: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate(Of D).ConvertAndSendAsync(System.Object, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.ConvertAndSendAsync(System.Object,System.Threading.CancellationToken)
    name: ConvertAndSendAsync
    nameWithType: AbstractMessageSendingTemplate<D>.ConvertAndSendAsync
    fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate<D>.ConvertAndSendAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.ConvertAndSendAsync(System.Object,System.Threading.CancellationToken)
    name: ConvertAndSendAsync
    nameWithType: AbstractMessageSendingTemplate(Of D).ConvertAndSendAsync
    fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate(Of D).ConvertAndSendAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.ConvertAndSendAsync(`0,System.Object,System.Threading.CancellationToken)
  commentId: M:Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.ConvertAndSendAsync(`0,System.Object,System.Threading.CancellationToken)
  isExternal: true
  name: ConvertAndSendAsync(D, Object, CancellationToken)
  nameWithType: AbstractMessageSendingTemplate<D>.ConvertAndSendAsync(D, Object, CancellationToken)
  fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate<D>.ConvertAndSendAsync(D, System.Object, System.Threading.CancellationToken)
  nameWithType.vb: AbstractMessageSendingTemplate(Of D).ConvertAndSendAsync(D, Object, CancellationToken)
  fullName.vb: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate(Of D).ConvertAndSendAsync(D, System.Object, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.ConvertAndSendAsync(`0,System.Object,System.Threading.CancellationToken)
    name: ConvertAndSendAsync
    nameWithType: AbstractMessageSendingTemplate<D>.ConvertAndSendAsync
    fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate<D>.ConvertAndSendAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: D
    nameWithType: D
    fullName: D
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.ConvertAndSendAsync(`0,System.Object,System.Threading.CancellationToken)
    name: ConvertAndSendAsync
    nameWithType: AbstractMessageSendingTemplate(Of D).ConvertAndSendAsync
    fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate(Of D).ConvertAndSendAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: D
    nameWithType: D
    fullName: D
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.ConvertAndSendAsync(`0,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object},System.Threading.CancellationToken)
  commentId: M:Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.ConvertAndSendAsync(`0,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object},System.Threading.CancellationToken)
  isExternal: true
  name: ConvertAndSendAsync(D, Object, IDictionary<String, Object>, CancellationToken)
  nameWithType: AbstractMessageSendingTemplate<D>.ConvertAndSendAsync(D, Object, IDictionary<String, Object>, CancellationToken)
  fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate<D>.ConvertAndSendAsync(D, System.Object, System.Collections.Generic.IDictionary<System.String, System.Object>, System.Threading.CancellationToken)
  nameWithType.vb: AbstractMessageSendingTemplate(Of D).ConvertAndSendAsync(D, Object, IDictionary(Of String, Object), CancellationToken)
  fullName.vb: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate(Of D).ConvertAndSendAsync(D, System.Object, System.Collections.Generic.IDictionary(Of System.String, System.Object), System.Threading.CancellationToken)
  name.vb: ConvertAndSendAsync(D, Object, IDictionary(Of String, Object), CancellationToken)
  spec.csharp:
  - uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.ConvertAndSendAsync(`0,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object},System.Threading.CancellationToken)
    name: ConvertAndSendAsync
    nameWithType: AbstractMessageSendingTemplate<D>.ConvertAndSendAsync
    fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate<D>.ConvertAndSendAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: D
    nameWithType: D
    fullName: D
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.ConvertAndSendAsync(`0,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object},System.Threading.CancellationToken)
    name: ConvertAndSendAsync
    nameWithType: AbstractMessageSendingTemplate(Of D).ConvertAndSendAsync
    fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate(Of D).ConvertAndSendAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: D
    nameWithType: D
    fullName: D
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.ConvertAndSendAsync(System.Object,Steeltoe.Messaging.Core.IMessagePostProcessor,System.Threading.CancellationToken)
  commentId: M:Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.ConvertAndSendAsync(System.Object,Steeltoe.Messaging.Core.IMessagePostProcessor,System.Threading.CancellationToken)
  isExternal: true
  name: ConvertAndSendAsync(Object, IMessagePostProcessor, CancellationToken)
  nameWithType: AbstractMessageSendingTemplate<D>.ConvertAndSendAsync(Object, IMessagePostProcessor, CancellationToken)
  fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate<D>.ConvertAndSendAsync(System.Object, Steeltoe.Messaging.Core.IMessagePostProcessor, System.Threading.CancellationToken)
  nameWithType.vb: AbstractMessageSendingTemplate(Of D).ConvertAndSendAsync(Object, IMessagePostProcessor, CancellationToken)
  fullName.vb: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate(Of D).ConvertAndSendAsync(System.Object, Steeltoe.Messaging.Core.IMessagePostProcessor, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.ConvertAndSendAsync(System.Object,Steeltoe.Messaging.Core.IMessagePostProcessor,System.Threading.CancellationToken)
    name: ConvertAndSendAsync
    nameWithType: AbstractMessageSendingTemplate<D>.ConvertAndSendAsync
    fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate<D>.ConvertAndSendAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.Core.IMessagePostProcessor
    name: IMessagePostProcessor
    nameWithType: IMessagePostProcessor
    fullName: Steeltoe.Messaging.Core.IMessagePostProcessor
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.ConvertAndSendAsync(System.Object,Steeltoe.Messaging.Core.IMessagePostProcessor,System.Threading.CancellationToken)
    name: ConvertAndSendAsync
    nameWithType: AbstractMessageSendingTemplate(Of D).ConvertAndSendAsync
    fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate(Of D).ConvertAndSendAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.Core.IMessagePostProcessor
    name: IMessagePostProcessor
    nameWithType: IMessagePostProcessor
    fullName: Steeltoe.Messaging.Core.IMessagePostProcessor
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.ConvertAndSendAsync(`0,System.Object,Steeltoe.Messaging.Core.IMessagePostProcessor,System.Threading.CancellationToken)
  commentId: M:Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.ConvertAndSendAsync(`0,System.Object,Steeltoe.Messaging.Core.IMessagePostProcessor,System.Threading.CancellationToken)
  isExternal: true
  name: ConvertAndSendAsync(D, Object, IMessagePostProcessor, CancellationToken)
  nameWithType: AbstractMessageSendingTemplate<D>.ConvertAndSendAsync(D, Object, IMessagePostProcessor, CancellationToken)
  fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate<D>.ConvertAndSendAsync(D, System.Object, Steeltoe.Messaging.Core.IMessagePostProcessor, System.Threading.CancellationToken)
  nameWithType.vb: AbstractMessageSendingTemplate(Of D).ConvertAndSendAsync(D, Object, IMessagePostProcessor, CancellationToken)
  fullName.vb: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate(Of D).ConvertAndSendAsync(D, System.Object, Steeltoe.Messaging.Core.IMessagePostProcessor, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.ConvertAndSendAsync(`0,System.Object,Steeltoe.Messaging.Core.IMessagePostProcessor,System.Threading.CancellationToken)
    name: ConvertAndSendAsync
    nameWithType: AbstractMessageSendingTemplate<D>.ConvertAndSendAsync
    fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate<D>.ConvertAndSendAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: D
    nameWithType: D
    fullName: D
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.Core.IMessagePostProcessor
    name: IMessagePostProcessor
    nameWithType: IMessagePostProcessor
    fullName: Steeltoe.Messaging.Core.IMessagePostProcessor
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.ConvertAndSendAsync(`0,System.Object,Steeltoe.Messaging.Core.IMessagePostProcessor,System.Threading.CancellationToken)
    name: ConvertAndSendAsync
    nameWithType: AbstractMessageSendingTemplate(Of D).ConvertAndSendAsync
    fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate(Of D).ConvertAndSendAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: D
    nameWithType: D
    fullName: D
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.Core.IMessagePostProcessor
    name: IMessagePostProcessor
    nameWithType: IMessagePostProcessor
    fullName: Steeltoe.Messaging.Core.IMessagePostProcessor
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.ConvertAndSendAsync(`0,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object},Steeltoe.Messaging.Core.IMessagePostProcessor,System.Threading.CancellationToken)
  commentId: M:Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.ConvertAndSendAsync(`0,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object},Steeltoe.Messaging.Core.IMessagePostProcessor,System.Threading.CancellationToken)
  isExternal: true
  name: ConvertAndSendAsync(D, Object, IDictionary<String, Object>, IMessagePostProcessor, CancellationToken)
  nameWithType: AbstractMessageSendingTemplate<D>.ConvertAndSendAsync(D, Object, IDictionary<String, Object>, IMessagePostProcessor, CancellationToken)
  fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate<D>.ConvertAndSendAsync(D, System.Object, System.Collections.Generic.IDictionary<System.String, System.Object>, Steeltoe.Messaging.Core.IMessagePostProcessor, System.Threading.CancellationToken)
  nameWithType.vb: AbstractMessageSendingTemplate(Of D).ConvertAndSendAsync(D, Object, IDictionary(Of String, Object), IMessagePostProcessor, CancellationToken)
  fullName.vb: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate(Of D).ConvertAndSendAsync(D, System.Object, System.Collections.Generic.IDictionary(Of System.String, System.Object), Steeltoe.Messaging.Core.IMessagePostProcessor, System.Threading.CancellationToken)
  name.vb: ConvertAndSendAsync(D, Object, IDictionary(Of String, Object), IMessagePostProcessor, CancellationToken)
  spec.csharp:
  - uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.ConvertAndSendAsync(`0,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object},Steeltoe.Messaging.Core.IMessagePostProcessor,System.Threading.CancellationToken)
    name: ConvertAndSendAsync
    nameWithType: AbstractMessageSendingTemplate<D>.ConvertAndSendAsync
    fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate<D>.ConvertAndSendAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: D
    nameWithType: D
    fullName: D
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.Core.IMessagePostProcessor
    name: IMessagePostProcessor
    nameWithType: IMessagePostProcessor
    fullName: Steeltoe.Messaging.Core.IMessagePostProcessor
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.ConvertAndSendAsync(`0,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object},Steeltoe.Messaging.Core.IMessagePostProcessor,System.Threading.CancellationToken)
    name: ConvertAndSendAsync
    nameWithType: AbstractMessageSendingTemplate(Of D).ConvertAndSendAsync
    fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate(Of D).ConvertAndSendAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: D
    nameWithType: D
    fullName: D
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.Core.IMessagePostProcessor
    name: IMessagePostProcessor
    nameWithType: IMessagePostProcessor
    fullName: Steeltoe.Messaging.Core.IMessagePostProcessor
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.SendAsync(Steeltoe.Messaging.IMessage,System.Threading.CancellationToken)
  commentId: M:Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.SendAsync(Steeltoe.Messaging.IMessage,System.Threading.CancellationToken)
  isExternal: true
  name: SendAsync(IMessage, CancellationToken)
  nameWithType: AbstractMessageSendingTemplate<D>.SendAsync(IMessage, CancellationToken)
  fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate<D>.SendAsync(Steeltoe.Messaging.IMessage, System.Threading.CancellationToken)
  nameWithType.vb: AbstractMessageSendingTemplate(Of D).SendAsync(IMessage, CancellationToken)
  fullName.vb: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate(Of D).SendAsync(Steeltoe.Messaging.IMessage, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.SendAsync(Steeltoe.Messaging.IMessage,System.Threading.CancellationToken)
    name: SendAsync
    nameWithType: AbstractMessageSendingTemplate<D>.SendAsync
    fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate<D>.SendAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.SendAsync(Steeltoe.Messaging.IMessage,System.Threading.CancellationToken)
    name: SendAsync
    nameWithType: AbstractMessageSendingTemplate(Of D).SendAsync
    fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate(Of D).SendAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.SendAsync(`0,Steeltoe.Messaging.IMessage,System.Threading.CancellationToken)
  commentId: M:Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.SendAsync(`0,Steeltoe.Messaging.IMessage,System.Threading.CancellationToken)
  isExternal: true
  name: SendAsync(D, IMessage, CancellationToken)
  nameWithType: AbstractMessageSendingTemplate<D>.SendAsync(D, IMessage, CancellationToken)
  fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate<D>.SendAsync(D, Steeltoe.Messaging.IMessage, System.Threading.CancellationToken)
  nameWithType.vb: AbstractMessageSendingTemplate(Of D).SendAsync(D, IMessage, CancellationToken)
  fullName.vb: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate(Of D).SendAsync(D, Steeltoe.Messaging.IMessage, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.SendAsync(`0,Steeltoe.Messaging.IMessage,System.Threading.CancellationToken)
    name: SendAsync
    nameWithType: AbstractMessageSendingTemplate<D>.SendAsync
    fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate<D>.SendAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: D
    nameWithType: D
    fullName: D
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.SendAsync(`0,Steeltoe.Messaging.IMessage,System.Threading.CancellationToken)
    name: SendAsync
    nameWithType: AbstractMessageSendingTemplate(Of D).SendAsync
    fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate(Of D).SendAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: D
    nameWithType: D
    fullName: D
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.ConvertAndSend(System.Object)
  commentId: M:Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.ConvertAndSend(System.Object)
  isExternal: true
  name: ConvertAndSend(Object)
  nameWithType: AbstractMessageSendingTemplate<D>.ConvertAndSend(Object)
  fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate<D>.ConvertAndSend(System.Object)
  nameWithType.vb: AbstractMessageSendingTemplate(Of D).ConvertAndSend(Object)
  fullName.vb: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate(Of D).ConvertAndSend(System.Object)
  spec.csharp:
  - uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.ConvertAndSend(System.Object)
    name: ConvertAndSend
    nameWithType: AbstractMessageSendingTemplate<D>.ConvertAndSend
    fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate<D>.ConvertAndSend
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.ConvertAndSend(System.Object)
    name: ConvertAndSend
    nameWithType: AbstractMessageSendingTemplate(Of D).ConvertAndSend
    fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate(Of D).ConvertAndSend
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.ConvertAndSend(`0,System.Object)
  commentId: M:Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.ConvertAndSend(`0,System.Object)
  isExternal: true
  name: ConvertAndSend(D, Object)
  nameWithType: AbstractMessageSendingTemplate<D>.ConvertAndSend(D, Object)
  fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate<D>.ConvertAndSend(D, System.Object)
  nameWithType.vb: AbstractMessageSendingTemplate(Of D).ConvertAndSend(D, Object)
  fullName.vb: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate(Of D).ConvertAndSend(D, System.Object)
  spec.csharp:
  - uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.ConvertAndSend(`0,System.Object)
    name: ConvertAndSend
    nameWithType: AbstractMessageSendingTemplate<D>.ConvertAndSend
    fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate<D>.ConvertAndSend
  - name: (
    nameWithType: (
    fullName: (
  - name: D
    nameWithType: D
    fullName: D
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.ConvertAndSend(`0,System.Object)
    name: ConvertAndSend
    nameWithType: AbstractMessageSendingTemplate(Of D).ConvertAndSend
    fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate(Of D).ConvertAndSend
  - name: (
    nameWithType: (
    fullName: (
  - name: D
    nameWithType: D
    fullName: D
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.ConvertAndSend(`0,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object})
  commentId: M:Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.ConvertAndSend(`0,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object})
  isExternal: true
  name: ConvertAndSend(D, Object, IDictionary<String, Object>)
  nameWithType: AbstractMessageSendingTemplate<D>.ConvertAndSend(D, Object, IDictionary<String, Object>)
  fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate<D>.ConvertAndSend(D, System.Object, System.Collections.Generic.IDictionary<System.String, System.Object>)
  nameWithType.vb: AbstractMessageSendingTemplate(Of D).ConvertAndSend(D, Object, IDictionary(Of String, Object))
  fullName.vb: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate(Of D).ConvertAndSend(D, System.Object, System.Collections.Generic.IDictionary(Of System.String, System.Object))
  name.vb: ConvertAndSend(D, Object, IDictionary(Of String, Object))
  spec.csharp:
  - uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.ConvertAndSend(`0,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object})
    name: ConvertAndSend
    nameWithType: AbstractMessageSendingTemplate<D>.ConvertAndSend
    fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate<D>.ConvertAndSend
  - name: (
    nameWithType: (
    fullName: (
  - name: D
    nameWithType: D
    fullName: D
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.ConvertAndSend(`0,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object})
    name: ConvertAndSend
    nameWithType: AbstractMessageSendingTemplate(Of D).ConvertAndSend
    fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate(Of D).ConvertAndSend
  - name: (
    nameWithType: (
    fullName: (
  - name: D
    nameWithType: D
    fullName: D
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.ConvertAndSend(System.Object,Steeltoe.Messaging.Core.IMessagePostProcessor)
  commentId: M:Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.ConvertAndSend(System.Object,Steeltoe.Messaging.Core.IMessagePostProcessor)
  isExternal: true
  name: ConvertAndSend(Object, IMessagePostProcessor)
  nameWithType: AbstractMessageSendingTemplate<D>.ConvertAndSend(Object, IMessagePostProcessor)
  fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate<D>.ConvertAndSend(System.Object, Steeltoe.Messaging.Core.IMessagePostProcessor)
  nameWithType.vb: AbstractMessageSendingTemplate(Of D).ConvertAndSend(Object, IMessagePostProcessor)
  fullName.vb: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate(Of D).ConvertAndSend(System.Object, Steeltoe.Messaging.Core.IMessagePostProcessor)
  spec.csharp:
  - uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.ConvertAndSend(System.Object,Steeltoe.Messaging.Core.IMessagePostProcessor)
    name: ConvertAndSend
    nameWithType: AbstractMessageSendingTemplate<D>.ConvertAndSend
    fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate<D>.ConvertAndSend
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.Core.IMessagePostProcessor
    name: IMessagePostProcessor
    nameWithType: IMessagePostProcessor
    fullName: Steeltoe.Messaging.Core.IMessagePostProcessor
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.ConvertAndSend(System.Object,Steeltoe.Messaging.Core.IMessagePostProcessor)
    name: ConvertAndSend
    nameWithType: AbstractMessageSendingTemplate(Of D).ConvertAndSend
    fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate(Of D).ConvertAndSend
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.Core.IMessagePostProcessor
    name: IMessagePostProcessor
    nameWithType: IMessagePostProcessor
    fullName: Steeltoe.Messaging.Core.IMessagePostProcessor
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.ConvertAndSend(`0,System.Object,Steeltoe.Messaging.Core.IMessagePostProcessor)
  commentId: M:Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.ConvertAndSend(`0,System.Object,Steeltoe.Messaging.Core.IMessagePostProcessor)
  isExternal: true
  name: ConvertAndSend(D, Object, IMessagePostProcessor)
  nameWithType: AbstractMessageSendingTemplate<D>.ConvertAndSend(D, Object, IMessagePostProcessor)
  fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate<D>.ConvertAndSend(D, System.Object, Steeltoe.Messaging.Core.IMessagePostProcessor)
  nameWithType.vb: AbstractMessageSendingTemplate(Of D).ConvertAndSend(D, Object, IMessagePostProcessor)
  fullName.vb: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate(Of D).ConvertAndSend(D, System.Object, Steeltoe.Messaging.Core.IMessagePostProcessor)
  spec.csharp:
  - uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.ConvertAndSend(`0,System.Object,Steeltoe.Messaging.Core.IMessagePostProcessor)
    name: ConvertAndSend
    nameWithType: AbstractMessageSendingTemplate<D>.ConvertAndSend
    fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate<D>.ConvertAndSend
  - name: (
    nameWithType: (
    fullName: (
  - name: D
    nameWithType: D
    fullName: D
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.Core.IMessagePostProcessor
    name: IMessagePostProcessor
    nameWithType: IMessagePostProcessor
    fullName: Steeltoe.Messaging.Core.IMessagePostProcessor
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.ConvertAndSend(`0,System.Object,Steeltoe.Messaging.Core.IMessagePostProcessor)
    name: ConvertAndSend
    nameWithType: AbstractMessageSendingTemplate(Of D).ConvertAndSend
    fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate(Of D).ConvertAndSend
  - name: (
    nameWithType: (
    fullName: (
  - name: D
    nameWithType: D
    fullName: D
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.Core.IMessagePostProcessor
    name: IMessagePostProcessor
    nameWithType: IMessagePostProcessor
    fullName: Steeltoe.Messaging.Core.IMessagePostProcessor
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.ConvertAndSend(`0,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object},Steeltoe.Messaging.Core.IMessagePostProcessor)
  commentId: M:Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.ConvertAndSend(`0,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object},Steeltoe.Messaging.Core.IMessagePostProcessor)
  isExternal: true
  name: ConvertAndSend(D, Object, IDictionary<String, Object>, IMessagePostProcessor)
  nameWithType: AbstractMessageSendingTemplate<D>.ConvertAndSend(D, Object, IDictionary<String, Object>, IMessagePostProcessor)
  fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate<D>.ConvertAndSend(D, System.Object, System.Collections.Generic.IDictionary<System.String, System.Object>, Steeltoe.Messaging.Core.IMessagePostProcessor)
  nameWithType.vb: AbstractMessageSendingTemplate(Of D).ConvertAndSend(D, Object, IDictionary(Of String, Object), IMessagePostProcessor)
  fullName.vb: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate(Of D).ConvertAndSend(D, System.Object, System.Collections.Generic.IDictionary(Of System.String, System.Object), Steeltoe.Messaging.Core.IMessagePostProcessor)
  name.vb: ConvertAndSend(D, Object, IDictionary(Of String, Object), IMessagePostProcessor)
  spec.csharp:
  - uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.ConvertAndSend(`0,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object},Steeltoe.Messaging.Core.IMessagePostProcessor)
    name: ConvertAndSend
    nameWithType: AbstractMessageSendingTemplate<D>.ConvertAndSend
    fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate<D>.ConvertAndSend
  - name: (
    nameWithType: (
    fullName: (
  - name: D
    nameWithType: D
    fullName: D
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.Core.IMessagePostProcessor
    name: IMessagePostProcessor
    nameWithType: IMessagePostProcessor
    fullName: Steeltoe.Messaging.Core.IMessagePostProcessor
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.ConvertAndSend(`0,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object},Steeltoe.Messaging.Core.IMessagePostProcessor)
    name: ConvertAndSend
    nameWithType: AbstractMessageSendingTemplate(Of D).ConvertAndSend
    fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate(Of D).ConvertAndSend
  - name: (
    nameWithType: (
    fullName: (
  - name: D
    nameWithType: D
    fullName: D
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.Core.IMessagePostProcessor
    name: IMessagePostProcessor
    nameWithType: IMessagePostProcessor
    fullName: Steeltoe.Messaging.Core.IMessagePostProcessor
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.Send(Steeltoe.Messaging.IMessage)
  commentId: M:Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.Send(Steeltoe.Messaging.IMessage)
  name: Send(IMessage)
  nameWithType: AbstractMessageSendingTemplate<D>.Send(IMessage)
  fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate<D>.Send(Steeltoe.Messaging.IMessage)
  nameWithType.vb: AbstractMessageSendingTemplate(Of D).Send(IMessage)
  fullName.vb: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate(Of D).Send(Steeltoe.Messaging.IMessage)
  spec.csharp:
  - uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.Send(Steeltoe.Messaging.IMessage)
    name: Send
    nameWithType: AbstractMessageSendingTemplate<D>.Send
    fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate<D>.Send
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.Send(Steeltoe.Messaging.IMessage)
    name: Send
    nameWithType: AbstractMessageSendingTemplate(Of D).Send
    fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate(Of D).Send
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.Send(`0,Steeltoe.Messaging.IMessage)
  commentId: M:Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.Send(`0,Steeltoe.Messaging.IMessage)
  name: Send(D, IMessage)
  nameWithType: AbstractMessageSendingTemplate<D>.Send(D, IMessage)
  fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate<D>.Send(D, Steeltoe.Messaging.IMessage)
  nameWithType.vb: AbstractMessageSendingTemplate(Of D).Send(D, IMessage)
  fullName.vb: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate(Of D).Send(D, Steeltoe.Messaging.IMessage)
  spec.csharp:
  - uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.Send(`0,Steeltoe.Messaging.IMessage)
    name: Send
    nameWithType: AbstractMessageSendingTemplate<D>.Send
    fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate<D>.Send
  - name: (
    nameWithType: (
    fullName: (
  - name: D
    nameWithType: D
    fullName: D
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.Send(`0,Steeltoe.Messaging.IMessage)
    name: Send
    nameWithType: AbstractMessageSendingTemplate(Of D).Send
    fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate(Of D).Send
  - name: (
    nameWithType: (
    fullName: (
  - name: D
    nameWithType: D
    fullName: D
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.DoSendAsync(`0,Steeltoe.Messaging.IMessage,System.Threading.CancellationToken)
  commentId: M:Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.DoSendAsync(`0,Steeltoe.Messaging.IMessage,System.Threading.CancellationToken)
  isExternal: true
  name: DoSendAsync(D, IMessage, CancellationToken)
  nameWithType: AbstractMessageSendingTemplate<D>.DoSendAsync(D, IMessage, CancellationToken)
  fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate<D>.DoSendAsync(D, Steeltoe.Messaging.IMessage, System.Threading.CancellationToken)
  nameWithType.vb: AbstractMessageSendingTemplate(Of D).DoSendAsync(D, IMessage, CancellationToken)
  fullName.vb: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate(Of D).DoSendAsync(D, Steeltoe.Messaging.IMessage, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.DoSendAsync(`0,Steeltoe.Messaging.IMessage,System.Threading.CancellationToken)
    name: DoSendAsync
    nameWithType: AbstractMessageSendingTemplate<D>.DoSendAsync
    fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate<D>.DoSendAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: D
    nameWithType: D
    fullName: D
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.DoSendAsync(`0,Steeltoe.Messaging.IMessage,System.Threading.CancellationToken)
    name: DoSendAsync
    nameWithType: AbstractMessageSendingTemplate(Of D).DoSendAsync
    fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate(Of D).DoSendAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: D
    nameWithType: D
    fullName: D
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.DoSend(`0,Steeltoe.Messaging.IMessage)
  commentId: M:Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.DoSend(`0,Steeltoe.Messaging.IMessage)
  name: DoSend(D, IMessage)
  nameWithType: AbstractMessageSendingTemplate<D>.DoSend(D, IMessage)
  fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate<D>.DoSend(D, Steeltoe.Messaging.IMessage)
  nameWithType.vb: AbstractMessageSendingTemplate(Of D).DoSend(D, IMessage)
  fullName.vb: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate(Of D).DoSend(D, Steeltoe.Messaging.IMessage)
  spec.csharp:
  - uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.DoSend(`0,Steeltoe.Messaging.IMessage)
    name: DoSend
    nameWithType: AbstractMessageSendingTemplate<D>.DoSend
    fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate<D>.DoSend
  - name: (
    nameWithType: (
    fullName: (
  - name: D
    nameWithType: D
    fullName: D
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.DoSend(`0,Steeltoe.Messaging.IMessage)
    name: DoSend
    nameWithType: AbstractMessageSendingTemplate(Of D).DoSend
    fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate(Of D).DoSend
  - name: (
    nameWithType: (
    fullName: (
  - name: D
    nameWithType: D
    fullName: D
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.RequiredDefaultSendDestination
  commentId: P:Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.RequiredDefaultSendDestination
  name: RequiredDefaultSendDestination
  nameWithType: AbstractMessageSendingTemplate<D>.RequiredDefaultSendDestination
  fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate<D>.RequiredDefaultSendDestination
  nameWithType.vb: AbstractMessageSendingTemplate(Of D).RequiredDefaultSendDestination
  fullName.vb: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate(Of D).RequiredDefaultSendDestination
- uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.DoConvert(System.Object,System.Collections.Generic.IDictionary{System.String,System.Object},Steeltoe.Messaging.Core.IMessagePostProcessor)
  commentId: M:Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.DoConvert(System.Object,System.Collections.Generic.IDictionary{System.String,System.Object},Steeltoe.Messaging.Core.IMessagePostProcessor)
  isExternal: true
  name: DoConvert(Object, IDictionary<String, Object>, IMessagePostProcessor)
  nameWithType: AbstractMessageSendingTemplate<D>.DoConvert(Object, IDictionary<String, Object>, IMessagePostProcessor)
  fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate<D>.DoConvert(System.Object, System.Collections.Generic.IDictionary<System.String, System.Object>, Steeltoe.Messaging.Core.IMessagePostProcessor)
  nameWithType.vb: AbstractMessageSendingTemplate(Of D).DoConvert(Object, IDictionary(Of String, Object), IMessagePostProcessor)
  fullName.vb: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate(Of D).DoConvert(System.Object, System.Collections.Generic.IDictionary(Of System.String, System.Object), Steeltoe.Messaging.Core.IMessagePostProcessor)
  name.vb: DoConvert(Object, IDictionary(Of String, Object), IMessagePostProcessor)
  spec.csharp:
  - uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.DoConvert(System.Object,System.Collections.Generic.IDictionary{System.String,System.Object},Steeltoe.Messaging.Core.IMessagePostProcessor)
    name: DoConvert
    nameWithType: AbstractMessageSendingTemplate<D>.DoConvert
    fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate<D>.DoConvert
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.Core.IMessagePostProcessor
    name: IMessagePostProcessor
    nameWithType: IMessagePostProcessor
    fullName: Steeltoe.Messaging.Core.IMessagePostProcessor
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.DoConvert(System.Object,System.Collections.Generic.IDictionary{System.String,System.Object},Steeltoe.Messaging.Core.IMessagePostProcessor)
    name: DoConvert
    nameWithType: AbstractMessageSendingTemplate(Of D).DoConvert
    fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate(Of D).DoConvert
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.Core.IMessagePostProcessor
    name: IMessagePostProcessor
    nameWithType: IMessagePostProcessor
    fullName: Steeltoe.Messaging.Core.IMessagePostProcessor
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.ProcessHeadersToSend(System.Collections.Generic.IDictionary{System.String,System.Object})
  commentId: M:Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.ProcessHeadersToSend(System.Collections.Generic.IDictionary{System.String,System.Object})
  isExternal: true
  name: ProcessHeadersToSend(IDictionary<String, Object>)
  nameWithType: AbstractMessageSendingTemplate<D>.ProcessHeadersToSend(IDictionary<String, Object>)
  fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate<D>.ProcessHeadersToSend(System.Collections.Generic.IDictionary<System.String, System.Object>)
  nameWithType.vb: AbstractMessageSendingTemplate(Of D).ProcessHeadersToSend(IDictionary(Of String, Object))
  fullName.vb: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate(Of D).ProcessHeadersToSend(System.Collections.Generic.IDictionary(Of System.String, System.Object))
  name.vb: ProcessHeadersToSend(IDictionary(Of String, Object))
  spec.csharp:
  - uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.ProcessHeadersToSend(System.Collections.Generic.IDictionary{System.String,System.Object})
    name: ProcessHeadersToSend
    nameWithType: AbstractMessageSendingTemplate<D>.ProcessHeadersToSend
    fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate<D>.ProcessHeadersToSend
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.ProcessHeadersToSend(System.Collections.Generic.IDictionary{System.String,System.Object})
    name: ProcessHeadersToSend
    nameWithType: AbstractMessageSendingTemplate(Of D).ProcessHeadersToSend
    fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate(Of D).ProcessHeadersToSend
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate`1.DefaultReceiveDestination*
  commentId: Overload:Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate`1.DefaultReceiveDestination
  name: DefaultReceiveDestination
  nameWithType: AbstractMessageReceivingTemplate<D>.DefaultReceiveDestination
  fullName: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate<D>.DefaultReceiveDestination
  nameWithType.vb: AbstractMessageReceivingTemplate(Of D).DefaultReceiveDestination
  fullName.vb: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate(Of D).DefaultReceiveDestination
- uid: '{D}'
  commentId: '!:D'
  definition: D
  name: D
  nameWithType: D
  fullName: D
- uid: D
  name: D
  nameWithType: D
  fullName: D
- uid: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate`1.ThrowReceivedExceptions*
  commentId: Overload:Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate`1.ThrowReceivedExceptions
  name: ThrowReceivedExceptions
  nameWithType: AbstractMessageReceivingTemplate<D>.ThrowReceivedExceptions
  fullName: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate<D>.ThrowReceivedExceptions
  nameWithType.vb: AbstractMessageReceivingTemplate(Of D).ThrowReceivedExceptions
  fullName.vb: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate(Of D).ThrowReceivedExceptions
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate`1.ReceiveAsync*
  commentId: Overload:Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate`1.ReceiveAsync
  name: ReceiveAsync
  nameWithType: AbstractMessageReceivingTemplate<D>.ReceiveAsync
  fullName: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate<D>.ReceiveAsync
  nameWithType.vb: AbstractMessageReceivingTemplate(Of D).ReceiveAsync
  fullName.vb: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate(Of D).ReceiveAsync
- uid: Steeltoe.Messaging.Core.IMessageReceivingOperations{{D}}.ReceiveAsync(System.Threading.CancellationToken)
  commentId: M:Steeltoe.Messaging.Core.IMessageReceivingOperations{`0}.ReceiveAsync(System.Threading.CancellationToken)
  parent: Steeltoe.Messaging.Core.IMessageReceivingOperations{{D}}
  definition: Steeltoe.Messaging.Core.IMessageReceivingOperations`1.ReceiveAsync(System.Threading.CancellationToken)
  name: ReceiveAsync(CancellationToken)
  nameWithType: IMessageReceivingOperations<D>.ReceiveAsync(CancellationToken)
  fullName: Steeltoe.Messaging.Core.IMessageReceivingOperations<D>.ReceiveAsync(System.Threading.CancellationToken)
  nameWithType.vb: IMessageReceivingOperations(Of D).ReceiveAsync(CancellationToken)
  fullName.vb: Steeltoe.Messaging.Core.IMessageReceivingOperations(Of D).ReceiveAsync(System.Threading.CancellationToken)
  spec.csharp:
  - uid: Steeltoe.Messaging.Core.IMessageReceivingOperations`1.ReceiveAsync(System.Threading.CancellationToken)
    name: ReceiveAsync
    nameWithType: IMessageReceivingOperations<D>.ReceiveAsync
    fullName: Steeltoe.Messaging.Core.IMessageReceivingOperations<D>.ReceiveAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Core.IMessageReceivingOperations`1.ReceiveAsync(System.Threading.CancellationToken)
    name: ReceiveAsync
    nameWithType: IMessageReceivingOperations(Of D).ReceiveAsync
    fullName: Steeltoe.Messaging.Core.IMessageReceivingOperations(Of D).ReceiveAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task{Steeltoe.Messaging.IMessage}
  commentId: T:System.Threading.Tasks.Task{Steeltoe.Messaging.IMessage}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<IMessage>
  nameWithType: Task<IMessage>
  fullName: System.Threading.Tasks.Task<Steeltoe.Messaging.IMessage>
  nameWithType.vb: Task(Of IMessage)
  fullName.vb: System.Threading.Tasks.Task(Of Steeltoe.Messaging.IMessage)
  name.vb: Task(Of IMessage)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Core.IMessageReceivingOperations`1.ReceiveAsync(System.Threading.CancellationToken)
  commentId: M:Steeltoe.Messaging.Core.IMessageReceivingOperations`1.ReceiveAsync(System.Threading.CancellationToken)
  isExternal: true
  name: ReceiveAsync(CancellationToken)
  nameWithType: IMessageReceivingOperations<D>.ReceiveAsync(CancellationToken)
  fullName: Steeltoe.Messaging.Core.IMessageReceivingOperations<D>.ReceiveAsync(System.Threading.CancellationToken)
  nameWithType.vb: IMessageReceivingOperations(Of D).ReceiveAsync(CancellationToken)
  fullName.vb: Steeltoe.Messaging.Core.IMessageReceivingOperations(Of D).ReceiveAsync(System.Threading.CancellationToken)
  spec.csharp:
  - uid: Steeltoe.Messaging.Core.IMessageReceivingOperations`1.ReceiveAsync(System.Threading.CancellationToken)
    name: ReceiveAsync
    nameWithType: IMessageReceivingOperations<D>.ReceiveAsync
    fullName: Steeltoe.Messaging.Core.IMessageReceivingOperations<D>.ReceiveAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Core.IMessageReceivingOperations`1.ReceiveAsync(System.Threading.CancellationToken)
    name: ReceiveAsync
    nameWithType: IMessageReceivingOperations(Of D).ReceiveAsync
    fullName: Steeltoe.Messaging.Core.IMessageReceivingOperations(Of D).ReceiveAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: true
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: Steeltoe.Messaging.Core.IMessageReceivingOperations{{D}}.ReceiveAsync({D},System.Threading.CancellationToken)
  commentId: M:Steeltoe.Messaging.Core.IMessageReceivingOperations{`0}.ReceiveAsync(`0,System.Threading.CancellationToken)
  parent: Steeltoe.Messaging.Core.IMessageReceivingOperations{{D}}
  definition: Steeltoe.Messaging.Core.IMessageReceivingOperations`1.ReceiveAsync(`0,System.Threading.CancellationToken)
  name: ReceiveAsync(D, CancellationToken)
  nameWithType: IMessageReceivingOperations<D>.ReceiveAsync(D, CancellationToken)
  fullName: Steeltoe.Messaging.Core.IMessageReceivingOperations<D>.ReceiveAsync(D, System.Threading.CancellationToken)
  nameWithType.vb: IMessageReceivingOperations(Of D).ReceiveAsync(D, CancellationToken)
  fullName.vb: Steeltoe.Messaging.Core.IMessageReceivingOperations(Of D).ReceiveAsync(D, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Steeltoe.Messaging.Core.IMessageReceivingOperations`1.ReceiveAsync(`0,System.Threading.CancellationToken)
    name: ReceiveAsync
    nameWithType: IMessageReceivingOperations<D>.ReceiveAsync
    fullName: Steeltoe.Messaging.Core.IMessageReceivingOperations<D>.ReceiveAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: D
    nameWithType: D
    fullName: D
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Core.IMessageReceivingOperations`1.ReceiveAsync(`0,System.Threading.CancellationToken)
    name: ReceiveAsync
    nameWithType: IMessageReceivingOperations(Of D).ReceiveAsync
    fullName: Steeltoe.Messaging.Core.IMessageReceivingOperations(Of D).ReceiveAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: D
    nameWithType: D
    fullName: D
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Core.IMessageReceivingOperations`1.ReceiveAsync(`0,System.Threading.CancellationToken)
  commentId: M:Steeltoe.Messaging.Core.IMessageReceivingOperations`1.ReceiveAsync(`0,System.Threading.CancellationToken)
  isExternal: true
  name: ReceiveAsync(D, CancellationToken)
  nameWithType: IMessageReceivingOperations<D>.ReceiveAsync(D, CancellationToken)
  fullName: Steeltoe.Messaging.Core.IMessageReceivingOperations<D>.ReceiveAsync(D, System.Threading.CancellationToken)
  nameWithType.vb: IMessageReceivingOperations(Of D).ReceiveAsync(D, CancellationToken)
  fullName.vb: Steeltoe.Messaging.Core.IMessageReceivingOperations(Of D).ReceiveAsync(D, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Steeltoe.Messaging.Core.IMessageReceivingOperations`1.ReceiveAsync(`0,System.Threading.CancellationToken)
    name: ReceiveAsync
    nameWithType: IMessageReceivingOperations<D>.ReceiveAsync
    fullName: Steeltoe.Messaging.Core.IMessageReceivingOperations<D>.ReceiveAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: D
    nameWithType: D
    fullName: D
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Core.IMessageReceivingOperations`1.ReceiveAsync(`0,System.Threading.CancellationToken)
    name: ReceiveAsync
    nameWithType: IMessageReceivingOperations(Of D).ReceiveAsync
    fullName: Steeltoe.Messaging.Core.IMessageReceivingOperations(Of D).ReceiveAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: D
    nameWithType: D
    fullName: D
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate`1.ReceiveAndConvertAsync*
  commentId: Overload:Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate`1.ReceiveAndConvertAsync
  name: ReceiveAndConvertAsync
  nameWithType: AbstractMessageReceivingTemplate<D>.ReceiveAndConvertAsync
  fullName: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate<D>.ReceiveAndConvertAsync
  nameWithType.vb: AbstractMessageReceivingTemplate(Of D).ReceiveAndConvertAsync
  fullName.vb: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate(Of D).ReceiveAndConvertAsync
- uid: Steeltoe.Messaging.Core.IMessageReceivingOperations{{D}}.ReceiveAndConvertAsync``1(System.Threading.CancellationToken)
  commentId: M:Steeltoe.Messaging.Core.IMessageReceivingOperations{`0}.ReceiveAndConvertAsync``1(System.Threading.CancellationToken)
  parent: Steeltoe.Messaging.Core.IMessageReceivingOperations{{D}}
  definition: Steeltoe.Messaging.Core.IMessageReceivingOperations`1.ReceiveAndConvertAsync``1(System.Threading.CancellationToken)
  name: ReceiveAndConvertAsync<T>(CancellationToken)
  nameWithType: IMessageReceivingOperations<D>.ReceiveAndConvertAsync<T>(CancellationToken)
  fullName: Steeltoe.Messaging.Core.IMessageReceivingOperations<D>.ReceiveAndConvertAsync<T>(System.Threading.CancellationToken)
  nameWithType.vb: IMessageReceivingOperations(Of D).ReceiveAndConvertAsync(Of T)(CancellationToken)
  fullName.vb: Steeltoe.Messaging.Core.IMessageReceivingOperations(Of D).ReceiveAndConvertAsync(Of T)(System.Threading.CancellationToken)
  name.vb: ReceiveAndConvertAsync(Of T)(CancellationToken)
  spec.csharp:
  - uid: Steeltoe.Messaging.Core.IMessageReceivingOperations`1.ReceiveAndConvertAsync``1(System.Threading.CancellationToken)
    name: ReceiveAndConvertAsync<T>
    nameWithType: IMessageReceivingOperations<D>.ReceiveAndConvertAsync<T>
    fullName: Steeltoe.Messaging.Core.IMessageReceivingOperations<D>.ReceiveAndConvertAsync<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Core.IMessageReceivingOperations`1.ReceiveAndConvertAsync``1(System.Threading.CancellationToken)
    name: ReceiveAndConvertAsync(Of T)
    nameWithType: IMessageReceivingOperations(Of D).ReceiveAndConvertAsync(Of T)
    fullName: Steeltoe.Messaging.Core.IMessageReceivingOperations(Of D).ReceiveAndConvertAsync(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task{{T}}
  commentId: T:System.Threading.Tasks.Task{``0}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<T>
  nameWithType: Task<T>
  fullName: System.Threading.Tasks.Task<T>
  nameWithType.vb: Task(Of T)
  fullName.vb: System.Threading.Tasks.Task(Of T)
  name.vb: Task(Of T)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Core.IMessageReceivingOperations`1.ReceiveAndConvertAsync``1(System.Threading.CancellationToken)
  commentId: M:Steeltoe.Messaging.Core.IMessageReceivingOperations`1.ReceiveAndConvertAsync``1(System.Threading.CancellationToken)
  isExternal: true
  name: ReceiveAndConvertAsync<T>(CancellationToken)
  nameWithType: IMessageReceivingOperations<D>.ReceiveAndConvertAsync<T>(CancellationToken)
  fullName: Steeltoe.Messaging.Core.IMessageReceivingOperations<D>.ReceiveAndConvertAsync<T>(System.Threading.CancellationToken)
  nameWithType.vb: IMessageReceivingOperations(Of D).ReceiveAndConvertAsync(Of T)(CancellationToken)
  fullName.vb: Steeltoe.Messaging.Core.IMessageReceivingOperations(Of D).ReceiveAndConvertAsync(Of T)(System.Threading.CancellationToken)
  name.vb: ReceiveAndConvertAsync(Of T)(CancellationToken)
  spec.csharp:
  - uid: Steeltoe.Messaging.Core.IMessageReceivingOperations`1.ReceiveAndConvertAsync``1(System.Threading.CancellationToken)
    name: ReceiveAndConvertAsync<T>
    nameWithType: IMessageReceivingOperations<D>.ReceiveAndConvertAsync<T>
    fullName: Steeltoe.Messaging.Core.IMessageReceivingOperations<D>.ReceiveAndConvertAsync<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Core.IMessageReceivingOperations`1.ReceiveAndConvertAsync``1(System.Threading.CancellationToken)
    name: ReceiveAndConvertAsync(Of T)
    nameWithType: IMessageReceivingOperations(Of D).ReceiveAndConvertAsync(Of T)
    fullName: Steeltoe.Messaging.Core.IMessageReceivingOperations(Of D).ReceiveAndConvertAsync(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Core.IMessageReceivingOperations{{D}}.ReceiveAndConvertAsync``1({D},System.Threading.CancellationToken)
  commentId: M:Steeltoe.Messaging.Core.IMessageReceivingOperations{`0}.ReceiveAndConvertAsync``1(`0,System.Threading.CancellationToken)
  parent: Steeltoe.Messaging.Core.IMessageReceivingOperations{{D}}
  definition: Steeltoe.Messaging.Core.IMessageReceivingOperations`1.ReceiveAndConvertAsync``1(`0,System.Threading.CancellationToken)
  name: ReceiveAndConvertAsync<T>(D, CancellationToken)
  nameWithType: IMessageReceivingOperations<D>.ReceiveAndConvertAsync<T>(D, CancellationToken)
  fullName: Steeltoe.Messaging.Core.IMessageReceivingOperations<D>.ReceiveAndConvertAsync<T>(D, System.Threading.CancellationToken)
  nameWithType.vb: IMessageReceivingOperations(Of D).ReceiveAndConvertAsync(Of T)(D, CancellationToken)
  fullName.vb: Steeltoe.Messaging.Core.IMessageReceivingOperations(Of D).ReceiveAndConvertAsync(Of T)(D, System.Threading.CancellationToken)
  name.vb: ReceiveAndConvertAsync(Of T)(D, CancellationToken)
  spec.csharp:
  - uid: Steeltoe.Messaging.Core.IMessageReceivingOperations`1.ReceiveAndConvertAsync``1(`0,System.Threading.CancellationToken)
    name: ReceiveAndConvertAsync<T>
    nameWithType: IMessageReceivingOperations<D>.ReceiveAndConvertAsync<T>
    fullName: Steeltoe.Messaging.Core.IMessageReceivingOperations<D>.ReceiveAndConvertAsync<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: D
    nameWithType: D
    fullName: D
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Core.IMessageReceivingOperations`1.ReceiveAndConvertAsync``1(`0,System.Threading.CancellationToken)
    name: ReceiveAndConvertAsync(Of T)
    nameWithType: IMessageReceivingOperations(Of D).ReceiveAndConvertAsync(Of T)
    fullName: Steeltoe.Messaging.Core.IMessageReceivingOperations(Of D).ReceiveAndConvertAsync(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: D
    nameWithType: D
    fullName: D
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Core.IMessageReceivingOperations`1.ReceiveAndConvertAsync``1(`0,System.Threading.CancellationToken)
  commentId: M:Steeltoe.Messaging.Core.IMessageReceivingOperations`1.ReceiveAndConvertAsync``1(`0,System.Threading.CancellationToken)
  isExternal: true
  name: ReceiveAndConvertAsync<T>(D, CancellationToken)
  nameWithType: IMessageReceivingOperations<D>.ReceiveAndConvertAsync<T>(D, CancellationToken)
  fullName: Steeltoe.Messaging.Core.IMessageReceivingOperations<D>.ReceiveAndConvertAsync<T>(D, System.Threading.CancellationToken)
  nameWithType.vb: IMessageReceivingOperations(Of D).ReceiveAndConvertAsync(Of T)(D, CancellationToken)
  fullName.vb: Steeltoe.Messaging.Core.IMessageReceivingOperations(Of D).ReceiveAndConvertAsync(Of T)(D, System.Threading.CancellationToken)
  name.vb: ReceiveAndConvertAsync(Of T)(D, CancellationToken)
  spec.csharp:
  - uid: Steeltoe.Messaging.Core.IMessageReceivingOperations`1.ReceiveAndConvertAsync``1(`0,System.Threading.CancellationToken)
    name: ReceiveAndConvertAsync<T>
    nameWithType: IMessageReceivingOperations<D>.ReceiveAndConvertAsync<T>
    fullName: Steeltoe.Messaging.Core.IMessageReceivingOperations<D>.ReceiveAndConvertAsync<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: D
    nameWithType: D
    fullName: D
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Core.IMessageReceivingOperations`1.ReceiveAndConvertAsync``1(`0,System.Threading.CancellationToken)
    name: ReceiveAndConvertAsync(Of T)
    nameWithType: IMessageReceivingOperations(Of D).ReceiveAndConvertAsync(Of T)
    fullName: Steeltoe.Messaging.Core.IMessageReceivingOperations(Of D).ReceiveAndConvertAsync(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: D
    nameWithType: D
    fullName: D
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate`1.Receive*
  commentId: Overload:Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate`1.Receive
  name: Receive
  nameWithType: AbstractMessageReceivingTemplate<D>.Receive
  fullName: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate<D>.Receive
  nameWithType.vb: AbstractMessageReceivingTemplate(Of D).Receive
  fullName.vb: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate(Of D).Receive
- uid: Steeltoe.Messaging.Core.IMessageReceivingOperations{{D}}.Receive
  commentId: M:Steeltoe.Messaging.Core.IMessageReceivingOperations{`0}.Receive
  parent: Steeltoe.Messaging.Core.IMessageReceivingOperations{{D}}
  definition: Steeltoe.Messaging.Core.IMessageReceivingOperations`1.Receive
  name: Receive()
  nameWithType: IMessageReceivingOperations<D>.Receive()
  fullName: Steeltoe.Messaging.Core.IMessageReceivingOperations<D>.Receive()
  nameWithType.vb: IMessageReceivingOperations(Of D).Receive()
  fullName.vb: Steeltoe.Messaging.Core.IMessageReceivingOperations(Of D).Receive()
  spec.csharp:
  - uid: Steeltoe.Messaging.Core.IMessageReceivingOperations`1.Receive
    name: Receive
    nameWithType: IMessageReceivingOperations<D>.Receive
    fullName: Steeltoe.Messaging.Core.IMessageReceivingOperations<D>.Receive
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Core.IMessageReceivingOperations`1.Receive
    name: Receive
    nameWithType: IMessageReceivingOperations(Of D).Receive
    fullName: Steeltoe.Messaging.Core.IMessageReceivingOperations(Of D).Receive
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.IMessage
  commentId: T:Steeltoe.Messaging.IMessage
  parent: Steeltoe.Messaging
  name: IMessage
  nameWithType: IMessage
  fullName: Steeltoe.Messaging.IMessage
- uid: Steeltoe.Messaging.Core.IMessageReceivingOperations`1.Receive
  commentId: M:Steeltoe.Messaging.Core.IMessageReceivingOperations`1.Receive
  name: Receive()
  nameWithType: IMessageReceivingOperations<D>.Receive()
  fullName: Steeltoe.Messaging.Core.IMessageReceivingOperations<D>.Receive()
  nameWithType.vb: IMessageReceivingOperations(Of D).Receive()
  fullName.vb: Steeltoe.Messaging.Core.IMessageReceivingOperations(Of D).Receive()
  spec.csharp:
  - uid: Steeltoe.Messaging.Core.IMessageReceivingOperations`1.Receive
    name: Receive
    nameWithType: IMessageReceivingOperations<D>.Receive
    fullName: Steeltoe.Messaging.Core.IMessageReceivingOperations<D>.Receive
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Core.IMessageReceivingOperations`1.Receive
    name: Receive
    nameWithType: IMessageReceivingOperations(Of D).Receive
    fullName: Steeltoe.Messaging.Core.IMessageReceivingOperations(Of D).Receive
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging
  commentId: N:Steeltoe.Messaging
  name: Steeltoe.Messaging
  nameWithType: Steeltoe.Messaging
  fullName: Steeltoe.Messaging
- uid: Steeltoe.Messaging.Core.IMessageReceivingOperations{{D}}.Receive({D})
  commentId: M:Steeltoe.Messaging.Core.IMessageReceivingOperations{`0}.Receive(`0)
  parent: Steeltoe.Messaging.Core.IMessageReceivingOperations{{D}}
  definition: Steeltoe.Messaging.Core.IMessageReceivingOperations`1.Receive(`0)
  name: Receive(D)
  nameWithType: IMessageReceivingOperations<D>.Receive(D)
  fullName: Steeltoe.Messaging.Core.IMessageReceivingOperations<D>.Receive(D)
  nameWithType.vb: IMessageReceivingOperations(Of D).Receive(D)
  fullName.vb: Steeltoe.Messaging.Core.IMessageReceivingOperations(Of D).Receive(D)
  spec.csharp:
  - uid: Steeltoe.Messaging.Core.IMessageReceivingOperations`1.Receive(`0)
    name: Receive
    nameWithType: IMessageReceivingOperations<D>.Receive
    fullName: Steeltoe.Messaging.Core.IMessageReceivingOperations<D>.Receive
  - name: (
    nameWithType: (
    fullName: (
  - name: D
    nameWithType: D
    fullName: D
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Core.IMessageReceivingOperations`1.Receive(`0)
    name: Receive
    nameWithType: IMessageReceivingOperations(Of D).Receive
    fullName: Steeltoe.Messaging.Core.IMessageReceivingOperations(Of D).Receive
  - name: (
    nameWithType: (
    fullName: (
  - name: D
    nameWithType: D
    fullName: D
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Core.IMessageReceivingOperations`1.Receive(`0)
  commentId: M:Steeltoe.Messaging.Core.IMessageReceivingOperations`1.Receive(`0)
  name: Receive(D)
  nameWithType: IMessageReceivingOperations<D>.Receive(D)
  fullName: Steeltoe.Messaging.Core.IMessageReceivingOperations<D>.Receive(D)
  nameWithType.vb: IMessageReceivingOperations(Of D).Receive(D)
  fullName.vb: Steeltoe.Messaging.Core.IMessageReceivingOperations(Of D).Receive(D)
  spec.csharp:
  - uid: Steeltoe.Messaging.Core.IMessageReceivingOperations`1.Receive(`0)
    name: Receive
    nameWithType: IMessageReceivingOperations<D>.Receive
    fullName: Steeltoe.Messaging.Core.IMessageReceivingOperations<D>.Receive
  - name: (
    nameWithType: (
    fullName: (
  - name: D
    nameWithType: D
    fullName: D
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Core.IMessageReceivingOperations`1.Receive(`0)
    name: Receive
    nameWithType: IMessageReceivingOperations(Of D).Receive
    fullName: Steeltoe.Messaging.Core.IMessageReceivingOperations(Of D).Receive
  - name: (
    nameWithType: (
    fullName: (
  - name: D
    nameWithType: D
    fullName: D
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate`1.ReceiveAndConvert*
  commentId: Overload:Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate`1.ReceiveAndConvert
  name: ReceiveAndConvert
  nameWithType: AbstractMessageReceivingTemplate<D>.ReceiveAndConvert
  fullName: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate<D>.ReceiveAndConvert
  nameWithType.vb: AbstractMessageReceivingTemplate(Of D).ReceiveAndConvert
  fullName.vb: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate(Of D).ReceiveAndConvert
- uid: Steeltoe.Messaging.Core.IMessageReceivingOperations{{D}}.ReceiveAndConvert``1
  commentId: M:Steeltoe.Messaging.Core.IMessageReceivingOperations{`0}.ReceiveAndConvert``1
  parent: Steeltoe.Messaging.Core.IMessageReceivingOperations{{D}}
  definition: Steeltoe.Messaging.Core.IMessageReceivingOperations`1.ReceiveAndConvert``1
  name: ReceiveAndConvert<T>()
  nameWithType: IMessageReceivingOperations<D>.ReceiveAndConvert<T>()
  fullName: Steeltoe.Messaging.Core.IMessageReceivingOperations<D>.ReceiveAndConvert<T>()
  nameWithType.vb: IMessageReceivingOperations(Of D).ReceiveAndConvert(Of T)()
  fullName.vb: Steeltoe.Messaging.Core.IMessageReceivingOperations(Of D).ReceiveAndConvert(Of T)()
  name.vb: ReceiveAndConvert(Of T)()
  spec.csharp:
  - uid: Steeltoe.Messaging.Core.IMessageReceivingOperations`1.ReceiveAndConvert``1
    name: ReceiveAndConvert<T>
    nameWithType: IMessageReceivingOperations<D>.ReceiveAndConvert<T>
    fullName: Steeltoe.Messaging.Core.IMessageReceivingOperations<D>.ReceiveAndConvert<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Core.IMessageReceivingOperations`1.ReceiveAndConvert``1
    name: ReceiveAndConvert(Of T)
    nameWithType: IMessageReceivingOperations(Of D).ReceiveAndConvert(Of T)
    fullName: Steeltoe.Messaging.Core.IMessageReceivingOperations(Of D).ReceiveAndConvert(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: Steeltoe.Messaging.Core.IMessageReceivingOperations`1.ReceiveAndConvert``1
  commentId: M:Steeltoe.Messaging.Core.IMessageReceivingOperations`1.ReceiveAndConvert``1
  name: ReceiveAndConvert<T>()
  nameWithType: IMessageReceivingOperations<D>.ReceiveAndConvert<T>()
  fullName: Steeltoe.Messaging.Core.IMessageReceivingOperations<D>.ReceiveAndConvert<T>()
  nameWithType.vb: IMessageReceivingOperations(Of D).ReceiveAndConvert(Of T)()
  fullName.vb: Steeltoe.Messaging.Core.IMessageReceivingOperations(Of D).ReceiveAndConvert(Of T)()
  name.vb: ReceiveAndConvert(Of T)()
  spec.csharp:
  - uid: Steeltoe.Messaging.Core.IMessageReceivingOperations`1.ReceiveAndConvert``1
    name: ReceiveAndConvert<T>
    nameWithType: IMessageReceivingOperations<D>.ReceiveAndConvert<T>
    fullName: Steeltoe.Messaging.Core.IMessageReceivingOperations<D>.ReceiveAndConvert<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Core.IMessageReceivingOperations`1.ReceiveAndConvert``1
    name: ReceiveAndConvert(Of T)
    nameWithType: IMessageReceivingOperations(Of D).ReceiveAndConvert(Of T)
    fullName: Steeltoe.Messaging.Core.IMessageReceivingOperations(Of D).ReceiveAndConvert(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: Steeltoe.Messaging.Core.IMessageReceivingOperations{{D}}.ReceiveAndConvert``1({D})
  commentId: M:Steeltoe.Messaging.Core.IMessageReceivingOperations{`0}.ReceiveAndConvert``1(`0)
  parent: Steeltoe.Messaging.Core.IMessageReceivingOperations{{D}}
  definition: Steeltoe.Messaging.Core.IMessageReceivingOperations`1.ReceiveAndConvert``1(`0)
  name: ReceiveAndConvert<T>(D)
  nameWithType: IMessageReceivingOperations<D>.ReceiveAndConvert<T>(D)
  fullName: Steeltoe.Messaging.Core.IMessageReceivingOperations<D>.ReceiveAndConvert<T>(D)
  nameWithType.vb: IMessageReceivingOperations(Of D).ReceiveAndConvert(Of T)(D)
  fullName.vb: Steeltoe.Messaging.Core.IMessageReceivingOperations(Of D).ReceiveAndConvert(Of T)(D)
  name.vb: ReceiveAndConvert(Of T)(D)
  spec.csharp:
  - uid: Steeltoe.Messaging.Core.IMessageReceivingOperations`1.ReceiveAndConvert``1(`0)
    name: ReceiveAndConvert<T>
    nameWithType: IMessageReceivingOperations<D>.ReceiveAndConvert<T>
    fullName: Steeltoe.Messaging.Core.IMessageReceivingOperations<D>.ReceiveAndConvert<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: D
    nameWithType: D
    fullName: D
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Core.IMessageReceivingOperations`1.ReceiveAndConvert``1(`0)
    name: ReceiveAndConvert(Of T)
    nameWithType: IMessageReceivingOperations(Of D).ReceiveAndConvert(Of T)
    fullName: Steeltoe.Messaging.Core.IMessageReceivingOperations(Of D).ReceiveAndConvert(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: D
    nameWithType: D
    fullName: D
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Core.IMessageReceivingOperations`1.ReceiveAndConvert``1(`0)
  commentId: M:Steeltoe.Messaging.Core.IMessageReceivingOperations`1.ReceiveAndConvert``1(`0)
  name: ReceiveAndConvert<T>(D)
  nameWithType: IMessageReceivingOperations<D>.ReceiveAndConvert<T>(D)
  fullName: Steeltoe.Messaging.Core.IMessageReceivingOperations<D>.ReceiveAndConvert<T>(D)
  nameWithType.vb: IMessageReceivingOperations(Of D).ReceiveAndConvert(Of T)(D)
  fullName.vb: Steeltoe.Messaging.Core.IMessageReceivingOperations(Of D).ReceiveAndConvert(Of T)(D)
  name.vb: ReceiveAndConvert(Of T)(D)
  spec.csharp:
  - uid: Steeltoe.Messaging.Core.IMessageReceivingOperations`1.ReceiveAndConvert``1(`0)
    name: ReceiveAndConvert<T>
    nameWithType: IMessageReceivingOperations<D>.ReceiveAndConvert<T>
    fullName: Steeltoe.Messaging.Core.IMessageReceivingOperations<D>.ReceiveAndConvert<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: D
    nameWithType: D
    fullName: D
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Core.IMessageReceivingOperations`1.ReceiveAndConvert``1(`0)
    name: ReceiveAndConvert(Of T)
    nameWithType: IMessageReceivingOperations(Of D).ReceiveAndConvert(Of T)
    fullName: Steeltoe.Messaging.Core.IMessageReceivingOperations(Of D).ReceiveAndConvert(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: D
    nameWithType: D
    fullName: D
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate`1.RequiredDefaultReceiveDestination*
  commentId: Overload:Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate`1.RequiredDefaultReceiveDestination
  name: RequiredDefaultReceiveDestination
  nameWithType: AbstractMessageReceivingTemplate<D>.RequiredDefaultReceiveDestination
  fullName: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate<D>.RequiredDefaultReceiveDestination
  nameWithType.vb: AbstractMessageReceivingTemplate(Of D).RequiredDefaultReceiveDestination
  fullName.vb: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate(Of D).RequiredDefaultReceiveDestination
- uid: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate`1.DoReceiveAsync*
  commentId: Overload:Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate`1.DoReceiveAsync
  name: DoReceiveAsync
  nameWithType: AbstractMessageReceivingTemplate<D>.DoReceiveAsync
  fullName: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate<D>.DoReceiveAsync
  nameWithType.vb: AbstractMessageReceivingTemplate(Of D).DoReceiveAsync
  fullName.vb: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate(Of D).DoReceiveAsync
- uid: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate`1.DoReceive*
  commentId: Overload:Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate`1.DoReceive
  name: DoReceive
  nameWithType: AbstractMessageReceivingTemplate<D>.DoReceive
  fullName: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate<D>.DoReceive
  nameWithType.vb: AbstractMessageReceivingTemplate(Of D).DoReceive
  fullName.vb: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate(Of D).DoReceive
- uid: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate`1.DoConvert*
  commentId: Overload:Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate`1.DoConvert
  name: DoConvert
  nameWithType: AbstractMessageReceivingTemplate<D>.DoConvert
  fullName: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate<D>.DoConvert
  nameWithType.vb: AbstractMessageReceivingTemplate(Of D).DoConvert
  fullName.vb: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate(Of D).DoConvert
