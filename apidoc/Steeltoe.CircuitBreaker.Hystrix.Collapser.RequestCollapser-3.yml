### YamlMime:ManagedReference
items:
- uid: Steeltoe.CircuitBreaker.Hystrix.Collapser.RequestCollapser`3
  commentId: T:Steeltoe.CircuitBreaker.Hystrix.Collapser.RequestCollapser`3
  id: RequestCollapser`3
  parent: Steeltoe.CircuitBreaker.Hystrix.Collapser
  children:
  - Steeltoe.CircuitBreaker.Hystrix.Collapser.RequestCollapser`3.Batch
  - Steeltoe.CircuitBreaker.Hystrix.Collapser.RequestCollapser`3.Properties
  - Steeltoe.CircuitBreaker.Hystrix.Collapser.RequestCollapser`3.Shutdown
  - Steeltoe.CircuitBreaker.Hystrix.Collapser.RequestCollapser`3.SubmitRequest(`2,System.Threading.CancellationToken)
  langs:
  - csharp
  - vb
  name: RequestCollapser<BatchReturnType, RequestResponseType, RequestArgumentType>
  nameWithType: RequestCollapser<BatchReturnType, RequestResponseType, RequestArgumentType>
  fullName: Steeltoe.CircuitBreaker.Hystrix.Collapser.RequestCollapser<BatchReturnType, RequestResponseType, RequestArgumentType>
  type: Class
  source:
    remote:
      path: src/CircuitBreaker/src/HystrixBase/Collapser/RequestCollapser.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: RequestCollapser
    path: ../Steeltoe/src/CircuitBreaker/src/HystrixBase/Collapser/RequestCollapser.cs
    startLine: 11
  assemblies:
  - Steeltoe.CircuitBreaker.HystrixBase
  namespace: Steeltoe.CircuitBreaker.Hystrix.Collapser
  syntax:
    content: public class RequestCollapser<BatchReturnType, RequestResponseType, RequestArgumentType>
    typeParameters:
    - id: BatchReturnType
    - id: RequestResponseType
    - id: RequestArgumentType
    content.vb: Public Class RequestCollapser(Of BatchReturnType, RequestResponseType, RequestArgumentType)
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  nameWithType.vb: RequestCollapser(Of BatchReturnType, RequestResponseType, RequestArgumentType)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
  fullName.vb: Steeltoe.CircuitBreaker.Hystrix.Collapser.RequestCollapser(Of BatchReturnType, RequestResponseType, RequestArgumentType)
  name.vb: RequestCollapser(Of BatchReturnType, RequestResponseType, RequestArgumentType)
- uid: Steeltoe.CircuitBreaker.Hystrix.Collapser.RequestCollapser`3.Batch
  commentId: P:Steeltoe.CircuitBreaker.Hystrix.Collapser.RequestCollapser`3.Batch
  id: Batch
  parent: Steeltoe.CircuitBreaker.Hystrix.Collapser.RequestCollapser`3
  langs:
  - csharp
  - vb
  name: Batch
  nameWithType: RequestCollapser<BatchReturnType, RequestResponseType, RequestArgumentType>.Batch
  fullName: Steeltoe.CircuitBreaker.Hystrix.Collapser.RequestCollapser<BatchReturnType, RequestResponseType, RequestArgumentType>.Batch
  type: Property
  source:
    remote:
      path: src/CircuitBreaker/src/HystrixBase/Collapser/RequestCollapser.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Batch
    path: ../Steeltoe/src/CircuitBreaker/src/HystrixBase/Collapser/RequestCollapser.cs
    startLine: 19
  assemblies:
  - Steeltoe.CircuitBreaker.HystrixBase
  namespace: Steeltoe.CircuitBreaker.Hystrix.Collapser
  syntax:
    content: public AtomicReference<RequestBatch<BatchReturnType, RequestResponseType, RequestArgumentType>> Batch { get; }
    parameters: []
    return:
      type: AtomicReference{Steeltoe.CircuitBreaker.Hystrix.Collapser.RequestBatch{{BatchReturnType},{RequestResponseType},{RequestArgumentType}}}
    content.vb: Public ReadOnly Property Batch As AtomicReference(Of RequestBatch(Of BatchReturnType, RequestResponseType, RequestArgumentType))
  overload: Steeltoe.CircuitBreaker.Hystrix.Collapser.RequestCollapser`3.Batch*
  nameWithType.vb: RequestCollapser(Of BatchReturnType, RequestResponseType, RequestArgumentType).Batch
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: Steeltoe.CircuitBreaker.Hystrix.Collapser.RequestCollapser(Of BatchReturnType, RequestResponseType, RequestArgumentType).Batch
- uid: Steeltoe.CircuitBreaker.Hystrix.Collapser.RequestCollapser`3.Properties
  commentId: P:Steeltoe.CircuitBreaker.Hystrix.Collapser.RequestCollapser`3.Properties
  id: Properties
  parent: Steeltoe.CircuitBreaker.Hystrix.Collapser.RequestCollapser`3
  langs:
  - csharp
  - vb
  name: Properties
  nameWithType: RequestCollapser<BatchReturnType, RequestResponseType, RequestArgumentType>.Properties
  fullName: Steeltoe.CircuitBreaker.Hystrix.Collapser.RequestCollapser<BatchReturnType, RequestResponseType, RequestArgumentType>.Properties
  type: Property
  source:
    remote:
      path: src/CircuitBreaker/src/HystrixBase/Collapser/RequestCollapser.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Properties
    path: ../Steeltoe/src/CircuitBreaker/src/HystrixBase/Collapser/RequestCollapser.cs
    startLine: 21
  assemblies:
  - Steeltoe.CircuitBreaker.HystrixBase
  namespace: Steeltoe.CircuitBreaker.Hystrix.Collapser
  syntax:
    content: public IHystrixCollapserOptions Properties { get; }
    parameters: []
    return:
      type: Steeltoe.CircuitBreaker.Hystrix.IHystrixCollapserOptions
    content.vb: Public ReadOnly Property Properties As IHystrixCollapserOptions
  overload: Steeltoe.CircuitBreaker.Hystrix.Collapser.RequestCollapser`3.Properties*
  nameWithType.vb: RequestCollapser(Of BatchReturnType, RequestResponseType, RequestArgumentType).Properties
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: Steeltoe.CircuitBreaker.Hystrix.Collapser.RequestCollapser(Of BatchReturnType, RequestResponseType, RequestArgumentType).Properties
- uid: Steeltoe.CircuitBreaker.Hystrix.Collapser.RequestCollapser`3.SubmitRequest(`2,System.Threading.CancellationToken)
  commentId: M:Steeltoe.CircuitBreaker.Hystrix.Collapser.RequestCollapser`3.SubmitRequest(`2,System.Threading.CancellationToken)
  id: SubmitRequest(`2,System.Threading.CancellationToken)
  parent: Steeltoe.CircuitBreaker.Hystrix.Collapser.RequestCollapser`3
  langs:
  - csharp
  - vb
  name: SubmitRequest(RequestArgumentType, CancellationToken)
  nameWithType: RequestCollapser<BatchReturnType, RequestResponseType, RequestArgumentType>.SubmitRequest(RequestArgumentType, CancellationToken)
  fullName: Steeltoe.CircuitBreaker.Hystrix.Collapser.RequestCollapser<BatchReturnType, RequestResponseType, RequestArgumentType>.SubmitRequest(RequestArgumentType, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/CircuitBreaker/src/HystrixBase/Collapser/RequestCollapser.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: SubmitRequest
    path: ../Steeltoe/src/CircuitBreaker/src/HystrixBase/Collapser/RequestCollapser.cs
    startLine: 33
  assemblies:
  - Steeltoe.CircuitBreaker.HystrixBase
  namespace: Steeltoe.CircuitBreaker.Hystrix.Collapser
  syntax:
    content: public CollapsedRequest<RequestResponseType, RequestArgumentType> SubmitRequest(RequestArgumentType arg, CancellationToken token)
    parameters:
    - id: arg
      type: '{RequestArgumentType}'
    - id: token
      type: System.Threading.CancellationToken
    return:
      type: Steeltoe.CircuitBreaker.Hystrix.Collapser.CollapsedRequest{{RequestResponseType},{RequestArgumentType}}
    content.vb: Public Function SubmitRequest(arg As RequestArgumentType, token As CancellationToken) As CollapsedRequest(Of RequestResponseType, RequestArgumentType)
  overload: Steeltoe.CircuitBreaker.Hystrix.Collapser.RequestCollapser`3.SubmitRequest*
  nameWithType.vb: RequestCollapser(Of BatchReturnType, RequestResponseType, RequestArgumentType).SubmitRequest(RequestArgumentType, CancellationToken)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Steeltoe.CircuitBreaker.Hystrix.Collapser.RequestCollapser(Of BatchReturnType, RequestResponseType, RequestArgumentType).SubmitRequest(RequestArgumentType, System.Threading.CancellationToken)
- uid: Steeltoe.CircuitBreaker.Hystrix.Collapser.RequestCollapser`3.Shutdown
  commentId: M:Steeltoe.CircuitBreaker.Hystrix.Collapser.RequestCollapser`3.Shutdown
  id: Shutdown
  parent: Steeltoe.CircuitBreaker.Hystrix.Collapser.RequestCollapser`3
  langs:
  - csharp
  - vb
  name: Shutdown()
  nameWithType: RequestCollapser<BatchReturnType, RequestResponseType, RequestArgumentType>.Shutdown()
  fullName: Steeltoe.CircuitBreaker.Hystrix.Collapser.RequestCollapser<BatchReturnType, RequestResponseType, RequestArgumentType>.Shutdown()
  type: Method
  source:
    remote:
      path: src/CircuitBreaker/src/HystrixBase/Collapser/RequestCollapser.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Shutdown
    path: ../Steeltoe/src/CircuitBreaker/src/HystrixBase/Collapser/RequestCollapser.cs
    startLine: 68
  assemblies:
  - Steeltoe.CircuitBreaker.HystrixBase
  namespace: Steeltoe.CircuitBreaker.Hystrix.Collapser
  syntax:
    content: public void Shutdown()
    content.vb: Public Sub Shutdown
  overload: Steeltoe.CircuitBreaker.Hystrix.Collapser.RequestCollapser`3.Shutdown*
  nameWithType.vb: RequestCollapser(Of BatchReturnType, RequestResponseType, RequestArgumentType).Shutdown()
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Steeltoe.CircuitBreaker.Hystrix.Collapser.RequestCollapser(Of BatchReturnType, RequestResponseType, RequestArgumentType).Shutdown()
references:
- uid: Steeltoe.CircuitBreaker.Hystrix.Collapser
  commentId: N:Steeltoe.CircuitBreaker.Hystrix.Collapser
  name: Steeltoe.CircuitBreaker.Hystrix.Collapser
  nameWithType: Steeltoe.CircuitBreaker.Hystrix.Collapser
  fullName: Steeltoe.CircuitBreaker.Hystrix.Collapser
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Steeltoe.CircuitBreaker.Hystrix.Collapser.RequestCollapser`3.Batch*
  commentId: Overload:Steeltoe.CircuitBreaker.Hystrix.Collapser.RequestCollapser`3.Batch
  name: Batch
  nameWithType: RequestCollapser<BatchReturnType, RequestResponseType, RequestArgumentType>.Batch
  fullName: Steeltoe.CircuitBreaker.Hystrix.Collapser.RequestCollapser<BatchReturnType, RequestResponseType, RequestArgumentType>.Batch
  nameWithType.vb: RequestCollapser(Of BatchReturnType, RequestResponseType, RequestArgumentType).Batch
  fullName.vb: Steeltoe.CircuitBreaker.Hystrix.Collapser.RequestCollapser(Of BatchReturnType, RequestResponseType, RequestArgumentType).Batch
- uid: AtomicReference{Steeltoe.CircuitBreaker.Hystrix.Collapser.RequestBatch{{BatchReturnType},{RequestResponseType},{RequestArgumentType}}}
  commentId: '!:AtomicReference{Steeltoe.CircuitBreaker.Hystrix.Collapser.RequestBatch{`0,`1,`2}}'
  definition: AtomicReference`1
  name: AtomicReference<RequestBatch<BatchReturnType, RequestResponseType, RequestArgumentType>>
  nameWithType: AtomicReference<RequestBatch<BatchReturnType, RequestResponseType, RequestArgumentType>>
  fullName: AtomicReference<Steeltoe.CircuitBreaker.Hystrix.Collapser.RequestBatch<BatchReturnType, RequestResponseType, RequestArgumentType>>
  nameWithType.vb: AtomicReference(Of RequestBatch(Of BatchReturnType, RequestResponseType, RequestArgumentType))
  fullName.vb: AtomicReference(Of Steeltoe.CircuitBreaker.Hystrix.Collapser.RequestBatch(Of BatchReturnType, RequestResponseType, RequestArgumentType))
  name.vb: AtomicReference(Of RequestBatch(Of BatchReturnType, RequestResponseType, RequestArgumentType))
  spec.csharp:
  - uid: AtomicReference`1
    name: AtomicReference
    nameWithType: AtomicReference
    fullName: AtomicReference
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Steeltoe.CircuitBreaker.Hystrix.Collapser.RequestBatch`3
    name: RequestBatch
    nameWithType: RequestBatch
    fullName: Steeltoe.CircuitBreaker.Hystrix.Collapser.RequestBatch
  - name: <
    nameWithType: <
    fullName: <
  - name: BatchReturnType
    nameWithType: BatchReturnType
    fullName: BatchReturnType
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: RequestResponseType
    nameWithType: RequestResponseType
    fullName: RequestResponseType
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: RequestArgumentType
    nameWithType: RequestArgumentType
    fullName: RequestArgumentType
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: AtomicReference`1
    name: AtomicReference
    nameWithType: AtomicReference
    fullName: AtomicReference
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Steeltoe.CircuitBreaker.Hystrix.Collapser.RequestBatch`3
    name: RequestBatch
    nameWithType: RequestBatch
    fullName: Steeltoe.CircuitBreaker.Hystrix.Collapser.RequestBatch
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: BatchReturnType
    nameWithType: BatchReturnType
    fullName: BatchReturnType
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: RequestResponseType
    nameWithType: RequestResponseType
    fullName: RequestResponseType
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: RequestArgumentType
    nameWithType: RequestArgumentType
    fullName: RequestArgumentType
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: AtomicReference`1
  isExternal: true
  name: AtomicReference<>
  nameWithType: AtomicReference<>
  fullName: AtomicReference<>
  nameWithType.vb: AtomicReference(Of )
  fullName.vb: AtomicReference(Of )
  name.vb: AtomicReference(Of )
  spec.csharp:
  - uid: AtomicReference`1
    name: AtomicReference
    nameWithType: AtomicReference
    fullName: AtomicReference
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: AtomicReference`1
    name: AtomicReference
    nameWithType: AtomicReference
    fullName: AtomicReference
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.CircuitBreaker.Hystrix.Collapser.RequestCollapser`3.Properties*
  commentId: Overload:Steeltoe.CircuitBreaker.Hystrix.Collapser.RequestCollapser`3.Properties
  name: Properties
  nameWithType: RequestCollapser<BatchReturnType, RequestResponseType, RequestArgumentType>.Properties
  fullName: Steeltoe.CircuitBreaker.Hystrix.Collapser.RequestCollapser<BatchReturnType, RequestResponseType, RequestArgumentType>.Properties
  nameWithType.vb: RequestCollapser(Of BatchReturnType, RequestResponseType, RequestArgumentType).Properties
  fullName.vb: Steeltoe.CircuitBreaker.Hystrix.Collapser.RequestCollapser(Of BatchReturnType, RequestResponseType, RequestArgumentType).Properties
- uid: Steeltoe.CircuitBreaker.Hystrix.IHystrixCollapserOptions
  commentId: T:Steeltoe.CircuitBreaker.Hystrix.IHystrixCollapserOptions
  parent: Steeltoe.CircuitBreaker.Hystrix
  name: IHystrixCollapserOptions
  nameWithType: IHystrixCollapserOptions
  fullName: Steeltoe.CircuitBreaker.Hystrix.IHystrixCollapserOptions
- uid: Steeltoe.CircuitBreaker.Hystrix
  commentId: N:Steeltoe.CircuitBreaker.Hystrix
  name: Steeltoe.CircuitBreaker.Hystrix
  nameWithType: Steeltoe.CircuitBreaker.Hystrix
  fullName: Steeltoe.CircuitBreaker.Hystrix
- uid: Steeltoe.CircuitBreaker.Hystrix.Collapser.RequestCollapser`3.SubmitRequest*
  commentId: Overload:Steeltoe.CircuitBreaker.Hystrix.Collapser.RequestCollapser`3.SubmitRequest
  name: SubmitRequest
  nameWithType: RequestCollapser<BatchReturnType, RequestResponseType, RequestArgumentType>.SubmitRequest
  fullName: Steeltoe.CircuitBreaker.Hystrix.Collapser.RequestCollapser<BatchReturnType, RequestResponseType, RequestArgumentType>.SubmitRequest
  nameWithType.vb: RequestCollapser(Of BatchReturnType, RequestResponseType, RequestArgumentType).SubmitRequest
  fullName.vb: Steeltoe.CircuitBreaker.Hystrix.Collapser.RequestCollapser(Of BatchReturnType, RequestResponseType, RequestArgumentType).SubmitRequest
- uid: '{RequestArgumentType}'
  commentId: '!:RequestArgumentType'
  definition: RequestArgumentType
  name: RequestArgumentType
  nameWithType: RequestArgumentType
  fullName: RequestArgumentType
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: Steeltoe.CircuitBreaker.Hystrix.Collapser.CollapsedRequest{{RequestResponseType},{RequestArgumentType}}
  commentId: T:Steeltoe.CircuitBreaker.Hystrix.Collapser.CollapsedRequest{`1,`2}
  parent: Steeltoe.CircuitBreaker.Hystrix.Collapser
  definition: Steeltoe.CircuitBreaker.Hystrix.Collapser.CollapsedRequest`2
  name: CollapsedRequest<RequestResponseType, RequestArgumentType>
  nameWithType: CollapsedRequest<RequestResponseType, RequestArgumentType>
  fullName: Steeltoe.CircuitBreaker.Hystrix.Collapser.CollapsedRequest<RequestResponseType, RequestArgumentType>
  nameWithType.vb: CollapsedRequest(Of RequestResponseType, RequestArgumentType)
  fullName.vb: Steeltoe.CircuitBreaker.Hystrix.Collapser.CollapsedRequest(Of RequestResponseType, RequestArgumentType)
  name.vb: CollapsedRequest(Of RequestResponseType, RequestArgumentType)
  spec.csharp:
  - uid: Steeltoe.CircuitBreaker.Hystrix.Collapser.CollapsedRequest`2
    name: CollapsedRequest
    nameWithType: CollapsedRequest
    fullName: Steeltoe.CircuitBreaker.Hystrix.Collapser.CollapsedRequest
  - name: <
    nameWithType: <
    fullName: <
  - name: RequestResponseType
    nameWithType: RequestResponseType
    fullName: RequestResponseType
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: RequestArgumentType
    nameWithType: RequestArgumentType
    fullName: RequestArgumentType
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Steeltoe.CircuitBreaker.Hystrix.Collapser.CollapsedRequest`2
    name: CollapsedRequest
    nameWithType: CollapsedRequest
    fullName: Steeltoe.CircuitBreaker.Hystrix.Collapser.CollapsedRequest
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: RequestResponseType
    nameWithType: RequestResponseType
    fullName: RequestResponseType
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: RequestArgumentType
    nameWithType: RequestArgumentType
    fullName: RequestArgumentType
  - name: )
    nameWithType: )
    fullName: )
- uid: RequestArgumentType
  name: RequestArgumentType
  nameWithType: RequestArgumentType
  fullName: RequestArgumentType
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: true
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
- uid: Steeltoe.CircuitBreaker.Hystrix.Collapser.CollapsedRequest`2
  commentId: T:Steeltoe.CircuitBreaker.Hystrix.Collapser.CollapsedRequest`2
  name: CollapsedRequest<RequestResponseType, RequestArgumentType>
  nameWithType: CollapsedRequest<RequestResponseType, RequestArgumentType>
  fullName: Steeltoe.CircuitBreaker.Hystrix.Collapser.CollapsedRequest<RequestResponseType, RequestArgumentType>
  nameWithType.vb: CollapsedRequest(Of RequestResponseType, RequestArgumentType)
  fullName.vb: Steeltoe.CircuitBreaker.Hystrix.Collapser.CollapsedRequest(Of RequestResponseType, RequestArgumentType)
  name.vb: CollapsedRequest(Of RequestResponseType, RequestArgumentType)
  spec.csharp:
  - uid: Steeltoe.CircuitBreaker.Hystrix.Collapser.CollapsedRequest`2
    name: CollapsedRequest
    nameWithType: CollapsedRequest
    fullName: Steeltoe.CircuitBreaker.Hystrix.Collapser.CollapsedRequest
  - name: <
    nameWithType: <
    fullName: <
  - name: RequestResponseType
    nameWithType: RequestResponseType
    fullName: RequestResponseType
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: RequestArgumentType
    nameWithType: RequestArgumentType
    fullName: RequestArgumentType
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Steeltoe.CircuitBreaker.Hystrix.Collapser.CollapsedRequest`2
    name: CollapsedRequest
    nameWithType: CollapsedRequest
    fullName: Steeltoe.CircuitBreaker.Hystrix.Collapser.CollapsedRequest
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: RequestResponseType
    nameWithType: RequestResponseType
    fullName: RequestResponseType
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: RequestArgumentType
    nameWithType: RequestArgumentType
    fullName: RequestArgumentType
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.CircuitBreaker.Hystrix.Collapser.RequestCollapser`3.Shutdown*
  commentId: Overload:Steeltoe.CircuitBreaker.Hystrix.Collapser.RequestCollapser`3.Shutdown
  name: Shutdown
  nameWithType: RequestCollapser<BatchReturnType, RequestResponseType, RequestArgumentType>.Shutdown
  fullName: Steeltoe.CircuitBreaker.Hystrix.Collapser.RequestCollapser<BatchReturnType, RequestResponseType, RequestArgumentType>.Shutdown
  nameWithType.vb: RequestCollapser(Of BatchReturnType, RequestResponseType, RequestArgumentType).Shutdown
  fullName.vb: Steeltoe.CircuitBreaker.Hystrix.Collapser.RequestCollapser(Of BatchReturnType, RequestResponseType, RequestArgumentType).Shutdown
