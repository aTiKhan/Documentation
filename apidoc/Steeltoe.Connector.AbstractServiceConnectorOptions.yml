### YamlMime:ManagedReference
items:
- uid: Steeltoe.Connector.AbstractServiceConnectorOptions
  commentId: T:Steeltoe.Connector.AbstractServiceConnectorOptions
  id: AbstractServiceConnectorOptions
  parent: Steeltoe.Connector
  children:
  - Steeltoe.Connector.AbstractServiceConnectorOptions.#ctor
  - Steeltoe.Connector.AbstractServiceConnectorOptions.#ctor(IConfiguration,System.Char,System.Char)
  - Steeltoe.Connector.AbstractServiceConnectorOptions.#ctor(System.Char,System.Char)
  - Steeltoe.Connector.AbstractServiceConnectorOptions.AddColonDelimitedPair(System.Text.StringBuilder,System.String,System.String,System.Nullable{System.Char})
  - Steeltoe.Connector.AbstractServiceConnectorOptions.AddKeyValue(System.Text.StringBuilder,System.String,System.Nullable{System.Boolean})
  - Steeltoe.Connector.AbstractServiceConnectorOptions.AddKeyValue(System.Text.StringBuilder,System.String,System.Nullable{System.Int32})
  - Steeltoe.Connector.AbstractServiceConnectorOptions.AddKeyValue(System.Text.StringBuilder,System.String,System.String)
  - Steeltoe.Connector.AbstractServiceConnectorOptions.Default_Separator
  - Steeltoe.Connector.AbstractServiceConnectorOptions.Default_Terminator
  langs:
  - csharp
  - vb
  name: AbstractServiceConnectorOptions
  nameWithType: AbstractServiceConnectorOptions
  fullName: Steeltoe.Connector.AbstractServiceConnectorOptions
  type: Class
  source:
    remote:
      path: src/Connectors/src/ConnectorBase/AbstractServiceConnectorOptions.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: AbstractServiceConnectorOptions
    path: ../Steeltoe/src/Connectors/src/ConnectorBase/AbstractServiceConnectorOptions.cs
    startLine: 10
  assemblies:
  - Steeltoe.Connector.ConnectorBase
  namespace: Steeltoe.Connector
  syntax:
    content: public abstract class AbstractServiceConnectorOptions
    content.vb: Public MustInherit Class AbstractServiceConnectorOptions
  inheritance:
  - System.Object
  derivedClasses:
  - Steeltoe.Connector.CosmosDb.CosmosDbConnectorOptions
  - Steeltoe.Connector.Hystrix.HystrixProviderConnectorOptions
  - Steeltoe.Connector.MongoDb.MongoDbConnectorOptions
  - Steeltoe.Connector.MySql.MySqlProviderConnectorOptions
  - Steeltoe.Connector.OAuth.OAuthConnectorOptions
  - Steeltoe.Connector.Oracle.OracleProviderConnectorOptions
  - Steeltoe.Connector.PostgreSql.PostgresProviderConnectorOptions
  - Steeltoe.Connector.RabbitMQ.RabbitMQProviderConnectorOptions
  - Steeltoe.Connector.Redis.RedisCacheConnectorOptions
  - Steeltoe.Connector.SqlServer.SqlServerProviderConnectorOptions
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: Steeltoe.Connector.AbstractServiceConnectorOptions.Default_Terminator
  commentId: F:Steeltoe.Connector.AbstractServiceConnectorOptions.Default_Terminator
  id: Default_Terminator
  parent: Steeltoe.Connector.AbstractServiceConnectorOptions
  langs:
  - csharp
  - vb
  name: Default_Terminator
  nameWithType: AbstractServiceConnectorOptions.Default_Terminator
  fullName: Steeltoe.Connector.AbstractServiceConnectorOptions.Default_Terminator
  type: Field
  source:
    remote:
      path: src/Connectors/src/ConnectorBase/AbstractServiceConnectorOptions.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Default_Terminator
    path: ../Steeltoe/src/Connectors/src/ConnectorBase/AbstractServiceConnectorOptions.cs
    startLine: 12
  assemblies:
  - Steeltoe.Connector.ConnectorBase
  namespace: Steeltoe.Connector
  syntax:
    content: protected const char Default_Terminator = ';'
    return:
      type: System.Char
    content.vb: Protected Const Default_Terminator As Char = ";"c
  modifiers.csharp:
  - protected
  - const
  modifiers.vb:
  - Protected
  - Const
- uid: Steeltoe.Connector.AbstractServiceConnectorOptions.Default_Separator
  commentId: F:Steeltoe.Connector.AbstractServiceConnectorOptions.Default_Separator
  id: Default_Separator
  parent: Steeltoe.Connector.AbstractServiceConnectorOptions
  langs:
  - csharp
  - vb
  name: Default_Separator
  nameWithType: AbstractServiceConnectorOptions.Default_Separator
  fullName: Steeltoe.Connector.AbstractServiceConnectorOptions.Default_Separator
  type: Field
  source:
    remote:
      path: src/Connectors/src/ConnectorBase/AbstractServiceConnectorOptions.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Default_Separator
    path: ../Steeltoe/src/Connectors/src/ConnectorBase/AbstractServiceConnectorOptions.cs
    startLine: 13
  assemblies:
  - Steeltoe.Connector.ConnectorBase
  namespace: Steeltoe.Connector
  syntax:
    content: protected const char Default_Separator = '='
    return:
      type: System.Char
    content.vb: Protected Const Default_Separator As Char = "="c
  modifiers.csharp:
  - protected
  - const
  modifiers.vb:
  - Protected
  - Const
- uid: Steeltoe.Connector.AbstractServiceConnectorOptions.#ctor(IConfiguration,System.Char,System.Char)
  commentId: M:Steeltoe.Connector.AbstractServiceConnectorOptions.#ctor(IConfiguration,System.Char,System.Char)
  id: '#ctor(IConfiguration,System.Char,System.Char)'
  parent: Steeltoe.Connector.AbstractServiceConnectorOptions
  langs:
  - csharp
  - vb
  name: AbstractServiceConnectorOptions(IConfiguration, Char, Char)
  nameWithType: AbstractServiceConnectorOptions.AbstractServiceConnectorOptions(IConfiguration, Char, Char)
  fullName: Steeltoe.Connector.AbstractServiceConnectorOptions.AbstractServiceConnectorOptions(IConfiguration, System.Char, System.Char)
  type: Constructor
  source:
    remote:
      path: src/Connectors/src/ConnectorBase/AbstractServiceConnectorOptions.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: .ctor
    path: ../Steeltoe/src/Connectors/src/ConnectorBase/AbstractServiceConnectorOptions.cs
    startLine: 17
  assemblies:
  - Steeltoe.Connector.ConnectorBase
  namespace: Steeltoe.Connector
  syntax:
    content: public AbstractServiceConnectorOptions(IConfiguration config, char terminator = ';', char separator = '=')
    parameters:
    - id: config
      type: IConfiguration
    - id: terminator
      type: System.Char
    - id: separator
      type: System.Char
    content.vb: Public Sub New(config As IConfiguration, terminator As Char = ";"c, separator As Char = "="c)
  overload: Steeltoe.Connector.AbstractServiceConnectorOptions.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Steeltoe.Connector.AbstractServiceConnectorOptions.#ctor
  commentId: M:Steeltoe.Connector.AbstractServiceConnectorOptions.#ctor
  id: '#ctor'
  parent: Steeltoe.Connector.AbstractServiceConnectorOptions
  langs:
  - csharp
  - vb
  name: AbstractServiceConnectorOptions()
  nameWithType: AbstractServiceConnectorOptions.AbstractServiceConnectorOptions()
  fullName: Steeltoe.Connector.AbstractServiceConnectorOptions.AbstractServiceConnectorOptions()
  type: Constructor
  source:
    remote:
      path: src/Connectors/src/ConnectorBase/AbstractServiceConnectorOptions.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: .ctor
    path: ../Steeltoe/src/Connectors/src/ConnectorBase/AbstractServiceConnectorOptions.cs
    startLine: 28
  assemblies:
  - Steeltoe.Connector.ConnectorBase
  namespace: Steeltoe.Connector
  syntax:
    content: protected AbstractServiceConnectorOptions()
    content.vb: Protected Sub New
  overload: Steeltoe.Connector.AbstractServiceConnectorOptions.#ctor*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Steeltoe.Connector.AbstractServiceConnectorOptions.#ctor(System.Char,System.Char)
  commentId: M:Steeltoe.Connector.AbstractServiceConnectorOptions.#ctor(System.Char,System.Char)
  id: '#ctor(System.Char,System.Char)'
  parent: Steeltoe.Connector.AbstractServiceConnectorOptions
  langs:
  - csharp
  - vb
  name: AbstractServiceConnectorOptions(Char, Char)
  nameWithType: AbstractServiceConnectorOptions.AbstractServiceConnectorOptions(Char, Char)
  fullName: Steeltoe.Connector.AbstractServiceConnectorOptions.AbstractServiceConnectorOptions(System.Char, System.Char)
  type: Constructor
  source:
    remote:
      path: src/Connectors/src/ConnectorBase/AbstractServiceConnectorOptions.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: .ctor
    path: ../Steeltoe/src/Connectors/src/ConnectorBase/AbstractServiceConnectorOptions.cs
    startLine: 33
  assemblies:
  - Steeltoe.Connector.ConnectorBase
  namespace: Steeltoe.Connector
  syntax:
    content: protected AbstractServiceConnectorOptions(char keyValueTerm, char keyValueSep)
    parameters:
    - id: keyValueTerm
      type: System.Char
    - id: keyValueSep
      type: System.Char
    content.vb: Protected Sub New(keyValueTerm As Char, keyValueSep As Char)
  overload: Steeltoe.Connector.AbstractServiceConnectorOptions.#ctor*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Steeltoe.Connector.AbstractServiceConnectorOptions.AddKeyValue(System.Text.StringBuilder,System.String,System.Nullable{System.Int32})
  commentId: M:Steeltoe.Connector.AbstractServiceConnectorOptions.AddKeyValue(System.Text.StringBuilder,System.String,System.Nullable{System.Int32})
  id: AddKeyValue(System.Text.StringBuilder,System.String,System.Nullable{System.Int32})
  parent: Steeltoe.Connector.AbstractServiceConnectorOptions
  langs:
  - csharp
  - vb
  name: AddKeyValue(StringBuilder, String, Nullable<Int32>)
  nameWithType: AbstractServiceConnectorOptions.AddKeyValue(StringBuilder, String, Nullable<Int32>)
  fullName: Steeltoe.Connector.AbstractServiceConnectorOptions.AddKeyValue(System.Text.StringBuilder, System.String, System.Nullable<System.Int32>)
  type: Method
  source:
    remote:
      path: src/Connectors/src/ConnectorBase/AbstractServiceConnectorOptions.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: AddKeyValue
    path: ../Steeltoe/src/Connectors/src/ConnectorBase/AbstractServiceConnectorOptions.cs
    startLine: 39
  assemblies:
  - Steeltoe.Connector.ConnectorBase
  namespace: Steeltoe.Connector
  syntax:
    content: protected void AddKeyValue(StringBuilder sb, string key, int? value)
    parameters:
    - id: sb
      type: System.Text.StringBuilder
    - id: key
      type: System.String
    - id: value
      type: System.Nullable{System.Int32}
    content.vb: Protected Sub AddKeyValue(sb As StringBuilder, key As String, value As Integer?)
  overload: Steeltoe.Connector.AbstractServiceConnectorOptions.AddKeyValue*
  nameWithType.vb: AbstractServiceConnectorOptions.AddKeyValue(StringBuilder, String, Nullable(Of Int32))
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: Steeltoe.Connector.AbstractServiceConnectorOptions.AddKeyValue(System.Text.StringBuilder, System.String, System.Nullable(Of System.Int32))
  name.vb: AddKeyValue(StringBuilder, String, Nullable(Of Int32))
- uid: Steeltoe.Connector.AbstractServiceConnectorOptions.AddKeyValue(System.Text.StringBuilder,System.String,System.Nullable{System.Boolean})
  commentId: M:Steeltoe.Connector.AbstractServiceConnectorOptions.AddKeyValue(System.Text.StringBuilder,System.String,System.Nullable{System.Boolean})
  id: AddKeyValue(System.Text.StringBuilder,System.String,System.Nullable{System.Boolean})
  parent: Steeltoe.Connector.AbstractServiceConnectorOptions
  langs:
  - csharp
  - vb
  name: AddKeyValue(StringBuilder, String, Nullable<Boolean>)
  nameWithType: AbstractServiceConnectorOptions.AddKeyValue(StringBuilder, String, Nullable<Boolean>)
  fullName: Steeltoe.Connector.AbstractServiceConnectorOptions.AddKeyValue(System.Text.StringBuilder, System.String, System.Nullable<System.Boolean>)
  type: Method
  source:
    remote:
      path: src/Connectors/src/ConnectorBase/AbstractServiceConnectorOptions.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: AddKeyValue
    path: ../Steeltoe/src/Connectors/src/ConnectorBase/AbstractServiceConnectorOptions.cs
    startLine: 44
  assemblies:
  - Steeltoe.Connector.ConnectorBase
  namespace: Steeltoe.Connector
  syntax:
    content: protected void AddKeyValue(StringBuilder sb, string key, bool? value)
    parameters:
    - id: sb
      type: System.Text.StringBuilder
    - id: key
      type: System.String
    - id: value
      type: System.Nullable{System.Boolean}
    content.vb: Protected Sub AddKeyValue(sb As StringBuilder, key As String, value As Boolean?)
  overload: Steeltoe.Connector.AbstractServiceConnectorOptions.AddKeyValue*
  nameWithType.vb: AbstractServiceConnectorOptions.AddKeyValue(StringBuilder, String, Nullable(Of Boolean))
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: Steeltoe.Connector.AbstractServiceConnectorOptions.AddKeyValue(System.Text.StringBuilder, System.String, System.Nullable(Of System.Boolean))
  name.vb: AddKeyValue(StringBuilder, String, Nullable(Of Boolean))
- uid: Steeltoe.Connector.AbstractServiceConnectorOptions.AddKeyValue(System.Text.StringBuilder,System.String,System.String)
  commentId: M:Steeltoe.Connector.AbstractServiceConnectorOptions.AddKeyValue(System.Text.StringBuilder,System.String,System.String)
  id: AddKeyValue(System.Text.StringBuilder,System.String,System.String)
  parent: Steeltoe.Connector.AbstractServiceConnectorOptions
  langs:
  - csharp
  - vb
  name: AddKeyValue(StringBuilder, String, String)
  nameWithType: AbstractServiceConnectorOptions.AddKeyValue(StringBuilder, String, String)
  fullName: Steeltoe.Connector.AbstractServiceConnectorOptions.AddKeyValue(System.Text.StringBuilder, System.String, System.String)
  type: Method
  source:
    remote:
      path: src/Connectors/src/ConnectorBase/AbstractServiceConnectorOptions.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: AddKeyValue
    path: ../Steeltoe/src/Connectors/src/ConnectorBase/AbstractServiceConnectorOptions.cs
    startLine: 55
  assemblies:
  - Steeltoe.Connector.ConnectorBase
  namespace: Steeltoe.Connector
  summary: "\nAdd a Key/Value pair to a <xref href=\"System.Text.StringBuilder\" data-throw-if-not-resolved=\"false\"></xref> if the value isn&apos;t null or empty\n"
  example: []
  syntax:
    content: protected void AddKeyValue(StringBuilder sb, string key, string value)
    parameters:
    - id: sb
      type: System.Text.StringBuilder
      description: Your stringbuilder
    - id: key
      type: System.String
      description: Identifier for the value to be added
    - id: value
      type: System.String
      description: Value to be added
    content.vb: Protected Sub AddKeyValue(sb As StringBuilder, key As String, value As String)
  overload: Steeltoe.Connector.AbstractServiceConnectorOptions.AddKeyValue*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Steeltoe.Connector.AbstractServiceConnectorOptions.AddColonDelimitedPair(System.Text.StringBuilder,System.String,System.String,System.Nullable{System.Char})
  commentId: M:Steeltoe.Connector.AbstractServiceConnectorOptions.AddColonDelimitedPair(System.Text.StringBuilder,System.String,System.String,System.Nullable{System.Char})
  id: AddColonDelimitedPair(System.Text.StringBuilder,System.String,System.String,System.Nullable{System.Char})
  parent: Steeltoe.Connector.AbstractServiceConnectorOptions
  langs:
  - csharp
  - vb
  name: AddColonDelimitedPair(StringBuilder, String, String, Nullable<Char>)
  nameWithType: AbstractServiceConnectorOptions.AddColonDelimitedPair(StringBuilder, String, String, Nullable<Char>)
  fullName: Steeltoe.Connector.AbstractServiceConnectorOptions.AddColonDelimitedPair(System.Text.StringBuilder, System.String, System.String, System.Nullable<System.Char>)
  type: Method
  source:
    remote:
      path: src/Connectors/src/ConnectorBase/AbstractServiceConnectorOptions.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: AddColonDelimitedPair
    path: ../Steeltoe/src/Connectors/src/ConnectorBase/AbstractServiceConnectorOptions.cs
    startLine: 74
  assemblies:
  - Steeltoe.Connector.ConnectorBase
  namespace: Steeltoe.Connector
  summary: "\nAdd colon delimited pairs like user:password or host:port to a <xref href=\"System.Text.StringBuilder\" data-throw-if-not-resolved=\"false\"></xref>\n"
  remarks: Only adds colon if second item is NOT null or empty
  example: []
  syntax:
    content: protected void AddColonDelimitedPair(StringBuilder sb, string part1, string part2, char? terminator = default(char? ))
    parameters:
    - id: sb
      type: System.Text.StringBuilder
      description: Your stringbuilder
    - id: part1
      type: System.String
      description: First item in the pair
    - id: part2
      type: System.String
      description: Second item in the pair
    - id: terminator
      type: System.Nullable{System.Char}
      description: Character to denote the end of the pair
    content.vb: Protected Sub AddColonDelimitedPair(sb As StringBuilder, part1 As String, part2 As String, terminator As Char? = Nothing)
  overload: Steeltoe.Connector.AbstractServiceConnectorOptions.AddColonDelimitedPair*
  nameWithType.vb: AbstractServiceConnectorOptions.AddColonDelimitedPair(StringBuilder, String, String, Nullable(Of Char))
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: Steeltoe.Connector.AbstractServiceConnectorOptions.AddColonDelimitedPair(System.Text.StringBuilder, System.String, System.String, System.Nullable(Of System.Char))
  name.vb: AddColonDelimitedPair(StringBuilder, String, String, Nullable(Of Char))
references:
- uid: Steeltoe.Connector
  commentId: N:Steeltoe.Connector
  name: Steeltoe.Connector
  nameWithType: Steeltoe.Connector
  fullName: Steeltoe.Connector
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Char
  commentId: T:System.Char
  parent: System
  isExternal: true
  name: Char
  nameWithType: Char
  fullName: System.Char
- uid: Steeltoe.Connector.AbstractServiceConnectorOptions.#ctor*
  commentId: Overload:Steeltoe.Connector.AbstractServiceConnectorOptions.#ctor
  name: AbstractServiceConnectorOptions
  nameWithType: AbstractServiceConnectorOptions.AbstractServiceConnectorOptions
  fullName: Steeltoe.Connector.AbstractServiceConnectorOptions.AbstractServiceConnectorOptions
- uid: IConfiguration
  isExternal: true
  name: IConfiguration
  nameWithType: IConfiguration
  fullName: IConfiguration
- uid: Steeltoe.Connector.AbstractServiceConnectorOptions.AddKeyValue*
  commentId: Overload:Steeltoe.Connector.AbstractServiceConnectorOptions.AddKeyValue
  name: AddKeyValue
  nameWithType: AbstractServiceConnectorOptions.AddKeyValue
  fullName: Steeltoe.Connector.AbstractServiceConnectorOptions.AddKeyValue
- uid: System.Text.StringBuilder
  commentId: T:System.Text.StringBuilder
  parent: System.Text
  isExternal: true
  name: StringBuilder
  nameWithType: StringBuilder
  fullName: System.Text.StringBuilder
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Nullable{System.Int32}
  commentId: T:System.Nullable{System.Int32}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Int32>
  nameWithType: Nullable<Int32>
  fullName: System.Nullable<System.Int32>
  nameWithType.vb: Nullable(Of Int32)
  fullName.vb: System.Nullable(Of System.Int32)
  name.vb: Nullable(Of Int32)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Text
  commentId: N:System.Text
  isExternal: true
  name: System.Text
  nameWithType: System.Text
  fullName: System.Text
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable{System.Boolean}
  commentId: T:System.Nullable{System.Boolean}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Boolean>
  nameWithType: Nullable<Boolean>
  fullName: System.Nullable<System.Boolean>
  nameWithType.vb: Nullable(Of Boolean)
  fullName.vb: System.Nullable(Of System.Boolean)
  name.vb: Nullable(Of Boolean)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Connector.AbstractServiceConnectorOptions.AddColonDelimitedPair*
  commentId: Overload:Steeltoe.Connector.AbstractServiceConnectorOptions.AddColonDelimitedPair
  name: AddColonDelimitedPair
  nameWithType: AbstractServiceConnectorOptions.AddColonDelimitedPair
  fullName: Steeltoe.Connector.AbstractServiceConnectorOptions.AddColonDelimitedPair
- uid: System.Nullable{System.Char}
  commentId: T:System.Nullable{System.Char}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Char>
  nameWithType: Nullable<Char>
  fullName: System.Nullable<System.Char>
  nameWithType.vb: Nullable(Of Char)
  fullName.vb: System.Nullable(Of System.Char)
  name.vb: Nullable(Of Char)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Char
    name: Char
    nameWithType: Char
    fullName: System.Char
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Char
    name: Char
    nameWithType: Char
    fullName: System.Char
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
