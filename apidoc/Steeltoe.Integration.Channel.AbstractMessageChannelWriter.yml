### YamlMime:ManagedReference
items:
- uid: Steeltoe.Integration.Channel.AbstractMessageChannelWriter
  commentId: T:Steeltoe.Integration.Channel.AbstractMessageChannelWriter
  id: AbstractMessageChannelWriter
  parent: Steeltoe.Integration.Channel
  children:
  - Steeltoe.Integration.Channel.AbstractMessageChannelWriter.#ctor(Steeltoe.Integration.Channel.AbstractMessageChannel,Microsoft.Extensions.Logging.ILogger)
  - Steeltoe.Integration.Channel.AbstractMessageChannelWriter.channel
  - Steeltoe.Integration.Channel.AbstractMessageChannelWriter.logger
  - Steeltoe.Integration.Channel.AbstractMessageChannelWriter.TryComplete(System.Exception)
  - Steeltoe.Integration.Channel.AbstractMessageChannelWriter.TryWrite(Steeltoe.Messaging.IMessage)
  - Steeltoe.Integration.Channel.AbstractMessageChannelWriter.WaitToWriteAsync(System.Threading.CancellationToken)
  - Steeltoe.Integration.Channel.AbstractMessageChannelWriter.WriteAsync(Steeltoe.Messaging.IMessage,System.Threading.CancellationToken)
  langs:
  - csharp
  - vb
  name: AbstractMessageChannelWriter
  nameWithType: AbstractMessageChannelWriter
  fullName: Steeltoe.Integration.Channel.AbstractMessageChannelWriter
  type: Class
  source:
    remote:
      path: src/Integration/src/IntegrationBase/Channel/AbstractMessageChannelWriter.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: AbstractMessageChannelWriter
    path: ../Steeltoe/src/Integration/src/IntegrationBase/Channel/AbstractMessageChannelWriter.cs
    startLine: 13
  assemblies:
  - Steeltoe.Integration.IntegrationBase
  namespace: Steeltoe.Integration.Channel
  syntax:
    content: 'public abstract class AbstractMessageChannelWriter : ChannelWriter<IMessage>'
    content.vb: >-
      Public MustInherit Class AbstractMessageChannelWriter

          Inherits ChannelWriter(Of IMessage)
  inheritance:
  - System.Object
  - System.Threading.Channels.ChannelWriter{Steeltoe.Messaging.IMessage}
  derivedClasses:
  - Steeltoe.Integration.Channel.AbstractSubscribableChannelWriter
  - Steeltoe.Integration.Channel.QueueChannelWriter
  inheritedMembers:
  - System.Threading.Channels.ChannelWriter{Steeltoe.Messaging.IMessage}.Complete(System.Exception)
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: Steeltoe.Integration.Channel.AbstractMessageChannelWriter.channel
  commentId: F:Steeltoe.Integration.Channel.AbstractMessageChannelWriter.channel
  id: channel
  parent: Steeltoe.Integration.Channel.AbstractMessageChannelWriter
  langs:
  - csharp
  - vb
  name: channel
  nameWithType: AbstractMessageChannelWriter.channel
  fullName: Steeltoe.Integration.Channel.AbstractMessageChannelWriter.channel
  type: Field
  source:
    remote:
      path: src/Integration/src/IntegrationBase/Channel/AbstractMessageChannelWriter.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: channel
    path: ../Steeltoe/src/Integration/src/IntegrationBase/Channel/AbstractMessageChannelWriter.cs
    startLine: 15
  assemblies:
  - Steeltoe.Integration.IntegrationBase
  namespace: Steeltoe.Integration.Channel
  syntax:
    content: protected AbstractMessageChannel channel
    return:
      type: Steeltoe.Integration.Channel.AbstractMessageChannel
    content.vb: Protected channel As AbstractMessageChannel
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Steeltoe.Integration.Channel.AbstractMessageChannelWriter.logger
  commentId: F:Steeltoe.Integration.Channel.AbstractMessageChannelWriter.logger
  id: logger
  parent: Steeltoe.Integration.Channel.AbstractMessageChannelWriter
  langs:
  - csharp
  - vb
  name: logger
  nameWithType: AbstractMessageChannelWriter.logger
  fullName: Steeltoe.Integration.Channel.AbstractMessageChannelWriter.logger
  type: Field
  source:
    remote:
      path: src/Integration/src/IntegrationBase/Channel/AbstractMessageChannelWriter.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: logger
    path: ../Steeltoe/src/Integration/src/IntegrationBase/Channel/AbstractMessageChannelWriter.cs
    startLine: 16
  assemblies:
  - Steeltoe.Integration.IntegrationBase
  namespace: Steeltoe.Integration.Channel
  syntax:
    content: protected ILogger logger
    return:
      type: Microsoft.Extensions.Logging.ILogger
    content.vb: Protected logger As ILogger
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Steeltoe.Integration.Channel.AbstractMessageChannelWriter.#ctor(Steeltoe.Integration.Channel.AbstractMessageChannel,Microsoft.Extensions.Logging.ILogger)
  commentId: M:Steeltoe.Integration.Channel.AbstractMessageChannelWriter.#ctor(Steeltoe.Integration.Channel.AbstractMessageChannel,Microsoft.Extensions.Logging.ILogger)
  id: '#ctor(Steeltoe.Integration.Channel.AbstractMessageChannel,Microsoft.Extensions.Logging.ILogger)'
  parent: Steeltoe.Integration.Channel.AbstractMessageChannelWriter
  langs:
  - csharp
  - vb
  name: AbstractMessageChannelWriter(AbstractMessageChannel, ILogger)
  nameWithType: AbstractMessageChannelWriter.AbstractMessageChannelWriter(AbstractMessageChannel, ILogger)
  fullName: Steeltoe.Integration.Channel.AbstractMessageChannelWriter.AbstractMessageChannelWriter(Steeltoe.Integration.Channel.AbstractMessageChannel, Microsoft.Extensions.Logging.ILogger)
  type: Constructor
  source:
    remote:
      path: src/Integration/src/IntegrationBase/Channel/AbstractMessageChannelWriter.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: .ctor
    path: ../Steeltoe/src/Integration/src/IntegrationBase/Channel/AbstractMessageChannelWriter.cs
    startLine: 18
  assemblies:
  - Steeltoe.Integration.IntegrationBase
  namespace: Steeltoe.Integration.Channel
  syntax:
    content: protected AbstractMessageChannelWriter(AbstractMessageChannel channel, ILogger logger = null)
    parameters:
    - id: channel
      type: Steeltoe.Integration.Channel.AbstractMessageChannel
    - id: logger
      type: Microsoft.Extensions.Logging.ILogger
    content.vb: Protected Sub New(channel As AbstractMessageChannel, logger As ILogger = Nothing)
  overload: Steeltoe.Integration.Channel.AbstractMessageChannelWriter.#ctor*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Steeltoe.Integration.Channel.AbstractMessageChannelWriter.TryComplete(System.Exception)
  commentId: M:Steeltoe.Integration.Channel.AbstractMessageChannelWriter.TryComplete(System.Exception)
  id: TryComplete(System.Exception)
  parent: Steeltoe.Integration.Channel.AbstractMessageChannelWriter
  langs:
  - csharp
  - vb
  name: TryComplete(Exception)
  nameWithType: AbstractMessageChannelWriter.TryComplete(Exception)
  fullName: Steeltoe.Integration.Channel.AbstractMessageChannelWriter.TryComplete(System.Exception)
  type: Method
  source:
    remote:
      path: src/Integration/src/IntegrationBase/Channel/AbstractMessageChannelWriter.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: TryComplete
    path: ../Steeltoe/src/Integration/src/IntegrationBase/Channel/AbstractMessageChannelWriter.cs
    startLine: 24
  assemblies:
  - Steeltoe.Integration.IntegrationBase
  namespace: Steeltoe.Integration.Channel
  syntax:
    content: public override bool TryComplete(Exception error = null)
    parameters:
    - id: error
      type: System.Exception
    return:
      type: System.Boolean
    content.vb: Public Overrides Function TryComplete(error As Exception = Nothing) As Boolean
  overridden: System.Threading.Channels.ChannelWriter{Steeltoe.Messaging.IMessage}.TryComplete(System.Exception)
  overload: Steeltoe.Integration.Channel.AbstractMessageChannelWriter.TryComplete*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Steeltoe.Integration.Channel.AbstractMessageChannelWriter.TryWrite(Steeltoe.Messaging.IMessage)
  commentId: M:Steeltoe.Integration.Channel.AbstractMessageChannelWriter.TryWrite(Steeltoe.Messaging.IMessage)
  id: TryWrite(Steeltoe.Messaging.IMessage)
  parent: Steeltoe.Integration.Channel.AbstractMessageChannelWriter
  langs:
  - csharp
  - vb
  name: TryWrite(IMessage)
  nameWithType: AbstractMessageChannelWriter.TryWrite(IMessage)
  fullName: Steeltoe.Integration.Channel.AbstractMessageChannelWriter.TryWrite(Steeltoe.Messaging.IMessage)
  type: Method
  source:
    remote:
      path: src/Integration/src/IntegrationBase/Channel/AbstractMessageChannelWriter.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: TryWrite
    path: ../Steeltoe/src/Integration/src/IntegrationBase/Channel/AbstractMessageChannelWriter.cs
    startLine: 29
  assemblies:
  - Steeltoe.Integration.IntegrationBase
  namespace: Steeltoe.Integration.Channel
  syntax:
    content: public override bool TryWrite(IMessage message)
    parameters:
    - id: message
      type: Steeltoe.Messaging.IMessage
    return:
      type: System.Boolean
    content.vb: Public Overrides Function TryWrite(message As IMessage) As Boolean
  overridden: System.Threading.Channels.ChannelWriter{Steeltoe.Messaging.IMessage}.TryWrite(Steeltoe.Messaging.IMessage)
  overload: Steeltoe.Integration.Channel.AbstractMessageChannelWriter.TryWrite*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Steeltoe.Integration.Channel.AbstractMessageChannelWriter.WaitToWriteAsync(System.Threading.CancellationToken)
  commentId: M:Steeltoe.Integration.Channel.AbstractMessageChannelWriter.WaitToWriteAsync(System.Threading.CancellationToken)
  id: WaitToWriteAsync(System.Threading.CancellationToken)
  parent: Steeltoe.Integration.Channel.AbstractMessageChannelWriter
  langs:
  - csharp
  - vb
  name: WaitToWriteAsync(CancellationToken)
  nameWithType: AbstractMessageChannelWriter.WaitToWriteAsync(CancellationToken)
  fullName: Steeltoe.Integration.Channel.AbstractMessageChannelWriter.WaitToWriteAsync(System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Integration/src/IntegrationBase/Channel/AbstractMessageChannelWriter.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: WaitToWriteAsync
    path: ../Steeltoe/src/Integration/src/IntegrationBase/Channel/AbstractMessageChannelWriter.cs
    startLine: 34
  assemblies:
  - Steeltoe.Integration.IntegrationBase
  namespace: Steeltoe.Integration.Channel
  syntax:
    content: public override ValueTask<bool> WaitToWriteAsync(CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.ValueTask{System.Boolean}
    content.vb: Public Overrides Function WaitToWriteAsync(cancellationToken As CancellationToken = Nothing) As ValueTask(Of Boolean)
  overridden: System.Threading.Channels.ChannelWriter{Steeltoe.Messaging.IMessage}.WaitToWriteAsync(System.Threading.CancellationToken)
  overload: Steeltoe.Integration.Channel.AbstractMessageChannelWriter.WaitToWriteAsync*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Steeltoe.Integration.Channel.AbstractMessageChannelWriter.WriteAsync(Steeltoe.Messaging.IMessage,System.Threading.CancellationToken)
  commentId: M:Steeltoe.Integration.Channel.AbstractMessageChannelWriter.WriteAsync(Steeltoe.Messaging.IMessage,System.Threading.CancellationToken)
  id: WriteAsync(Steeltoe.Messaging.IMessage,System.Threading.CancellationToken)
  parent: Steeltoe.Integration.Channel.AbstractMessageChannelWriter
  langs:
  - csharp
  - vb
  name: WriteAsync(IMessage, CancellationToken)
  nameWithType: AbstractMessageChannelWriter.WriteAsync(IMessage, CancellationToken)
  fullName: Steeltoe.Integration.Channel.AbstractMessageChannelWriter.WriteAsync(Steeltoe.Messaging.IMessage, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Integration/src/IntegrationBase/Channel/AbstractMessageChannelWriter.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: WriteAsync
    path: ../Steeltoe/src/Integration/src/IntegrationBase/Channel/AbstractMessageChannelWriter.cs
    startLine: 39
  assemblies:
  - Steeltoe.Integration.IntegrationBase
  namespace: Steeltoe.Integration.Channel
  syntax:
    content: public override ValueTask WriteAsync(IMessage message, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: message
      type: Steeltoe.Messaging.IMessage
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.ValueTask
    content.vb: Public Overrides Function WriteAsync(message As IMessage, cancellationToken As CancellationToken = Nothing) As ValueTask
  overridden: System.Threading.Channels.ChannelWriter{Steeltoe.Messaging.IMessage}.WriteAsync(Steeltoe.Messaging.IMessage,System.Threading.CancellationToken)
  overload: Steeltoe.Integration.Channel.AbstractMessageChannelWriter.WriteAsync*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: Steeltoe.Integration.Channel
  commentId: N:Steeltoe.Integration.Channel
  name: Steeltoe.Integration.Channel
  nameWithType: Steeltoe.Integration.Channel
  fullName: Steeltoe.Integration.Channel
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Threading.Channels.ChannelWriter{Steeltoe.Messaging.IMessage}
  commentId: T:System.Threading.Channels.ChannelWriter{Steeltoe.Messaging.IMessage}
  parent: System.Threading.Channels
  definition: System.Threading.Channels.ChannelWriter`1
  name: ChannelWriter<IMessage>
  nameWithType: ChannelWriter<IMessage>
  fullName: System.Threading.Channels.ChannelWriter<Steeltoe.Messaging.IMessage>
  nameWithType.vb: ChannelWriter(Of IMessage)
  fullName.vb: System.Threading.Channels.ChannelWriter(Of Steeltoe.Messaging.IMessage)
  name.vb: ChannelWriter(Of IMessage)
  spec.csharp:
  - uid: System.Threading.Channels.ChannelWriter`1
    name: ChannelWriter
    nameWithType: ChannelWriter
    fullName: System.Threading.Channels.ChannelWriter
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Channels.ChannelWriter`1
    name: ChannelWriter
    nameWithType: ChannelWriter
    fullName: System.Threading.Channels.ChannelWriter
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Channels.ChannelWriter{Steeltoe.Messaging.IMessage}.Complete(System.Exception)
  commentId: M:System.Threading.Channels.ChannelWriter{Steeltoe.Messaging.IMessage}.Complete(System.Exception)
  parent: System.Threading.Channels.ChannelWriter{Steeltoe.Messaging.IMessage}
  definition: System.Threading.Channels.ChannelWriter`1.Complete(System.Exception)
  name: Complete(Exception)
  nameWithType: ChannelWriter<IMessage>.Complete(Exception)
  fullName: System.Threading.Channels.ChannelWriter<Steeltoe.Messaging.IMessage>.Complete(System.Exception)
  nameWithType.vb: ChannelWriter(Of IMessage).Complete(Exception)
  fullName.vb: System.Threading.Channels.ChannelWriter(Of Steeltoe.Messaging.IMessage).Complete(System.Exception)
  spec.csharp:
  - uid: System.Threading.Channels.ChannelWriter`1.Complete(System.Exception)
    name: Complete
    nameWithType: ChannelWriter<IMessage>.Complete
    fullName: System.Threading.Channels.ChannelWriter<Steeltoe.Messaging.IMessage>.Complete
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Threading.Channels.ChannelWriter`1.Complete(System.Exception)
    name: Complete
    nameWithType: ChannelWriter(Of IMessage).Complete
    fullName: System.Threading.Channels.ChannelWriter(Of Steeltoe.Messaging.IMessage).Complete
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Threading.Channels.ChannelWriter`1
  commentId: T:System.Threading.Channels.ChannelWriter`1
  isExternal: true
  name: ChannelWriter<T>
  nameWithType: ChannelWriter<T>
  fullName: System.Threading.Channels.ChannelWriter<T>
  nameWithType.vb: ChannelWriter(Of T)
  fullName.vb: System.Threading.Channels.ChannelWriter(Of T)
  name.vb: ChannelWriter(Of T)
  spec.csharp:
  - uid: System.Threading.Channels.ChannelWriter`1
    name: ChannelWriter
    nameWithType: ChannelWriter
    fullName: System.Threading.Channels.ChannelWriter
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Channels.ChannelWriter`1
    name: ChannelWriter
    nameWithType: ChannelWriter
    fullName: System.Threading.Channels.ChannelWriter
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Channels
  commentId: N:System.Threading.Channels
  isExternal: true
  name: System.Threading.Channels
  nameWithType: System.Threading.Channels
  fullName: System.Threading.Channels
- uid: System.Threading.Channels.ChannelWriter`1.Complete(System.Exception)
  commentId: M:System.Threading.Channels.ChannelWriter`1.Complete(System.Exception)
  isExternal: true
  name: Complete(Exception)
  nameWithType: ChannelWriter<T>.Complete(Exception)
  fullName: System.Threading.Channels.ChannelWriter<T>.Complete(System.Exception)
  nameWithType.vb: ChannelWriter(Of T).Complete(Exception)
  fullName.vb: System.Threading.Channels.ChannelWriter(Of T).Complete(System.Exception)
  spec.csharp:
  - uid: System.Threading.Channels.ChannelWriter`1.Complete(System.Exception)
    name: Complete
    nameWithType: ChannelWriter<T>.Complete
    fullName: System.Threading.Channels.ChannelWriter<T>.Complete
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Threading.Channels.ChannelWriter`1.Complete(System.Exception)
    name: Complete
    nameWithType: ChannelWriter(Of T).Complete
    fullName: System.Threading.Channels.ChannelWriter(Of T).Complete
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Integration.Channel.AbstractMessageChannel
  commentId: T:Steeltoe.Integration.Channel.AbstractMessageChannel
  parent: Steeltoe.Integration.Channel
  name: AbstractMessageChannel
  nameWithType: AbstractMessageChannel
  fullName: Steeltoe.Integration.Channel.AbstractMessageChannel
- uid: Microsoft.Extensions.Logging.ILogger
  commentId: T:Microsoft.Extensions.Logging.ILogger
  parent: Microsoft.Extensions.Logging
  isExternal: true
  name: ILogger
  nameWithType: ILogger
  fullName: Microsoft.Extensions.Logging.ILogger
- uid: Microsoft.Extensions.Logging
  commentId: N:Microsoft.Extensions.Logging
  isExternal: true
  name: Microsoft.Extensions.Logging
  nameWithType: Microsoft.Extensions.Logging
  fullName: Microsoft.Extensions.Logging
- uid: Steeltoe.Integration.Channel.AbstractMessageChannelWriter.#ctor*
  commentId: Overload:Steeltoe.Integration.Channel.AbstractMessageChannelWriter.#ctor
  name: AbstractMessageChannelWriter
  nameWithType: AbstractMessageChannelWriter.AbstractMessageChannelWriter
  fullName: Steeltoe.Integration.Channel.AbstractMessageChannelWriter.AbstractMessageChannelWriter
- uid: System.Threading.Channels.ChannelWriter{Steeltoe.Messaging.IMessage}.TryComplete(System.Exception)
  commentId: M:System.Threading.Channels.ChannelWriter{Steeltoe.Messaging.IMessage}.TryComplete(System.Exception)
  parent: System.Threading.Channels.ChannelWriter{Steeltoe.Messaging.IMessage}
  definition: System.Threading.Channels.ChannelWriter`1.TryComplete(System.Exception)
  name: TryComplete(Exception)
  nameWithType: ChannelWriter<IMessage>.TryComplete(Exception)
  fullName: System.Threading.Channels.ChannelWriter<Steeltoe.Messaging.IMessage>.TryComplete(System.Exception)
  nameWithType.vb: ChannelWriter(Of IMessage).TryComplete(Exception)
  fullName.vb: System.Threading.Channels.ChannelWriter(Of Steeltoe.Messaging.IMessage).TryComplete(System.Exception)
  spec.csharp:
  - uid: System.Threading.Channels.ChannelWriter`1.TryComplete(System.Exception)
    name: TryComplete
    nameWithType: ChannelWriter<IMessage>.TryComplete
    fullName: System.Threading.Channels.ChannelWriter<Steeltoe.Messaging.IMessage>.TryComplete
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Threading.Channels.ChannelWriter`1.TryComplete(System.Exception)
    name: TryComplete
    nameWithType: ChannelWriter(Of IMessage).TryComplete
    fullName: System.Threading.Channels.ChannelWriter(Of Steeltoe.Messaging.IMessage).TryComplete
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Integration.Channel.AbstractMessageChannelWriter.TryComplete*
  commentId: Overload:Steeltoe.Integration.Channel.AbstractMessageChannelWriter.TryComplete
  name: TryComplete
  nameWithType: AbstractMessageChannelWriter.TryComplete
  fullName: Steeltoe.Integration.Channel.AbstractMessageChannelWriter.TryComplete
- uid: System.Exception
  commentId: T:System.Exception
  parent: System
  isExternal: true
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Threading.Channels.ChannelWriter`1.TryComplete(System.Exception)
  commentId: M:System.Threading.Channels.ChannelWriter`1.TryComplete(System.Exception)
  isExternal: true
  name: TryComplete(Exception)
  nameWithType: ChannelWriter<T>.TryComplete(Exception)
  fullName: System.Threading.Channels.ChannelWriter<T>.TryComplete(System.Exception)
  nameWithType.vb: ChannelWriter(Of T).TryComplete(Exception)
  fullName.vb: System.Threading.Channels.ChannelWriter(Of T).TryComplete(System.Exception)
  spec.csharp:
  - uid: System.Threading.Channels.ChannelWriter`1.TryComplete(System.Exception)
    name: TryComplete
    nameWithType: ChannelWriter<T>.TryComplete
    fullName: System.Threading.Channels.ChannelWriter<T>.TryComplete
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Threading.Channels.ChannelWriter`1.TryComplete(System.Exception)
    name: TryComplete
    nameWithType: ChannelWriter(Of T).TryComplete
    fullName: System.Threading.Channels.ChannelWriter(Of T).TryComplete
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Channels.ChannelWriter{Steeltoe.Messaging.IMessage}.TryWrite(Steeltoe.Messaging.IMessage)
  commentId: M:System.Threading.Channels.ChannelWriter{Steeltoe.Messaging.IMessage}.TryWrite(Steeltoe.Messaging.IMessage)
  parent: System.Threading.Channels.ChannelWriter{Steeltoe.Messaging.IMessage}
  definition: System.Threading.Channels.ChannelWriter`1.TryWrite(`0)
  name: TryWrite(IMessage)
  nameWithType: ChannelWriter<IMessage>.TryWrite(IMessage)
  fullName: System.Threading.Channels.ChannelWriter<Steeltoe.Messaging.IMessage>.TryWrite(Steeltoe.Messaging.IMessage)
  nameWithType.vb: ChannelWriter(Of IMessage).TryWrite(IMessage)
  fullName.vb: System.Threading.Channels.ChannelWriter(Of Steeltoe.Messaging.IMessage).TryWrite(Steeltoe.Messaging.IMessage)
  spec.csharp:
  - uid: System.Threading.Channels.ChannelWriter`1.TryWrite(`0)
    name: TryWrite
    nameWithType: ChannelWriter<IMessage>.TryWrite
    fullName: System.Threading.Channels.ChannelWriter<Steeltoe.Messaging.IMessage>.TryWrite
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Threading.Channels.ChannelWriter`1.TryWrite(`0)
    name: TryWrite
    nameWithType: ChannelWriter(Of IMessage).TryWrite
    fullName: System.Threading.Channels.ChannelWriter(Of Steeltoe.Messaging.IMessage).TryWrite
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Integration.Channel.AbstractMessageChannelWriter.TryWrite*
  commentId: Overload:Steeltoe.Integration.Channel.AbstractMessageChannelWriter.TryWrite
  name: TryWrite
  nameWithType: AbstractMessageChannelWriter.TryWrite
  fullName: Steeltoe.Integration.Channel.AbstractMessageChannelWriter.TryWrite
- uid: Steeltoe.Messaging.IMessage
  commentId: T:Steeltoe.Messaging.IMessage
  parent: Steeltoe.Messaging
  name: IMessage
  nameWithType: IMessage
  fullName: Steeltoe.Messaging.IMessage
- uid: System.Threading.Channels.ChannelWriter`1.TryWrite(`0)
  commentId: M:System.Threading.Channels.ChannelWriter`1.TryWrite(`0)
  isExternal: true
  name: TryWrite(T)
  nameWithType: ChannelWriter<T>.TryWrite(T)
  fullName: System.Threading.Channels.ChannelWriter<T>.TryWrite(T)
  nameWithType.vb: ChannelWriter(Of T).TryWrite(T)
  fullName.vb: System.Threading.Channels.ChannelWriter(Of T).TryWrite(T)
  spec.csharp:
  - uid: System.Threading.Channels.ChannelWriter`1.TryWrite(`0)
    name: TryWrite
    nameWithType: ChannelWriter<T>.TryWrite
    fullName: System.Threading.Channels.ChannelWriter<T>.TryWrite
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Threading.Channels.ChannelWriter`1.TryWrite(`0)
    name: TryWrite
    nameWithType: ChannelWriter(Of T).TryWrite
    fullName: System.Threading.Channels.ChannelWriter(Of T).TryWrite
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging
  commentId: N:Steeltoe.Messaging
  name: Steeltoe.Messaging
  nameWithType: Steeltoe.Messaging
  fullName: Steeltoe.Messaging
- uid: System.Threading.Channels.ChannelWriter{Steeltoe.Messaging.IMessage}.WaitToWriteAsync(System.Threading.CancellationToken)
  commentId: M:System.Threading.Channels.ChannelWriter{Steeltoe.Messaging.IMessage}.WaitToWriteAsync(System.Threading.CancellationToken)
  parent: System.Threading.Channels.ChannelWriter{Steeltoe.Messaging.IMessage}
  definition: System.Threading.Channels.ChannelWriter`1.WaitToWriteAsync(System.Threading.CancellationToken)
  name: WaitToWriteAsync(CancellationToken)
  nameWithType: ChannelWriter<IMessage>.WaitToWriteAsync(CancellationToken)
  fullName: System.Threading.Channels.ChannelWriter<Steeltoe.Messaging.IMessage>.WaitToWriteAsync(System.Threading.CancellationToken)
  nameWithType.vb: ChannelWriter(Of IMessage).WaitToWriteAsync(CancellationToken)
  fullName.vb: System.Threading.Channels.ChannelWriter(Of Steeltoe.Messaging.IMessage).WaitToWriteAsync(System.Threading.CancellationToken)
  spec.csharp:
  - uid: System.Threading.Channels.ChannelWriter`1.WaitToWriteAsync(System.Threading.CancellationToken)
    name: WaitToWriteAsync
    nameWithType: ChannelWriter<IMessage>.WaitToWriteAsync
    fullName: System.Threading.Channels.ChannelWriter<Steeltoe.Messaging.IMessage>.WaitToWriteAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Threading.Channels.ChannelWriter`1.WaitToWriteAsync(System.Threading.CancellationToken)
    name: WaitToWriteAsync
    nameWithType: ChannelWriter(Of IMessage).WaitToWriteAsync
    fullName: System.Threading.Channels.ChannelWriter(Of Steeltoe.Messaging.IMessage).WaitToWriteAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Integration.Channel.AbstractMessageChannelWriter.WaitToWriteAsync*
  commentId: Overload:Steeltoe.Integration.Channel.AbstractMessageChannelWriter.WaitToWriteAsync
  name: WaitToWriteAsync
  nameWithType: AbstractMessageChannelWriter.WaitToWriteAsync
  fullName: Steeltoe.Integration.Channel.AbstractMessageChannelWriter.WaitToWriteAsync
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.ValueTask{System.Boolean}
  commentId: T:System.Threading.Tasks.ValueTask{System.Boolean}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.ValueTask`1
  name: ValueTask<Boolean>
  nameWithType: ValueTask<Boolean>
  fullName: System.Threading.Tasks.ValueTask<System.Boolean>
  nameWithType.vb: ValueTask(Of Boolean)
  fullName.vb: System.Threading.Tasks.ValueTask(Of System.Boolean)
  name.vb: ValueTask(Of Boolean)
  spec.csharp:
  - uid: System.Threading.Tasks.ValueTask`1
    name: ValueTask
    nameWithType: ValueTask
    fullName: System.Threading.Tasks.ValueTask
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.ValueTask`1
    name: ValueTask
    nameWithType: ValueTask
    fullName: System.Threading.Tasks.ValueTask
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Channels.ChannelWriter`1.WaitToWriteAsync(System.Threading.CancellationToken)
  commentId: M:System.Threading.Channels.ChannelWriter`1.WaitToWriteAsync(System.Threading.CancellationToken)
  isExternal: true
  name: WaitToWriteAsync(CancellationToken)
  nameWithType: ChannelWriter<T>.WaitToWriteAsync(CancellationToken)
  fullName: System.Threading.Channels.ChannelWriter<T>.WaitToWriteAsync(System.Threading.CancellationToken)
  nameWithType.vb: ChannelWriter(Of T).WaitToWriteAsync(CancellationToken)
  fullName.vb: System.Threading.Channels.ChannelWriter(Of T).WaitToWriteAsync(System.Threading.CancellationToken)
  spec.csharp:
  - uid: System.Threading.Channels.ChannelWriter`1.WaitToWriteAsync(System.Threading.CancellationToken)
    name: WaitToWriteAsync
    nameWithType: ChannelWriter<T>.WaitToWriteAsync
    fullName: System.Threading.Channels.ChannelWriter<T>.WaitToWriteAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Threading.Channels.ChannelWriter`1.WaitToWriteAsync(System.Threading.CancellationToken)
    name: WaitToWriteAsync
    nameWithType: ChannelWriter(Of T).WaitToWriteAsync
    fullName: System.Threading.Channels.ChannelWriter(Of T).WaitToWriteAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: true
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
- uid: System.Threading.Tasks.ValueTask`1
  commentId: T:System.Threading.Tasks.ValueTask`1
  isExternal: true
  name: ValueTask<TResult>
  nameWithType: ValueTask<TResult>
  fullName: System.Threading.Tasks.ValueTask<TResult>
  nameWithType.vb: ValueTask(Of TResult)
  fullName.vb: System.Threading.Tasks.ValueTask(Of TResult)
  name.vb: ValueTask(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.ValueTask`1
    name: ValueTask
    nameWithType: ValueTask
    fullName: System.Threading.Tasks.ValueTask
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.ValueTask`1
    name: ValueTask
    nameWithType: ValueTask
    fullName: System.Threading.Tasks.ValueTask
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: System.Threading.Channels.ChannelWriter{Steeltoe.Messaging.IMessage}.WriteAsync(Steeltoe.Messaging.IMessage,System.Threading.CancellationToken)
  commentId: M:System.Threading.Channels.ChannelWriter{Steeltoe.Messaging.IMessage}.WriteAsync(Steeltoe.Messaging.IMessage,System.Threading.CancellationToken)
  parent: System.Threading.Channels.ChannelWriter{Steeltoe.Messaging.IMessage}
  definition: System.Threading.Channels.ChannelWriter`1.WriteAsync(`0,System.Threading.CancellationToken)
  name: WriteAsync(IMessage, CancellationToken)
  nameWithType: ChannelWriter<IMessage>.WriteAsync(IMessage, CancellationToken)
  fullName: System.Threading.Channels.ChannelWriter<Steeltoe.Messaging.IMessage>.WriteAsync(Steeltoe.Messaging.IMessage, System.Threading.CancellationToken)
  nameWithType.vb: ChannelWriter(Of IMessage).WriteAsync(IMessage, CancellationToken)
  fullName.vb: System.Threading.Channels.ChannelWriter(Of Steeltoe.Messaging.IMessage).WriteAsync(Steeltoe.Messaging.IMessage, System.Threading.CancellationToken)
  spec.csharp:
  - uid: System.Threading.Channels.ChannelWriter`1.WriteAsync(`0,System.Threading.CancellationToken)
    name: WriteAsync
    nameWithType: ChannelWriter<IMessage>.WriteAsync
    fullName: System.Threading.Channels.ChannelWriter<Steeltoe.Messaging.IMessage>.WriteAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Threading.Channels.ChannelWriter`1.WriteAsync(`0,System.Threading.CancellationToken)
    name: WriteAsync
    nameWithType: ChannelWriter(Of IMessage).WriteAsync
    fullName: System.Threading.Channels.ChannelWriter(Of Steeltoe.Messaging.IMessage).WriteAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Integration.Channel.AbstractMessageChannelWriter.WriteAsync*
  commentId: Overload:Steeltoe.Integration.Channel.AbstractMessageChannelWriter.WriteAsync
  name: WriteAsync
  nameWithType: AbstractMessageChannelWriter.WriteAsync
  fullName: Steeltoe.Integration.Channel.AbstractMessageChannelWriter.WriteAsync
- uid: System.Threading.Tasks.ValueTask
  commentId: T:System.Threading.Tasks.ValueTask
  parent: System.Threading.Tasks
  isExternal: true
  name: ValueTask
  nameWithType: ValueTask
  fullName: System.Threading.Tasks.ValueTask
- uid: System.Threading.Channels.ChannelWriter`1.WriteAsync(`0,System.Threading.CancellationToken)
  commentId: M:System.Threading.Channels.ChannelWriter`1.WriteAsync(`0,System.Threading.CancellationToken)
  isExternal: true
  name: WriteAsync(T, CancellationToken)
  nameWithType: ChannelWriter<T>.WriteAsync(T, CancellationToken)
  fullName: System.Threading.Channels.ChannelWriter<T>.WriteAsync(T, System.Threading.CancellationToken)
  nameWithType.vb: ChannelWriter(Of T).WriteAsync(T, CancellationToken)
  fullName.vb: System.Threading.Channels.ChannelWriter(Of T).WriteAsync(T, System.Threading.CancellationToken)
  spec.csharp:
  - uid: System.Threading.Channels.ChannelWriter`1.WriteAsync(`0,System.Threading.CancellationToken)
    name: WriteAsync
    nameWithType: ChannelWriter<T>.WriteAsync
    fullName: System.Threading.Channels.ChannelWriter<T>.WriteAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Threading.Channels.ChannelWriter`1.WriteAsync(`0,System.Threading.CancellationToken)
    name: WriteAsync
    nameWithType: ChannelWriter(Of T).WriteAsync
    fullName: System.Threading.Channels.ChannelWriter(Of T).WriteAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
