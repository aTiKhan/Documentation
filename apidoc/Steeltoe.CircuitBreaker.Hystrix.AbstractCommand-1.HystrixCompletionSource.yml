### YamlMime:ManagedReference
items:
- uid: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.HystrixCompletionSource
  commentId: T:Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.HystrixCompletionSource
  id: AbstractCommand`1.HystrixCompletionSource
  parent: Steeltoe.CircuitBreaker.Hystrix
  children:
  - Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.HystrixCompletionSource.#ctor(Steeltoe.CircuitBreaker.Hystrix.AbstractCommand{`0})
  - Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.HystrixCompletionSource.Exception
  - Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.HystrixCompletionSource.IsCanceled
  - Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.HystrixCompletionSource.IsCompleted
  - Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.HystrixCompletionSource.IsFaulted
  - Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.HystrixCompletionSource.Result
  - Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.HystrixCompletionSource.Source
  - Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.HystrixCompletionSource.Task
  langs:
  - csharp
  - vb
  name: AbstractCommand<TResult>.HystrixCompletionSource
  nameWithType: AbstractCommand<TResult>.HystrixCompletionSource
  fullName: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand<TResult>.HystrixCompletionSource
  type: Class
  source:
    remote:
      path: src/CircuitBreaker/src/HystrixBase/AbstractCommand.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: HystrixCompletionSource
    path: ../Steeltoe/src/CircuitBreaker/src/HystrixBase/AbstractCommand.cs
    startLine: 112
  assemblies:
  - Steeltoe.CircuitBreaker.HystrixBase
  namespace: Steeltoe.CircuitBreaker.Hystrix
  syntax:
    content: protected class HystrixCompletionSource
    content.vb: Protected Class HystrixCompletionSource
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  nameWithType.vb: AbstractCommand(Of TResult).HystrixCompletionSource
  modifiers.csharp:
  - protected
  - class
  modifiers.vb:
  - Protected
  - Class
  fullName.vb: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand(Of TResult).HystrixCompletionSource
  name.vb: AbstractCommand(Of TResult).HystrixCompletionSource
- uid: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.HystrixCompletionSource.#ctor(Steeltoe.CircuitBreaker.Hystrix.AbstractCommand{`0})
  commentId: M:Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.HystrixCompletionSource.#ctor(Steeltoe.CircuitBreaker.Hystrix.AbstractCommand{`0})
  id: '#ctor(Steeltoe.CircuitBreaker.Hystrix.AbstractCommand{`0})'
  parent: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.HystrixCompletionSource
  langs:
  - csharp
  - vb
  name: HystrixCompletionSource(AbstractCommand<TResult>)
  nameWithType: AbstractCommand<TResult>.HystrixCompletionSource.HystrixCompletionSource(AbstractCommand<TResult>)
  fullName: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand<TResult>.HystrixCompletionSource.HystrixCompletionSource(Steeltoe.CircuitBreaker.Hystrix.AbstractCommand<TResult>)
  type: Constructor
  source:
    remote:
      path: src/CircuitBreaker/src/HystrixBase/AbstractCommand.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: .ctor
    path: ../Steeltoe/src/CircuitBreaker/src/HystrixBase/AbstractCommand.cs
    startLine: 117
  assemblies:
  - Steeltoe.CircuitBreaker.HystrixBase
  namespace: Steeltoe.CircuitBreaker.Hystrix
  syntax:
    content: public HystrixCompletionSource(AbstractCommand<TResult> cmd)
    parameters:
    - id: cmd
      type: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1
    content.vb: Public Sub New(cmd As AbstractCommand(Of TResult))
  overload: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.HystrixCompletionSource.#ctor*
  nameWithType.vb: AbstractCommand(Of TResult).HystrixCompletionSource.HystrixCompletionSource(AbstractCommand(Of TResult))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand(Of TResult).HystrixCompletionSource.HystrixCompletionSource(Steeltoe.CircuitBreaker.Hystrix.AbstractCommand(Of TResult))
  name.vb: HystrixCompletionSource(AbstractCommand(Of TResult))
- uid: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.HystrixCompletionSource.Source
  commentId: P:Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.HystrixCompletionSource.Source
  id: Source
  parent: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.HystrixCompletionSource
  langs:
  - csharp
  - vb
  name: Source
  nameWithType: AbstractCommand<TResult>.HystrixCompletionSource.Source
  fullName: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand<TResult>.HystrixCompletionSource.Source
  type: Property
  source:
    remote:
      path: src/CircuitBreaker/src/HystrixBase/AbstractCommand.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Source
    path: ../Steeltoe/src/CircuitBreaker/src/HystrixBase/AbstractCommand.cs
    startLine: 123
  assemblies:
  - Steeltoe.CircuitBreaker.HystrixBase
  namespace: Steeltoe.CircuitBreaker.Hystrix
  syntax:
    content: public TaskCompletionSource<TResult> Source { get; }
    parameters: []
    return:
      type: System.Threading.Tasks.TaskCompletionSource{{TResult}}
    content.vb: Public ReadOnly Property Source As TaskCompletionSource(Of TResult)
  overload: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.HystrixCompletionSource.Source*
  nameWithType.vb: AbstractCommand(Of TResult).HystrixCompletionSource.Source
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand(Of TResult).HystrixCompletionSource.Source
- uid: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.HystrixCompletionSource.IsCanceled
  commentId: P:Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.HystrixCompletionSource.IsCanceled
  id: IsCanceled
  parent: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.HystrixCompletionSource
  langs:
  - csharp
  - vb
  name: IsCanceled
  nameWithType: AbstractCommand<TResult>.HystrixCompletionSource.IsCanceled
  fullName: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand<TResult>.HystrixCompletionSource.IsCanceled
  type: Property
  source:
    remote:
      path: src/CircuitBreaker/src/HystrixBase/AbstractCommand.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: IsCanceled
    path: ../Steeltoe/src/CircuitBreaker/src/HystrixBase/AbstractCommand.cs
    startLine: 125
  assemblies:
  - Steeltoe.CircuitBreaker.HystrixBase
  namespace: Steeltoe.CircuitBreaker.Hystrix
  syntax:
    content: public bool IsCanceled { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsCanceled As Boolean
  overload: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.HystrixCompletionSource.IsCanceled*
  nameWithType.vb: AbstractCommand(Of TResult).HystrixCompletionSource.IsCanceled
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand(Of TResult).HystrixCompletionSource.IsCanceled
- uid: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.HystrixCompletionSource.IsCompleted
  commentId: P:Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.HystrixCompletionSource.IsCompleted
  id: IsCompleted
  parent: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.HystrixCompletionSource
  langs:
  - csharp
  - vb
  name: IsCompleted
  nameWithType: AbstractCommand<TResult>.HystrixCompletionSource.IsCompleted
  fullName: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand<TResult>.HystrixCompletionSource.IsCompleted
  type: Property
  source:
    remote:
      path: src/CircuitBreaker/src/HystrixBase/AbstractCommand.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: IsCompleted
    path: ../Steeltoe/src/CircuitBreaker/src/HystrixBase/AbstractCommand.cs
    startLine: 127
  assemblies:
  - Steeltoe.CircuitBreaker.HystrixBase
  namespace: Steeltoe.CircuitBreaker.Hystrix
  syntax:
    content: public bool IsCompleted { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsCompleted As Boolean
  overload: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.HystrixCompletionSource.IsCompleted*
  nameWithType.vb: AbstractCommand(Of TResult).HystrixCompletionSource.IsCompleted
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand(Of TResult).HystrixCompletionSource.IsCompleted
- uid: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.HystrixCompletionSource.IsFaulted
  commentId: P:Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.HystrixCompletionSource.IsFaulted
  id: IsFaulted
  parent: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.HystrixCompletionSource
  langs:
  - csharp
  - vb
  name: IsFaulted
  nameWithType: AbstractCommand<TResult>.HystrixCompletionSource.IsFaulted
  fullName: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand<TResult>.HystrixCompletionSource.IsFaulted
  type: Property
  source:
    remote:
      path: src/CircuitBreaker/src/HystrixBase/AbstractCommand.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: IsFaulted
    path: ../Steeltoe/src/CircuitBreaker/src/HystrixBase/AbstractCommand.cs
    startLine: 129
  assemblies:
  - Steeltoe.CircuitBreaker.HystrixBase
  namespace: Steeltoe.CircuitBreaker.Hystrix
  syntax:
    content: public bool IsFaulted { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsFaulted As Boolean
  overload: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.HystrixCompletionSource.IsFaulted*
  nameWithType.vb: AbstractCommand(Of TResult).HystrixCompletionSource.IsFaulted
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand(Of TResult).HystrixCompletionSource.IsFaulted
- uid: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.HystrixCompletionSource.Exception
  commentId: P:Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.HystrixCompletionSource.Exception
  id: Exception
  parent: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.HystrixCompletionSource
  langs:
  - csharp
  - vb
  name: Exception
  nameWithType: AbstractCommand<TResult>.HystrixCompletionSource.Exception
  fullName: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand<TResult>.HystrixCompletionSource.Exception
  type: Property
  source:
    remote:
      path: src/CircuitBreaker/src/HystrixBase/AbstractCommand.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Exception
    path: ../Steeltoe/src/CircuitBreaker/src/HystrixBase/AbstractCommand.cs
    startLine: 131
  assemblies:
  - Steeltoe.CircuitBreaker.HystrixBase
  namespace: Steeltoe.CircuitBreaker.Hystrix
  syntax:
    content: public Exception Exception { get; }
    parameters: []
    return:
      type: System.Exception
    content.vb: Public ReadOnly Property Exception As Exception
  overload: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.HystrixCompletionSource.Exception*
  nameWithType.vb: AbstractCommand(Of TResult).HystrixCompletionSource.Exception
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand(Of TResult).HystrixCompletionSource.Exception
- uid: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.HystrixCompletionSource.Task
  commentId: P:Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.HystrixCompletionSource.Task
  id: Task
  parent: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.HystrixCompletionSource
  langs:
  - csharp
  - vb
  name: Task
  nameWithType: AbstractCommand<TResult>.HystrixCompletionSource.Task
  fullName: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand<TResult>.HystrixCompletionSource.Task
  type: Property
  source:
    remote:
      path: src/CircuitBreaker/src/HystrixBase/AbstractCommand.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Task
    path: ../Steeltoe/src/CircuitBreaker/src/HystrixBase/AbstractCommand.cs
    startLine: 133
  assemblies:
  - Steeltoe.CircuitBreaker.HystrixBase
  namespace: Steeltoe.CircuitBreaker.Hystrix
  syntax:
    content: public Task<TResult> Task { get; }
    parameters: []
    return:
      type: System.Threading.Tasks.Task{{TResult}}
    content.vb: Public ReadOnly Property Task As Task(Of TResult)
  overload: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.HystrixCompletionSource.Task*
  nameWithType.vb: AbstractCommand(Of TResult).HystrixCompletionSource.Task
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand(Of TResult).HystrixCompletionSource.Task
- uid: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.HystrixCompletionSource.Result
  commentId: P:Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.HystrixCompletionSource.Result
  id: Result
  parent: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.HystrixCompletionSource
  langs:
  - csharp
  - vb
  name: Result
  nameWithType: AbstractCommand<TResult>.HystrixCompletionSource.Result
  fullName: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand<TResult>.HystrixCompletionSource.Result
  type: Property
  source:
    remote:
      path: src/CircuitBreaker/src/HystrixBase/AbstractCommand.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Result
    path: ../Steeltoe/src/CircuitBreaker/src/HystrixBase/AbstractCommand.cs
    startLine: 135
  assemblies:
  - Steeltoe.CircuitBreaker.HystrixBase
  namespace: Steeltoe.CircuitBreaker.Hystrix
  syntax:
    content: public TResult Result { get; }
    parameters: []
    return:
      type: '{TResult}'
    content.vb: Public ReadOnly Property Result As TResult
  overload: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.HystrixCompletionSource.Result*
  nameWithType.vb: AbstractCommand(Of TResult).HystrixCompletionSource.Result
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand(Of TResult).HystrixCompletionSource.Result
references:
- uid: Steeltoe.CircuitBreaker.Hystrix
  commentId: N:Steeltoe.CircuitBreaker.Hystrix
  name: Steeltoe.CircuitBreaker.Hystrix
  nameWithType: Steeltoe.CircuitBreaker.Hystrix
  fullName: Steeltoe.CircuitBreaker.Hystrix
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.HystrixCompletionSource.#ctor*
  commentId: Overload:Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.HystrixCompletionSource.#ctor
  name: HystrixCompletionSource
  nameWithType: AbstractCommand<TResult>.HystrixCompletionSource.HystrixCompletionSource
  fullName: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand<TResult>.HystrixCompletionSource.HystrixCompletionSource
  nameWithType.vb: AbstractCommand(Of TResult).HystrixCompletionSource.HystrixCompletionSource
  fullName.vb: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand(Of TResult).HystrixCompletionSource.HystrixCompletionSource
- uid: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1
  commentId: T:Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1
  parent: Steeltoe.CircuitBreaker.Hystrix
  name: AbstractCommand<TResult>
  nameWithType: AbstractCommand<TResult>
  fullName: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand<TResult>
  nameWithType.vb: AbstractCommand(Of TResult)
  fullName.vb: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand(Of TResult)
  name.vb: AbstractCommand(Of TResult)
  spec.csharp:
  - uid: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1
    name: AbstractCommand
    nameWithType: AbstractCommand
    fullName: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1
    name: AbstractCommand
    nameWithType: AbstractCommand
    fullName: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.HystrixCompletionSource.Source*
  commentId: Overload:Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.HystrixCompletionSource.Source
  name: Source
  nameWithType: AbstractCommand<TResult>.HystrixCompletionSource.Source
  fullName: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand<TResult>.HystrixCompletionSource.Source
  nameWithType.vb: AbstractCommand(Of TResult).HystrixCompletionSource.Source
  fullName.vb: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand(Of TResult).HystrixCompletionSource.Source
- uid: System.Threading.Tasks.TaskCompletionSource{{TResult}}
  commentId: T:System.Threading.Tasks.TaskCompletionSource{`0}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.TaskCompletionSource`1
  name: TaskCompletionSource<TResult>
  nameWithType: TaskCompletionSource<TResult>
  fullName: System.Threading.Tasks.TaskCompletionSource<TResult>
  nameWithType.vb: TaskCompletionSource(Of TResult)
  fullName.vb: System.Threading.Tasks.TaskCompletionSource(Of TResult)
  name.vb: TaskCompletionSource(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.TaskCompletionSource`1
    name: TaskCompletionSource
    nameWithType: TaskCompletionSource
    fullName: System.Threading.Tasks.TaskCompletionSource
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.TaskCompletionSource`1
    name: TaskCompletionSource
    nameWithType: TaskCompletionSource
    fullName: System.Threading.Tasks.TaskCompletionSource
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.TaskCompletionSource`1
  commentId: T:System.Threading.Tasks.TaskCompletionSource`1
  isExternal: true
  name: TaskCompletionSource<TResult>
  nameWithType: TaskCompletionSource<TResult>
  fullName: System.Threading.Tasks.TaskCompletionSource<TResult>
  nameWithType.vb: TaskCompletionSource(Of TResult)
  fullName.vb: System.Threading.Tasks.TaskCompletionSource(Of TResult)
  name.vb: TaskCompletionSource(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.TaskCompletionSource`1
    name: TaskCompletionSource
    nameWithType: TaskCompletionSource
    fullName: System.Threading.Tasks.TaskCompletionSource
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.TaskCompletionSource`1
    name: TaskCompletionSource
    nameWithType: TaskCompletionSource
    fullName: System.Threading.Tasks.TaskCompletionSource
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.HystrixCompletionSource.IsCanceled*
  commentId: Overload:Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.HystrixCompletionSource.IsCanceled
  name: IsCanceled
  nameWithType: AbstractCommand<TResult>.HystrixCompletionSource.IsCanceled
  fullName: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand<TResult>.HystrixCompletionSource.IsCanceled
  nameWithType.vb: AbstractCommand(Of TResult).HystrixCompletionSource.IsCanceled
  fullName.vb: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand(Of TResult).HystrixCompletionSource.IsCanceled
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.HystrixCompletionSource.IsCompleted*
  commentId: Overload:Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.HystrixCompletionSource.IsCompleted
  name: IsCompleted
  nameWithType: AbstractCommand<TResult>.HystrixCompletionSource.IsCompleted
  fullName: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand<TResult>.HystrixCompletionSource.IsCompleted
  nameWithType.vb: AbstractCommand(Of TResult).HystrixCompletionSource.IsCompleted
  fullName.vb: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand(Of TResult).HystrixCompletionSource.IsCompleted
- uid: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.HystrixCompletionSource.IsFaulted*
  commentId: Overload:Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.HystrixCompletionSource.IsFaulted
  name: IsFaulted
  nameWithType: AbstractCommand<TResult>.HystrixCompletionSource.IsFaulted
  fullName: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand<TResult>.HystrixCompletionSource.IsFaulted
  nameWithType.vb: AbstractCommand(Of TResult).HystrixCompletionSource.IsFaulted
  fullName.vb: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand(Of TResult).HystrixCompletionSource.IsFaulted
- uid: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.HystrixCompletionSource.Exception*
  commentId: Overload:Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.HystrixCompletionSource.Exception
  name: Exception
  nameWithType: AbstractCommand<TResult>.HystrixCompletionSource.Exception
  fullName: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand<TResult>.HystrixCompletionSource.Exception
  nameWithType.vb: AbstractCommand(Of TResult).HystrixCompletionSource.Exception
  fullName.vb: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand(Of TResult).HystrixCompletionSource.Exception
- uid: System.Exception
  commentId: T:System.Exception
  parent: System
  isExternal: true
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.HystrixCompletionSource.Task*
  commentId: Overload:Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.HystrixCompletionSource.Task
  name: Task
  nameWithType: AbstractCommand<TResult>.HystrixCompletionSource.Task
  fullName: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand<TResult>.HystrixCompletionSource.Task
  nameWithType.vb: AbstractCommand(Of TResult).HystrixCompletionSource.Task
  fullName.vb: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand(Of TResult).HystrixCompletionSource.Task
- uid: System.Threading.Tasks.Task{{TResult}}
  commentId: T:System.Threading.Tasks.Task{`0}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.HystrixCompletionSource.Result*
  commentId: Overload:Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.HystrixCompletionSource.Result
  name: Result
  nameWithType: AbstractCommand<TResult>.HystrixCompletionSource.Result
  fullName: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand<TResult>.HystrixCompletionSource.Result
  nameWithType.vb: AbstractCommand(Of TResult).HystrixCompletionSource.Result
  fullName.vb: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand(Of TResult).HystrixCompletionSource.Result
- uid: '{TResult}'
  commentId: '!:TResult'
  definition: TResult
  name: TResult
  nameWithType: TResult
  fullName: TResult
- uid: TResult
  name: TResult
  nameWithType: TResult
  fullName: TResult
