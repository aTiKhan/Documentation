### YamlMime:ManagedReference
items:
- uid: Steeltoe.Discovery.Consul.Registry.ConsulServiceRegistry
  commentId: T:Steeltoe.Discovery.Consul.Registry.ConsulServiceRegistry
  id: ConsulServiceRegistry
  parent: Steeltoe.Discovery.Consul.Registry
  children:
  - Steeltoe.Discovery.Consul.Registry.ConsulServiceRegistry.#ctor(IConsulClient,IOptionsMonitor{Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions},Steeltoe.Discovery.Consul.Discovery.IScheduler,ILogger{Steeltoe.Discovery.Consul.Registry.ConsulServiceRegistry})
  - Steeltoe.Discovery.Consul.Registry.ConsulServiceRegistry.#ctor(IConsulClient,Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions,Steeltoe.Discovery.Consul.Discovery.IScheduler,ILogger{Steeltoe.Discovery.Consul.Registry.ConsulServiceRegistry})
  - Steeltoe.Discovery.Consul.Registry.ConsulServiceRegistry.Deregister(Steeltoe.Discovery.Consul.Registry.IConsulRegistration)
  - Steeltoe.Discovery.Consul.Registry.ConsulServiceRegistry.DeregisterAsync(Steeltoe.Discovery.Consul.Registry.IConsulRegistration)
  - Steeltoe.Discovery.Consul.Registry.ConsulServiceRegistry.Dispose
  - Steeltoe.Discovery.Consul.Registry.ConsulServiceRegistry.Dispose(System.Boolean)
  - Steeltoe.Discovery.Consul.Registry.ConsulServiceRegistry.Finalize
  - Steeltoe.Discovery.Consul.Registry.ConsulServiceRegistry.GetStatus``1(Steeltoe.Discovery.Consul.Registry.IConsulRegistration)
  - Steeltoe.Discovery.Consul.Registry.ConsulServiceRegistry.GetStatusAsync(Steeltoe.Discovery.Consul.Registry.IConsulRegistration)
  - Steeltoe.Discovery.Consul.Registry.ConsulServiceRegistry.GetStatusAsyncInternal(Steeltoe.Discovery.Consul.Registry.IConsulRegistration)
  - Steeltoe.Discovery.Consul.Registry.ConsulServiceRegistry.Register(Steeltoe.Discovery.Consul.Registry.IConsulRegistration)
  - Steeltoe.Discovery.Consul.Registry.ConsulServiceRegistry.RegisterAsync(Steeltoe.Discovery.Consul.Registry.IConsulRegistration)
  - Steeltoe.Discovery.Consul.Registry.ConsulServiceRegistry.SetStatus(Steeltoe.Discovery.Consul.Registry.IConsulRegistration,System.String)
  - Steeltoe.Discovery.Consul.Registry.ConsulServiceRegistry.SetStatusAsync(Steeltoe.Discovery.Consul.Registry.IConsulRegistration,System.String)
  langs:
  - csharp
  - vb
  name: ConsulServiceRegistry
  nameWithType: ConsulServiceRegistry
  fullName: Steeltoe.Discovery.Consul.Registry.ConsulServiceRegistry
  type: Class
  source:
    remote:
      path: src/Discovery/src/Consul/Registry/ConsulServiceRegistry.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: ConsulServiceRegistry
    path: ../Steeltoe/src/Discovery/src/Consul/Registry/ConsulServiceRegistry.cs
    startLine: 16
  assemblies:
  - Steeltoe.Discovery.Consul
  namespace: Steeltoe.Discovery.Consul.Registry
  summary: "\nAn implementation of a Consul service registry\n"
  example: []
  syntax:
    content: 'public class ConsulServiceRegistry : IConsulServiceRegistry, IServiceRegistry<IConsulRegistration>'
    content.vb: >-
      Public Class ConsulServiceRegistry

          Implements IConsulServiceRegistry, IServiceRegistry(Of IConsulRegistration)
  inheritance:
  - System.Object
  implements:
  - Steeltoe.Discovery.Consul.Registry.IConsulServiceRegistry
  - IServiceRegistry{Steeltoe.Discovery.Consul.Registry.IConsulRegistration}
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Steeltoe.Discovery.Consul.Registry.ConsulServiceRegistry.#ctor(IConsulClient,Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions,Steeltoe.Discovery.Consul.Discovery.IScheduler,ILogger{Steeltoe.Discovery.Consul.Registry.ConsulServiceRegistry})
  commentId: M:Steeltoe.Discovery.Consul.Registry.ConsulServiceRegistry.#ctor(IConsulClient,Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions,Steeltoe.Discovery.Consul.Discovery.IScheduler,ILogger{Steeltoe.Discovery.Consul.Registry.ConsulServiceRegistry})
  id: '#ctor(IConsulClient,Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions,Steeltoe.Discovery.Consul.Discovery.IScheduler,ILogger{Steeltoe.Discovery.Consul.Registry.ConsulServiceRegistry})'
  parent: Steeltoe.Discovery.Consul.Registry.ConsulServiceRegistry
  langs:
  - csharp
  - vb
  name: ConsulServiceRegistry(IConsulClient, ConsulDiscoveryOptions, IScheduler, ILogger<ConsulServiceRegistry>)
  nameWithType: ConsulServiceRegistry.ConsulServiceRegistry(IConsulClient, ConsulDiscoveryOptions, IScheduler, ILogger<ConsulServiceRegistry>)
  fullName: Steeltoe.Discovery.Consul.Registry.ConsulServiceRegistry.ConsulServiceRegistry(IConsulClient, Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions, Steeltoe.Discovery.Consul.Discovery.IScheduler, ILogger<Steeltoe.Discovery.Consul.Registry.ConsulServiceRegistry>)
  type: Constructor
  source:
    remote:
      path: src/Discovery/src/Consul/Registry/ConsulServiceRegistry.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: .ctor
    path: ../Steeltoe/src/Discovery/src/Consul/Registry/ConsulServiceRegistry.cs
    startLine: 52
  assemblies:
  - Steeltoe.Discovery.Consul
  namespace: Steeltoe.Discovery.Consul.Registry
  summary: "\nInitializes a new instance of the <xref href=\"Steeltoe.Discovery.Consul.Registry.ConsulServiceRegistry\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  example: []
  syntax:
    content: public ConsulServiceRegistry(IConsulClient client, ConsulDiscoveryOptions options, IScheduler scheduler = null, ILogger<ConsulServiceRegistry> logger = null)
    parameters:
    - id: client
      type: IConsulClient
      description: the Consul client to use
    - id: options
      type: Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions
      description: the configuration options
    - id: scheduler
      type: Steeltoe.Discovery.Consul.Discovery.IScheduler
      description: a scheduler to use for heart beats
    - id: logger
      type: ILogger{Steeltoe.Discovery.Consul.Registry.ConsulServiceRegistry}
      description: an optional logger
    content.vb: Public Sub New(client As IConsulClient, options As ConsulDiscoveryOptions, scheduler As IScheduler = Nothing, logger As ILogger(Of ConsulServiceRegistry) = Nothing)
  overload: Steeltoe.Discovery.Consul.Registry.ConsulServiceRegistry.#ctor*
  nameWithType.vb: ConsulServiceRegistry.ConsulServiceRegistry(IConsulClient, ConsulDiscoveryOptions, IScheduler, ILogger(Of ConsulServiceRegistry))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Steeltoe.Discovery.Consul.Registry.ConsulServiceRegistry.ConsulServiceRegistry(IConsulClient, Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions, Steeltoe.Discovery.Consul.Discovery.IScheduler, ILogger(Of Steeltoe.Discovery.Consul.Registry.ConsulServiceRegistry))
  name.vb: ConsulServiceRegistry(IConsulClient, ConsulDiscoveryOptions, IScheduler, ILogger(Of ConsulServiceRegistry))
- uid: Steeltoe.Discovery.Consul.Registry.ConsulServiceRegistry.#ctor(IConsulClient,IOptionsMonitor{Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions},Steeltoe.Discovery.Consul.Discovery.IScheduler,ILogger{Steeltoe.Discovery.Consul.Registry.ConsulServiceRegistry})
  commentId: M:Steeltoe.Discovery.Consul.Registry.ConsulServiceRegistry.#ctor(IConsulClient,IOptionsMonitor{Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions},Steeltoe.Discovery.Consul.Discovery.IScheduler,ILogger{Steeltoe.Discovery.Consul.Registry.ConsulServiceRegistry})
  id: '#ctor(IConsulClient,IOptionsMonitor{Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions},Steeltoe.Discovery.Consul.Discovery.IScheduler,ILogger{Steeltoe.Discovery.Consul.Registry.ConsulServiceRegistry})'
  parent: Steeltoe.Discovery.Consul.Registry.ConsulServiceRegistry
  langs:
  - csharp
  - vb
  name: ConsulServiceRegistry(IConsulClient, IOptionsMonitor<ConsulDiscoveryOptions>, IScheduler, ILogger<ConsulServiceRegistry>)
  nameWithType: ConsulServiceRegistry.ConsulServiceRegistry(IConsulClient, IOptionsMonitor<ConsulDiscoveryOptions>, IScheduler, ILogger<ConsulServiceRegistry>)
  fullName: Steeltoe.Discovery.Consul.Registry.ConsulServiceRegistry.ConsulServiceRegistry(IConsulClient, IOptionsMonitor<Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions>, Steeltoe.Discovery.Consul.Discovery.IScheduler, ILogger<Steeltoe.Discovery.Consul.Registry.ConsulServiceRegistry>)
  type: Constructor
  source:
    remote:
      path: src/Discovery/src/Consul/Registry/ConsulServiceRegistry.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: .ctor
    path: ../Steeltoe/src/Discovery/src/Consul/Registry/ConsulServiceRegistry.cs
    startLine: 67
  assemblies:
  - Steeltoe.Discovery.Consul
  namespace: Steeltoe.Discovery.Consul.Registry
  summary: "\nInitializes a new instance of the <xref href=\"Steeltoe.Discovery.Consul.Registry.ConsulServiceRegistry\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  example: []
  syntax:
    content: public ConsulServiceRegistry(IConsulClient client, IOptionsMonitor<ConsulDiscoveryOptions> optionsMonitor, IScheduler scheduler = null, ILogger<ConsulServiceRegistry> logger = null)
    parameters:
    - id: client
      type: IConsulClient
      description: the Consul client to use
    - id: optionsMonitor
      type: IOptionsMonitor{Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions}
      description: the configuration options
    - id: scheduler
      type: Steeltoe.Discovery.Consul.Discovery.IScheduler
      description: a scheduler to use for heart beats
    - id: logger
      type: ILogger{Steeltoe.Discovery.Consul.Registry.ConsulServiceRegistry}
      description: an optional logger
    content.vb: Public Sub New(client As IConsulClient, optionsMonitor As IOptionsMonitor(Of ConsulDiscoveryOptions), scheduler As IScheduler = Nothing, logger As ILogger(Of ConsulServiceRegistry) = Nothing)
  overload: Steeltoe.Discovery.Consul.Registry.ConsulServiceRegistry.#ctor*
  nameWithType.vb: ConsulServiceRegistry.ConsulServiceRegistry(IConsulClient, IOptionsMonitor(Of ConsulDiscoveryOptions), IScheduler, ILogger(Of ConsulServiceRegistry))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Steeltoe.Discovery.Consul.Registry.ConsulServiceRegistry.ConsulServiceRegistry(IConsulClient, IOptionsMonitor(Of Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions), Steeltoe.Discovery.Consul.Discovery.IScheduler, ILogger(Of Steeltoe.Discovery.Consul.Registry.ConsulServiceRegistry))
  name.vb: ConsulServiceRegistry(IConsulClient, IOptionsMonitor(Of ConsulDiscoveryOptions), IScheduler, ILogger(Of ConsulServiceRegistry))
- uid: Steeltoe.Discovery.Consul.Registry.ConsulServiceRegistry.RegisterAsync(Steeltoe.Discovery.Consul.Registry.IConsulRegistration)
  commentId: M:Steeltoe.Discovery.Consul.Registry.ConsulServiceRegistry.RegisterAsync(Steeltoe.Discovery.Consul.Registry.IConsulRegistration)
  id: RegisterAsync(Steeltoe.Discovery.Consul.Registry.IConsulRegistration)
  parent: Steeltoe.Discovery.Consul.Registry.ConsulServiceRegistry
  langs:
  - csharp
  - vb
  name: RegisterAsync(IConsulRegistration)
  nameWithType: ConsulServiceRegistry.RegisterAsync(IConsulRegistration)
  fullName: Steeltoe.Discovery.Consul.Registry.ConsulServiceRegistry.RegisterAsync(Steeltoe.Discovery.Consul.Registry.IConsulRegistration)
  type: Method
  source:
    remote:
      path: src/Discovery/src/Consul/Registry/ConsulServiceRegistry.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: RegisterAsync
    path: ../Steeltoe/src/Discovery/src/Consul/Registry/ConsulServiceRegistry.cs
    startLine: 76
  assemblies:
  - Steeltoe.Discovery.Consul
  namespace: Steeltoe.Discovery.Consul.Registry
  example: []
  syntax:
    content: public Task RegisterAsync(IConsulRegistration registration)
    parameters:
    - id: registration
      type: Steeltoe.Discovery.Consul.Registry.IConsulRegistration
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function RegisterAsync(registration As IConsulRegistration) As Task
  overload: Steeltoe.Discovery.Consul.Registry.ConsulServiceRegistry.RegisterAsync*
  implements:
  - Steeltoe.Discovery.Consul.Registry.IConsulServiceRegistry.RegisterAsync(Steeltoe.Discovery.Consul.Registry.IConsulRegistration)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Steeltoe.Discovery.Consul.Registry.ConsulServiceRegistry.DeregisterAsync(Steeltoe.Discovery.Consul.Registry.IConsulRegistration)
  commentId: M:Steeltoe.Discovery.Consul.Registry.ConsulServiceRegistry.DeregisterAsync(Steeltoe.Discovery.Consul.Registry.IConsulRegistration)
  id: DeregisterAsync(Steeltoe.Discovery.Consul.Registry.IConsulRegistration)
  parent: Steeltoe.Discovery.Consul.Registry.ConsulServiceRegistry
  langs:
  - csharp
  - vb
  name: DeregisterAsync(IConsulRegistration)
  nameWithType: ConsulServiceRegistry.DeregisterAsync(IConsulRegistration)
  fullName: Steeltoe.Discovery.Consul.Registry.ConsulServiceRegistry.DeregisterAsync(Steeltoe.Discovery.Consul.Registry.IConsulRegistration)
  type: Method
  source:
    remote:
      path: src/Discovery/src/Consul/Registry/ConsulServiceRegistry.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: DeregisterAsync
    path: ../Steeltoe/src/Discovery/src/Consul/Registry/ConsulServiceRegistry.cs
    startLine: 112
  assemblies:
  - Steeltoe.Discovery.Consul
  namespace: Steeltoe.Discovery.Consul.Registry
  example: []
  syntax:
    content: public Task DeregisterAsync(IConsulRegistration registration)
    parameters:
    - id: registration
      type: Steeltoe.Discovery.Consul.Registry.IConsulRegistration
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function DeregisterAsync(registration As IConsulRegistration) As Task
  overload: Steeltoe.Discovery.Consul.Registry.ConsulServiceRegistry.DeregisterAsync*
  implements:
  - Steeltoe.Discovery.Consul.Registry.IConsulServiceRegistry.DeregisterAsync(Steeltoe.Discovery.Consul.Registry.IConsulRegistration)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Steeltoe.Discovery.Consul.Registry.ConsulServiceRegistry.SetStatusAsync(Steeltoe.Discovery.Consul.Registry.IConsulRegistration,System.String)
  commentId: M:Steeltoe.Discovery.Consul.Registry.ConsulServiceRegistry.SetStatusAsync(Steeltoe.Discovery.Consul.Registry.IConsulRegistration,System.String)
  id: SetStatusAsync(Steeltoe.Discovery.Consul.Registry.IConsulRegistration,System.String)
  parent: Steeltoe.Discovery.Consul.Registry.ConsulServiceRegistry
  langs:
  - csharp
  - vb
  name: SetStatusAsync(IConsulRegistration, String)
  nameWithType: ConsulServiceRegistry.SetStatusAsync(IConsulRegistration, String)
  fullName: Steeltoe.Discovery.Consul.Registry.ConsulServiceRegistry.SetStatusAsync(Steeltoe.Discovery.Consul.Registry.IConsulRegistration, System.String)
  type: Method
  source:
    remote:
      path: src/Discovery/src/Consul/Registry/ConsulServiceRegistry.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: SetStatusAsync
    path: ../Steeltoe/src/Discovery/src/Consul/Registry/ConsulServiceRegistry.cs
    startLine: 135
  assemblies:
  - Steeltoe.Discovery.Consul
  namespace: Steeltoe.Discovery.Consul.Registry
  example: []
  syntax:
    content: public Task SetStatusAsync(IConsulRegistration registration, string status)
    parameters:
    - id: registration
      type: Steeltoe.Discovery.Consul.Registry.IConsulRegistration
    - id: status
      type: System.String
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function SetStatusAsync(registration As IConsulRegistration, status As String) As Task
  overload: Steeltoe.Discovery.Consul.Registry.ConsulServiceRegistry.SetStatusAsync*
  implements:
  - Steeltoe.Discovery.Consul.Registry.IConsulServiceRegistry.SetStatusAsync(Steeltoe.Discovery.Consul.Registry.IConsulRegistration,System.String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Steeltoe.Discovery.Consul.Registry.ConsulServiceRegistry.GetStatusAsync(Steeltoe.Discovery.Consul.Registry.IConsulRegistration)
  commentId: M:Steeltoe.Discovery.Consul.Registry.ConsulServiceRegistry.GetStatusAsync(Steeltoe.Discovery.Consul.Registry.IConsulRegistration)
  id: GetStatusAsync(Steeltoe.Discovery.Consul.Registry.IConsulRegistration)
  parent: Steeltoe.Discovery.Consul.Registry.ConsulServiceRegistry
  langs:
  - csharp
  - vb
  name: GetStatusAsync(IConsulRegistration)
  nameWithType: ConsulServiceRegistry.GetStatusAsync(IConsulRegistration)
  fullName: Steeltoe.Discovery.Consul.Registry.ConsulServiceRegistry.GetStatusAsync(Steeltoe.Discovery.Consul.Registry.IConsulRegistration)
  type: Method
  source:
    remote:
      path: src/Discovery/src/Consul/Registry/ConsulServiceRegistry.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: GetStatusAsync
    path: ../Steeltoe/src/Discovery/src/Consul/Registry/ConsulServiceRegistry.cs
    startLine: 161
  assemblies:
  - Steeltoe.Discovery.Consul
  namespace: Steeltoe.Discovery.Consul.Registry
  example: []
  syntax:
    content: public Task<object> GetStatusAsync(IConsulRegistration registration)
    parameters:
    - id: registration
      type: Steeltoe.Discovery.Consul.Registry.IConsulRegistration
    return:
      type: System.Threading.Tasks.Task{System.Object}
    content.vb: Public Function GetStatusAsync(registration As IConsulRegistration) As Task(Of Object)
  overload: Steeltoe.Discovery.Consul.Registry.ConsulServiceRegistry.GetStatusAsync*
  implements:
  - Steeltoe.Discovery.Consul.Registry.IConsulServiceRegistry.GetStatusAsync(Steeltoe.Discovery.Consul.Registry.IConsulRegistration)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Steeltoe.Discovery.Consul.Registry.ConsulServiceRegistry.GetStatusAsyncInternal(Steeltoe.Discovery.Consul.Registry.IConsulRegistration)
  commentId: M:Steeltoe.Discovery.Consul.Registry.ConsulServiceRegistry.GetStatusAsyncInternal(Steeltoe.Discovery.Consul.Registry.IConsulRegistration)
  id: GetStatusAsyncInternal(Steeltoe.Discovery.Consul.Registry.IConsulRegistration)
  parent: Steeltoe.Discovery.Consul.Registry.ConsulServiceRegistry
  langs:
  - csharp
  - vb
  name: GetStatusAsyncInternal(IConsulRegistration)
  nameWithType: ConsulServiceRegistry.GetStatusAsyncInternal(IConsulRegistration)
  fullName: Steeltoe.Discovery.Consul.Registry.ConsulServiceRegistry.GetStatusAsyncInternal(Steeltoe.Discovery.Consul.Registry.IConsulRegistration)
  type: Method
  source:
    remote:
      path: src/Discovery/src/Consul/Registry/ConsulServiceRegistry.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: GetStatusAsyncInternal
    path: ../Steeltoe/src/Discovery/src/Consul/Registry/ConsulServiceRegistry.cs
    startLine: 171
  assemblies:
  - Steeltoe.Discovery.Consul
  namespace: Steeltoe.Discovery.Consul.Registry
  syntax:
    content: public Task<object> GetStatusAsyncInternal(IConsulRegistration registration)
    parameters:
    - id: registration
      type: Steeltoe.Discovery.Consul.Registry.IConsulRegistration
    return:
      type: System.Threading.Tasks.Task{System.Object}
    content.vb: Public Function GetStatusAsyncInternal(registration As IConsulRegistration) As Task(Of Object)
  overload: Steeltoe.Discovery.Consul.Registry.ConsulServiceRegistry.GetStatusAsyncInternal*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Steeltoe.Discovery.Consul.Registry.ConsulServiceRegistry.Register(Steeltoe.Discovery.Consul.Registry.IConsulRegistration)
  commentId: M:Steeltoe.Discovery.Consul.Registry.ConsulServiceRegistry.Register(Steeltoe.Discovery.Consul.Registry.IConsulRegistration)
  id: Register(Steeltoe.Discovery.Consul.Registry.IConsulRegistration)
  parent: Steeltoe.Discovery.Consul.Registry.ConsulServiceRegistry
  langs:
  - csharp
  - vb
  name: Register(IConsulRegistration)
  nameWithType: ConsulServiceRegistry.Register(IConsulRegistration)
  fullName: Steeltoe.Discovery.Consul.Registry.ConsulServiceRegistry.Register(Steeltoe.Discovery.Consul.Registry.IConsulRegistration)
  type: Method
  source:
    remote:
      path: src/Discovery/src/Consul/Registry/ConsulServiceRegistry.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Register
    path: ../Steeltoe/src/Discovery/src/Consul/Registry/ConsulServiceRegistry.cs
    startLine: 189
  assemblies:
  - Steeltoe.Discovery.Consul
  namespace: Steeltoe.Discovery.Consul.Registry
  example: []
  syntax:
    content: public void Register(IConsulRegistration registration)
    parameters:
    - id: registration
      type: Steeltoe.Discovery.Consul.Registry.IConsulRegistration
    content.vb: Public Sub Register(registration As IConsulRegistration)
  overload: Steeltoe.Discovery.Consul.Registry.ConsulServiceRegistry.Register*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Steeltoe.Discovery.Consul.Registry.ConsulServiceRegistry.Deregister(Steeltoe.Discovery.Consul.Registry.IConsulRegistration)
  commentId: M:Steeltoe.Discovery.Consul.Registry.ConsulServiceRegistry.Deregister(Steeltoe.Discovery.Consul.Registry.IConsulRegistration)
  id: Deregister(Steeltoe.Discovery.Consul.Registry.IConsulRegistration)
  parent: Steeltoe.Discovery.Consul.Registry.ConsulServiceRegistry
  langs:
  - csharp
  - vb
  name: Deregister(IConsulRegistration)
  nameWithType: ConsulServiceRegistry.Deregister(IConsulRegistration)
  fullName: Steeltoe.Discovery.Consul.Registry.ConsulServiceRegistry.Deregister(Steeltoe.Discovery.Consul.Registry.IConsulRegistration)
  type: Method
  source:
    remote:
      path: src/Discovery/src/Consul/Registry/ConsulServiceRegistry.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Deregister
    path: ../Steeltoe/src/Discovery/src/Consul/Registry/ConsulServiceRegistry.cs
    startLine: 195
  assemblies:
  - Steeltoe.Discovery.Consul
  namespace: Steeltoe.Discovery.Consul.Registry
  example: []
  syntax:
    content: public void Deregister(IConsulRegistration registration)
    parameters:
    - id: registration
      type: Steeltoe.Discovery.Consul.Registry.IConsulRegistration
    content.vb: Public Sub Deregister(registration As IConsulRegistration)
  overload: Steeltoe.Discovery.Consul.Registry.ConsulServiceRegistry.Deregister*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Steeltoe.Discovery.Consul.Registry.ConsulServiceRegistry.SetStatus(Steeltoe.Discovery.Consul.Registry.IConsulRegistration,System.String)
  commentId: M:Steeltoe.Discovery.Consul.Registry.ConsulServiceRegistry.SetStatus(Steeltoe.Discovery.Consul.Registry.IConsulRegistration,System.String)
  id: SetStatus(Steeltoe.Discovery.Consul.Registry.IConsulRegistration,System.String)
  parent: Steeltoe.Discovery.Consul.Registry.ConsulServiceRegistry
  langs:
  - csharp
  - vb
  name: SetStatus(IConsulRegistration, String)
  nameWithType: ConsulServiceRegistry.SetStatus(IConsulRegistration, String)
  fullName: Steeltoe.Discovery.Consul.Registry.ConsulServiceRegistry.SetStatus(Steeltoe.Discovery.Consul.Registry.IConsulRegistration, System.String)
  type: Method
  source:
    remote:
      path: src/Discovery/src/Consul/Registry/ConsulServiceRegistry.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: SetStatus
    path: ../Steeltoe/src/Discovery/src/Consul/Registry/ConsulServiceRegistry.cs
    startLine: 201
  assemblies:
  - Steeltoe.Discovery.Consul
  namespace: Steeltoe.Discovery.Consul.Registry
  example: []
  syntax:
    content: public void SetStatus(IConsulRegistration registration, string status)
    parameters:
    - id: registration
      type: Steeltoe.Discovery.Consul.Registry.IConsulRegistration
    - id: status
      type: System.String
    content.vb: Public Sub SetStatus(registration As IConsulRegistration, status As String)
  overload: Steeltoe.Discovery.Consul.Registry.ConsulServiceRegistry.SetStatus*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Steeltoe.Discovery.Consul.Registry.ConsulServiceRegistry.GetStatus``1(Steeltoe.Discovery.Consul.Registry.IConsulRegistration)
  commentId: M:Steeltoe.Discovery.Consul.Registry.ConsulServiceRegistry.GetStatus``1(Steeltoe.Discovery.Consul.Registry.IConsulRegistration)
  id: GetStatus``1(Steeltoe.Discovery.Consul.Registry.IConsulRegistration)
  parent: Steeltoe.Discovery.Consul.Registry.ConsulServiceRegistry
  langs:
  - csharp
  - vb
  name: GetStatus<S>(IConsulRegistration)
  nameWithType: ConsulServiceRegistry.GetStatus<S>(IConsulRegistration)
  fullName: Steeltoe.Discovery.Consul.Registry.ConsulServiceRegistry.GetStatus<S>(Steeltoe.Discovery.Consul.Registry.IConsulRegistration)
  type: Method
  source:
    remote:
      path: src/Discovery/src/Consul/Registry/ConsulServiceRegistry.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: GetStatus
    path: ../Steeltoe/src/Discovery/src/Consul/Registry/ConsulServiceRegistry.cs
    startLine: 207
  assemblies:
  - Steeltoe.Discovery.Consul
  namespace: Steeltoe.Discovery.Consul.Registry
  example: []
  syntax:
    content: >-
      public S GetStatus<S>(IConsulRegistration registration)

          where S : class
    parameters:
    - id: registration
      type: Steeltoe.Discovery.Consul.Registry.IConsulRegistration
    typeParameters:
    - id: S
    return:
      type: '{S}'
    content.vb: Public Function GetStatus(Of S As Class)(registration As IConsulRegistration) As S
  overload: Steeltoe.Discovery.Consul.Registry.ConsulServiceRegistry.GetStatus*
  nameWithType.vb: ConsulServiceRegistry.GetStatus(Of S)(IConsulRegistration)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Steeltoe.Discovery.Consul.Registry.ConsulServiceRegistry.GetStatus(Of S)(Steeltoe.Discovery.Consul.Registry.IConsulRegistration)
  name.vb: GetStatus(Of S)(IConsulRegistration)
- uid: Steeltoe.Discovery.Consul.Registry.ConsulServiceRegistry.Dispose
  commentId: M:Steeltoe.Discovery.Consul.Registry.ConsulServiceRegistry.Dispose
  id: Dispose
  parent: Steeltoe.Discovery.Consul.Registry.ConsulServiceRegistry
  langs:
  - csharp
  - vb
  name: Dispose()
  nameWithType: ConsulServiceRegistry.Dispose()
  fullName: Steeltoe.Discovery.Consul.Registry.ConsulServiceRegistry.Dispose()
  type: Method
  source:
    remote:
      path: src/Discovery/src/Consul/Registry/ConsulServiceRegistry.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Dispose
    path: ../Steeltoe/src/Discovery/src/Consul/Registry/ConsulServiceRegistry.cs
    startLine: 218
  assemblies:
  - Steeltoe.Discovery.Consul
  namespace: Steeltoe.Discovery.Consul.Registry
  example: []
  syntax:
    content: public void Dispose()
    content.vb: Public Sub Dispose
  overload: Steeltoe.Discovery.Consul.Registry.ConsulServiceRegistry.Dispose*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Steeltoe.Discovery.Consul.Registry.ConsulServiceRegistry.Dispose(System.Boolean)
  commentId: M:Steeltoe.Discovery.Consul.Registry.ConsulServiceRegistry.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: Steeltoe.Discovery.Consul.Registry.ConsulServiceRegistry
  langs:
  - csharp
  - vb
  name: Dispose(Boolean)
  nameWithType: ConsulServiceRegistry.Dispose(Boolean)
  fullName: Steeltoe.Discovery.Consul.Registry.ConsulServiceRegistry.Dispose(System.Boolean)
  type: Method
  source:
    remote:
      path: src/Discovery/src/Consul/Registry/ConsulServiceRegistry.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Dispose
    path: ../Steeltoe/src/Discovery/src/Consul/Registry/ConsulServiceRegistry.cs
    startLine: 224
  assemblies:
  - Steeltoe.Discovery.Consul
  namespace: Steeltoe.Discovery.Consul.Registry
  syntax:
    content: protected virtual void Dispose(bool disposing)
    parameters:
    - id: disposing
      type: System.Boolean
    content.vb: Protected Overridable Sub Dispose(disposing As Boolean)
  overload: Steeltoe.Discovery.Consul.Registry.ConsulServiceRegistry.Dispose*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: Steeltoe.Discovery.Consul.Registry.ConsulServiceRegistry.Finalize
  commentId: M:Steeltoe.Discovery.Consul.Registry.ConsulServiceRegistry.Finalize
  id: Finalize
  parent: Steeltoe.Discovery.Consul.Registry.ConsulServiceRegistry
  langs:
  - csharp
  - vb
  name: Finalize()
  nameWithType: ConsulServiceRegistry.Finalize()
  fullName: Steeltoe.Discovery.Consul.Registry.ConsulServiceRegistry.Finalize()
  type: Method
  source:
    remote:
      path: src/Discovery/src/Consul/Registry/ConsulServiceRegistry.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Finalize
    path: ../Steeltoe/src/Discovery/src/Consul/Registry/ConsulServiceRegistry.cs
    startLine: 238
  assemblies:
  - Steeltoe.Discovery.Consul
  namespace: Steeltoe.Discovery.Consul.Registry
  syntax:
    content: protected void Finalize()
    content.vb: Protected Sub Finalize
  overload: Steeltoe.Discovery.Consul.Registry.ConsulServiceRegistry.Finalize*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
references:
- uid: Steeltoe.Discovery.Consul.Registry
  commentId: N:Steeltoe.Discovery.Consul.Registry
  name: Steeltoe.Discovery.Consul.Registry
  nameWithType: Steeltoe.Discovery.Consul.Registry
  fullName: Steeltoe.Discovery.Consul.Registry
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Steeltoe.Discovery.Consul.Registry.IConsulServiceRegistry
  commentId: T:Steeltoe.Discovery.Consul.Registry.IConsulServiceRegistry
  parent: Steeltoe.Discovery.Consul.Registry
  name: IConsulServiceRegistry
  nameWithType: IConsulServiceRegistry
  fullName: Steeltoe.Discovery.Consul.Registry.IConsulServiceRegistry
- uid: IServiceRegistry{Steeltoe.Discovery.Consul.Registry.IConsulRegistration}
  commentId: '!:IServiceRegistry{Steeltoe.Discovery.Consul.Registry.IConsulRegistration}'
  definition: IServiceRegistry`1
  name: IServiceRegistry<IConsulRegistration>
  nameWithType: IServiceRegistry<IConsulRegistration>
  fullName: IServiceRegistry<Steeltoe.Discovery.Consul.Registry.IConsulRegistration>
  nameWithType.vb: IServiceRegistry(Of IConsulRegistration)
  fullName.vb: IServiceRegistry(Of Steeltoe.Discovery.Consul.Registry.IConsulRegistration)
  name.vb: IServiceRegistry(Of IConsulRegistration)
  spec.csharp:
  - uid: IServiceRegistry`1
    name: IServiceRegistry
    nameWithType: IServiceRegistry
    fullName: IServiceRegistry
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Steeltoe.Discovery.Consul.Registry.IConsulRegistration
    name: IConsulRegistration
    nameWithType: IConsulRegistration
    fullName: Steeltoe.Discovery.Consul.Registry.IConsulRegistration
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IServiceRegistry`1
    name: IServiceRegistry
    nameWithType: IServiceRegistry
    fullName: IServiceRegistry
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Steeltoe.Discovery.Consul.Registry.IConsulRegistration
    name: IConsulRegistration
    nameWithType: IConsulRegistration
    fullName: Steeltoe.Discovery.Consul.Registry.IConsulRegistration
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: IServiceRegistry`1
  commentId: '!:IServiceRegistry`1'
  isExternal: true
  name: IServiceRegistry<>
  nameWithType: IServiceRegistry<>
  fullName: IServiceRegistry<>
  nameWithType.vb: IServiceRegistry(Of )
  fullName.vb: IServiceRegistry(Of )
  name.vb: IServiceRegistry(Of )
  spec.csharp:
  - uid: IServiceRegistry`1
    name: IServiceRegistry
    nameWithType: IServiceRegistry
    fullName: IServiceRegistry
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IServiceRegistry`1
    name: IServiceRegistry
    nameWithType: IServiceRegistry
    fullName: IServiceRegistry
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Discovery.Consul.Registry.ConsulServiceRegistry
  commentId: T:Steeltoe.Discovery.Consul.Registry.ConsulServiceRegistry
  name: ConsulServiceRegistry
  nameWithType: ConsulServiceRegistry
  fullName: Steeltoe.Discovery.Consul.Registry.ConsulServiceRegistry
- uid: Steeltoe.Discovery.Consul.Registry.ConsulServiceRegistry.#ctor*
  commentId: Overload:Steeltoe.Discovery.Consul.Registry.ConsulServiceRegistry.#ctor
  name: ConsulServiceRegistry
  nameWithType: ConsulServiceRegistry.ConsulServiceRegistry
  fullName: Steeltoe.Discovery.Consul.Registry.ConsulServiceRegistry.ConsulServiceRegistry
- uid: IConsulClient
  isExternal: true
  name: IConsulClient
  nameWithType: IConsulClient
  fullName: IConsulClient
- uid: Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions
  commentId: T:Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions
  parent: Steeltoe.Discovery.Consul.Discovery
  name: ConsulDiscoveryOptions
  nameWithType: ConsulDiscoveryOptions
  fullName: Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions
- uid: Steeltoe.Discovery.Consul.Discovery.IScheduler
  commentId: T:Steeltoe.Discovery.Consul.Discovery.IScheduler
  parent: Steeltoe.Discovery.Consul.Discovery
  name: IScheduler
  nameWithType: IScheduler
  fullName: Steeltoe.Discovery.Consul.Discovery.IScheduler
- uid: ILogger{Steeltoe.Discovery.Consul.Registry.ConsulServiceRegistry}
  commentId: '!:ILogger{Steeltoe.Discovery.Consul.Registry.ConsulServiceRegistry}'
  definition: ILogger`1
  name: ILogger<ConsulServiceRegistry>
  nameWithType: ILogger<ConsulServiceRegistry>
  fullName: ILogger<Steeltoe.Discovery.Consul.Registry.ConsulServiceRegistry>
  nameWithType.vb: ILogger(Of ConsulServiceRegistry)
  fullName.vb: ILogger(Of Steeltoe.Discovery.Consul.Registry.ConsulServiceRegistry)
  name.vb: ILogger(Of ConsulServiceRegistry)
  spec.csharp:
  - uid: ILogger`1
    name: ILogger
    nameWithType: ILogger
    fullName: ILogger
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Steeltoe.Discovery.Consul.Registry.ConsulServiceRegistry
    name: ConsulServiceRegistry
    nameWithType: ConsulServiceRegistry
    fullName: Steeltoe.Discovery.Consul.Registry.ConsulServiceRegistry
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: ILogger`1
    name: ILogger
    nameWithType: ILogger
    fullName: ILogger
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Steeltoe.Discovery.Consul.Registry.ConsulServiceRegistry
    name: ConsulServiceRegistry
    nameWithType: ConsulServiceRegistry
    fullName: Steeltoe.Discovery.Consul.Registry.ConsulServiceRegistry
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Discovery.Consul.Discovery
  commentId: N:Steeltoe.Discovery.Consul.Discovery
  name: Steeltoe.Discovery.Consul.Discovery
  nameWithType: Steeltoe.Discovery.Consul.Discovery
  fullName: Steeltoe.Discovery.Consul.Discovery
- uid: ILogger`1
  isExternal: true
  name: ILogger<>
  nameWithType: ILogger<>
  fullName: ILogger<>
  nameWithType.vb: ILogger(Of )
  fullName.vb: ILogger(Of )
  name.vb: ILogger(Of )
  spec.csharp:
  - uid: ILogger`1
    name: ILogger
    nameWithType: ILogger
    fullName: ILogger
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: ILogger`1
    name: ILogger
    nameWithType: ILogger
    fullName: ILogger
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: IOptionsMonitor{Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions}
  commentId: '!:IOptionsMonitor{Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions}'
  definition: IOptionsMonitor`1
  name: IOptionsMonitor<ConsulDiscoveryOptions>
  nameWithType: IOptionsMonitor<ConsulDiscoveryOptions>
  fullName: IOptionsMonitor<Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions>
  nameWithType.vb: IOptionsMonitor(Of ConsulDiscoveryOptions)
  fullName.vb: IOptionsMonitor(Of Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions)
  name.vb: IOptionsMonitor(Of ConsulDiscoveryOptions)
  spec.csharp:
  - uid: IOptionsMonitor`1
    name: IOptionsMonitor
    nameWithType: IOptionsMonitor
    fullName: IOptionsMonitor
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions
    name: ConsulDiscoveryOptions
    nameWithType: ConsulDiscoveryOptions
    fullName: Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IOptionsMonitor`1
    name: IOptionsMonitor
    nameWithType: IOptionsMonitor
    fullName: IOptionsMonitor
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions
    name: ConsulDiscoveryOptions
    nameWithType: ConsulDiscoveryOptions
    fullName: Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions
  - name: )
    nameWithType: )
    fullName: )
- uid: IOptionsMonitor`1
  isExternal: true
  name: IOptionsMonitor<>
  nameWithType: IOptionsMonitor<>
  fullName: IOptionsMonitor<>
  nameWithType.vb: IOptionsMonitor(Of )
  fullName.vb: IOptionsMonitor(Of )
  name.vb: IOptionsMonitor(Of )
  spec.csharp:
  - uid: IOptionsMonitor`1
    name: IOptionsMonitor
    nameWithType: IOptionsMonitor
    fullName: IOptionsMonitor
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IOptionsMonitor`1
    name: IOptionsMonitor
    nameWithType: IOptionsMonitor
    fullName: IOptionsMonitor
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Discovery.Consul.Registry.ConsulServiceRegistry.RegisterAsync*
  commentId: Overload:Steeltoe.Discovery.Consul.Registry.ConsulServiceRegistry.RegisterAsync
  name: RegisterAsync
  nameWithType: ConsulServiceRegistry.RegisterAsync
  fullName: Steeltoe.Discovery.Consul.Registry.ConsulServiceRegistry.RegisterAsync
- uid: Steeltoe.Discovery.Consul.Registry.IConsulServiceRegistry.RegisterAsync(Steeltoe.Discovery.Consul.Registry.IConsulRegistration)
  commentId: M:Steeltoe.Discovery.Consul.Registry.IConsulServiceRegistry.RegisterAsync(Steeltoe.Discovery.Consul.Registry.IConsulRegistration)
  parent: Steeltoe.Discovery.Consul.Registry.IConsulServiceRegistry
  name: RegisterAsync(IConsulRegistration)
  nameWithType: IConsulServiceRegistry.RegisterAsync(IConsulRegistration)
  fullName: Steeltoe.Discovery.Consul.Registry.IConsulServiceRegistry.RegisterAsync(Steeltoe.Discovery.Consul.Registry.IConsulRegistration)
  spec.csharp:
  - uid: Steeltoe.Discovery.Consul.Registry.IConsulServiceRegistry.RegisterAsync(Steeltoe.Discovery.Consul.Registry.IConsulRegistration)
    name: RegisterAsync
    nameWithType: IConsulServiceRegistry.RegisterAsync
    fullName: Steeltoe.Discovery.Consul.Registry.IConsulServiceRegistry.RegisterAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Discovery.Consul.Registry.IConsulRegistration
    name: IConsulRegistration
    nameWithType: IConsulRegistration
    fullName: Steeltoe.Discovery.Consul.Registry.IConsulRegistration
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Discovery.Consul.Registry.IConsulServiceRegistry.RegisterAsync(Steeltoe.Discovery.Consul.Registry.IConsulRegistration)
    name: RegisterAsync
    nameWithType: IConsulServiceRegistry.RegisterAsync
    fullName: Steeltoe.Discovery.Consul.Registry.IConsulServiceRegistry.RegisterAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Discovery.Consul.Registry.IConsulRegistration
    name: IConsulRegistration
    nameWithType: IConsulRegistration
    fullName: Steeltoe.Discovery.Consul.Registry.IConsulRegistration
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Discovery.Consul.Registry.IConsulRegistration
  commentId: T:Steeltoe.Discovery.Consul.Registry.IConsulRegistration
  parent: Steeltoe.Discovery.Consul.Registry
  name: IConsulRegistration
  nameWithType: IConsulRegistration
  fullName: Steeltoe.Discovery.Consul.Registry.IConsulRegistration
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: Steeltoe.Discovery.Consul.Registry.ConsulServiceRegistry.DeregisterAsync*
  commentId: Overload:Steeltoe.Discovery.Consul.Registry.ConsulServiceRegistry.DeregisterAsync
  name: DeregisterAsync
  nameWithType: ConsulServiceRegistry.DeregisterAsync
  fullName: Steeltoe.Discovery.Consul.Registry.ConsulServiceRegistry.DeregisterAsync
- uid: Steeltoe.Discovery.Consul.Registry.IConsulServiceRegistry.DeregisterAsync(Steeltoe.Discovery.Consul.Registry.IConsulRegistration)
  commentId: M:Steeltoe.Discovery.Consul.Registry.IConsulServiceRegistry.DeregisterAsync(Steeltoe.Discovery.Consul.Registry.IConsulRegistration)
  parent: Steeltoe.Discovery.Consul.Registry.IConsulServiceRegistry
  name: DeregisterAsync(IConsulRegistration)
  nameWithType: IConsulServiceRegistry.DeregisterAsync(IConsulRegistration)
  fullName: Steeltoe.Discovery.Consul.Registry.IConsulServiceRegistry.DeregisterAsync(Steeltoe.Discovery.Consul.Registry.IConsulRegistration)
  spec.csharp:
  - uid: Steeltoe.Discovery.Consul.Registry.IConsulServiceRegistry.DeregisterAsync(Steeltoe.Discovery.Consul.Registry.IConsulRegistration)
    name: DeregisterAsync
    nameWithType: IConsulServiceRegistry.DeregisterAsync
    fullName: Steeltoe.Discovery.Consul.Registry.IConsulServiceRegistry.DeregisterAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Discovery.Consul.Registry.IConsulRegistration
    name: IConsulRegistration
    nameWithType: IConsulRegistration
    fullName: Steeltoe.Discovery.Consul.Registry.IConsulRegistration
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Discovery.Consul.Registry.IConsulServiceRegistry.DeregisterAsync(Steeltoe.Discovery.Consul.Registry.IConsulRegistration)
    name: DeregisterAsync
    nameWithType: IConsulServiceRegistry.DeregisterAsync
    fullName: Steeltoe.Discovery.Consul.Registry.IConsulServiceRegistry.DeregisterAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Discovery.Consul.Registry.IConsulRegistration
    name: IConsulRegistration
    nameWithType: IConsulRegistration
    fullName: Steeltoe.Discovery.Consul.Registry.IConsulRegistration
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Discovery.Consul.Registry.ConsulServiceRegistry.SetStatusAsync*
  commentId: Overload:Steeltoe.Discovery.Consul.Registry.ConsulServiceRegistry.SetStatusAsync
  name: SetStatusAsync
  nameWithType: ConsulServiceRegistry.SetStatusAsync
  fullName: Steeltoe.Discovery.Consul.Registry.ConsulServiceRegistry.SetStatusAsync
- uid: Steeltoe.Discovery.Consul.Registry.IConsulServiceRegistry.SetStatusAsync(Steeltoe.Discovery.Consul.Registry.IConsulRegistration,System.String)
  commentId: M:Steeltoe.Discovery.Consul.Registry.IConsulServiceRegistry.SetStatusAsync(Steeltoe.Discovery.Consul.Registry.IConsulRegistration,System.String)
  parent: Steeltoe.Discovery.Consul.Registry.IConsulServiceRegistry
  isExternal: true
  name: SetStatusAsync(IConsulRegistration, String)
  nameWithType: IConsulServiceRegistry.SetStatusAsync(IConsulRegistration, String)
  fullName: Steeltoe.Discovery.Consul.Registry.IConsulServiceRegistry.SetStatusAsync(Steeltoe.Discovery.Consul.Registry.IConsulRegistration, System.String)
  spec.csharp:
  - uid: Steeltoe.Discovery.Consul.Registry.IConsulServiceRegistry.SetStatusAsync(Steeltoe.Discovery.Consul.Registry.IConsulRegistration,System.String)
    name: SetStatusAsync
    nameWithType: IConsulServiceRegistry.SetStatusAsync
    fullName: Steeltoe.Discovery.Consul.Registry.IConsulServiceRegistry.SetStatusAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Discovery.Consul.Registry.IConsulRegistration
    name: IConsulRegistration
    nameWithType: IConsulRegistration
    fullName: Steeltoe.Discovery.Consul.Registry.IConsulRegistration
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Discovery.Consul.Registry.IConsulServiceRegistry.SetStatusAsync(Steeltoe.Discovery.Consul.Registry.IConsulRegistration,System.String)
    name: SetStatusAsync
    nameWithType: IConsulServiceRegistry.SetStatusAsync
    fullName: Steeltoe.Discovery.Consul.Registry.IConsulServiceRegistry.SetStatusAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Discovery.Consul.Registry.IConsulRegistration
    name: IConsulRegistration
    nameWithType: IConsulRegistration
    fullName: Steeltoe.Discovery.Consul.Registry.IConsulRegistration
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Steeltoe.Discovery.Consul.Registry.ConsulServiceRegistry.GetStatusAsync*
  commentId: Overload:Steeltoe.Discovery.Consul.Registry.ConsulServiceRegistry.GetStatusAsync
  name: GetStatusAsync
  nameWithType: ConsulServiceRegistry.GetStatusAsync
  fullName: Steeltoe.Discovery.Consul.Registry.ConsulServiceRegistry.GetStatusAsync
- uid: Steeltoe.Discovery.Consul.Registry.IConsulServiceRegistry.GetStatusAsync(Steeltoe.Discovery.Consul.Registry.IConsulRegistration)
  commentId: M:Steeltoe.Discovery.Consul.Registry.IConsulServiceRegistry.GetStatusAsync(Steeltoe.Discovery.Consul.Registry.IConsulRegistration)
  parent: Steeltoe.Discovery.Consul.Registry.IConsulServiceRegistry
  name: GetStatusAsync(IConsulRegistration)
  nameWithType: IConsulServiceRegistry.GetStatusAsync(IConsulRegistration)
  fullName: Steeltoe.Discovery.Consul.Registry.IConsulServiceRegistry.GetStatusAsync(Steeltoe.Discovery.Consul.Registry.IConsulRegistration)
  spec.csharp:
  - uid: Steeltoe.Discovery.Consul.Registry.IConsulServiceRegistry.GetStatusAsync(Steeltoe.Discovery.Consul.Registry.IConsulRegistration)
    name: GetStatusAsync
    nameWithType: IConsulServiceRegistry.GetStatusAsync
    fullName: Steeltoe.Discovery.Consul.Registry.IConsulServiceRegistry.GetStatusAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Discovery.Consul.Registry.IConsulRegistration
    name: IConsulRegistration
    nameWithType: IConsulRegistration
    fullName: Steeltoe.Discovery.Consul.Registry.IConsulRegistration
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Discovery.Consul.Registry.IConsulServiceRegistry.GetStatusAsync(Steeltoe.Discovery.Consul.Registry.IConsulRegistration)
    name: GetStatusAsync
    nameWithType: IConsulServiceRegistry.GetStatusAsync
    fullName: Steeltoe.Discovery.Consul.Registry.IConsulServiceRegistry.GetStatusAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Discovery.Consul.Registry.IConsulRegistration
    name: IConsulRegistration
    nameWithType: IConsulRegistration
    fullName: Steeltoe.Discovery.Consul.Registry.IConsulRegistration
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task{System.Object}
  commentId: T:System.Threading.Tasks.Task{System.Object}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<Object>
  nameWithType: Task<Object>
  fullName: System.Threading.Tasks.Task<System.Object>
  nameWithType.vb: Task(Of Object)
  fullName.vb: System.Threading.Tasks.Task(Of System.Object)
  name.vb: Task(Of Object)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Discovery.Consul.Registry.ConsulServiceRegistry.GetStatusAsyncInternal*
  commentId: Overload:Steeltoe.Discovery.Consul.Registry.ConsulServiceRegistry.GetStatusAsyncInternal
  name: GetStatusAsyncInternal
  nameWithType: ConsulServiceRegistry.GetStatusAsyncInternal
  fullName: Steeltoe.Discovery.Consul.Registry.ConsulServiceRegistry.GetStatusAsyncInternal
- uid: Steeltoe.Discovery.Consul.Registry.ConsulServiceRegistry.Register*
  commentId: Overload:Steeltoe.Discovery.Consul.Registry.ConsulServiceRegistry.Register
  name: Register
  nameWithType: ConsulServiceRegistry.Register
  fullName: Steeltoe.Discovery.Consul.Registry.ConsulServiceRegistry.Register
- uid: Steeltoe.Discovery.Consul.Registry.ConsulServiceRegistry.Deregister*
  commentId: Overload:Steeltoe.Discovery.Consul.Registry.ConsulServiceRegistry.Deregister
  name: Deregister
  nameWithType: ConsulServiceRegistry.Deregister
  fullName: Steeltoe.Discovery.Consul.Registry.ConsulServiceRegistry.Deregister
- uid: Steeltoe.Discovery.Consul.Registry.ConsulServiceRegistry.SetStatus*
  commentId: Overload:Steeltoe.Discovery.Consul.Registry.ConsulServiceRegistry.SetStatus
  name: SetStatus
  nameWithType: ConsulServiceRegistry.SetStatus
  fullName: Steeltoe.Discovery.Consul.Registry.ConsulServiceRegistry.SetStatus
- uid: Steeltoe.Discovery.Consul.Registry.ConsulServiceRegistry.GetStatus*
  commentId: Overload:Steeltoe.Discovery.Consul.Registry.ConsulServiceRegistry.GetStatus
  name: GetStatus
  nameWithType: ConsulServiceRegistry.GetStatus
  fullName: Steeltoe.Discovery.Consul.Registry.ConsulServiceRegistry.GetStatus
- uid: '{S}'
  commentId: '!:S'
  definition: S
  name: S
  nameWithType: S
  fullName: S
- uid: S
  name: S
  nameWithType: S
  fullName: S
- uid: Steeltoe.Discovery.Consul.Registry.ConsulServiceRegistry.Dispose*
  commentId: Overload:Steeltoe.Discovery.Consul.Registry.ConsulServiceRegistry.Dispose
  name: Dispose
  nameWithType: ConsulServiceRegistry.Dispose
  fullName: Steeltoe.Discovery.Consul.Registry.ConsulServiceRegistry.Dispose
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Steeltoe.Discovery.Consul.Registry.ConsulServiceRegistry.Finalize*
  commentId: Overload:Steeltoe.Discovery.Consul.Registry.ConsulServiceRegistry.Finalize
  name: Finalize
  nameWithType: ConsulServiceRegistry.Finalize
  fullName: Steeltoe.Discovery.Consul.Registry.ConsulServiceRegistry.Finalize
