### YamlMime:ManagedReference
items:
- uid: Steeltoe.Messaging.Handler.Invocation.InvocableHandlerMethod
  commentId: T:Steeltoe.Messaging.Handler.Invocation.InvocableHandlerMethod
  id: InvocableHandlerMethod
  parent: Steeltoe.Messaging.Handler.Invocation
  children:
  - Steeltoe.Messaging.Handler.Invocation.InvocableHandlerMethod.#ctor(Steeltoe.Messaging.Handler.HandlerMethod)
  - Steeltoe.Messaging.Handler.Invocation.InvocableHandlerMethod.#ctor(System.Object,System.Reflection.MethodInfo)
  - Steeltoe.Messaging.Handler.Invocation.InvocableHandlerMethod.#ctor(System.Object,System.String,System.Type[])
  - Steeltoe.Messaging.Handler.Invocation.InvocableHandlerMethod.DoInvoke(System.Object[])
  - Steeltoe.Messaging.Handler.Invocation.InvocableHandlerMethod.GetMethodArgumentValues(Steeltoe.Messaging.IMessage,System.Object[])
  - Steeltoe.Messaging.Handler.Invocation.InvocableHandlerMethod.Invoke(Steeltoe.Messaging.IMessage,System.Object[])
  - Steeltoe.Messaging.Handler.Invocation.InvocableHandlerMethod.MessageMethodArgumentResolvers
  langs:
  - csharp
  - vb
  name: InvocableHandlerMethod
  nameWithType: InvocableHandlerMethod
  fullName: Steeltoe.Messaging.Handler.Invocation.InvocableHandlerMethod
  type: Class
  source:
    remote:
      path: src/Messaging/src/MessagingBase/Handler/Invocation/InvocableHandlerMethod.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: InvocableHandlerMethod
    path: ../Steeltoe/src/Messaging/src/MessagingBase/Handler/Invocation/InvocableHandlerMethod.cs
    startLine: 9
  assemblies:
  - Steeltoe.Messaging.MessagingBase
  namespace: Steeltoe.Messaging.Handler.Invocation
  syntax:
    content: 'public class InvocableHandlerMethod : HandlerMethod, IInvocableHandlerMethod'
    content.vb: >-
      Public Class InvocableHandlerMethod

          Inherits HandlerMethod

          Implements IInvocableHandlerMethod
  inheritance:
  - System.Object
  - Steeltoe.Messaging.Handler.HandlerMethod
  implements:
  - Steeltoe.Messaging.Handler.Invocation.IInvocableHandlerMethod
  inheritedMembers:
  - Steeltoe.Messaging.Handler.HandlerMethod.bean
  - Steeltoe.Messaging.Handler.HandlerMethod.method
  - Steeltoe.Messaging.Handler.HandlerMethod.beanType
  - Steeltoe.Messaging.Handler.HandlerMethod.Bean
  - Steeltoe.Messaging.Handler.HandlerMethod.Method
  - Steeltoe.Messaging.Handler.HandlerMethod.BeanType
  - Steeltoe.Messaging.Handler.HandlerMethod.ResolvedFromHandlerMethod
  - Steeltoe.Messaging.Handler.HandlerMethod.IsVoid
  - Steeltoe.Messaging.Handler.HandlerMethod.ShortLogMessage
  - Steeltoe.Messaging.Handler.HandlerMethod.MethodParameters
  - Steeltoe.Messaging.Handler.HandlerMethod.ReturnType
  - Steeltoe.Messaging.Handler.HandlerMethod.CreateWithResolvedBean
  - Steeltoe.Messaging.Handler.HandlerMethod.FindProvidedArgument(System.Reflection.ParameterInfo,System.Object[])
  - Steeltoe.Messaging.Handler.HandlerMethod.FormatArgumentError(System.Reflection.ParameterInfo,System.String)
  - Steeltoe.Messaging.Handler.HandlerMethod.AssertTargetBean(System.Reflection.MethodInfo,System.Object,System.Object[])
  - Steeltoe.Messaging.Handler.HandlerMethod.FormatInvokeError(System.String,System.Object[])
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Steeltoe.Messaging.Handler.Invocation.InvocableHandlerMethod.MessageMethodArgumentResolvers
  commentId: P:Steeltoe.Messaging.Handler.Invocation.InvocableHandlerMethod.MessageMethodArgumentResolvers
  id: MessageMethodArgumentResolvers
  parent: Steeltoe.Messaging.Handler.Invocation.InvocableHandlerMethod
  langs:
  - csharp
  - vb
  name: MessageMethodArgumentResolvers
  nameWithType: InvocableHandlerMethod.MessageMethodArgumentResolvers
  fullName: Steeltoe.Messaging.Handler.Invocation.InvocableHandlerMethod.MessageMethodArgumentResolvers
  type: Property
  source:
    remote:
      path: src/Messaging/src/MessagingBase/Handler/Invocation/InvocableHandlerMethod.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: MessageMethodArgumentResolvers
    path: ../Steeltoe/src/Messaging/src/MessagingBase/Handler/Invocation/InvocableHandlerMethod.cs
    startLine: 13
  assemblies:
  - Steeltoe.Messaging.MessagingBase
  namespace: Steeltoe.Messaging.Handler.Invocation
  syntax:
    content: public HandlerMethodArgumentResolverComposite MessageMethodArgumentResolvers { get; set; }
    parameters: []
    return:
      type: Steeltoe.Messaging.Handler.Invocation.HandlerMethodArgumentResolverComposite
    content.vb: Public Property MessageMethodArgumentResolvers As HandlerMethodArgumentResolverComposite
  overload: Steeltoe.Messaging.Handler.Invocation.InvocableHandlerMethod.MessageMethodArgumentResolvers*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Steeltoe.Messaging.Handler.Invocation.InvocableHandlerMethod.#ctor(Steeltoe.Messaging.Handler.HandlerMethod)
  commentId: M:Steeltoe.Messaging.Handler.Invocation.InvocableHandlerMethod.#ctor(Steeltoe.Messaging.Handler.HandlerMethod)
  id: '#ctor(Steeltoe.Messaging.Handler.HandlerMethod)'
  parent: Steeltoe.Messaging.Handler.Invocation.InvocableHandlerMethod
  langs:
  - csharp
  - vb
  name: InvocableHandlerMethod(HandlerMethod)
  nameWithType: InvocableHandlerMethod.InvocableHandlerMethod(HandlerMethod)
  fullName: Steeltoe.Messaging.Handler.Invocation.InvocableHandlerMethod.InvocableHandlerMethod(Steeltoe.Messaging.Handler.HandlerMethod)
  type: Constructor
  source:
    remote:
      path: src/Messaging/src/MessagingBase/Handler/Invocation/InvocableHandlerMethod.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: .ctor
    path: ../Steeltoe/src/Messaging/src/MessagingBase/Handler/Invocation/InvocableHandlerMethod.cs
    startLine: 15
  assemblies:
  - Steeltoe.Messaging.MessagingBase
  namespace: Steeltoe.Messaging.Handler.Invocation
  syntax:
    content: public InvocableHandlerMethod(HandlerMethod handlerMethod)
    parameters:
    - id: handlerMethod
      type: Steeltoe.Messaging.Handler.HandlerMethod
    content.vb: Public Sub New(handlerMethod As HandlerMethod)
  overload: Steeltoe.Messaging.Handler.Invocation.InvocableHandlerMethod.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Steeltoe.Messaging.Handler.Invocation.InvocableHandlerMethod.#ctor(System.Object,System.Reflection.MethodInfo)
  commentId: M:Steeltoe.Messaging.Handler.Invocation.InvocableHandlerMethod.#ctor(System.Object,System.Reflection.MethodInfo)
  id: '#ctor(System.Object,System.Reflection.MethodInfo)'
  parent: Steeltoe.Messaging.Handler.Invocation.InvocableHandlerMethod
  langs:
  - csharp
  - vb
  name: InvocableHandlerMethod(Object, MethodInfo)
  nameWithType: InvocableHandlerMethod.InvocableHandlerMethod(Object, MethodInfo)
  fullName: Steeltoe.Messaging.Handler.Invocation.InvocableHandlerMethod.InvocableHandlerMethod(System.Object, System.Reflection.MethodInfo)
  type: Constructor
  source:
    remote:
      path: src/Messaging/src/MessagingBase/Handler/Invocation/InvocableHandlerMethod.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: .ctor
    path: ../Steeltoe/src/Messaging/src/MessagingBase/Handler/Invocation/InvocableHandlerMethod.cs
    startLine: 20
  assemblies:
  - Steeltoe.Messaging.MessagingBase
  namespace: Steeltoe.Messaging.Handler.Invocation
  syntax:
    content: public InvocableHandlerMethod(object bean, MethodInfo method)
    parameters:
    - id: bean
      type: System.Object
    - id: method
      type: System.Reflection.MethodInfo
    content.vb: Public Sub New(bean As Object, method As MethodInfo)
  overload: Steeltoe.Messaging.Handler.Invocation.InvocableHandlerMethod.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Steeltoe.Messaging.Handler.Invocation.InvocableHandlerMethod.#ctor(System.Object,System.String,System.Type[])
  commentId: M:Steeltoe.Messaging.Handler.Invocation.InvocableHandlerMethod.#ctor(System.Object,System.String,System.Type[])
  id: '#ctor(System.Object,System.String,System.Type[])'
  parent: Steeltoe.Messaging.Handler.Invocation.InvocableHandlerMethod
  langs:
  - csharp
  - vb
  name: InvocableHandlerMethod(Object, String, Type[])
  nameWithType: InvocableHandlerMethod.InvocableHandlerMethod(Object, String, Type[])
  fullName: Steeltoe.Messaging.Handler.Invocation.InvocableHandlerMethod.InvocableHandlerMethod(System.Object, System.String, System.Type[])
  type: Constructor
  source:
    remote:
      path: src/Messaging/src/MessagingBase/Handler/Invocation/InvocableHandlerMethod.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: .ctor
    path: ../Steeltoe/src/Messaging/src/MessagingBase/Handler/Invocation/InvocableHandlerMethod.cs
    startLine: 25
  assemblies:
  - Steeltoe.Messaging.MessagingBase
  namespace: Steeltoe.Messaging.Handler.Invocation
  syntax:
    content: public InvocableHandlerMethod(object bean, string methodName, params Type[] parameterTypes)
    parameters:
    - id: bean
      type: System.Object
    - id: methodName
      type: System.String
    - id: parameterTypes
      type: System.Type[]
    content.vb: Public Sub New(bean As Object, methodName As String, ParamArray parameterTypes As Type())
  overload: Steeltoe.Messaging.Handler.Invocation.InvocableHandlerMethod.#ctor*
  nameWithType.vb: InvocableHandlerMethod.InvocableHandlerMethod(Object, String, Type())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Steeltoe.Messaging.Handler.Invocation.InvocableHandlerMethod.InvocableHandlerMethod(System.Object, System.String, System.Type())
  name.vb: InvocableHandlerMethod(Object, String, Type())
- uid: Steeltoe.Messaging.Handler.Invocation.InvocableHandlerMethod.Invoke(Steeltoe.Messaging.IMessage,System.Object[])
  commentId: M:Steeltoe.Messaging.Handler.Invocation.InvocableHandlerMethod.Invoke(Steeltoe.Messaging.IMessage,System.Object[])
  id: Invoke(Steeltoe.Messaging.IMessage,System.Object[])
  parent: Steeltoe.Messaging.Handler.Invocation.InvocableHandlerMethod
  langs:
  - csharp
  - vb
  name: Invoke(IMessage, Object[])
  nameWithType: InvocableHandlerMethod.Invoke(IMessage, Object[])
  fullName: Steeltoe.Messaging.Handler.Invocation.InvocableHandlerMethod.Invoke(Steeltoe.Messaging.IMessage, System.Object[])
  type: Method
  source:
    remote:
      path: src/Messaging/src/MessagingBase/Handler/Invocation/InvocableHandlerMethod.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Invoke
    path: ../Steeltoe/src/Messaging/src/MessagingBase/Handler/Invocation/InvocableHandlerMethod.cs
    startLine: 30
  assemblies:
  - Steeltoe.Messaging.MessagingBase
  namespace: Steeltoe.Messaging.Handler.Invocation
  syntax:
    content: public virtual object Invoke(IMessage message, params object[] providedArgs)
    parameters:
    - id: message
      type: Steeltoe.Messaging.IMessage
    - id: providedArgs
      type: System.Object[]
    return:
      type: System.Object
    content.vb: Public Overridable Function Invoke(message As IMessage, ParamArray providedArgs As Object()) As Object
  overload: Steeltoe.Messaging.Handler.Invocation.InvocableHandlerMethod.Invoke*
  implements:
  - Steeltoe.Messaging.Handler.Invocation.IInvocableHandlerMethod.Invoke(Steeltoe.Messaging.IMessage,System.Object[])
  nameWithType.vb: InvocableHandlerMethod.Invoke(IMessage, Object())
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Steeltoe.Messaging.Handler.Invocation.InvocableHandlerMethod.Invoke(Steeltoe.Messaging.IMessage, System.Object())
  name.vb: Invoke(IMessage, Object())
- uid: Steeltoe.Messaging.Handler.Invocation.InvocableHandlerMethod.GetMethodArgumentValues(Steeltoe.Messaging.IMessage,System.Object[])
  commentId: M:Steeltoe.Messaging.Handler.Invocation.InvocableHandlerMethod.GetMethodArgumentValues(Steeltoe.Messaging.IMessage,System.Object[])
  id: GetMethodArgumentValues(Steeltoe.Messaging.IMessage,System.Object[])
  parent: Steeltoe.Messaging.Handler.Invocation.InvocableHandlerMethod
  langs:
  - csharp
  - vb
  name: GetMethodArgumentValues(IMessage, Object[])
  nameWithType: InvocableHandlerMethod.GetMethodArgumentValues(IMessage, Object[])
  fullName: Steeltoe.Messaging.Handler.Invocation.InvocableHandlerMethod.GetMethodArgumentValues(Steeltoe.Messaging.IMessage, System.Object[])
  type: Method
  source:
    remote:
      path: src/Messaging/src/MessagingBase/Handler/Invocation/InvocableHandlerMethod.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: GetMethodArgumentValues
    path: ../Steeltoe/src/Messaging/src/MessagingBase/Handler/Invocation/InvocableHandlerMethod.cs
    startLine: 40
  assemblies:
  - Steeltoe.Messaging.MessagingBase
  namespace: Steeltoe.Messaging.Handler.Invocation
  syntax:
    content: protected virtual object[] GetMethodArgumentValues(IMessage message, params object[] providedArgs)
    parameters:
    - id: message
      type: Steeltoe.Messaging.IMessage
    - id: providedArgs
      type: System.Object[]
    return:
      type: System.Object[]
    content.vb: Protected Overridable Function GetMethodArgumentValues(message As IMessage, ParamArray providedArgs As Object()) As Object()
  overload: Steeltoe.Messaging.Handler.Invocation.InvocableHandlerMethod.GetMethodArgumentValues*
  nameWithType.vb: InvocableHandlerMethod.GetMethodArgumentValues(IMessage, Object())
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
  fullName.vb: Steeltoe.Messaging.Handler.Invocation.InvocableHandlerMethod.GetMethodArgumentValues(Steeltoe.Messaging.IMessage, System.Object())
  name.vb: GetMethodArgumentValues(IMessage, Object())
- uid: Steeltoe.Messaging.Handler.Invocation.InvocableHandlerMethod.DoInvoke(System.Object[])
  commentId: M:Steeltoe.Messaging.Handler.Invocation.InvocableHandlerMethod.DoInvoke(System.Object[])
  id: DoInvoke(System.Object[])
  parent: Steeltoe.Messaging.Handler.Invocation.InvocableHandlerMethod
  langs:
  - csharp
  - vb
  name: DoInvoke(Object[])
  nameWithType: InvocableHandlerMethod.DoInvoke(Object[])
  fullName: Steeltoe.Messaging.Handler.Invocation.InvocableHandlerMethod.DoInvoke(System.Object[])
  type: Method
  source:
    remote:
      path: src/Messaging/src/MessagingBase/Handler/Invocation/InvocableHandlerMethod.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: DoInvoke
    path: ../Steeltoe/src/Messaging/src/MessagingBase/Handler/Invocation/InvocableHandlerMethod.cs
    startLine: 89
  assemblies:
  - Steeltoe.Messaging.MessagingBase
  namespace: Steeltoe.Messaging.Handler.Invocation
  syntax:
    content: protected virtual object DoInvoke(params object[] args)
    parameters:
    - id: args
      type: System.Object[]
    return:
      type: System.Object
    content.vb: Protected Overridable Function DoInvoke(ParamArray args As Object()) As Object
  overload: Steeltoe.Messaging.Handler.Invocation.InvocableHandlerMethod.DoInvoke*
  nameWithType.vb: InvocableHandlerMethod.DoInvoke(Object())
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
  fullName.vb: Steeltoe.Messaging.Handler.Invocation.InvocableHandlerMethod.DoInvoke(System.Object())
  name.vb: DoInvoke(Object())
references:
- uid: Steeltoe.Messaging.Handler.Invocation
  commentId: N:Steeltoe.Messaging.Handler.Invocation
  name: Steeltoe.Messaging.Handler.Invocation
  nameWithType: Steeltoe.Messaging.Handler.Invocation
  fullName: Steeltoe.Messaging.Handler.Invocation
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Steeltoe.Messaging.Handler.HandlerMethod
  commentId: T:Steeltoe.Messaging.Handler.HandlerMethod
  parent: Steeltoe.Messaging.Handler
  name: HandlerMethod
  nameWithType: HandlerMethod
  fullName: Steeltoe.Messaging.Handler.HandlerMethod
- uid: Steeltoe.Messaging.Handler.Invocation.IInvocableHandlerMethod
  commentId: T:Steeltoe.Messaging.Handler.Invocation.IInvocableHandlerMethod
  parent: Steeltoe.Messaging.Handler.Invocation
  name: IInvocableHandlerMethod
  nameWithType: IInvocableHandlerMethod
  fullName: Steeltoe.Messaging.Handler.Invocation.IInvocableHandlerMethod
- uid: Steeltoe.Messaging.Handler.HandlerMethod.bean
  commentId: F:Steeltoe.Messaging.Handler.HandlerMethod.bean
  parent: Steeltoe.Messaging.Handler.HandlerMethod
  name: bean
  nameWithType: HandlerMethod.bean
  fullName: Steeltoe.Messaging.Handler.HandlerMethod.bean
- uid: Steeltoe.Messaging.Handler.HandlerMethod.method
  commentId: F:Steeltoe.Messaging.Handler.HandlerMethod.method
  parent: Steeltoe.Messaging.Handler.HandlerMethod
  name: method
  nameWithType: HandlerMethod.method
  fullName: Steeltoe.Messaging.Handler.HandlerMethod.method
- uid: Steeltoe.Messaging.Handler.HandlerMethod.beanType
  commentId: F:Steeltoe.Messaging.Handler.HandlerMethod.beanType
  parent: Steeltoe.Messaging.Handler.HandlerMethod
  name: beanType
  nameWithType: HandlerMethod.beanType
  fullName: Steeltoe.Messaging.Handler.HandlerMethod.beanType
- uid: Steeltoe.Messaging.Handler.HandlerMethod.Bean
  commentId: P:Steeltoe.Messaging.Handler.HandlerMethod.Bean
  parent: Steeltoe.Messaging.Handler.HandlerMethod
  name: Bean
  nameWithType: HandlerMethod.Bean
  fullName: Steeltoe.Messaging.Handler.HandlerMethod.Bean
- uid: Steeltoe.Messaging.Handler.HandlerMethod.Method
  commentId: P:Steeltoe.Messaging.Handler.HandlerMethod.Method
  parent: Steeltoe.Messaging.Handler.HandlerMethod
  name: Method
  nameWithType: HandlerMethod.Method
  fullName: Steeltoe.Messaging.Handler.HandlerMethod.Method
- uid: Steeltoe.Messaging.Handler.HandlerMethod.BeanType
  commentId: P:Steeltoe.Messaging.Handler.HandlerMethod.BeanType
  parent: Steeltoe.Messaging.Handler.HandlerMethod
  name: BeanType
  nameWithType: HandlerMethod.BeanType
  fullName: Steeltoe.Messaging.Handler.HandlerMethod.BeanType
- uid: Steeltoe.Messaging.Handler.HandlerMethod.ResolvedFromHandlerMethod
  commentId: P:Steeltoe.Messaging.Handler.HandlerMethod.ResolvedFromHandlerMethod
  parent: Steeltoe.Messaging.Handler.HandlerMethod
  name: ResolvedFromHandlerMethod
  nameWithType: HandlerMethod.ResolvedFromHandlerMethod
  fullName: Steeltoe.Messaging.Handler.HandlerMethod.ResolvedFromHandlerMethod
- uid: Steeltoe.Messaging.Handler.HandlerMethod.IsVoid
  commentId: P:Steeltoe.Messaging.Handler.HandlerMethod.IsVoid
  parent: Steeltoe.Messaging.Handler.HandlerMethod
  name: IsVoid
  nameWithType: HandlerMethod.IsVoid
  fullName: Steeltoe.Messaging.Handler.HandlerMethod.IsVoid
- uid: Steeltoe.Messaging.Handler.HandlerMethod.ShortLogMessage
  commentId: P:Steeltoe.Messaging.Handler.HandlerMethod.ShortLogMessage
  parent: Steeltoe.Messaging.Handler.HandlerMethod
  name: ShortLogMessage
  nameWithType: HandlerMethod.ShortLogMessage
  fullName: Steeltoe.Messaging.Handler.HandlerMethod.ShortLogMessage
- uid: Steeltoe.Messaging.Handler.HandlerMethod.MethodParameters
  commentId: P:Steeltoe.Messaging.Handler.HandlerMethod.MethodParameters
  parent: Steeltoe.Messaging.Handler.HandlerMethod
  name: MethodParameters
  nameWithType: HandlerMethod.MethodParameters
  fullName: Steeltoe.Messaging.Handler.HandlerMethod.MethodParameters
- uid: Steeltoe.Messaging.Handler.HandlerMethod.ReturnType
  commentId: P:Steeltoe.Messaging.Handler.HandlerMethod.ReturnType
  parent: Steeltoe.Messaging.Handler.HandlerMethod
  name: ReturnType
  nameWithType: HandlerMethod.ReturnType
  fullName: Steeltoe.Messaging.Handler.HandlerMethod.ReturnType
- uid: Steeltoe.Messaging.Handler.HandlerMethod.CreateWithResolvedBean
  commentId: M:Steeltoe.Messaging.Handler.HandlerMethod.CreateWithResolvedBean
  parent: Steeltoe.Messaging.Handler.HandlerMethod
  name: CreateWithResolvedBean()
  nameWithType: HandlerMethod.CreateWithResolvedBean()
  fullName: Steeltoe.Messaging.Handler.HandlerMethod.CreateWithResolvedBean()
  spec.csharp:
  - uid: Steeltoe.Messaging.Handler.HandlerMethod.CreateWithResolvedBean
    name: CreateWithResolvedBean
    nameWithType: HandlerMethod.CreateWithResolvedBean
    fullName: Steeltoe.Messaging.Handler.HandlerMethod.CreateWithResolvedBean
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Handler.HandlerMethod.CreateWithResolvedBean
    name: CreateWithResolvedBean
    nameWithType: HandlerMethod.CreateWithResolvedBean
    fullName: Steeltoe.Messaging.Handler.HandlerMethod.CreateWithResolvedBean
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Handler.HandlerMethod.FindProvidedArgument(System.Reflection.ParameterInfo,System.Object[])
  commentId: M:Steeltoe.Messaging.Handler.HandlerMethod.FindProvidedArgument(System.Reflection.ParameterInfo,System.Object[])
  parent: Steeltoe.Messaging.Handler.HandlerMethod
  isExternal: true
  name: FindProvidedArgument(ParameterInfo, Object[])
  nameWithType: HandlerMethod.FindProvidedArgument(ParameterInfo, Object[])
  fullName: Steeltoe.Messaging.Handler.HandlerMethod.FindProvidedArgument(System.Reflection.ParameterInfo, System.Object[])
  nameWithType.vb: HandlerMethod.FindProvidedArgument(ParameterInfo, Object())
  fullName.vb: Steeltoe.Messaging.Handler.HandlerMethod.FindProvidedArgument(System.Reflection.ParameterInfo, System.Object())
  name.vb: FindProvidedArgument(ParameterInfo, Object())
  spec.csharp:
  - uid: Steeltoe.Messaging.Handler.HandlerMethod.FindProvidedArgument(System.Reflection.ParameterInfo,System.Object[])
    name: FindProvidedArgument
    nameWithType: HandlerMethod.FindProvidedArgument
    fullName: Steeltoe.Messaging.Handler.HandlerMethod.FindProvidedArgument
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Reflection.ParameterInfo
    name: ParameterInfo
    nameWithType: ParameterInfo
    fullName: System.Reflection.ParameterInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Handler.HandlerMethod.FindProvidedArgument(System.Reflection.ParameterInfo,System.Object[])
    name: FindProvidedArgument
    nameWithType: HandlerMethod.FindProvidedArgument
    fullName: Steeltoe.Messaging.Handler.HandlerMethod.FindProvidedArgument
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Reflection.ParameterInfo
    name: ParameterInfo
    nameWithType: ParameterInfo
    fullName: System.Reflection.ParameterInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Handler.HandlerMethod.FormatArgumentError(System.Reflection.ParameterInfo,System.String)
  commentId: M:Steeltoe.Messaging.Handler.HandlerMethod.FormatArgumentError(System.Reflection.ParameterInfo,System.String)
  parent: Steeltoe.Messaging.Handler.HandlerMethod
  isExternal: true
  name: FormatArgumentError(ParameterInfo, String)
  nameWithType: HandlerMethod.FormatArgumentError(ParameterInfo, String)
  fullName: Steeltoe.Messaging.Handler.HandlerMethod.FormatArgumentError(System.Reflection.ParameterInfo, System.String)
  spec.csharp:
  - uid: Steeltoe.Messaging.Handler.HandlerMethod.FormatArgumentError(System.Reflection.ParameterInfo,System.String)
    name: FormatArgumentError
    nameWithType: HandlerMethod.FormatArgumentError
    fullName: Steeltoe.Messaging.Handler.HandlerMethod.FormatArgumentError
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Reflection.ParameterInfo
    name: ParameterInfo
    nameWithType: ParameterInfo
    fullName: System.Reflection.ParameterInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Handler.HandlerMethod.FormatArgumentError(System.Reflection.ParameterInfo,System.String)
    name: FormatArgumentError
    nameWithType: HandlerMethod.FormatArgumentError
    fullName: Steeltoe.Messaging.Handler.HandlerMethod.FormatArgumentError
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Reflection.ParameterInfo
    name: ParameterInfo
    nameWithType: ParameterInfo
    fullName: System.Reflection.ParameterInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Handler.HandlerMethod.AssertTargetBean(System.Reflection.MethodInfo,System.Object,System.Object[])
  commentId: M:Steeltoe.Messaging.Handler.HandlerMethod.AssertTargetBean(System.Reflection.MethodInfo,System.Object,System.Object[])
  parent: Steeltoe.Messaging.Handler.HandlerMethod
  isExternal: true
  name: AssertTargetBean(MethodInfo, Object, Object[])
  nameWithType: HandlerMethod.AssertTargetBean(MethodInfo, Object, Object[])
  fullName: Steeltoe.Messaging.Handler.HandlerMethod.AssertTargetBean(System.Reflection.MethodInfo, System.Object, System.Object[])
  nameWithType.vb: HandlerMethod.AssertTargetBean(MethodInfo, Object, Object())
  fullName.vb: Steeltoe.Messaging.Handler.HandlerMethod.AssertTargetBean(System.Reflection.MethodInfo, System.Object, System.Object())
  name.vb: AssertTargetBean(MethodInfo, Object, Object())
  spec.csharp:
  - uid: Steeltoe.Messaging.Handler.HandlerMethod.AssertTargetBean(System.Reflection.MethodInfo,System.Object,System.Object[])
    name: AssertTargetBean
    nameWithType: HandlerMethod.AssertTargetBean
    fullName: Steeltoe.Messaging.Handler.HandlerMethod.AssertTargetBean
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Reflection.MethodInfo
    name: MethodInfo
    nameWithType: MethodInfo
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Handler.HandlerMethod.AssertTargetBean(System.Reflection.MethodInfo,System.Object,System.Object[])
    name: AssertTargetBean
    nameWithType: HandlerMethod.AssertTargetBean
    fullName: Steeltoe.Messaging.Handler.HandlerMethod.AssertTargetBean
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Reflection.MethodInfo
    name: MethodInfo
    nameWithType: MethodInfo
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Handler.HandlerMethod.FormatInvokeError(System.String,System.Object[])
  commentId: M:Steeltoe.Messaging.Handler.HandlerMethod.FormatInvokeError(System.String,System.Object[])
  parent: Steeltoe.Messaging.Handler.HandlerMethod
  isExternal: true
  name: FormatInvokeError(String, Object[])
  nameWithType: HandlerMethod.FormatInvokeError(String, Object[])
  fullName: Steeltoe.Messaging.Handler.HandlerMethod.FormatInvokeError(System.String, System.Object[])
  nameWithType.vb: HandlerMethod.FormatInvokeError(String, Object())
  fullName.vb: Steeltoe.Messaging.Handler.HandlerMethod.FormatInvokeError(System.String, System.Object())
  name.vb: FormatInvokeError(String, Object())
  spec.csharp:
  - uid: Steeltoe.Messaging.Handler.HandlerMethod.FormatInvokeError(System.String,System.Object[])
    name: FormatInvokeError
    nameWithType: HandlerMethod.FormatInvokeError
    fullName: Steeltoe.Messaging.Handler.HandlerMethod.FormatInvokeError
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Handler.HandlerMethod.FormatInvokeError(System.String,System.Object[])
    name: FormatInvokeError
    nameWithType: HandlerMethod.FormatInvokeError
    fullName: Steeltoe.Messaging.Handler.HandlerMethod.FormatInvokeError
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Steeltoe.Messaging.Handler
  commentId: N:Steeltoe.Messaging.Handler
  name: Steeltoe.Messaging.Handler
  nameWithType: Steeltoe.Messaging.Handler
  fullName: Steeltoe.Messaging.Handler
- uid: Steeltoe.Messaging.Handler.Invocation.InvocableHandlerMethod.MessageMethodArgumentResolvers*
  commentId: Overload:Steeltoe.Messaging.Handler.Invocation.InvocableHandlerMethod.MessageMethodArgumentResolvers
  name: MessageMethodArgumentResolvers
  nameWithType: InvocableHandlerMethod.MessageMethodArgumentResolvers
  fullName: Steeltoe.Messaging.Handler.Invocation.InvocableHandlerMethod.MessageMethodArgumentResolvers
- uid: Steeltoe.Messaging.Handler.Invocation.HandlerMethodArgumentResolverComposite
  commentId: T:Steeltoe.Messaging.Handler.Invocation.HandlerMethodArgumentResolverComposite
  parent: Steeltoe.Messaging.Handler.Invocation
  name: HandlerMethodArgumentResolverComposite
  nameWithType: HandlerMethodArgumentResolverComposite
  fullName: Steeltoe.Messaging.Handler.Invocation.HandlerMethodArgumentResolverComposite
- uid: Steeltoe.Messaging.Handler.Invocation.InvocableHandlerMethod.#ctor*
  commentId: Overload:Steeltoe.Messaging.Handler.Invocation.InvocableHandlerMethod.#ctor
  name: InvocableHandlerMethod
  nameWithType: InvocableHandlerMethod.InvocableHandlerMethod
  fullName: Steeltoe.Messaging.Handler.Invocation.InvocableHandlerMethod.InvocableHandlerMethod
- uid: System.Reflection.MethodInfo
  commentId: T:System.Reflection.MethodInfo
  parent: System.Reflection
  isExternal: true
  name: MethodInfo
  nameWithType: MethodInfo
  fullName: System.Reflection.MethodInfo
- uid: System.Reflection
  commentId: N:System.Reflection
  isExternal: true
  name: System.Reflection
  nameWithType: System.Reflection
  fullName: System.Reflection
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Type[]
  isExternal: true
  name: Type[]
  nameWithType: Type[]
  fullName: System.Type[]
  nameWithType.vb: Type()
  fullName.vb: System.Type()
  name.vb: Type()
  spec.csharp:
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Steeltoe.Messaging.Handler.Invocation.InvocableHandlerMethod.Invoke*
  commentId: Overload:Steeltoe.Messaging.Handler.Invocation.InvocableHandlerMethod.Invoke
  name: Invoke
  nameWithType: InvocableHandlerMethod.Invoke
  fullName: Steeltoe.Messaging.Handler.Invocation.InvocableHandlerMethod.Invoke
- uid: Steeltoe.Messaging.Handler.Invocation.IInvocableHandlerMethod.Invoke(Steeltoe.Messaging.IMessage,System.Object[])
  commentId: M:Steeltoe.Messaging.Handler.Invocation.IInvocableHandlerMethod.Invoke(Steeltoe.Messaging.IMessage,System.Object[])
  parent: Steeltoe.Messaging.Handler.Invocation.IInvocableHandlerMethod
  isExternal: true
  name: Invoke(IMessage, Object[])
  nameWithType: IInvocableHandlerMethod.Invoke(IMessage, Object[])
  fullName: Steeltoe.Messaging.Handler.Invocation.IInvocableHandlerMethod.Invoke(Steeltoe.Messaging.IMessage, System.Object[])
  nameWithType.vb: IInvocableHandlerMethod.Invoke(IMessage, Object())
  fullName.vb: Steeltoe.Messaging.Handler.Invocation.IInvocableHandlerMethod.Invoke(Steeltoe.Messaging.IMessage, System.Object())
  name.vb: Invoke(IMessage, Object())
  spec.csharp:
  - uid: Steeltoe.Messaging.Handler.Invocation.IInvocableHandlerMethod.Invoke(Steeltoe.Messaging.IMessage,System.Object[])
    name: Invoke
    nameWithType: IInvocableHandlerMethod.Invoke
    fullName: Steeltoe.Messaging.Handler.Invocation.IInvocableHandlerMethod.Invoke
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Handler.Invocation.IInvocableHandlerMethod.Invoke(Steeltoe.Messaging.IMessage,System.Object[])
    name: Invoke
    nameWithType: IInvocableHandlerMethod.Invoke
    fullName: Steeltoe.Messaging.Handler.Invocation.IInvocableHandlerMethod.Invoke
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.IMessage
  commentId: T:Steeltoe.Messaging.IMessage
  parent: Steeltoe.Messaging
  name: IMessage
  nameWithType: IMessage
  fullName: Steeltoe.Messaging.IMessage
- uid: System.Object[]
  isExternal: true
  name: Object[]
  nameWithType: Object[]
  fullName: System.Object[]
  nameWithType.vb: Object()
  fullName.vb: System.Object()
  name.vb: Object()
  spec.csharp:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Steeltoe.Messaging
  commentId: N:Steeltoe.Messaging
  name: Steeltoe.Messaging
  nameWithType: Steeltoe.Messaging
  fullName: Steeltoe.Messaging
- uid: Steeltoe.Messaging.Handler.Invocation.InvocableHandlerMethod.GetMethodArgumentValues*
  commentId: Overload:Steeltoe.Messaging.Handler.Invocation.InvocableHandlerMethod.GetMethodArgumentValues
  name: GetMethodArgumentValues
  nameWithType: InvocableHandlerMethod.GetMethodArgumentValues
  fullName: Steeltoe.Messaging.Handler.Invocation.InvocableHandlerMethod.GetMethodArgumentValues
- uid: Steeltoe.Messaging.Handler.Invocation.InvocableHandlerMethod.DoInvoke*
  commentId: Overload:Steeltoe.Messaging.Handler.Invocation.InvocableHandlerMethod.DoInvoke
  name: DoInvoke
  nameWithType: InvocableHandlerMethod.DoInvoke
  fullName: Steeltoe.Messaging.Handler.Invocation.InvocableHandlerMethod.DoInvoke
