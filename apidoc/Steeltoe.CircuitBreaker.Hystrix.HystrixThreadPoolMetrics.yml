### YamlMime:ManagedReference
items:
- uid: Steeltoe.CircuitBreaker.Hystrix.HystrixThreadPoolMetrics
  commentId: T:Steeltoe.CircuitBreaker.Hystrix.HystrixThreadPoolMetrics
  id: HystrixThreadPoolMetrics
  parent: Steeltoe.CircuitBreaker.Hystrix
  children:
  - Steeltoe.CircuitBreaker.Hystrix.HystrixThreadPoolMetrics.AppendEventToBucket
  - Steeltoe.CircuitBreaker.Hystrix.HystrixThreadPoolMetrics.CounterAggregator
  - Steeltoe.CircuitBreaker.Hystrix.HystrixThreadPoolMetrics.CumulativeCountThreadsExecuted
  - Steeltoe.CircuitBreaker.Hystrix.HystrixThreadPoolMetrics.CumulativeCountThreadsRejected
  - Steeltoe.CircuitBreaker.Hystrix.HystrixThreadPoolMetrics.CurrentActiveCount
  - Steeltoe.CircuitBreaker.Hystrix.HystrixThreadPoolMetrics.CurrentCompletedTaskCount
  - Steeltoe.CircuitBreaker.Hystrix.HystrixThreadPoolMetrics.CurrentCorePoolSize
  - Steeltoe.CircuitBreaker.Hystrix.HystrixThreadPoolMetrics.CurrentLargestPoolSize
  - Steeltoe.CircuitBreaker.Hystrix.HystrixThreadPoolMetrics.CurrentMaximumPoolSize
  - Steeltoe.CircuitBreaker.Hystrix.HystrixThreadPoolMetrics.CurrentPoolSize
  - Steeltoe.CircuitBreaker.Hystrix.HystrixThreadPoolMetrics.CurrentQueueSize
  - Steeltoe.CircuitBreaker.Hystrix.HystrixThreadPoolMetrics.CurrentTaskCount
  - Steeltoe.CircuitBreaker.Hystrix.HystrixThreadPoolMetrics.GetCumulativeCount(Steeltoe.CircuitBreaker.Hystrix.ThreadPoolEventType)
  - Steeltoe.CircuitBreaker.Hystrix.HystrixThreadPoolMetrics.GetCumulativeCount(Steeltoe.CircuitBreaker.Hystrix.Util.HystrixRollingNumberEvent)
  - Steeltoe.CircuitBreaker.Hystrix.HystrixThreadPoolMetrics.GetCurrentConcurrencyThunk(Steeltoe.CircuitBreaker.Hystrix.IHystrixThreadPoolKey)
  - Steeltoe.CircuitBreaker.Hystrix.HystrixThreadPoolMetrics.GetInstance(Steeltoe.CircuitBreaker.Hystrix.IHystrixThreadPoolKey)
  - Steeltoe.CircuitBreaker.Hystrix.HystrixThreadPoolMetrics.GetInstance(Steeltoe.CircuitBreaker.Hystrix.IHystrixThreadPoolKey,Steeltoe.CircuitBreaker.Hystrix.Strategy.Concurrency.IHystrixTaskScheduler,Steeltoe.CircuitBreaker.Hystrix.IHystrixThreadPoolOptions)
  - Steeltoe.CircuitBreaker.Hystrix.HystrixThreadPoolMetrics.GetInstances
  - Steeltoe.CircuitBreaker.Hystrix.HystrixThreadPoolMetrics.GetRollingCount(Steeltoe.CircuitBreaker.Hystrix.ThreadPoolEventType)
  - Steeltoe.CircuitBreaker.Hystrix.HystrixThreadPoolMetrics.GetRollingCount(Steeltoe.CircuitBreaker.Hystrix.Util.HystrixRollingNumberEvent)
  - Steeltoe.CircuitBreaker.Hystrix.HystrixThreadPoolMetrics.MarkThreadCompletion
  - Steeltoe.CircuitBreaker.Hystrix.HystrixThreadPoolMetrics.MarkThreadExecution
  - Steeltoe.CircuitBreaker.Hystrix.HystrixThreadPoolMetrics.MarkThreadRejection
  - Steeltoe.CircuitBreaker.Hystrix.HystrixThreadPoolMetrics.Properties
  - Steeltoe.CircuitBreaker.Hystrix.HystrixThreadPoolMetrics.RollingCountThreadsExecuted
  - Steeltoe.CircuitBreaker.Hystrix.HystrixThreadPoolMetrics.RollingCountThreadsRejected
  - Steeltoe.CircuitBreaker.Hystrix.HystrixThreadPoolMetrics.RollingMaxActiveThreads
  - Steeltoe.CircuitBreaker.Hystrix.HystrixThreadPoolMetrics.TaskScheduler
  - Steeltoe.CircuitBreaker.Hystrix.HystrixThreadPoolMetrics.ThreadPoolKey
  langs:
  - csharp
  - vb
  name: HystrixThreadPoolMetrics
  nameWithType: HystrixThreadPoolMetrics
  fullName: Steeltoe.CircuitBreaker.Hystrix.HystrixThreadPoolMetrics
  type: Class
  source:
    remote:
      path: src/CircuitBreaker/src/HystrixBase/HystrixThreadPoolMetrics.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: HystrixThreadPoolMetrics
    path: ../Steeltoe/src/CircuitBreaker/src/HystrixBase/HystrixThreadPoolMetrics.cs
    startLine: 16
  assemblies:
  - Steeltoe.CircuitBreaker.HystrixBase
  namespace: Steeltoe.CircuitBreaker.Hystrix
  syntax:
    content: 'public class HystrixThreadPoolMetrics : HystrixMetrics'
    content.vb: >-
      Public Class HystrixThreadPoolMetrics

          Inherits HystrixMetrics
  inheritance:
  - System.Object
  - Steeltoe.CircuitBreaker.Hystrix.HystrixMetrics
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Steeltoe.CircuitBreaker.Hystrix.HystrixThreadPoolMetrics.GetInstance(Steeltoe.CircuitBreaker.Hystrix.IHystrixThreadPoolKey,Steeltoe.CircuitBreaker.Hystrix.Strategy.Concurrency.IHystrixTaskScheduler,Steeltoe.CircuitBreaker.Hystrix.IHystrixThreadPoolOptions)
  commentId: M:Steeltoe.CircuitBreaker.Hystrix.HystrixThreadPoolMetrics.GetInstance(Steeltoe.CircuitBreaker.Hystrix.IHystrixThreadPoolKey,Steeltoe.CircuitBreaker.Hystrix.Strategy.Concurrency.IHystrixTaskScheduler,Steeltoe.CircuitBreaker.Hystrix.IHystrixThreadPoolOptions)
  id: GetInstance(Steeltoe.CircuitBreaker.Hystrix.IHystrixThreadPoolKey,Steeltoe.CircuitBreaker.Hystrix.Strategy.Concurrency.IHystrixTaskScheduler,Steeltoe.CircuitBreaker.Hystrix.IHystrixThreadPoolOptions)
  parent: Steeltoe.CircuitBreaker.Hystrix.HystrixThreadPoolMetrics
  langs:
  - csharp
  - vb
  name: GetInstance(IHystrixThreadPoolKey, IHystrixTaskScheduler, IHystrixThreadPoolOptions)
  nameWithType: HystrixThreadPoolMetrics.GetInstance(IHystrixThreadPoolKey, IHystrixTaskScheduler, IHystrixThreadPoolOptions)
  fullName: Steeltoe.CircuitBreaker.Hystrix.HystrixThreadPoolMetrics.GetInstance(Steeltoe.CircuitBreaker.Hystrix.IHystrixThreadPoolKey, Steeltoe.CircuitBreaker.Hystrix.Strategy.Concurrency.IHystrixTaskScheduler, Steeltoe.CircuitBreaker.Hystrix.IHystrixThreadPoolOptions)
  type: Method
  source:
    remote:
      path: src/CircuitBreaker/src/HystrixBase/HystrixThreadPoolMetrics.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: GetInstance
    path: ../Steeltoe/src/CircuitBreaker/src/HystrixBase/HystrixThreadPoolMetrics.cs
    startLine: 25
  assemblies:
  - Steeltoe.CircuitBreaker.HystrixBase
  namespace: Steeltoe.CircuitBreaker.Hystrix
  syntax:
    content: public static HystrixThreadPoolMetrics GetInstance(IHystrixThreadPoolKey key, IHystrixTaskScheduler taskScheduler, IHystrixThreadPoolOptions properties)
    parameters:
    - id: key
      type: Steeltoe.CircuitBreaker.Hystrix.IHystrixThreadPoolKey
    - id: taskScheduler
      type: Steeltoe.CircuitBreaker.Hystrix.Strategy.Concurrency.IHystrixTaskScheduler
    - id: properties
      type: Steeltoe.CircuitBreaker.Hystrix.IHystrixThreadPoolOptions
    return:
      type: Steeltoe.CircuitBreaker.Hystrix.HystrixThreadPoolMetrics
    content.vb: Public Shared Function GetInstance(key As IHystrixThreadPoolKey, taskScheduler As IHystrixTaskScheduler, properties As IHystrixThreadPoolOptions) As HystrixThreadPoolMetrics
  overload: Steeltoe.CircuitBreaker.Hystrix.HystrixThreadPoolMetrics.GetInstance*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Steeltoe.CircuitBreaker.Hystrix.HystrixThreadPoolMetrics.GetInstance(Steeltoe.CircuitBreaker.Hystrix.IHystrixThreadPoolKey)
  commentId: M:Steeltoe.CircuitBreaker.Hystrix.HystrixThreadPoolMetrics.GetInstance(Steeltoe.CircuitBreaker.Hystrix.IHystrixThreadPoolKey)
  id: GetInstance(Steeltoe.CircuitBreaker.Hystrix.IHystrixThreadPoolKey)
  parent: Steeltoe.CircuitBreaker.Hystrix.HystrixThreadPoolMetrics
  langs:
  - csharp
  - vb
  name: GetInstance(IHystrixThreadPoolKey)
  nameWithType: HystrixThreadPoolMetrics.GetInstance(IHystrixThreadPoolKey)
  fullName: Steeltoe.CircuitBreaker.Hystrix.HystrixThreadPoolMetrics.GetInstance(Steeltoe.CircuitBreaker.Hystrix.IHystrixThreadPoolKey)
  type: Method
  source:
    remote:
      path: src/CircuitBreaker/src/HystrixBase/HystrixThreadPoolMetrics.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: GetInstance
    path: ../Steeltoe/src/CircuitBreaker/src/HystrixBase/HystrixThreadPoolMetrics.cs
    startLine: 30
  assemblies:
  - Steeltoe.CircuitBreaker.HystrixBase
  namespace: Steeltoe.CircuitBreaker.Hystrix
  syntax:
    content: public static HystrixThreadPoolMetrics GetInstance(IHystrixThreadPoolKey key)
    parameters:
    - id: key
      type: Steeltoe.CircuitBreaker.Hystrix.IHystrixThreadPoolKey
    return:
      type: Steeltoe.CircuitBreaker.Hystrix.HystrixThreadPoolMetrics
    content.vb: Public Shared Function GetInstance(key As IHystrixThreadPoolKey) As HystrixThreadPoolMetrics
  overload: Steeltoe.CircuitBreaker.Hystrix.HystrixThreadPoolMetrics.GetInstance*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Steeltoe.CircuitBreaker.Hystrix.HystrixThreadPoolMetrics.GetInstances
  commentId: M:Steeltoe.CircuitBreaker.Hystrix.HystrixThreadPoolMetrics.GetInstances
  id: GetInstances
  parent: Steeltoe.CircuitBreaker.Hystrix.HystrixThreadPoolMetrics
  langs:
  - csharp
  - vb
  name: GetInstances()
  nameWithType: HystrixThreadPoolMetrics.GetInstances()
  fullName: Steeltoe.CircuitBreaker.Hystrix.HystrixThreadPoolMetrics.GetInstances()
  type: Method
  source:
    remote:
      path: src/CircuitBreaker/src/HystrixBase/HystrixThreadPoolMetrics.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: GetInstances
    path: ../Steeltoe/src/CircuitBreaker/src/HystrixBase/HystrixThreadPoolMetrics.cs
    startLine: 36
  assemblies:
  - Steeltoe.CircuitBreaker.HystrixBase
  namespace: Steeltoe.CircuitBreaker.Hystrix
  syntax:
    content: public static ICollection<HystrixThreadPoolMetrics> GetInstances()
    return:
      type: System.Collections.Generic.ICollection{Steeltoe.CircuitBreaker.Hystrix.HystrixThreadPoolMetrics}
    content.vb: Public Shared Function GetInstances As ICollection(Of HystrixThreadPoolMetrics)
  overload: Steeltoe.CircuitBreaker.Hystrix.HystrixThreadPoolMetrics.GetInstances*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Steeltoe.CircuitBreaker.Hystrix.HystrixThreadPoolMetrics.AppendEventToBucket
  commentId: P:Steeltoe.CircuitBreaker.Hystrix.HystrixThreadPoolMetrics.AppendEventToBucket
  id: AppendEventToBucket
  parent: Steeltoe.CircuitBreaker.Hystrix.HystrixThreadPoolMetrics
  langs:
  - csharp
  - vb
  name: AppendEventToBucket
  nameWithType: HystrixThreadPoolMetrics.AppendEventToBucket
  fullName: Steeltoe.CircuitBreaker.Hystrix.HystrixThreadPoolMetrics.AppendEventToBucket
  type: Property
  source:
    remote:
      path: src/CircuitBreaker/src/HystrixBase/HystrixThreadPoolMetrics.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: AppendEventToBucket
    path: ../Steeltoe/src/CircuitBreaker/src/HystrixBase/HystrixThreadPoolMetrics.cs
    startLine: 55
  assemblies:
  - Steeltoe.CircuitBreaker.HystrixBase
  namespace: Steeltoe.CircuitBreaker.Hystrix
  syntax:
    content: public static Func<long[], HystrixCommandCompletion, long[]> AppendEventToBucket { get; }
    parameters: []
    return:
      type: System.Func{System.Int64[],Steeltoe.CircuitBreaker.Hystrix.Metric.HystrixCommandCompletion,System.Int64[]}
    content.vb: Public Shared ReadOnly Property AppendEventToBucket As Func(Of Long(), HystrixCommandCompletion, Long())
  overload: Steeltoe.CircuitBreaker.Hystrix.HystrixThreadPoolMetrics.AppendEventToBucket*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Steeltoe.CircuitBreaker.Hystrix.HystrixThreadPoolMetrics.CounterAggregator
  commentId: P:Steeltoe.CircuitBreaker.Hystrix.HystrixThreadPoolMetrics.CounterAggregator
  id: CounterAggregator
  parent: Steeltoe.CircuitBreaker.Hystrix.HystrixThreadPoolMetrics
  langs:
  - csharp
  - vb
  name: CounterAggregator
  nameWithType: HystrixThreadPoolMetrics.CounterAggregator
  fullName: Steeltoe.CircuitBreaker.Hystrix.HystrixThreadPoolMetrics.CounterAggregator
  type: Property
  source:
    remote:
      path: src/CircuitBreaker/src/HystrixBase/HystrixThreadPoolMetrics.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: CounterAggregator
    path: ../Steeltoe/src/CircuitBreaker/src/HystrixBase/HystrixThreadPoolMetrics.cs
    startLine: 72
  assemblies:
  - Steeltoe.CircuitBreaker.HystrixBase
  namespace: Steeltoe.CircuitBreaker.Hystrix
  syntax:
    content: public static Func<long[], long[], long[]> CounterAggregator { get; }
    parameters: []
    return:
      type: System.Func{System.Int64[],System.Int64[],System.Int64[]}
    content.vb: Public Shared ReadOnly Property CounterAggregator As Func(Of Long(), Long(), Long())
  overload: Steeltoe.CircuitBreaker.Hystrix.HystrixThreadPoolMetrics.CounterAggregator*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Steeltoe.CircuitBreaker.Hystrix.HystrixThreadPoolMetrics.GetCurrentConcurrencyThunk(Steeltoe.CircuitBreaker.Hystrix.IHystrixThreadPoolKey)
  commentId: M:Steeltoe.CircuitBreaker.Hystrix.HystrixThreadPoolMetrics.GetCurrentConcurrencyThunk(Steeltoe.CircuitBreaker.Hystrix.IHystrixThreadPoolKey)
  id: GetCurrentConcurrencyThunk(Steeltoe.CircuitBreaker.Hystrix.IHystrixThreadPoolKey)
  parent: Steeltoe.CircuitBreaker.Hystrix.HystrixThreadPoolMetrics
  langs:
  - csharp
  - vb
  name: GetCurrentConcurrencyThunk(IHystrixThreadPoolKey)
  nameWithType: HystrixThreadPoolMetrics.GetCurrentConcurrencyThunk(IHystrixThreadPoolKey)
  fullName: Steeltoe.CircuitBreaker.Hystrix.HystrixThreadPoolMetrics.GetCurrentConcurrencyThunk(Steeltoe.CircuitBreaker.Hystrix.IHystrixThreadPoolKey)
  type: Method
  source:
    remote:
      path: src/CircuitBreaker/src/HystrixBase/HystrixThreadPoolMetrics.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: GetCurrentConcurrencyThunk
    path: ../Steeltoe/src/CircuitBreaker/src/HystrixBase/HystrixThreadPoolMetrics.cs
    startLine: 109
  assemblies:
  - Steeltoe.CircuitBreaker.HystrixBase
  namespace: Steeltoe.CircuitBreaker.Hystrix
  syntax:
    content: public static Func<int> GetCurrentConcurrencyThunk(IHystrixThreadPoolKey threadPoolKey)
    parameters:
    - id: threadPoolKey
      type: Steeltoe.CircuitBreaker.Hystrix.IHystrixThreadPoolKey
    return:
      type: System.Func{System.Int32}
    content.vb: Public Shared Function GetCurrentConcurrencyThunk(threadPoolKey As IHystrixThreadPoolKey) As Func(Of Integer)
  overload: Steeltoe.CircuitBreaker.Hystrix.HystrixThreadPoolMetrics.GetCurrentConcurrencyThunk*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Steeltoe.CircuitBreaker.Hystrix.HystrixThreadPoolMetrics.TaskScheduler
  commentId: P:Steeltoe.CircuitBreaker.Hystrix.HystrixThreadPoolMetrics.TaskScheduler
  id: TaskScheduler
  parent: Steeltoe.CircuitBreaker.Hystrix.HystrixThreadPoolMetrics
  langs:
  - csharp
  - vb
  name: TaskScheduler
  nameWithType: HystrixThreadPoolMetrics.TaskScheduler
  fullName: Steeltoe.CircuitBreaker.Hystrix.HystrixThreadPoolMetrics.TaskScheduler
  type: Property
  source:
    remote:
      path: src/CircuitBreaker/src/HystrixBase/HystrixThreadPoolMetrics.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: TaskScheduler
    path: ../Steeltoe/src/CircuitBreaker/src/HystrixBase/HystrixThreadPoolMetrics.cs
    startLine: 117
  assemblies:
  - Steeltoe.CircuitBreaker.HystrixBase
  namespace: Steeltoe.CircuitBreaker.Hystrix
  syntax:
    content: public IHystrixTaskScheduler TaskScheduler { get; }
    parameters: []
    return:
      type: Steeltoe.CircuitBreaker.Hystrix.Strategy.Concurrency.IHystrixTaskScheduler
    content.vb: Public ReadOnly Property TaskScheduler As IHystrixTaskScheduler
  overload: Steeltoe.CircuitBreaker.Hystrix.HystrixThreadPoolMetrics.TaskScheduler*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Steeltoe.CircuitBreaker.Hystrix.HystrixThreadPoolMetrics.ThreadPoolKey
  commentId: P:Steeltoe.CircuitBreaker.Hystrix.HystrixThreadPoolMetrics.ThreadPoolKey
  id: ThreadPoolKey
  parent: Steeltoe.CircuitBreaker.Hystrix.HystrixThreadPoolMetrics
  langs:
  - csharp
  - vb
  name: ThreadPoolKey
  nameWithType: HystrixThreadPoolMetrics.ThreadPoolKey
  fullName: Steeltoe.CircuitBreaker.Hystrix.HystrixThreadPoolMetrics.ThreadPoolKey
  type: Property
  source:
    remote:
      path: src/CircuitBreaker/src/HystrixBase/HystrixThreadPoolMetrics.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: ThreadPoolKey
    path: ../Steeltoe/src/CircuitBreaker/src/HystrixBase/HystrixThreadPoolMetrics.cs
    startLine: 119
  assemblies:
  - Steeltoe.CircuitBreaker.HystrixBase
  namespace: Steeltoe.CircuitBreaker.Hystrix
  syntax:
    content: public IHystrixThreadPoolKey ThreadPoolKey { get; }
    parameters: []
    return:
      type: Steeltoe.CircuitBreaker.Hystrix.IHystrixThreadPoolKey
    content.vb: Public ReadOnly Property ThreadPoolKey As IHystrixThreadPoolKey
  overload: Steeltoe.CircuitBreaker.Hystrix.HystrixThreadPoolMetrics.ThreadPoolKey*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Steeltoe.CircuitBreaker.Hystrix.HystrixThreadPoolMetrics.Properties
  commentId: P:Steeltoe.CircuitBreaker.Hystrix.HystrixThreadPoolMetrics.Properties
  id: Properties
  parent: Steeltoe.CircuitBreaker.Hystrix.HystrixThreadPoolMetrics
  langs:
  - csharp
  - vb
  name: Properties
  nameWithType: HystrixThreadPoolMetrics.Properties
  fullName: Steeltoe.CircuitBreaker.Hystrix.HystrixThreadPoolMetrics.Properties
  type: Property
  source:
    remote:
      path: src/CircuitBreaker/src/HystrixBase/HystrixThreadPoolMetrics.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Properties
    path: ../Steeltoe/src/CircuitBreaker/src/HystrixBase/HystrixThreadPoolMetrics.cs
    startLine: 121
  assemblies:
  - Steeltoe.CircuitBreaker.HystrixBase
  namespace: Steeltoe.CircuitBreaker.Hystrix
  syntax:
    content: public IHystrixThreadPoolOptions Properties { get; }
    parameters: []
    return:
      type: Steeltoe.CircuitBreaker.Hystrix.IHystrixThreadPoolOptions
    content.vb: Public ReadOnly Property Properties As IHystrixThreadPoolOptions
  overload: Steeltoe.CircuitBreaker.Hystrix.HystrixThreadPoolMetrics.Properties*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Steeltoe.CircuitBreaker.Hystrix.HystrixThreadPoolMetrics.CurrentActiveCount
  commentId: P:Steeltoe.CircuitBreaker.Hystrix.HystrixThreadPoolMetrics.CurrentActiveCount
  id: CurrentActiveCount
  parent: Steeltoe.CircuitBreaker.Hystrix.HystrixThreadPoolMetrics
  langs:
  - csharp
  - vb
  name: CurrentActiveCount
  nameWithType: HystrixThreadPoolMetrics.CurrentActiveCount
  fullName: Steeltoe.CircuitBreaker.Hystrix.HystrixThreadPoolMetrics.CurrentActiveCount
  type: Property
  source:
    remote:
      path: src/CircuitBreaker/src/HystrixBase/HystrixThreadPoolMetrics.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: CurrentActiveCount
    path: ../Steeltoe/src/CircuitBreaker/src/HystrixBase/HystrixThreadPoolMetrics.cs
    startLine: 123
  assemblies:
  - Steeltoe.CircuitBreaker.HystrixBase
  namespace: Steeltoe.CircuitBreaker.Hystrix
  syntax:
    content: public int CurrentActiveCount { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property CurrentActiveCount As Integer
  overload: Steeltoe.CircuitBreaker.Hystrix.HystrixThreadPoolMetrics.CurrentActiveCount*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Steeltoe.CircuitBreaker.Hystrix.HystrixThreadPoolMetrics.CurrentCompletedTaskCount
  commentId: P:Steeltoe.CircuitBreaker.Hystrix.HystrixThreadPoolMetrics.CurrentCompletedTaskCount
  id: CurrentCompletedTaskCount
  parent: Steeltoe.CircuitBreaker.Hystrix.HystrixThreadPoolMetrics
  langs:
  - csharp
  - vb
  name: CurrentCompletedTaskCount
  nameWithType: HystrixThreadPoolMetrics.CurrentCompletedTaskCount
  fullName: Steeltoe.CircuitBreaker.Hystrix.HystrixThreadPoolMetrics.CurrentCompletedTaskCount
  type: Property
  source:
    remote:
      path: src/CircuitBreaker/src/HystrixBase/HystrixThreadPoolMetrics.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: CurrentCompletedTaskCount
    path: ../Steeltoe/src/CircuitBreaker/src/HystrixBase/HystrixThreadPoolMetrics.cs
    startLine: 125
  assemblies:
  - Steeltoe.CircuitBreaker.HystrixBase
  namespace: Steeltoe.CircuitBreaker.Hystrix
  syntax:
    content: public int CurrentCompletedTaskCount { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property CurrentCompletedTaskCount As Integer
  overload: Steeltoe.CircuitBreaker.Hystrix.HystrixThreadPoolMetrics.CurrentCompletedTaskCount*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Steeltoe.CircuitBreaker.Hystrix.HystrixThreadPoolMetrics.CurrentCorePoolSize
  commentId: P:Steeltoe.CircuitBreaker.Hystrix.HystrixThreadPoolMetrics.CurrentCorePoolSize
  id: CurrentCorePoolSize
  parent: Steeltoe.CircuitBreaker.Hystrix.HystrixThreadPoolMetrics
  langs:
  - csharp
  - vb
  name: CurrentCorePoolSize
  nameWithType: HystrixThreadPoolMetrics.CurrentCorePoolSize
  fullName: Steeltoe.CircuitBreaker.Hystrix.HystrixThreadPoolMetrics.CurrentCorePoolSize
  type: Property
  source:
    remote:
      path: src/CircuitBreaker/src/HystrixBase/HystrixThreadPoolMetrics.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: CurrentCorePoolSize
    path: ../Steeltoe/src/CircuitBreaker/src/HystrixBase/HystrixThreadPoolMetrics.cs
    startLine: 127
  assemblies:
  - Steeltoe.CircuitBreaker.HystrixBase
  namespace: Steeltoe.CircuitBreaker.Hystrix
  syntax:
    content: public int CurrentCorePoolSize { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property CurrentCorePoolSize As Integer
  overload: Steeltoe.CircuitBreaker.Hystrix.HystrixThreadPoolMetrics.CurrentCorePoolSize*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Steeltoe.CircuitBreaker.Hystrix.HystrixThreadPoolMetrics.CurrentLargestPoolSize
  commentId: P:Steeltoe.CircuitBreaker.Hystrix.HystrixThreadPoolMetrics.CurrentLargestPoolSize
  id: CurrentLargestPoolSize
  parent: Steeltoe.CircuitBreaker.Hystrix.HystrixThreadPoolMetrics
  langs:
  - csharp
  - vb
  name: CurrentLargestPoolSize
  nameWithType: HystrixThreadPoolMetrics.CurrentLargestPoolSize
  fullName: Steeltoe.CircuitBreaker.Hystrix.HystrixThreadPoolMetrics.CurrentLargestPoolSize
  type: Property
  source:
    remote:
      path: src/CircuitBreaker/src/HystrixBase/HystrixThreadPoolMetrics.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: CurrentLargestPoolSize
    path: ../Steeltoe/src/CircuitBreaker/src/HystrixBase/HystrixThreadPoolMetrics.cs
    startLine: 129
  assemblies:
  - Steeltoe.CircuitBreaker.HystrixBase
  namespace: Steeltoe.CircuitBreaker.Hystrix
  syntax:
    content: public int CurrentLargestPoolSize { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property CurrentLargestPoolSize As Integer
  overload: Steeltoe.CircuitBreaker.Hystrix.HystrixThreadPoolMetrics.CurrentLargestPoolSize*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Steeltoe.CircuitBreaker.Hystrix.HystrixThreadPoolMetrics.CurrentMaximumPoolSize
  commentId: P:Steeltoe.CircuitBreaker.Hystrix.HystrixThreadPoolMetrics.CurrentMaximumPoolSize
  id: CurrentMaximumPoolSize
  parent: Steeltoe.CircuitBreaker.Hystrix.HystrixThreadPoolMetrics
  langs:
  - csharp
  - vb
  name: CurrentMaximumPoolSize
  nameWithType: HystrixThreadPoolMetrics.CurrentMaximumPoolSize
  fullName: Steeltoe.CircuitBreaker.Hystrix.HystrixThreadPoolMetrics.CurrentMaximumPoolSize
  type: Property
  source:
    remote:
      path: src/CircuitBreaker/src/HystrixBase/HystrixThreadPoolMetrics.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: CurrentMaximumPoolSize
    path: ../Steeltoe/src/CircuitBreaker/src/HystrixBase/HystrixThreadPoolMetrics.cs
    startLine: 131
  assemblies:
  - Steeltoe.CircuitBreaker.HystrixBase
  namespace: Steeltoe.CircuitBreaker.Hystrix
  syntax:
    content: public int CurrentMaximumPoolSize { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property CurrentMaximumPoolSize As Integer
  overload: Steeltoe.CircuitBreaker.Hystrix.HystrixThreadPoolMetrics.CurrentMaximumPoolSize*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Steeltoe.CircuitBreaker.Hystrix.HystrixThreadPoolMetrics.CurrentPoolSize
  commentId: P:Steeltoe.CircuitBreaker.Hystrix.HystrixThreadPoolMetrics.CurrentPoolSize
  id: CurrentPoolSize
  parent: Steeltoe.CircuitBreaker.Hystrix.HystrixThreadPoolMetrics
  langs:
  - csharp
  - vb
  name: CurrentPoolSize
  nameWithType: HystrixThreadPoolMetrics.CurrentPoolSize
  fullName: Steeltoe.CircuitBreaker.Hystrix.HystrixThreadPoolMetrics.CurrentPoolSize
  type: Property
  source:
    remote:
      path: src/CircuitBreaker/src/HystrixBase/HystrixThreadPoolMetrics.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: CurrentPoolSize
    path: ../Steeltoe/src/CircuitBreaker/src/HystrixBase/HystrixThreadPoolMetrics.cs
    startLine: 133
  assemblies:
  - Steeltoe.CircuitBreaker.HystrixBase
  namespace: Steeltoe.CircuitBreaker.Hystrix
  syntax:
    content: public int CurrentPoolSize { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property CurrentPoolSize As Integer
  overload: Steeltoe.CircuitBreaker.Hystrix.HystrixThreadPoolMetrics.CurrentPoolSize*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Steeltoe.CircuitBreaker.Hystrix.HystrixThreadPoolMetrics.CurrentTaskCount
  commentId: P:Steeltoe.CircuitBreaker.Hystrix.HystrixThreadPoolMetrics.CurrentTaskCount
  id: CurrentTaskCount
  parent: Steeltoe.CircuitBreaker.Hystrix.HystrixThreadPoolMetrics
  langs:
  - csharp
  - vb
  name: CurrentTaskCount
  nameWithType: HystrixThreadPoolMetrics.CurrentTaskCount
  fullName: Steeltoe.CircuitBreaker.Hystrix.HystrixThreadPoolMetrics.CurrentTaskCount
  type: Property
  source:
    remote:
      path: src/CircuitBreaker/src/HystrixBase/HystrixThreadPoolMetrics.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: CurrentTaskCount
    path: ../Steeltoe/src/CircuitBreaker/src/HystrixBase/HystrixThreadPoolMetrics.cs
    startLine: 135
  assemblies:
  - Steeltoe.CircuitBreaker.HystrixBase
  namespace: Steeltoe.CircuitBreaker.Hystrix
  syntax:
    content: public int CurrentTaskCount { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property CurrentTaskCount As Integer
  overload: Steeltoe.CircuitBreaker.Hystrix.HystrixThreadPoolMetrics.CurrentTaskCount*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Steeltoe.CircuitBreaker.Hystrix.HystrixThreadPoolMetrics.CurrentQueueSize
  commentId: P:Steeltoe.CircuitBreaker.Hystrix.HystrixThreadPoolMetrics.CurrentQueueSize
  id: CurrentQueueSize
  parent: Steeltoe.CircuitBreaker.Hystrix.HystrixThreadPoolMetrics
  langs:
  - csharp
  - vb
  name: CurrentQueueSize
  nameWithType: HystrixThreadPoolMetrics.CurrentQueueSize
  fullName: Steeltoe.CircuitBreaker.Hystrix.HystrixThreadPoolMetrics.CurrentQueueSize
  type: Property
  source:
    remote:
      path: src/CircuitBreaker/src/HystrixBase/HystrixThreadPoolMetrics.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: CurrentQueueSize
    path: ../Steeltoe/src/CircuitBreaker/src/HystrixBase/HystrixThreadPoolMetrics.cs
    startLine: 137
  assemblies:
  - Steeltoe.CircuitBreaker.HystrixBase
  namespace: Steeltoe.CircuitBreaker.Hystrix
  syntax:
    content: public int CurrentQueueSize { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property CurrentQueueSize As Integer
  overload: Steeltoe.CircuitBreaker.Hystrix.HystrixThreadPoolMetrics.CurrentQueueSize*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Steeltoe.CircuitBreaker.Hystrix.HystrixThreadPoolMetrics.MarkThreadExecution
  commentId: M:Steeltoe.CircuitBreaker.Hystrix.HystrixThreadPoolMetrics.MarkThreadExecution
  id: MarkThreadExecution
  parent: Steeltoe.CircuitBreaker.Hystrix.HystrixThreadPoolMetrics
  langs:
  - csharp
  - vb
  name: MarkThreadExecution()
  nameWithType: HystrixThreadPoolMetrics.MarkThreadExecution()
  fullName: Steeltoe.CircuitBreaker.Hystrix.HystrixThreadPoolMetrics.MarkThreadExecution()
  type: Method
  source:
    remote:
      path: src/CircuitBreaker/src/HystrixBase/HystrixThreadPoolMetrics.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: MarkThreadExecution
    path: ../Steeltoe/src/CircuitBreaker/src/HystrixBase/HystrixThreadPoolMetrics.cs
    startLine: 139
  assemblies:
  - Steeltoe.CircuitBreaker.HystrixBase
  namespace: Steeltoe.CircuitBreaker.Hystrix
  syntax:
    content: public void MarkThreadExecution()
    content.vb: Public Sub MarkThreadExecution
  overload: Steeltoe.CircuitBreaker.Hystrix.HystrixThreadPoolMetrics.MarkThreadExecution*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Steeltoe.CircuitBreaker.Hystrix.HystrixThreadPoolMetrics.RollingCountThreadsExecuted
  commentId: P:Steeltoe.CircuitBreaker.Hystrix.HystrixThreadPoolMetrics.RollingCountThreadsExecuted
  id: RollingCountThreadsExecuted
  parent: Steeltoe.CircuitBreaker.Hystrix.HystrixThreadPoolMetrics
  langs:
  - csharp
  - vb
  name: RollingCountThreadsExecuted
  nameWithType: HystrixThreadPoolMetrics.RollingCountThreadsExecuted
  fullName: Steeltoe.CircuitBreaker.Hystrix.HystrixThreadPoolMetrics.RollingCountThreadsExecuted
  type: Property
  source:
    remote:
      path: src/CircuitBreaker/src/HystrixBase/HystrixThreadPoolMetrics.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: RollingCountThreadsExecuted
    path: ../Steeltoe/src/CircuitBreaker/src/HystrixBase/HystrixThreadPoolMetrics.cs
    startLine: 144
  assemblies:
  - Steeltoe.CircuitBreaker.HystrixBase
  namespace: Steeltoe.CircuitBreaker.Hystrix
  syntax:
    content: public long RollingCountThreadsExecuted { get; }
    parameters: []
    return:
      type: System.Int64
    content.vb: Public ReadOnly Property RollingCountThreadsExecuted As Long
  overload: Steeltoe.CircuitBreaker.Hystrix.HystrixThreadPoolMetrics.RollingCountThreadsExecuted*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Steeltoe.CircuitBreaker.Hystrix.HystrixThreadPoolMetrics.CumulativeCountThreadsExecuted
  commentId: P:Steeltoe.CircuitBreaker.Hystrix.HystrixThreadPoolMetrics.CumulativeCountThreadsExecuted
  id: CumulativeCountThreadsExecuted
  parent: Steeltoe.CircuitBreaker.Hystrix.HystrixThreadPoolMetrics
  langs:
  - csharp
  - vb
  name: CumulativeCountThreadsExecuted
  nameWithType: HystrixThreadPoolMetrics.CumulativeCountThreadsExecuted
  fullName: Steeltoe.CircuitBreaker.Hystrix.HystrixThreadPoolMetrics.CumulativeCountThreadsExecuted
  type: Property
  source:
    remote:
      path: src/CircuitBreaker/src/HystrixBase/HystrixThreadPoolMetrics.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: CumulativeCountThreadsExecuted
    path: ../Steeltoe/src/CircuitBreaker/src/HystrixBase/HystrixThreadPoolMetrics.cs
    startLine: 146
  assemblies:
  - Steeltoe.CircuitBreaker.HystrixBase
  namespace: Steeltoe.CircuitBreaker.Hystrix
  syntax:
    content: public long CumulativeCountThreadsExecuted { get; }
    parameters: []
    return:
      type: System.Int64
    content.vb: Public ReadOnly Property CumulativeCountThreadsExecuted As Long
  overload: Steeltoe.CircuitBreaker.Hystrix.HystrixThreadPoolMetrics.CumulativeCountThreadsExecuted*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Steeltoe.CircuitBreaker.Hystrix.HystrixThreadPoolMetrics.RollingCountThreadsRejected
  commentId: P:Steeltoe.CircuitBreaker.Hystrix.HystrixThreadPoolMetrics.RollingCountThreadsRejected
  id: RollingCountThreadsRejected
  parent: Steeltoe.CircuitBreaker.Hystrix.HystrixThreadPoolMetrics
  langs:
  - csharp
  - vb
  name: RollingCountThreadsRejected
  nameWithType: HystrixThreadPoolMetrics.RollingCountThreadsRejected
  fullName: Steeltoe.CircuitBreaker.Hystrix.HystrixThreadPoolMetrics.RollingCountThreadsRejected
  type: Property
  source:
    remote:
      path: src/CircuitBreaker/src/HystrixBase/HystrixThreadPoolMetrics.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: RollingCountThreadsRejected
    path: ../Steeltoe/src/CircuitBreaker/src/HystrixBase/HystrixThreadPoolMetrics.cs
    startLine: 148
  assemblies:
  - Steeltoe.CircuitBreaker.HystrixBase
  namespace: Steeltoe.CircuitBreaker.Hystrix
  syntax:
    content: public long RollingCountThreadsRejected { get; }
    parameters: []
    return:
      type: System.Int64
    content.vb: Public ReadOnly Property RollingCountThreadsRejected As Long
  overload: Steeltoe.CircuitBreaker.Hystrix.HystrixThreadPoolMetrics.RollingCountThreadsRejected*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Steeltoe.CircuitBreaker.Hystrix.HystrixThreadPoolMetrics.CumulativeCountThreadsRejected
  commentId: P:Steeltoe.CircuitBreaker.Hystrix.HystrixThreadPoolMetrics.CumulativeCountThreadsRejected
  id: CumulativeCountThreadsRejected
  parent: Steeltoe.CircuitBreaker.Hystrix.HystrixThreadPoolMetrics
  langs:
  - csharp
  - vb
  name: CumulativeCountThreadsRejected
  nameWithType: HystrixThreadPoolMetrics.CumulativeCountThreadsRejected
  fullName: Steeltoe.CircuitBreaker.Hystrix.HystrixThreadPoolMetrics.CumulativeCountThreadsRejected
  type: Property
  source:
    remote:
      path: src/CircuitBreaker/src/HystrixBase/HystrixThreadPoolMetrics.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: CumulativeCountThreadsRejected
    path: ../Steeltoe/src/CircuitBreaker/src/HystrixBase/HystrixThreadPoolMetrics.cs
    startLine: 150
  assemblies:
  - Steeltoe.CircuitBreaker.HystrixBase
  namespace: Steeltoe.CircuitBreaker.Hystrix
  syntax:
    content: public long CumulativeCountThreadsRejected { get; }
    parameters: []
    return:
      type: System.Int64
    content.vb: Public ReadOnly Property CumulativeCountThreadsRejected As Long
  overload: Steeltoe.CircuitBreaker.Hystrix.HystrixThreadPoolMetrics.CumulativeCountThreadsRejected*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Steeltoe.CircuitBreaker.Hystrix.HystrixThreadPoolMetrics.GetRollingCount(Steeltoe.CircuitBreaker.Hystrix.ThreadPoolEventType)
  commentId: M:Steeltoe.CircuitBreaker.Hystrix.HystrixThreadPoolMetrics.GetRollingCount(Steeltoe.CircuitBreaker.Hystrix.ThreadPoolEventType)
  id: GetRollingCount(Steeltoe.CircuitBreaker.Hystrix.ThreadPoolEventType)
  parent: Steeltoe.CircuitBreaker.Hystrix.HystrixThreadPoolMetrics
  langs:
  - csharp
  - vb
  name: GetRollingCount(ThreadPoolEventType)
  nameWithType: HystrixThreadPoolMetrics.GetRollingCount(ThreadPoolEventType)
  fullName: Steeltoe.CircuitBreaker.Hystrix.HystrixThreadPoolMetrics.GetRollingCount(Steeltoe.CircuitBreaker.Hystrix.ThreadPoolEventType)
  type: Method
  source:
    remote:
      path: src/CircuitBreaker/src/HystrixBase/HystrixThreadPoolMetrics.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: GetRollingCount
    path: ../Steeltoe/src/CircuitBreaker/src/HystrixBase/HystrixThreadPoolMetrics.cs
    startLine: 152
  assemblies:
  - Steeltoe.CircuitBreaker.HystrixBase
  namespace: Steeltoe.CircuitBreaker.Hystrix
  syntax:
    content: public long GetRollingCount(ThreadPoolEventType event)
    parameters:
    - id: event
      type: Steeltoe.CircuitBreaker.Hystrix.ThreadPoolEventType
    return:
      type: System.Int64
    content.vb: Public Function GetRollingCount(event As ThreadPoolEventType) As Long
  overload: Steeltoe.CircuitBreaker.Hystrix.HystrixThreadPoolMetrics.GetRollingCount*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Steeltoe.CircuitBreaker.Hystrix.HystrixThreadPoolMetrics.GetRollingCount(Steeltoe.CircuitBreaker.Hystrix.Util.HystrixRollingNumberEvent)
  commentId: M:Steeltoe.CircuitBreaker.Hystrix.HystrixThreadPoolMetrics.GetRollingCount(Steeltoe.CircuitBreaker.Hystrix.Util.HystrixRollingNumberEvent)
  id: GetRollingCount(Steeltoe.CircuitBreaker.Hystrix.Util.HystrixRollingNumberEvent)
  parent: Steeltoe.CircuitBreaker.Hystrix.HystrixThreadPoolMetrics
  langs:
  - csharp
  - vb
  name: GetRollingCount(HystrixRollingNumberEvent)
  nameWithType: HystrixThreadPoolMetrics.GetRollingCount(HystrixRollingNumberEvent)
  fullName: Steeltoe.CircuitBreaker.Hystrix.HystrixThreadPoolMetrics.GetRollingCount(Steeltoe.CircuitBreaker.Hystrix.Util.HystrixRollingNumberEvent)
  type: Method
  source:
    remote:
      path: src/CircuitBreaker/src/HystrixBase/HystrixThreadPoolMetrics.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: GetRollingCount
    path: ../Steeltoe/src/CircuitBreaker/src/HystrixBase/HystrixThreadPoolMetrics.cs
    startLine: 157
  assemblies:
  - Steeltoe.CircuitBreaker.HystrixBase
  namespace: Steeltoe.CircuitBreaker.Hystrix
  syntax:
    content: public override long GetRollingCount(HystrixRollingNumberEvent event)
    parameters:
    - id: event
      type: Steeltoe.CircuitBreaker.Hystrix.Util.HystrixRollingNumberEvent
    return:
      type: System.Int64
    content.vb: Public Overrides Function GetRollingCount(event As HystrixRollingNumberEvent) As Long
  overridden: Steeltoe.CircuitBreaker.Hystrix.HystrixMetrics.GetRollingCount(Steeltoe.CircuitBreaker.Hystrix.Util.HystrixRollingNumberEvent)
  overload: Steeltoe.CircuitBreaker.Hystrix.HystrixThreadPoolMetrics.GetRollingCount*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Steeltoe.CircuitBreaker.Hystrix.HystrixThreadPoolMetrics.GetCumulativeCount(Steeltoe.CircuitBreaker.Hystrix.ThreadPoolEventType)
  commentId: M:Steeltoe.CircuitBreaker.Hystrix.HystrixThreadPoolMetrics.GetCumulativeCount(Steeltoe.CircuitBreaker.Hystrix.ThreadPoolEventType)
  id: GetCumulativeCount(Steeltoe.CircuitBreaker.Hystrix.ThreadPoolEventType)
  parent: Steeltoe.CircuitBreaker.Hystrix.HystrixThreadPoolMetrics
  langs:
  - csharp
  - vb
  name: GetCumulativeCount(ThreadPoolEventType)
  nameWithType: HystrixThreadPoolMetrics.GetCumulativeCount(ThreadPoolEventType)
  fullName: Steeltoe.CircuitBreaker.Hystrix.HystrixThreadPoolMetrics.GetCumulativeCount(Steeltoe.CircuitBreaker.Hystrix.ThreadPoolEventType)
  type: Method
  source:
    remote:
      path: src/CircuitBreaker/src/HystrixBase/HystrixThreadPoolMetrics.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: GetCumulativeCount
    path: ../Steeltoe/src/CircuitBreaker/src/HystrixBase/HystrixThreadPoolMetrics.cs
    startLine: 162
  assemblies:
  - Steeltoe.CircuitBreaker.HystrixBase
  namespace: Steeltoe.CircuitBreaker.Hystrix
  syntax:
    content: public long GetCumulativeCount(ThreadPoolEventType event)
    parameters:
    - id: event
      type: Steeltoe.CircuitBreaker.Hystrix.ThreadPoolEventType
    return:
      type: System.Int64
    content.vb: Public Function GetCumulativeCount(event As ThreadPoolEventType) As Long
  overload: Steeltoe.CircuitBreaker.Hystrix.HystrixThreadPoolMetrics.GetCumulativeCount*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Steeltoe.CircuitBreaker.Hystrix.HystrixThreadPoolMetrics.GetCumulativeCount(Steeltoe.CircuitBreaker.Hystrix.Util.HystrixRollingNumberEvent)
  commentId: M:Steeltoe.CircuitBreaker.Hystrix.HystrixThreadPoolMetrics.GetCumulativeCount(Steeltoe.CircuitBreaker.Hystrix.Util.HystrixRollingNumberEvent)
  id: GetCumulativeCount(Steeltoe.CircuitBreaker.Hystrix.Util.HystrixRollingNumberEvent)
  parent: Steeltoe.CircuitBreaker.Hystrix.HystrixThreadPoolMetrics
  langs:
  - csharp
  - vb
  name: GetCumulativeCount(HystrixRollingNumberEvent)
  nameWithType: HystrixThreadPoolMetrics.GetCumulativeCount(HystrixRollingNumberEvent)
  fullName: Steeltoe.CircuitBreaker.Hystrix.HystrixThreadPoolMetrics.GetCumulativeCount(Steeltoe.CircuitBreaker.Hystrix.Util.HystrixRollingNumberEvent)
  type: Method
  source:
    remote:
      path: src/CircuitBreaker/src/HystrixBase/HystrixThreadPoolMetrics.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: GetCumulativeCount
    path: ../Steeltoe/src/CircuitBreaker/src/HystrixBase/HystrixThreadPoolMetrics.cs
    startLine: 167
  assemblies:
  - Steeltoe.CircuitBreaker.HystrixBase
  namespace: Steeltoe.CircuitBreaker.Hystrix
  syntax:
    content: public override long GetCumulativeCount(HystrixRollingNumberEvent event)
    parameters:
    - id: event
      type: Steeltoe.CircuitBreaker.Hystrix.Util.HystrixRollingNumberEvent
    return:
      type: System.Int64
    content.vb: Public Overrides Function GetCumulativeCount(event As HystrixRollingNumberEvent) As Long
  overridden: Steeltoe.CircuitBreaker.Hystrix.HystrixMetrics.GetCumulativeCount(Steeltoe.CircuitBreaker.Hystrix.Util.HystrixRollingNumberEvent)
  overload: Steeltoe.CircuitBreaker.Hystrix.HystrixThreadPoolMetrics.GetCumulativeCount*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Steeltoe.CircuitBreaker.Hystrix.HystrixThreadPoolMetrics.MarkThreadCompletion
  commentId: M:Steeltoe.CircuitBreaker.Hystrix.HystrixThreadPoolMetrics.MarkThreadCompletion
  id: MarkThreadCompletion
  parent: Steeltoe.CircuitBreaker.Hystrix.HystrixThreadPoolMetrics
  langs:
  - csharp
  - vb
  name: MarkThreadCompletion()
  nameWithType: HystrixThreadPoolMetrics.MarkThreadCompletion()
  fullName: Steeltoe.CircuitBreaker.Hystrix.HystrixThreadPoolMetrics.MarkThreadCompletion()
  type: Method
  source:
    remote:
      path: src/CircuitBreaker/src/HystrixBase/HystrixThreadPoolMetrics.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: MarkThreadCompletion
    path: ../Steeltoe/src/CircuitBreaker/src/HystrixBase/HystrixThreadPoolMetrics.cs
    startLine: 172
  assemblies:
  - Steeltoe.CircuitBreaker.HystrixBase
  namespace: Steeltoe.CircuitBreaker.Hystrix
  syntax:
    content: public void MarkThreadCompletion()
    content.vb: Public Sub MarkThreadCompletion
  overload: Steeltoe.CircuitBreaker.Hystrix.HystrixThreadPoolMetrics.MarkThreadCompletion*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Steeltoe.CircuitBreaker.Hystrix.HystrixThreadPoolMetrics.RollingMaxActiveThreads
  commentId: P:Steeltoe.CircuitBreaker.Hystrix.HystrixThreadPoolMetrics.RollingMaxActiveThreads
  id: RollingMaxActiveThreads
  parent: Steeltoe.CircuitBreaker.Hystrix.HystrixThreadPoolMetrics
  langs:
  - csharp
  - vb
  name: RollingMaxActiveThreads
  nameWithType: HystrixThreadPoolMetrics.RollingMaxActiveThreads
  fullName: Steeltoe.CircuitBreaker.Hystrix.HystrixThreadPoolMetrics.RollingMaxActiveThreads
  type: Property
  source:
    remote:
      path: src/CircuitBreaker/src/HystrixBase/HystrixThreadPoolMetrics.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: RollingMaxActiveThreads
    path: ../Steeltoe/src/CircuitBreaker/src/HystrixBase/HystrixThreadPoolMetrics.cs
    startLine: 177
  assemblies:
  - Steeltoe.CircuitBreaker.HystrixBase
  namespace: Steeltoe.CircuitBreaker.Hystrix
  syntax:
    content: public long RollingMaxActiveThreads { get; }
    parameters: []
    return:
      type: System.Int64
    content.vb: Public ReadOnly Property RollingMaxActiveThreads As Long
  overload: Steeltoe.CircuitBreaker.Hystrix.HystrixThreadPoolMetrics.RollingMaxActiveThreads*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Steeltoe.CircuitBreaker.Hystrix.HystrixThreadPoolMetrics.MarkThreadRejection
  commentId: M:Steeltoe.CircuitBreaker.Hystrix.HystrixThreadPoolMetrics.MarkThreadRejection
  id: MarkThreadRejection
  parent: Steeltoe.CircuitBreaker.Hystrix.HystrixThreadPoolMetrics
  langs:
  - csharp
  - vb
  name: MarkThreadRejection()
  nameWithType: HystrixThreadPoolMetrics.MarkThreadRejection()
  fullName: Steeltoe.CircuitBreaker.Hystrix.HystrixThreadPoolMetrics.MarkThreadRejection()
  type: Method
  source:
    remote:
      path: src/CircuitBreaker/src/HystrixBase/HystrixThreadPoolMetrics.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: MarkThreadRejection
    path: ../Steeltoe/src/CircuitBreaker/src/HystrixBase/HystrixThreadPoolMetrics.cs
    startLine: 182
  assemblies:
  - Steeltoe.CircuitBreaker.HystrixBase
  namespace: Steeltoe.CircuitBreaker.Hystrix
  syntax:
    content: public void MarkThreadRejection()
    content.vb: Public Sub MarkThreadRejection
  overload: Steeltoe.CircuitBreaker.Hystrix.HystrixThreadPoolMetrics.MarkThreadRejection*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Steeltoe.CircuitBreaker.Hystrix
  commentId: N:Steeltoe.CircuitBreaker.Hystrix
  name: Steeltoe.CircuitBreaker.Hystrix
  nameWithType: Steeltoe.CircuitBreaker.Hystrix
  fullName: Steeltoe.CircuitBreaker.Hystrix
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Steeltoe.CircuitBreaker.Hystrix.HystrixMetrics
  commentId: T:Steeltoe.CircuitBreaker.Hystrix.HystrixMetrics
  parent: Steeltoe.CircuitBreaker.Hystrix
  name: HystrixMetrics
  nameWithType: HystrixMetrics
  fullName: Steeltoe.CircuitBreaker.Hystrix.HystrixMetrics
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Steeltoe.CircuitBreaker.Hystrix.HystrixThreadPoolMetrics.GetInstance*
  commentId: Overload:Steeltoe.CircuitBreaker.Hystrix.HystrixThreadPoolMetrics.GetInstance
  name: GetInstance
  nameWithType: HystrixThreadPoolMetrics.GetInstance
  fullName: Steeltoe.CircuitBreaker.Hystrix.HystrixThreadPoolMetrics.GetInstance
- uid: Steeltoe.CircuitBreaker.Hystrix.IHystrixThreadPoolKey
  commentId: T:Steeltoe.CircuitBreaker.Hystrix.IHystrixThreadPoolKey
  parent: Steeltoe.CircuitBreaker.Hystrix
  name: IHystrixThreadPoolKey
  nameWithType: IHystrixThreadPoolKey
  fullName: Steeltoe.CircuitBreaker.Hystrix.IHystrixThreadPoolKey
- uid: Steeltoe.CircuitBreaker.Hystrix.Strategy.Concurrency.IHystrixTaskScheduler
  commentId: T:Steeltoe.CircuitBreaker.Hystrix.Strategy.Concurrency.IHystrixTaskScheduler
  parent: Steeltoe.CircuitBreaker.Hystrix.Strategy.Concurrency
  name: IHystrixTaskScheduler
  nameWithType: IHystrixTaskScheduler
  fullName: Steeltoe.CircuitBreaker.Hystrix.Strategy.Concurrency.IHystrixTaskScheduler
- uid: Steeltoe.CircuitBreaker.Hystrix.IHystrixThreadPoolOptions
  commentId: T:Steeltoe.CircuitBreaker.Hystrix.IHystrixThreadPoolOptions
  parent: Steeltoe.CircuitBreaker.Hystrix
  name: IHystrixThreadPoolOptions
  nameWithType: IHystrixThreadPoolOptions
  fullName: Steeltoe.CircuitBreaker.Hystrix.IHystrixThreadPoolOptions
- uid: Steeltoe.CircuitBreaker.Hystrix.HystrixThreadPoolMetrics
  commentId: T:Steeltoe.CircuitBreaker.Hystrix.HystrixThreadPoolMetrics
  parent: Steeltoe.CircuitBreaker.Hystrix
  name: HystrixThreadPoolMetrics
  nameWithType: HystrixThreadPoolMetrics
  fullName: Steeltoe.CircuitBreaker.Hystrix.HystrixThreadPoolMetrics
- uid: Steeltoe.CircuitBreaker.Hystrix.Strategy.Concurrency
  commentId: N:Steeltoe.CircuitBreaker.Hystrix.Strategy.Concurrency
  name: Steeltoe.CircuitBreaker.Hystrix.Strategy.Concurrency
  nameWithType: Steeltoe.CircuitBreaker.Hystrix.Strategy.Concurrency
  fullName: Steeltoe.CircuitBreaker.Hystrix.Strategy.Concurrency
- uid: Steeltoe.CircuitBreaker.Hystrix.HystrixThreadPoolMetrics.GetInstances*
  commentId: Overload:Steeltoe.CircuitBreaker.Hystrix.HystrixThreadPoolMetrics.GetInstances
  name: GetInstances
  nameWithType: HystrixThreadPoolMetrics.GetInstances
  fullName: Steeltoe.CircuitBreaker.Hystrix.HystrixThreadPoolMetrics.GetInstances
- uid: System.Collections.Generic.ICollection{Steeltoe.CircuitBreaker.Hystrix.HystrixThreadPoolMetrics}
  commentId: T:System.Collections.Generic.ICollection{Steeltoe.CircuitBreaker.Hystrix.HystrixThreadPoolMetrics}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.ICollection`1
  name: ICollection<HystrixThreadPoolMetrics>
  nameWithType: ICollection<HystrixThreadPoolMetrics>
  fullName: System.Collections.Generic.ICollection<Steeltoe.CircuitBreaker.Hystrix.HystrixThreadPoolMetrics>
  nameWithType.vb: ICollection(Of HystrixThreadPoolMetrics)
  fullName.vb: System.Collections.Generic.ICollection(Of Steeltoe.CircuitBreaker.Hystrix.HystrixThreadPoolMetrics)
  name.vb: ICollection(Of HystrixThreadPoolMetrics)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Steeltoe.CircuitBreaker.Hystrix.HystrixThreadPoolMetrics
    name: HystrixThreadPoolMetrics
    nameWithType: HystrixThreadPoolMetrics
    fullName: Steeltoe.CircuitBreaker.Hystrix.HystrixThreadPoolMetrics
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Steeltoe.CircuitBreaker.Hystrix.HystrixThreadPoolMetrics
    name: HystrixThreadPoolMetrics
    nameWithType: HystrixThreadPoolMetrics
    fullName: Steeltoe.CircuitBreaker.Hystrix.HystrixThreadPoolMetrics
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.ICollection`1
  commentId: T:System.Collections.Generic.ICollection`1
  isExternal: true
  name: ICollection<T>
  nameWithType: ICollection<T>
  fullName: System.Collections.Generic.ICollection<T>
  nameWithType.vb: ICollection(Of T)
  fullName.vb: System.Collections.Generic.ICollection(Of T)
  name.vb: ICollection(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Steeltoe.CircuitBreaker.Hystrix.HystrixThreadPoolMetrics.AppendEventToBucket*
  commentId: Overload:Steeltoe.CircuitBreaker.Hystrix.HystrixThreadPoolMetrics.AppendEventToBucket
  name: AppendEventToBucket
  nameWithType: HystrixThreadPoolMetrics.AppendEventToBucket
  fullName: Steeltoe.CircuitBreaker.Hystrix.HystrixThreadPoolMetrics.AppendEventToBucket
- uid: System.Func{System.Int64[],Steeltoe.CircuitBreaker.Hystrix.Metric.HystrixCommandCompletion,System.Int64[]}
  commentId: T:System.Func{System.Int64[],Steeltoe.CircuitBreaker.Hystrix.Metric.HystrixCommandCompletion,System.Int64[]}
  parent: System
  definition: System.Func`3
  name: Func<Int64[], HystrixCommandCompletion, Int64[]>
  nameWithType: Func<Int64[], HystrixCommandCompletion, Int64[]>
  fullName: System.Func<System.Int64[], Steeltoe.CircuitBreaker.Hystrix.Metric.HystrixCommandCompletion, System.Int64[]>
  nameWithType.vb: Func(Of Int64(), HystrixCommandCompletion, Int64())
  fullName.vb: System.Func(Of System.Int64(), Steeltoe.CircuitBreaker.Hystrix.Metric.HystrixCommandCompletion, System.Int64())
  name.vb: Func(Of Int64(), HystrixCommandCompletion, Int64())
  spec.csharp:
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.CircuitBreaker.Hystrix.Metric.HystrixCommandCompletion
    name: HystrixCommandCompletion
    nameWithType: HystrixCommandCompletion
    fullName: Steeltoe.CircuitBreaker.Hystrix.Metric.HystrixCommandCompletion
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.CircuitBreaker.Hystrix.Metric.HystrixCommandCompletion
    name: HystrixCommandCompletion
    nameWithType: HystrixCommandCompletion
    fullName: Steeltoe.CircuitBreaker.Hystrix.Metric.HystrixCommandCompletion
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Func`3
  commentId: T:System.Func`3
  isExternal: true
  name: Func<T1, T2, TResult>
  nameWithType: Func<T1, T2, TResult>
  fullName: System.Func<T1, T2, TResult>
  nameWithType.vb: Func(Of T1, T2, TResult)
  fullName.vb: System.Func(Of T1, T2, TResult)
  name.vb: Func(Of T1, T2, TResult)
  spec.csharp:
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.CircuitBreaker.Hystrix.HystrixThreadPoolMetrics.CounterAggregator*
  commentId: Overload:Steeltoe.CircuitBreaker.Hystrix.HystrixThreadPoolMetrics.CounterAggregator
  name: CounterAggregator
  nameWithType: HystrixThreadPoolMetrics.CounterAggregator
  fullName: Steeltoe.CircuitBreaker.Hystrix.HystrixThreadPoolMetrics.CounterAggregator
- uid: System.Func{System.Int64[],System.Int64[],System.Int64[]}
  commentId: T:System.Func{System.Int64[],System.Int64[],System.Int64[]}
  parent: System
  definition: System.Func`3
  name: Func<Int64[], Int64[], Int64[]>
  nameWithType: Func<Int64[], Int64[], Int64[]>
  fullName: System.Func<System.Int64[], System.Int64[], System.Int64[]>
  nameWithType.vb: Func(Of Int64(), Int64(), Int64())
  fullName.vb: System.Func(Of System.Int64(), System.Int64(), System.Int64())
  name.vb: Func(Of Int64(), Int64(), Int64())
  spec.csharp:
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.CircuitBreaker.Hystrix.HystrixThreadPoolMetrics.GetCurrentConcurrencyThunk*
  commentId: Overload:Steeltoe.CircuitBreaker.Hystrix.HystrixThreadPoolMetrics.GetCurrentConcurrencyThunk
  name: GetCurrentConcurrencyThunk
  nameWithType: HystrixThreadPoolMetrics.GetCurrentConcurrencyThunk
  fullName: Steeltoe.CircuitBreaker.Hystrix.HystrixThreadPoolMetrics.GetCurrentConcurrencyThunk
- uid: System.Func{System.Int32}
  commentId: T:System.Func{System.Int32}
  parent: System
  definition: System.Func`1
  name: Func<Int32>
  nameWithType: Func<Int32>
  fullName: System.Func<System.Int32>
  nameWithType.vb: Func(Of Int32)
  fullName.vb: System.Func(Of System.Int32)
  name.vb: Func(Of Int32)
  spec.csharp:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Func`1
  commentId: T:System.Func`1
  isExternal: true
  name: Func<TResult>
  nameWithType: Func<TResult>
  fullName: System.Func<TResult>
  nameWithType.vb: Func(Of TResult)
  fullName.vb: System.Func(Of TResult)
  name.vb: Func(Of TResult)
  spec.csharp:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.CircuitBreaker.Hystrix.HystrixThreadPoolMetrics.TaskScheduler*
  commentId: Overload:Steeltoe.CircuitBreaker.Hystrix.HystrixThreadPoolMetrics.TaskScheduler
  name: TaskScheduler
  nameWithType: HystrixThreadPoolMetrics.TaskScheduler
  fullName: Steeltoe.CircuitBreaker.Hystrix.HystrixThreadPoolMetrics.TaskScheduler
- uid: Steeltoe.CircuitBreaker.Hystrix.HystrixThreadPoolMetrics.ThreadPoolKey*
  commentId: Overload:Steeltoe.CircuitBreaker.Hystrix.HystrixThreadPoolMetrics.ThreadPoolKey
  name: ThreadPoolKey
  nameWithType: HystrixThreadPoolMetrics.ThreadPoolKey
  fullName: Steeltoe.CircuitBreaker.Hystrix.HystrixThreadPoolMetrics.ThreadPoolKey
- uid: Steeltoe.CircuitBreaker.Hystrix.HystrixThreadPoolMetrics.Properties*
  commentId: Overload:Steeltoe.CircuitBreaker.Hystrix.HystrixThreadPoolMetrics.Properties
  name: Properties
  nameWithType: HystrixThreadPoolMetrics.Properties
  fullName: Steeltoe.CircuitBreaker.Hystrix.HystrixThreadPoolMetrics.Properties
- uid: Steeltoe.CircuitBreaker.Hystrix.HystrixThreadPoolMetrics.CurrentActiveCount*
  commentId: Overload:Steeltoe.CircuitBreaker.Hystrix.HystrixThreadPoolMetrics.CurrentActiveCount
  name: CurrentActiveCount
  nameWithType: HystrixThreadPoolMetrics.CurrentActiveCount
  fullName: Steeltoe.CircuitBreaker.Hystrix.HystrixThreadPoolMetrics.CurrentActiveCount
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Steeltoe.CircuitBreaker.Hystrix.HystrixThreadPoolMetrics.CurrentCompletedTaskCount*
  commentId: Overload:Steeltoe.CircuitBreaker.Hystrix.HystrixThreadPoolMetrics.CurrentCompletedTaskCount
  name: CurrentCompletedTaskCount
  nameWithType: HystrixThreadPoolMetrics.CurrentCompletedTaskCount
  fullName: Steeltoe.CircuitBreaker.Hystrix.HystrixThreadPoolMetrics.CurrentCompletedTaskCount
- uid: Steeltoe.CircuitBreaker.Hystrix.HystrixThreadPoolMetrics.CurrentCorePoolSize*
  commentId: Overload:Steeltoe.CircuitBreaker.Hystrix.HystrixThreadPoolMetrics.CurrentCorePoolSize
  name: CurrentCorePoolSize
  nameWithType: HystrixThreadPoolMetrics.CurrentCorePoolSize
  fullName: Steeltoe.CircuitBreaker.Hystrix.HystrixThreadPoolMetrics.CurrentCorePoolSize
- uid: Steeltoe.CircuitBreaker.Hystrix.HystrixThreadPoolMetrics.CurrentLargestPoolSize*
  commentId: Overload:Steeltoe.CircuitBreaker.Hystrix.HystrixThreadPoolMetrics.CurrentLargestPoolSize
  name: CurrentLargestPoolSize
  nameWithType: HystrixThreadPoolMetrics.CurrentLargestPoolSize
  fullName: Steeltoe.CircuitBreaker.Hystrix.HystrixThreadPoolMetrics.CurrentLargestPoolSize
- uid: Steeltoe.CircuitBreaker.Hystrix.HystrixThreadPoolMetrics.CurrentMaximumPoolSize*
  commentId: Overload:Steeltoe.CircuitBreaker.Hystrix.HystrixThreadPoolMetrics.CurrentMaximumPoolSize
  name: CurrentMaximumPoolSize
  nameWithType: HystrixThreadPoolMetrics.CurrentMaximumPoolSize
  fullName: Steeltoe.CircuitBreaker.Hystrix.HystrixThreadPoolMetrics.CurrentMaximumPoolSize
- uid: Steeltoe.CircuitBreaker.Hystrix.HystrixThreadPoolMetrics.CurrentPoolSize*
  commentId: Overload:Steeltoe.CircuitBreaker.Hystrix.HystrixThreadPoolMetrics.CurrentPoolSize
  name: CurrentPoolSize
  nameWithType: HystrixThreadPoolMetrics.CurrentPoolSize
  fullName: Steeltoe.CircuitBreaker.Hystrix.HystrixThreadPoolMetrics.CurrentPoolSize
- uid: Steeltoe.CircuitBreaker.Hystrix.HystrixThreadPoolMetrics.CurrentTaskCount*
  commentId: Overload:Steeltoe.CircuitBreaker.Hystrix.HystrixThreadPoolMetrics.CurrentTaskCount
  name: CurrentTaskCount
  nameWithType: HystrixThreadPoolMetrics.CurrentTaskCount
  fullName: Steeltoe.CircuitBreaker.Hystrix.HystrixThreadPoolMetrics.CurrentTaskCount
- uid: Steeltoe.CircuitBreaker.Hystrix.HystrixThreadPoolMetrics.CurrentQueueSize*
  commentId: Overload:Steeltoe.CircuitBreaker.Hystrix.HystrixThreadPoolMetrics.CurrentQueueSize
  name: CurrentQueueSize
  nameWithType: HystrixThreadPoolMetrics.CurrentQueueSize
  fullName: Steeltoe.CircuitBreaker.Hystrix.HystrixThreadPoolMetrics.CurrentQueueSize
- uid: Steeltoe.CircuitBreaker.Hystrix.HystrixThreadPoolMetrics.MarkThreadExecution*
  commentId: Overload:Steeltoe.CircuitBreaker.Hystrix.HystrixThreadPoolMetrics.MarkThreadExecution
  name: MarkThreadExecution
  nameWithType: HystrixThreadPoolMetrics.MarkThreadExecution
  fullName: Steeltoe.CircuitBreaker.Hystrix.HystrixThreadPoolMetrics.MarkThreadExecution
- uid: Steeltoe.CircuitBreaker.Hystrix.HystrixThreadPoolMetrics.RollingCountThreadsExecuted*
  commentId: Overload:Steeltoe.CircuitBreaker.Hystrix.HystrixThreadPoolMetrics.RollingCountThreadsExecuted
  name: RollingCountThreadsExecuted
  nameWithType: HystrixThreadPoolMetrics.RollingCountThreadsExecuted
  fullName: Steeltoe.CircuitBreaker.Hystrix.HystrixThreadPoolMetrics.RollingCountThreadsExecuted
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: Steeltoe.CircuitBreaker.Hystrix.HystrixThreadPoolMetrics.CumulativeCountThreadsExecuted*
  commentId: Overload:Steeltoe.CircuitBreaker.Hystrix.HystrixThreadPoolMetrics.CumulativeCountThreadsExecuted
  name: CumulativeCountThreadsExecuted
  nameWithType: HystrixThreadPoolMetrics.CumulativeCountThreadsExecuted
  fullName: Steeltoe.CircuitBreaker.Hystrix.HystrixThreadPoolMetrics.CumulativeCountThreadsExecuted
- uid: Steeltoe.CircuitBreaker.Hystrix.HystrixThreadPoolMetrics.RollingCountThreadsRejected*
  commentId: Overload:Steeltoe.CircuitBreaker.Hystrix.HystrixThreadPoolMetrics.RollingCountThreadsRejected
  name: RollingCountThreadsRejected
  nameWithType: HystrixThreadPoolMetrics.RollingCountThreadsRejected
  fullName: Steeltoe.CircuitBreaker.Hystrix.HystrixThreadPoolMetrics.RollingCountThreadsRejected
- uid: Steeltoe.CircuitBreaker.Hystrix.HystrixThreadPoolMetrics.CumulativeCountThreadsRejected*
  commentId: Overload:Steeltoe.CircuitBreaker.Hystrix.HystrixThreadPoolMetrics.CumulativeCountThreadsRejected
  name: CumulativeCountThreadsRejected
  nameWithType: HystrixThreadPoolMetrics.CumulativeCountThreadsRejected
  fullName: Steeltoe.CircuitBreaker.Hystrix.HystrixThreadPoolMetrics.CumulativeCountThreadsRejected
- uid: Steeltoe.CircuitBreaker.Hystrix.HystrixThreadPoolMetrics.GetRollingCount*
  commentId: Overload:Steeltoe.CircuitBreaker.Hystrix.HystrixThreadPoolMetrics.GetRollingCount
  name: GetRollingCount
  nameWithType: HystrixThreadPoolMetrics.GetRollingCount
  fullName: Steeltoe.CircuitBreaker.Hystrix.HystrixThreadPoolMetrics.GetRollingCount
- uid: Steeltoe.CircuitBreaker.Hystrix.ThreadPoolEventType
  commentId: T:Steeltoe.CircuitBreaker.Hystrix.ThreadPoolEventType
  parent: Steeltoe.CircuitBreaker.Hystrix
  name: ThreadPoolEventType
  nameWithType: ThreadPoolEventType
  fullName: Steeltoe.CircuitBreaker.Hystrix.ThreadPoolEventType
- uid: Steeltoe.CircuitBreaker.Hystrix.HystrixMetrics.GetRollingCount(Steeltoe.CircuitBreaker.Hystrix.Util.HystrixRollingNumberEvent)
  commentId: M:Steeltoe.CircuitBreaker.Hystrix.HystrixMetrics.GetRollingCount(Steeltoe.CircuitBreaker.Hystrix.Util.HystrixRollingNumberEvent)
  parent: Steeltoe.CircuitBreaker.Hystrix.HystrixMetrics
  name: GetRollingCount(HystrixRollingNumberEvent)
  nameWithType: HystrixMetrics.GetRollingCount(HystrixRollingNumberEvent)
  fullName: Steeltoe.CircuitBreaker.Hystrix.HystrixMetrics.GetRollingCount(Steeltoe.CircuitBreaker.Hystrix.Util.HystrixRollingNumberEvent)
  spec.csharp:
  - uid: Steeltoe.CircuitBreaker.Hystrix.HystrixMetrics.GetRollingCount(Steeltoe.CircuitBreaker.Hystrix.Util.HystrixRollingNumberEvent)
    name: GetRollingCount
    nameWithType: HystrixMetrics.GetRollingCount
    fullName: Steeltoe.CircuitBreaker.Hystrix.HystrixMetrics.GetRollingCount
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.CircuitBreaker.Hystrix.Util.HystrixRollingNumberEvent
    name: HystrixRollingNumberEvent
    nameWithType: HystrixRollingNumberEvent
    fullName: Steeltoe.CircuitBreaker.Hystrix.Util.HystrixRollingNumberEvent
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.CircuitBreaker.Hystrix.HystrixMetrics.GetRollingCount(Steeltoe.CircuitBreaker.Hystrix.Util.HystrixRollingNumberEvent)
    name: GetRollingCount
    nameWithType: HystrixMetrics.GetRollingCount
    fullName: Steeltoe.CircuitBreaker.Hystrix.HystrixMetrics.GetRollingCount
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.CircuitBreaker.Hystrix.Util.HystrixRollingNumberEvent
    name: HystrixRollingNumberEvent
    nameWithType: HystrixRollingNumberEvent
    fullName: Steeltoe.CircuitBreaker.Hystrix.Util.HystrixRollingNumberEvent
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.CircuitBreaker.Hystrix.Util.HystrixRollingNumberEvent
  commentId: T:Steeltoe.CircuitBreaker.Hystrix.Util.HystrixRollingNumberEvent
  parent: Steeltoe.CircuitBreaker.Hystrix.Util
  name: HystrixRollingNumberEvent
  nameWithType: HystrixRollingNumberEvent
  fullName: Steeltoe.CircuitBreaker.Hystrix.Util.HystrixRollingNumberEvent
- uid: Steeltoe.CircuitBreaker.Hystrix.Util
  commentId: N:Steeltoe.CircuitBreaker.Hystrix.Util
  name: Steeltoe.CircuitBreaker.Hystrix.Util
  nameWithType: Steeltoe.CircuitBreaker.Hystrix.Util
  fullName: Steeltoe.CircuitBreaker.Hystrix.Util
- uid: Steeltoe.CircuitBreaker.Hystrix.HystrixThreadPoolMetrics.GetCumulativeCount*
  commentId: Overload:Steeltoe.CircuitBreaker.Hystrix.HystrixThreadPoolMetrics.GetCumulativeCount
  name: GetCumulativeCount
  nameWithType: HystrixThreadPoolMetrics.GetCumulativeCount
  fullName: Steeltoe.CircuitBreaker.Hystrix.HystrixThreadPoolMetrics.GetCumulativeCount
- uid: Steeltoe.CircuitBreaker.Hystrix.HystrixMetrics.GetCumulativeCount(Steeltoe.CircuitBreaker.Hystrix.Util.HystrixRollingNumberEvent)
  commentId: M:Steeltoe.CircuitBreaker.Hystrix.HystrixMetrics.GetCumulativeCount(Steeltoe.CircuitBreaker.Hystrix.Util.HystrixRollingNumberEvent)
  parent: Steeltoe.CircuitBreaker.Hystrix.HystrixMetrics
  name: GetCumulativeCount(HystrixRollingNumberEvent)
  nameWithType: HystrixMetrics.GetCumulativeCount(HystrixRollingNumberEvent)
  fullName: Steeltoe.CircuitBreaker.Hystrix.HystrixMetrics.GetCumulativeCount(Steeltoe.CircuitBreaker.Hystrix.Util.HystrixRollingNumberEvent)
  spec.csharp:
  - uid: Steeltoe.CircuitBreaker.Hystrix.HystrixMetrics.GetCumulativeCount(Steeltoe.CircuitBreaker.Hystrix.Util.HystrixRollingNumberEvent)
    name: GetCumulativeCount
    nameWithType: HystrixMetrics.GetCumulativeCount
    fullName: Steeltoe.CircuitBreaker.Hystrix.HystrixMetrics.GetCumulativeCount
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.CircuitBreaker.Hystrix.Util.HystrixRollingNumberEvent
    name: HystrixRollingNumberEvent
    nameWithType: HystrixRollingNumberEvent
    fullName: Steeltoe.CircuitBreaker.Hystrix.Util.HystrixRollingNumberEvent
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.CircuitBreaker.Hystrix.HystrixMetrics.GetCumulativeCount(Steeltoe.CircuitBreaker.Hystrix.Util.HystrixRollingNumberEvent)
    name: GetCumulativeCount
    nameWithType: HystrixMetrics.GetCumulativeCount
    fullName: Steeltoe.CircuitBreaker.Hystrix.HystrixMetrics.GetCumulativeCount
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.CircuitBreaker.Hystrix.Util.HystrixRollingNumberEvent
    name: HystrixRollingNumberEvent
    nameWithType: HystrixRollingNumberEvent
    fullName: Steeltoe.CircuitBreaker.Hystrix.Util.HystrixRollingNumberEvent
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.CircuitBreaker.Hystrix.HystrixThreadPoolMetrics.MarkThreadCompletion*
  commentId: Overload:Steeltoe.CircuitBreaker.Hystrix.HystrixThreadPoolMetrics.MarkThreadCompletion
  name: MarkThreadCompletion
  nameWithType: HystrixThreadPoolMetrics.MarkThreadCompletion
  fullName: Steeltoe.CircuitBreaker.Hystrix.HystrixThreadPoolMetrics.MarkThreadCompletion
- uid: Steeltoe.CircuitBreaker.Hystrix.HystrixThreadPoolMetrics.RollingMaxActiveThreads*
  commentId: Overload:Steeltoe.CircuitBreaker.Hystrix.HystrixThreadPoolMetrics.RollingMaxActiveThreads
  name: RollingMaxActiveThreads
  nameWithType: HystrixThreadPoolMetrics.RollingMaxActiveThreads
  fullName: Steeltoe.CircuitBreaker.Hystrix.HystrixThreadPoolMetrics.RollingMaxActiveThreads
- uid: Steeltoe.CircuitBreaker.Hystrix.HystrixThreadPoolMetrics.MarkThreadRejection*
  commentId: Overload:Steeltoe.CircuitBreaker.Hystrix.HystrixThreadPoolMetrics.MarkThreadRejection
  name: MarkThreadRejection
  nameWithType: HystrixThreadPoolMetrics.MarkThreadRejection
  fullName: Steeltoe.CircuitBreaker.Hystrix.HystrixThreadPoolMetrics.MarkThreadRejection
