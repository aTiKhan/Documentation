### YamlMime:ManagedReference
items:
- uid: Steeltoe.Connector.OAuth.OAuthConnectorFactory
  commentId: T:Steeltoe.Connector.OAuth.OAuthConnectorFactory
  id: OAuthConnectorFactory
  parent: Steeltoe.Connector.OAuth
  children:
  - Steeltoe.Connector.OAuth.OAuthConnectorFactory.#ctor(Steeltoe.Connector.Services.SsoServiceInfo,Steeltoe.Connector.OAuth.OAuthConnectorOptions)
  - Steeltoe.Connector.OAuth.OAuthConnectorFactory.Create(System.IServiceProvider)
  langs:
  - csharp
  - vb
  name: OAuthConnectorFactory
  nameWithType: OAuthConnectorFactory
  fullName: Steeltoe.Connector.OAuth.OAuthConnectorFactory
  type: Class
  source:
    remote:
      path: src/Connectors/src/ConnectorBase/OAuth/OAuthConnectorFactory.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: OAuthConnectorFactory
    path: ../Steeltoe/src/Connectors/src/ConnectorBase/OAuth/OAuthConnectorFactory.cs
    startLine: 10
  assemblies:
  - Steeltoe.Connector.ConnectorBase
  namespace: Steeltoe.Connector.OAuth
  syntax:
    content: public class OAuthConnectorFactory
    content.vb: Public Class OAuthConnectorFactory
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Steeltoe.Connector.OAuth.OAuthConnectorFactory.#ctor(Steeltoe.Connector.Services.SsoServiceInfo,Steeltoe.Connector.OAuth.OAuthConnectorOptions)
  commentId: M:Steeltoe.Connector.OAuth.OAuthConnectorFactory.#ctor(Steeltoe.Connector.Services.SsoServiceInfo,Steeltoe.Connector.OAuth.OAuthConnectorOptions)
  id: '#ctor(Steeltoe.Connector.Services.SsoServiceInfo,Steeltoe.Connector.OAuth.OAuthConnectorOptions)'
  parent: Steeltoe.Connector.OAuth.OAuthConnectorFactory
  langs:
  - csharp
  - vb
  name: OAuthConnectorFactory(SsoServiceInfo, OAuthConnectorOptions)
  nameWithType: OAuthConnectorFactory.OAuthConnectorFactory(SsoServiceInfo, OAuthConnectorOptions)
  fullName: Steeltoe.Connector.OAuth.OAuthConnectorFactory.OAuthConnectorFactory(Steeltoe.Connector.Services.SsoServiceInfo, Steeltoe.Connector.OAuth.OAuthConnectorOptions)
  type: Constructor
  source:
    remote:
      path: src/Connectors/src/ConnectorBase/OAuth/OAuthConnectorFactory.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: .ctor
    path: ../Steeltoe/src/Connectors/src/ConnectorBase/OAuth/OAuthConnectorFactory.cs
    startLine: 16
  assemblies:
  - Steeltoe.Connector.ConnectorBase
  namespace: Steeltoe.Connector.OAuth
  syntax:
    content: public OAuthConnectorFactory(SsoServiceInfo sinfo, OAuthConnectorOptions config)
    parameters:
    - id: sinfo
      type: Steeltoe.Connector.Services.SsoServiceInfo
    - id: config
      type: Steeltoe.Connector.OAuth.OAuthConnectorOptions
    content.vb: Public Sub New(sinfo As SsoServiceInfo, config As OAuthConnectorOptions)
  overload: Steeltoe.Connector.OAuth.OAuthConnectorFactory.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Steeltoe.Connector.OAuth.OAuthConnectorFactory.Create(System.IServiceProvider)
  commentId: M:Steeltoe.Connector.OAuth.OAuthConnectorFactory.Create(System.IServiceProvider)
  id: Create(System.IServiceProvider)
  parent: Steeltoe.Connector.OAuth.OAuthConnectorFactory
  langs:
  - csharp
  - vb
  name: Create(IServiceProvider)
  nameWithType: OAuthConnectorFactory.Create(IServiceProvider)
  fullName: Steeltoe.Connector.OAuth.OAuthConnectorFactory.Create(System.IServiceProvider)
  type: Method
  source:
    remote:
      path: src/Connectors/src/ConnectorBase/OAuth/OAuthConnectorFactory.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Create
    path: ../Steeltoe/src/Connectors/src/ConnectorBase/OAuth/OAuthConnectorFactory.cs
    startLine: 22
  assemblies:
  - Steeltoe.Connector.ConnectorBase
  namespace: Steeltoe.Connector.OAuth
  syntax:
    content: public IOptions<OAuthServiceOptions> Create(IServiceProvider provider)
    parameters:
    - id: provider
      type: System.IServiceProvider
    return:
      type: IOptions{Steeltoe.Connector.OAuth.OAuthServiceOptions}
    content.vb: Public Function Create(provider As IServiceProvider) As IOptions(Of OAuthServiceOptions)
  overload: Steeltoe.Connector.OAuth.OAuthConnectorFactory.Create*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Steeltoe.Connector.OAuth
  commentId: N:Steeltoe.Connector.OAuth
  name: Steeltoe.Connector.OAuth
  nameWithType: Steeltoe.Connector.OAuth
  fullName: Steeltoe.Connector.OAuth
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Steeltoe.Connector.OAuth.OAuthConnectorFactory.#ctor*
  commentId: Overload:Steeltoe.Connector.OAuth.OAuthConnectorFactory.#ctor
  name: OAuthConnectorFactory
  nameWithType: OAuthConnectorFactory.OAuthConnectorFactory
  fullName: Steeltoe.Connector.OAuth.OAuthConnectorFactory.OAuthConnectorFactory
- uid: Steeltoe.Connector.Services.SsoServiceInfo
  commentId: T:Steeltoe.Connector.Services.SsoServiceInfo
  parent: Steeltoe.Connector.Services
  name: SsoServiceInfo
  nameWithType: SsoServiceInfo
  fullName: Steeltoe.Connector.Services.SsoServiceInfo
- uid: Steeltoe.Connector.OAuth.OAuthConnectorOptions
  commentId: T:Steeltoe.Connector.OAuth.OAuthConnectorOptions
  parent: Steeltoe.Connector.OAuth
  name: OAuthConnectorOptions
  nameWithType: OAuthConnectorOptions
  fullName: Steeltoe.Connector.OAuth.OAuthConnectorOptions
- uid: Steeltoe.Connector.Services
  commentId: N:Steeltoe.Connector.Services
  name: Steeltoe.Connector.Services
  nameWithType: Steeltoe.Connector.Services
  fullName: Steeltoe.Connector.Services
- uid: Steeltoe.Connector.OAuth.OAuthConnectorFactory.Create*
  commentId: Overload:Steeltoe.Connector.OAuth.OAuthConnectorFactory.Create
  name: Create
  nameWithType: OAuthConnectorFactory.Create
  fullName: Steeltoe.Connector.OAuth.OAuthConnectorFactory.Create
- uid: System.IServiceProvider
  commentId: T:System.IServiceProvider
  parent: System
  isExternal: true
  name: IServiceProvider
  nameWithType: IServiceProvider
  fullName: System.IServiceProvider
- uid: IOptions{Steeltoe.Connector.OAuth.OAuthServiceOptions}
  commentId: '!:IOptions{Steeltoe.Connector.OAuth.OAuthServiceOptions}'
  definition: IOptions`1
  name: IOptions<OAuthServiceOptions>
  nameWithType: IOptions<OAuthServiceOptions>
  fullName: IOptions<Steeltoe.Connector.OAuth.OAuthServiceOptions>
  nameWithType.vb: IOptions(Of OAuthServiceOptions)
  fullName.vb: IOptions(Of Steeltoe.Connector.OAuth.OAuthServiceOptions)
  name.vb: IOptions(Of OAuthServiceOptions)
  spec.csharp:
  - uid: IOptions`1
    name: IOptions
    nameWithType: IOptions
    fullName: IOptions
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Steeltoe.Connector.OAuth.OAuthServiceOptions
    name: OAuthServiceOptions
    nameWithType: OAuthServiceOptions
    fullName: Steeltoe.Connector.OAuth.OAuthServiceOptions
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IOptions`1
    name: IOptions
    nameWithType: IOptions
    fullName: IOptions
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Steeltoe.Connector.OAuth.OAuthServiceOptions
    name: OAuthServiceOptions
    nameWithType: OAuthServiceOptions
    fullName: Steeltoe.Connector.OAuth.OAuthServiceOptions
  - name: )
    nameWithType: )
    fullName: )
- uid: IOptions`1
  isExternal: true
  name: IOptions<>
  nameWithType: IOptions<>
  fullName: IOptions<>
  nameWithType.vb: IOptions(Of )
  fullName.vb: IOptions(Of )
  name.vb: IOptions(Of )
  spec.csharp:
  - uid: IOptions`1
    name: IOptions
    nameWithType: IOptions
    fullName: IOptions
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IOptions`1
    name: IOptions
    nameWithType: IOptions
    fullName: IOptions
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
