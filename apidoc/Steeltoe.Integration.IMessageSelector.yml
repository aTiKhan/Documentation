### YamlMime:ManagedReference
items:
- uid: Steeltoe.Integration.IMessageSelector
  commentId: T:Steeltoe.Integration.IMessageSelector
  id: IMessageSelector
  parent: Steeltoe.Integration
  children: []
  langs:
  - csharp
  - vb
  name: IMessageSelector
  nameWithType: IMessageSelector
  fullName: Steeltoe.Integration.IMessageSelector
  type: Interface
  source:
    remote:
      path: src/Integration/src/Abstractions/IMessageSelector.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: IMessageSelector
    path: ../Steeltoe/src/Integration/src/Abstractions/IMessageSelector.cs
    startLine: 11
  assemblies:
  - Steeltoe.Integration.Abstractions
  namespace: Steeltoe.Integration
  summary: "\nTODO: See if this can be internal\n"
  example: []
  syntax:
    content: 'public interface IMessageSelector : ISelector<IMessage>'
    content.vb: >-
      Public Interface IMessageSelector

          Inherits ISelector(Of IMessage)
  inheritedMembers:
  - Steeltoe.Integration.ISelector{Steeltoe.Messaging.IMessage}.Accept(Steeltoe.Messaging.IMessage)
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
references:
- uid: Steeltoe.Integration
  commentId: N:Steeltoe.Integration
  name: Steeltoe.Integration
  nameWithType: Steeltoe.Integration
  fullName: Steeltoe.Integration
- uid: Steeltoe.Integration.ISelector{Steeltoe.Messaging.IMessage}.Accept(Steeltoe.Messaging.IMessage)
  commentId: M:Steeltoe.Integration.ISelector{Steeltoe.Messaging.IMessage}.Accept(Steeltoe.Messaging.IMessage)
  parent: Steeltoe.Integration.ISelector{Steeltoe.Messaging.IMessage}
  definition: Steeltoe.Integration.ISelector`1.Accept(`0)
  name: Accept(IMessage)
  nameWithType: ISelector<IMessage>.Accept(IMessage)
  fullName: Steeltoe.Integration.ISelector<Steeltoe.Messaging.IMessage>.Accept(Steeltoe.Messaging.IMessage)
  nameWithType.vb: ISelector(Of IMessage).Accept(IMessage)
  fullName.vb: Steeltoe.Integration.ISelector(Of Steeltoe.Messaging.IMessage).Accept(Steeltoe.Messaging.IMessage)
  spec.csharp:
  - uid: Steeltoe.Integration.ISelector`1.Accept(`0)
    name: Accept
    nameWithType: ISelector<IMessage>.Accept
    fullName: Steeltoe.Integration.ISelector<Steeltoe.Messaging.IMessage>.Accept
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Integration.ISelector`1.Accept(`0)
    name: Accept
    nameWithType: ISelector(Of IMessage).Accept
    fullName: Steeltoe.Integration.ISelector(Of Steeltoe.Messaging.IMessage).Accept
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Integration.ISelector`1.Accept(`0)
  commentId: M:Steeltoe.Integration.ISelector`1.Accept(`0)
  name: Accept(T)
  nameWithType: ISelector<T>.Accept(T)
  fullName: Steeltoe.Integration.ISelector<T>.Accept(T)
  nameWithType.vb: ISelector(Of T).Accept(T)
  fullName.vb: Steeltoe.Integration.ISelector(Of T).Accept(T)
  spec.csharp:
  - uid: Steeltoe.Integration.ISelector`1.Accept(`0)
    name: Accept
    nameWithType: ISelector<T>.Accept
    fullName: Steeltoe.Integration.ISelector<T>.Accept
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Integration.ISelector`1.Accept(`0)
    name: Accept
    nameWithType: ISelector(Of T).Accept
    fullName: Steeltoe.Integration.ISelector(Of T).Accept
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Integration.ISelector{Steeltoe.Messaging.IMessage}
  commentId: T:Steeltoe.Integration.ISelector{Steeltoe.Messaging.IMessage}
  parent: Steeltoe.Integration
  definition: Steeltoe.Integration.ISelector`1
  name: ISelector<IMessage>
  nameWithType: ISelector<IMessage>
  fullName: Steeltoe.Integration.ISelector<Steeltoe.Messaging.IMessage>
  nameWithType.vb: ISelector(Of IMessage)
  fullName.vb: Steeltoe.Integration.ISelector(Of Steeltoe.Messaging.IMessage)
  name.vb: ISelector(Of IMessage)
  spec.csharp:
  - uid: Steeltoe.Integration.ISelector`1
    name: ISelector
    nameWithType: ISelector
    fullName: Steeltoe.Integration.ISelector
  - name: <
    nameWithType: <
    fullName: <
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Steeltoe.Integration.ISelector`1
    name: ISelector
    nameWithType: ISelector
    fullName: Steeltoe.Integration.ISelector
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Integration.ISelector`1
  commentId: T:Steeltoe.Integration.ISelector`1
  name: ISelector<T>
  nameWithType: ISelector<T>
  fullName: Steeltoe.Integration.ISelector<T>
  nameWithType.vb: ISelector(Of T)
  fullName.vb: Steeltoe.Integration.ISelector(Of T)
  name.vb: ISelector(Of T)
  spec.csharp:
  - uid: Steeltoe.Integration.ISelector`1
    name: ISelector
    nameWithType: ISelector
    fullName: Steeltoe.Integration.ISelector
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Steeltoe.Integration.ISelector`1
    name: ISelector
    nameWithType: ISelector
    fullName: Steeltoe.Integration.ISelector
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
