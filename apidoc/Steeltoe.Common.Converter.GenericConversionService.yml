### YamlMime:ManagedReference
items:
- uid: Steeltoe.Common.Converter.GenericConversionService
  commentId: T:Steeltoe.Common.Converter.GenericConversionService
  id: GenericConversionService
  parent: Steeltoe.Common.Converter
  children:
  - Steeltoe.Common.Converter.GenericConversionService.AddConverter(Steeltoe.Common.Converter.IGenericConverter)
  - Steeltoe.Common.Converter.GenericConversionService.CanBypassConvert(System.Type,System.Type)
  - Steeltoe.Common.Converter.GenericConversionService.CanConvert(System.Type,System.Type)
  - Steeltoe.Common.Converter.GenericConversionService.Convert(System.Object,System.Type,System.Type)
  - Steeltoe.Common.Converter.GenericConversionService.Convert``1(System.Object)
  - Steeltoe.Common.Converter.GenericConversionService.GetConverter(System.Type,System.Type)
  - Steeltoe.Common.Converter.GenericConversionService.GetDefaultConverter(System.Type,System.Type)
  langs:
  - csharp
  - vb
  name: GenericConversionService
  nameWithType: GenericConversionService
  fullName: Steeltoe.Common.Converter.GenericConversionService
  type: Class
  source:
    remote:
      path: src/Common/src/Common/Converter/GenericConversionService.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: GenericConversionService
    path: ../Steeltoe/src/Common/src/Common/Converter/GenericConversionService.cs
    startLine: 11
  assemblies:
  - Steeltoe.Common
  namespace: Steeltoe.Common.Converter
  syntax:
    content: 'public class GenericConversionService : IConversionService, IConverterRegistry'
    content.vb: >-
      Public Class GenericConversionService

          Implements IConversionService, IConverterRegistry
  inheritance:
  - System.Object
  derivedClasses:
  - Steeltoe.Common.Converter.DefaultConversionService
  implements:
  - Steeltoe.Common.Converter.IConversionService
  - Steeltoe.Common.Converter.IConverterRegistry
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Steeltoe.Common.Converter.GenericConversionService.CanConvert(System.Type,System.Type)
  commentId: M:Steeltoe.Common.Converter.GenericConversionService.CanConvert(System.Type,System.Type)
  id: CanConvert(System.Type,System.Type)
  parent: Steeltoe.Common.Converter.GenericConversionService
  langs:
  - csharp
  - vb
  name: CanConvert(Type, Type)
  nameWithType: GenericConversionService.CanConvert(Type, Type)
  fullName: Steeltoe.Common.Converter.GenericConversionService.CanConvert(System.Type, System.Type)
  type: Method
  source:
    remote:
      path: src/Common/src/Common/Converter/GenericConversionService.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: CanConvert
    path: ../Steeltoe/src/Common/src/Common/Converter/GenericConversionService.cs
    startLine: 19
  assemblies:
  - Steeltoe.Common
  namespace: Steeltoe.Common.Converter
  syntax:
    content: public bool CanConvert(Type sourceType, Type targetType)
    parameters:
    - id: sourceType
      type: System.Type
    - id: targetType
      type: System.Type
    return:
      type: System.Boolean
    content.vb: Public Function CanConvert(sourceType As Type, targetType As Type) As Boolean
  overload: Steeltoe.Common.Converter.GenericConversionService.CanConvert*
  implements:
  - Steeltoe.Common.Converter.IConversionService.CanConvert(System.Type,System.Type)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Steeltoe.Common.Converter.GenericConversionService.Convert``1(System.Object)
  commentId: M:Steeltoe.Common.Converter.GenericConversionService.Convert``1(System.Object)
  id: Convert``1(System.Object)
  parent: Steeltoe.Common.Converter.GenericConversionService
  langs:
  - csharp
  - vb
  name: Convert<T>(Object)
  nameWithType: GenericConversionService.Convert<T>(Object)
  fullName: Steeltoe.Common.Converter.GenericConversionService.Convert<T>(System.Object)
  type: Method
  source:
    remote:
      path: src/Common/src/Common/Converter/GenericConversionService.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Convert
    path: ../Steeltoe/src/Common/src/Common/Converter/GenericConversionService.cs
    startLine: 35
  assemblies:
  - Steeltoe.Common
  namespace: Steeltoe.Common.Converter
  syntax:
    content: public T Convert<T>(object source)
    parameters:
    - id: source
      type: System.Object
    typeParameters:
    - id: T
    return:
      type: '{T}'
    content.vb: Public Function Convert(Of T)(source As Object) As T
  overload: Steeltoe.Common.Converter.GenericConversionService.Convert*
  implements:
  - Steeltoe.Common.Converter.IConversionService.Convert``1(System.Object)
  nameWithType.vb: GenericConversionService.Convert(Of T)(Object)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Steeltoe.Common.Converter.GenericConversionService.Convert(Of T)(System.Object)
  name.vb: Convert(Of T)(Object)
- uid: Steeltoe.Common.Converter.GenericConversionService.Convert(System.Object,System.Type,System.Type)
  commentId: M:Steeltoe.Common.Converter.GenericConversionService.Convert(System.Object,System.Type,System.Type)
  id: Convert(System.Object,System.Type,System.Type)
  parent: Steeltoe.Common.Converter.GenericConversionService
  langs:
  - csharp
  - vb
  name: Convert(Object, Type, Type)
  nameWithType: GenericConversionService.Convert(Object, Type, Type)
  fullName: Steeltoe.Common.Converter.GenericConversionService.Convert(System.Object, System.Type, System.Type)
  type: Method
  source:
    remote:
      path: src/Common/src/Common/Converter/GenericConversionService.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Convert
    path: ../Steeltoe/src/Common/src/Common/Converter/GenericConversionService.cs
    startLine: 40
  assemblies:
  - Steeltoe.Common
  namespace: Steeltoe.Common.Converter
  syntax:
    content: public object Convert(object source, Type sourceType, Type targetType)
    parameters:
    - id: source
      type: System.Object
    - id: sourceType
      type: System.Type
    - id: targetType
      type: System.Type
    return:
      type: System.Object
    content.vb: Public Function Convert(source As Object, sourceType As Type, targetType As Type) As Object
  overload: Steeltoe.Common.Converter.GenericConversionService.Convert*
  implements:
  - Steeltoe.Common.Converter.IConversionService.Convert(System.Object,System.Type,System.Type)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Steeltoe.Common.Converter.GenericConversionService.CanBypassConvert(System.Type,System.Type)
  commentId: M:Steeltoe.Common.Converter.GenericConversionService.CanBypassConvert(System.Type,System.Type)
  id: CanBypassConvert(System.Type,System.Type)
  parent: Steeltoe.Common.Converter.GenericConversionService
  langs:
  - csharp
  - vb
  name: CanBypassConvert(Type, Type)
  nameWithType: GenericConversionService.CanBypassConvert(Type, Type)
  fullName: Steeltoe.Common.Converter.GenericConversionService.CanBypassConvert(System.Type, System.Type)
  type: Method
  source:
    remote:
      path: src/Common/src/Common/Converter/GenericConversionService.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: CanBypassConvert
    path: ../Steeltoe/src/Common/src/Common/Converter/GenericConversionService.cs
    startLine: 84
  assemblies:
  - Steeltoe.Common
  namespace: Steeltoe.Common.Converter
  syntax:
    content: public bool CanBypassConvert(Type sourceType, Type targetType)
    parameters:
    - id: sourceType
      type: System.Type
    - id: targetType
      type: System.Type
    return:
      type: System.Boolean
    content.vb: Public Function CanBypassConvert(sourceType As Type, targetType As Type) As Boolean
  overload: Steeltoe.Common.Converter.GenericConversionService.CanBypassConvert*
  implements:
  - Steeltoe.Common.Converter.IConversionService.CanBypassConvert(System.Type,System.Type)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Steeltoe.Common.Converter.GenericConversionService.AddConverter(Steeltoe.Common.Converter.IGenericConverter)
  commentId: M:Steeltoe.Common.Converter.GenericConversionService.AddConverter(Steeltoe.Common.Converter.IGenericConverter)
  id: AddConverter(Steeltoe.Common.Converter.IGenericConverter)
  parent: Steeltoe.Common.Converter.GenericConversionService
  langs:
  - csharp
  - vb
  name: AddConverter(IGenericConverter)
  nameWithType: GenericConversionService.AddConverter(IGenericConverter)
  fullName: Steeltoe.Common.Converter.GenericConversionService.AddConverter(Steeltoe.Common.Converter.IGenericConverter)
  type: Method
  source:
    remote:
      path: src/Common/src/Common/Converter/GenericConversionService.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: AddConverter
    path: ../Steeltoe/src/Common/src/Common/Converter/GenericConversionService.cs
    startLine: 100
  assemblies:
  - Steeltoe.Common
  namespace: Steeltoe.Common.Converter
  syntax:
    content: public void AddConverter(IGenericConverter converter)
    parameters:
    - id: converter
      type: Steeltoe.Common.Converter.IGenericConverter
    content.vb: Public Sub AddConverter(converter As IGenericConverter)
  overload: Steeltoe.Common.Converter.GenericConversionService.AddConverter*
  implements:
  - Steeltoe.Common.Converter.IConverterRegistry.AddConverter(Steeltoe.Common.Converter.IGenericConverter)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Steeltoe.Common.Converter.GenericConversionService.GetConverter(System.Type,System.Type)
  commentId: M:Steeltoe.Common.Converter.GenericConversionService.GetConverter(System.Type,System.Type)
  id: GetConverter(System.Type,System.Type)
  parent: Steeltoe.Common.Converter.GenericConversionService
  langs:
  - csharp
  - vb
  name: GetConverter(Type, Type)
  nameWithType: GenericConversionService.GetConverter(Type, Type)
  fullName: Steeltoe.Common.Converter.GenericConversionService.GetConverter(System.Type, System.Type)
  type: Method
  source:
    remote:
      path: src/Common/src/Common/Converter/GenericConversionService.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: GetConverter
    path: ../Steeltoe/src/Common/src/Common/Converter/GenericConversionService.cs
    startLine: 106
  assemblies:
  - Steeltoe.Common
  namespace: Steeltoe.Common.Converter
  syntax:
    content: protected virtual IGenericConverter GetConverter(Type sourceType, Type targetType)
    parameters:
    - id: sourceType
      type: System.Type
    - id: targetType
      type: System.Type
    return:
      type: Steeltoe.Common.Converter.IGenericConverter
    content.vb: Protected Overridable Function GetConverter(sourceType As Type, targetType As Type) As IGenericConverter
  overload: Steeltoe.Common.Converter.GenericConversionService.GetConverter*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: Steeltoe.Common.Converter.GenericConversionService.GetDefaultConverter(System.Type,System.Type)
  commentId: M:Steeltoe.Common.Converter.GenericConversionService.GetDefaultConverter(System.Type,System.Type)
  id: GetDefaultConverter(System.Type,System.Type)
  parent: Steeltoe.Common.Converter.GenericConversionService
  langs:
  - csharp
  - vb
  name: GetDefaultConverter(Type, Type)
  nameWithType: GenericConversionService.GetDefaultConverter(Type, Type)
  fullName: Steeltoe.Common.Converter.GenericConversionService.GetDefaultConverter(System.Type, System.Type)
  type: Method
  source:
    remote:
      path: src/Common/src/Common/Converter/GenericConversionService.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: GetDefaultConverter
    path: ../Steeltoe/src/Common/src/Common/Converter/GenericConversionService.cs
    startLine: 134
  assemblies:
  - Steeltoe.Common
  namespace: Steeltoe.Common.Converter
  syntax:
    content: protected virtual IGenericConverter GetDefaultConverter(Type sourceType, Type targetType)
    parameters:
    - id: sourceType
      type: System.Type
    - id: targetType
      type: System.Type
    return:
      type: Steeltoe.Common.Converter.IGenericConverter
    content.vb: Protected Overridable Function GetDefaultConverter(sourceType As Type, targetType As Type) As IGenericConverter
  overload: Steeltoe.Common.Converter.GenericConversionService.GetDefaultConverter*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
references:
- uid: Steeltoe.Common.Converter
  commentId: N:Steeltoe.Common.Converter
  name: Steeltoe.Common.Converter
  nameWithType: Steeltoe.Common.Converter
  fullName: Steeltoe.Common.Converter
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Steeltoe.Common.Converter.IConversionService
  commentId: T:Steeltoe.Common.Converter.IConversionService
  parent: Steeltoe.Common.Converter
  name: IConversionService
  nameWithType: IConversionService
  fullName: Steeltoe.Common.Converter.IConversionService
- uid: Steeltoe.Common.Converter.IConverterRegistry
  commentId: T:Steeltoe.Common.Converter.IConverterRegistry
  parent: Steeltoe.Common.Converter
  name: IConverterRegistry
  nameWithType: IConverterRegistry
  fullName: Steeltoe.Common.Converter.IConverterRegistry
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Steeltoe.Common.Converter.GenericConversionService.CanConvert*
  commentId: Overload:Steeltoe.Common.Converter.GenericConversionService.CanConvert
  name: CanConvert
  nameWithType: GenericConversionService.CanConvert
  fullName: Steeltoe.Common.Converter.GenericConversionService.CanConvert
- uid: Steeltoe.Common.Converter.IConversionService.CanConvert(System.Type,System.Type)
  commentId: M:Steeltoe.Common.Converter.IConversionService.CanConvert(System.Type,System.Type)
  parent: Steeltoe.Common.Converter.IConversionService
  isExternal: true
  name: CanConvert(Type, Type)
  nameWithType: IConversionService.CanConvert(Type, Type)
  fullName: Steeltoe.Common.Converter.IConversionService.CanConvert(System.Type, System.Type)
  spec.csharp:
  - uid: Steeltoe.Common.Converter.IConversionService.CanConvert(System.Type,System.Type)
    name: CanConvert
    nameWithType: IConversionService.CanConvert
    fullName: Steeltoe.Common.Converter.IConversionService.CanConvert
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Common.Converter.IConversionService.CanConvert(System.Type,System.Type)
    name: CanConvert
    nameWithType: IConversionService.CanConvert
    fullName: Steeltoe.Common.Converter.IConversionService.CanConvert
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Steeltoe.Common.Converter.GenericConversionService.Convert*
  commentId: Overload:Steeltoe.Common.Converter.GenericConversionService.Convert
  name: Convert
  nameWithType: GenericConversionService.Convert
  fullName: Steeltoe.Common.Converter.GenericConversionService.Convert
- uid: Steeltoe.Common.Converter.IConversionService.Convert``1(System.Object)
  commentId: M:Steeltoe.Common.Converter.IConversionService.Convert``1(System.Object)
  parent: Steeltoe.Common.Converter.IConversionService
  isExternal: true
  name: Convert<T>(Object)
  nameWithType: IConversionService.Convert<T>(Object)
  fullName: Steeltoe.Common.Converter.IConversionService.Convert<T>(System.Object)
  nameWithType.vb: IConversionService.Convert(Of T)(Object)
  fullName.vb: Steeltoe.Common.Converter.IConversionService.Convert(Of T)(System.Object)
  name.vb: Convert(Of T)(Object)
  spec.csharp:
  - uid: Steeltoe.Common.Converter.IConversionService.Convert``1(System.Object)
    name: Convert<T>
    nameWithType: IConversionService.Convert<T>
    fullName: Steeltoe.Common.Converter.IConversionService.Convert<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Common.Converter.IConversionService.Convert``1(System.Object)
    name: Convert(Of T)
    nameWithType: IConversionService.Convert(Of T)
    fullName: Steeltoe.Common.Converter.IConversionService.Convert(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: Steeltoe.Common.Converter.IConversionService.Convert(System.Object,System.Type,System.Type)
  commentId: M:Steeltoe.Common.Converter.IConversionService.Convert(System.Object,System.Type,System.Type)
  parent: Steeltoe.Common.Converter.IConversionService
  isExternal: true
  name: Convert(Object, Type, Type)
  nameWithType: IConversionService.Convert(Object, Type, Type)
  fullName: Steeltoe.Common.Converter.IConversionService.Convert(System.Object, System.Type, System.Type)
  spec.csharp:
  - uid: Steeltoe.Common.Converter.IConversionService.Convert(System.Object,System.Type,System.Type)
    name: Convert
    nameWithType: IConversionService.Convert
    fullName: Steeltoe.Common.Converter.IConversionService.Convert
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Common.Converter.IConversionService.Convert(System.Object,System.Type,System.Type)
    name: Convert
    nameWithType: IConversionService.Convert
    fullName: Steeltoe.Common.Converter.IConversionService.Convert
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Common.Converter.GenericConversionService.CanBypassConvert*
  commentId: Overload:Steeltoe.Common.Converter.GenericConversionService.CanBypassConvert
  name: CanBypassConvert
  nameWithType: GenericConversionService.CanBypassConvert
  fullName: Steeltoe.Common.Converter.GenericConversionService.CanBypassConvert
- uid: Steeltoe.Common.Converter.IConversionService.CanBypassConvert(System.Type,System.Type)
  commentId: M:Steeltoe.Common.Converter.IConversionService.CanBypassConvert(System.Type,System.Type)
  parent: Steeltoe.Common.Converter.IConversionService
  isExternal: true
  name: CanBypassConvert(Type, Type)
  nameWithType: IConversionService.CanBypassConvert(Type, Type)
  fullName: Steeltoe.Common.Converter.IConversionService.CanBypassConvert(System.Type, System.Type)
  spec.csharp:
  - uid: Steeltoe.Common.Converter.IConversionService.CanBypassConvert(System.Type,System.Type)
    name: CanBypassConvert
    nameWithType: IConversionService.CanBypassConvert
    fullName: Steeltoe.Common.Converter.IConversionService.CanBypassConvert
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Common.Converter.IConversionService.CanBypassConvert(System.Type,System.Type)
    name: CanBypassConvert
    nameWithType: IConversionService.CanBypassConvert
    fullName: Steeltoe.Common.Converter.IConversionService.CanBypassConvert
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Common.Converter.GenericConversionService.AddConverter*
  commentId: Overload:Steeltoe.Common.Converter.GenericConversionService.AddConverter
  name: AddConverter
  nameWithType: GenericConversionService.AddConverter
  fullName: Steeltoe.Common.Converter.GenericConversionService.AddConverter
- uid: Steeltoe.Common.Converter.IConverterRegistry.AddConverter(Steeltoe.Common.Converter.IGenericConverter)
  commentId: M:Steeltoe.Common.Converter.IConverterRegistry.AddConverter(Steeltoe.Common.Converter.IGenericConverter)
  parent: Steeltoe.Common.Converter.IConverterRegistry
  name: AddConverter(IGenericConverter)
  nameWithType: IConverterRegistry.AddConverter(IGenericConverter)
  fullName: Steeltoe.Common.Converter.IConverterRegistry.AddConverter(Steeltoe.Common.Converter.IGenericConverter)
  spec.csharp:
  - uid: Steeltoe.Common.Converter.IConverterRegistry.AddConverter(Steeltoe.Common.Converter.IGenericConverter)
    name: AddConverter
    nameWithType: IConverterRegistry.AddConverter
    fullName: Steeltoe.Common.Converter.IConverterRegistry.AddConverter
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Common.Converter.IGenericConverter
    name: IGenericConverter
    nameWithType: IGenericConverter
    fullName: Steeltoe.Common.Converter.IGenericConverter
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Common.Converter.IConverterRegistry.AddConverter(Steeltoe.Common.Converter.IGenericConverter)
    name: AddConverter
    nameWithType: IConverterRegistry.AddConverter
    fullName: Steeltoe.Common.Converter.IConverterRegistry.AddConverter
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Common.Converter.IGenericConverter
    name: IGenericConverter
    nameWithType: IGenericConverter
    fullName: Steeltoe.Common.Converter.IGenericConverter
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Common.Converter.IGenericConverter
  commentId: T:Steeltoe.Common.Converter.IGenericConverter
  parent: Steeltoe.Common.Converter
  name: IGenericConverter
  nameWithType: IGenericConverter
  fullName: Steeltoe.Common.Converter.IGenericConverter
- uid: Steeltoe.Common.Converter.GenericConversionService.GetConverter*
  commentId: Overload:Steeltoe.Common.Converter.GenericConversionService.GetConverter
  name: GetConverter
  nameWithType: GenericConversionService.GetConverter
  fullName: Steeltoe.Common.Converter.GenericConversionService.GetConverter
- uid: Steeltoe.Common.Converter.GenericConversionService.GetDefaultConverter*
  commentId: Overload:Steeltoe.Common.Converter.GenericConversionService.GetDefaultConverter
  name: GetDefaultConverter
  nameWithType: GenericConversionService.GetDefaultConverter
  fullName: Steeltoe.Common.Converter.GenericConversionService.GetDefaultConverter
