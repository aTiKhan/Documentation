### YamlMime:ManagedReference
items:
- uid: Steeltoe.Messaging.IMessage
  commentId: T:Steeltoe.Messaging.IMessage
  id: IMessage
  parent: Steeltoe.Messaging
  children:
  - Steeltoe.Messaging.IMessage.Headers
  - Steeltoe.Messaging.IMessage.Payload
  langs:
  - csharp
  - vb
  name: IMessage
  nameWithType: IMessage
  fullName: Steeltoe.Messaging.IMessage
  type: Interface
  source:
    remote:
      path: src/Messaging/src/Abstractions/IMessage.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: IMessage
    path: ../Steeltoe/src/Messaging/src/Abstractions/IMessage.cs
    startLine: 9
  assemblies:
  - Steeltoe.Messaging.Abstractions
  namespace: Steeltoe.Messaging
  summary: "\nA generic message representation with headers and a body\n"
  example: []
  syntax:
    content: public interface IMessage
    content.vb: Public Interface IMessage
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Steeltoe.Messaging.IMessage.Payload
  commentId: P:Steeltoe.Messaging.IMessage.Payload
  id: Payload
  parent: Steeltoe.Messaging.IMessage
  langs:
  - csharp
  - vb
  name: Payload
  nameWithType: IMessage.Payload
  fullName: Steeltoe.Messaging.IMessage.Payload
  type: Property
  source:
    remote:
      path: src/Messaging/src/Abstractions/IMessage.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Payload
    path: ../Steeltoe/src/Messaging/src/Abstractions/IMessage.cs
    startLine: 14
  assemblies:
  - Steeltoe.Messaging.Abstractions
  namespace: Steeltoe.Messaging
  summary: "\nGets the body of the message\n"
  example: []
  syntax:
    content: object Payload { get; }
    parameters: []
    return:
      type: System.Object
    content.vb: ReadOnly Property Payload As Object
  overload: Steeltoe.Messaging.IMessage.Payload*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Steeltoe.Messaging.IMessage.Headers
  commentId: P:Steeltoe.Messaging.IMessage.Headers
  id: Headers
  parent: Steeltoe.Messaging.IMessage
  langs:
  - csharp
  - vb
  name: Headers
  nameWithType: IMessage.Headers
  fullName: Steeltoe.Messaging.IMessage.Headers
  type: Property
  source:
    remote:
      path: src/Messaging/src/Abstractions/IMessage.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Headers
    path: ../Steeltoe/src/Messaging/src/Abstractions/IMessage.cs
    startLine: 19
  assemblies:
  - Steeltoe.Messaging.Abstractions
  namespace: Steeltoe.Messaging
  summary: "\nGets the headers for the message\n"
  example: []
  syntax:
    content: IMessageHeaders Headers { get; }
    parameters: []
    return:
      type: Steeltoe.Messaging.IMessageHeaders
    content.vb: ReadOnly Property Headers As IMessageHeaders
  overload: Steeltoe.Messaging.IMessage.Headers*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
references:
- uid: Steeltoe.Messaging
  commentId: N:Steeltoe.Messaging
  name: Steeltoe.Messaging
  nameWithType: Steeltoe.Messaging
  fullName: Steeltoe.Messaging
- uid: Steeltoe.Messaging.IMessage.Payload*
  commentId: Overload:Steeltoe.Messaging.IMessage.Payload
  name: Payload
  nameWithType: IMessage.Payload
  fullName: Steeltoe.Messaging.IMessage.Payload
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Steeltoe.Messaging.IMessage.Headers*
  commentId: Overload:Steeltoe.Messaging.IMessage.Headers
  name: Headers
  nameWithType: IMessage.Headers
  fullName: Steeltoe.Messaging.IMessage.Headers
- uid: Steeltoe.Messaging.IMessageHeaders
  commentId: T:Steeltoe.Messaging.IMessageHeaders
  parent: Steeltoe.Messaging
  name: IMessageHeaders
  nameWithType: IMessageHeaders
  fullName: Steeltoe.Messaging.IMessageHeaders
