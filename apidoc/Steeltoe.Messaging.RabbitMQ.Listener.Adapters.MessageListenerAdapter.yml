### YamlMime:ManagedReference
items:
- uid: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.MessageListenerAdapter
  commentId: T:Steeltoe.Messaging.RabbitMQ.Listener.Adapters.MessageListenerAdapter
  id: MessageListenerAdapter
  parent: Steeltoe.Messaging.RabbitMQ.Listener.Adapters
  children:
  - Steeltoe.Messaging.RabbitMQ.Listener.Adapters.MessageListenerAdapter.#ctor(Steeltoe.Common.Contexts.IApplicationContext,Microsoft.Extensions.Logging.ILogger)
  - Steeltoe.Messaging.RabbitMQ.Listener.Adapters.MessageListenerAdapter.#ctor(Steeltoe.Common.Contexts.IApplicationContext,System.Object,Microsoft.Extensions.Logging.ILogger)
  - Steeltoe.Messaging.RabbitMQ.Listener.Adapters.MessageListenerAdapter.#ctor(Steeltoe.Common.Contexts.IApplicationContext,System.Object,Steeltoe.Messaging.Converter.ISmartMessageConverter,Microsoft.Extensions.Logging.ILogger)
  - Steeltoe.Messaging.RabbitMQ.Listener.Adapters.MessageListenerAdapter.#ctor(Steeltoe.Common.Contexts.IApplicationContext,System.Object,System.String,Microsoft.Extensions.Logging.ILogger)
  - Steeltoe.Messaging.RabbitMQ.Listener.Adapters.MessageListenerAdapter.AddQueueOrTagToMethodName(System.String,System.String)
  - Steeltoe.Messaging.RabbitMQ.Listener.Adapters.MessageListenerAdapter.BuildListenerArguments(System.Object)
  - Steeltoe.Messaging.RabbitMQ.Listener.Adapters.MessageListenerAdapter.BuildListenerArguments(System.Object,RabbitMQ.Client.IModel,Steeltoe.Messaging.IMessage)
  - Steeltoe.Messaging.RabbitMQ.Listener.Adapters.MessageListenerAdapter.DefaultListenerMethod
  - Steeltoe.Messaging.RabbitMQ.Listener.Adapters.MessageListenerAdapter.GetListenerMethodName(Steeltoe.Messaging.IMessage,System.Object)
  - Steeltoe.Messaging.RabbitMQ.Listener.Adapters.MessageListenerAdapter.Instance
  - Steeltoe.Messaging.RabbitMQ.Listener.Adapters.MessageListenerAdapter.InvokeListenerMethod(System.String,System.Object[],Steeltoe.Messaging.IMessage)
  - Steeltoe.Messaging.RabbitMQ.Listener.Adapters.MessageListenerAdapter.OnMessage(Steeltoe.Messaging.IMessage,RabbitMQ.Client.IModel)
  - Steeltoe.Messaging.RabbitMQ.Listener.Adapters.MessageListenerAdapter.ORIGINAL_DEFAULT_LISTENER_METHOD
  - Steeltoe.Messaging.RabbitMQ.Listener.Adapters.MessageListenerAdapter.RemoveQueueOrTagToMethodName(System.String)
  - Steeltoe.Messaging.RabbitMQ.Listener.Adapters.MessageListenerAdapter.SetQueueOrTagToMethodName(System.Collections.Generic.Dictionary{System.String,System.String})
  langs:
  - csharp
  - vb
  name: MessageListenerAdapter
  nameWithType: MessageListenerAdapter
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.MessageListenerAdapter
  type: Class
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Listener/Adapters/MessageListenerAdapter.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: MessageListenerAdapter
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Listener/Adapters/MessageListenerAdapter.cs
    startLine: 18
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Listener.Adapters
  syntax:
    content: 'public class MessageListenerAdapter : AbstractMessageListenerAdapter, IChannelAwareMessageListener, IMessageListener'
    content.vb: >-
      Public Class MessageListenerAdapter

          Inherits AbstractMessageListenerAdapter

          Implements IChannelAwareMessageListener, IMessageListener
  inheritance:
  - System.Object
  - Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter
  implements:
  - Steeltoe.Messaging.RabbitMQ.Listener.IChannelAwareMessageListener
  - Steeltoe.Messaging.RabbitMQ.Listener.IMessageListener
  inheritedMembers:
  - Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter._logger
  - Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.ApplicationContext
  - Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.Encoding
  - Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.ResponseRoutingKey
  - Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.ResponseExchange
  - Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.ResponseAddress
  - Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.MandatoryPublish
  - Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.MessageConverter
  - Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.BeforeSendReplyPostProcessors
  - Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.RetryTemplate
  - Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.RecoveryCallback
  - Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.DefaultRequeueRejected
  - Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.ContainerAckMode
  - Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.IsManualAck
  - Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.EvalContext
  - Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.MessagePropertiesConverter
  - Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.ResponseExpression
  - Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.ReplyPostProcessor
  - Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.SetResponseAddress(System.String)
  - Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.SetServiceResolver(Steeltoe.Messaging.RabbitMQ.Expressions.IServiceResolver)
  - Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.SetBeforeSendReplyPostProcessors(Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor[])
  - Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.OnMessage(Steeltoe.Messaging.IMessage)
  - Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.OnMessageBatch(System.Collections.Generic.List{Steeltoe.Messaging.IMessage},RabbitMQ.Client.IModel)
  - Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.OnMessageBatch(System.Collections.Generic.List{Steeltoe.Messaging.IMessage})
  - Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.BuildMessage(RabbitMQ.Client.IModel,System.Object,System.Type)
  - Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.HandleListenerException(System.Exception)
  - Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.ExtractMessage(Steeltoe.Messaging.IMessage)
  - Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.HandleResult(Steeltoe.Messaging.RabbitMQ.Listener.Adapters.InvocationResult,Steeltoe.Messaging.IMessage,RabbitMQ.Client.IModel)
  - Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.HandleResult(Steeltoe.Messaging.RabbitMQ.Listener.Adapters.InvocationResult,Steeltoe.Messaging.IMessage,RabbitMQ.Client.IModel,System.Object)
  - Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.DoHandleResult(Steeltoe.Messaging.RabbitMQ.Listener.Adapters.InvocationResult,Steeltoe.Messaging.IMessage,RabbitMQ.Client.IModel,System.Object)
  - Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.GetReceivedExchange(Steeltoe.Messaging.IMessage)
  - Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.PostProcessResponse(Steeltoe.Messaging.IMessage,Steeltoe.Messaging.IMessage)
  - Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.GetReplyToAddress(Steeltoe.Messaging.IMessage,System.Object,Steeltoe.Messaging.RabbitMQ.Listener.Adapters.InvocationResult)
  - Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.SendResponse(RabbitMQ.Client.IModel,Steeltoe.Messaging.RabbitMQ.Core.Address,Steeltoe.Messaging.IMessage{System.Byte[]})
  - Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.DoPublish(RabbitMQ.Client.IModel,Steeltoe.Messaging.RabbitMQ.Core.Address,Steeltoe.Messaging.IMessage{System.Byte[]})
  - Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.PostProcessChannel(RabbitMQ.Client.IModel,Steeltoe.Messaging.IMessage)
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.MessageListenerAdapter.ORIGINAL_DEFAULT_LISTENER_METHOD
  commentId: F:Steeltoe.Messaging.RabbitMQ.Listener.Adapters.MessageListenerAdapter.ORIGINAL_DEFAULT_LISTENER_METHOD
  id: ORIGINAL_DEFAULT_LISTENER_METHOD
  parent: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.MessageListenerAdapter
  langs:
  - csharp
  - vb
  name: ORIGINAL_DEFAULT_LISTENER_METHOD
  nameWithType: MessageListenerAdapter.ORIGINAL_DEFAULT_LISTENER_METHOD
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.MessageListenerAdapter.ORIGINAL_DEFAULT_LISTENER_METHOD
  type: Field
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Listener/Adapters/MessageListenerAdapter.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: ORIGINAL_DEFAULT_LISTENER_METHOD
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Listener/Adapters/MessageListenerAdapter.cs
    startLine: 20
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Listener.Adapters
  syntax:
    content: public const string ORIGINAL_DEFAULT_LISTENER_METHOD = "HandleMessage"
    return:
      type: System.String
    content.vb: Public Const ORIGINAL_DEFAULT_LISTENER_METHOD As String = "HandleMessage"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.MessageListenerAdapter.DefaultListenerMethod
  commentId: P:Steeltoe.Messaging.RabbitMQ.Listener.Adapters.MessageListenerAdapter.DefaultListenerMethod
  id: DefaultListenerMethod
  parent: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.MessageListenerAdapter
  langs:
  - csharp
  - vb
  name: DefaultListenerMethod
  nameWithType: MessageListenerAdapter.DefaultListenerMethod
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.MessageListenerAdapter.DefaultListenerMethod
  type: Property
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Listener/Adapters/MessageListenerAdapter.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: DefaultListenerMethod
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Listener/Adapters/MessageListenerAdapter.cs
    startLine: 23
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Listener.Adapters
  syntax:
    content: public string DefaultListenerMethod { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property DefaultListenerMethod As String
  overload: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.MessageListenerAdapter.DefaultListenerMethod*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.MessageListenerAdapter.Instance
  commentId: P:Steeltoe.Messaging.RabbitMQ.Listener.Adapters.MessageListenerAdapter.Instance
  id: Instance
  parent: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.MessageListenerAdapter
  langs:
  - csharp
  - vb
  name: Instance
  nameWithType: MessageListenerAdapter.Instance
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.MessageListenerAdapter.Instance
  type: Property
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Listener/Adapters/MessageListenerAdapter.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Instance
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Listener/Adapters/MessageListenerAdapter.cs
    startLine: 25
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Listener.Adapters
  syntax:
    content: public object Instance { get; set; }
    parameters: []
    return:
      type: System.Object
    content.vb: Public Property Instance As Object
  overload: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.MessageListenerAdapter.Instance*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.MessageListenerAdapter.#ctor(Steeltoe.Common.Contexts.IApplicationContext,Microsoft.Extensions.Logging.ILogger)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Listener.Adapters.MessageListenerAdapter.#ctor(Steeltoe.Common.Contexts.IApplicationContext,Microsoft.Extensions.Logging.ILogger)
  id: '#ctor(Steeltoe.Common.Contexts.IApplicationContext,Microsoft.Extensions.Logging.ILogger)'
  parent: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.MessageListenerAdapter
  langs:
  - csharp
  - vb
  name: MessageListenerAdapter(IApplicationContext, ILogger)
  nameWithType: MessageListenerAdapter.MessageListenerAdapter(IApplicationContext, ILogger)
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.MessageListenerAdapter.MessageListenerAdapter(Steeltoe.Common.Contexts.IApplicationContext, Microsoft.Extensions.Logging.ILogger)
  type: Constructor
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Listener/Adapters/MessageListenerAdapter.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: .ctor
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Listener/Adapters/MessageListenerAdapter.cs
    startLine: 27
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Listener.Adapters
  syntax:
    content: public MessageListenerAdapter(IApplicationContext context, ILogger logger = null)
    parameters:
    - id: context
      type: Steeltoe.Common.Contexts.IApplicationContext
    - id: logger
      type: Microsoft.Extensions.Logging.ILogger
    content.vb: Public Sub New(context As IApplicationContext, logger As ILogger = Nothing)
  overload: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.MessageListenerAdapter.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.MessageListenerAdapter.#ctor(Steeltoe.Common.Contexts.IApplicationContext,System.Object,Microsoft.Extensions.Logging.ILogger)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Listener.Adapters.MessageListenerAdapter.#ctor(Steeltoe.Common.Contexts.IApplicationContext,System.Object,Microsoft.Extensions.Logging.ILogger)
  id: '#ctor(Steeltoe.Common.Contexts.IApplicationContext,System.Object,Microsoft.Extensions.Logging.ILogger)'
  parent: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.MessageListenerAdapter
  langs:
  - csharp
  - vb
  name: MessageListenerAdapter(IApplicationContext, Object, ILogger)
  nameWithType: MessageListenerAdapter.MessageListenerAdapter(IApplicationContext, Object, ILogger)
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.MessageListenerAdapter.MessageListenerAdapter(Steeltoe.Common.Contexts.IApplicationContext, System.Object, Microsoft.Extensions.Logging.ILogger)
  type: Constructor
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Listener/Adapters/MessageListenerAdapter.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: .ctor
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Listener/Adapters/MessageListenerAdapter.cs
    startLine: 33
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Listener.Adapters
  syntax:
    content: public MessageListenerAdapter(IApplicationContext context, object delgate, ILogger logger = null)
    parameters:
    - id: context
      type: Steeltoe.Common.Contexts.IApplicationContext
    - id: delgate
      type: System.Object
    - id: logger
      type: Microsoft.Extensions.Logging.ILogger
    content.vb: Public Sub New(context As IApplicationContext, delgate As Object, logger As ILogger = Nothing)
  overload: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.MessageListenerAdapter.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.MessageListenerAdapter.#ctor(Steeltoe.Common.Contexts.IApplicationContext,System.Object,Steeltoe.Messaging.Converter.ISmartMessageConverter,Microsoft.Extensions.Logging.ILogger)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Listener.Adapters.MessageListenerAdapter.#ctor(Steeltoe.Common.Contexts.IApplicationContext,System.Object,Steeltoe.Messaging.Converter.ISmartMessageConverter,Microsoft.Extensions.Logging.ILogger)
  id: '#ctor(Steeltoe.Common.Contexts.IApplicationContext,System.Object,Steeltoe.Messaging.Converter.ISmartMessageConverter,Microsoft.Extensions.Logging.ILogger)'
  parent: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.MessageListenerAdapter
  langs:
  - csharp
  - vb
  name: MessageListenerAdapter(IApplicationContext, Object, ISmartMessageConverter, ILogger)
  nameWithType: MessageListenerAdapter.MessageListenerAdapter(IApplicationContext, Object, ISmartMessageConverter, ILogger)
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.MessageListenerAdapter.MessageListenerAdapter(Steeltoe.Common.Contexts.IApplicationContext, System.Object, Steeltoe.Messaging.Converter.ISmartMessageConverter, Microsoft.Extensions.Logging.ILogger)
  type: Constructor
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Listener/Adapters/MessageListenerAdapter.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: .ctor
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Listener/Adapters/MessageListenerAdapter.cs
    startLine: 39
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Listener.Adapters
  syntax:
    content: public MessageListenerAdapter(IApplicationContext context, object delgate, ISmartMessageConverter messageConverter, ILogger logger = null)
    parameters:
    - id: context
      type: Steeltoe.Common.Contexts.IApplicationContext
    - id: delgate
      type: System.Object
    - id: messageConverter
      type: Steeltoe.Messaging.Converter.ISmartMessageConverter
    - id: logger
      type: Microsoft.Extensions.Logging.ILogger
    content.vb: Public Sub New(context As IApplicationContext, delgate As Object, messageConverter As ISmartMessageConverter, logger As ILogger = Nothing)
  overload: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.MessageListenerAdapter.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.MessageListenerAdapter.#ctor(Steeltoe.Common.Contexts.IApplicationContext,System.Object,System.String,Microsoft.Extensions.Logging.ILogger)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Listener.Adapters.MessageListenerAdapter.#ctor(Steeltoe.Common.Contexts.IApplicationContext,System.Object,System.String,Microsoft.Extensions.Logging.ILogger)
  id: '#ctor(Steeltoe.Common.Contexts.IApplicationContext,System.Object,System.String,Microsoft.Extensions.Logging.ILogger)'
  parent: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.MessageListenerAdapter
  langs:
  - csharp
  - vb
  name: MessageListenerAdapter(IApplicationContext, Object, String, ILogger)
  nameWithType: MessageListenerAdapter.MessageListenerAdapter(IApplicationContext, Object, String, ILogger)
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.MessageListenerAdapter.MessageListenerAdapter(Steeltoe.Common.Contexts.IApplicationContext, System.Object, System.String, Microsoft.Extensions.Logging.ILogger)
  type: Constructor
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Listener/Adapters/MessageListenerAdapter.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: .ctor
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Listener/Adapters/MessageListenerAdapter.cs
    startLine: 46
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Listener.Adapters
  syntax:
    content: public MessageListenerAdapter(IApplicationContext context, object delgate, string defaultListenerMethod, ILogger logger = null)
    parameters:
    - id: context
      type: Steeltoe.Common.Contexts.IApplicationContext
    - id: delgate
      type: System.Object
    - id: defaultListenerMethod
      type: System.String
    - id: logger
      type: Microsoft.Extensions.Logging.ILogger
    content.vb: Public Sub New(context As IApplicationContext, delgate As Object, defaultListenerMethod As String, logger As ILogger = Nothing)
  overload: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.MessageListenerAdapter.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.MessageListenerAdapter.SetQueueOrTagToMethodName(System.Collections.Generic.Dictionary{System.String,System.String})
  commentId: M:Steeltoe.Messaging.RabbitMQ.Listener.Adapters.MessageListenerAdapter.SetQueueOrTagToMethodName(System.Collections.Generic.Dictionary{System.String,System.String})
  id: SetQueueOrTagToMethodName(System.Collections.Generic.Dictionary{System.String,System.String})
  parent: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.MessageListenerAdapter
  langs:
  - csharp
  - vb
  name: SetQueueOrTagToMethodName(Dictionary<String, String>)
  nameWithType: MessageListenerAdapter.SetQueueOrTagToMethodName(Dictionary<String, String>)
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.MessageListenerAdapter.SetQueueOrTagToMethodName(System.Collections.Generic.Dictionary<System.String, System.String>)
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Listener/Adapters/MessageListenerAdapter.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: SetQueueOrTagToMethodName
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Listener/Adapters/MessageListenerAdapter.cs
    startLine: 52
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Listener.Adapters
  syntax:
    content: public void SetQueueOrTagToMethodName(Dictionary<string, string> queueOrTagToMethodName)
    parameters:
    - id: queueOrTagToMethodName
      type: System.Collections.Generic.Dictionary{System.String,System.String}
    content.vb: Public Sub SetQueueOrTagToMethodName(queueOrTagToMethodName As Dictionary(Of String, String))
  overload: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.MessageListenerAdapter.SetQueueOrTagToMethodName*
  nameWithType.vb: MessageListenerAdapter.SetQueueOrTagToMethodName(Dictionary(Of String, String))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.MessageListenerAdapter.SetQueueOrTagToMethodName(System.Collections.Generic.Dictionary(Of System.String, System.String))
  name.vb: SetQueueOrTagToMethodName(Dictionary(Of String, String))
- uid: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.MessageListenerAdapter.AddQueueOrTagToMethodName(System.String,System.String)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Listener.Adapters.MessageListenerAdapter.AddQueueOrTagToMethodName(System.String,System.String)
  id: AddQueueOrTagToMethodName(System.String,System.String)
  parent: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.MessageListenerAdapter
  langs:
  - csharp
  - vb
  name: AddQueueOrTagToMethodName(String, String)
  nameWithType: MessageListenerAdapter.AddQueueOrTagToMethodName(String, String)
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.MessageListenerAdapter.AddQueueOrTagToMethodName(System.String, System.String)
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Listener/Adapters/MessageListenerAdapter.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: AddQueueOrTagToMethodName
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Listener/Adapters/MessageListenerAdapter.cs
    startLine: 60
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Listener.Adapters
  syntax:
    content: public void AddQueueOrTagToMethodName(string queueOrTag, string methodName)
    parameters:
    - id: queueOrTag
      type: System.String
    - id: methodName
      type: System.String
    content.vb: Public Sub AddQueueOrTagToMethodName(queueOrTag As String, methodName As String)
  overload: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.MessageListenerAdapter.AddQueueOrTagToMethodName*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.MessageListenerAdapter.RemoveQueueOrTagToMethodName(System.String)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Listener.Adapters.MessageListenerAdapter.RemoveQueueOrTagToMethodName(System.String)
  id: RemoveQueueOrTagToMethodName(System.String)
  parent: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.MessageListenerAdapter
  langs:
  - csharp
  - vb
  name: RemoveQueueOrTagToMethodName(String)
  nameWithType: MessageListenerAdapter.RemoveQueueOrTagToMethodName(String)
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.MessageListenerAdapter.RemoveQueueOrTagToMethodName(System.String)
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Listener/Adapters/MessageListenerAdapter.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: RemoveQueueOrTagToMethodName
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Listener/Adapters/MessageListenerAdapter.cs
    startLine: 65
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Listener.Adapters
  syntax:
    content: public string RemoveQueueOrTagToMethodName(string queueOrTag)
    parameters:
    - id: queueOrTag
      type: System.String
    return:
      type: System.String
    content.vb: Public Function RemoveQueueOrTagToMethodName(queueOrTag As String) As String
  overload: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.MessageListenerAdapter.RemoveQueueOrTagToMethodName*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.MessageListenerAdapter.OnMessage(Steeltoe.Messaging.IMessage,RabbitMQ.Client.IModel)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Listener.Adapters.MessageListenerAdapter.OnMessage(Steeltoe.Messaging.IMessage,RabbitMQ.Client.IModel)
  id: OnMessage(Steeltoe.Messaging.IMessage,RabbitMQ.Client.IModel)
  parent: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.MessageListenerAdapter
  langs:
  - csharp
  - vb
  name: OnMessage(IMessage, IModel)
  nameWithType: MessageListenerAdapter.OnMessage(IMessage, IModel)
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.MessageListenerAdapter.OnMessage(Steeltoe.Messaging.IMessage, RabbitMQ.Client.IModel)
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Listener/Adapters/MessageListenerAdapter.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: OnMessage
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Listener/Adapters/MessageListenerAdapter.cs
    startLine: 71
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Listener.Adapters
  syntax:
    content: public override void OnMessage(IMessage message, IModel channel)
    parameters:
    - id: message
      type: Steeltoe.Messaging.IMessage
    - id: channel
      type: RabbitMQ.Client.IModel
    content.vb: Public Overrides Sub OnMessage(message As IMessage, channel As IModel)
  overridden: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.OnMessage(Steeltoe.Messaging.IMessage,RabbitMQ.Client.IModel)
  overload: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.MessageListenerAdapter.OnMessage*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.MessageListenerAdapter.BuildListenerArguments(System.Object,RabbitMQ.Client.IModel,Steeltoe.Messaging.IMessage)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Listener.Adapters.MessageListenerAdapter.BuildListenerArguments(System.Object,RabbitMQ.Client.IModel,Steeltoe.Messaging.IMessage)
  id: BuildListenerArguments(System.Object,RabbitMQ.Client.IModel,Steeltoe.Messaging.IMessage)
  parent: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.MessageListenerAdapter
  langs:
  - csharp
  - vb
  name: BuildListenerArguments(Object, IModel, IMessage)
  nameWithType: MessageListenerAdapter.BuildListenerArguments(Object, IModel, IMessage)
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.MessageListenerAdapter.BuildListenerArguments(System.Object, RabbitMQ.Client.IModel, Steeltoe.Messaging.IMessage)
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Listener/Adapters/MessageListenerAdapter.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: BuildListenerArguments
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Listener/Adapters/MessageListenerAdapter.cs
    startLine: 113
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Listener.Adapters
  syntax:
    content: protected virtual object[] BuildListenerArguments(object extractedMessage, IModel channel, IMessage message)
    parameters:
    - id: extractedMessage
      type: System.Object
    - id: channel
      type: RabbitMQ.Client.IModel
    - id: message
      type: Steeltoe.Messaging.IMessage
    return:
      type: System.Object[]
    content.vb: Protected Overridable Function BuildListenerArguments(extractedMessage As Object, channel As IModel, message As IMessage) As Object()
  overload: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.MessageListenerAdapter.BuildListenerArguments*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.MessageListenerAdapter.BuildListenerArguments(System.Object)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Listener.Adapters.MessageListenerAdapter.BuildListenerArguments(System.Object)
  id: BuildListenerArguments(System.Object)
  parent: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.MessageListenerAdapter
  langs:
  - csharp
  - vb
  name: BuildListenerArguments(Object)
  nameWithType: MessageListenerAdapter.BuildListenerArguments(Object)
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.MessageListenerAdapter.BuildListenerArguments(System.Object)
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Listener/Adapters/MessageListenerAdapter.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: BuildListenerArguments
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Listener/Adapters/MessageListenerAdapter.cs
    startLine: 118
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Listener.Adapters
  syntax:
    content: protected virtual object[] BuildListenerArguments(object extractedMessage)
    parameters:
    - id: extractedMessage
      type: System.Object
    return:
      type: System.Object[]
    content.vb: Protected Overridable Function BuildListenerArguments(extractedMessage As Object) As Object()
  overload: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.MessageListenerAdapter.BuildListenerArguments*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.MessageListenerAdapter.GetListenerMethodName(Steeltoe.Messaging.IMessage,System.Object)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Listener.Adapters.MessageListenerAdapter.GetListenerMethodName(Steeltoe.Messaging.IMessage,System.Object)
  id: GetListenerMethodName(Steeltoe.Messaging.IMessage,System.Object)
  parent: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.MessageListenerAdapter
  langs:
  - csharp
  - vb
  name: GetListenerMethodName(IMessage, Object)
  nameWithType: MessageListenerAdapter.GetListenerMethodName(IMessage, Object)
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.MessageListenerAdapter.GetListenerMethodName(Steeltoe.Messaging.IMessage, System.Object)
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Listener/Adapters/MessageListenerAdapter.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: GetListenerMethodName
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Listener/Adapters/MessageListenerAdapter.cs
    startLine: 123
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Listener.Adapters
  syntax:
    content: protected virtual string GetListenerMethodName(IMessage originalMessage, object extractedMessage)
    parameters:
    - id: originalMessage
      type: Steeltoe.Messaging.IMessage
    - id: extractedMessage
      type: System.Object
    return:
      type: System.String
    content.vb: Protected Overridable Function GetListenerMethodName(originalMessage As IMessage, extractedMessage As Object) As String
  overload: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.MessageListenerAdapter.GetListenerMethodName*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.MessageListenerAdapter.InvokeListenerMethod(System.String,System.Object[],Steeltoe.Messaging.IMessage)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Listener.Adapters.MessageListenerAdapter.InvokeListenerMethod(System.String,System.Object[],Steeltoe.Messaging.IMessage)
  id: InvokeListenerMethod(System.String,System.Object[],Steeltoe.Messaging.IMessage)
  parent: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.MessageListenerAdapter
  langs:
  - csharp
  - vb
  name: InvokeListenerMethod(String, Object[], IMessage)
  nameWithType: MessageListenerAdapter.InvokeListenerMethod(String, Object[], IMessage)
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.MessageListenerAdapter.InvokeListenerMethod(System.String, System.Object[], Steeltoe.Messaging.IMessage)
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Listener/Adapters/MessageListenerAdapter.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: InvokeListenerMethod
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Listener/Adapters/MessageListenerAdapter.cs
    startLine: 142
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Listener.Adapters
  syntax:
    content: protected virtual object InvokeListenerMethod(string methodName, object[] arguments, IMessage originalMessage)
    parameters:
    - id: methodName
      type: System.String
    - id: arguments
      type: System.Object[]
    - id: originalMessage
      type: Steeltoe.Messaging.IMessage
    return:
      type: System.Object
    content.vb: Protected Overridable Function InvokeListenerMethod(methodName As String, arguments As Object(), originalMessage As IMessage) As Object
  overload: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.MessageListenerAdapter.InvokeListenerMethod*
  nameWithType.vb: MessageListenerAdapter.InvokeListenerMethod(String, Object(), IMessage)
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
  fullName.vb: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.MessageListenerAdapter.InvokeListenerMethod(System.String, System.Object(), Steeltoe.Messaging.IMessage)
  name.vb: InvokeListenerMethod(String, Object(), IMessage)
references:
- uid: Steeltoe.Messaging.RabbitMQ.Listener.Adapters
  commentId: N:Steeltoe.Messaging.RabbitMQ.Listener.Adapters
  name: Steeltoe.Messaging.RabbitMQ.Listener.Adapters
  nameWithType: Steeltoe.Messaging.RabbitMQ.Listener.Adapters
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.Adapters
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter
  commentId: T:Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter
  parent: Steeltoe.Messaging.RabbitMQ.Listener.Adapters
  name: AbstractMessageListenerAdapter
  nameWithType: AbstractMessageListenerAdapter
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter
- uid: Steeltoe.Messaging.RabbitMQ.Listener.IChannelAwareMessageListener
  commentId: T:Steeltoe.Messaging.RabbitMQ.Listener.IChannelAwareMessageListener
  parent: Steeltoe.Messaging.RabbitMQ.Listener
  name: IChannelAwareMessageListener
  nameWithType: IChannelAwareMessageListener
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.IChannelAwareMessageListener
- uid: Steeltoe.Messaging.RabbitMQ.Listener.IMessageListener
  commentId: T:Steeltoe.Messaging.RabbitMQ.Listener.IMessageListener
  parent: Steeltoe.Messaging.RabbitMQ.Listener
  name: IMessageListener
  nameWithType: IMessageListener
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.IMessageListener
- uid: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter._logger
  commentId: F:Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter._logger
  parent: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter
  name: _logger
  nameWithType: AbstractMessageListenerAdapter._logger
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter._logger
- uid: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.ApplicationContext
  commentId: P:Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.ApplicationContext
  parent: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter
  name: ApplicationContext
  nameWithType: AbstractMessageListenerAdapter.ApplicationContext
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.ApplicationContext
- uid: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.Encoding
  commentId: P:Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.Encoding
  parent: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter
  name: Encoding
  nameWithType: AbstractMessageListenerAdapter.Encoding
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.Encoding
- uid: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.ResponseRoutingKey
  commentId: P:Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.ResponseRoutingKey
  parent: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter
  name: ResponseRoutingKey
  nameWithType: AbstractMessageListenerAdapter.ResponseRoutingKey
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.ResponseRoutingKey
- uid: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.ResponseExchange
  commentId: P:Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.ResponseExchange
  parent: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter
  name: ResponseExchange
  nameWithType: AbstractMessageListenerAdapter.ResponseExchange
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.ResponseExchange
- uid: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.ResponseAddress
  commentId: P:Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.ResponseAddress
  parent: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter
  name: ResponseAddress
  nameWithType: AbstractMessageListenerAdapter.ResponseAddress
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.ResponseAddress
- uid: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.MandatoryPublish
  commentId: P:Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.MandatoryPublish
  parent: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter
  name: MandatoryPublish
  nameWithType: AbstractMessageListenerAdapter.MandatoryPublish
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.MandatoryPublish
- uid: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.MessageConverter
  commentId: P:Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.MessageConverter
  parent: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter
  name: MessageConverter
  nameWithType: AbstractMessageListenerAdapter.MessageConverter
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.MessageConverter
- uid: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.BeforeSendReplyPostProcessors
  commentId: P:Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.BeforeSendReplyPostProcessors
  parent: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter
  name: BeforeSendReplyPostProcessors
  nameWithType: AbstractMessageListenerAdapter.BeforeSendReplyPostProcessors
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.BeforeSendReplyPostProcessors
- uid: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.RetryTemplate
  commentId: P:Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.RetryTemplate
  parent: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter
  name: RetryTemplate
  nameWithType: AbstractMessageListenerAdapter.RetryTemplate
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.RetryTemplate
- uid: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.RecoveryCallback
  commentId: P:Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.RecoveryCallback
  parent: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter
  name: RecoveryCallback
  nameWithType: AbstractMessageListenerAdapter.RecoveryCallback
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.RecoveryCallback
- uid: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.DefaultRequeueRejected
  commentId: P:Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.DefaultRequeueRejected
  parent: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter
  name: DefaultRequeueRejected
  nameWithType: AbstractMessageListenerAdapter.DefaultRequeueRejected
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.DefaultRequeueRejected
- uid: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.ContainerAckMode
  commentId: P:Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.ContainerAckMode
  parent: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter
  name: ContainerAckMode
  nameWithType: AbstractMessageListenerAdapter.ContainerAckMode
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.ContainerAckMode
- uid: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.IsManualAck
  commentId: P:Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.IsManualAck
  parent: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter
  name: IsManualAck
  nameWithType: AbstractMessageListenerAdapter.IsManualAck
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.IsManualAck
- uid: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.EvalContext
  commentId: P:Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.EvalContext
  parent: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter
  name: EvalContext
  nameWithType: AbstractMessageListenerAdapter.EvalContext
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.EvalContext
- uid: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.MessagePropertiesConverter
  commentId: P:Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.MessagePropertiesConverter
  parent: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter
  name: MessagePropertiesConverter
  nameWithType: AbstractMessageListenerAdapter.MessagePropertiesConverter
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.MessagePropertiesConverter
- uid: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.ResponseExpression
  commentId: P:Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.ResponseExpression
  parent: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter
  name: ResponseExpression
  nameWithType: AbstractMessageListenerAdapter.ResponseExpression
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.ResponseExpression
- uid: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.ReplyPostProcessor
  commentId: P:Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.ReplyPostProcessor
  parent: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter
  name: ReplyPostProcessor
  nameWithType: AbstractMessageListenerAdapter.ReplyPostProcessor
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.ReplyPostProcessor
- uid: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.SetResponseAddress(System.String)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.SetResponseAddress(System.String)
  parent: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter
  isExternal: true
  name: SetResponseAddress(String)
  nameWithType: AbstractMessageListenerAdapter.SetResponseAddress(String)
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.SetResponseAddress(System.String)
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.SetResponseAddress(System.String)
    name: SetResponseAddress
    nameWithType: AbstractMessageListenerAdapter.SetResponseAddress
    fullName: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.SetResponseAddress
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.SetResponseAddress(System.String)
    name: SetResponseAddress
    nameWithType: AbstractMessageListenerAdapter.SetResponseAddress
    fullName: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.SetResponseAddress
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.SetServiceResolver(Steeltoe.Messaging.RabbitMQ.Expressions.IServiceResolver)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.SetServiceResolver(Steeltoe.Messaging.RabbitMQ.Expressions.IServiceResolver)
  parent: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter
  name: SetServiceResolver(IServiceResolver)
  nameWithType: AbstractMessageListenerAdapter.SetServiceResolver(IServiceResolver)
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.SetServiceResolver(Steeltoe.Messaging.RabbitMQ.Expressions.IServiceResolver)
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.SetServiceResolver(Steeltoe.Messaging.RabbitMQ.Expressions.IServiceResolver)
    name: SetServiceResolver
    nameWithType: AbstractMessageListenerAdapter.SetServiceResolver
    fullName: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.SetServiceResolver
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.RabbitMQ.Expressions.IServiceResolver
    name: IServiceResolver
    nameWithType: IServiceResolver
    fullName: Steeltoe.Messaging.RabbitMQ.Expressions.IServiceResolver
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.SetServiceResolver(Steeltoe.Messaging.RabbitMQ.Expressions.IServiceResolver)
    name: SetServiceResolver
    nameWithType: AbstractMessageListenerAdapter.SetServiceResolver
    fullName: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.SetServiceResolver
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.RabbitMQ.Expressions.IServiceResolver
    name: IServiceResolver
    nameWithType: IServiceResolver
    fullName: Steeltoe.Messaging.RabbitMQ.Expressions.IServiceResolver
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.SetBeforeSendReplyPostProcessors(Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor[])
  commentId: M:Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.SetBeforeSendReplyPostProcessors(Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor[])
  parent: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter
  name: SetBeforeSendReplyPostProcessors(IMessagePostProcessor[])
  nameWithType: AbstractMessageListenerAdapter.SetBeforeSendReplyPostProcessors(IMessagePostProcessor[])
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.SetBeforeSendReplyPostProcessors(Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor[])
  nameWithType.vb: AbstractMessageListenerAdapter.SetBeforeSendReplyPostProcessors(IMessagePostProcessor())
  fullName.vb: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.SetBeforeSendReplyPostProcessors(Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor())
  name.vb: SetBeforeSendReplyPostProcessors(IMessagePostProcessor())
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.SetBeforeSendReplyPostProcessors(Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor[])
    name: SetBeforeSendReplyPostProcessors
    nameWithType: AbstractMessageListenerAdapter.SetBeforeSendReplyPostProcessors
    fullName: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.SetBeforeSendReplyPostProcessors
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor
    name: IMessagePostProcessor
    nameWithType: IMessagePostProcessor
    fullName: Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.SetBeforeSendReplyPostProcessors(Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor[])
    name: SetBeforeSendReplyPostProcessors
    nameWithType: AbstractMessageListenerAdapter.SetBeforeSendReplyPostProcessors
    fullName: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.SetBeforeSendReplyPostProcessors
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor
    name: IMessagePostProcessor
    nameWithType: IMessagePostProcessor
    fullName: Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.OnMessage(Steeltoe.Messaging.IMessage)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.OnMessage(Steeltoe.Messaging.IMessage)
  parent: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter
  name: OnMessage(IMessage)
  nameWithType: AbstractMessageListenerAdapter.OnMessage(IMessage)
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.OnMessage(Steeltoe.Messaging.IMessage)
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.OnMessage(Steeltoe.Messaging.IMessage)
    name: OnMessage
    nameWithType: AbstractMessageListenerAdapter.OnMessage
    fullName: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.OnMessage
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.OnMessage(Steeltoe.Messaging.IMessage)
    name: OnMessage
    nameWithType: AbstractMessageListenerAdapter.OnMessage
    fullName: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.OnMessage
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.OnMessageBatch(System.Collections.Generic.List{Steeltoe.Messaging.IMessage},RabbitMQ.Client.IModel)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.OnMessageBatch(System.Collections.Generic.List{Steeltoe.Messaging.IMessage},RabbitMQ.Client.IModel)
  parent: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter
  isExternal: true
  name: OnMessageBatch(List<IMessage>, IModel)
  nameWithType: AbstractMessageListenerAdapter.OnMessageBatch(List<IMessage>, IModel)
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.OnMessageBatch(System.Collections.Generic.List<Steeltoe.Messaging.IMessage>, RabbitMQ.Client.IModel)
  nameWithType.vb: AbstractMessageListenerAdapter.OnMessageBatch(List(Of IMessage), IModel)
  fullName.vb: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.OnMessageBatch(System.Collections.Generic.List(Of Steeltoe.Messaging.IMessage), RabbitMQ.Client.IModel)
  name.vb: OnMessageBatch(List(Of IMessage), IModel)
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.OnMessageBatch(System.Collections.Generic.List{Steeltoe.Messaging.IMessage},RabbitMQ.Client.IModel)
    name: OnMessageBatch
    nameWithType: AbstractMessageListenerAdapter.OnMessageBatch
    fullName: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.OnMessageBatch
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: RabbitMQ.Client.IModel
    name: IModel
    nameWithType: IModel
    fullName: RabbitMQ.Client.IModel
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.OnMessageBatch(System.Collections.Generic.List{Steeltoe.Messaging.IMessage},RabbitMQ.Client.IModel)
    name: OnMessageBatch
    nameWithType: AbstractMessageListenerAdapter.OnMessageBatch
    fullName: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.OnMessageBatch
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: RabbitMQ.Client.IModel
    name: IModel
    nameWithType: IModel
    fullName: RabbitMQ.Client.IModel
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.OnMessageBatch(System.Collections.Generic.List{Steeltoe.Messaging.IMessage})
  commentId: M:Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.OnMessageBatch(System.Collections.Generic.List{Steeltoe.Messaging.IMessage})
  parent: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter
  isExternal: true
  name: OnMessageBatch(List<IMessage>)
  nameWithType: AbstractMessageListenerAdapter.OnMessageBatch(List<IMessage>)
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.OnMessageBatch(System.Collections.Generic.List<Steeltoe.Messaging.IMessage>)
  nameWithType.vb: AbstractMessageListenerAdapter.OnMessageBatch(List(Of IMessage))
  fullName.vb: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.OnMessageBatch(System.Collections.Generic.List(Of Steeltoe.Messaging.IMessage))
  name.vb: OnMessageBatch(List(Of IMessage))
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.OnMessageBatch(System.Collections.Generic.List{Steeltoe.Messaging.IMessage})
    name: OnMessageBatch
    nameWithType: AbstractMessageListenerAdapter.OnMessageBatch
    fullName: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.OnMessageBatch
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.OnMessageBatch(System.Collections.Generic.List{Steeltoe.Messaging.IMessage})
    name: OnMessageBatch
    nameWithType: AbstractMessageListenerAdapter.OnMessageBatch
    fullName: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.OnMessageBatch
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.BuildMessage(RabbitMQ.Client.IModel,System.Object,System.Type)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.BuildMessage(RabbitMQ.Client.IModel,System.Object,System.Type)
  parent: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter
  isExternal: true
  name: BuildMessage(IModel, Object, Type)
  nameWithType: AbstractMessageListenerAdapter.BuildMessage(IModel, Object, Type)
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.BuildMessage(RabbitMQ.Client.IModel, System.Object, System.Type)
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.BuildMessage(RabbitMQ.Client.IModel,System.Object,System.Type)
    name: BuildMessage
    nameWithType: AbstractMessageListenerAdapter.BuildMessage
    fullName: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.BuildMessage
  - name: (
    nameWithType: (
    fullName: (
  - uid: RabbitMQ.Client.IModel
    name: IModel
    nameWithType: IModel
    fullName: RabbitMQ.Client.IModel
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.BuildMessage(RabbitMQ.Client.IModel,System.Object,System.Type)
    name: BuildMessage
    nameWithType: AbstractMessageListenerAdapter.BuildMessage
    fullName: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.BuildMessage
  - name: (
    nameWithType: (
    fullName: (
  - uid: RabbitMQ.Client.IModel
    name: IModel
    nameWithType: IModel
    fullName: RabbitMQ.Client.IModel
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.HandleListenerException(System.Exception)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.HandleListenerException(System.Exception)
  parent: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter
  isExternal: true
  name: HandleListenerException(Exception)
  nameWithType: AbstractMessageListenerAdapter.HandleListenerException(Exception)
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.HandleListenerException(System.Exception)
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.HandleListenerException(System.Exception)
    name: HandleListenerException
    nameWithType: AbstractMessageListenerAdapter.HandleListenerException
    fullName: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.HandleListenerException
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.HandleListenerException(System.Exception)
    name: HandleListenerException
    nameWithType: AbstractMessageListenerAdapter.HandleListenerException
    fullName: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.HandleListenerException
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.ExtractMessage(Steeltoe.Messaging.IMessage)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.ExtractMessage(Steeltoe.Messaging.IMessage)
  parent: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter
  name: ExtractMessage(IMessage)
  nameWithType: AbstractMessageListenerAdapter.ExtractMessage(IMessage)
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.ExtractMessage(Steeltoe.Messaging.IMessage)
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.ExtractMessage(Steeltoe.Messaging.IMessage)
    name: ExtractMessage
    nameWithType: AbstractMessageListenerAdapter.ExtractMessage
    fullName: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.ExtractMessage
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.ExtractMessage(Steeltoe.Messaging.IMessage)
    name: ExtractMessage
    nameWithType: AbstractMessageListenerAdapter.ExtractMessage
    fullName: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.ExtractMessage
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.HandleResult(Steeltoe.Messaging.RabbitMQ.Listener.Adapters.InvocationResult,Steeltoe.Messaging.IMessage,RabbitMQ.Client.IModel)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.HandleResult(Steeltoe.Messaging.RabbitMQ.Listener.Adapters.InvocationResult,Steeltoe.Messaging.IMessage,RabbitMQ.Client.IModel)
  parent: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter
  isExternal: true
  name: HandleResult(InvocationResult, IMessage, IModel)
  nameWithType: AbstractMessageListenerAdapter.HandleResult(InvocationResult, IMessage, IModel)
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.HandleResult(Steeltoe.Messaging.RabbitMQ.Listener.Adapters.InvocationResult, Steeltoe.Messaging.IMessage, RabbitMQ.Client.IModel)
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.HandleResult(Steeltoe.Messaging.RabbitMQ.Listener.Adapters.InvocationResult,Steeltoe.Messaging.IMessage,RabbitMQ.Client.IModel)
    name: HandleResult
    nameWithType: AbstractMessageListenerAdapter.HandleResult
    fullName: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.HandleResult
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.InvocationResult
    name: InvocationResult
    nameWithType: InvocationResult
    fullName: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.InvocationResult
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: RabbitMQ.Client.IModel
    name: IModel
    nameWithType: IModel
    fullName: RabbitMQ.Client.IModel
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.HandleResult(Steeltoe.Messaging.RabbitMQ.Listener.Adapters.InvocationResult,Steeltoe.Messaging.IMessage,RabbitMQ.Client.IModel)
    name: HandleResult
    nameWithType: AbstractMessageListenerAdapter.HandleResult
    fullName: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.HandleResult
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.InvocationResult
    name: InvocationResult
    nameWithType: InvocationResult
    fullName: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.InvocationResult
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: RabbitMQ.Client.IModel
    name: IModel
    nameWithType: IModel
    fullName: RabbitMQ.Client.IModel
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.HandleResult(Steeltoe.Messaging.RabbitMQ.Listener.Adapters.InvocationResult,Steeltoe.Messaging.IMessage,RabbitMQ.Client.IModel,System.Object)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.HandleResult(Steeltoe.Messaging.RabbitMQ.Listener.Adapters.InvocationResult,Steeltoe.Messaging.IMessage,RabbitMQ.Client.IModel,System.Object)
  parent: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter
  isExternal: true
  name: HandleResult(InvocationResult, IMessage, IModel, Object)
  nameWithType: AbstractMessageListenerAdapter.HandleResult(InvocationResult, IMessage, IModel, Object)
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.HandleResult(Steeltoe.Messaging.RabbitMQ.Listener.Adapters.InvocationResult, Steeltoe.Messaging.IMessage, RabbitMQ.Client.IModel, System.Object)
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.HandleResult(Steeltoe.Messaging.RabbitMQ.Listener.Adapters.InvocationResult,Steeltoe.Messaging.IMessage,RabbitMQ.Client.IModel,System.Object)
    name: HandleResult
    nameWithType: AbstractMessageListenerAdapter.HandleResult
    fullName: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.HandleResult
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.InvocationResult
    name: InvocationResult
    nameWithType: InvocationResult
    fullName: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.InvocationResult
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: RabbitMQ.Client.IModel
    name: IModel
    nameWithType: IModel
    fullName: RabbitMQ.Client.IModel
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.HandleResult(Steeltoe.Messaging.RabbitMQ.Listener.Adapters.InvocationResult,Steeltoe.Messaging.IMessage,RabbitMQ.Client.IModel,System.Object)
    name: HandleResult
    nameWithType: AbstractMessageListenerAdapter.HandleResult
    fullName: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.HandleResult
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.InvocationResult
    name: InvocationResult
    nameWithType: InvocationResult
    fullName: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.InvocationResult
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: RabbitMQ.Client.IModel
    name: IModel
    nameWithType: IModel
    fullName: RabbitMQ.Client.IModel
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.DoHandleResult(Steeltoe.Messaging.RabbitMQ.Listener.Adapters.InvocationResult,Steeltoe.Messaging.IMessage,RabbitMQ.Client.IModel,System.Object)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.DoHandleResult(Steeltoe.Messaging.RabbitMQ.Listener.Adapters.InvocationResult,Steeltoe.Messaging.IMessage,RabbitMQ.Client.IModel,System.Object)
  parent: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter
  isExternal: true
  name: DoHandleResult(InvocationResult, IMessage, IModel, Object)
  nameWithType: AbstractMessageListenerAdapter.DoHandleResult(InvocationResult, IMessage, IModel, Object)
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.DoHandleResult(Steeltoe.Messaging.RabbitMQ.Listener.Adapters.InvocationResult, Steeltoe.Messaging.IMessage, RabbitMQ.Client.IModel, System.Object)
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.DoHandleResult(Steeltoe.Messaging.RabbitMQ.Listener.Adapters.InvocationResult,Steeltoe.Messaging.IMessage,RabbitMQ.Client.IModel,System.Object)
    name: DoHandleResult
    nameWithType: AbstractMessageListenerAdapter.DoHandleResult
    fullName: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.DoHandleResult
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.InvocationResult
    name: InvocationResult
    nameWithType: InvocationResult
    fullName: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.InvocationResult
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: RabbitMQ.Client.IModel
    name: IModel
    nameWithType: IModel
    fullName: RabbitMQ.Client.IModel
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.DoHandleResult(Steeltoe.Messaging.RabbitMQ.Listener.Adapters.InvocationResult,Steeltoe.Messaging.IMessage,RabbitMQ.Client.IModel,System.Object)
    name: DoHandleResult
    nameWithType: AbstractMessageListenerAdapter.DoHandleResult
    fullName: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.DoHandleResult
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.InvocationResult
    name: InvocationResult
    nameWithType: InvocationResult
    fullName: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.InvocationResult
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: RabbitMQ.Client.IModel
    name: IModel
    nameWithType: IModel
    fullName: RabbitMQ.Client.IModel
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.GetReceivedExchange(Steeltoe.Messaging.IMessage)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.GetReceivedExchange(Steeltoe.Messaging.IMessage)
  parent: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter
  name: GetReceivedExchange(IMessage)
  nameWithType: AbstractMessageListenerAdapter.GetReceivedExchange(IMessage)
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.GetReceivedExchange(Steeltoe.Messaging.IMessage)
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.GetReceivedExchange(Steeltoe.Messaging.IMessage)
    name: GetReceivedExchange
    nameWithType: AbstractMessageListenerAdapter.GetReceivedExchange
    fullName: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.GetReceivedExchange
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.GetReceivedExchange(Steeltoe.Messaging.IMessage)
    name: GetReceivedExchange
    nameWithType: AbstractMessageListenerAdapter.GetReceivedExchange
    fullName: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.GetReceivedExchange
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.PostProcessResponse(Steeltoe.Messaging.IMessage,Steeltoe.Messaging.IMessage)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.PostProcessResponse(Steeltoe.Messaging.IMessage,Steeltoe.Messaging.IMessage)
  parent: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter
  name: PostProcessResponse(IMessage, IMessage)
  nameWithType: AbstractMessageListenerAdapter.PostProcessResponse(IMessage, IMessage)
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.PostProcessResponse(Steeltoe.Messaging.IMessage, Steeltoe.Messaging.IMessage)
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.PostProcessResponse(Steeltoe.Messaging.IMessage,Steeltoe.Messaging.IMessage)
    name: PostProcessResponse
    nameWithType: AbstractMessageListenerAdapter.PostProcessResponse
    fullName: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.PostProcessResponse
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.PostProcessResponse(Steeltoe.Messaging.IMessage,Steeltoe.Messaging.IMessage)
    name: PostProcessResponse
    nameWithType: AbstractMessageListenerAdapter.PostProcessResponse
    fullName: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.PostProcessResponse
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.GetReplyToAddress(Steeltoe.Messaging.IMessage,System.Object,Steeltoe.Messaging.RabbitMQ.Listener.Adapters.InvocationResult)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.GetReplyToAddress(Steeltoe.Messaging.IMessage,System.Object,Steeltoe.Messaging.RabbitMQ.Listener.Adapters.InvocationResult)
  parent: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter
  isExternal: true
  name: GetReplyToAddress(IMessage, Object, InvocationResult)
  nameWithType: AbstractMessageListenerAdapter.GetReplyToAddress(IMessage, Object, InvocationResult)
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.GetReplyToAddress(Steeltoe.Messaging.IMessage, System.Object, Steeltoe.Messaging.RabbitMQ.Listener.Adapters.InvocationResult)
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.GetReplyToAddress(Steeltoe.Messaging.IMessage,System.Object,Steeltoe.Messaging.RabbitMQ.Listener.Adapters.InvocationResult)
    name: GetReplyToAddress
    nameWithType: AbstractMessageListenerAdapter.GetReplyToAddress
    fullName: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.GetReplyToAddress
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.InvocationResult
    name: InvocationResult
    nameWithType: InvocationResult
    fullName: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.InvocationResult
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.GetReplyToAddress(Steeltoe.Messaging.IMessage,System.Object,Steeltoe.Messaging.RabbitMQ.Listener.Adapters.InvocationResult)
    name: GetReplyToAddress
    nameWithType: AbstractMessageListenerAdapter.GetReplyToAddress
    fullName: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.GetReplyToAddress
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.InvocationResult
    name: InvocationResult
    nameWithType: InvocationResult
    fullName: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.InvocationResult
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.SendResponse(RabbitMQ.Client.IModel,Steeltoe.Messaging.RabbitMQ.Core.Address,Steeltoe.Messaging.IMessage{System.Byte[]})
  commentId: M:Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.SendResponse(RabbitMQ.Client.IModel,Steeltoe.Messaging.RabbitMQ.Core.Address,Steeltoe.Messaging.IMessage{System.Byte[]})
  parent: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter
  isExternal: true
  name: SendResponse(IModel, Address, IMessage<Byte[]>)
  nameWithType: AbstractMessageListenerAdapter.SendResponse(IModel, Address, IMessage<Byte[]>)
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.SendResponse(RabbitMQ.Client.IModel, Steeltoe.Messaging.RabbitMQ.Core.Address, Steeltoe.Messaging.IMessage<System.Byte[]>)
  nameWithType.vb: AbstractMessageListenerAdapter.SendResponse(IModel, Address, IMessage(Of Byte()))
  fullName.vb: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.SendResponse(RabbitMQ.Client.IModel, Steeltoe.Messaging.RabbitMQ.Core.Address, Steeltoe.Messaging.IMessage(Of System.Byte()))
  name.vb: SendResponse(IModel, Address, IMessage(Of Byte()))
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.SendResponse(RabbitMQ.Client.IModel,Steeltoe.Messaging.RabbitMQ.Core.Address,Steeltoe.Messaging.IMessage{System.Byte[]})
    name: SendResponse
    nameWithType: AbstractMessageListenerAdapter.SendResponse
    fullName: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.SendResponse
  - name: (
    nameWithType: (
    fullName: (
  - uid: RabbitMQ.Client.IModel
    name: IModel
    nameWithType: IModel
    fullName: RabbitMQ.Client.IModel
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.RabbitMQ.Core.Address
    name: Address
    nameWithType: Address
    fullName: Steeltoe.Messaging.RabbitMQ.Core.Address
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.IMessage`1
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.SendResponse(RabbitMQ.Client.IModel,Steeltoe.Messaging.RabbitMQ.Core.Address,Steeltoe.Messaging.IMessage{System.Byte[]})
    name: SendResponse
    nameWithType: AbstractMessageListenerAdapter.SendResponse
    fullName: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.SendResponse
  - name: (
    nameWithType: (
    fullName: (
  - uid: RabbitMQ.Client.IModel
    name: IModel
    nameWithType: IModel
    fullName: RabbitMQ.Client.IModel
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.RabbitMQ.Core.Address
    name: Address
    nameWithType: Address
    fullName: Steeltoe.Messaging.RabbitMQ.Core.Address
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.IMessage`1
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.DoPublish(RabbitMQ.Client.IModel,Steeltoe.Messaging.RabbitMQ.Core.Address,Steeltoe.Messaging.IMessage{System.Byte[]})
  commentId: M:Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.DoPublish(RabbitMQ.Client.IModel,Steeltoe.Messaging.RabbitMQ.Core.Address,Steeltoe.Messaging.IMessage{System.Byte[]})
  parent: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter
  isExternal: true
  name: DoPublish(IModel, Address, IMessage<Byte[]>)
  nameWithType: AbstractMessageListenerAdapter.DoPublish(IModel, Address, IMessage<Byte[]>)
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.DoPublish(RabbitMQ.Client.IModel, Steeltoe.Messaging.RabbitMQ.Core.Address, Steeltoe.Messaging.IMessage<System.Byte[]>)
  nameWithType.vb: AbstractMessageListenerAdapter.DoPublish(IModel, Address, IMessage(Of Byte()))
  fullName.vb: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.DoPublish(RabbitMQ.Client.IModel, Steeltoe.Messaging.RabbitMQ.Core.Address, Steeltoe.Messaging.IMessage(Of System.Byte()))
  name.vb: DoPublish(IModel, Address, IMessage(Of Byte()))
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.DoPublish(RabbitMQ.Client.IModel,Steeltoe.Messaging.RabbitMQ.Core.Address,Steeltoe.Messaging.IMessage{System.Byte[]})
    name: DoPublish
    nameWithType: AbstractMessageListenerAdapter.DoPublish
    fullName: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.DoPublish
  - name: (
    nameWithType: (
    fullName: (
  - uid: RabbitMQ.Client.IModel
    name: IModel
    nameWithType: IModel
    fullName: RabbitMQ.Client.IModel
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.RabbitMQ.Core.Address
    name: Address
    nameWithType: Address
    fullName: Steeltoe.Messaging.RabbitMQ.Core.Address
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.IMessage`1
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.DoPublish(RabbitMQ.Client.IModel,Steeltoe.Messaging.RabbitMQ.Core.Address,Steeltoe.Messaging.IMessage{System.Byte[]})
    name: DoPublish
    nameWithType: AbstractMessageListenerAdapter.DoPublish
    fullName: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.DoPublish
  - name: (
    nameWithType: (
    fullName: (
  - uid: RabbitMQ.Client.IModel
    name: IModel
    nameWithType: IModel
    fullName: RabbitMQ.Client.IModel
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.RabbitMQ.Core.Address
    name: Address
    nameWithType: Address
    fullName: Steeltoe.Messaging.RabbitMQ.Core.Address
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.IMessage`1
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.PostProcessChannel(RabbitMQ.Client.IModel,Steeltoe.Messaging.IMessage)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.PostProcessChannel(RabbitMQ.Client.IModel,Steeltoe.Messaging.IMessage)
  parent: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter
  isExternal: true
  name: PostProcessChannel(IModel, IMessage)
  nameWithType: AbstractMessageListenerAdapter.PostProcessChannel(IModel, IMessage)
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.PostProcessChannel(RabbitMQ.Client.IModel, Steeltoe.Messaging.IMessage)
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.PostProcessChannel(RabbitMQ.Client.IModel,Steeltoe.Messaging.IMessage)
    name: PostProcessChannel
    nameWithType: AbstractMessageListenerAdapter.PostProcessChannel
    fullName: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.PostProcessChannel
  - name: (
    nameWithType: (
    fullName: (
  - uid: RabbitMQ.Client.IModel
    name: IModel
    nameWithType: IModel
    fullName: RabbitMQ.Client.IModel
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.PostProcessChannel(RabbitMQ.Client.IModel,Steeltoe.Messaging.IMessage)
    name: PostProcessChannel
    nameWithType: AbstractMessageListenerAdapter.PostProcessChannel
    fullName: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.PostProcessChannel
  - name: (
    nameWithType: (
    fullName: (
  - uid: RabbitMQ.Client.IModel
    name: IModel
    nameWithType: IModel
    fullName: RabbitMQ.Client.IModel
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Steeltoe.Messaging.RabbitMQ.Listener
  commentId: N:Steeltoe.Messaging.RabbitMQ.Listener
  name: Steeltoe.Messaging.RabbitMQ.Listener
  nameWithType: Steeltoe.Messaging.RabbitMQ.Listener
  fullName: Steeltoe.Messaging.RabbitMQ.Listener
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.MessageListenerAdapter.DefaultListenerMethod*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Listener.Adapters.MessageListenerAdapter.DefaultListenerMethod
  name: DefaultListenerMethod
  nameWithType: MessageListenerAdapter.DefaultListenerMethod
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.MessageListenerAdapter.DefaultListenerMethod
- uid: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.MessageListenerAdapter.Instance*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Listener.Adapters.MessageListenerAdapter.Instance
  name: Instance
  nameWithType: MessageListenerAdapter.Instance
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.MessageListenerAdapter.Instance
- uid: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.MessageListenerAdapter.#ctor*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Listener.Adapters.MessageListenerAdapter.#ctor
  name: MessageListenerAdapter
  nameWithType: MessageListenerAdapter.MessageListenerAdapter
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.MessageListenerAdapter.MessageListenerAdapter
- uid: Steeltoe.Common.Contexts.IApplicationContext
  commentId: T:Steeltoe.Common.Contexts.IApplicationContext
  parent: Steeltoe.Common.Contexts
  name: IApplicationContext
  nameWithType: IApplicationContext
  fullName: Steeltoe.Common.Contexts.IApplicationContext
- uid: Microsoft.Extensions.Logging.ILogger
  commentId: T:Microsoft.Extensions.Logging.ILogger
  parent: Microsoft.Extensions.Logging
  isExternal: true
  name: ILogger
  nameWithType: ILogger
  fullName: Microsoft.Extensions.Logging.ILogger
- uid: Steeltoe.Common.Contexts
  commentId: N:Steeltoe.Common.Contexts
  name: Steeltoe.Common.Contexts
  nameWithType: Steeltoe.Common.Contexts
  fullName: Steeltoe.Common.Contexts
- uid: Microsoft.Extensions.Logging
  commentId: N:Microsoft.Extensions.Logging
  isExternal: true
  name: Microsoft.Extensions.Logging
  nameWithType: Microsoft.Extensions.Logging
  fullName: Microsoft.Extensions.Logging
- uid: Steeltoe.Messaging.Converter.ISmartMessageConverter
  commentId: T:Steeltoe.Messaging.Converter.ISmartMessageConverter
  parent: Steeltoe.Messaging.Converter
  name: ISmartMessageConverter
  nameWithType: ISmartMessageConverter
  fullName: Steeltoe.Messaging.Converter.ISmartMessageConverter
- uid: Steeltoe.Messaging.Converter
  commentId: N:Steeltoe.Messaging.Converter
  name: Steeltoe.Messaging.Converter
  nameWithType: Steeltoe.Messaging.Converter
  fullName: Steeltoe.Messaging.Converter
- uid: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.MessageListenerAdapter.SetQueueOrTagToMethodName*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Listener.Adapters.MessageListenerAdapter.SetQueueOrTagToMethodName
  name: SetQueueOrTagToMethodName
  nameWithType: MessageListenerAdapter.SetQueueOrTagToMethodName
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.MessageListenerAdapter.SetQueueOrTagToMethodName
- uid: System.Collections.Generic.Dictionary{System.String,System.String}
  commentId: T:System.Collections.Generic.Dictionary{System.String,System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  name: Dictionary<String, String>
  nameWithType: Dictionary<String, String>
  fullName: System.Collections.Generic.Dictionary<System.String, System.String>
  nameWithType.vb: Dictionary(Of String, String)
  fullName.vb: System.Collections.Generic.Dictionary(Of System.String, System.String)
  name.vb: Dictionary(Of String, String)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Dictionary`2
  commentId: T:System.Collections.Generic.Dictionary`2
  isExternal: true
  name: Dictionary<TKey, TValue>
  nameWithType: Dictionary<TKey, TValue>
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>
  nameWithType.vb: Dictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue)
  name.vb: Dictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.MessageListenerAdapter.AddQueueOrTagToMethodName*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Listener.Adapters.MessageListenerAdapter.AddQueueOrTagToMethodName
  name: AddQueueOrTagToMethodName
  nameWithType: MessageListenerAdapter.AddQueueOrTagToMethodName
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.MessageListenerAdapter.AddQueueOrTagToMethodName
- uid: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.MessageListenerAdapter.RemoveQueueOrTagToMethodName*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Listener.Adapters.MessageListenerAdapter.RemoveQueueOrTagToMethodName
  name: RemoveQueueOrTagToMethodName
  nameWithType: MessageListenerAdapter.RemoveQueueOrTagToMethodName
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.MessageListenerAdapter.RemoveQueueOrTagToMethodName
- uid: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.OnMessage(Steeltoe.Messaging.IMessage,RabbitMQ.Client.IModel)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.OnMessage(Steeltoe.Messaging.IMessage,RabbitMQ.Client.IModel)
  parent: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter
  isExternal: true
  name: OnMessage(IMessage, IModel)
  nameWithType: AbstractMessageListenerAdapter.OnMessage(IMessage, IModel)
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.OnMessage(Steeltoe.Messaging.IMessage, RabbitMQ.Client.IModel)
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.OnMessage(Steeltoe.Messaging.IMessage,RabbitMQ.Client.IModel)
    name: OnMessage
    nameWithType: AbstractMessageListenerAdapter.OnMessage
    fullName: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.OnMessage
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: RabbitMQ.Client.IModel
    name: IModel
    nameWithType: IModel
    fullName: RabbitMQ.Client.IModel
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.OnMessage(Steeltoe.Messaging.IMessage,RabbitMQ.Client.IModel)
    name: OnMessage
    nameWithType: AbstractMessageListenerAdapter.OnMessage
    fullName: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.OnMessage
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: RabbitMQ.Client.IModel
    name: IModel
    nameWithType: IModel
    fullName: RabbitMQ.Client.IModel
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.MessageListenerAdapter.OnMessage*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Listener.Adapters.MessageListenerAdapter.OnMessage
  name: OnMessage
  nameWithType: MessageListenerAdapter.OnMessage
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.MessageListenerAdapter.OnMessage
- uid: Steeltoe.Messaging.IMessage
  commentId: T:Steeltoe.Messaging.IMessage
  parent: Steeltoe.Messaging
  name: IMessage
  nameWithType: IMessage
  fullName: Steeltoe.Messaging.IMessage
- uid: RabbitMQ.Client.IModel
  commentId: T:RabbitMQ.Client.IModel
  parent: RabbitMQ.Client
  isExternal: true
  name: IModel
  nameWithType: IModel
  fullName: RabbitMQ.Client.IModel
- uid: Steeltoe.Messaging
  commentId: N:Steeltoe.Messaging
  name: Steeltoe.Messaging
  nameWithType: Steeltoe.Messaging
  fullName: Steeltoe.Messaging
- uid: RabbitMQ.Client
  commentId: N:RabbitMQ.Client
  isExternal: true
  name: RabbitMQ.Client
  nameWithType: RabbitMQ.Client
  fullName: RabbitMQ.Client
- uid: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.MessageListenerAdapter.BuildListenerArguments*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Listener.Adapters.MessageListenerAdapter.BuildListenerArguments
  name: BuildListenerArguments
  nameWithType: MessageListenerAdapter.BuildListenerArguments
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.MessageListenerAdapter.BuildListenerArguments
- uid: System.Object[]
  isExternal: true
  name: Object[]
  nameWithType: Object[]
  fullName: System.Object[]
  nameWithType.vb: Object()
  fullName.vb: System.Object()
  name.vb: Object()
  spec.csharp:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.MessageListenerAdapter.GetListenerMethodName*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Listener.Adapters.MessageListenerAdapter.GetListenerMethodName
  name: GetListenerMethodName
  nameWithType: MessageListenerAdapter.GetListenerMethodName
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.MessageListenerAdapter.GetListenerMethodName
- uid: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.MessageListenerAdapter.InvokeListenerMethod*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Listener.Adapters.MessageListenerAdapter.InvokeListenerMethod
  name: InvokeListenerMethod
  nameWithType: MessageListenerAdapter.InvokeListenerMethod
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.MessageListenerAdapter.InvokeListenerMethod
