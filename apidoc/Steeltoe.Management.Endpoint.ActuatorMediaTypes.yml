### YamlMime:ManagedReference
items:
- uid: Steeltoe.Management.Endpoint.ActuatorMediaTypes
  commentId: T:Steeltoe.Management.Endpoint.ActuatorMediaTypes
  id: ActuatorMediaTypes
  parent: Steeltoe.Management.Endpoint
  children:
  - Steeltoe.Management.Endpoint.ActuatorMediaTypes.ANY
  - Steeltoe.Management.Endpoint.ActuatorMediaTypes.APP_JSON
  - Steeltoe.Management.Endpoint.ActuatorMediaTypes.GetContentHeaders(System.Collections.Generic.List{System.String},Steeltoe.Management.Endpoint.MediaTypeVersion)
  - Steeltoe.Management.Endpoint.ActuatorMediaTypes.V1_JSON
  - Steeltoe.Management.Endpoint.ActuatorMediaTypes.V2_JSON
  langs:
  - csharp
  - vb
  name: ActuatorMediaTypes
  nameWithType: ActuatorMediaTypes
  fullName: Steeltoe.Management.Endpoint.ActuatorMediaTypes
  type: Class
  source:
    remote:
      path: src/Management/src/EndpointBase/ActuatorMediaTypes.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: ActuatorMediaTypes
    path: ../Steeltoe/src/Management/src/EndpointBase/ActuatorMediaTypes.cs
    startLine: 9
  assemblies:
  - Steeltoe.Management.EndpointBase
  namespace: Steeltoe.Management.Endpoint
  syntax:
    content: public static class ActuatorMediaTypes
    content.vb: Public Module ActuatorMediaTypes
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Steeltoe.Management.Endpoint.ActuatorMediaTypes.V1_JSON
  commentId: F:Steeltoe.Management.Endpoint.ActuatorMediaTypes.V1_JSON
  id: V1_JSON
  parent: Steeltoe.Management.Endpoint.ActuatorMediaTypes
  langs:
  - csharp
  - vb
  name: V1_JSON
  nameWithType: ActuatorMediaTypes.V1_JSON
  fullName: Steeltoe.Management.Endpoint.ActuatorMediaTypes.V1_JSON
  type: Field
  source:
    remote:
      path: src/Management/src/EndpointBase/ActuatorMediaTypes.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: V1_JSON
    path: ../Steeltoe/src/Management/src/EndpointBase/ActuatorMediaTypes.cs
    startLine: 11
  assemblies:
  - Steeltoe.Management.EndpointBase
  namespace: Steeltoe.Management.Endpoint
  syntax:
    content: public static readonly string V1_JSON
    return:
      type: System.String
    content.vb: Public Shared ReadOnly V1_JSON As String
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Steeltoe.Management.Endpoint.ActuatorMediaTypes.V2_JSON
  commentId: F:Steeltoe.Management.Endpoint.ActuatorMediaTypes.V2_JSON
  id: V2_JSON
  parent: Steeltoe.Management.Endpoint.ActuatorMediaTypes
  langs:
  - csharp
  - vb
  name: V2_JSON
  nameWithType: ActuatorMediaTypes.V2_JSON
  fullName: Steeltoe.Management.Endpoint.ActuatorMediaTypes.V2_JSON
  type: Field
  source:
    remote:
      path: src/Management/src/EndpointBase/ActuatorMediaTypes.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: V2_JSON
    path: ../Steeltoe/src/Management/src/EndpointBase/ActuatorMediaTypes.cs
    startLine: 13
  assemblies:
  - Steeltoe.Management.EndpointBase
  namespace: Steeltoe.Management.Endpoint
  syntax:
    content: public static readonly string V2_JSON
    return:
      type: System.String
    content.vb: Public Shared ReadOnly V2_JSON As String
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Steeltoe.Management.Endpoint.ActuatorMediaTypes.APP_JSON
  commentId: F:Steeltoe.Management.Endpoint.ActuatorMediaTypes.APP_JSON
  id: APP_JSON
  parent: Steeltoe.Management.Endpoint.ActuatorMediaTypes
  langs:
  - csharp
  - vb
  name: APP_JSON
  nameWithType: ActuatorMediaTypes.APP_JSON
  fullName: Steeltoe.Management.Endpoint.ActuatorMediaTypes.APP_JSON
  type: Field
  source:
    remote:
      path: src/Management/src/EndpointBase/ActuatorMediaTypes.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: APP_JSON
    path: ../Steeltoe/src/Management/src/EndpointBase/ActuatorMediaTypes.cs
    startLine: 15
  assemblies:
  - Steeltoe.Management.EndpointBase
  namespace: Steeltoe.Management.Endpoint
  syntax:
    content: public static readonly string APP_JSON
    return:
      type: System.String
    content.vb: Public Shared ReadOnly APP_JSON As String
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Steeltoe.Management.Endpoint.ActuatorMediaTypes.ANY
  commentId: F:Steeltoe.Management.Endpoint.ActuatorMediaTypes.ANY
  id: ANY
  parent: Steeltoe.Management.Endpoint.ActuatorMediaTypes
  langs:
  - csharp
  - vb
  name: ANY
  nameWithType: ActuatorMediaTypes.ANY
  fullName: Steeltoe.Management.Endpoint.ActuatorMediaTypes.ANY
  type: Field
  source:
    remote:
      path: src/Management/src/EndpointBase/ActuatorMediaTypes.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: ANY
    path: ../Steeltoe/src/Management/src/EndpointBase/ActuatorMediaTypes.cs
    startLine: 17
  assemblies:
  - Steeltoe.Management.EndpointBase
  namespace: Steeltoe.Management.Endpoint
  syntax:
    content: public static readonly string ANY
    return:
      type: System.String
    content.vb: Public Shared ReadOnly ANY As String
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Steeltoe.Management.Endpoint.ActuatorMediaTypes.GetContentHeaders(System.Collections.Generic.List{System.String},Steeltoe.Management.Endpoint.MediaTypeVersion)
  commentId: M:Steeltoe.Management.Endpoint.ActuatorMediaTypes.GetContentHeaders(System.Collections.Generic.List{System.String},Steeltoe.Management.Endpoint.MediaTypeVersion)
  id: GetContentHeaders(System.Collections.Generic.List{System.String},Steeltoe.Management.Endpoint.MediaTypeVersion)
  parent: Steeltoe.Management.Endpoint.ActuatorMediaTypes
  langs:
  - csharp
  - vb
  name: GetContentHeaders(List<String>, MediaTypeVersion)
  nameWithType: ActuatorMediaTypes.GetContentHeaders(List<String>, MediaTypeVersion)
  fullName: Steeltoe.Management.Endpoint.ActuatorMediaTypes.GetContentHeaders(System.Collections.Generic.List<System.String>, Steeltoe.Management.Endpoint.MediaTypeVersion)
  type: Method
  source:
    remote:
      path: src/Management/src/EndpointBase/ActuatorMediaTypes.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: GetContentHeaders
    path: ../Steeltoe/src/Management/src/EndpointBase/ActuatorMediaTypes.cs
    startLine: 19
  assemblies:
  - Steeltoe.Management.EndpointBase
  namespace: Steeltoe.Management.Endpoint
  syntax:
    content: public static string GetContentHeaders(List<string> acceptHeaders, MediaTypeVersion version = MediaTypeVersion.V2)
    parameters:
    - id: acceptHeaders
      type: System.Collections.Generic.List{System.String}
    - id: version
      type: Steeltoe.Management.Endpoint.MediaTypeVersion
    return:
      type: System.String
    content.vb: Public Shared Function GetContentHeaders(acceptHeaders As List(Of String), version As MediaTypeVersion = MediaTypeVersion.V2) As String
  overload: Steeltoe.Management.Endpoint.ActuatorMediaTypes.GetContentHeaders*
  nameWithType.vb: ActuatorMediaTypes.GetContentHeaders(List(Of String), MediaTypeVersion)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Steeltoe.Management.Endpoint.ActuatorMediaTypes.GetContentHeaders(System.Collections.Generic.List(Of System.String), Steeltoe.Management.Endpoint.MediaTypeVersion)
  name.vb: GetContentHeaders(List(Of String), MediaTypeVersion)
references:
- uid: Steeltoe.Management.Endpoint
  commentId: N:Steeltoe.Management.Endpoint
  name: Steeltoe.Management.Endpoint
  nameWithType: Steeltoe.Management.Endpoint
  fullName: Steeltoe.Management.Endpoint
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Steeltoe.Management.Endpoint.ActuatorMediaTypes.GetContentHeaders*
  commentId: Overload:Steeltoe.Management.Endpoint.ActuatorMediaTypes.GetContentHeaders
  name: GetContentHeaders
  nameWithType: ActuatorMediaTypes.GetContentHeaders
  fullName: Steeltoe.Management.Endpoint.ActuatorMediaTypes.GetContentHeaders
- uid: System.Collections.Generic.List{System.String}
  commentId: T:System.Collections.Generic.List{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<String>
  nameWithType: List<String>
  fullName: System.Collections.Generic.List<System.String>
  nameWithType.vb: List(Of String)
  fullName.vb: System.Collections.Generic.List(Of System.String)
  name.vb: List(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Management.Endpoint.MediaTypeVersion
  commentId: T:Steeltoe.Management.Endpoint.MediaTypeVersion
  parent: Steeltoe.Management.Endpoint
  name: MediaTypeVersion
  nameWithType: MediaTypeVersion
  fullName: Steeltoe.Management.Endpoint.MediaTypeVersion
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
