### YamlMime:ManagedReference
items:
- uid: Steeltoe.Common.Discovery.DiscoveryHttpClientHandlerBase
  commentId: T:Steeltoe.Common.Discovery.DiscoveryHttpClientHandlerBase
  id: DiscoveryHttpClientHandlerBase
  parent: Steeltoe.Common.Discovery
  children:
  - Steeltoe.Common.Discovery.DiscoveryHttpClientHandlerBase.#ctor(Steeltoe.Discovery.IDiscoveryClient,ILogger,ILoadBalancer)
  - Steeltoe.Common.Discovery.DiscoveryHttpClientHandlerBase._client
  - Steeltoe.Common.Discovery.DiscoveryHttpClientHandlerBase._loadBalancer
  - Steeltoe.Common.Discovery.DiscoveryHttpClientHandlerBase._logger
  - Steeltoe.Common.Discovery.DiscoveryHttpClientHandlerBase.LookupService(System.Uri)
  - Steeltoe.Common.Discovery.DiscoveryHttpClientHandlerBase.LookupServiceAsync(System.Uri)
  langs:
  - csharp
  - vb
  name: DiscoveryHttpClientHandlerBase
  nameWithType: DiscoveryHttpClientHandlerBase
  fullName: Steeltoe.Common.Discovery.DiscoveryHttpClientHandlerBase
  type: Class
  source:
    remote:
      path: src/Common/src/Common.Http/Discovery/DiscoveryHttpClientHandlerBase.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: DiscoveryHttpClientHandlerBase
    path: ../Steeltoe/src/Common/src/Common.Http/Discovery/DiscoveryHttpClientHandlerBase.cs
    startLine: 12
  assemblies:
  - Steeltoe.Common.Http
  namespace: Steeltoe.Common.Discovery
  syntax:
    content: public class DiscoveryHttpClientHandlerBase
    content.vb: Public Class DiscoveryHttpClientHandlerBase
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Steeltoe.Common.Discovery.DiscoveryHttpClientHandlerBase._client
  commentId: F:Steeltoe.Common.Discovery.DiscoveryHttpClientHandlerBase._client
  id: _client
  parent: Steeltoe.Common.Discovery.DiscoveryHttpClientHandlerBase
  langs:
  - csharp
  - vb
  name: _client
  nameWithType: DiscoveryHttpClientHandlerBase._client
  fullName: Steeltoe.Common.Discovery.DiscoveryHttpClientHandlerBase._client
  type: Field
  source:
    remote:
      path: src/Common/src/Common.Http/Discovery/DiscoveryHttpClientHandlerBase.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: _client
    path: ../Steeltoe/src/Common/src/Common.Http/Discovery/DiscoveryHttpClientHandlerBase.cs
    startLine: 14
  assemblies:
  - Steeltoe.Common.Http
  namespace: Steeltoe.Common.Discovery
  syntax:
    content: protected IDiscoveryClient _client
    return:
      type: Steeltoe.Discovery.IDiscoveryClient
    content.vb: Protected _client As IDiscoveryClient
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Steeltoe.Common.Discovery.DiscoveryHttpClientHandlerBase._loadBalancer
  commentId: F:Steeltoe.Common.Discovery.DiscoveryHttpClientHandlerBase._loadBalancer
  id: _loadBalancer
  parent: Steeltoe.Common.Discovery.DiscoveryHttpClientHandlerBase
  langs:
  - csharp
  - vb
  name: _loadBalancer
  nameWithType: DiscoveryHttpClientHandlerBase._loadBalancer
  fullName: Steeltoe.Common.Discovery.DiscoveryHttpClientHandlerBase._loadBalancer
  type: Field
  source:
    remote:
      path: src/Common/src/Common.Http/Discovery/DiscoveryHttpClientHandlerBase.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: _loadBalancer
    path: ../Steeltoe/src/Common/src/Common.Http/Discovery/DiscoveryHttpClientHandlerBase.cs
    startLine: 15
  assemblies:
  - Steeltoe.Common.Http
  namespace: Steeltoe.Common.Discovery
  syntax:
    content: protected ILoadBalancer _loadBalancer
    return:
      type: ILoadBalancer
    content.vb: Protected _loadBalancer As ILoadBalancer
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Steeltoe.Common.Discovery.DiscoveryHttpClientHandlerBase._logger
  commentId: F:Steeltoe.Common.Discovery.DiscoveryHttpClientHandlerBase._logger
  id: _logger
  parent: Steeltoe.Common.Discovery.DiscoveryHttpClientHandlerBase
  langs:
  - csharp
  - vb
  name: _logger
  nameWithType: DiscoveryHttpClientHandlerBase._logger
  fullName: Steeltoe.Common.Discovery.DiscoveryHttpClientHandlerBase._logger
  type: Field
  source:
    remote:
      path: src/Common/src/Common.Http/Discovery/DiscoveryHttpClientHandlerBase.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: _logger
    path: ../Steeltoe/src/Common/src/Common.Http/Discovery/DiscoveryHttpClientHandlerBase.cs
    startLine: 16
  assemblies:
  - Steeltoe.Common.Http
  namespace: Steeltoe.Common.Discovery
  syntax:
    content: protected ILogger _logger
    return:
      type: ILogger
    content.vb: Protected _logger As ILogger
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Steeltoe.Common.Discovery.DiscoveryHttpClientHandlerBase.#ctor(Steeltoe.Discovery.IDiscoveryClient,ILogger,ILoadBalancer)
  commentId: M:Steeltoe.Common.Discovery.DiscoveryHttpClientHandlerBase.#ctor(Steeltoe.Discovery.IDiscoveryClient,ILogger,ILoadBalancer)
  id: '#ctor(Steeltoe.Discovery.IDiscoveryClient,ILogger,ILoadBalancer)'
  parent: Steeltoe.Common.Discovery.DiscoveryHttpClientHandlerBase
  langs:
  - csharp
  - vb
  name: DiscoveryHttpClientHandlerBase(IDiscoveryClient, ILogger, ILoadBalancer)
  nameWithType: DiscoveryHttpClientHandlerBase.DiscoveryHttpClientHandlerBase(IDiscoveryClient, ILogger, ILoadBalancer)
  fullName: Steeltoe.Common.Discovery.DiscoveryHttpClientHandlerBase.DiscoveryHttpClientHandlerBase(Steeltoe.Discovery.IDiscoveryClient, ILogger, ILoadBalancer)
  type: Constructor
  source:
    remote:
      path: src/Common/src/Common.Http/Discovery/DiscoveryHttpClientHandlerBase.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: .ctor
    path: ../Steeltoe/src/Common/src/Common.Http/Discovery/DiscoveryHttpClientHandlerBase.cs
    startLine: 18
  assemblies:
  - Steeltoe.Common.Http
  namespace: Steeltoe.Common.Discovery
  syntax:
    content: public DiscoveryHttpClientHandlerBase(IDiscoveryClient client, ILogger logger = null, ILoadBalancer loadBalancer = null)
    parameters:
    - id: client
      type: Steeltoe.Discovery.IDiscoveryClient
    - id: logger
      type: ILogger
    - id: loadBalancer
      type: ILoadBalancer
    content.vb: Public Sub New(client As IDiscoveryClient, logger As ILogger = Nothing, loadBalancer As ILoadBalancer = Nothing)
  overload: Steeltoe.Common.Discovery.DiscoveryHttpClientHandlerBase.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Steeltoe.Common.Discovery.DiscoveryHttpClientHandlerBase.LookupService(System.Uri)
  commentId: M:Steeltoe.Common.Discovery.DiscoveryHttpClientHandlerBase.LookupService(System.Uri)
  id: LookupService(System.Uri)
  parent: Steeltoe.Common.Discovery.DiscoveryHttpClientHandlerBase
  langs:
  - csharp
  - vb
  name: LookupService(Uri)
  nameWithType: DiscoveryHttpClientHandlerBase.LookupService(Uri)
  fullName: Steeltoe.Common.Discovery.DiscoveryHttpClientHandlerBase.LookupService(System.Uri)
  type: Method
  source:
    remote:
      path: src/Common/src/Common.Http/Discovery/DiscoveryHttpClientHandlerBase.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: LookupService
    path: ../Steeltoe/src/Common/src/Common.Http/Discovery/DiscoveryHttpClientHandlerBase.cs
    startLine: 25
  assemblies:
  - Steeltoe.Common.Http
  namespace: Steeltoe.Common.Discovery
  syntax:
    content: public virtual Uri LookupService(Uri current)
    parameters:
    - id: current
      type: System.Uri
    return:
      type: System.Uri
    content.vb: Public Overridable Function LookupService(current As Uri) As Uri
  overload: Steeltoe.Common.Discovery.DiscoveryHttpClientHandlerBase.LookupService*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Steeltoe.Common.Discovery.DiscoveryHttpClientHandlerBase.LookupServiceAsync(System.Uri)
  commentId: M:Steeltoe.Common.Discovery.DiscoveryHttpClientHandlerBase.LookupServiceAsync(System.Uri)
  id: LookupServiceAsync(System.Uri)
  parent: Steeltoe.Common.Discovery.DiscoveryHttpClientHandlerBase
  langs:
  - csharp
  - vb
  name: LookupServiceAsync(Uri)
  nameWithType: DiscoveryHttpClientHandlerBase.LookupServiceAsync(Uri)
  fullName: Steeltoe.Common.Discovery.DiscoveryHttpClientHandlerBase.LookupServiceAsync(System.Uri)
  type: Method
  source:
    remote:
      path: src/Common/src/Common.Http/Discovery/DiscoveryHttpClientHandlerBase.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: LookupServiceAsync
    path: ../Steeltoe/src/Common/src/Common.Http/Discovery/DiscoveryHttpClientHandlerBase.cs
    startLine: 36
  assemblies:
  - Steeltoe.Common.Http
  namespace: Steeltoe.Common.Discovery
  syntax:
    content: public virtual Task<Uri> LookupServiceAsync(Uri current)
    parameters:
    - id: current
      type: System.Uri
    return:
      type: System.Threading.Tasks.Task{System.Uri}
    content.vb: Public Overridable Function LookupServiceAsync(current As Uri) As Task(Of Uri)
  overload: Steeltoe.Common.Discovery.DiscoveryHttpClientHandlerBase.LookupServiceAsync*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
references:
- uid: Steeltoe.Common.Discovery
  commentId: N:Steeltoe.Common.Discovery
  name: Steeltoe.Common.Discovery
  nameWithType: Steeltoe.Common.Discovery
  fullName: Steeltoe.Common.Discovery
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Steeltoe.Discovery.IDiscoveryClient
  commentId: T:Steeltoe.Discovery.IDiscoveryClient
  parent: Steeltoe.Discovery
  name: IDiscoveryClient
  nameWithType: IDiscoveryClient
  fullName: Steeltoe.Discovery.IDiscoveryClient
- uid: Steeltoe.Discovery
  commentId: N:Steeltoe.Discovery
  name: Steeltoe.Discovery
  nameWithType: Steeltoe.Discovery
  fullName: Steeltoe.Discovery
- uid: ILoadBalancer
  isExternal: true
  name: ILoadBalancer
  nameWithType: ILoadBalancer
  fullName: ILoadBalancer
- uid: ILogger
  isExternal: true
  name: ILogger
  nameWithType: ILogger
  fullName: ILogger
- uid: Steeltoe.Common.Discovery.DiscoveryHttpClientHandlerBase.#ctor*
  commentId: Overload:Steeltoe.Common.Discovery.DiscoveryHttpClientHandlerBase.#ctor
  name: DiscoveryHttpClientHandlerBase
  nameWithType: DiscoveryHttpClientHandlerBase.DiscoveryHttpClientHandlerBase
  fullName: Steeltoe.Common.Discovery.DiscoveryHttpClientHandlerBase.DiscoveryHttpClientHandlerBase
- uid: Steeltoe.Common.Discovery.DiscoveryHttpClientHandlerBase.LookupService*
  commentId: Overload:Steeltoe.Common.Discovery.DiscoveryHttpClientHandlerBase.LookupService
  name: LookupService
  nameWithType: DiscoveryHttpClientHandlerBase.LookupService
  fullName: Steeltoe.Common.Discovery.DiscoveryHttpClientHandlerBase.LookupService
- uid: System.Uri
  commentId: T:System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: Steeltoe.Common.Discovery.DiscoveryHttpClientHandlerBase.LookupServiceAsync*
  commentId: Overload:Steeltoe.Common.Discovery.DiscoveryHttpClientHandlerBase.LookupServiceAsync
  name: LookupServiceAsync
  nameWithType: DiscoveryHttpClientHandlerBase.LookupServiceAsync
  fullName: Steeltoe.Common.Discovery.DiscoveryHttpClientHandlerBase.LookupServiceAsync
- uid: System.Threading.Tasks.Task{System.Uri}
  commentId: T:System.Threading.Tasks.Task{System.Uri}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<Uri>
  nameWithType: Task<Uri>
  fullName: System.Threading.Tasks.Task<System.Uri>
  nameWithType.vb: Task(Of Uri)
  fullName.vb: System.Threading.Tasks.Task(Of System.Uri)
  name.vb: Task(Of Uri)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
