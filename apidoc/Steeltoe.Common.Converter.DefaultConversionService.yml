### YamlMime:ManagedReference
items:
- uid: Steeltoe.Common.Converter.DefaultConversionService
  commentId: T:Steeltoe.Common.Converter.DefaultConversionService
  id: DefaultConversionService
  parent: Steeltoe.Common.Converter
  children:
  - Steeltoe.Common.Converter.DefaultConversionService.#ctor
  - Steeltoe.Common.Converter.DefaultConversionService.AddCollectionConverters(Steeltoe.Common.Converter.IConverterRegistry)
  - Steeltoe.Common.Converter.DefaultConversionService.AddDefaultConverters(Steeltoe.Common.Converter.IConverterRegistry)
  - Steeltoe.Common.Converter.DefaultConversionService.Singleton
  langs:
  - csharp
  - vb
  name: DefaultConversionService
  nameWithType: DefaultConversionService
  fullName: Steeltoe.Common.Converter.DefaultConversionService
  type: Class
  source:
    remote:
      path: src/Common/src/Common/Converter/DefaultConversionService.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: DefaultConversionService
    path: ../Steeltoe/src/Common/src/Common/Converter/DefaultConversionService.cs
    startLine: 6
  assemblies:
  - Steeltoe.Common
  namespace: Steeltoe.Common.Converter
  syntax:
    content: 'public class DefaultConversionService : GenericConversionService, IConversionService, IConverterRegistry'
    content.vb: >-
      Public Class DefaultConversionService

          Inherits GenericConversionService

          Implements IConversionService, IConverterRegistry
  inheritance:
  - System.Object
  - Steeltoe.Common.Converter.GenericConversionService
  implements:
  - Steeltoe.Common.Converter.IConversionService
  - Steeltoe.Common.Converter.IConverterRegistry
  inheritedMembers:
  - Steeltoe.Common.Converter.GenericConversionService.CanConvert(System.Type,System.Type)
  - Steeltoe.Common.Converter.GenericConversionService.Convert``1(System.Object)
  - Steeltoe.Common.Converter.GenericConversionService.Convert(System.Object,System.Type,System.Type)
  - Steeltoe.Common.Converter.GenericConversionService.CanBypassConvert(System.Type,System.Type)
  - Steeltoe.Common.Converter.GenericConversionService.AddConverter(Steeltoe.Common.Converter.IGenericConverter)
  - Steeltoe.Common.Converter.GenericConversionService.GetConverter(System.Type,System.Type)
  - Steeltoe.Common.Converter.GenericConversionService.GetDefaultConverter(System.Type,System.Type)
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Steeltoe.Common.Converter.DefaultConversionService.Singleton
  commentId: P:Steeltoe.Common.Converter.DefaultConversionService.Singleton
  id: Singleton
  parent: Steeltoe.Common.Converter.DefaultConversionService
  langs:
  - csharp
  - vb
  name: Singleton
  nameWithType: DefaultConversionService.Singleton
  fullName: Steeltoe.Common.Converter.DefaultConversionService.Singleton
  type: Property
  source:
    remote:
      path: src/Common/src/Common/Converter/DefaultConversionService.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Singleton
    path: ../Steeltoe/src/Common/src/Common/Converter/DefaultConversionService.cs
    startLine: 12
  assemblies:
  - Steeltoe.Common
  namespace: Steeltoe.Common.Converter
  syntax:
    content: public static IConversionService Singleton { get; }
    parameters: []
    return:
      type: Steeltoe.Common.Converter.IConversionService
    content.vb: Public Shared ReadOnly Property Singleton As IConversionService
  overload: Steeltoe.Common.Converter.DefaultConversionService.Singleton*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Steeltoe.Common.Converter.DefaultConversionService.#ctor
  commentId: M:Steeltoe.Common.Converter.DefaultConversionService.#ctor
  id: '#ctor'
  parent: Steeltoe.Common.Converter.DefaultConversionService
  langs:
  - csharp
  - vb
  name: DefaultConversionService()
  nameWithType: DefaultConversionService.DefaultConversionService()
  fullName: Steeltoe.Common.Converter.DefaultConversionService.DefaultConversionService()
  type: Constructor
  source:
    remote:
      path: src/Common/src/Common/Converter/DefaultConversionService.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: .ctor
    path: ../Steeltoe/src/Common/src/Common/Converter/DefaultConversionService.cs
    startLine: 34
  assemblies:
  - Steeltoe.Common
  namespace: Steeltoe.Common.Converter
  syntax:
    content: public DefaultConversionService()
    content.vb: Public Sub New
  overload: Steeltoe.Common.Converter.DefaultConversionService.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Steeltoe.Common.Converter.DefaultConversionService.AddDefaultConverters(Steeltoe.Common.Converter.IConverterRegistry)
  commentId: M:Steeltoe.Common.Converter.DefaultConversionService.AddDefaultConverters(Steeltoe.Common.Converter.IConverterRegistry)
  id: AddDefaultConverters(Steeltoe.Common.Converter.IConverterRegistry)
  parent: Steeltoe.Common.Converter.DefaultConversionService
  langs:
  - csharp
  - vb
  name: AddDefaultConverters(IConverterRegistry)
  nameWithType: DefaultConversionService.AddDefaultConverters(IConverterRegistry)
  fullName: Steeltoe.Common.Converter.DefaultConversionService.AddDefaultConverters(Steeltoe.Common.Converter.IConverterRegistry)
  type: Method
  source:
    remote:
      path: src/Common/src/Common/Converter/DefaultConversionService.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: AddDefaultConverters
    path: ../Steeltoe/src/Common/src/Common/Converter/DefaultConversionService.cs
    startLine: 39
  assemblies:
  - Steeltoe.Common
  namespace: Steeltoe.Common.Converter
  syntax:
    content: public static void AddDefaultConverters(IConverterRegistry converterRegistry)
    parameters:
    - id: converterRegistry
      type: Steeltoe.Common.Converter.IConverterRegistry
    content.vb: Public Shared Sub AddDefaultConverters(converterRegistry As IConverterRegistry)
  overload: Steeltoe.Common.Converter.DefaultConversionService.AddDefaultConverters*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Steeltoe.Common.Converter.DefaultConversionService.AddCollectionConverters(Steeltoe.Common.Converter.IConverterRegistry)
  commentId: M:Steeltoe.Common.Converter.DefaultConversionService.AddCollectionConverters(Steeltoe.Common.Converter.IConverterRegistry)
  id: AddCollectionConverters(Steeltoe.Common.Converter.IConverterRegistry)
  parent: Steeltoe.Common.Converter.DefaultConversionService
  langs:
  - csharp
  - vb
  name: AddCollectionConverters(IConverterRegistry)
  nameWithType: DefaultConversionService.AddCollectionConverters(IConverterRegistry)
  fullName: Steeltoe.Common.Converter.DefaultConversionService.AddCollectionConverters(Steeltoe.Common.Converter.IConverterRegistry)
  type: Method
  source:
    remote:
      path: src/Common/src/Common/Converter/DefaultConversionService.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: AddCollectionConverters
    path: ../Steeltoe/src/Common/src/Common/Converter/DefaultConversionService.cs
    startLine: 49
  assemblies:
  - Steeltoe.Common
  namespace: Steeltoe.Common.Converter
  syntax:
    content: public static void AddCollectionConverters(IConverterRegistry converterRegistry)
    parameters:
    - id: converterRegistry
      type: Steeltoe.Common.Converter.IConverterRegistry
    content.vb: Public Shared Sub AddCollectionConverters(converterRegistry As IConverterRegistry)
  overload: Steeltoe.Common.Converter.DefaultConversionService.AddCollectionConverters*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Steeltoe.Common.Converter
  commentId: N:Steeltoe.Common.Converter
  name: Steeltoe.Common.Converter
  nameWithType: Steeltoe.Common.Converter
  fullName: Steeltoe.Common.Converter
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Steeltoe.Common.Converter.GenericConversionService
  commentId: T:Steeltoe.Common.Converter.GenericConversionService
  parent: Steeltoe.Common.Converter
  name: GenericConversionService
  nameWithType: GenericConversionService
  fullName: Steeltoe.Common.Converter.GenericConversionService
- uid: Steeltoe.Common.Converter.IConversionService
  commentId: T:Steeltoe.Common.Converter.IConversionService
  parent: Steeltoe.Common.Converter
  name: IConversionService
  nameWithType: IConversionService
  fullName: Steeltoe.Common.Converter.IConversionService
- uid: Steeltoe.Common.Converter.IConverterRegistry
  commentId: T:Steeltoe.Common.Converter.IConverterRegistry
  parent: Steeltoe.Common.Converter
  name: IConverterRegistry
  nameWithType: IConverterRegistry
  fullName: Steeltoe.Common.Converter.IConverterRegistry
- uid: Steeltoe.Common.Converter.GenericConversionService.CanConvert(System.Type,System.Type)
  commentId: M:Steeltoe.Common.Converter.GenericConversionService.CanConvert(System.Type,System.Type)
  parent: Steeltoe.Common.Converter.GenericConversionService
  isExternal: true
  name: CanConvert(Type, Type)
  nameWithType: GenericConversionService.CanConvert(Type, Type)
  fullName: Steeltoe.Common.Converter.GenericConversionService.CanConvert(System.Type, System.Type)
  spec.csharp:
  - uid: Steeltoe.Common.Converter.GenericConversionService.CanConvert(System.Type,System.Type)
    name: CanConvert
    nameWithType: GenericConversionService.CanConvert
    fullName: Steeltoe.Common.Converter.GenericConversionService.CanConvert
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Common.Converter.GenericConversionService.CanConvert(System.Type,System.Type)
    name: CanConvert
    nameWithType: GenericConversionService.CanConvert
    fullName: Steeltoe.Common.Converter.GenericConversionService.CanConvert
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Common.Converter.GenericConversionService.Convert``1(System.Object)
  commentId: M:Steeltoe.Common.Converter.GenericConversionService.Convert``1(System.Object)
  parent: Steeltoe.Common.Converter.GenericConversionService
  isExternal: true
  name: Convert<T>(Object)
  nameWithType: GenericConversionService.Convert<T>(Object)
  fullName: Steeltoe.Common.Converter.GenericConversionService.Convert<T>(System.Object)
  nameWithType.vb: GenericConversionService.Convert(Of T)(Object)
  fullName.vb: Steeltoe.Common.Converter.GenericConversionService.Convert(Of T)(System.Object)
  name.vb: Convert(Of T)(Object)
  spec.csharp:
  - uid: Steeltoe.Common.Converter.GenericConversionService.Convert``1(System.Object)
    name: Convert<T>
    nameWithType: GenericConversionService.Convert<T>
    fullName: Steeltoe.Common.Converter.GenericConversionService.Convert<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Common.Converter.GenericConversionService.Convert``1(System.Object)
    name: Convert(Of T)
    nameWithType: GenericConversionService.Convert(Of T)
    fullName: Steeltoe.Common.Converter.GenericConversionService.Convert(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Common.Converter.GenericConversionService.Convert(System.Object,System.Type,System.Type)
  commentId: M:Steeltoe.Common.Converter.GenericConversionService.Convert(System.Object,System.Type,System.Type)
  parent: Steeltoe.Common.Converter.GenericConversionService
  isExternal: true
  name: Convert(Object, Type, Type)
  nameWithType: GenericConversionService.Convert(Object, Type, Type)
  fullName: Steeltoe.Common.Converter.GenericConversionService.Convert(System.Object, System.Type, System.Type)
  spec.csharp:
  - uid: Steeltoe.Common.Converter.GenericConversionService.Convert(System.Object,System.Type,System.Type)
    name: Convert
    nameWithType: GenericConversionService.Convert
    fullName: Steeltoe.Common.Converter.GenericConversionService.Convert
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Common.Converter.GenericConversionService.Convert(System.Object,System.Type,System.Type)
    name: Convert
    nameWithType: GenericConversionService.Convert
    fullName: Steeltoe.Common.Converter.GenericConversionService.Convert
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Common.Converter.GenericConversionService.CanBypassConvert(System.Type,System.Type)
  commentId: M:Steeltoe.Common.Converter.GenericConversionService.CanBypassConvert(System.Type,System.Type)
  parent: Steeltoe.Common.Converter.GenericConversionService
  isExternal: true
  name: CanBypassConvert(Type, Type)
  nameWithType: GenericConversionService.CanBypassConvert(Type, Type)
  fullName: Steeltoe.Common.Converter.GenericConversionService.CanBypassConvert(System.Type, System.Type)
  spec.csharp:
  - uid: Steeltoe.Common.Converter.GenericConversionService.CanBypassConvert(System.Type,System.Type)
    name: CanBypassConvert
    nameWithType: GenericConversionService.CanBypassConvert
    fullName: Steeltoe.Common.Converter.GenericConversionService.CanBypassConvert
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Common.Converter.GenericConversionService.CanBypassConvert(System.Type,System.Type)
    name: CanBypassConvert
    nameWithType: GenericConversionService.CanBypassConvert
    fullName: Steeltoe.Common.Converter.GenericConversionService.CanBypassConvert
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Common.Converter.GenericConversionService.AddConverter(Steeltoe.Common.Converter.IGenericConverter)
  commentId: M:Steeltoe.Common.Converter.GenericConversionService.AddConverter(Steeltoe.Common.Converter.IGenericConverter)
  parent: Steeltoe.Common.Converter.GenericConversionService
  name: AddConverter(IGenericConverter)
  nameWithType: GenericConversionService.AddConverter(IGenericConverter)
  fullName: Steeltoe.Common.Converter.GenericConversionService.AddConverter(Steeltoe.Common.Converter.IGenericConverter)
  spec.csharp:
  - uid: Steeltoe.Common.Converter.GenericConversionService.AddConverter(Steeltoe.Common.Converter.IGenericConverter)
    name: AddConverter
    nameWithType: GenericConversionService.AddConverter
    fullName: Steeltoe.Common.Converter.GenericConversionService.AddConverter
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Common.Converter.IGenericConverter
    name: IGenericConverter
    nameWithType: IGenericConverter
    fullName: Steeltoe.Common.Converter.IGenericConverter
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Common.Converter.GenericConversionService.AddConverter(Steeltoe.Common.Converter.IGenericConverter)
    name: AddConverter
    nameWithType: GenericConversionService.AddConverter
    fullName: Steeltoe.Common.Converter.GenericConversionService.AddConverter
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Common.Converter.IGenericConverter
    name: IGenericConverter
    nameWithType: IGenericConverter
    fullName: Steeltoe.Common.Converter.IGenericConverter
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Common.Converter.GenericConversionService.GetConverter(System.Type,System.Type)
  commentId: M:Steeltoe.Common.Converter.GenericConversionService.GetConverter(System.Type,System.Type)
  parent: Steeltoe.Common.Converter.GenericConversionService
  isExternal: true
  name: GetConverter(Type, Type)
  nameWithType: GenericConversionService.GetConverter(Type, Type)
  fullName: Steeltoe.Common.Converter.GenericConversionService.GetConverter(System.Type, System.Type)
  spec.csharp:
  - uid: Steeltoe.Common.Converter.GenericConversionService.GetConverter(System.Type,System.Type)
    name: GetConverter
    nameWithType: GenericConversionService.GetConverter
    fullName: Steeltoe.Common.Converter.GenericConversionService.GetConverter
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Common.Converter.GenericConversionService.GetConverter(System.Type,System.Type)
    name: GetConverter
    nameWithType: GenericConversionService.GetConverter
    fullName: Steeltoe.Common.Converter.GenericConversionService.GetConverter
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Common.Converter.GenericConversionService.GetDefaultConverter(System.Type,System.Type)
  commentId: M:Steeltoe.Common.Converter.GenericConversionService.GetDefaultConverter(System.Type,System.Type)
  parent: Steeltoe.Common.Converter.GenericConversionService
  isExternal: true
  name: GetDefaultConverter(Type, Type)
  nameWithType: GenericConversionService.GetDefaultConverter(Type, Type)
  fullName: Steeltoe.Common.Converter.GenericConversionService.GetDefaultConverter(System.Type, System.Type)
  spec.csharp:
  - uid: Steeltoe.Common.Converter.GenericConversionService.GetDefaultConverter(System.Type,System.Type)
    name: GetDefaultConverter
    nameWithType: GenericConversionService.GetDefaultConverter
    fullName: Steeltoe.Common.Converter.GenericConversionService.GetDefaultConverter
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Common.Converter.GenericConversionService.GetDefaultConverter(System.Type,System.Type)
    name: GetDefaultConverter
    nameWithType: GenericConversionService.GetDefaultConverter
    fullName: Steeltoe.Common.Converter.GenericConversionService.GetDefaultConverter
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Steeltoe.Common.Converter.DefaultConversionService.Singleton*
  commentId: Overload:Steeltoe.Common.Converter.DefaultConversionService.Singleton
  name: Singleton
  nameWithType: DefaultConversionService.Singleton
  fullName: Steeltoe.Common.Converter.DefaultConversionService.Singleton
- uid: Steeltoe.Common.Converter.DefaultConversionService.#ctor*
  commentId: Overload:Steeltoe.Common.Converter.DefaultConversionService.#ctor
  name: DefaultConversionService
  nameWithType: DefaultConversionService.DefaultConversionService
  fullName: Steeltoe.Common.Converter.DefaultConversionService.DefaultConversionService
- uid: Steeltoe.Common.Converter.DefaultConversionService.AddDefaultConverters*
  commentId: Overload:Steeltoe.Common.Converter.DefaultConversionService.AddDefaultConverters
  name: AddDefaultConverters
  nameWithType: DefaultConversionService.AddDefaultConverters
  fullName: Steeltoe.Common.Converter.DefaultConversionService.AddDefaultConverters
- uid: Steeltoe.Common.Converter.DefaultConversionService.AddCollectionConverters*
  commentId: Overload:Steeltoe.Common.Converter.DefaultConversionService.AddCollectionConverters
  name: AddCollectionConverters
  nameWithType: DefaultConversionService.AddCollectionConverters
  fullName: Steeltoe.Common.Converter.DefaultConversionService.AddCollectionConverters
