### YamlMime:ManagedReference
items:
- uid: Steeltoe.Discovery.Kubernetes.KubernetesDiscoveryClientFactory
  commentId: T:Steeltoe.Discovery.Kubernetes.KubernetesDiscoveryClientFactory
  id: KubernetesDiscoveryClientFactory
  parent: Steeltoe.Discovery.Kubernetes
  children:
  - Steeltoe.Discovery.Kubernetes.KubernetesDiscoveryClientFactory.CreateClient(IOptionsMonitor{Steeltoe.Discovery.Kubernetes.Discovery.KubernetesDiscoveryOptions},IKubernetes)
  langs:
  - csharp
  - vb
  name: KubernetesDiscoveryClientFactory
  nameWithType: KubernetesDiscoveryClientFactory
  fullName: Steeltoe.Discovery.Kubernetes.KubernetesDiscoveryClientFactory
  type: Class
  source:
    remote:
      path: src/Discovery/src/Kubernetes/KubernetesDiscoveryClientFactory.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: KubernetesDiscoveryClientFactory
    path: ../Steeltoe/src/Discovery/src/Kubernetes/KubernetesDiscoveryClientFactory.cs
    startLine: 11
  assemblies:
  - Steeltoe.Discovery.Kubernetes
  namespace: Steeltoe.Discovery.Kubernetes
  syntax:
    content: public static class KubernetesDiscoveryClientFactory
    content.vb: Public Module KubernetesDiscoveryClientFactory
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Steeltoe.Discovery.Kubernetes.KubernetesDiscoveryClientFactory.CreateClient(IOptionsMonitor{Steeltoe.Discovery.Kubernetes.Discovery.KubernetesDiscoveryOptions},IKubernetes)
  commentId: M:Steeltoe.Discovery.Kubernetes.KubernetesDiscoveryClientFactory.CreateClient(IOptionsMonitor{Steeltoe.Discovery.Kubernetes.Discovery.KubernetesDiscoveryOptions},IKubernetes)
  id: CreateClient(IOptionsMonitor{Steeltoe.Discovery.Kubernetes.Discovery.KubernetesDiscoveryOptions},IKubernetes)
  parent: Steeltoe.Discovery.Kubernetes.KubernetesDiscoveryClientFactory
  langs:
  - csharp
  - vb
  name: CreateClient(IOptionsMonitor<KubernetesDiscoveryOptions>, IKubernetes)
  nameWithType: KubernetesDiscoveryClientFactory.CreateClient(IOptionsMonitor<KubernetesDiscoveryOptions>, IKubernetes)
  fullName: Steeltoe.Discovery.Kubernetes.KubernetesDiscoveryClientFactory.CreateClient(IOptionsMonitor<Steeltoe.Discovery.Kubernetes.Discovery.KubernetesDiscoveryOptions>, IKubernetes)
  type: Method
  source:
    remote:
      path: src/Discovery/src/Kubernetes/KubernetesDiscoveryClientFactory.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: CreateClient
    path: ../Steeltoe/src/Discovery/src/Kubernetes/KubernetesDiscoveryClientFactory.cs
    startLine: 13
  assemblies:
  - Steeltoe.Discovery.Kubernetes
  namespace: Steeltoe.Discovery.Kubernetes
  syntax:
    content: public static IDiscoveryClient CreateClient(IOptionsMonitor<KubernetesDiscoveryOptions> options, IKubernetes kubernetes)
    parameters:
    - id: options
      type: IOptionsMonitor{Steeltoe.Discovery.Kubernetes.Discovery.KubernetesDiscoveryOptions}
    - id: kubernetes
      type: IKubernetes
    return:
      type: IDiscoveryClient
    content.vb: Public Shared Function CreateClient(options As IOptionsMonitor(Of KubernetesDiscoveryOptions), kubernetes As IKubernetes) As IDiscoveryClient
  overload: Steeltoe.Discovery.Kubernetes.KubernetesDiscoveryClientFactory.CreateClient*
  nameWithType.vb: KubernetesDiscoveryClientFactory.CreateClient(IOptionsMonitor(Of KubernetesDiscoveryOptions), IKubernetes)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Steeltoe.Discovery.Kubernetes.KubernetesDiscoveryClientFactory.CreateClient(IOptionsMonitor(Of Steeltoe.Discovery.Kubernetes.Discovery.KubernetesDiscoveryOptions), IKubernetes)
  name.vb: CreateClient(IOptionsMonitor(Of KubernetesDiscoveryOptions), IKubernetes)
references:
- uid: Steeltoe.Discovery.Kubernetes
  commentId: N:Steeltoe.Discovery.Kubernetes
  name: Steeltoe.Discovery.Kubernetes
  nameWithType: Steeltoe.Discovery.Kubernetes
  fullName: Steeltoe.Discovery.Kubernetes
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Steeltoe.Discovery.Kubernetes.KubernetesDiscoveryClientFactory.CreateClient*
  commentId: Overload:Steeltoe.Discovery.Kubernetes.KubernetesDiscoveryClientFactory.CreateClient
  name: CreateClient
  nameWithType: KubernetesDiscoveryClientFactory.CreateClient
  fullName: Steeltoe.Discovery.Kubernetes.KubernetesDiscoveryClientFactory.CreateClient
- uid: IOptionsMonitor{Steeltoe.Discovery.Kubernetes.Discovery.KubernetesDiscoveryOptions}
  commentId: '!:IOptionsMonitor{Steeltoe.Discovery.Kubernetes.Discovery.KubernetesDiscoveryOptions}'
  definition: IOptionsMonitor`1
  name: IOptionsMonitor<KubernetesDiscoveryOptions>
  nameWithType: IOptionsMonitor<KubernetesDiscoveryOptions>
  fullName: IOptionsMonitor<Steeltoe.Discovery.Kubernetes.Discovery.KubernetesDiscoveryOptions>
  nameWithType.vb: IOptionsMonitor(Of KubernetesDiscoveryOptions)
  fullName.vb: IOptionsMonitor(Of Steeltoe.Discovery.Kubernetes.Discovery.KubernetesDiscoveryOptions)
  name.vb: IOptionsMonitor(Of KubernetesDiscoveryOptions)
  spec.csharp:
  - uid: IOptionsMonitor`1
    name: IOptionsMonitor
    nameWithType: IOptionsMonitor
    fullName: IOptionsMonitor
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Steeltoe.Discovery.Kubernetes.Discovery.KubernetesDiscoveryOptions
    name: KubernetesDiscoveryOptions
    nameWithType: KubernetesDiscoveryOptions
    fullName: Steeltoe.Discovery.Kubernetes.Discovery.KubernetesDiscoveryOptions
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IOptionsMonitor`1
    name: IOptionsMonitor
    nameWithType: IOptionsMonitor
    fullName: IOptionsMonitor
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Steeltoe.Discovery.Kubernetes.Discovery.KubernetesDiscoveryOptions
    name: KubernetesDiscoveryOptions
    nameWithType: KubernetesDiscoveryOptions
    fullName: Steeltoe.Discovery.Kubernetes.Discovery.KubernetesDiscoveryOptions
  - name: )
    nameWithType: )
    fullName: )
- uid: IKubernetes
  isExternal: true
  name: IKubernetes
  nameWithType: IKubernetes
  fullName: IKubernetes
- uid: IDiscoveryClient
  isExternal: true
  name: IDiscoveryClient
  nameWithType: IDiscoveryClient
  fullName: IDiscoveryClient
- uid: IOptionsMonitor`1
  isExternal: true
  name: IOptionsMonitor<>
  nameWithType: IOptionsMonitor<>
  fullName: IOptionsMonitor<>
  nameWithType.vb: IOptionsMonitor(Of )
  fullName.vb: IOptionsMonitor(Of )
  name.vb: IOptionsMonitor(Of )
  spec.csharp:
  - uid: IOptionsMonitor`1
    name: IOptionsMonitor
    nameWithType: IOptionsMonitor
    fullName: IOptionsMonitor
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IOptionsMonitor`1
    name: IOptionsMonitor
    nameWithType: IOptionsMonitor
    fullName: IOptionsMonitor
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
