### YamlMime:ManagedReference
items:
- uid: Steeltoe.Common.Util.MimeType.SpecificityComparator`1
  commentId: T:Steeltoe.Common.Util.MimeType.SpecificityComparator`1
  id: MimeType.SpecificityComparator`1
  parent: Steeltoe.Common.Util
  children:
  - Steeltoe.Common.Util.MimeType.SpecificityComparator`1.Compare(`0,`0)
  - Steeltoe.Common.Util.MimeType.SpecificityComparator`1.CompareParameters(`0,`0)
  langs:
  - csharp
  - vb
  name: MimeType.SpecificityComparator<T>
  nameWithType: MimeType.SpecificityComparator<T>
  fullName: Steeltoe.Common.Util.MimeType.SpecificityComparator<T>
  type: Class
  source:
    remote:
      path: src/Common/src/Common/Util/MimeType.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: SpecificityComparator
    path: ../Steeltoe/src/Common/src/Common/Util/MimeType.cs
    startLine: 540
  assemblies:
  - Steeltoe.Common
  namespace: Steeltoe.Common.Util
  syntax:
    content: 'public class SpecificityComparator<T> : IComparer<T> where T : MimeType'
    typeParameters:
    - id: T
    content.vb: >-
      Public Class SpecificityComparator(Of T As MimeType)

          Implements IComparer(Of T)
  inheritance:
  - System.Object
  implements:
  - System.Collections.Generic.IComparer{{T}}
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  nameWithType.vb: MimeType.SpecificityComparator(Of T)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
  fullName.vb: Steeltoe.Common.Util.MimeType.SpecificityComparator(Of T)
  name.vb: MimeType.SpecificityComparator(Of T)
- uid: Steeltoe.Common.Util.MimeType.SpecificityComparator`1.Compare(`0,`0)
  commentId: M:Steeltoe.Common.Util.MimeType.SpecificityComparator`1.Compare(`0,`0)
  id: Compare(`0,`0)
  parent: Steeltoe.Common.Util.MimeType.SpecificityComparator`1
  langs:
  - csharp
  - vb
  name: Compare(T, T)
  nameWithType: MimeType.SpecificityComparator<T>.Compare(T, T)
  fullName: Steeltoe.Common.Util.MimeType.SpecificityComparator<T>.Compare(T, T)
  type: Method
  source:
    remote:
      path: src/Common/src/Common/Util/MimeType.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Compare
    path: ../Steeltoe/src/Common/src/Common/Util/MimeType.cs
    startLine: 543
  assemblies:
  - Steeltoe.Common
  namespace: Steeltoe.Common.Util
  syntax:
    content: public int Compare(T mimeType1, T mimeType2)
    parameters:
    - id: mimeType1
      type: '{T}'
    - id: mimeType2
      type: '{T}'
    return:
      type: System.Int32
    content.vb: Public Function Compare(mimeType1 As T, mimeType2 As T) As Integer
  overload: Steeltoe.Common.Util.MimeType.SpecificityComparator`1.Compare*
  implements:
  - System.Collections.Generic.IComparer{{T}}.Compare({T},{T})
  nameWithType.vb: MimeType.SpecificityComparator(Of T).Compare(T, T)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Steeltoe.Common.Util.MimeType.SpecificityComparator(Of T).Compare(T, T)
- uid: Steeltoe.Common.Util.MimeType.SpecificityComparator`1.CompareParameters(`0,`0)
  commentId: M:Steeltoe.Common.Util.MimeType.SpecificityComparator`1.CompareParameters(`0,`0)
  id: CompareParameters(`0,`0)
  parent: Steeltoe.Common.Util.MimeType.SpecificityComparator`1
  langs:
  - csharp
  - vb
  name: CompareParameters(T, T)
  nameWithType: MimeType.SpecificityComparator<T>.CompareParameters(T, T)
  fullName: Steeltoe.Common.Util.MimeType.SpecificityComparator<T>.CompareParameters(T, T)
  type: Method
  source:
    remote:
      path: src/Common/src/Common/Util/MimeType.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: CompareParameters
    path: ../Steeltoe/src/Common/src/Common/Util/MimeType.cs
    startLine: 586
  assemblies:
  - Steeltoe.Common
  namespace: Steeltoe.Common.Util
  syntax:
    content: protected int CompareParameters(T mimeType1, T mimeType2)
    parameters:
    - id: mimeType1
      type: '{T}'
    - id: mimeType2
      type: '{T}'
    return:
      type: System.Int32
    content.vb: Protected Function CompareParameters(mimeType1 As T, mimeType2 As T) As Integer
  overload: Steeltoe.Common.Util.MimeType.SpecificityComparator`1.CompareParameters*
  nameWithType.vb: MimeType.SpecificityComparator(Of T).CompareParameters(T, T)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: Steeltoe.Common.Util.MimeType.SpecificityComparator(Of T).CompareParameters(T, T)
references:
- uid: Steeltoe.Common.Util
  commentId: N:Steeltoe.Common.Util
  name: Steeltoe.Common.Util
  nameWithType: Steeltoe.Common.Util
  fullName: Steeltoe.Common.Util
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Collections.Generic.IComparer{{T}}
  commentId: T:System.Collections.Generic.IComparer{`0}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IComparer`1
  name: IComparer<T>
  nameWithType: IComparer<T>
  fullName: System.Collections.Generic.IComparer<T>
  nameWithType.vb: IComparer(Of T)
  fullName.vb: System.Collections.Generic.IComparer(Of T)
  name.vb: IComparer(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    nameWithType: IComparer
    fullName: System.Collections.Generic.IComparer
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    nameWithType: IComparer
    fullName: System.Collections.Generic.IComparer
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Collections.Generic.IComparer`1
  commentId: T:System.Collections.Generic.IComparer`1
  isExternal: true
  name: IComparer<T>
  nameWithType: IComparer<T>
  fullName: System.Collections.Generic.IComparer<T>
  nameWithType.vb: IComparer(Of T)
  fullName.vb: System.Collections.Generic.IComparer(Of T)
  name.vb: IComparer(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    nameWithType: IComparer
    fullName: System.Collections.Generic.IComparer
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    nameWithType: IComparer
    fullName: System.Collections.Generic.IComparer
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Steeltoe.Common.Util.MimeType.SpecificityComparator`1.Compare*
  commentId: Overload:Steeltoe.Common.Util.MimeType.SpecificityComparator`1.Compare
  name: Compare
  nameWithType: MimeType.SpecificityComparator<T>.Compare
  fullName: Steeltoe.Common.Util.MimeType.SpecificityComparator<T>.Compare
  nameWithType.vb: MimeType.SpecificityComparator(Of T).Compare
  fullName.vb: Steeltoe.Common.Util.MimeType.SpecificityComparator(Of T).Compare
- uid: System.Collections.Generic.IComparer{{T}}.Compare({T},{T})
  commentId: M:System.Collections.Generic.IComparer{`0}.Compare(`0,`0)
  parent: System.Collections.Generic.IComparer{{T}}
  definition: System.Collections.Generic.IComparer`1.Compare(`0,`0)
  name: Compare(T, T)
  nameWithType: IComparer<T>.Compare(T, T)
  fullName: System.Collections.Generic.IComparer<T>.Compare(T, T)
  nameWithType.vb: IComparer(Of T).Compare(T, T)
  fullName.vb: System.Collections.Generic.IComparer(Of T).Compare(T, T)
  spec.csharp:
  - uid: System.Collections.Generic.IComparer`1.Compare(`0,`0)
    name: Compare
    nameWithType: IComparer<T>.Compare
    fullName: System.Collections.Generic.IComparer<T>.Compare
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IComparer`1.Compare(`0,`0)
    name: Compare
    nameWithType: IComparer(Of T).Compare
    fullName: System.Collections.Generic.IComparer(Of T).Compare
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Collections.Generic.IComparer`1.Compare(`0,`0)
  commentId: M:System.Collections.Generic.IComparer`1.Compare(`0,`0)
  isExternal: true
  name: Compare(T, T)
  nameWithType: IComparer<T>.Compare(T, T)
  fullName: System.Collections.Generic.IComparer<T>.Compare(T, T)
  nameWithType.vb: IComparer(Of T).Compare(T, T)
  fullName.vb: System.Collections.Generic.IComparer(Of T).Compare(T, T)
  spec.csharp:
  - uid: System.Collections.Generic.IComparer`1.Compare(`0,`0)
    name: Compare
    nameWithType: IComparer<T>.Compare
    fullName: System.Collections.Generic.IComparer<T>.Compare
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IComparer`1.Compare(`0,`0)
    name: Compare
    nameWithType: IComparer(Of T).Compare
    fullName: System.Collections.Generic.IComparer(Of T).Compare
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: Steeltoe.Common.Util.MimeType.SpecificityComparator`1.CompareParameters*
  commentId: Overload:Steeltoe.Common.Util.MimeType.SpecificityComparator`1.CompareParameters
  name: CompareParameters
  nameWithType: MimeType.SpecificityComparator<T>.CompareParameters
  fullName: Steeltoe.Common.Util.MimeType.SpecificityComparator<T>.CompareParameters
  nameWithType.vb: MimeType.SpecificityComparator(Of T).CompareParameters
  fullName.vb: Steeltoe.Common.Util.MimeType.SpecificityComparator(Of T).CompareParameters
