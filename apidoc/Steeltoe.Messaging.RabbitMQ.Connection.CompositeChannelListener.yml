### YamlMime:ManagedReference
items:
- uid: Steeltoe.Messaging.RabbitMQ.Connection.CompositeChannelListener
  commentId: T:Steeltoe.Messaging.RabbitMQ.Connection.CompositeChannelListener
  id: CompositeChannelListener
  parent: Steeltoe.Messaging.RabbitMQ.Connection
  children:
  - Steeltoe.Messaging.RabbitMQ.Connection.CompositeChannelListener.#ctor(Microsoft.Extensions.Logging.ILogger)
  - Steeltoe.Messaging.RabbitMQ.Connection.CompositeChannelListener.AddListener(Steeltoe.Messaging.RabbitMQ.Connection.IChannelListener)
  - Steeltoe.Messaging.RabbitMQ.Connection.CompositeChannelListener.ClearListeners
  - Steeltoe.Messaging.RabbitMQ.Connection.CompositeChannelListener.OnCreate(RabbitMQ.Client.IModel,System.Boolean)
  - Steeltoe.Messaging.RabbitMQ.Connection.CompositeChannelListener.OnShutDown(RabbitMQ.Client.ShutdownEventArgs)
  - Steeltoe.Messaging.RabbitMQ.Connection.CompositeChannelListener.RemoveListener(Steeltoe.Messaging.RabbitMQ.Connection.IChannelListener)
  - Steeltoe.Messaging.RabbitMQ.Connection.CompositeChannelListener.SetListeners(System.Collections.Generic.List{Steeltoe.Messaging.RabbitMQ.Connection.IChannelListener})
  langs:
  - csharp
  - vb
  name: CompositeChannelListener
  nameWithType: CompositeChannelListener
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.CompositeChannelListener
  type: Class
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Connection/CompositeChannelListener.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: CompositeChannelListener
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Connection/CompositeChannelListener.cs
    startLine: 10
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Connection
  syntax:
    content: 'public class CompositeChannelListener : IChannelListener'
    content.vb: >-
      Public Class CompositeChannelListener

          Implements IChannelListener
  inheritance:
  - System.Object
  implements:
  - Steeltoe.Messaging.RabbitMQ.Connection.IChannelListener
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Steeltoe.Messaging.RabbitMQ.Connection.CompositeChannelListener.#ctor(Microsoft.Extensions.Logging.ILogger)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Connection.CompositeChannelListener.#ctor(Microsoft.Extensions.Logging.ILogger)
  id: '#ctor(Microsoft.Extensions.Logging.ILogger)'
  parent: Steeltoe.Messaging.RabbitMQ.Connection.CompositeChannelListener
  langs:
  - csharp
  - vb
  name: CompositeChannelListener(ILogger)
  nameWithType: CompositeChannelListener.CompositeChannelListener(ILogger)
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.CompositeChannelListener.CompositeChannelListener(Microsoft.Extensions.Logging.ILogger)
  type: Constructor
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Connection/CompositeChannelListener.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: .ctor
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Connection/CompositeChannelListener.cs
    startLine: 17
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Connection
  syntax:
    content: public CompositeChannelListener(ILogger logger = null)
    parameters:
    - id: logger
      type: Microsoft.Extensions.Logging.ILogger
    content.vb: Public Sub New(logger As ILogger = Nothing)
  overload: Steeltoe.Messaging.RabbitMQ.Connection.CompositeChannelListener.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Steeltoe.Messaging.RabbitMQ.Connection.CompositeChannelListener.OnCreate(RabbitMQ.Client.IModel,System.Boolean)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Connection.CompositeChannelListener.OnCreate(RabbitMQ.Client.IModel,System.Boolean)
  id: OnCreate(RabbitMQ.Client.IModel,System.Boolean)
  parent: Steeltoe.Messaging.RabbitMQ.Connection.CompositeChannelListener
  langs:
  - csharp
  - vb
  name: OnCreate(IModel, Boolean)
  nameWithType: CompositeChannelListener.OnCreate(IModel, Boolean)
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.CompositeChannelListener.OnCreate(RabbitMQ.Client.IModel, System.Boolean)
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Connection/CompositeChannelListener.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: OnCreate
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Connection/CompositeChannelListener.cs
    startLine: 22
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Connection
  syntax:
    content: public void OnCreate(IModel channel, bool transactional)
    parameters:
    - id: channel
      type: RabbitMQ.Client.IModel
    - id: transactional
      type: System.Boolean
    content.vb: Public Sub OnCreate(channel As IModel, transactional As Boolean)
  overload: Steeltoe.Messaging.RabbitMQ.Connection.CompositeChannelListener.OnCreate*
  implements:
  - Steeltoe.Messaging.RabbitMQ.Connection.IChannelListener.OnCreate(RabbitMQ.Client.IModel,System.Boolean)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Steeltoe.Messaging.RabbitMQ.Connection.CompositeChannelListener.OnShutDown(RabbitMQ.Client.ShutdownEventArgs)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Connection.CompositeChannelListener.OnShutDown(RabbitMQ.Client.ShutdownEventArgs)
  id: OnShutDown(RabbitMQ.Client.ShutdownEventArgs)
  parent: Steeltoe.Messaging.RabbitMQ.Connection.CompositeChannelListener
  langs:
  - csharp
  - vb
  name: OnShutDown(ShutdownEventArgs)
  nameWithType: CompositeChannelListener.OnShutDown(ShutdownEventArgs)
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.CompositeChannelListener.OnShutDown(RabbitMQ.Client.ShutdownEventArgs)
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Connection/CompositeChannelListener.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: OnShutDown
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Connection/CompositeChannelListener.cs
    startLine: 32
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Connection
  syntax:
    content: public void OnShutDown(ShutdownEventArgs event)
    parameters:
    - id: event
      type: RabbitMQ.Client.ShutdownEventArgs
    content.vb: Public Sub OnShutDown(event As ShutdownEventArgs)
  overload: Steeltoe.Messaging.RabbitMQ.Connection.CompositeChannelListener.OnShutDown*
  implements:
  - Steeltoe.Messaging.RabbitMQ.Connection.IChannelListener.OnShutDown(RabbitMQ.Client.ShutdownEventArgs)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Steeltoe.Messaging.RabbitMQ.Connection.CompositeChannelListener.SetListeners(System.Collections.Generic.List{Steeltoe.Messaging.RabbitMQ.Connection.IChannelListener})
  commentId: M:Steeltoe.Messaging.RabbitMQ.Connection.CompositeChannelListener.SetListeners(System.Collections.Generic.List{Steeltoe.Messaging.RabbitMQ.Connection.IChannelListener})
  id: SetListeners(System.Collections.Generic.List{Steeltoe.Messaging.RabbitMQ.Connection.IChannelListener})
  parent: Steeltoe.Messaging.RabbitMQ.Connection.CompositeChannelListener
  langs:
  - csharp
  - vb
  name: SetListeners(List<IChannelListener>)
  nameWithType: CompositeChannelListener.SetListeners(List<IChannelListener>)
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.CompositeChannelListener.SetListeners(System.Collections.Generic.List<Steeltoe.Messaging.RabbitMQ.Connection.IChannelListener>)
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Connection/CompositeChannelListener.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: SetListeners
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Connection/CompositeChannelListener.cs
    startLine: 42
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Connection
  syntax:
    content: public void SetListeners(List<IChannelListener> channelListeners)
    parameters:
    - id: channelListeners
      type: System.Collections.Generic.List{Steeltoe.Messaging.RabbitMQ.Connection.IChannelListener}
    content.vb: Public Sub SetListeners(channelListeners As List(Of IChannelListener))
  overload: Steeltoe.Messaging.RabbitMQ.Connection.CompositeChannelListener.SetListeners*
  nameWithType.vb: CompositeChannelListener.SetListeners(List(Of IChannelListener))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Steeltoe.Messaging.RabbitMQ.Connection.CompositeChannelListener.SetListeners(System.Collections.Generic.List(Of Steeltoe.Messaging.RabbitMQ.Connection.IChannelListener))
  name.vb: SetListeners(List(Of IChannelListener))
- uid: Steeltoe.Messaging.RabbitMQ.Connection.CompositeChannelListener.AddListener(Steeltoe.Messaging.RabbitMQ.Connection.IChannelListener)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Connection.CompositeChannelListener.AddListener(Steeltoe.Messaging.RabbitMQ.Connection.IChannelListener)
  id: AddListener(Steeltoe.Messaging.RabbitMQ.Connection.IChannelListener)
  parent: Steeltoe.Messaging.RabbitMQ.Connection.CompositeChannelListener
  langs:
  - csharp
  - vb
  name: AddListener(IChannelListener)
  nameWithType: CompositeChannelListener.AddListener(IChannelListener)
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.CompositeChannelListener.AddListener(Steeltoe.Messaging.RabbitMQ.Connection.IChannelListener)
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Connection/CompositeChannelListener.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: AddListener
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Connection/CompositeChannelListener.cs
    startLine: 47
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Connection
  syntax:
    content: public void AddListener(IChannelListener channelListener)
    parameters:
    - id: channelListener
      type: Steeltoe.Messaging.RabbitMQ.Connection.IChannelListener
    content.vb: Public Sub AddListener(channelListener As IChannelListener)
  overload: Steeltoe.Messaging.RabbitMQ.Connection.CompositeChannelListener.AddListener*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Steeltoe.Messaging.RabbitMQ.Connection.CompositeChannelListener.RemoveListener(Steeltoe.Messaging.RabbitMQ.Connection.IChannelListener)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Connection.CompositeChannelListener.RemoveListener(Steeltoe.Messaging.RabbitMQ.Connection.IChannelListener)
  id: RemoveListener(Steeltoe.Messaging.RabbitMQ.Connection.IChannelListener)
  parent: Steeltoe.Messaging.RabbitMQ.Connection.CompositeChannelListener
  langs:
  - csharp
  - vb
  name: RemoveListener(IChannelListener)
  nameWithType: CompositeChannelListener.RemoveListener(IChannelListener)
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.CompositeChannelListener.RemoveListener(Steeltoe.Messaging.RabbitMQ.Connection.IChannelListener)
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Connection/CompositeChannelListener.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: RemoveListener
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Connection/CompositeChannelListener.cs
    startLine: 59
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Connection
  syntax:
    content: public bool RemoveListener(IChannelListener channelListener)
    parameters:
    - id: channelListener
      type: Steeltoe.Messaging.RabbitMQ.Connection.IChannelListener
    return:
      type: System.Boolean
    content.vb: Public Function RemoveListener(channelListener As IChannelListener) As Boolean
  overload: Steeltoe.Messaging.RabbitMQ.Connection.CompositeChannelListener.RemoveListener*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Steeltoe.Messaging.RabbitMQ.Connection.CompositeChannelListener.ClearListeners
  commentId: M:Steeltoe.Messaging.RabbitMQ.Connection.CompositeChannelListener.ClearListeners
  id: ClearListeners
  parent: Steeltoe.Messaging.RabbitMQ.Connection.CompositeChannelListener
  langs:
  - csharp
  - vb
  name: ClearListeners()
  nameWithType: CompositeChannelListener.ClearListeners()
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.CompositeChannelListener.ClearListeners()
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Connection/CompositeChannelListener.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: ClearListeners
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Connection/CompositeChannelListener.cs
    startLine: 75
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Connection
  syntax:
    content: public void ClearListeners()
    content.vb: Public Sub ClearListeners
  overload: Steeltoe.Messaging.RabbitMQ.Connection.CompositeChannelListener.ClearListeners*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Steeltoe.Messaging.RabbitMQ.Connection
  commentId: N:Steeltoe.Messaging.RabbitMQ.Connection
  name: Steeltoe.Messaging.RabbitMQ.Connection
  nameWithType: Steeltoe.Messaging.RabbitMQ.Connection
  fullName: Steeltoe.Messaging.RabbitMQ.Connection
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Steeltoe.Messaging.RabbitMQ.Connection.IChannelListener
  commentId: T:Steeltoe.Messaging.RabbitMQ.Connection.IChannelListener
  parent: Steeltoe.Messaging.RabbitMQ.Connection
  name: IChannelListener
  nameWithType: IChannelListener
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.IChannelListener
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Steeltoe.Messaging.RabbitMQ.Connection.CompositeChannelListener.#ctor*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Connection.CompositeChannelListener.#ctor
  name: CompositeChannelListener
  nameWithType: CompositeChannelListener.CompositeChannelListener
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.CompositeChannelListener.CompositeChannelListener
- uid: Microsoft.Extensions.Logging.ILogger
  commentId: T:Microsoft.Extensions.Logging.ILogger
  parent: Microsoft.Extensions.Logging
  isExternal: true
  name: ILogger
  nameWithType: ILogger
  fullName: Microsoft.Extensions.Logging.ILogger
- uid: Microsoft.Extensions.Logging
  commentId: N:Microsoft.Extensions.Logging
  isExternal: true
  name: Microsoft.Extensions.Logging
  nameWithType: Microsoft.Extensions.Logging
  fullName: Microsoft.Extensions.Logging
- uid: Steeltoe.Messaging.RabbitMQ.Connection.CompositeChannelListener.OnCreate*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Connection.CompositeChannelListener.OnCreate
  name: OnCreate
  nameWithType: CompositeChannelListener.OnCreate
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.CompositeChannelListener.OnCreate
- uid: Steeltoe.Messaging.RabbitMQ.Connection.IChannelListener.OnCreate(RabbitMQ.Client.IModel,System.Boolean)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Connection.IChannelListener.OnCreate(RabbitMQ.Client.IModel,System.Boolean)
  parent: Steeltoe.Messaging.RabbitMQ.Connection.IChannelListener
  isExternal: true
  name: OnCreate(IModel, Boolean)
  nameWithType: IChannelListener.OnCreate(IModel, Boolean)
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.IChannelListener.OnCreate(RabbitMQ.Client.IModel, System.Boolean)
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Connection.IChannelListener.OnCreate(RabbitMQ.Client.IModel,System.Boolean)
    name: OnCreate
    nameWithType: IChannelListener.OnCreate
    fullName: Steeltoe.Messaging.RabbitMQ.Connection.IChannelListener.OnCreate
  - name: (
    nameWithType: (
    fullName: (
  - uid: RabbitMQ.Client.IModel
    name: IModel
    nameWithType: IModel
    fullName: RabbitMQ.Client.IModel
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Connection.IChannelListener.OnCreate(RabbitMQ.Client.IModel,System.Boolean)
    name: OnCreate
    nameWithType: IChannelListener.OnCreate
    fullName: Steeltoe.Messaging.RabbitMQ.Connection.IChannelListener.OnCreate
  - name: (
    nameWithType: (
    fullName: (
  - uid: RabbitMQ.Client.IModel
    name: IModel
    nameWithType: IModel
    fullName: RabbitMQ.Client.IModel
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: RabbitMQ.Client.IModel
  commentId: T:RabbitMQ.Client.IModel
  parent: RabbitMQ.Client
  isExternal: true
  name: IModel
  nameWithType: IModel
  fullName: RabbitMQ.Client.IModel
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: RabbitMQ.Client
  commentId: N:RabbitMQ.Client
  isExternal: true
  name: RabbitMQ.Client
  nameWithType: RabbitMQ.Client
  fullName: RabbitMQ.Client
- uid: Steeltoe.Messaging.RabbitMQ.Connection.CompositeChannelListener.OnShutDown*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Connection.CompositeChannelListener.OnShutDown
  name: OnShutDown
  nameWithType: CompositeChannelListener.OnShutDown
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.CompositeChannelListener.OnShutDown
- uid: Steeltoe.Messaging.RabbitMQ.Connection.IChannelListener.OnShutDown(RabbitMQ.Client.ShutdownEventArgs)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Connection.IChannelListener.OnShutDown(RabbitMQ.Client.ShutdownEventArgs)
  parent: Steeltoe.Messaging.RabbitMQ.Connection.IChannelListener
  isExternal: true
  name: OnShutDown(ShutdownEventArgs)
  nameWithType: IChannelListener.OnShutDown(ShutdownEventArgs)
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.IChannelListener.OnShutDown(RabbitMQ.Client.ShutdownEventArgs)
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Connection.IChannelListener.OnShutDown(RabbitMQ.Client.ShutdownEventArgs)
    name: OnShutDown
    nameWithType: IChannelListener.OnShutDown
    fullName: Steeltoe.Messaging.RabbitMQ.Connection.IChannelListener.OnShutDown
  - name: (
    nameWithType: (
    fullName: (
  - uid: RabbitMQ.Client.ShutdownEventArgs
    name: ShutdownEventArgs
    nameWithType: ShutdownEventArgs
    fullName: RabbitMQ.Client.ShutdownEventArgs
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Connection.IChannelListener.OnShutDown(RabbitMQ.Client.ShutdownEventArgs)
    name: OnShutDown
    nameWithType: IChannelListener.OnShutDown
    fullName: Steeltoe.Messaging.RabbitMQ.Connection.IChannelListener.OnShutDown
  - name: (
    nameWithType: (
    fullName: (
  - uid: RabbitMQ.Client.ShutdownEventArgs
    name: ShutdownEventArgs
    nameWithType: ShutdownEventArgs
    fullName: RabbitMQ.Client.ShutdownEventArgs
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: RabbitMQ.Client.ShutdownEventArgs
  commentId: T:RabbitMQ.Client.ShutdownEventArgs
  parent: RabbitMQ.Client
  isExternal: true
  name: ShutdownEventArgs
  nameWithType: ShutdownEventArgs
  fullName: RabbitMQ.Client.ShutdownEventArgs
- uid: Steeltoe.Messaging.RabbitMQ.Connection.CompositeChannelListener.SetListeners*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Connection.CompositeChannelListener.SetListeners
  name: SetListeners
  nameWithType: CompositeChannelListener.SetListeners
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.CompositeChannelListener.SetListeners
- uid: System.Collections.Generic.List{Steeltoe.Messaging.RabbitMQ.Connection.IChannelListener}
  commentId: T:System.Collections.Generic.List{Steeltoe.Messaging.RabbitMQ.Connection.IChannelListener}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<IChannelListener>
  nameWithType: List<IChannelListener>
  fullName: System.Collections.Generic.List<Steeltoe.Messaging.RabbitMQ.Connection.IChannelListener>
  nameWithType.vb: List(Of IChannelListener)
  fullName.vb: System.Collections.Generic.List(Of Steeltoe.Messaging.RabbitMQ.Connection.IChannelListener)
  name.vb: List(Of IChannelListener)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Steeltoe.Messaging.RabbitMQ.Connection.IChannelListener
    name: IChannelListener
    nameWithType: IChannelListener
    fullName: Steeltoe.Messaging.RabbitMQ.Connection.IChannelListener
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Steeltoe.Messaging.RabbitMQ.Connection.IChannelListener
    name: IChannelListener
    nameWithType: IChannelListener
    fullName: Steeltoe.Messaging.RabbitMQ.Connection.IChannelListener
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Steeltoe.Messaging.RabbitMQ.Connection.CompositeChannelListener.AddListener*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Connection.CompositeChannelListener.AddListener
  name: AddListener
  nameWithType: CompositeChannelListener.AddListener
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.CompositeChannelListener.AddListener
- uid: Steeltoe.Messaging.RabbitMQ.Connection.CompositeChannelListener.RemoveListener*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Connection.CompositeChannelListener.RemoveListener
  name: RemoveListener
  nameWithType: CompositeChannelListener.RemoveListener
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.CompositeChannelListener.RemoveListener
- uid: Steeltoe.Messaging.RabbitMQ.Connection.CompositeChannelListener.ClearListeners*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Connection.CompositeChannelListener.ClearListeners
  name: ClearListeners
  nameWithType: CompositeChannelListener.ClearListeners
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.CompositeChannelListener.ClearListeners
