### YamlMime:ManagedReference
items:
- uid: Steeltoe.CircuitBreaker.Hystrix.HystrixCollapser`3
  commentId: T:Steeltoe.CircuitBreaker.Hystrix.HystrixCollapser`3
  id: HystrixCollapser`3
  parent: Steeltoe.CircuitBreaker.Hystrix
  children:
  - Steeltoe.CircuitBreaker.Hystrix.HystrixCollapser`3.#ctor
  - Steeltoe.CircuitBreaker.Hystrix.HystrixCollapser`3.#ctor(Steeltoe.CircuitBreaker.Hystrix.IHystrixCollapserKey)
  - Steeltoe.CircuitBreaker.Hystrix.HystrixCollapser`3.#ctor(Steeltoe.CircuitBreaker.Hystrix.IHystrixCollapserKey,Steeltoe.CircuitBreaker.RequestCollapserScope)
  - Steeltoe.CircuitBreaker.Hystrix.HystrixCollapser`3.#ctor(Steeltoe.CircuitBreaker.Hystrix.IHystrixCollapserKey,Steeltoe.CircuitBreaker.RequestCollapserScope,Steeltoe.CircuitBreaker.ICollapserTimer,Steeltoe.CircuitBreaker.Hystrix.IHystrixCollapserOptions)
  - Steeltoe.CircuitBreaker.Hystrix.HystrixCollapser`3.#ctor(Steeltoe.CircuitBreaker.Hystrix.IHystrixCollapserKey,Steeltoe.CircuitBreaker.RequestCollapserScope,Steeltoe.CircuitBreaker.ICollapserTimer,Steeltoe.CircuitBreaker.Hystrix.IHystrixCollapserOptions,Steeltoe.CircuitBreaker.Hystrix.HystrixCollapserMetrics)
  - Steeltoe.CircuitBreaker.Hystrix.HystrixCollapser`3.#ctor(Steeltoe.CircuitBreaker.Hystrix.IHystrixCollapserOptions)
  - Steeltoe.CircuitBreaker.Hystrix.HystrixCollapser`3._token
  - Steeltoe.CircuitBreaker.Hystrix.HystrixCollapser`3.AddCacheEntryIfAbsent(System.String,Steeltoe.CircuitBreaker.Hystrix.HystrixCachedTask{`1}@)
  - Steeltoe.CircuitBreaker.Hystrix.HystrixCollapser`3.CacheKey
  - Steeltoe.CircuitBreaker.Hystrix.HystrixCollapser`3.CollapserKey
  - Steeltoe.CircuitBreaker.Hystrix.HystrixCollapser`3.CreateCommand(System.Collections.Generic.ICollection{Steeltoe.CircuitBreaker.ICollapsedRequest{`1,`2}})
  - Steeltoe.CircuitBreaker.Hystrix.HystrixCollapser`3.DecomposeException(System.Exception)
  - Steeltoe.CircuitBreaker.Hystrix.HystrixCollapser`3.Execute
  - Steeltoe.CircuitBreaker.Hystrix.HystrixCollapser`3.ExecuteAsync
  - Steeltoe.CircuitBreaker.Hystrix.HystrixCollapser`3.ExecuteAsync(System.Threading.CancellationToken)
  - Steeltoe.CircuitBreaker.Hystrix.HystrixCollapser`3.MapResponseToRequests(`0,System.Collections.Generic.ICollection{Steeltoe.CircuitBreaker.ICollapsedRequest{`1,`2}})
  - Steeltoe.CircuitBreaker.Hystrix.HystrixCollapser`3.Metrics
  - Steeltoe.CircuitBreaker.Hystrix.HystrixCollapser`3.Observe
  - Steeltoe.CircuitBreaker.Hystrix.HystrixCollapser`3.Observe(System.Threading.CancellationToken)
  - Steeltoe.CircuitBreaker.Hystrix.HystrixCollapser`3.RequestArgument
  - Steeltoe.CircuitBreaker.Hystrix.HystrixCollapser`3.Scope
  - Steeltoe.CircuitBreaker.Hystrix.HystrixCollapser`3.ShardRequests(System.Collections.Generic.ICollection{Steeltoe.CircuitBreaker.ICollapsedRequest{`1,`2}})
  - Steeltoe.CircuitBreaker.Hystrix.HystrixCollapser`3.ToObservable
  - Steeltoe.CircuitBreaker.Hystrix.HystrixCollapser`3.ToTask
  langs:
  - csharp
  - vb
  name: HystrixCollapser<BatchReturnType, RequestResponseType, RequestArgumentType>
  nameWithType: HystrixCollapser<BatchReturnType, RequestResponseType, RequestArgumentType>
  fullName: Steeltoe.CircuitBreaker.Hystrix.HystrixCollapser<BatchReturnType, RequestResponseType, RequestArgumentType>
  type: Class
  source:
    remote:
      path: src/CircuitBreaker/src/HystrixBase/HystrixCollapser.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: HystrixCollapser
    path: ../Steeltoe/src/CircuitBreaker/src/HystrixBase/HystrixCollapser.cs
    startLine: 17
  assemblies:
  - Steeltoe.CircuitBreaker.HystrixBase
  namespace: Steeltoe.CircuitBreaker.Hystrix
  syntax:
    content: 'public abstract class HystrixCollapser<BatchReturnType, RequestResponseType, RequestArgumentType> : HystrixCollapserBase, IHystrixExecutable<RequestResponseType>, IHystrixObservable<RequestResponseType>, IHystrixInvokable'
    typeParameters:
    - id: BatchReturnType
    - id: RequestResponseType
    - id: RequestArgumentType
    content.vb: >-
      Public MustInherit Class HystrixCollapser(Of BatchReturnType, RequestResponseType, RequestArgumentType)

          Inherits HystrixCollapserBase

          Implements IHystrixExecutable(Of RequestResponseType), IHystrixObservable(Of RequestResponseType), IHystrixInvokable
  inheritance:
  - System.Object
  - Steeltoe.CircuitBreaker.Hystrix.HystrixCollapserBase
  implements:
  - Steeltoe.CircuitBreaker.Hystrix.IHystrixExecutable{{RequestResponseType}}
  - Steeltoe.CircuitBreaker.Hystrix.IHystrixObservable{{RequestResponseType}}
  - Steeltoe.CircuitBreaker.Hystrix.IHystrixInvokable
  inheritedMembers:
  - Steeltoe.CircuitBreaker.Hystrix.HystrixCollapserBase._defaultNameCache
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  nameWithType.vb: HystrixCollapser(Of BatchReturnType, RequestResponseType, RequestArgumentType)
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
  fullName.vb: Steeltoe.CircuitBreaker.Hystrix.HystrixCollapser(Of BatchReturnType, RequestResponseType, RequestArgumentType)
  name.vb: HystrixCollapser(Of BatchReturnType, RequestResponseType, RequestArgumentType)
- uid: Steeltoe.CircuitBreaker.Hystrix.HystrixCollapser`3._token
  commentId: F:Steeltoe.CircuitBreaker.Hystrix.HystrixCollapser`3._token
  id: _token
  parent: Steeltoe.CircuitBreaker.Hystrix.HystrixCollapser`3
  langs:
  - csharp
  - vb
  name: _token
  nameWithType: HystrixCollapser<BatchReturnType, RequestResponseType, RequestArgumentType>._token
  fullName: Steeltoe.CircuitBreaker.Hystrix.HystrixCollapser<BatchReturnType, RequestResponseType, RequestArgumentType>._token
  type: Field
  source:
    remote:
      path: src/CircuitBreaker/src/HystrixBase/HystrixCollapser.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: _token
    path: ../Steeltoe/src/CircuitBreaker/src/HystrixBase/HystrixCollapser.cs
    startLine: 19
  assemblies:
  - Steeltoe.CircuitBreaker.HystrixBase
  namespace: Steeltoe.CircuitBreaker.Hystrix
  syntax:
    content: protected CancellationToken _token
    return:
      type: System.Threading.CancellationToken
    content.vb: Protected _token As CancellationToken
  nameWithType.vb: HystrixCollapser(Of BatchReturnType, RequestResponseType, RequestArgumentType)._token
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: Steeltoe.CircuitBreaker.Hystrix.HystrixCollapser(Of BatchReturnType, RequestResponseType, RequestArgumentType)._token
- uid: Steeltoe.CircuitBreaker.Hystrix.HystrixCollapser`3.#ctor
  commentId: M:Steeltoe.CircuitBreaker.Hystrix.HystrixCollapser`3.#ctor
  id: '#ctor'
  parent: Steeltoe.CircuitBreaker.Hystrix.HystrixCollapser`3
  langs:
  - csharp
  - vb
  name: HystrixCollapser()
  nameWithType: HystrixCollapser<BatchReturnType, RequestResponseType, RequestArgumentType>.HystrixCollapser()
  fullName: Steeltoe.CircuitBreaker.Hystrix.HystrixCollapser<BatchReturnType, RequestResponseType, RequestArgumentType>.HystrixCollapser()
  type: Constructor
  source:
    remote:
      path: src/CircuitBreaker/src/HystrixBase/HystrixCollapser.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: .ctor
    path: ../Steeltoe/src/CircuitBreaker/src/HystrixBase/HystrixCollapser.cs
    startLine: 25
  assemblies:
  - Steeltoe.CircuitBreaker.HystrixBase
  namespace: Steeltoe.CircuitBreaker.Hystrix
  syntax:
    content: protected HystrixCollapser()
    content.vb: Protected Sub New
  overload: Steeltoe.CircuitBreaker.Hystrix.HystrixCollapser`3.#ctor*
  nameWithType.vb: HystrixCollapser(Of BatchReturnType, RequestResponseType, RequestArgumentType).HystrixCollapser()
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: Steeltoe.CircuitBreaker.Hystrix.HystrixCollapser(Of BatchReturnType, RequestResponseType, RequestArgumentType).HystrixCollapser()
- uid: Steeltoe.CircuitBreaker.Hystrix.HystrixCollapser`3.#ctor(Steeltoe.CircuitBreaker.Hystrix.IHystrixCollapserKey)
  commentId: M:Steeltoe.CircuitBreaker.Hystrix.HystrixCollapser`3.#ctor(Steeltoe.CircuitBreaker.Hystrix.IHystrixCollapserKey)
  id: '#ctor(Steeltoe.CircuitBreaker.Hystrix.IHystrixCollapserKey)'
  parent: Steeltoe.CircuitBreaker.Hystrix.HystrixCollapser`3
  langs:
  - csharp
  - vb
  name: HystrixCollapser(IHystrixCollapserKey)
  nameWithType: HystrixCollapser<BatchReturnType, RequestResponseType, RequestArgumentType>.HystrixCollapser(IHystrixCollapserKey)
  fullName: Steeltoe.CircuitBreaker.Hystrix.HystrixCollapser<BatchReturnType, RequestResponseType, RequestArgumentType>.HystrixCollapser(Steeltoe.CircuitBreaker.Hystrix.IHystrixCollapserKey)
  type: Constructor
  source:
    remote:
      path: src/CircuitBreaker/src/HystrixBase/HystrixCollapser.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: .ctor
    path: ../Steeltoe/src/CircuitBreaker/src/HystrixBase/HystrixCollapser.cs
    startLine: 30
  assemblies:
  - Steeltoe.CircuitBreaker.HystrixBase
  namespace: Steeltoe.CircuitBreaker.Hystrix
  syntax:
    content: protected HystrixCollapser(IHystrixCollapserKey collapserKey)
    parameters:
    - id: collapserKey
      type: Steeltoe.CircuitBreaker.Hystrix.IHystrixCollapserKey
    content.vb: Protected Sub New(collapserKey As IHystrixCollapserKey)
  overload: Steeltoe.CircuitBreaker.Hystrix.HystrixCollapser`3.#ctor*
  nameWithType.vb: HystrixCollapser(Of BatchReturnType, RequestResponseType, RequestArgumentType).HystrixCollapser(IHystrixCollapserKey)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: Steeltoe.CircuitBreaker.Hystrix.HystrixCollapser(Of BatchReturnType, RequestResponseType, RequestArgumentType).HystrixCollapser(Steeltoe.CircuitBreaker.Hystrix.IHystrixCollapserKey)
- uid: Steeltoe.CircuitBreaker.Hystrix.HystrixCollapser`3.#ctor(Steeltoe.CircuitBreaker.Hystrix.IHystrixCollapserKey,Steeltoe.CircuitBreaker.RequestCollapserScope)
  commentId: M:Steeltoe.CircuitBreaker.Hystrix.HystrixCollapser`3.#ctor(Steeltoe.CircuitBreaker.Hystrix.IHystrixCollapserKey,Steeltoe.CircuitBreaker.RequestCollapserScope)
  id: '#ctor(Steeltoe.CircuitBreaker.Hystrix.IHystrixCollapserKey,Steeltoe.CircuitBreaker.RequestCollapserScope)'
  parent: Steeltoe.CircuitBreaker.Hystrix.HystrixCollapser`3
  langs:
  - csharp
  - vb
  name: HystrixCollapser(IHystrixCollapserKey, RequestCollapserScope)
  nameWithType: HystrixCollapser<BatchReturnType, RequestResponseType, RequestArgumentType>.HystrixCollapser(IHystrixCollapserKey, RequestCollapserScope)
  fullName: Steeltoe.CircuitBreaker.Hystrix.HystrixCollapser<BatchReturnType, RequestResponseType, RequestArgumentType>.HystrixCollapser(Steeltoe.CircuitBreaker.Hystrix.IHystrixCollapserKey, Steeltoe.CircuitBreaker.RequestCollapserScope)
  type: Constructor
  source:
    remote:
      path: src/CircuitBreaker/src/HystrixBase/HystrixCollapser.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: .ctor
    path: ../Steeltoe/src/CircuitBreaker/src/HystrixBase/HystrixCollapser.cs
    startLine: 35
  assemblies:
  - Steeltoe.CircuitBreaker.HystrixBase
  namespace: Steeltoe.CircuitBreaker.Hystrix
  syntax:
    content: protected HystrixCollapser(IHystrixCollapserKey collapserKey, RequestCollapserScope scope)
    parameters:
    - id: collapserKey
      type: Steeltoe.CircuitBreaker.Hystrix.IHystrixCollapserKey
    - id: scope
      type: Steeltoe.CircuitBreaker.RequestCollapserScope
    content.vb: Protected Sub New(collapserKey As IHystrixCollapserKey, scope As RequestCollapserScope)
  overload: Steeltoe.CircuitBreaker.Hystrix.HystrixCollapser`3.#ctor*
  nameWithType.vb: HystrixCollapser(Of BatchReturnType, RequestResponseType, RequestArgumentType).HystrixCollapser(IHystrixCollapserKey, RequestCollapserScope)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: Steeltoe.CircuitBreaker.Hystrix.HystrixCollapser(Of BatchReturnType, RequestResponseType, RequestArgumentType).HystrixCollapser(Steeltoe.CircuitBreaker.Hystrix.IHystrixCollapserKey, Steeltoe.CircuitBreaker.RequestCollapserScope)
- uid: Steeltoe.CircuitBreaker.Hystrix.HystrixCollapser`3.#ctor(Steeltoe.CircuitBreaker.Hystrix.IHystrixCollapserOptions)
  commentId: M:Steeltoe.CircuitBreaker.Hystrix.HystrixCollapser`3.#ctor(Steeltoe.CircuitBreaker.Hystrix.IHystrixCollapserOptions)
  id: '#ctor(Steeltoe.CircuitBreaker.Hystrix.IHystrixCollapserOptions)'
  parent: Steeltoe.CircuitBreaker.Hystrix.HystrixCollapser`3
  langs:
  - csharp
  - vb
  name: HystrixCollapser(IHystrixCollapserOptions)
  nameWithType: HystrixCollapser<BatchReturnType, RequestResponseType, RequestArgumentType>.HystrixCollapser(IHystrixCollapserOptions)
  fullName: Steeltoe.CircuitBreaker.Hystrix.HystrixCollapser<BatchReturnType, RequestResponseType, RequestArgumentType>.HystrixCollapser(Steeltoe.CircuitBreaker.Hystrix.IHystrixCollapserOptions)
  type: Constructor
  source:
    remote:
      path: src/CircuitBreaker/src/HystrixBase/HystrixCollapser.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: .ctor
    path: ../Steeltoe/src/CircuitBreaker/src/HystrixBase/HystrixCollapser.cs
    startLine: 40
  assemblies:
  - Steeltoe.CircuitBreaker.HystrixBase
  namespace: Steeltoe.CircuitBreaker.Hystrix
  syntax:
    content: protected HystrixCollapser(IHystrixCollapserOptions options)
    parameters:
    - id: options
      type: Steeltoe.CircuitBreaker.Hystrix.IHystrixCollapserOptions
    content.vb: Protected Sub New(options As IHystrixCollapserOptions)
  overload: Steeltoe.CircuitBreaker.Hystrix.HystrixCollapser`3.#ctor*
  nameWithType.vb: HystrixCollapser(Of BatchReturnType, RequestResponseType, RequestArgumentType).HystrixCollapser(IHystrixCollapserOptions)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: Steeltoe.CircuitBreaker.Hystrix.HystrixCollapser(Of BatchReturnType, RequestResponseType, RequestArgumentType).HystrixCollapser(Steeltoe.CircuitBreaker.Hystrix.IHystrixCollapserOptions)
- uid: Steeltoe.CircuitBreaker.Hystrix.HystrixCollapser`3.#ctor(Steeltoe.CircuitBreaker.Hystrix.IHystrixCollapserKey,Steeltoe.CircuitBreaker.RequestCollapserScope,Steeltoe.CircuitBreaker.ICollapserTimer,Steeltoe.CircuitBreaker.Hystrix.IHystrixCollapserOptions)
  commentId: M:Steeltoe.CircuitBreaker.Hystrix.HystrixCollapser`3.#ctor(Steeltoe.CircuitBreaker.Hystrix.IHystrixCollapserKey,Steeltoe.CircuitBreaker.RequestCollapserScope,Steeltoe.CircuitBreaker.ICollapserTimer,Steeltoe.CircuitBreaker.Hystrix.IHystrixCollapserOptions)
  id: '#ctor(Steeltoe.CircuitBreaker.Hystrix.IHystrixCollapserKey,Steeltoe.CircuitBreaker.RequestCollapserScope,Steeltoe.CircuitBreaker.ICollapserTimer,Steeltoe.CircuitBreaker.Hystrix.IHystrixCollapserOptions)'
  parent: Steeltoe.CircuitBreaker.Hystrix.HystrixCollapser`3
  langs:
  - csharp
  - vb
  name: HystrixCollapser(IHystrixCollapserKey, RequestCollapserScope, ICollapserTimer, IHystrixCollapserOptions)
  nameWithType: HystrixCollapser<BatchReturnType, RequestResponseType, RequestArgumentType>.HystrixCollapser(IHystrixCollapserKey, RequestCollapserScope, ICollapserTimer, IHystrixCollapserOptions)
  fullName: Steeltoe.CircuitBreaker.Hystrix.HystrixCollapser<BatchReturnType, RequestResponseType, RequestArgumentType>.HystrixCollapser(Steeltoe.CircuitBreaker.Hystrix.IHystrixCollapserKey, Steeltoe.CircuitBreaker.RequestCollapserScope, Steeltoe.CircuitBreaker.ICollapserTimer, Steeltoe.CircuitBreaker.Hystrix.IHystrixCollapserOptions)
  type: Constructor
  source:
    remote:
      path: src/CircuitBreaker/src/HystrixBase/HystrixCollapser.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: .ctor
    path: ../Steeltoe/src/CircuitBreaker/src/HystrixBase/HystrixCollapser.cs
    startLine: 45
  assemblies:
  - Steeltoe.CircuitBreaker.HystrixBase
  namespace: Steeltoe.CircuitBreaker.Hystrix
  syntax:
    content: protected HystrixCollapser(IHystrixCollapserKey collapserKey, RequestCollapserScope scope, ICollapserTimer timer, IHystrixCollapserOptions options)
    parameters:
    - id: collapserKey
      type: Steeltoe.CircuitBreaker.Hystrix.IHystrixCollapserKey
    - id: scope
      type: Steeltoe.CircuitBreaker.RequestCollapserScope
    - id: timer
      type: Steeltoe.CircuitBreaker.ICollapserTimer
    - id: options
      type: Steeltoe.CircuitBreaker.Hystrix.IHystrixCollapserOptions
    content.vb: Protected Sub New(collapserKey As IHystrixCollapserKey, scope As RequestCollapserScope, timer As ICollapserTimer, options As IHystrixCollapserOptions)
  overload: Steeltoe.CircuitBreaker.Hystrix.HystrixCollapser`3.#ctor*
  nameWithType.vb: HystrixCollapser(Of BatchReturnType, RequestResponseType, RequestArgumentType).HystrixCollapser(IHystrixCollapserKey, RequestCollapserScope, ICollapserTimer, IHystrixCollapserOptions)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: Steeltoe.CircuitBreaker.Hystrix.HystrixCollapser(Of BatchReturnType, RequestResponseType, RequestArgumentType).HystrixCollapser(Steeltoe.CircuitBreaker.Hystrix.IHystrixCollapserKey, Steeltoe.CircuitBreaker.RequestCollapserScope, Steeltoe.CircuitBreaker.ICollapserTimer, Steeltoe.CircuitBreaker.Hystrix.IHystrixCollapserOptions)
- uid: Steeltoe.CircuitBreaker.Hystrix.HystrixCollapser`3.#ctor(Steeltoe.CircuitBreaker.Hystrix.IHystrixCollapserKey,Steeltoe.CircuitBreaker.RequestCollapserScope,Steeltoe.CircuitBreaker.ICollapserTimer,Steeltoe.CircuitBreaker.Hystrix.IHystrixCollapserOptions,Steeltoe.CircuitBreaker.Hystrix.HystrixCollapserMetrics)
  commentId: M:Steeltoe.CircuitBreaker.Hystrix.HystrixCollapser`3.#ctor(Steeltoe.CircuitBreaker.Hystrix.IHystrixCollapserKey,Steeltoe.CircuitBreaker.RequestCollapserScope,Steeltoe.CircuitBreaker.ICollapserTimer,Steeltoe.CircuitBreaker.Hystrix.IHystrixCollapserOptions,Steeltoe.CircuitBreaker.Hystrix.HystrixCollapserMetrics)
  id: '#ctor(Steeltoe.CircuitBreaker.Hystrix.IHystrixCollapserKey,Steeltoe.CircuitBreaker.RequestCollapserScope,Steeltoe.CircuitBreaker.ICollapserTimer,Steeltoe.CircuitBreaker.Hystrix.IHystrixCollapserOptions,Steeltoe.CircuitBreaker.Hystrix.HystrixCollapserMetrics)'
  parent: Steeltoe.CircuitBreaker.Hystrix.HystrixCollapser`3
  langs:
  - csharp
  - vb
  name: HystrixCollapser(IHystrixCollapserKey, RequestCollapserScope, ICollapserTimer, IHystrixCollapserOptions, HystrixCollapserMetrics)
  nameWithType: HystrixCollapser<BatchReturnType, RequestResponseType, RequestArgumentType>.HystrixCollapser(IHystrixCollapserKey, RequestCollapserScope, ICollapserTimer, IHystrixCollapserOptions, HystrixCollapserMetrics)
  fullName: Steeltoe.CircuitBreaker.Hystrix.HystrixCollapser<BatchReturnType, RequestResponseType, RequestArgumentType>.HystrixCollapser(Steeltoe.CircuitBreaker.Hystrix.IHystrixCollapserKey, Steeltoe.CircuitBreaker.RequestCollapserScope, Steeltoe.CircuitBreaker.ICollapserTimer, Steeltoe.CircuitBreaker.Hystrix.IHystrixCollapserOptions, Steeltoe.CircuitBreaker.Hystrix.HystrixCollapserMetrics)
  type: Constructor
  source:
    remote:
      path: src/CircuitBreaker/src/HystrixBase/HystrixCollapser.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: .ctor
    path: ../Steeltoe/src/CircuitBreaker/src/HystrixBase/HystrixCollapser.cs
    startLine: 50
  assemblies:
  - Steeltoe.CircuitBreaker.HystrixBase
  namespace: Steeltoe.CircuitBreaker.Hystrix
  syntax:
    content: protected HystrixCollapser(IHystrixCollapserKey collapserKey, RequestCollapserScope scope, ICollapserTimer timer, IHystrixCollapserOptions optionsDefault, HystrixCollapserMetrics metrics)
    parameters:
    - id: collapserKey
      type: Steeltoe.CircuitBreaker.Hystrix.IHystrixCollapserKey
    - id: scope
      type: Steeltoe.CircuitBreaker.RequestCollapserScope
    - id: timer
      type: Steeltoe.CircuitBreaker.ICollapserTimer
    - id: optionsDefault
      type: Steeltoe.CircuitBreaker.Hystrix.IHystrixCollapserOptions
    - id: metrics
      type: Steeltoe.CircuitBreaker.Hystrix.HystrixCollapserMetrics
    content.vb: Protected Sub New(collapserKey As IHystrixCollapserKey, scope As RequestCollapserScope, timer As ICollapserTimer, optionsDefault As IHystrixCollapserOptions, metrics As HystrixCollapserMetrics)
  overload: Steeltoe.CircuitBreaker.Hystrix.HystrixCollapser`3.#ctor*
  nameWithType.vb: HystrixCollapser(Of BatchReturnType, RequestResponseType, RequestArgumentType).HystrixCollapser(IHystrixCollapserKey, RequestCollapserScope, ICollapserTimer, IHystrixCollapserOptions, HystrixCollapserMetrics)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: Steeltoe.CircuitBreaker.Hystrix.HystrixCollapser(Of BatchReturnType, RequestResponseType, RequestArgumentType).HystrixCollapser(Steeltoe.CircuitBreaker.Hystrix.IHystrixCollapserKey, Steeltoe.CircuitBreaker.RequestCollapserScope, Steeltoe.CircuitBreaker.ICollapserTimer, Steeltoe.CircuitBreaker.Hystrix.IHystrixCollapserOptions, Steeltoe.CircuitBreaker.Hystrix.HystrixCollapserMetrics)
- uid: Steeltoe.CircuitBreaker.Hystrix.HystrixCollapser`3.CollapserKey
  commentId: P:Steeltoe.CircuitBreaker.Hystrix.HystrixCollapser`3.CollapserKey
  id: CollapserKey
  parent: Steeltoe.CircuitBreaker.Hystrix.HystrixCollapser`3
  langs:
  - csharp
  - vb
  name: CollapserKey
  nameWithType: HystrixCollapser<BatchReturnType, RequestResponseType, RequestArgumentType>.CollapserKey
  fullName: Steeltoe.CircuitBreaker.Hystrix.HystrixCollapser<BatchReturnType, RequestResponseType, RequestArgumentType>.CollapserKey
  type: Property
  source:
    remote:
      path: src/CircuitBreaker/src/HystrixBase/HystrixCollapser.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: CollapserKey
    path: ../Steeltoe/src/CircuitBreaker/src/HystrixBase/HystrixCollapser.cs
    startLine: 74
  assemblies:
  - Steeltoe.CircuitBreaker.HystrixBase
  namespace: Steeltoe.CircuitBreaker.Hystrix
  syntax:
    content: public virtual IHystrixCollapserKey CollapserKey { get; }
    parameters: []
    return:
      type: Steeltoe.CircuitBreaker.Hystrix.IHystrixCollapserKey
    content.vb: Public Overridable ReadOnly Property CollapserKey As IHystrixCollapserKey
  overload: Steeltoe.CircuitBreaker.Hystrix.HystrixCollapser`3.CollapserKey*
  nameWithType.vb: HystrixCollapser(Of BatchReturnType, RequestResponseType, RequestArgumentType).CollapserKey
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
  fullName.vb: Steeltoe.CircuitBreaker.Hystrix.HystrixCollapser(Of BatchReturnType, RequestResponseType, RequestArgumentType).CollapserKey
- uid: Steeltoe.CircuitBreaker.Hystrix.HystrixCollapser`3.Scope
  commentId: P:Steeltoe.CircuitBreaker.Hystrix.HystrixCollapser`3.Scope
  id: Scope
  parent: Steeltoe.CircuitBreaker.Hystrix.HystrixCollapser`3
  langs:
  - csharp
  - vb
  name: Scope
  nameWithType: HystrixCollapser<BatchReturnType, RequestResponseType, RequestArgumentType>.Scope
  fullName: Steeltoe.CircuitBreaker.Hystrix.HystrixCollapser<BatchReturnType, RequestResponseType, RequestArgumentType>.Scope
  type: Property
  source:
    remote:
      path: src/CircuitBreaker/src/HystrixBase/HystrixCollapser.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Scope
    path: ../Steeltoe/src/CircuitBreaker/src/HystrixBase/HystrixCollapser.cs
    startLine: 76
  assemblies:
  - Steeltoe.CircuitBreaker.HystrixBase
  namespace: Steeltoe.CircuitBreaker.Hystrix
  syntax:
    content: public virtual RequestCollapserScope Scope { get; }
    parameters: []
    return:
      type: Steeltoe.CircuitBreaker.RequestCollapserScope
    content.vb: Public Overridable ReadOnly Property Scope As RequestCollapserScope
  overload: Steeltoe.CircuitBreaker.Hystrix.HystrixCollapser`3.Scope*
  nameWithType.vb: HystrixCollapser(Of BatchReturnType, RequestResponseType, RequestArgumentType).Scope
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
  fullName.vb: Steeltoe.CircuitBreaker.Hystrix.HystrixCollapser(Of BatchReturnType, RequestResponseType, RequestArgumentType).Scope
- uid: Steeltoe.CircuitBreaker.Hystrix.HystrixCollapser`3.Metrics
  commentId: P:Steeltoe.CircuitBreaker.Hystrix.HystrixCollapser`3.Metrics
  id: Metrics
  parent: Steeltoe.CircuitBreaker.Hystrix.HystrixCollapser`3
  langs:
  - csharp
  - vb
  name: Metrics
  nameWithType: HystrixCollapser<BatchReturnType, RequestResponseType, RequestArgumentType>.Metrics
  fullName: Steeltoe.CircuitBreaker.Hystrix.HystrixCollapser<BatchReturnType, RequestResponseType, RequestArgumentType>.Metrics
  type: Property
  source:
    remote:
      path: src/CircuitBreaker/src/HystrixBase/HystrixCollapser.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Metrics
    path: ../Steeltoe/src/CircuitBreaker/src/HystrixBase/HystrixCollapser.cs
    startLine: 78
  assemblies:
  - Steeltoe.CircuitBreaker.HystrixBase
  namespace: Steeltoe.CircuitBreaker.Hystrix
  syntax:
    content: public virtual HystrixCollapserMetrics Metrics { get; }
    parameters: []
    return:
      type: Steeltoe.CircuitBreaker.Hystrix.HystrixCollapserMetrics
    content.vb: Public Overridable ReadOnly Property Metrics As HystrixCollapserMetrics
  overload: Steeltoe.CircuitBreaker.Hystrix.HystrixCollapser`3.Metrics*
  nameWithType.vb: HystrixCollapser(Of BatchReturnType, RequestResponseType, RequestArgumentType).Metrics
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
  fullName.vb: Steeltoe.CircuitBreaker.Hystrix.HystrixCollapser(Of BatchReturnType, RequestResponseType, RequestArgumentType).Metrics
- uid: Steeltoe.CircuitBreaker.Hystrix.HystrixCollapser`3.RequestArgument
  commentId: P:Steeltoe.CircuitBreaker.Hystrix.HystrixCollapser`3.RequestArgument
  id: RequestArgument
  parent: Steeltoe.CircuitBreaker.Hystrix.HystrixCollapser`3
  langs:
  - csharp
  - vb
  name: RequestArgument
  nameWithType: HystrixCollapser<BatchReturnType, RequestResponseType, RequestArgumentType>.RequestArgument
  fullName: Steeltoe.CircuitBreaker.Hystrix.HystrixCollapser<BatchReturnType, RequestResponseType, RequestArgumentType>.RequestArgument
  type: Property
  source:
    remote:
      path: src/CircuitBreaker/src/HystrixBase/HystrixCollapser.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: RequestArgument
    path: ../Steeltoe/src/CircuitBreaker/src/HystrixBase/HystrixCollapser.cs
    startLine: 80
  assemblies:
  - Steeltoe.CircuitBreaker.HystrixBase
  namespace: Steeltoe.CircuitBreaker.Hystrix
  syntax:
    content: public abstract RequestArgumentType RequestArgument { get; }
    parameters: []
    return:
      type: '{RequestArgumentType}'
    content.vb: Public MustOverride ReadOnly Property RequestArgument As RequestArgumentType
  overload: Steeltoe.CircuitBreaker.Hystrix.HystrixCollapser`3.RequestArgument*
  nameWithType.vb: HystrixCollapser(Of BatchReturnType, RequestResponseType, RequestArgumentType).RequestArgument
  modifiers.csharp:
  - public
  - abstract
  - get
  modifiers.vb:
  - Public
  - MustOverride
  - ReadOnly
  fullName.vb: Steeltoe.CircuitBreaker.Hystrix.HystrixCollapser(Of BatchReturnType, RequestResponseType, RequestArgumentType).RequestArgument
- uid: Steeltoe.CircuitBreaker.Hystrix.HystrixCollapser`3.Execute
  commentId: M:Steeltoe.CircuitBreaker.Hystrix.HystrixCollapser`3.Execute
  id: Execute
  parent: Steeltoe.CircuitBreaker.Hystrix.HystrixCollapser`3
  langs:
  - csharp
  - vb
  name: Execute()
  nameWithType: HystrixCollapser<BatchReturnType, RequestResponseType, RequestArgumentType>.Execute()
  fullName: Steeltoe.CircuitBreaker.Hystrix.HystrixCollapser<BatchReturnType, RequestResponseType, RequestArgumentType>.Execute()
  type: Method
  source:
    remote:
      path: src/CircuitBreaker/src/HystrixBase/HystrixCollapser.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Execute
    path: ../Steeltoe/src/CircuitBreaker/src/HystrixBase/HystrixCollapser.cs
    startLine: 84
  assemblies:
  - Steeltoe.CircuitBreaker.HystrixBase
  namespace: Steeltoe.CircuitBreaker.Hystrix
  syntax:
    content: public RequestResponseType Execute()
    return:
      type: '{RequestResponseType}'
    content.vb: Public Function Execute As RequestResponseType
  overload: Steeltoe.CircuitBreaker.Hystrix.HystrixCollapser`3.Execute*
  implements:
  - Steeltoe.CircuitBreaker.Hystrix.IHystrixExecutable{{RequestResponseType}}.Execute
  nameWithType.vb: HystrixCollapser(Of BatchReturnType, RequestResponseType, RequestArgumentType).Execute()
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Steeltoe.CircuitBreaker.Hystrix.HystrixCollapser(Of BatchReturnType, RequestResponseType, RequestArgumentType).Execute()
- uid: Steeltoe.CircuitBreaker.Hystrix.HystrixCollapser`3.ExecuteAsync
  commentId: M:Steeltoe.CircuitBreaker.Hystrix.HystrixCollapser`3.ExecuteAsync
  id: ExecuteAsync
  parent: Steeltoe.CircuitBreaker.Hystrix.HystrixCollapser`3
  langs:
  - csharp
  - vb
  name: ExecuteAsync()
  nameWithType: HystrixCollapser<BatchReturnType, RequestResponseType, RequestArgumentType>.ExecuteAsync()
  fullName: Steeltoe.CircuitBreaker.Hystrix.HystrixCollapser<BatchReturnType, RequestResponseType, RequestArgumentType>.ExecuteAsync()
  type: Method
  source:
    remote:
      path: src/CircuitBreaker/src/HystrixBase/HystrixCollapser.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: ExecuteAsync
    path: ../Steeltoe/src/CircuitBreaker/src/HystrixBase/HystrixCollapser.cs
    startLine: 96
  assemblies:
  - Steeltoe.CircuitBreaker.HystrixBase
  namespace: Steeltoe.CircuitBreaker.Hystrix
  syntax:
    content: public Task<RequestResponseType> ExecuteAsync()
    return:
      type: System.Threading.Tasks.Task{{RequestResponseType}}
    content.vb: Public Function ExecuteAsync As Task(Of RequestResponseType)
  overload: Steeltoe.CircuitBreaker.Hystrix.HystrixCollapser`3.ExecuteAsync*
  implements:
  - Steeltoe.CircuitBreaker.Hystrix.IHystrixExecutable{{RequestResponseType}}.ExecuteAsync
  nameWithType.vb: HystrixCollapser(Of BatchReturnType, RequestResponseType, RequestArgumentType).ExecuteAsync()
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Steeltoe.CircuitBreaker.Hystrix.HystrixCollapser(Of BatchReturnType, RequestResponseType, RequestArgumentType).ExecuteAsync()
- uid: Steeltoe.CircuitBreaker.Hystrix.HystrixCollapser`3.ExecuteAsync(System.Threading.CancellationToken)
  commentId: M:Steeltoe.CircuitBreaker.Hystrix.HystrixCollapser`3.ExecuteAsync(System.Threading.CancellationToken)
  id: ExecuteAsync(System.Threading.CancellationToken)
  parent: Steeltoe.CircuitBreaker.Hystrix.HystrixCollapser`3
  langs:
  - csharp
  - vb
  name: ExecuteAsync(CancellationToken)
  nameWithType: HystrixCollapser<BatchReturnType, RequestResponseType, RequestArgumentType>.ExecuteAsync(CancellationToken)
  fullName: Steeltoe.CircuitBreaker.Hystrix.HystrixCollapser<BatchReturnType, RequestResponseType, RequestArgumentType>.ExecuteAsync(System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/CircuitBreaker/src/HystrixBase/HystrixCollapser.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: ExecuteAsync
    path: ../Steeltoe/src/CircuitBreaker/src/HystrixBase/HystrixCollapser.cs
    startLine: 101
  assemblies:
  - Steeltoe.CircuitBreaker.HystrixBase
  namespace: Steeltoe.CircuitBreaker.Hystrix
  syntax:
    content: public Task<RequestResponseType> ExecuteAsync(CancellationToken token)
    parameters:
    - id: token
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{{RequestResponseType}}
    content.vb: Public Function ExecuteAsync(token As CancellationToken) As Task(Of RequestResponseType)
  overload: Steeltoe.CircuitBreaker.Hystrix.HystrixCollapser`3.ExecuteAsync*
  nameWithType.vb: HystrixCollapser(Of BatchReturnType, RequestResponseType, RequestArgumentType).ExecuteAsync(CancellationToken)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Steeltoe.CircuitBreaker.Hystrix.HystrixCollapser(Of BatchReturnType, RequestResponseType, RequestArgumentType).ExecuteAsync(System.Threading.CancellationToken)
- uid: Steeltoe.CircuitBreaker.Hystrix.HystrixCollapser`3.ToTask
  commentId: M:Steeltoe.CircuitBreaker.Hystrix.HystrixCollapser`3.ToTask
  id: ToTask
  parent: Steeltoe.CircuitBreaker.Hystrix.HystrixCollapser`3
  langs:
  - csharp
  - vb
  name: ToTask()
  nameWithType: HystrixCollapser<BatchReturnType, RequestResponseType, RequestArgumentType>.ToTask()
  fullName: Steeltoe.CircuitBreaker.Hystrix.HystrixCollapser<BatchReturnType, RequestResponseType, RequestArgumentType>.ToTask()
  type: Method
  source:
    remote:
      path: src/CircuitBreaker/src/HystrixBase/HystrixCollapser.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: ToTask
    path: ../Steeltoe/src/CircuitBreaker/src/HystrixBase/HystrixCollapser.cs
    startLine: 108
  assemblies:
  - Steeltoe.CircuitBreaker.HystrixBase
  namespace: Steeltoe.CircuitBreaker.Hystrix
  syntax:
    content: public Task<RequestResponseType> ToTask()
    return:
      type: System.Threading.Tasks.Task{{RequestResponseType}}
    content.vb: Public Function ToTask As Task(Of RequestResponseType)
  overload: Steeltoe.CircuitBreaker.Hystrix.HystrixCollapser`3.ToTask*
  nameWithType.vb: HystrixCollapser(Of BatchReturnType, RequestResponseType, RequestArgumentType).ToTask()
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Steeltoe.CircuitBreaker.Hystrix.HystrixCollapser(Of BatchReturnType, RequestResponseType, RequestArgumentType).ToTask()
- uid: Steeltoe.CircuitBreaker.Hystrix.HystrixCollapser`3.Observe
  commentId: M:Steeltoe.CircuitBreaker.Hystrix.HystrixCollapser`3.Observe
  id: Observe
  parent: Steeltoe.CircuitBreaker.Hystrix.HystrixCollapser`3
  langs:
  - csharp
  - vb
  name: Observe()
  nameWithType: HystrixCollapser<BatchReturnType, RequestResponseType, RequestArgumentType>.Observe()
  fullName: Steeltoe.CircuitBreaker.Hystrix.HystrixCollapser<BatchReturnType, RequestResponseType, RequestArgumentType>.Observe()
  type: Method
  source:
    remote:
      path: src/CircuitBreaker/src/HystrixBase/HystrixCollapser.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Observe
    path: ../Steeltoe/src/CircuitBreaker/src/HystrixBase/HystrixCollapser.cs
    startLine: 154
  assemblies:
  - Steeltoe.CircuitBreaker.HystrixBase
  namespace: Steeltoe.CircuitBreaker.Hystrix
  syntax:
    content: public IObservable<RequestResponseType> Observe()
    return:
      type: System.IObservable{{RequestResponseType}}
    content.vb: Public Function Observe As IObservable(Of RequestResponseType)
  overload: Steeltoe.CircuitBreaker.Hystrix.HystrixCollapser`3.Observe*
  implements:
  - Steeltoe.CircuitBreaker.Hystrix.IHystrixObservable{{RequestResponseType}}.Observe
  nameWithType.vb: HystrixCollapser(Of BatchReturnType, RequestResponseType, RequestArgumentType).Observe()
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Steeltoe.CircuitBreaker.Hystrix.HystrixCollapser(Of BatchReturnType, RequestResponseType, RequestArgumentType).Observe()
- uid: Steeltoe.CircuitBreaker.Hystrix.HystrixCollapser`3.Observe(System.Threading.CancellationToken)
  commentId: M:Steeltoe.CircuitBreaker.Hystrix.HystrixCollapser`3.Observe(System.Threading.CancellationToken)
  id: Observe(System.Threading.CancellationToken)
  parent: Steeltoe.CircuitBreaker.Hystrix.HystrixCollapser`3
  langs:
  - csharp
  - vb
  name: Observe(CancellationToken)
  nameWithType: HystrixCollapser<BatchReturnType, RequestResponseType, RequestArgumentType>.Observe(CancellationToken)
  fullName: Steeltoe.CircuitBreaker.Hystrix.HystrixCollapser<BatchReturnType, RequestResponseType, RequestArgumentType>.Observe(System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/CircuitBreaker/src/HystrixBase/HystrixCollapser.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Observe
    path: ../Steeltoe/src/CircuitBreaker/src/HystrixBase/HystrixCollapser.cs
    startLine: 162
  assemblies:
  - Steeltoe.CircuitBreaker.HystrixBase
  namespace: Steeltoe.CircuitBreaker.Hystrix
  syntax:
    content: public IObservable<RequestResponseType> Observe(CancellationToken token)
    parameters:
    - id: token
      type: System.Threading.CancellationToken
    return:
      type: System.IObservable{{RequestResponseType}}
    content.vb: Public Function Observe(token As CancellationToken) As IObservable(Of RequestResponseType)
  overload: Steeltoe.CircuitBreaker.Hystrix.HystrixCollapser`3.Observe*
  nameWithType.vb: HystrixCollapser(Of BatchReturnType, RequestResponseType, RequestArgumentType).Observe(CancellationToken)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Steeltoe.CircuitBreaker.Hystrix.HystrixCollapser(Of BatchReturnType, RequestResponseType, RequestArgumentType).Observe(System.Threading.CancellationToken)
- uid: Steeltoe.CircuitBreaker.Hystrix.HystrixCollapser`3.ToObservable
  commentId: M:Steeltoe.CircuitBreaker.Hystrix.HystrixCollapser`3.ToObservable
  id: ToObservable
  parent: Steeltoe.CircuitBreaker.Hystrix.HystrixCollapser`3
  langs:
  - csharp
  - vb
  name: ToObservable()
  nameWithType: HystrixCollapser<BatchReturnType, RequestResponseType, RequestArgumentType>.ToObservable()
  fullName: Steeltoe.CircuitBreaker.Hystrix.HystrixCollapser<BatchReturnType, RequestResponseType, RequestArgumentType>.ToObservable()
  type: Method
  source:
    remote:
      path: src/CircuitBreaker/src/HystrixBase/HystrixCollapser.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: ToObservable
    path: ../Steeltoe/src/CircuitBreaker/src/HystrixBase/HystrixCollapser.cs
    startLine: 170
  assemblies:
  - Steeltoe.CircuitBreaker.HystrixBase
  namespace: Steeltoe.CircuitBreaker.Hystrix
  syntax:
    content: public IObservable<RequestResponseType> ToObservable()
    return:
      type: System.IObservable{{RequestResponseType}}
    content.vb: Public Function ToObservable As IObservable(Of RequestResponseType)
  overload: Steeltoe.CircuitBreaker.Hystrix.HystrixCollapser`3.ToObservable*
  implements:
  - Steeltoe.CircuitBreaker.Hystrix.IHystrixObservable{{RequestResponseType}}.ToObservable
  nameWithType.vb: HystrixCollapser(Of BatchReturnType, RequestResponseType, RequestArgumentType).ToObservable()
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Steeltoe.CircuitBreaker.Hystrix.HystrixCollapser(Of BatchReturnType, RequestResponseType, RequestArgumentType).ToObservable()
- uid: Steeltoe.CircuitBreaker.Hystrix.HystrixCollapser`3.CreateCommand(System.Collections.Generic.ICollection{Steeltoe.CircuitBreaker.ICollapsedRequest{`1,`2}})
  commentId: M:Steeltoe.CircuitBreaker.Hystrix.HystrixCollapser`3.CreateCommand(System.Collections.Generic.ICollection{Steeltoe.CircuitBreaker.ICollapsedRequest{`1,`2}})
  id: CreateCommand(System.Collections.Generic.ICollection{Steeltoe.CircuitBreaker.ICollapsedRequest{`1,`2}})
  parent: Steeltoe.CircuitBreaker.Hystrix.HystrixCollapser`3
  langs:
  - csharp
  - vb
  name: CreateCommand(ICollection<ICollapsedRequest<RequestResponseType, RequestArgumentType>>)
  nameWithType: HystrixCollapser<BatchReturnType, RequestResponseType, RequestArgumentType>.CreateCommand(ICollection<ICollapsedRequest<RequestResponseType, RequestArgumentType>>)
  fullName: Steeltoe.CircuitBreaker.Hystrix.HystrixCollapser<BatchReturnType, RequestResponseType, RequestArgumentType>.CreateCommand(System.Collections.Generic.ICollection<Steeltoe.CircuitBreaker.ICollapsedRequest<RequestResponseType, RequestArgumentType>>)
  type: Method
  source:
    remote:
      path: src/CircuitBreaker/src/HystrixBase/HystrixCollapser.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: CreateCommand
    path: ../Steeltoe/src/CircuitBreaker/src/HystrixBase/HystrixCollapser.cs
    startLine: 181
  assemblies:
  - Steeltoe.CircuitBreaker.HystrixBase
  namespace: Steeltoe.CircuitBreaker.Hystrix
  syntax:
    content: protected abstract HystrixCommand<BatchReturnType> CreateCommand(ICollection<ICollapsedRequest<RequestResponseType, RequestArgumentType>> requests)
    parameters:
    - id: requests
      type: System.Collections.Generic.ICollection{Steeltoe.CircuitBreaker.ICollapsedRequest{{RequestResponseType},{RequestArgumentType}}}
    return:
      type: Steeltoe.CircuitBreaker.Hystrix.HystrixCommand{{BatchReturnType}}
    content.vb: Protected MustOverride Function CreateCommand(requests As ICollection(Of ICollapsedRequest(Of RequestResponseType, RequestArgumentType))) As HystrixCommand(Of BatchReturnType)
  overload: Steeltoe.CircuitBreaker.Hystrix.HystrixCollapser`3.CreateCommand*
  nameWithType.vb: HystrixCollapser(Of BatchReturnType, RequestResponseType, RequestArgumentType).CreateCommand(ICollection(Of ICollapsedRequest(Of RequestResponseType, RequestArgumentType)))
  modifiers.csharp:
  - protected
  - abstract
  modifiers.vb:
  - Protected
  - MustOverride
  fullName.vb: Steeltoe.CircuitBreaker.Hystrix.HystrixCollapser(Of BatchReturnType, RequestResponseType, RequestArgumentType).CreateCommand(System.Collections.Generic.ICollection(Of Steeltoe.CircuitBreaker.ICollapsedRequest(Of RequestResponseType, RequestArgumentType)))
  name.vb: CreateCommand(ICollection(Of ICollapsedRequest(Of RequestResponseType, RequestArgumentType)))
- uid: Steeltoe.CircuitBreaker.Hystrix.HystrixCollapser`3.MapResponseToRequests(`0,System.Collections.Generic.ICollection{Steeltoe.CircuitBreaker.ICollapsedRequest{`1,`2}})
  commentId: M:Steeltoe.CircuitBreaker.Hystrix.HystrixCollapser`3.MapResponseToRequests(`0,System.Collections.Generic.ICollection{Steeltoe.CircuitBreaker.ICollapsedRequest{`1,`2}})
  id: MapResponseToRequests(`0,System.Collections.Generic.ICollection{Steeltoe.CircuitBreaker.ICollapsedRequest{`1,`2}})
  parent: Steeltoe.CircuitBreaker.Hystrix.HystrixCollapser`3
  langs:
  - csharp
  - vb
  name: MapResponseToRequests(BatchReturnType, ICollection<ICollapsedRequest<RequestResponseType, RequestArgumentType>>)
  nameWithType: HystrixCollapser<BatchReturnType, RequestResponseType, RequestArgumentType>.MapResponseToRequests(BatchReturnType, ICollection<ICollapsedRequest<RequestResponseType, RequestArgumentType>>)
  fullName: Steeltoe.CircuitBreaker.Hystrix.HystrixCollapser<BatchReturnType, RequestResponseType, RequestArgumentType>.MapResponseToRequests(BatchReturnType, System.Collections.Generic.ICollection<Steeltoe.CircuitBreaker.ICollapsedRequest<RequestResponseType, RequestArgumentType>>)
  type: Method
  source:
    remote:
      path: src/CircuitBreaker/src/HystrixBase/HystrixCollapser.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: MapResponseToRequests
    path: ../Steeltoe/src/CircuitBreaker/src/HystrixBase/HystrixCollapser.cs
    startLine: 183
  assemblies:
  - Steeltoe.CircuitBreaker.HystrixBase
  namespace: Steeltoe.CircuitBreaker.Hystrix
  syntax:
    content: protected abstract void MapResponseToRequests(BatchReturnType batchResponse, ICollection<ICollapsedRequest<RequestResponseType, RequestArgumentType>> requests)
    parameters:
    - id: batchResponse
      type: '{BatchReturnType}'
    - id: requests
      type: System.Collections.Generic.ICollection{Steeltoe.CircuitBreaker.ICollapsedRequest{{RequestResponseType},{RequestArgumentType}}}
    content.vb: Protected MustOverride Sub MapResponseToRequests(batchResponse As BatchReturnType, requests As ICollection(Of ICollapsedRequest(Of RequestResponseType, RequestArgumentType)))
  overload: Steeltoe.CircuitBreaker.Hystrix.HystrixCollapser`3.MapResponseToRequests*
  nameWithType.vb: HystrixCollapser(Of BatchReturnType, RequestResponseType, RequestArgumentType).MapResponseToRequests(BatchReturnType, ICollection(Of ICollapsedRequest(Of RequestResponseType, RequestArgumentType)))
  modifiers.csharp:
  - protected
  - abstract
  modifiers.vb:
  - Protected
  - MustOverride
  fullName.vb: Steeltoe.CircuitBreaker.Hystrix.HystrixCollapser(Of BatchReturnType, RequestResponseType, RequestArgumentType).MapResponseToRequests(BatchReturnType, System.Collections.Generic.ICollection(Of Steeltoe.CircuitBreaker.ICollapsedRequest(Of RequestResponseType, RequestArgumentType)))
  name.vb: MapResponseToRequests(BatchReturnType, ICollection(Of ICollapsedRequest(Of RequestResponseType, RequestArgumentType)))
- uid: Steeltoe.CircuitBreaker.Hystrix.HystrixCollapser`3.ShardRequests(System.Collections.Generic.ICollection{Steeltoe.CircuitBreaker.ICollapsedRequest{`1,`2}})
  commentId: M:Steeltoe.CircuitBreaker.Hystrix.HystrixCollapser`3.ShardRequests(System.Collections.Generic.ICollection{Steeltoe.CircuitBreaker.ICollapsedRequest{`1,`2}})
  id: ShardRequests(System.Collections.Generic.ICollection{Steeltoe.CircuitBreaker.ICollapsedRequest{`1,`2}})
  parent: Steeltoe.CircuitBreaker.Hystrix.HystrixCollapser`3
  langs:
  - csharp
  - vb
  name: ShardRequests(ICollection<ICollapsedRequest<RequestResponseType, RequestArgumentType>>)
  nameWithType: HystrixCollapser<BatchReturnType, RequestResponseType, RequestArgumentType>.ShardRequests(ICollection<ICollapsedRequest<RequestResponseType, RequestArgumentType>>)
  fullName: Steeltoe.CircuitBreaker.Hystrix.HystrixCollapser<BatchReturnType, RequestResponseType, RequestArgumentType>.ShardRequests(System.Collections.Generic.ICollection<Steeltoe.CircuitBreaker.ICollapsedRequest<RequestResponseType, RequestArgumentType>>)
  type: Method
  source:
    remote:
      path: src/CircuitBreaker/src/HystrixBase/HystrixCollapser.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: ShardRequests
    path: ../Steeltoe/src/CircuitBreaker/src/HystrixBase/HystrixCollapser.cs
    startLine: 185
  assemblies:
  - Steeltoe.CircuitBreaker.HystrixBase
  namespace: Steeltoe.CircuitBreaker.Hystrix
  syntax:
    content: protected virtual ICollection<ICollection<ICollapsedRequest<RequestResponseType, RequestArgumentType>>> ShardRequests(ICollection<ICollapsedRequest<RequestResponseType, RequestArgumentType>> requests)
    parameters:
    - id: requests
      type: System.Collections.Generic.ICollection{Steeltoe.CircuitBreaker.ICollapsedRequest{{RequestResponseType},{RequestArgumentType}}}
    return:
      type: System.Collections.Generic.ICollection{System.Collections.Generic.ICollection{Steeltoe.CircuitBreaker.ICollapsedRequest{{RequestResponseType},{RequestArgumentType}}}}
    content.vb: Protected Overridable Function ShardRequests(requests As ICollection(Of ICollapsedRequest(Of RequestResponseType, RequestArgumentType))) As ICollection(Of ICollection(Of ICollapsedRequest(Of RequestResponseType, RequestArgumentType)))
  overload: Steeltoe.CircuitBreaker.Hystrix.HystrixCollapser`3.ShardRequests*
  nameWithType.vb: HystrixCollapser(Of BatchReturnType, RequestResponseType, RequestArgumentType).ShardRequests(ICollection(Of ICollapsedRequest(Of RequestResponseType, RequestArgumentType)))
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
  fullName.vb: Steeltoe.CircuitBreaker.Hystrix.HystrixCollapser(Of BatchReturnType, RequestResponseType, RequestArgumentType).ShardRequests(System.Collections.Generic.ICollection(Of Steeltoe.CircuitBreaker.ICollapsedRequest(Of RequestResponseType, RequestArgumentType)))
  name.vb: ShardRequests(ICollection(Of ICollapsedRequest(Of RequestResponseType, RequestArgumentType)))
- uid: Steeltoe.CircuitBreaker.Hystrix.HystrixCollapser`3.AddCacheEntryIfAbsent(System.String,Steeltoe.CircuitBreaker.Hystrix.HystrixCachedTask{`1}@)
  commentId: M:Steeltoe.CircuitBreaker.Hystrix.HystrixCollapser`3.AddCacheEntryIfAbsent(System.String,Steeltoe.CircuitBreaker.Hystrix.HystrixCachedTask{`1}@)
  id: AddCacheEntryIfAbsent(System.String,Steeltoe.CircuitBreaker.Hystrix.HystrixCachedTask{`1}@)
  parent: Steeltoe.CircuitBreaker.Hystrix.HystrixCollapser`3
  langs:
  - csharp
  - vb
  name: AddCacheEntryIfAbsent(String, out HystrixCachedTask<RequestResponseType>)
  nameWithType: HystrixCollapser<BatchReturnType, RequestResponseType, RequestArgumentType>.AddCacheEntryIfAbsent(String, out HystrixCachedTask<RequestResponseType>)
  fullName: Steeltoe.CircuitBreaker.Hystrix.HystrixCollapser<BatchReturnType, RequestResponseType, RequestArgumentType>.AddCacheEntryIfAbsent(System.String, out Steeltoe.CircuitBreaker.Hystrix.HystrixCachedTask<RequestResponseType>)
  type: Method
  source:
    remote:
      path: src/CircuitBreaker/src/HystrixBase/HystrixCollapser.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: AddCacheEntryIfAbsent
    path: ../Steeltoe/src/CircuitBreaker/src/HystrixBase/HystrixCollapser.cs
    startLine: 190
  assemblies:
  - Steeltoe.CircuitBreaker.HystrixBase
  namespace: Steeltoe.CircuitBreaker.Hystrix
  syntax:
    content: protected bool AddCacheEntryIfAbsent(string cacheKey, out HystrixCachedTask<RequestResponseType> entry)
    parameters:
    - id: cacheKey
      type: System.String
    - id: entry
      type: Steeltoe.CircuitBreaker.Hystrix.HystrixCachedTask{{RequestResponseType}}
    return:
      type: System.Boolean
    content.vb: Protected Function AddCacheEntryIfAbsent(cacheKey As String, ByRef entry As HystrixCachedTask(Of RequestResponseType)) As Boolean
  overload: Steeltoe.CircuitBreaker.Hystrix.HystrixCollapser`3.AddCacheEntryIfAbsent*
  nameWithType.vb: HystrixCollapser(Of BatchReturnType, RequestResponseType, RequestArgumentType).AddCacheEntryIfAbsent(String, ByRef HystrixCachedTask(Of RequestResponseType))
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: Steeltoe.CircuitBreaker.Hystrix.HystrixCollapser(Of BatchReturnType, RequestResponseType, RequestArgumentType).AddCacheEntryIfAbsent(System.String, ByRef Steeltoe.CircuitBreaker.Hystrix.HystrixCachedTask(Of RequestResponseType))
  name.vb: AddCacheEntryIfAbsent(String, ByRef HystrixCachedTask(Of RequestResponseType))
- uid: Steeltoe.CircuitBreaker.Hystrix.HystrixCollapser`3.CacheKey
  commentId: P:Steeltoe.CircuitBreaker.Hystrix.HystrixCollapser`3.CacheKey
  id: CacheKey
  parent: Steeltoe.CircuitBreaker.Hystrix.HystrixCollapser`3
  langs:
  - csharp
  - vb
  name: CacheKey
  nameWithType: HystrixCollapser<BatchReturnType, RequestResponseType, RequestArgumentType>.CacheKey
  fullName: Steeltoe.CircuitBreaker.Hystrix.HystrixCollapser<BatchReturnType, RequestResponseType, RequestArgumentType>.CacheKey
  type: Property
  source:
    remote:
      path: src/CircuitBreaker/src/HystrixBase/HystrixCollapser.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: CacheKey
    path: ../Steeltoe/src/CircuitBreaker/src/HystrixBase/HystrixCollapser.cs
    startLine: 206
  assemblies:
  - Steeltoe.CircuitBreaker.HystrixBase
  namespace: Steeltoe.CircuitBreaker.Hystrix
  syntax:
    content: protected virtual string CacheKey { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Protected Overridable ReadOnly Property CacheKey As String
  overload: Steeltoe.CircuitBreaker.Hystrix.HystrixCollapser`3.CacheKey*
  nameWithType.vb: HystrixCollapser(Of BatchReturnType, RequestResponseType, RequestArgumentType).CacheKey
  modifiers.csharp:
  - protected
  - virtual
  - get
  modifiers.vb:
  - Protected
  - Overridable
  - ReadOnly
  fullName.vb: Steeltoe.CircuitBreaker.Hystrix.HystrixCollapser(Of BatchReturnType, RequestResponseType, RequestArgumentType).CacheKey
- uid: Steeltoe.CircuitBreaker.Hystrix.HystrixCollapser`3.DecomposeException(System.Exception)
  commentId: M:Steeltoe.CircuitBreaker.Hystrix.HystrixCollapser`3.DecomposeException(System.Exception)
  id: DecomposeException(System.Exception)
  parent: Steeltoe.CircuitBreaker.Hystrix.HystrixCollapser`3
  langs:
  - csharp
  - vb
  name: DecomposeException(Exception)
  nameWithType: HystrixCollapser<BatchReturnType, RequestResponseType, RequestArgumentType>.DecomposeException(Exception)
  fullName: Steeltoe.CircuitBreaker.Hystrix.HystrixCollapser<BatchReturnType, RequestResponseType, RequestArgumentType>.DecomposeException(System.Exception)
  type: Method
  source:
    remote:
      path: src/CircuitBreaker/src/HystrixBase/HystrixCollapser.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: DecomposeException
    path: ../Steeltoe/src/CircuitBreaker/src/HystrixBase/HystrixCollapser.cs
    startLine: 236
  assemblies:
  - Steeltoe.CircuitBreaker.HystrixBase
  namespace: Steeltoe.CircuitBreaker.Hystrix
  syntax:
    content: protected virtual Exception DecomposeException(Exception e)
    parameters:
    - id: e
      type: System.Exception
    return:
      type: System.Exception
    content.vb: Protected Overridable Function DecomposeException(e As Exception) As Exception
  overload: Steeltoe.CircuitBreaker.Hystrix.HystrixCollapser`3.DecomposeException*
  nameWithType.vb: HystrixCollapser(Of BatchReturnType, RequestResponseType, RequestArgumentType).DecomposeException(Exception)
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
  fullName.vb: Steeltoe.CircuitBreaker.Hystrix.HystrixCollapser(Of BatchReturnType, RequestResponseType, RequestArgumentType).DecomposeException(System.Exception)
references:
- uid: Steeltoe.CircuitBreaker.Hystrix
  commentId: N:Steeltoe.CircuitBreaker.Hystrix
  name: Steeltoe.CircuitBreaker.Hystrix
  nameWithType: Steeltoe.CircuitBreaker.Hystrix
  fullName: Steeltoe.CircuitBreaker.Hystrix
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Steeltoe.CircuitBreaker.Hystrix.HystrixCollapserBase
  commentId: T:Steeltoe.CircuitBreaker.Hystrix.HystrixCollapserBase
  parent: Steeltoe.CircuitBreaker.Hystrix
  name: HystrixCollapserBase
  nameWithType: HystrixCollapserBase
  fullName: Steeltoe.CircuitBreaker.Hystrix.HystrixCollapserBase
- uid: Steeltoe.CircuitBreaker.Hystrix.IHystrixExecutable{{RequestResponseType}}
  commentId: T:Steeltoe.CircuitBreaker.Hystrix.IHystrixExecutable{`1}
  parent: Steeltoe.CircuitBreaker.Hystrix
  definition: Steeltoe.CircuitBreaker.Hystrix.IHystrixExecutable`1
  name: IHystrixExecutable<RequestResponseType>
  nameWithType: IHystrixExecutable<RequestResponseType>
  fullName: Steeltoe.CircuitBreaker.Hystrix.IHystrixExecutable<RequestResponseType>
  nameWithType.vb: IHystrixExecutable(Of RequestResponseType)
  fullName.vb: Steeltoe.CircuitBreaker.Hystrix.IHystrixExecutable(Of RequestResponseType)
  name.vb: IHystrixExecutable(Of RequestResponseType)
  spec.csharp:
  - uid: Steeltoe.CircuitBreaker.Hystrix.IHystrixExecutable`1
    name: IHystrixExecutable
    nameWithType: IHystrixExecutable
    fullName: Steeltoe.CircuitBreaker.Hystrix.IHystrixExecutable
  - name: <
    nameWithType: <
    fullName: <
  - name: RequestResponseType
    nameWithType: RequestResponseType
    fullName: RequestResponseType
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Steeltoe.CircuitBreaker.Hystrix.IHystrixExecutable`1
    name: IHystrixExecutable
    nameWithType: IHystrixExecutable
    fullName: Steeltoe.CircuitBreaker.Hystrix.IHystrixExecutable
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: RequestResponseType
    nameWithType: RequestResponseType
    fullName: RequestResponseType
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.CircuitBreaker.Hystrix.IHystrixObservable{{RequestResponseType}}
  commentId: T:Steeltoe.CircuitBreaker.Hystrix.IHystrixObservable{`1}
  parent: Steeltoe.CircuitBreaker.Hystrix
  definition: Steeltoe.CircuitBreaker.Hystrix.IHystrixObservable`1
  name: IHystrixObservable<RequestResponseType>
  nameWithType: IHystrixObservable<RequestResponseType>
  fullName: Steeltoe.CircuitBreaker.Hystrix.IHystrixObservable<RequestResponseType>
  nameWithType.vb: IHystrixObservable(Of RequestResponseType)
  fullName.vb: Steeltoe.CircuitBreaker.Hystrix.IHystrixObservable(Of RequestResponseType)
  name.vb: IHystrixObservable(Of RequestResponseType)
  spec.csharp:
  - uid: Steeltoe.CircuitBreaker.Hystrix.IHystrixObservable`1
    name: IHystrixObservable
    nameWithType: IHystrixObservable
    fullName: Steeltoe.CircuitBreaker.Hystrix.IHystrixObservable
  - name: <
    nameWithType: <
    fullName: <
  - name: RequestResponseType
    nameWithType: RequestResponseType
    fullName: RequestResponseType
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Steeltoe.CircuitBreaker.Hystrix.IHystrixObservable`1
    name: IHystrixObservable
    nameWithType: IHystrixObservable
    fullName: Steeltoe.CircuitBreaker.Hystrix.IHystrixObservable
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: RequestResponseType
    nameWithType: RequestResponseType
    fullName: RequestResponseType
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.CircuitBreaker.Hystrix.IHystrixInvokable
  commentId: T:Steeltoe.CircuitBreaker.Hystrix.IHystrixInvokable
  parent: Steeltoe.CircuitBreaker.Hystrix
  name: IHystrixInvokable
  nameWithType: IHystrixInvokable
  fullName: Steeltoe.CircuitBreaker.Hystrix.IHystrixInvokable
- uid: Steeltoe.CircuitBreaker.Hystrix.HystrixCollapserBase._defaultNameCache
  commentId: F:Steeltoe.CircuitBreaker.Hystrix.HystrixCollapserBase._defaultNameCache
  parent: Steeltoe.CircuitBreaker.Hystrix.HystrixCollapserBase
  name: _defaultNameCache
  nameWithType: HystrixCollapserBase._defaultNameCache
  fullName: Steeltoe.CircuitBreaker.Hystrix.HystrixCollapserBase._defaultNameCache
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Steeltoe.CircuitBreaker.Hystrix.IHystrixExecutable`1
  commentId: T:Steeltoe.CircuitBreaker.Hystrix.IHystrixExecutable`1
  name: IHystrixExecutable<TResult>
  nameWithType: IHystrixExecutable<TResult>
  fullName: Steeltoe.CircuitBreaker.Hystrix.IHystrixExecutable<TResult>
  nameWithType.vb: IHystrixExecutable(Of TResult)
  fullName.vb: Steeltoe.CircuitBreaker.Hystrix.IHystrixExecutable(Of TResult)
  name.vb: IHystrixExecutable(Of TResult)
  spec.csharp:
  - uid: Steeltoe.CircuitBreaker.Hystrix.IHystrixExecutable`1
    name: IHystrixExecutable
    nameWithType: IHystrixExecutable
    fullName: Steeltoe.CircuitBreaker.Hystrix.IHystrixExecutable
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Steeltoe.CircuitBreaker.Hystrix.IHystrixExecutable`1
    name: IHystrixExecutable
    nameWithType: IHystrixExecutable
    fullName: Steeltoe.CircuitBreaker.Hystrix.IHystrixExecutable
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.CircuitBreaker.Hystrix.IHystrixObservable`1
  commentId: T:Steeltoe.CircuitBreaker.Hystrix.IHystrixObservable`1
  name: IHystrixObservable<TResult>
  nameWithType: IHystrixObservable<TResult>
  fullName: Steeltoe.CircuitBreaker.Hystrix.IHystrixObservable<TResult>
  nameWithType.vb: IHystrixObservable(Of TResult)
  fullName.vb: Steeltoe.CircuitBreaker.Hystrix.IHystrixObservable(Of TResult)
  name.vb: IHystrixObservable(Of TResult)
  spec.csharp:
  - uid: Steeltoe.CircuitBreaker.Hystrix.IHystrixObservable`1
    name: IHystrixObservable
    nameWithType: IHystrixObservable
    fullName: Steeltoe.CircuitBreaker.Hystrix.IHystrixObservable
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Steeltoe.CircuitBreaker.Hystrix.IHystrixObservable`1
    name: IHystrixObservable
    nameWithType: IHystrixObservable
    fullName: Steeltoe.CircuitBreaker.Hystrix.IHystrixObservable
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: true
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
- uid: Steeltoe.CircuitBreaker.Hystrix.HystrixCollapser`3.#ctor*
  commentId: Overload:Steeltoe.CircuitBreaker.Hystrix.HystrixCollapser`3.#ctor
  name: HystrixCollapser
  nameWithType: HystrixCollapser<BatchReturnType, RequestResponseType, RequestArgumentType>.HystrixCollapser
  fullName: Steeltoe.CircuitBreaker.Hystrix.HystrixCollapser<BatchReturnType, RequestResponseType, RequestArgumentType>.HystrixCollapser
  nameWithType.vb: HystrixCollapser(Of BatchReturnType, RequestResponseType, RequestArgumentType).HystrixCollapser
  fullName.vb: Steeltoe.CircuitBreaker.Hystrix.HystrixCollapser(Of BatchReturnType, RequestResponseType, RequestArgumentType).HystrixCollapser
- uid: Steeltoe.CircuitBreaker.Hystrix.IHystrixCollapserKey
  commentId: T:Steeltoe.CircuitBreaker.Hystrix.IHystrixCollapserKey
  parent: Steeltoe.CircuitBreaker.Hystrix
  name: IHystrixCollapserKey
  nameWithType: IHystrixCollapserKey
  fullName: Steeltoe.CircuitBreaker.Hystrix.IHystrixCollapserKey
- uid: Steeltoe.CircuitBreaker.RequestCollapserScope
  commentId: T:Steeltoe.CircuitBreaker.RequestCollapserScope
  parent: Steeltoe.CircuitBreaker
  name: RequestCollapserScope
  nameWithType: RequestCollapserScope
  fullName: Steeltoe.CircuitBreaker.RequestCollapserScope
- uid: Steeltoe.CircuitBreaker
  commentId: N:Steeltoe.CircuitBreaker
  name: Steeltoe.CircuitBreaker
  nameWithType: Steeltoe.CircuitBreaker
  fullName: Steeltoe.CircuitBreaker
- uid: Steeltoe.CircuitBreaker.Hystrix.IHystrixCollapserOptions
  commentId: T:Steeltoe.CircuitBreaker.Hystrix.IHystrixCollapserOptions
  parent: Steeltoe.CircuitBreaker.Hystrix
  name: IHystrixCollapserOptions
  nameWithType: IHystrixCollapserOptions
  fullName: Steeltoe.CircuitBreaker.Hystrix.IHystrixCollapserOptions
- uid: Steeltoe.CircuitBreaker.ICollapserTimer
  commentId: T:Steeltoe.CircuitBreaker.ICollapserTimer
  parent: Steeltoe.CircuitBreaker
  name: ICollapserTimer
  nameWithType: ICollapserTimer
  fullName: Steeltoe.CircuitBreaker.ICollapserTimer
- uid: Steeltoe.CircuitBreaker.Hystrix.HystrixCollapserMetrics
  commentId: T:Steeltoe.CircuitBreaker.Hystrix.HystrixCollapserMetrics
  parent: Steeltoe.CircuitBreaker.Hystrix
  name: HystrixCollapserMetrics
  nameWithType: HystrixCollapserMetrics
  fullName: Steeltoe.CircuitBreaker.Hystrix.HystrixCollapserMetrics
- uid: Steeltoe.CircuitBreaker.Hystrix.HystrixCollapser`3.CollapserKey*
  commentId: Overload:Steeltoe.CircuitBreaker.Hystrix.HystrixCollapser`3.CollapserKey
  name: CollapserKey
  nameWithType: HystrixCollapser<BatchReturnType, RequestResponseType, RequestArgumentType>.CollapserKey
  fullName: Steeltoe.CircuitBreaker.Hystrix.HystrixCollapser<BatchReturnType, RequestResponseType, RequestArgumentType>.CollapserKey
  nameWithType.vb: HystrixCollapser(Of BatchReturnType, RequestResponseType, RequestArgumentType).CollapserKey
  fullName.vb: Steeltoe.CircuitBreaker.Hystrix.HystrixCollapser(Of BatchReturnType, RequestResponseType, RequestArgumentType).CollapserKey
- uid: Steeltoe.CircuitBreaker.Hystrix.HystrixCollapser`3.Scope*
  commentId: Overload:Steeltoe.CircuitBreaker.Hystrix.HystrixCollapser`3.Scope
  name: Scope
  nameWithType: HystrixCollapser<BatchReturnType, RequestResponseType, RequestArgumentType>.Scope
  fullName: Steeltoe.CircuitBreaker.Hystrix.HystrixCollapser<BatchReturnType, RequestResponseType, RequestArgumentType>.Scope
  nameWithType.vb: HystrixCollapser(Of BatchReturnType, RequestResponseType, RequestArgumentType).Scope
  fullName.vb: Steeltoe.CircuitBreaker.Hystrix.HystrixCollapser(Of BatchReturnType, RequestResponseType, RequestArgumentType).Scope
- uid: Steeltoe.CircuitBreaker.Hystrix.HystrixCollapser`3.Metrics*
  commentId: Overload:Steeltoe.CircuitBreaker.Hystrix.HystrixCollapser`3.Metrics
  name: Metrics
  nameWithType: HystrixCollapser<BatchReturnType, RequestResponseType, RequestArgumentType>.Metrics
  fullName: Steeltoe.CircuitBreaker.Hystrix.HystrixCollapser<BatchReturnType, RequestResponseType, RequestArgumentType>.Metrics
  nameWithType.vb: HystrixCollapser(Of BatchReturnType, RequestResponseType, RequestArgumentType).Metrics
  fullName.vb: Steeltoe.CircuitBreaker.Hystrix.HystrixCollapser(Of BatchReturnType, RequestResponseType, RequestArgumentType).Metrics
- uid: Steeltoe.CircuitBreaker.Hystrix.HystrixCollapser`3.RequestArgument*
  commentId: Overload:Steeltoe.CircuitBreaker.Hystrix.HystrixCollapser`3.RequestArgument
  name: RequestArgument
  nameWithType: HystrixCollapser<BatchReturnType, RequestResponseType, RequestArgumentType>.RequestArgument
  fullName: Steeltoe.CircuitBreaker.Hystrix.HystrixCollapser<BatchReturnType, RequestResponseType, RequestArgumentType>.RequestArgument
  nameWithType.vb: HystrixCollapser(Of BatchReturnType, RequestResponseType, RequestArgumentType).RequestArgument
  fullName.vb: Steeltoe.CircuitBreaker.Hystrix.HystrixCollapser(Of BatchReturnType, RequestResponseType, RequestArgumentType).RequestArgument
- uid: '{RequestArgumentType}'
  commentId: '!:RequestArgumentType'
  definition: RequestArgumentType
  name: RequestArgumentType
  nameWithType: RequestArgumentType
  fullName: RequestArgumentType
- uid: RequestArgumentType
  name: RequestArgumentType
  nameWithType: RequestArgumentType
  fullName: RequestArgumentType
- uid: Steeltoe.CircuitBreaker.Hystrix.HystrixCollapser`3.Execute*
  commentId: Overload:Steeltoe.CircuitBreaker.Hystrix.HystrixCollapser`3.Execute
  name: Execute
  nameWithType: HystrixCollapser<BatchReturnType, RequestResponseType, RequestArgumentType>.Execute
  fullName: Steeltoe.CircuitBreaker.Hystrix.HystrixCollapser<BatchReturnType, RequestResponseType, RequestArgumentType>.Execute
  nameWithType.vb: HystrixCollapser(Of BatchReturnType, RequestResponseType, RequestArgumentType).Execute
  fullName.vb: Steeltoe.CircuitBreaker.Hystrix.HystrixCollapser(Of BatchReturnType, RequestResponseType, RequestArgumentType).Execute
- uid: Steeltoe.CircuitBreaker.Hystrix.IHystrixExecutable{{RequestResponseType}}.Execute
  commentId: M:Steeltoe.CircuitBreaker.Hystrix.IHystrixExecutable{`1}.Execute
  parent: Steeltoe.CircuitBreaker.Hystrix.IHystrixExecutable{{RequestResponseType}}
  definition: Steeltoe.CircuitBreaker.Hystrix.IHystrixExecutable`1.Execute
  name: Execute()
  nameWithType: IHystrixExecutable<RequestResponseType>.Execute()
  fullName: Steeltoe.CircuitBreaker.Hystrix.IHystrixExecutable<RequestResponseType>.Execute()
  nameWithType.vb: IHystrixExecutable(Of RequestResponseType).Execute()
  fullName.vb: Steeltoe.CircuitBreaker.Hystrix.IHystrixExecutable(Of RequestResponseType).Execute()
  spec.csharp:
  - uid: Steeltoe.CircuitBreaker.Hystrix.IHystrixExecutable`1.Execute
    name: Execute
    nameWithType: IHystrixExecutable<RequestResponseType>.Execute
    fullName: Steeltoe.CircuitBreaker.Hystrix.IHystrixExecutable<RequestResponseType>.Execute
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.CircuitBreaker.Hystrix.IHystrixExecutable`1.Execute
    name: Execute
    nameWithType: IHystrixExecutable(Of RequestResponseType).Execute
    fullName: Steeltoe.CircuitBreaker.Hystrix.IHystrixExecutable(Of RequestResponseType).Execute
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: '{RequestResponseType}'
  commentId: '!:RequestResponseType'
  definition: RequestResponseType
  name: RequestResponseType
  nameWithType: RequestResponseType
  fullName: RequestResponseType
- uid: Steeltoe.CircuitBreaker.Hystrix.IHystrixExecutable`1.Execute
  commentId: M:Steeltoe.CircuitBreaker.Hystrix.IHystrixExecutable`1.Execute
  name: Execute()
  nameWithType: IHystrixExecutable<TResult>.Execute()
  fullName: Steeltoe.CircuitBreaker.Hystrix.IHystrixExecutable<TResult>.Execute()
  nameWithType.vb: IHystrixExecutable(Of TResult).Execute()
  fullName.vb: Steeltoe.CircuitBreaker.Hystrix.IHystrixExecutable(Of TResult).Execute()
  spec.csharp:
  - uid: Steeltoe.CircuitBreaker.Hystrix.IHystrixExecutable`1.Execute
    name: Execute
    nameWithType: IHystrixExecutable<TResult>.Execute
    fullName: Steeltoe.CircuitBreaker.Hystrix.IHystrixExecutable<TResult>.Execute
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.CircuitBreaker.Hystrix.IHystrixExecutable`1.Execute
    name: Execute
    nameWithType: IHystrixExecutable(Of TResult).Execute
    fullName: Steeltoe.CircuitBreaker.Hystrix.IHystrixExecutable(Of TResult).Execute
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: RequestResponseType
  name: RequestResponseType
  nameWithType: RequestResponseType
  fullName: RequestResponseType
- uid: Steeltoe.CircuitBreaker.Hystrix.HystrixCollapser`3.ExecuteAsync*
  commentId: Overload:Steeltoe.CircuitBreaker.Hystrix.HystrixCollapser`3.ExecuteAsync
  name: ExecuteAsync
  nameWithType: HystrixCollapser<BatchReturnType, RequestResponseType, RequestArgumentType>.ExecuteAsync
  fullName: Steeltoe.CircuitBreaker.Hystrix.HystrixCollapser<BatchReturnType, RequestResponseType, RequestArgumentType>.ExecuteAsync
  nameWithType.vb: HystrixCollapser(Of BatchReturnType, RequestResponseType, RequestArgumentType).ExecuteAsync
  fullName.vb: Steeltoe.CircuitBreaker.Hystrix.HystrixCollapser(Of BatchReturnType, RequestResponseType, RequestArgumentType).ExecuteAsync
- uid: Steeltoe.CircuitBreaker.Hystrix.IHystrixExecutable{{RequestResponseType}}.ExecuteAsync
  commentId: M:Steeltoe.CircuitBreaker.Hystrix.IHystrixExecutable{`1}.ExecuteAsync
  parent: Steeltoe.CircuitBreaker.Hystrix.IHystrixExecutable{{RequestResponseType}}
  definition: Steeltoe.CircuitBreaker.Hystrix.IHystrixExecutable`1.ExecuteAsync
  name: ExecuteAsync()
  nameWithType: IHystrixExecutable<RequestResponseType>.ExecuteAsync()
  fullName: Steeltoe.CircuitBreaker.Hystrix.IHystrixExecutable<RequestResponseType>.ExecuteAsync()
  nameWithType.vb: IHystrixExecutable(Of RequestResponseType).ExecuteAsync()
  fullName.vb: Steeltoe.CircuitBreaker.Hystrix.IHystrixExecutable(Of RequestResponseType).ExecuteAsync()
  spec.csharp:
  - uid: Steeltoe.CircuitBreaker.Hystrix.IHystrixExecutable`1.ExecuteAsync
    name: ExecuteAsync
    nameWithType: IHystrixExecutable<RequestResponseType>.ExecuteAsync
    fullName: Steeltoe.CircuitBreaker.Hystrix.IHystrixExecutable<RequestResponseType>.ExecuteAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.CircuitBreaker.Hystrix.IHystrixExecutable`1.ExecuteAsync
    name: ExecuteAsync
    nameWithType: IHystrixExecutable(Of RequestResponseType).ExecuteAsync
    fullName: Steeltoe.CircuitBreaker.Hystrix.IHystrixExecutable(Of RequestResponseType).ExecuteAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task{{RequestResponseType}}
  commentId: T:System.Threading.Tasks.Task{`1}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<RequestResponseType>
  nameWithType: Task<RequestResponseType>
  fullName: System.Threading.Tasks.Task<RequestResponseType>
  nameWithType.vb: Task(Of RequestResponseType)
  fullName.vb: System.Threading.Tasks.Task(Of RequestResponseType)
  name.vb: Task(Of RequestResponseType)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: RequestResponseType
    nameWithType: RequestResponseType
    fullName: RequestResponseType
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: RequestResponseType
    nameWithType: RequestResponseType
    fullName: RequestResponseType
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.CircuitBreaker.Hystrix.IHystrixExecutable`1.ExecuteAsync
  commentId: M:Steeltoe.CircuitBreaker.Hystrix.IHystrixExecutable`1.ExecuteAsync
  name: ExecuteAsync()
  nameWithType: IHystrixExecutable<TResult>.ExecuteAsync()
  fullName: Steeltoe.CircuitBreaker.Hystrix.IHystrixExecutable<TResult>.ExecuteAsync()
  nameWithType.vb: IHystrixExecutable(Of TResult).ExecuteAsync()
  fullName.vb: Steeltoe.CircuitBreaker.Hystrix.IHystrixExecutable(Of TResult).ExecuteAsync()
  spec.csharp:
  - uid: Steeltoe.CircuitBreaker.Hystrix.IHystrixExecutable`1.ExecuteAsync
    name: ExecuteAsync
    nameWithType: IHystrixExecutable<TResult>.ExecuteAsync
    fullName: Steeltoe.CircuitBreaker.Hystrix.IHystrixExecutable<TResult>.ExecuteAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.CircuitBreaker.Hystrix.IHystrixExecutable`1.ExecuteAsync
    name: ExecuteAsync
    nameWithType: IHystrixExecutable(Of TResult).ExecuteAsync
    fullName: Steeltoe.CircuitBreaker.Hystrix.IHystrixExecutable(Of TResult).ExecuteAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: Steeltoe.CircuitBreaker.Hystrix.HystrixCollapser`3.ToTask*
  commentId: Overload:Steeltoe.CircuitBreaker.Hystrix.HystrixCollapser`3.ToTask
  name: ToTask
  nameWithType: HystrixCollapser<BatchReturnType, RequestResponseType, RequestArgumentType>.ToTask
  fullName: Steeltoe.CircuitBreaker.Hystrix.HystrixCollapser<BatchReturnType, RequestResponseType, RequestArgumentType>.ToTask
  nameWithType.vb: HystrixCollapser(Of BatchReturnType, RequestResponseType, RequestArgumentType).ToTask
  fullName.vb: Steeltoe.CircuitBreaker.Hystrix.HystrixCollapser(Of BatchReturnType, RequestResponseType, RequestArgumentType).ToTask
- uid: Steeltoe.CircuitBreaker.Hystrix.HystrixCollapser`3.Observe*
  commentId: Overload:Steeltoe.CircuitBreaker.Hystrix.HystrixCollapser`3.Observe
  name: Observe
  nameWithType: HystrixCollapser<BatchReturnType, RequestResponseType, RequestArgumentType>.Observe
  fullName: Steeltoe.CircuitBreaker.Hystrix.HystrixCollapser<BatchReturnType, RequestResponseType, RequestArgumentType>.Observe
  nameWithType.vb: HystrixCollapser(Of BatchReturnType, RequestResponseType, RequestArgumentType).Observe
  fullName.vb: Steeltoe.CircuitBreaker.Hystrix.HystrixCollapser(Of BatchReturnType, RequestResponseType, RequestArgumentType).Observe
- uid: Steeltoe.CircuitBreaker.Hystrix.IHystrixObservable{{RequestResponseType}}.Observe
  commentId: M:Steeltoe.CircuitBreaker.Hystrix.IHystrixObservable{`1}.Observe
  parent: Steeltoe.CircuitBreaker.Hystrix.IHystrixObservable{{RequestResponseType}}
  definition: Steeltoe.CircuitBreaker.Hystrix.IHystrixObservable`1.Observe
  name: Observe()
  nameWithType: IHystrixObservable<RequestResponseType>.Observe()
  fullName: Steeltoe.CircuitBreaker.Hystrix.IHystrixObservable<RequestResponseType>.Observe()
  nameWithType.vb: IHystrixObservable(Of RequestResponseType).Observe()
  fullName.vb: Steeltoe.CircuitBreaker.Hystrix.IHystrixObservable(Of RequestResponseType).Observe()
  spec.csharp:
  - uid: Steeltoe.CircuitBreaker.Hystrix.IHystrixObservable`1.Observe
    name: Observe
    nameWithType: IHystrixObservable<RequestResponseType>.Observe
    fullName: Steeltoe.CircuitBreaker.Hystrix.IHystrixObservable<RequestResponseType>.Observe
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.CircuitBreaker.Hystrix.IHystrixObservable`1.Observe
    name: Observe
    nameWithType: IHystrixObservable(Of RequestResponseType).Observe
    fullName: Steeltoe.CircuitBreaker.Hystrix.IHystrixObservable(Of RequestResponseType).Observe
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IObservable{{RequestResponseType}}
  commentId: T:System.IObservable{`1}
  parent: System
  definition: System.IObservable`1
  name: IObservable<RequestResponseType>
  nameWithType: IObservable<RequestResponseType>
  fullName: System.IObservable<RequestResponseType>
  nameWithType.vb: IObservable(Of RequestResponseType)
  fullName.vb: System.IObservable(Of RequestResponseType)
  name.vb: IObservable(Of RequestResponseType)
  spec.csharp:
  - uid: System.IObservable`1
    name: IObservable
    nameWithType: IObservable
    fullName: System.IObservable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: RequestResponseType
    nameWithType: RequestResponseType
    fullName: RequestResponseType
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IObservable`1
    name: IObservable
    nameWithType: IObservable
    fullName: System.IObservable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: RequestResponseType
    nameWithType: RequestResponseType
    fullName: RequestResponseType
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.CircuitBreaker.Hystrix.IHystrixObservable`1.Observe
  commentId: M:Steeltoe.CircuitBreaker.Hystrix.IHystrixObservable`1.Observe
  name: Observe()
  nameWithType: IHystrixObservable<TResult>.Observe()
  fullName: Steeltoe.CircuitBreaker.Hystrix.IHystrixObservable<TResult>.Observe()
  nameWithType.vb: IHystrixObservable(Of TResult).Observe()
  fullName.vb: Steeltoe.CircuitBreaker.Hystrix.IHystrixObservable(Of TResult).Observe()
  spec.csharp:
  - uid: Steeltoe.CircuitBreaker.Hystrix.IHystrixObservable`1.Observe
    name: Observe
    nameWithType: IHystrixObservable<TResult>.Observe
    fullName: Steeltoe.CircuitBreaker.Hystrix.IHystrixObservable<TResult>.Observe
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.CircuitBreaker.Hystrix.IHystrixObservable`1.Observe
    name: Observe
    nameWithType: IHystrixObservable(Of TResult).Observe
    fullName: Steeltoe.CircuitBreaker.Hystrix.IHystrixObservable(Of TResult).Observe
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IObservable`1
  commentId: T:System.IObservable`1
  isExternal: true
  name: IObservable<T>
  nameWithType: IObservable<T>
  fullName: System.IObservable<T>
  nameWithType.vb: IObservable(Of T)
  fullName.vb: System.IObservable(Of T)
  name.vb: IObservable(Of T)
  spec.csharp:
  - uid: System.IObservable`1
    name: IObservable
    nameWithType: IObservable
    fullName: System.IObservable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IObservable`1
    name: IObservable
    nameWithType: IObservable
    fullName: System.IObservable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.CircuitBreaker.Hystrix.HystrixCollapser`3.ToObservable*
  commentId: Overload:Steeltoe.CircuitBreaker.Hystrix.HystrixCollapser`3.ToObservable
  name: ToObservable
  nameWithType: HystrixCollapser<BatchReturnType, RequestResponseType, RequestArgumentType>.ToObservable
  fullName: Steeltoe.CircuitBreaker.Hystrix.HystrixCollapser<BatchReturnType, RequestResponseType, RequestArgumentType>.ToObservable
  nameWithType.vb: HystrixCollapser(Of BatchReturnType, RequestResponseType, RequestArgumentType).ToObservable
  fullName.vb: Steeltoe.CircuitBreaker.Hystrix.HystrixCollapser(Of BatchReturnType, RequestResponseType, RequestArgumentType).ToObservable
- uid: Steeltoe.CircuitBreaker.Hystrix.IHystrixObservable{{RequestResponseType}}.ToObservable
  commentId: M:Steeltoe.CircuitBreaker.Hystrix.IHystrixObservable{`1}.ToObservable
  parent: Steeltoe.CircuitBreaker.Hystrix.IHystrixObservable{{RequestResponseType}}
  definition: Steeltoe.CircuitBreaker.Hystrix.IHystrixObservable`1.ToObservable
  name: ToObservable()
  nameWithType: IHystrixObservable<RequestResponseType>.ToObservable()
  fullName: Steeltoe.CircuitBreaker.Hystrix.IHystrixObservable<RequestResponseType>.ToObservable()
  nameWithType.vb: IHystrixObservable(Of RequestResponseType).ToObservable()
  fullName.vb: Steeltoe.CircuitBreaker.Hystrix.IHystrixObservable(Of RequestResponseType).ToObservable()
  spec.csharp:
  - uid: Steeltoe.CircuitBreaker.Hystrix.IHystrixObservable`1.ToObservable
    name: ToObservable
    nameWithType: IHystrixObservable<RequestResponseType>.ToObservable
    fullName: Steeltoe.CircuitBreaker.Hystrix.IHystrixObservable<RequestResponseType>.ToObservable
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.CircuitBreaker.Hystrix.IHystrixObservable`1.ToObservable
    name: ToObservable
    nameWithType: IHystrixObservable(Of RequestResponseType).ToObservable
    fullName: Steeltoe.CircuitBreaker.Hystrix.IHystrixObservable(Of RequestResponseType).ToObservable
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.CircuitBreaker.Hystrix.IHystrixObservable`1.ToObservable
  commentId: M:Steeltoe.CircuitBreaker.Hystrix.IHystrixObservable`1.ToObservable
  name: ToObservable()
  nameWithType: IHystrixObservable<TResult>.ToObservable()
  fullName: Steeltoe.CircuitBreaker.Hystrix.IHystrixObservable<TResult>.ToObservable()
  nameWithType.vb: IHystrixObservable(Of TResult).ToObservable()
  fullName.vb: Steeltoe.CircuitBreaker.Hystrix.IHystrixObservable(Of TResult).ToObservable()
  spec.csharp:
  - uid: Steeltoe.CircuitBreaker.Hystrix.IHystrixObservable`1.ToObservable
    name: ToObservable
    nameWithType: IHystrixObservable<TResult>.ToObservable
    fullName: Steeltoe.CircuitBreaker.Hystrix.IHystrixObservable<TResult>.ToObservable
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.CircuitBreaker.Hystrix.IHystrixObservable`1.ToObservable
    name: ToObservable
    nameWithType: IHystrixObservable(Of TResult).ToObservable
    fullName: Steeltoe.CircuitBreaker.Hystrix.IHystrixObservable(Of TResult).ToObservable
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.CircuitBreaker.Hystrix.HystrixCollapser`3.CreateCommand*
  commentId: Overload:Steeltoe.CircuitBreaker.Hystrix.HystrixCollapser`3.CreateCommand
  name: CreateCommand
  nameWithType: HystrixCollapser<BatchReturnType, RequestResponseType, RequestArgumentType>.CreateCommand
  fullName: Steeltoe.CircuitBreaker.Hystrix.HystrixCollapser<BatchReturnType, RequestResponseType, RequestArgumentType>.CreateCommand
  nameWithType.vb: HystrixCollapser(Of BatchReturnType, RequestResponseType, RequestArgumentType).CreateCommand
  fullName.vb: Steeltoe.CircuitBreaker.Hystrix.HystrixCollapser(Of BatchReturnType, RequestResponseType, RequestArgumentType).CreateCommand
- uid: System.Collections.Generic.ICollection{Steeltoe.CircuitBreaker.ICollapsedRequest{{RequestResponseType},{RequestArgumentType}}}
  commentId: T:System.Collections.Generic.ICollection{Steeltoe.CircuitBreaker.ICollapsedRequest{`1,`2}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.ICollection`1
  name: ICollection<ICollapsedRequest<RequestResponseType, RequestArgumentType>>
  nameWithType: ICollection<ICollapsedRequest<RequestResponseType, RequestArgumentType>>
  fullName: System.Collections.Generic.ICollection<Steeltoe.CircuitBreaker.ICollapsedRequest<RequestResponseType, RequestArgumentType>>
  nameWithType.vb: ICollection(Of ICollapsedRequest(Of RequestResponseType, RequestArgumentType))
  fullName.vb: System.Collections.Generic.ICollection(Of Steeltoe.CircuitBreaker.ICollapsedRequest(Of RequestResponseType, RequestArgumentType))
  name.vb: ICollection(Of ICollapsedRequest(Of RequestResponseType, RequestArgumentType))
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Steeltoe.CircuitBreaker.ICollapsedRequest`2
    name: ICollapsedRequest
    nameWithType: ICollapsedRequest
    fullName: Steeltoe.CircuitBreaker.ICollapsedRequest
  - name: <
    nameWithType: <
    fullName: <
  - name: RequestResponseType
    nameWithType: RequestResponseType
    fullName: RequestResponseType
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: RequestArgumentType
    nameWithType: RequestArgumentType
    fullName: RequestArgumentType
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Steeltoe.CircuitBreaker.ICollapsedRequest`2
    name: ICollapsedRequest
    nameWithType: ICollapsedRequest
    fullName: Steeltoe.CircuitBreaker.ICollapsedRequest
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: RequestResponseType
    nameWithType: RequestResponseType
    fullName: RequestResponseType
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: RequestArgumentType
    nameWithType: RequestArgumentType
    fullName: RequestArgumentType
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.CircuitBreaker.Hystrix.HystrixCommand{{BatchReturnType}}
  commentId: T:Steeltoe.CircuitBreaker.Hystrix.HystrixCommand{`0}
  parent: Steeltoe.CircuitBreaker.Hystrix
  definition: Steeltoe.CircuitBreaker.Hystrix.HystrixCommand`1
  name: HystrixCommand<BatchReturnType>
  nameWithType: HystrixCommand<BatchReturnType>
  fullName: Steeltoe.CircuitBreaker.Hystrix.HystrixCommand<BatchReturnType>
  nameWithType.vb: HystrixCommand(Of BatchReturnType)
  fullName.vb: Steeltoe.CircuitBreaker.Hystrix.HystrixCommand(Of BatchReturnType)
  name.vb: HystrixCommand(Of BatchReturnType)
  spec.csharp:
  - uid: Steeltoe.CircuitBreaker.Hystrix.HystrixCommand`1
    name: HystrixCommand
    nameWithType: HystrixCommand
    fullName: Steeltoe.CircuitBreaker.Hystrix.HystrixCommand
  - name: <
    nameWithType: <
    fullName: <
  - name: BatchReturnType
    nameWithType: BatchReturnType
    fullName: BatchReturnType
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Steeltoe.CircuitBreaker.Hystrix.HystrixCommand`1
    name: HystrixCommand
    nameWithType: HystrixCommand
    fullName: Steeltoe.CircuitBreaker.Hystrix.HystrixCommand
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: BatchReturnType
    nameWithType: BatchReturnType
    fullName: BatchReturnType
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.ICollection`1
  commentId: T:System.Collections.Generic.ICollection`1
  isExternal: true
  name: ICollection<T>
  nameWithType: ICollection<T>
  fullName: System.Collections.Generic.ICollection<T>
  nameWithType.vb: ICollection(Of T)
  fullName.vb: System.Collections.Generic.ICollection(Of T)
  name.vb: ICollection(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Steeltoe.CircuitBreaker.Hystrix.HystrixCommand`1
  commentId: T:Steeltoe.CircuitBreaker.Hystrix.HystrixCommand`1
  name: HystrixCommand<TResult>
  nameWithType: HystrixCommand<TResult>
  fullName: Steeltoe.CircuitBreaker.Hystrix.HystrixCommand<TResult>
  nameWithType.vb: HystrixCommand(Of TResult)
  fullName.vb: Steeltoe.CircuitBreaker.Hystrix.HystrixCommand(Of TResult)
  name.vb: HystrixCommand(Of TResult)
  spec.csharp:
  - uid: Steeltoe.CircuitBreaker.Hystrix.HystrixCommand`1
    name: HystrixCommand
    nameWithType: HystrixCommand
    fullName: Steeltoe.CircuitBreaker.Hystrix.HystrixCommand
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Steeltoe.CircuitBreaker.Hystrix.HystrixCommand`1
    name: HystrixCommand
    nameWithType: HystrixCommand
    fullName: Steeltoe.CircuitBreaker.Hystrix.HystrixCommand
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.CircuitBreaker.Hystrix.HystrixCollapser`3.MapResponseToRequests*
  commentId: Overload:Steeltoe.CircuitBreaker.Hystrix.HystrixCollapser`3.MapResponseToRequests
  name: MapResponseToRequests
  nameWithType: HystrixCollapser<BatchReturnType, RequestResponseType, RequestArgumentType>.MapResponseToRequests
  fullName: Steeltoe.CircuitBreaker.Hystrix.HystrixCollapser<BatchReturnType, RequestResponseType, RequestArgumentType>.MapResponseToRequests
  nameWithType.vb: HystrixCollapser(Of BatchReturnType, RequestResponseType, RequestArgumentType).MapResponseToRequests
  fullName.vb: Steeltoe.CircuitBreaker.Hystrix.HystrixCollapser(Of BatchReturnType, RequestResponseType, RequestArgumentType).MapResponseToRequests
- uid: '{BatchReturnType}'
  commentId: '!:BatchReturnType'
  definition: BatchReturnType
  name: BatchReturnType
  nameWithType: BatchReturnType
  fullName: BatchReturnType
- uid: BatchReturnType
  commentId: '!:BatchReturnType'
  name: BatchReturnType
  nameWithType: BatchReturnType
  fullName: BatchReturnType
- uid: Steeltoe.CircuitBreaker.Hystrix.HystrixCollapser`3.ShardRequests*
  commentId: Overload:Steeltoe.CircuitBreaker.Hystrix.HystrixCollapser`3.ShardRequests
  name: ShardRequests
  nameWithType: HystrixCollapser<BatchReturnType, RequestResponseType, RequestArgumentType>.ShardRequests
  fullName: Steeltoe.CircuitBreaker.Hystrix.HystrixCollapser<BatchReturnType, RequestResponseType, RequestArgumentType>.ShardRequests
  nameWithType.vb: HystrixCollapser(Of BatchReturnType, RequestResponseType, RequestArgumentType).ShardRequests
  fullName.vb: Steeltoe.CircuitBreaker.Hystrix.HystrixCollapser(Of BatchReturnType, RequestResponseType, RequestArgumentType).ShardRequests
- uid: System.Collections.Generic.ICollection{System.Collections.Generic.ICollection{Steeltoe.CircuitBreaker.ICollapsedRequest{{RequestResponseType},{RequestArgumentType}}}}
  commentId: T:System.Collections.Generic.ICollection{System.Collections.Generic.ICollection{Steeltoe.CircuitBreaker.ICollapsedRequest{`1,`2}}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.ICollection`1
  name: ICollection<ICollection<ICollapsedRequest<RequestResponseType, RequestArgumentType>>>
  nameWithType: ICollection<ICollection<ICollapsedRequest<RequestResponseType, RequestArgumentType>>>
  fullName: System.Collections.Generic.ICollection<System.Collections.Generic.ICollection<Steeltoe.CircuitBreaker.ICollapsedRequest<RequestResponseType, RequestArgumentType>>>
  nameWithType.vb: ICollection(Of ICollection(Of ICollapsedRequest(Of RequestResponseType, RequestArgumentType)))
  fullName.vb: System.Collections.Generic.ICollection(Of System.Collections.Generic.ICollection(Of Steeltoe.CircuitBreaker.ICollapsedRequest(Of RequestResponseType, RequestArgumentType)))
  name.vb: ICollection(Of ICollection(Of ICollapsedRequest(Of RequestResponseType, RequestArgumentType)))
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Steeltoe.CircuitBreaker.ICollapsedRequest`2
    name: ICollapsedRequest
    nameWithType: ICollapsedRequest
    fullName: Steeltoe.CircuitBreaker.ICollapsedRequest
  - name: <
    nameWithType: <
    fullName: <
  - name: RequestResponseType
    nameWithType: RequestResponseType
    fullName: RequestResponseType
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: RequestArgumentType
    nameWithType: RequestArgumentType
    fullName: RequestArgumentType
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Steeltoe.CircuitBreaker.ICollapsedRequest`2
    name: ICollapsedRequest
    nameWithType: ICollapsedRequest
    fullName: Steeltoe.CircuitBreaker.ICollapsedRequest
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: RequestResponseType
    nameWithType: RequestResponseType
    fullName: RequestResponseType
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: RequestArgumentType
    nameWithType: RequestArgumentType
    fullName: RequestArgumentType
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.CircuitBreaker.Hystrix.HystrixCollapser`3.AddCacheEntryIfAbsent*
  commentId: Overload:Steeltoe.CircuitBreaker.Hystrix.HystrixCollapser`3.AddCacheEntryIfAbsent
  name: AddCacheEntryIfAbsent
  nameWithType: HystrixCollapser<BatchReturnType, RequestResponseType, RequestArgumentType>.AddCacheEntryIfAbsent
  fullName: Steeltoe.CircuitBreaker.Hystrix.HystrixCollapser<BatchReturnType, RequestResponseType, RequestArgumentType>.AddCacheEntryIfAbsent
  nameWithType.vb: HystrixCollapser(Of BatchReturnType, RequestResponseType, RequestArgumentType).AddCacheEntryIfAbsent
  fullName.vb: Steeltoe.CircuitBreaker.Hystrix.HystrixCollapser(Of BatchReturnType, RequestResponseType, RequestArgumentType).AddCacheEntryIfAbsent
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Steeltoe.CircuitBreaker.Hystrix.HystrixCachedTask{{RequestResponseType}}
  commentId: T:Steeltoe.CircuitBreaker.Hystrix.HystrixCachedTask{`1}
  parent: Steeltoe.CircuitBreaker.Hystrix
  definition: Steeltoe.CircuitBreaker.Hystrix.HystrixCachedTask`1
  name: HystrixCachedTask<RequestResponseType>
  nameWithType: HystrixCachedTask<RequestResponseType>
  fullName: Steeltoe.CircuitBreaker.Hystrix.HystrixCachedTask<RequestResponseType>
  nameWithType.vb: HystrixCachedTask(Of RequestResponseType)
  fullName.vb: Steeltoe.CircuitBreaker.Hystrix.HystrixCachedTask(Of RequestResponseType)
  name.vb: HystrixCachedTask(Of RequestResponseType)
  spec.csharp:
  - uid: Steeltoe.CircuitBreaker.Hystrix.HystrixCachedTask`1
    name: HystrixCachedTask
    nameWithType: HystrixCachedTask
    fullName: Steeltoe.CircuitBreaker.Hystrix.HystrixCachedTask
  - name: <
    nameWithType: <
    fullName: <
  - name: RequestResponseType
    nameWithType: RequestResponseType
    fullName: RequestResponseType
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Steeltoe.CircuitBreaker.Hystrix.HystrixCachedTask`1
    name: HystrixCachedTask
    nameWithType: HystrixCachedTask
    fullName: Steeltoe.CircuitBreaker.Hystrix.HystrixCachedTask
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: RequestResponseType
    nameWithType: RequestResponseType
    fullName: RequestResponseType
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Steeltoe.CircuitBreaker.Hystrix.HystrixCachedTask`1
  commentId: T:Steeltoe.CircuitBreaker.Hystrix.HystrixCachedTask`1
  name: HystrixCachedTask<T>
  nameWithType: HystrixCachedTask<T>
  fullName: Steeltoe.CircuitBreaker.Hystrix.HystrixCachedTask<T>
  nameWithType.vb: HystrixCachedTask(Of T)
  fullName.vb: Steeltoe.CircuitBreaker.Hystrix.HystrixCachedTask(Of T)
  name.vb: HystrixCachedTask(Of T)
  spec.csharp:
  - uid: Steeltoe.CircuitBreaker.Hystrix.HystrixCachedTask`1
    name: HystrixCachedTask
    nameWithType: HystrixCachedTask
    fullName: Steeltoe.CircuitBreaker.Hystrix.HystrixCachedTask
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Steeltoe.CircuitBreaker.Hystrix.HystrixCachedTask`1
    name: HystrixCachedTask
    nameWithType: HystrixCachedTask
    fullName: Steeltoe.CircuitBreaker.Hystrix.HystrixCachedTask
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.CircuitBreaker.Hystrix.HystrixCollapser`3.CacheKey*
  commentId: Overload:Steeltoe.CircuitBreaker.Hystrix.HystrixCollapser`3.CacheKey
  name: CacheKey
  nameWithType: HystrixCollapser<BatchReturnType, RequestResponseType, RequestArgumentType>.CacheKey
  fullName: Steeltoe.CircuitBreaker.Hystrix.HystrixCollapser<BatchReturnType, RequestResponseType, RequestArgumentType>.CacheKey
  nameWithType.vb: HystrixCollapser(Of BatchReturnType, RequestResponseType, RequestArgumentType).CacheKey
  fullName.vb: Steeltoe.CircuitBreaker.Hystrix.HystrixCollapser(Of BatchReturnType, RequestResponseType, RequestArgumentType).CacheKey
- uid: Steeltoe.CircuitBreaker.Hystrix.HystrixCollapser`3.DecomposeException*
  commentId: Overload:Steeltoe.CircuitBreaker.Hystrix.HystrixCollapser`3.DecomposeException
  name: DecomposeException
  nameWithType: HystrixCollapser<BatchReturnType, RequestResponseType, RequestArgumentType>.DecomposeException
  fullName: Steeltoe.CircuitBreaker.Hystrix.HystrixCollapser<BatchReturnType, RequestResponseType, RequestArgumentType>.DecomposeException
  nameWithType.vb: HystrixCollapser(Of BatchReturnType, RequestResponseType, RequestArgumentType).DecomposeException
  fullName.vb: Steeltoe.CircuitBreaker.Hystrix.HystrixCollapser(Of BatchReturnType, RequestResponseType, RequestArgumentType).DecomposeException
- uid: System.Exception
  commentId: T:System.Exception
  parent: System
  isExternal: true
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
