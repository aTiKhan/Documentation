### YamlMime:ManagedReference
items:
- uid: Steeltoe.Messaging.IMessageHeaders
  commentId: T:Steeltoe.Messaging.IMessageHeaders
  id: IMessageHeaders
  parent: Steeltoe.Messaging
  children:
  - Steeltoe.Messaging.IMessageHeaders.ErrorChannel
  - Steeltoe.Messaging.IMessageHeaders.Get``1(System.String)
  - Steeltoe.Messaging.IMessageHeaders.Id
  - Steeltoe.Messaging.IMessageHeaders.ReplyChannel
  - Steeltoe.Messaging.IMessageHeaders.Timestamp
  langs:
  - csharp
  - vb
  name: IMessageHeaders
  nameWithType: IMessageHeaders
  fullName: Steeltoe.Messaging.IMessageHeaders
  type: Interface
  source:
    remote:
      path: src/Messaging/src/Abstractions/IMessageHeaders.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: IMessageHeaders
    path: ../Steeltoe/src/Messaging/src/Abstractions/IMessageHeaders.cs
    startLine: 12
  assemblies:
  - Steeltoe.Messaging.Abstractions
  namespace: Steeltoe.Messaging
  summary: "\nThe headers for a message\n"
  example: []
  syntax:
    content: 'public interface IMessageHeaders : IDictionary<string, object>, ICollection<KeyValuePair<string, object>>, IEnumerable<KeyValuePair<string, object>>, IEnumerable'
    content.vb: >-
      Public Interface IMessageHeaders

          Inherits IDictionary(Of String, Object)
  inheritedMembers:
  - System.Collections.Generic.IDictionary{System.String,System.Object}.Add(System.String,System.Object)
  - System.Collections.Generic.IDictionary{System.String,System.Object}.ContainsKey(System.String)
  - System.Collections.Generic.IDictionary{System.String,System.Object}.Remove(System.String)
  - System.Collections.Generic.IDictionary{System.String,System.Object}.TryGetValue(System.String,System.Object@)
  - System.Collections.Generic.IDictionary{System.String,System.Object}.Item(System.String)
  - System.Collections.Generic.IDictionary{System.String,System.Object}.Keys
  - System.Collections.Generic.IDictionary{System.String,System.Object}.Values
  - System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{System.String,System.Object}}.Add(System.Collections.Generic.KeyValuePair{System.String,System.Object})
  - System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{System.String,System.Object}}.Clear
  - System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{System.String,System.Object}}.Contains(System.Collections.Generic.KeyValuePair{System.String,System.Object})
  - System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{System.String,System.Object}}.CopyTo(System.Collections.Generic.KeyValuePair{System.String,System.Object}[],System.Int32)
  - System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{System.String,System.Object}}.Remove(System.Collections.Generic.KeyValuePair{System.String,System.Object})
  - System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{System.String,System.Object}}.Count
  - System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{System.String,System.Object}}.IsReadOnly
  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Object}}.GetEnumerator
  - System.Collections.IEnumerable.GetEnumerator
  extensionMethods:
  - Steeltoe.Messaging.IMessageHeaders.Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.AppId
  - Steeltoe.Messaging.IMessageHeaders.Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.ClusterId
  - Steeltoe.Messaging.IMessageHeaders.Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.ConsumerQueue
  - Steeltoe.Messaging.IMessageHeaders.Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.ConsumerTag
  - Steeltoe.Messaging.IMessageHeaders.Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.ContentEncoding
  - Steeltoe.Messaging.IMessageHeaders.Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.ContentLength
  - Steeltoe.Messaging.IMessageHeaders.Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.IsContentLengthSet
  - Steeltoe.Messaging.IMessageHeaders.Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.ContentType
  - Steeltoe.Messaging.IMessageHeaders.Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.CorrelationId
  - Steeltoe.Messaging.IMessageHeaders.Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.Delay
  - Steeltoe.Messaging.IMessageHeaders.Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.DeliveryMode
  - Steeltoe.Messaging.IMessageHeaders.Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.DeliveryTag
  - Steeltoe.Messaging.IMessageHeaders.Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.IsDeliveryTagSet
  - Steeltoe.Messaging.IMessageHeaders.Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.Expiration
  - Steeltoe.Messaging.IMessageHeaders.Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.InferredArgumentType
  - Steeltoe.Messaging.IMessageHeaders.Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.MessageCount
  - Steeltoe.Messaging.IMessageHeaders.Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.MessageId
  - Steeltoe.Messaging.IMessageHeaders.Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.Priority
  - Steeltoe.Messaging.IMessageHeaders.Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.PublishSequenceNumber
  - Steeltoe.Messaging.IMessageHeaders.Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.ReceivedDelay
  - Steeltoe.Messaging.IMessageHeaders.Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.ReceivedDeliveryMode
  - Steeltoe.Messaging.IMessageHeaders.Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.ReceivedExchange
  - Steeltoe.Messaging.IMessageHeaders.Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.ReceivedRoutingKey
  - Steeltoe.Messaging.IMessageHeaders.Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.ReceivedUserId
  - Steeltoe.Messaging.IMessageHeaders.Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.Redelivered
  - Steeltoe.Messaging.IMessageHeaders.Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.ReplyTo
  - Steeltoe.Messaging.IMessageHeaders.Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.ReplyToAddress
  - Steeltoe.Messaging.IMessageHeaders.Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.Target
  - Steeltoe.Messaging.IMessageHeaders.Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.TargetMethod
  - Steeltoe.Messaging.IMessageHeaders.Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.Timestamp
  - Steeltoe.Messaging.IMessageHeaders.Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.Type
  - Steeltoe.Messaging.IMessageHeaders.Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.UserId
  - Steeltoe.Messaging.IMessageHeaders.Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.FinalRetryForMessageWithNoId
  - Steeltoe.Messaging.IMessageHeaders.Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.IsFinalRetryForMessageWithNoId
  - Steeltoe.Messaging.IMessageHeaders.Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.LastInBatch
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Steeltoe.Messaging.IMessageHeaders.Get``1(System.String)
  commentId: M:Steeltoe.Messaging.IMessageHeaders.Get``1(System.String)
  id: Get``1(System.String)
  parent: Steeltoe.Messaging.IMessageHeaders
  langs:
  - csharp
  - vb
  name: Get<T>(String)
  nameWithType: IMessageHeaders.Get<T>(String)
  fullName: Steeltoe.Messaging.IMessageHeaders.Get<T>(System.String)
  type: Method
  source:
    remote:
      path: src/Messaging/src/Abstractions/IMessageHeaders.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Get
    path: ../Steeltoe/src/Messaging/src/Abstractions/IMessageHeaders.cs
    startLine: 20
  assemblies:
  - Steeltoe.Messaging.Abstractions
  namespace: Steeltoe.Messaging
  summary: "\nGets a header value given its key\n"
  example: []
  syntax:
    content: T Get<T>(string key)
    parameters:
    - id: key
      type: System.String
      description: the name of the header
    typeParameters:
    - id: T
      description: the type of the value returned
    return:
      type: '{T}'
      description: the value or null if not found
    content.vb: Function Get(Of T)(key As String) As T
  overload: Steeltoe.Messaging.IMessageHeaders.Get*
  nameWithType.vb: IMessageHeaders.Get(Of T)(String)
  fullName.vb: Steeltoe.Messaging.IMessageHeaders.Get(Of T)(System.String)
  name.vb: Get(Of T)(String)
- uid: Steeltoe.Messaging.IMessageHeaders.Id
  commentId: P:Steeltoe.Messaging.IMessageHeaders.Id
  id: Id
  parent: Steeltoe.Messaging.IMessageHeaders
  langs:
  - csharp
  - vb
  name: Id
  nameWithType: IMessageHeaders.Id
  fullName: Steeltoe.Messaging.IMessageHeaders.Id
  type: Property
  source:
    remote:
      path: src/Messaging/src/Abstractions/IMessageHeaders.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Id
    path: ../Steeltoe/src/Messaging/src/Abstractions/IMessageHeaders.cs
    startLine: 25
  assemblies:
  - Steeltoe.Messaging.Abstractions
  namespace: Steeltoe.Messaging
  summary: "\nGets the ID header value\n"
  example: []
  syntax:
    content: string Id { get; }
    parameters: []
    return:
      type: System.String
    content.vb: ReadOnly Property Id As String
  overload: Steeltoe.Messaging.IMessageHeaders.Id*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Steeltoe.Messaging.IMessageHeaders.Timestamp
  commentId: P:Steeltoe.Messaging.IMessageHeaders.Timestamp
  id: Timestamp
  parent: Steeltoe.Messaging.IMessageHeaders
  langs:
  - csharp
  - vb
  name: Timestamp
  nameWithType: IMessageHeaders.Timestamp
  fullName: Steeltoe.Messaging.IMessageHeaders.Timestamp
  type: Property
  source:
    remote:
      path: src/Messaging/src/Abstractions/IMessageHeaders.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Timestamp
    path: ../Steeltoe/src/Messaging/src/Abstractions/IMessageHeaders.cs
    startLine: 30
  assemblies:
  - Steeltoe.Messaging.Abstractions
  namespace: Steeltoe.Messaging
  summary: "\nGets the timestamp header value\n"
  example: []
  syntax:
    content: long? Timestamp { get; }
    parameters: []
    return:
      type: System.Nullable{System.Int64}
    content.vb: ReadOnly Property Timestamp As Long?
  overload: Steeltoe.Messaging.IMessageHeaders.Timestamp*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Steeltoe.Messaging.IMessageHeaders.ReplyChannel
  commentId: P:Steeltoe.Messaging.IMessageHeaders.ReplyChannel
  id: ReplyChannel
  parent: Steeltoe.Messaging.IMessageHeaders
  langs:
  - csharp
  - vb
  name: ReplyChannel
  nameWithType: IMessageHeaders.ReplyChannel
  fullName: Steeltoe.Messaging.IMessageHeaders.ReplyChannel
  type: Property
  source:
    remote:
      path: src/Messaging/src/Abstractions/IMessageHeaders.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: ReplyChannel
    path: ../Steeltoe/src/Messaging/src/Abstractions/IMessageHeaders.cs
    startLine: 35
  assemblies:
  - Steeltoe.Messaging.Abstractions
  namespace: Steeltoe.Messaging
  summary: "\nGets the reply channel the message is for\n"
  example: []
  syntax:
    content: object ReplyChannel { get; }
    parameters: []
    return:
      type: System.Object
    content.vb: ReadOnly Property ReplyChannel As Object
  overload: Steeltoe.Messaging.IMessageHeaders.ReplyChannel*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Steeltoe.Messaging.IMessageHeaders.ErrorChannel
  commentId: P:Steeltoe.Messaging.IMessageHeaders.ErrorChannel
  id: ErrorChannel
  parent: Steeltoe.Messaging.IMessageHeaders
  langs:
  - csharp
  - vb
  name: ErrorChannel
  nameWithType: IMessageHeaders.ErrorChannel
  fullName: Steeltoe.Messaging.IMessageHeaders.ErrorChannel
  type: Property
  source:
    remote:
      path: src/Messaging/src/Abstractions/IMessageHeaders.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: ErrorChannel
    path: ../Steeltoe/src/Messaging/src/Abstractions/IMessageHeaders.cs
    startLine: 40
  assemblies:
  - Steeltoe.Messaging.Abstractions
  namespace: Steeltoe.Messaging
  summary: "\nGets the error channel the message is for\n"
  example: []
  syntax:
    content: object ErrorChannel { get; }
    parameters: []
    return:
      type: System.Object
    content.vb: ReadOnly Property ErrorChannel As Object
  overload: Steeltoe.Messaging.IMessageHeaders.ErrorChannel*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
references:
- uid: Steeltoe.Messaging
  commentId: N:Steeltoe.Messaging
  name: Steeltoe.Messaging
  nameWithType: Steeltoe.Messaging
  fullName: Steeltoe.Messaging
- uid: System.Collections.Generic.IDictionary{System.String,System.Object}.Add(System.String,System.Object)
  commentId: M:System.Collections.Generic.IDictionary{System.String,System.Object}.Add(System.String,System.Object)
  parent: System.Collections.Generic.IDictionary{System.String,System.Object}
  definition: System.Collections.Generic.IDictionary`2.Add(`0,`1)
  name: Add(String, Object)
  nameWithType: IDictionary<String, Object>.Add(String, Object)
  fullName: System.Collections.Generic.IDictionary<System.String, System.Object>.Add(System.String, System.Object)
  nameWithType.vb: IDictionary(Of String, Object).Add(String, Object)
  fullName.vb: System.Collections.Generic.IDictionary(Of System.String, System.Object).Add(System.String, System.Object)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2.Add(`0,`1)
    name: Add
    nameWithType: IDictionary<String, Object>.Add
    fullName: System.Collections.Generic.IDictionary<System.String, System.Object>.Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2.Add(`0,`1)
    name: Add
    nameWithType: IDictionary(Of String, Object).Add
    fullName: System.Collections.Generic.IDictionary(Of System.String, System.Object).Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IDictionary{System.String,System.Object}.ContainsKey(System.String)
  commentId: M:System.Collections.Generic.IDictionary{System.String,System.Object}.ContainsKey(System.String)
  parent: System.Collections.Generic.IDictionary{System.String,System.Object}
  definition: System.Collections.Generic.IDictionary`2.ContainsKey(`0)
  name: ContainsKey(String)
  nameWithType: IDictionary<String, Object>.ContainsKey(String)
  fullName: System.Collections.Generic.IDictionary<System.String, System.Object>.ContainsKey(System.String)
  nameWithType.vb: IDictionary(Of String, Object).ContainsKey(String)
  fullName.vb: System.Collections.Generic.IDictionary(Of System.String, System.Object).ContainsKey(System.String)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2.ContainsKey(`0)
    name: ContainsKey
    nameWithType: IDictionary<String, Object>.ContainsKey
    fullName: System.Collections.Generic.IDictionary<System.String, System.Object>.ContainsKey
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2.ContainsKey(`0)
    name: ContainsKey
    nameWithType: IDictionary(Of String, Object).ContainsKey
    fullName: System.Collections.Generic.IDictionary(Of System.String, System.Object).ContainsKey
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IDictionary{System.String,System.Object}.Remove(System.String)
  commentId: M:System.Collections.Generic.IDictionary{System.String,System.Object}.Remove(System.String)
  parent: System.Collections.Generic.IDictionary{System.String,System.Object}
  definition: System.Collections.Generic.IDictionary`2.Remove(`0)
  name: Remove(String)
  nameWithType: IDictionary<String, Object>.Remove(String)
  fullName: System.Collections.Generic.IDictionary<System.String, System.Object>.Remove(System.String)
  nameWithType.vb: IDictionary(Of String, Object).Remove(String)
  fullName.vb: System.Collections.Generic.IDictionary(Of System.String, System.Object).Remove(System.String)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2.Remove(`0)
    name: Remove
    nameWithType: IDictionary<String, Object>.Remove
    fullName: System.Collections.Generic.IDictionary<System.String, System.Object>.Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2.Remove(`0)
    name: Remove
    nameWithType: IDictionary(Of String, Object).Remove
    fullName: System.Collections.Generic.IDictionary(Of System.String, System.Object).Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IDictionary{System.String,System.Object}.TryGetValue(System.String,System.Object@)
  commentId: M:System.Collections.Generic.IDictionary{System.String,System.Object}.TryGetValue(System.String,System.Object@)
  parent: System.Collections.Generic.IDictionary{System.String,System.Object}
  definition: System.Collections.Generic.IDictionary`2.TryGetValue(`0,`1@)
  name: TryGetValue(String, Object)
  nameWithType: IDictionary<String, Object>.TryGetValue(String, Object)
  fullName: System.Collections.Generic.IDictionary<System.String, System.Object>.TryGetValue(System.String, System.Object)
  nameWithType.vb: IDictionary(Of String, Object).TryGetValue(String, Object)
  fullName.vb: System.Collections.Generic.IDictionary(Of System.String, System.Object).TryGetValue(System.String, System.Object)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2.TryGetValue(`0,`1@)
    name: TryGetValue
    nameWithType: IDictionary<String, Object>.TryGetValue
    fullName: System.Collections.Generic.IDictionary<System.String, System.Object>.TryGetValue
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2.TryGetValue(`0,`1@)
    name: TryGetValue
    nameWithType: IDictionary(Of String, Object).TryGetValue
    fullName: System.Collections.Generic.IDictionary(Of System.String, System.Object).TryGetValue
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IDictionary{System.String,System.Object}.Item(System.String)
  commentId: P:System.Collections.Generic.IDictionary{System.String,System.Object}.Item(System.String)
  parent: System.Collections.Generic.IDictionary{System.String,System.Object}
  definition: System.Collections.Generic.IDictionary`2.Item(`0)
  name: Item[String]
  nameWithType: IDictionary<String, Object>.Item[String]
  fullName: System.Collections.Generic.IDictionary<System.String, System.Object>.Item[System.String]
  nameWithType.vb: IDictionary(Of String, Object).Item(String)
  fullName.vb: System.Collections.Generic.IDictionary(Of System.String, System.Object).Item(System.String)
  name.vb: Item(String)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2.Item(`0)
    name: Item
    nameWithType: IDictionary<String, Object>.Item
    fullName: System.Collections.Generic.IDictionary<System.String, System.Object>.Item
    isExternal: true
  - name: '['
    nameWithType: '['
    fullName: '['
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ']'
    nameWithType: ']'
    fullName: ']'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2.Item(`0)
    name: Item
    nameWithType: IDictionary(Of String, Object).Item
    fullName: System.Collections.Generic.IDictionary(Of System.String, System.Object).Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IDictionary{System.String,System.Object}.Keys
  commentId: P:System.Collections.Generic.IDictionary{System.String,System.Object}.Keys
  parent: System.Collections.Generic.IDictionary{System.String,System.Object}
  definition: System.Collections.Generic.IDictionary`2.Keys
  name: Keys
  nameWithType: IDictionary<String, Object>.Keys
  fullName: System.Collections.Generic.IDictionary<System.String, System.Object>.Keys
  nameWithType.vb: IDictionary(Of String, Object).Keys
  fullName.vb: System.Collections.Generic.IDictionary(Of System.String, System.Object).Keys
- uid: System.Collections.Generic.IDictionary{System.String,System.Object}.Values
  commentId: P:System.Collections.Generic.IDictionary{System.String,System.Object}.Values
  parent: System.Collections.Generic.IDictionary{System.String,System.Object}
  definition: System.Collections.Generic.IDictionary`2.Values
  name: Values
  nameWithType: IDictionary<String, Object>.Values
  fullName: System.Collections.Generic.IDictionary<System.String, System.Object>.Values
  nameWithType.vb: IDictionary(Of String, Object).Values
  fullName.vb: System.Collections.Generic.IDictionary(Of System.String, System.Object).Values
- uid: System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{System.String,System.Object}}.Add(System.Collections.Generic.KeyValuePair{System.String,System.Object})
  commentId: M:System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{System.String,System.Object}}.Add(System.Collections.Generic.KeyValuePair{System.String,System.Object})
  parent: System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{System.String,System.Object}}
  definition: System.Collections.Generic.ICollection`1.Add(`0)
  name: Add(KeyValuePair<String, Object>)
  nameWithType: ICollection<KeyValuePair<String, Object>>.Add(KeyValuePair<String, Object>)
  fullName: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String, System.Object>>.Add(System.Collections.Generic.KeyValuePair<System.String, System.Object>)
  nameWithType.vb: ICollection(Of KeyValuePair(Of String, Object)).Add(KeyValuePair(Of String, Object))
  fullName.vb: System.Collections.Generic.ICollection(Of System.Collections.Generic.KeyValuePair(Of System.String, System.Object)).Add(System.Collections.Generic.KeyValuePair(Of System.String, System.Object))
  name.vb: Add(KeyValuePair(Of String, Object))
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.Add(`0)
    name: Add
    nameWithType: ICollection<KeyValuePair<String, Object>>.Add
    fullName: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String, System.Object>>.Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.Add(`0)
    name: Add
    nameWithType: ICollection(Of KeyValuePair(Of String, Object)).Add
    fullName: System.Collections.Generic.ICollection(Of System.Collections.Generic.KeyValuePair(Of System.String, System.Object)).Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{System.String,System.Object}}.Clear
  commentId: M:System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{System.String,System.Object}}.Clear
  parent: System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{System.String,System.Object}}
  definition: System.Collections.Generic.ICollection`1.Clear
  name: Clear()
  nameWithType: ICollection<KeyValuePair<String, Object>>.Clear()
  fullName: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String, System.Object>>.Clear()
  nameWithType.vb: ICollection(Of KeyValuePair(Of String, Object)).Clear()
  fullName.vb: System.Collections.Generic.ICollection(Of System.Collections.Generic.KeyValuePair(Of System.String, System.Object)).Clear()
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.Clear
    name: Clear
    nameWithType: ICollection<KeyValuePair<String, Object>>.Clear
    fullName: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String, System.Object>>.Clear
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.Clear
    name: Clear
    nameWithType: ICollection(Of KeyValuePair(Of String, Object)).Clear
    fullName: System.Collections.Generic.ICollection(Of System.Collections.Generic.KeyValuePair(Of System.String, System.Object)).Clear
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{System.String,System.Object}}.Contains(System.Collections.Generic.KeyValuePair{System.String,System.Object})
  commentId: M:System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{System.String,System.Object}}.Contains(System.Collections.Generic.KeyValuePair{System.String,System.Object})
  parent: System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{System.String,System.Object}}
  definition: System.Collections.Generic.ICollection`1.Contains(`0)
  name: Contains(KeyValuePair<String, Object>)
  nameWithType: ICollection<KeyValuePair<String, Object>>.Contains(KeyValuePair<String, Object>)
  fullName: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String, System.Object>>.Contains(System.Collections.Generic.KeyValuePair<System.String, System.Object>)
  nameWithType.vb: ICollection(Of KeyValuePair(Of String, Object)).Contains(KeyValuePair(Of String, Object))
  fullName.vb: System.Collections.Generic.ICollection(Of System.Collections.Generic.KeyValuePair(Of System.String, System.Object)).Contains(System.Collections.Generic.KeyValuePair(Of System.String, System.Object))
  name.vb: Contains(KeyValuePair(Of String, Object))
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.Contains(`0)
    name: Contains
    nameWithType: ICollection<KeyValuePair<String, Object>>.Contains
    fullName: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String, System.Object>>.Contains
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.Contains(`0)
    name: Contains
    nameWithType: ICollection(Of KeyValuePair(Of String, Object)).Contains
    fullName: System.Collections.Generic.ICollection(Of System.Collections.Generic.KeyValuePair(Of System.String, System.Object)).Contains
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{System.String,System.Object}}.CopyTo(System.Collections.Generic.KeyValuePair{System.String,System.Object}[],System.Int32)
  commentId: M:System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{System.String,System.Object}}.CopyTo(System.Collections.Generic.KeyValuePair{System.String,System.Object}[],System.Int32)
  parent: System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{System.String,System.Object}}
  definition: System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)
  name: CopyTo(KeyValuePair<String, Object>[], Int32)
  nameWithType: ICollection<KeyValuePair<String, Object>>.CopyTo(KeyValuePair<String, Object>[], Int32)
  fullName: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String, System.Object>>.CopyTo(System.Collections.Generic.KeyValuePair<System.String, System.Object>[], System.Int32)
  nameWithType.vb: ICollection(Of KeyValuePair(Of String, Object)).CopyTo(KeyValuePair(Of String, Object)(), Int32)
  fullName.vb: System.Collections.Generic.ICollection(Of System.Collections.Generic.KeyValuePair(Of System.String, System.Object)).CopyTo(System.Collections.Generic.KeyValuePair(Of System.String, System.Object)(), System.Int32)
  name.vb: CopyTo(KeyValuePair(Of String, Object)(), Int32)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)
    name: CopyTo
    nameWithType: ICollection<KeyValuePair<String, Object>>.CopyTo
    fullName: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String, System.Object>>.CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)
    name: CopyTo
    nameWithType: ICollection(Of KeyValuePair(Of String, Object)).CopyTo
    fullName: System.Collections.Generic.ICollection(Of System.Collections.Generic.KeyValuePair(Of System.String, System.Object)).CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{System.String,System.Object}}.Remove(System.Collections.Generic.KeyValuePair{System.String,System.Object})
  commentId: M:System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{System.String,System.Object}}.Remove(System.Collections.Generic.KeyValuePair{System.String,System.Object})
  parent: System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{System.String,System.Object}}
  definition: System.Collections.Generic.ICollection`1.Remove(`0)
  name: Remove(KeyValuePair<String, Object>)
  nameWithType: ICollection<KeyValuePair<String, Object>>.Remove(KeyValuePair<String, Object>)
  fullName: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String, System.Object>>.Remove(System.Collections.Generic.KeyValuePair<System.String, System.Object>)
  nameWithType.vb: ICollection(Of KeyValuePair(Of String, Object)).Remove(KeyValuePair(Of String, Object))
  fullName.vb: System.Collections.Generic.ICollection(Of System.Collections.Generic.KeyValuePair(Of System.String, System.Object)).Remove(System.Collections.Generic.KeyValuePair(Of System.String, System.Object))
  name.vb: Remove(KeyValuePair(Of String, Object))
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.Remove(`0)
    name: Remove
    nameWithType: ICollection<KeyValuePair<String, Object>>.Remove
    fullName: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String, System.Object>>.Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.Remove(`0)
    name: Remove
    nameWithType: ICollection(Of KeyValuePair(Of String, Object)).Remove
    fullName: System.Collections.Generic.ICollection(Of System.Collections.Generic.KeyValuePair(Of System.String, System.Object)).Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{System.String,System.Object}}.Count
  commentId: P:System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{System.String,System.Object}}.Count
  parent: System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{System.String,System.Object}}
  definition: System.Collections.Generic.ICollection`1.Count
  name: Count
  nameWithType: ICollection<KeyValuePair<String, Object>>.Count
  fullName: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String, System.Object>>.Count
  nameWithType.vb: ICollection(Of KeyValuePair(Of String, Object)).Count
  fullName.vb: System.Collections.Generic.ICollection(Of System.Collections.Generic.KeyValuePair(Of System.String, System.Object)).Count
- uid: System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{System.String,System.Object}}.IsReadOnly
  commentId: P:System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{System.String,System.Object}}.IsReadOnly
  parent: System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{System.String,System.Object}}
  definition: System.Collections.Generic.ICollection`1.IsReadOnly
  name: IsReadOnly
  nameWithType: ICollection<KeyValuePair<String, Object>>.IsReadOnly
  fullName: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String, System.Object>>.IsReadOnly
  nameWithType.vb: ICollection(Of KeyValuePair(Of String, Object)).IsReadOnly
  fullName.vb: System.Collections.Generic.ICollection(Of System.Collections.Generic.KeyValuePair(Of System.String, System.Object)).IsReadOnly
- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Object}}.GetEnumerator
  commentId: M:System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Object}}.GetEnumerator
  parent: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Object}}
  definition: System.Collections.Generic.IEnumerable`1.GetEnumerator
  name: GetEnumerator()
  nameWithType: IEnumerable<KeyValuePair<String, Object>>.GetEnumerator()
  fullName: System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.String, System.Object>>.GetEnumerator()
  nameWithType.vb: IEnumerable(Of KeyValuePair(Of String, Object)).GetEnumerator()
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.Collections.Generic.KeyValuePair(Of System.String, System.Object)).GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable<KeyValuePair<String, Object>>.GetEnumerator
    fullName: System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.String, System.Object>>.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable(Of KeyValuePair(Of String, Object)).GetEnumerator
    fullName: System.Collections.Generic.IEnumerable(Of System.Collections.Generic.KeyValuePair(Of System.String, System.Object)).GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.IEnumerable.GetEnumerator
  commentId: M:System.Collections.IEnumerable.GetEnumerator
  parent: System.Collections.IEnumerable
  isExternal: true
  name: GetEnumerator()
  nameWithType: IEnumerable.GetEnumerator()
  fullName: System.Collections.IEnumerable.GetEnumerator()
  spec.csharp:
  - uid: System.Collections.IEnumerable.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable.GetEnumerator
    fullName: System.Collections.IEnumerable.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.IEnumerable.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable.GetEnumerator
    fullName: System.Collections.IEnumerable.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.IMessageHeaders.Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.AppId
  commentId: M:Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.AppId(Steeltoe.Messaging.IMessageHeaders)
  parent: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions
  definition: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.AppId(Steeltoe.Messaging.IMessageHeaders)
  name: AppId()
  nameWithType: MessageHeaderExtensions.AppId()
  fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.AppId()
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.AppId
    name: AppId
    nameWithType: MessageHeaderExtensions.AppId
    fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.AppId
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.AppId
    name: AppId
    nameWithType: MessageHeaderExtensions.AppId
    fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.AppId
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.IMessageHeaders.Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.ClusterId
  commentId: M:Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.ClusterId(Steeltoe.Messaging.IMessageHeaders)
  parent: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions
  definition: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.ClusterId(Steeltoe.Messaging.IMessageHeaders)
  name: ClusterId()
  nameWithType: MessageHeaderExtensions.ClusterId()
  fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.ClusterId()
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.ClusterId
    name: ClusterId
    nameWithType: MessageHeaderExtensions.ClusterId
    fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.ClusterId
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.ClusterId
    name: ClusterId
    nameWithType: MessageHeaderExtensions.ClusterId
    fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.ClusterId
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.IMessageHeaders.Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.ConsumerQueue
  commentId: M:Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.ConsumerQueue(Steeltoe.Messaging.IMessageHeaders)
  parent: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions
  definition: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.ConsumerQueue(Steeltoe.Messaging.IMessageHeaders)
  name: ConsumerQueue()
  nameWithType: MessageHeaderExtensions.ConsumerQueue()
  fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.ConsumerQueue()
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.ConsumerQueue
    name: ConsumerQueue
    nameWithType: MessageHeaderExtensions.ConsumerQueue
    fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.ConsumerQueue
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.ConsumerQueue
    name: ConsumerQueue
    nameWithType: MessageHeaderExtensions.ConsumerQueue
    fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.ConsumerQueue
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.IMessageHeaders.Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.ConsumerTag
  commentId: M:Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.ConsumerTag(Steeltoe.Messaging.IMessageHeaders)
  parent: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions
  definition: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.ConsumerTag(Steeltoe.Messaging.IMessageHeaders)
  name: ConsumerTag()
  nameWithType: MessageHeaderExtensions.ConsumerTag()
  fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.ConsumerTag()
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.ConsumerTag
    name: ConsumerTag
    nameWithType: MessageHeaderExtensions.ConsumerTag
    fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.ConsumerTag
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.ConsumerTag
    name: ConsumerTag
    nameWithType: MessageHeaderExtensions.ConsumerTag
    fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.ConsumerTag
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.IMessageHeaders.Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.ContentEncoding
  commentId: M:Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.ContentEncoding(Steeltoe.Messaging.IMessageHeaders)
  parent: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions
  definition: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.ContentEncoding(Steeltoe.Messaging.IMessageHeaders)
  name: ContentEncoding()
  nameWithType: MessageHeaderExtensions.ContentEncoding()
  fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.ContentEncoding()
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.ContentEncoding
    name: ContentEncoding
    nameWithType: MessageHeaderExtensions.ContentEncoding
    fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.ContentEncoding
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.ContentEncoding
    name: ContentEncoding
    nameWithType: MessageHeaderExtensions.ContentEncoding
    fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.ContentEncoding
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.IMessageHeaders.Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.ContentLength
  commentId: M:Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.ContentLength(Steeltoe.Messaging.IMessageHeaders)
  parent: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions
  definition: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.ContentLength(Steeltoe.Messaging.IMessageHeaders)
  name: ContentLength()
  nameWithType: MessageHeaderExtensions.ContentLength()
  fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.ContentLength()
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.ContentLength
    name: ContentLength
    nameWithType: MessageHeaderExtensions.ContentLength
    fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.ContentLength
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.ContentLength
    name: ContentLength
    nameWithType: MessageHeaderExtensions.ContentLength
    fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.ContentLength
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.IMessageHeaders.Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.IsContentLengthSet
  commentId: M:Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.IsContentLengthSet(Steeltoe.Messaging.IMessageHeaders)
  parent: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions
  definition: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.IsContentLengthSet(Steeltoe.Messaging.IMessageHeaders)
  name: IsContentLengthSet()
  nameWithType: MessageHeaderExtensions.IsContentLengthSet()
  fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.IsContentLengthSet()
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.IsContentLengthSet
    name: IsContentLengthSet
    nameWithType: MessageHeaderExtensions.IsContentLengthSet
    fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.IsContentLengthSet
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.IsContentLengthSet
    name: IsContentLengthSet
    nameWithType: MessageHeaderExtensions.IsContentLengthSet
    fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.IsContentLengthSet
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.IMessageHeaders.Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.ContentType
  commentId: M:Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.ContentType(Steeltoe.Messaging.IMessageHeaders)
  parent: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions
  definition: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.ContentType(Steeltoe.Messaging.IMessageHeaders)
  name: ContentType()
  nameWithType: MessageHeaderExtensions.ContentType()
  fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.ContentType()
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.ContentType
    name: ContentType
    nameWithType: MessageHeaderExtensions.ContentType
    fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.ContentType
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.ContentType
    name: ContentType
    nameWithType: MessageHeaderExtensions.ContentType
    fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.ContentType
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.IMessageHeaders.Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.CorrelationId
  commentId: M:Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.CorrelationId(Steeltoe.Messaging.IMessageHeaders)
  parent: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions
  definition: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.CorrelationId(Steeltoe.Messaging.IMessageHeaders)
  name: CorrelationId()
  nameWithType: MessageHeaderExtensions.CorrelationId()
  fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.CorrelationId()
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.CorrelationId
    name: CorrelationId
    nameWithType: MessageHeaderExtensions.CorrelationId
    fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.CorrelationId
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.CorrelationId
    name: CorrelationId
    nameWithType: MessageHeaderExtensions.CorrelationId
    fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.CorrelationId
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.IMessageHeaders.Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.Delay
  commentId: M:Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.Delay(Steeltoe.Messaging.IMessageHeaders)
  parent: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions
  definition: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.Delay(Steeltoe.Messaging.IMessageHeaders)
  name: Delay()
  nameWithType: MessageHeaderExtensions.Delay()
  fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.Delay()
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.Delay
    name: Delay
    nameWithType: MessageHeaderExtensions.Delay
    fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.Delay
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.Delay
    name: Delay
    nameWithType: MessageHeaderExtensions.Delay
    fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.Delay
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.IMessageHeaders.Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.DeliveryMode
  commentId: M:Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.DeliveryMode(Steeltoe.Messaging.IMessageHeaders)
  parent: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions
  definition: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.DeliveryMode(Steeltoe.Messaging.IMessageHeaders)
  name: DeliveryMode()
  nameWithType: MessageHeaderExtensions.DeliveryMode()
  fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.DeliveryMode()
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.DeliveryMode
    name: DeliveryMode
    nameWithType: MessageHeaderExtensions.DeliveryMode
    fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.DeliveryMode
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.DeliveryMode
    name: DeliveryMode
    nameWithType: MessageHeaderExtensions.DeliveryMode
    fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.DeliveryMode
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.IMessageHeaders.Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.DeliveryTag
  commentId: M:Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.DeliveryTag(Steeltoe.Messaging.IMessageHeaders)
  parent: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions
  definition: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.DeliveryTag(Steeltoe.Messaging.IMessageHeaders)
  name: DeliveryTag()
  nameWithType: MessageHeaderExtensions.DeliveryTag()
  fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.DeliveryTag()
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.DeliveryTag
    name: DeliveryTag
    nameWithType: MessageHeaderExtensions.DeliveryTag
    fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.DeliveryTag
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.DeliveryTag
    name: DeliveryTag
    nameWithType: MessageHeaderExtensions.DeliveryTag
    fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.DeliveryTag
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.IMessageHeaders.Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.IsDeliveryTagSet
  commentId: M:Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.IsDeliveryTagSet(Steeltoe.Messaging.IMessageHeaders)
  parent: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions
  definition: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.IsDeliveryTagSet(Steeltoe.Messaging.IMessageHeaders)
  name: IsDeliveryTagSet()
  nameWithType: MessageHeaderExtensions.IsDeliveryTagSet()
  fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.IsDeliveryTagSet()
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.IsDeliveryTagSet
    name: IsDeliveryTagSet
    nameWithType: MessageHeaderExtensions.IsDeliveryTagSet
    fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.IsDeliveryTagSet
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.IsDeliveryTagSet
    name: IsDeliveryTagSet
    nameWithType: MessageHeaderExtensions.IsDeliveryTagSet
    fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.IsDeliveryTagSet
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.IMessageHeaders.Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.Expiration
  commentId: M:Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.Expiration(Steeltoe.Messaging.IMessageHeaders)
  parent: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions
  definition: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.Expiration(Steeltoe.Messaging.IMessageHeaders)
  name: Expiration()
  nameWithType: MessageHeaderExtensions.Expiration()
  fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.Expiration()
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.Expiration
    name: Expiration
    nameWithType: MessageHeaderExtensions.Expiration
    fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.Expiration
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.Expiration
    name: Expiration
    nameWithType: MessageHeaderExtensions.Expiration
    fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.Expiration
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.IMessageHeaders.Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.InferredArgumentType
  commentId: M:Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.InferredArgumentType(Steeltoe.Messaging.IMessageHeaders)
  parent: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions
  definition: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.InferredArgumentType(Steeltoe.Messaging.IMessageHeaders)
  name: InferredArgumentType()
  nameWithType: MessageHeaderExtensions.InferredArgumentType()
  fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.InferredArgumentType()
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.InferredArgumentType
    name: InferredArgumentType
    nameWithType: MessageHeaderExtensions.InferredArgumentType
    fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.InferredArgumentType
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.InferredArgumentType
    name: InferredArgumentType
    nameWithType: MessageHeaderExtensions.InferredArgumentType
    fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.InferredArgumentType
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.IMessageHeaders.Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.MessageCount
  commentId: M:Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.MessageCount(Steeltoe.Messaging.IMessageHeaders)
  parent: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions
  definition: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.MessageCount(Steeltoe.Messaging.IMessageHeaders)
  name: MessageCount()
  nameWithType: MessageHeaderExtensions.MessageCount()
  fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.MessageCount()
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.MessageCount
    name: MessageCount
    nameWithType: MessageHeaderExtensions.MessageCount
    fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.MessageCount
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.MessageCount
    name: MessageCount
    nameWithType: MessageHeaderExtensions.MessageCount
    fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.MessageCount
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.IMessageHeaders.Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.MessageId
  commentId: M:Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.MessageId(Steeltoe.Messaging.IMessageHeaders)
  parent: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions
  definition: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.MessageId(Steeltoe.Messaging.IMessageHeaders)
  name: MessageId()
  nameWithType: MessageHeaderExtensions.MessageId()
  fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.MessageId()
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.MessageId
    name: MessageId
    nameWithType: MessageHeaderExtensions.MessageId
    fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.MessageId
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.MessageId
    name: MessageId
    nameWithType: MessageHeaderExtensions.MessageId
    fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.MessageId
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.IMessageHeaders.Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.Priority
  commentId: M:Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.Priority(Steeltoe.Messaging.IMessageHeaders)
  parent: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions
  definition: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.Priority(Steeltoe.Messaging.IMessageHeaders)
  name: Priority()
  nameWithType: MessageHeaderExtensions.Priority()
  fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.Priority()
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.Priority
    name: Priority
    nameWithType: MessageHeaderExtensions.Priority
    fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.Priority
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.Priority
    name: Priority
    nameWithType: MessageHeaderExtensions.Priority
    fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.Priority
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.IMessageHeaders.Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.PublishSequenceNumber
  commentId: M:Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.PublishSequenceNumber(Steeltoe.Messaging.IMessageHeaders)
  parent: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions
  definition: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.PublishSequenceNumber(Steeltoe.Messaging.IMessageHeaders)
  name: PublishSequenceNumber()
  nameWithType: MessageHeaderExtensions.PublishSequenceNumber()
  fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.PublishSequenceNumber()
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.PublishSequenceNumber
    name: PublishSequenceNumber
    nameWithType: MessageHeaderExtensions.PublishSequenceNumber
    fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.PublishSequenceNumber
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.PublishSequenceNumber
    name: PublishSequenceNumber
    nameWithType: MessageHeaderExtensions.PublishSequenceNumber
    fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.PublishSequenceNumber
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.IMessageHeaders.Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.ReceivedDelay
  commentId: M:Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.ReceivedDelay(Steeltoe.Messaging.IMessageHeaders)
  parent: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions
  definition: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.ReceivedDelay(Steeltoe.Messaging.IMessageHeaders)
  name: ReceivedDelay()
  nameWithType: MessageHeaderExtensions.ReceivedDelay()
  fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.ReceivedDelay()
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.ReceivedDelay
    name: ReceivedDelay
    nameWithType: MessageHeaderExtensions.ReceivedDelay
    fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.ReceivedDelay
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.ReceivedDelay
    name: ReceivedDelay
    nameWithType: MessageHeaderExtensions.ReceivedDelay
    fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.ReceivedDelay
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.IMessageHeaders.Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.ReceivedDeliveryMode
  commentId: M:Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.ReceivedDeliveryMode(Steeltoe.Messaging.IMessageHeaders)
  parent: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions
  definition: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.ReceivedDeliveryMode(Steeltoe.Messaging.IMessageHeaders)
  name: ReceivedDeliveryMode()
  nameWithType: MessageHeaderExtensions.ReceivedDeliveryMode()
  fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.ReceivedDeliveryMode()
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.ReceivedDeliveryMode
    name: ReceivedDeliveryMode
    nameWithType: MessageHeaderExtensions.ReceivedDeliveryMode
    fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.ReceivedDeliveryMode
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.ReceivedDeliveryMode
    name: ReceivedDeliveryMode
    nameWithType: MessageHeaderExtensions.ReceivedDeliveryMode
    fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.ReceivedDeliveryMode
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.IMessageHeaders.Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.ReceivedExchange
  commentId: M:Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.ReceivedExchange(Steeltoe.Messaging.IMessageHeaders)
  parent: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions
  definition: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.ReceivedExchange(Steeltoe.Messaging.IMessageHeaders)
  name: ReceivedExchange()
  nameWithType: MessageHeaderExtensions.ReceivedExchange()
  fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.ReceivedExchange()
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.ReceivedExchange
    name: ReceivedExchange
    nameWithType: MessageHeaderExtensions.ReceivedExchange
    fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.ReceivedExchange
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.ReceivedExchange
    name: ReceivedExchange
    nameWithType: MessageHeaderExtensions.ReceivedExchange
    fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.ReceivedExchange
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.IMessageHeaders.Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.ReceivedRoutingKey
  commentId: M:Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.ReceivedRoutingKey(Steeltoe.Messaging.IMessageHeaders)
  parent: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions
  definition: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.ReceivedRoutingKey(Steeltoe.Messaging.IMessageHeaders)
  name: ReceivedRoutingKey()
  nameWithType: MessageHeaderExtensions.ReceivedRoutingKey()
  fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.ReceivedRoutingKey()
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.ReceivedRoutingKey
    name: ReceivedRoutingKey
    nameWithType: MessageHeaderExtensions.ReceivedRoutingKey
    fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.ReceivedRoutingKey
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.ReceivedRoutingKey
    name: ReceivedRoutingKey
    nameWithType: MessageHeaderExtensions.ReceivedRoutingKey
    fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.ReceivedRoutingKey
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.IMessageHeaders.Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.ReceivedUserId
  commentId: M:Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.ReceivedUserId(Steeltoe.Messaging.IMessageHeaders)
  parent: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions
  definition: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.ReceivedUserId(Steeltoe.Messaging.IMessageHeaders)
  name: ReceivedUserId()
  nameWithType: MessageHeaderExtensions.ReceivedUserId()
  fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.ReceivedUserId()
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.ReceivedUserId
    name: ReceivedUserId
    nameWithType: MessageHeaderExtensions.ReceivedUserId
    fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.ReceivedUserId
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.ReceivedUserId
    name: ReceivedUserId
    nameWithType: MessageHeaderExtensions.ReceivedUserId
    fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.ReceivedUserId
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.IMessageHeaders.Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.Redelivered
  commentId: M:Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.Redelivered(Steeltoe.Messaging.IMessageHeaders)
  parent: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions
  definition: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.Redelivered(Steeltoe.Messaging.IMessageHeaders)
  name: Redelivered()
  nameWithType: MessageHeaderExtensions.Redelivered()
  fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.Redelivered()
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.Redelivered
    name: Redelivered
    nameWithType: MessageHeaderExtensions.Redelivered
    fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.Redelivered
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.Redelivered
    name: Redelivered
    nameWithType: MessageHeaderExtensions.Redelivered
    fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.Redelivered
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.IMessageHeaders.Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.ReplyTo
  commentId: M:Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.ReplyTo(Steeltoe.Messaging.IMessageHeaders)
  parent: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions
  definition: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.ReplyTo(Steeltoe.Messaging.IMessageHeaders)
  name: ReplyTo()
  nameWithType: MessageHeaderExtensions.ReplyTo()
  fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.ReplyTo()
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.ReplyTo
    name: ReplyTo
    nameWithType: MessageHeaderExtensions.ReplyTo
    fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.ReplyTo
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.ReplyTo
    name: ReplyTo
    nameWithType: MessageHeaderExtensions.ReplyTo
    fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.ReplyTo
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.IMessageHeaders.Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.ReplyToAddress
  commentId: M:Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.ReplyToAddress(Steeltoe.Messaging.IMessageHeaders)
  parent: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions
  definition: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.ReplyToAddress(Steeltoe.Messaging.IMessageHeaders)
  name: ReplyToAddress()
  nameWithType: MessageHeaderExtensions.ReplyToAddress()
  fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.ReplyToAddress()
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.ReplyToAddress
    name: ReplyToAddress
    nameWithType: MessageHeaderExtensions.ReplyToAddress
    fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.ReplyToAddress
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.ReplyToAddress
    name: ReplyToAddress
    nameWithType: MessageHeaderExtensions.ReplyToAddress
    fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.ReplyToAddress
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.IMessageHeaders.Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.Target
  commentId: M:Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.Target(Steeltoe.Messaging.IMessageHeaders)
  parent: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions
  definition: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.Target(Steeltoe.Messaging.IMessageHeaders)
  name: Target()
  nameWithType: MessageHeaderExtensions.Target()
  fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.Target()
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.Target
    name: Target
    nameWithType: MessageHeaderExtensions.Target
    fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.Target
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.Target
    name: Target
    nameWithType: MessageHeaderExtensions.Target
    fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.Target
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.IMessageHeaders.Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.TargetMethod
  commentId: M:Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.TargetMethod(Steeltoe.Messaging.IMessageHeaders)
  parent: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions
  definition: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.TargetMethod(Steeltoe.Messaging.IMessageHeaders)
  name: TargetMethod()
  nameWithType: MessageHeaderExtensions.TargetMethod()
  fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.TargetMethod()
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.TargetMethod
    name: TargetMethod
    nameWithType: MessageHeaderExtensions.TargetMethod
    fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.TargetMethod
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.TargetMethod
    name: TargetMethod
    nameWithType: MessageHeaderExtensions.TargetMethod
    fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.TargetMethod
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.IMessageHeaders.Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.Timestamp
  commentId: M:Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.Timestamp(Steeltoe.Messaging.IMessageHeaders)
  parent: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions
  definition: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.Timestamp(Steeltoe.Messaging.IMessageHeaders)
  name: Timestamp()
  nameWithType: MessageHeaderExtensions.Timestamp()
  fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.Timestamp()
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.Timestamp
    name: Timestamp
    nameWithType: MessageHeaderExtensions.Timestamp
    fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.Timestamp
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.Timestamp
    name: Timestamp
    nameWithType: MessageHeaderExtensions.Timestamp
    fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.Timestamp
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.IMessageHeaders.Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.Type
  commentId: M:Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.Type(Steeltoe.Messaging.IMessageHeaders)
  parent: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions
  definition: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.Type(Steeltoe.Messaging.IMessageHeaders)
  name: Type()
  nameWithType: MessageHeaderExtensions.Type()
  fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.Type()
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.Type
    name: Type
    nameWithType: MessageHeaderExtensions.Type
    fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.Type
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.Type
    name: Type
    nameWithType: MessageHeaderExtensions.Type
    fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.Type
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.IMessageHeaders.Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.UserId
  commentId: M:Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.UserId(Steeltoe.Messaging.IMessageHeaders)
  parent: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions
  definition: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.UserId(Steeltoe.Messaging.IMessageHeaders)
  name: UserId()
  nameWithType: MessageHeaderExtensions.UserId()
  fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.UserId()
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.UserId
    name: UserId
    nameWithType: MessageHeaderExtensions.UserId
    fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.UserId
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.UserId
    name: UserId
    nameWithType: MessageHeaderExtensions.UserId
    fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.UserId
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.IMessageHeaders.Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.FinalRetryForMessageWithNoId
  commentId: M:Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.FinalRetryForMessageWithNoId(Steeltoe.Messaging.IMessageHeaders)
  parent: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions
  definition: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.FinalRetryForMessageWithNoId(Steeltoe.Messaging.IMessageHeaders)
  name: FinalRetryForMessageWithNoId()
  nameWithType: MessageHeaderExtensions.FinalRetryForMessageWithNoId()
  fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.FinalRetryForMessageWithNoId()
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.FinalRetryForMessageWithNoId
    name: FinalRetryForMessageWithNoId
    nameWithType: MessageHeaderExtensions.FinalRetryForMessageWithNoId
    fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.FinalRetryForMessageWithNoId
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.FinalRetryForMessageWithNoId
    name: FinalRetryForMessageWithNoId
    nameWithType: MessageHeaderExtensions.FinalRetryForMessageWithNoId
    fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.FinalRetryForMessageWithNoId
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.IMessageHeaders.Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.IsFinalRetryForMessageWithNoId
  commentId: M:Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.IsFinalRetryForMessageWithNoId(Steeltoe.Messaging.IMessageHeaders)
  parent: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions
  definition: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.IsFinalRetryForMessageWithNoId(Steeltoe.Messaging.IMessageHeaders)
  name: IsFinalRetryForMessageWithNoId()
  nameWithType: MessageHeaderExtensions.IsFinalRetryForMessageWithNoId()
  fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.IsFinalRetryForMessageWithNoId()
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.IsFinalRetryForMessageWithNoId
    name: IsFinalRetryForMessageWithNoId
    nameWithType: MessageHeaderExtensions.IsFinalRetryForMessageWithNoId
    fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.IsFinalRetryForMessageWithNoId
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.IsFinalRetryForMessageWithNoId
    name: IsFinalRetryForMessageWithNoId
    nameWithType: MessageHeaderExtensions.IsFinalRetryForMessageWithNoId
    fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.IsFinalRetryForMessageWithNoId
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.IMessageHeaders.Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.LastInBatch
  commentId: M:Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.LastInBatch(Steeltoe.Messaging.IMessageHeaders)
  parent: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions
  definition: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.LastInBatch(Steeltoe.Messaging.IMessageHeaders)
  name: LastInBatch()
  nameWithType: MessageHeaderExtensions.LastInBatch()
  fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.LastInBatch()
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.LastInBatch
    name: LastInBatch
    nameWithType: MessageHeaderExtensions.LastInBatch
    fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.LastInBatch
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.LastInBatch
    name: LastInBatch
    nameWithType: MessageHeaderExtensions.LastInBatch
    fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.LastInBatch
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IDictionary`2.Add(`0,`1)
  commentId: M:System.Collections.Generic.IDictionary`2.Add(`0,`1)
  isExternal: true
  name: Add(TKey, TValue)
  nameWithType: IDictionary<TKey, TValue>.Add(TKey, TValue)
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>.Add(TKey, TValue)
  nameWithType.vb: IDictionary(Of TKey, TValue).Add(TKey, TValue)
  fullName.vb: System.Collections.Generic.IDictionary(Of TKey, TValue).Add(TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2.Add(`0,`1)
    name: Add
    nameWithType: IDictionary<TKey, TValue>.Add
    fullName: System.Collections.Generic.IDictionary<TKey, TValue>.Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2.Add(`0,`1)
    name: Add
    nameWithType: IDictionary(Of TKey, TValue).Add
    fullName: System.Collections.Generic.IDictionary(Of TKey, TValue).Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IDictionary{System.String,System.Object}
  commentId: T:System.Collections.Generic.IDictionary{System.String,System.Object}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IDictionary`2
  name: IDictionary<String, Object>
  nameWithType: IDictionary<String, Object>
  fullName: System.Collections.Generic.IDictionary<System.String, System.Object>
  nameWithType.vb: IDictionary(Of String, Object)
  fullName.vb: System.Collections.Generic.IDictionary(Of System.String, System.Object)
  name.vb: IDictionary(Of String, Object)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IDictionary`2.ContainsKey(`0)
  commentId: M:System.Collections.Generic.IDictionary`2.ContainsKey(`0)
  isExternal: true
  name: ContainsKey(TKey)
  nameWithType: IDictionary<TKey, TValue>.ContainsKey(TKey)
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>.ContainsKey(TKey)
  nameWithType.vb: IDictionary(Of TKey, TValue).ContainsKey(TKey)
  fullName.vb: System.Collections.Generic.IDictionary(Of TKey, TValue).ContainsKey(TKey)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2.ContainsKey(`0)
    name: ContainsKey
    nameWithType: IDictionary<TKey, TValue>.ContainsKey
    fullName: System.Collections.Generic.IDictionary<TKey, TValue>.ContainsKey
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2.ContainsKey(`0)
    name: ContainsKey
    nameWithType: IDictionary(Of TKey, TValue).ContainsKey
    fullName: System.Collections.Generic.IDictionary(Of TKey, TValue).ContainsKey
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IDictionary`2.Remove(`0)
  commentId: M:System.Collections.Generic.IDictionary`2.Remove(`0)
  isExternal: true
  name: Remove(TKey)
  nameWithType: IDictionary<TKey, TValue>.Remove(TKey)
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>.Remove(TKey)
  nameWithType.vb: IDictionary(Of TKey, TValue).Remove(TKey)
  fullName.vb: System.Collections.Generic.IDictionary(Of TKey, TValue).Remove(TKey)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2.Remove(`0)
    name: Remove
    nameWithType: IDictionary<TKey, TValue>.Remove
    fullName: System.Collections.Generic.IDictionary<TKey, TValue>.Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2.Remove(`0)
    name: Remove
    nameWithType: IDictionary(Of TKey, TValue).Remove
    fullName: System.Collections.Generic.IDictionary(Of TKey, TValue).Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IDictionary`2.TryGetValue(`0,`1@)
  commentId: M:System.Collections.Generic.IDictionary`2.TryGetValue(`0,`1@)
  isExternal: true
  name: TryGetValue(TKey, TValue)
  nameWithType: IDictionary<TKey, TValue>.TryGetValue(TKey, TValue)
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>.TryGetValue(TKey, TValue)
  nameWithType.vb: IDictionary(Of TKey, TValue).TryGetValue(TKey, TValue)
  fullName.vb: System.Collections.Generic.IDictionary(Of TKey, TValue).TryGetValue(TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2.TryGetValue(`0,`1@)
    name: TryGetValue
    nameWithType: IDictionary<TKey, TValue>.TryGetValue
    fullName: System.Collections.Generic.IDictionary<TKey, TValue>.TryGetValue
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2.TryGetValue(`0,`1@)
    name: TryGetValue
    nameWithType: IDictionary(Of TKey, TValue).TryGetValue
    fullName: System.Collections.Generic.IDictionary(Of TKey, TValue).TryGetValue
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IDictionary`2.Item(`0)
  commentId: P:System.Collections.Generic.IDictionary`2.Item(`0)
  isExternal: true
  name: Item[TKey]
  nameWithType: IDictionary<TKey, TValue>.Item[TKey]
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>.Item[TKey]
  nameWithType.vb: IDictionary(Of TKey, TValue).Item(TKey)
  fullName.vb: System.Collections.Generic.IDictionary(Of TKey, TValue).Item(TKey)
  name.vb: Item(TKey)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2.Item(`0)
    name: Item
    nameWithType: IDictionary<TKey, TValue>.Item
    fullName: System.Collections.Generic.IDictionary<TKey, TValue>.Item
    isExternal: true
  - name: '['
    nameWithType: '['
    fullName: '['
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ']'
    nameWithType: ']'
    fullName: ']'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2.Item(`0)
    name: Item
    nameWithType: IDictionary(Of TKey, TValue).Item
    fullName: System.Collections.Generic.IDictionary(Of TKey, TValue).Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IDictionary`2.Keys
  commentId: P:System.Collections.Generic.IDictionary`2.Keys
  isExternal: true
  name: Keys
  nameWithType: IDictionary<TKey, TValue>.Keys
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>.Keys
  nameWithType.vb: IDictionary(Of TKey, TValue).Keys
  fullName.vb: System.Collections.Generic.IDictionary(Of TKey, TValue).Keys
- uid: System.Collections.Generic.IDictionary`2.Values
  commentId: P:System.Collections.Generic.IDictionary`2.Values
  isExternal: true
  name: Values
  nameWithType: IDictionary<TKey, TValue>.Values
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>.Values
  nameWithType.vb: IDictionary(Of TKey, TValue).Values
  fullName.vb: System.Collections.Generic.IDictionary(Of TKey, TValue).Values
- uid: System.Collections.Generic.ICollection`1.Add(`0)
  commentId: M:System.Collections.Generic.ICollection`1.Add(`0)
  isExternal: true
  name: Add(T)
  nameWithType: ICollection<T>.Add(T)
  fullName: System.Collections.Generic.ICollection<T>.Add(T)
  nameWithType.vb: ICollection(Of T).Add(T)
  fullName.vb: System.Collections.Generic.ICollection(Of T).Add(T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.Add(`0)
    name: Add
    nameWithType: ICollection<T>.Add
    fullName: System.Collections.Generic.ICollection<T>.Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.Add(`0)
    name: Add
    nameWithType: ICollection(Of T).Add
    fullName: System.Collections.Generic.ICollection(Of T).Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{System.String,System.Object}}
  commentId: T:System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{System.String,System.Object}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.ICollection`1
  name: ICollection<KeyValuePair<String, Object>>
  nameWithType: ICollection<KeyValuePair<String, Object>>
  fullName: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String, System.Object>>
  nameWithType.vb: ICollection(Of KeyValuePair(Of String, Object))
  fullName.vb: System.Collections.Generic.ICollection(Of System.Collections.Generic.KeyValuePair(Of System.String, System.Object))
  name.vb: ICollection(Of KeyValuePair(Of String, Object))
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.ICollection`1.Clear
  commentId: M:System.Collections.Generic.ICollection`1.Clear
  isExternal: true
  name: Clear()
  nameWithType: ICollection<T>.Clear()
  fullName: System.Collections.Generic.ICollection<T>.Clear()
  nameWithType.vb: ICollection(Of T).Clear()
  fullName.vb: System.Collections.Generic.ICollection(Of T).Clear()
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.Clear
    name: Clear
    nameWithType: ICollection<T>.Clear
    fullName: System.Collections.Generic.ICollection<T>.Clear
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.Clear
    name: Clear
    nameWithType: ICollection(Of T).Clear
    fullName: System.Collections.Generic.ICollection(Of T).Clear
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.ICollection`1.Contains(`0)
  commentId: M:System.Collections.Generic.ICollection`1.Contains(`0)
  isExternal: true
  name: Contains(T)
  nameWithType: ICollection<T>.Contains(T)
  fullName: System.Collections.Generic.ICollection<T>.Contains(T)
  nameWithType.vb: ICollection(Of T).Contains(T)
  fullName.vb: System.Collections.Generic.ICollection(Of T).Contains(T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.Contains(`0)
    name: Contains
    nameWithType: ICollection<T>.Contains
    fullName: System.Collections.Generic.ICollection<T>.Contains
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.Contains(`0)
    name: Contains
    nameWithType: ICollection(Of T).Contains
    fullName: System.Collections.Generic.ICollection(Of T).Contains
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)
  commentId: M:System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)
  isExternal: true
  name: CopyTo(T[], Int32)
  nameWithType: ICollection<T>.CopyTo(T[], Int32)
  fullName: System.Collections.Generic.ICollection<T>.CopyTo(T[], System.Int32)
  nameWithType.vb: ICollection(Of T).CopyTo(T(), Int32)
  fullName.vb: System.Collections.Generic.ICollection(Of T).CopyTo(T(), System.Int32)
  name.vb: CopyTo(T(), Int32)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)
    name: CopyTo
    nameWithType: ICollection<T>.CopyTo
    fullName: System.Collections.Generic.ICollection<T>.CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)
    name: CopyTo
    nameWithType: ICollection(Of T).CopyTo
    fullName: System.Collections.Generic.ICollection(Of T).CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.ICollection`1.Remove(`0)
  commentId: M:System.Collections.Generic.ICollection`1.Remove(`0)
  isExternal: true
  name: Remove(T)
  nameWithType: ICollection<T>.Remove(T)
  fullName: System.Collections.Generic.ICollection<T>.Remove(T)
  nameWithType.vb: ICollection(Of T).Remove(T)
  fullName.vb: System.Collections.Generic.ICollection(Of T).Remove(T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.Remove(`0)
    name: Remove
    nameWithType: ICollection<T>.Remove
    fullName: System.Collections.Generic.ICollection<T>.Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.Remove(`0)
    name: Remove
    nameWithType: ICollection(Of T).Remove
    fullName: System.Collections.Generic.ICollection(Of T).Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.ICollection`1.Count
  commentId: P:System.Collections.Generic.ICollection`1.Count
  isExternal: true
  name: Count
  nameWithType: ICollection<T>.Count
  fullName: System.Collections.Generic.ICollection<T>.Count
  nameWithType.vb: ICollection(Of T).Count
  fullName.vb: System.Collections.Generic.ICollection(Of T).Count
- uid: System.Collections.Generic.ICollection`1.IsReadOnly
  commentId: P:System.Collections.Generic.ICollection`1.IsReadOnly
  isExternal: true
  name: IsReadOnly
  nameWithType: ICollection<T>.IsReadOnly
  fullName: System.Collections.Generic.ICollection<T>.IsReadOnly
  nameWithType.vb: ICollection(Of T).IsReadOnly
  fullName.vb: System.Collections.Generic.ICollection(Of T).IsReadOnly
- uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
  commentId: M:System.Collections.Generic.IEnumerable`1.GetEnumerator
  isExternal: true
  name: GetEnumerator()
  nameWithType: IEnumerable<T>.GetEnumerator()
  fullName: System.Collections.Generic.IEnumerable<T>.GetEnumerator()
  nameWithType.vb: IEnumerable(Of T).GetEnumerator()
  fullName.vb: System.Collections.Generic.IEnumerable(Of T).GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable<T>.GetEnumerator
    fullName: System.Collections.Generic.IEnumerable<T>.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable(Of T).GetEnumerator
    fullName: System.Collections.Generic.IEnumerable(Of T).GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Object}}
  commentId: T:System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Object}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<KeyValuePair<String, Object>>
  nameWithType: IEnumerable<KeyValuePair<String, Object>>
  fullName: System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.String, System.Object>>
  nameWithType.vb: IEnumerable(Of KeyValuePair(Of String, Object))
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.Collections.Generic.KeyValuePair(Of System.String, System.Object))
  name.vb: IEnumerable(Of KeyValuePair(Of String, Object))
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.IEnumerable
  commentId: T:System.Collections.IEnumerable
  parent: System.Collections
  isExternal: true
  name: IEnumerable
  nameWithType: IEnumerable
  fullName: System.Collections.IEnumerable
- uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.AppId(Steeltoe.Messaging.IMessageHeaders)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.AppId(Steeltoe.Messaging.IMessageHeaders)
  name: AppId(IMessageHeaders)
  nameWithType: MessageHeaderExtensions.AppId(IMessageHeaders)
  fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.AppId(Steeltoe.Messaging.IMessageHeaders)
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.AppId(Steeltoe.Messaging.IMessageHeaders)
    name: AppId
    nameWithType: MessageHeaderExtensions.AppId
    fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.AppId
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.IMessageHeaders
    name: IMessageHeaders
    nameWithType: IMessageHeaders
    fullName: Steeltoe.Messaging.IMessageHeaders
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.AppId(Steeltoe.Messaging.IMessageHeaders)
    name: AppId
    nameWithType: MessageHeaderExtensions.AppId
    fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.AppId
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.IMessageHeaders
    name: IMessageHeaders
    nameWithType: IMessageHeaders
    fullName: Steeltoe.Messaging.IMessageHeaders
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions
  commentId: T:Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions
  parent: Steeltoe.Messaging.RabbitMQ.Extensions
  name: MessageHeaderExtensions
  nameWithType: MessageHeaderExtensions
  fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions
- uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.ClusterId(Steeltoe.Messaging.IMessageHeaders)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.ClusterId(Steeltoe.Messaging.IMessageHeaders)
  name: ClusterId(IMessageHeaders)
  nameWithType: MessageHeaderExtensions.ClusterId(IMessageHeaders)
  fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.ClusterId(Steeltoe.Messaging.IMessageHeaders)
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.ClusterId(Steeltoe.Messaging.IMessageHeaders)
    name: ClusterId
    nameWithType: MessageHeaderExtensions.ClusterId
    fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.ClusterId
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.IMessageHeaders
    name: IMessageHeaders
    nameWithType: IMessageHeaders
    fullName: Steeltoe.Messaging.IMessageHeaders
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.ClusterId(Steeltoe.Messaging.IMessageHeaders)
    name: ClusterId
    nameWithType: MessageHeaderExtensions.ClusterId
    fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.ClusterId
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.IMessageHeaders
    name: IMessageHeaders
    nameWithType: IMessageHeaders
    fullName: Steeltoe.Messaging.IMessageHeaders
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.ConsumerQueue(Steeltoe.Messaging.IMessageHeaders)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.ConsumerQueue(Steeltoe.Messaging.IMessageHeaders)
  name: ConsumerQueue(IMessageHeaders)
  nameWithType: MessageHeaderExtensions.ConsumerQueue(IMessageHeaders)
  fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.ConsumerQueue(Steeltoe.Messaging.IMessageHeaders)
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.ConsumerQueue(Steeltoe.Messaging.IMessageHeaders)
    name: ConsumerQueue
    nameWithType: MessageHeaderExtensions.ConsumerQueue
    fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.ConsumerQueue
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.IMessageHeaders
    name: IMessageHeaders
    nameWithType: IMessageHeaders
    fullName: Steeltoe.Messaging.IMessageHeaders
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.ConsumerQueue(Steeltoe.Messaging.IMessageHeaders)
    name: ConsumerQueue
    nameWithType: MessageHeaderExtensions.ConsumerQueue
    fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.ConsumerQueue
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.IMessageHeaders
    name: IMessageHeaders
    nameWithType: IMessageHeaders
    fullName: Steeltoe.Messaging.IMessageHeaders
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.ConsumerTag(Steeltoe.Messaging.IMessageHeaders)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.ConsumerTag(Steeltoe.Messaging.IMessageHeaders)
  name: ConsumerTag(IMessageHeaders)
  nameWithType: MessageHeaderExtensions.ConsumerTag(IMessageHeaders)
  fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.ConsumerTag(Steeltoe.Messaging.IMessageHeaders)
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.ConsumerTag(Steeltoe.Messaging.IMessageHeaders)
    name: ConsumerTag
    nameWithType: MessageHeaderExtensions.ConsumerTag
    fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.ConsumerTag
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.IMessageHeaders
    name: IMessageHeaders
    nameWithType: IMessageHeaders
    fullName: Steeltoe.Messaging.IMessageHeaders
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.ConsumerTag(Steeltoe.Messaging.IMessageHeaders)
    name: ConsumerTag
    nameWithType: MessageHeaderExtensions.ConsumerTag
    fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.ConsumerTag
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.IMessageHeaders
    name: IMessageHeaders
    nameWithType: IMessageHeaders
    fullName: Steeltoe.Messaging.IMessageHeaders
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.ContentEncoding(Steeltoe.Messaging.IMessageHeaders)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.ContentEncoding(Steeltoe.Messaging.IMessageHeaders)
  name: ContentEncoding(IMessageHeaders)
  nameWithType: MessageHeaderExtensions.ContentEncoding(IMessageHeaders)
  fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.ContentEncoding(Steeltoe.Messaging.IMessageHeaders)
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.ContentEncoding(Steeltoe.Messaging.IMessageHeaders)
    name: ContentEncoding
    nameWithType: MessageHeaderExtensions.ContentEncoding
    fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.ContentEncoding
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.IMessageHeaders
    name: IMessageHeaders
    nameWithType: IMessageHeaders
    fullName: Steeltoe.Messaging.IMessageHeaders
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.ContentEncoding(Steeltoe.Messaging.IMessageHeaders)
    name: ContentEncoding
    nameWithType: MessageHeaderExtensions.ContentEncoding
    fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.ContentEncoding
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.IMessageHeaders
    name: IMessageHeaders
    nameWithType: IMessageHeaders
    fullName: Steeltoe.Messaging.IMessageHeaders
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.ContentLength(Steeltoe.Messaging.IMessageHeaders)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.ContentLength(Steeltoe.Messaging.IMessageHeaders)
  name: ContentLength(IMessageHeaders)
  nameWithType: MessageHeaderExtensions.ContentLength(IMessageHeaders)
  fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.ContentLength(Steeltoe.Messaging.IMessageHeaders)
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.ContentLength(Steeltoe.Messaging.IMessageHeaders)
    name: ContentLength
    nameWithType: MessageHeaderExtensions.ContentLength
    fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.ContentLength
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.IMessageHeaders
    name: IMessageHeaders
    nameWithType: IMessageHeaders
    fullName: Steeltoe.Messaging.IMessageHeaders
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.ContentLength(Steeltoe.Messaging.IMessageHeaders)
    name: ContentLength
    nameWithType: MessageHeaderExtensions.ContentLength
    fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.ContentLength
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.IMessageHeaders
    name: IMessageHeaders
    nameWithType: IMessageHeaders
    fullName: Steeltoe.Messaging.IMessageHeaders
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.IsContentLengthSet(Steeltoe.Messaging.IMessageHeaders)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.IsContentLengthSet(Steeltoe.Messaging.IMessageHeaders)
  name: IsContentLengthSet(IMessageHeaders)
  nameWithType: MessageHeaderExtensions.IsContentLengthSet(IMessageHeaders)
  fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.IsContentLengthSet(Steeltoe.Messaging.IMessageHeaders)
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.IsContentLengthSet(Steeltoe.Messaging.IMessageHeaders)
    name: IsContentLengthSet
    nameWithType: MessageHeaderExtensions.IsContentLengthSet
    fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.IsContentLengthSet
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.IMessageHeaders
    name: IMessageHeaders
    nameWithType: IMessageHeaders
    fullName: Steeltoe.Messaging.IMessageHeaders
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.IsContentLengthSet(Steeltoe.Messaging.IMessageHeaders)
    name: IsContentLengthSet
    nameWithType: MessageHeaderExtensions.IsContentLengthSet
    fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.IsContentLengthSet
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.IMessageHeaders
    name: IMessageHeaders
    nameWithType: IMessageHeaders
    fullName: Steeltoe.Messaging.IMessageHeaders
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.ContentType(Steeltoe.Messaging.IMessageHeaders)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.ContentType(Steeltoe.Messaging.IMessageHeaders)
  name: ContentType(IMessageHeaders)
  nameWithType: MessageHeaderExtensions.ContentType(IMessageHeaders)
  fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.ContentType(Steeltoe.Messaging.IMessageHeaders)
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.ContentType(Steeltoe.Messaging.IMessageHeaders)
    name: ContentType
    nameWithType: MessageHeaderExtensions.ContentType
    fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.ContentType
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.IMessageHeaders
    name: IMessageHeaders
    nameWithType: IMessageHeaders
    fullName: Steeltoe.Messaging.IMessageHeaders
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.ContentType(Steeltoe.Messaging.IMessageHeaders)
    name: ContentType
    nameWithType: MessageHeaderExtensions.ContentType
    fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.ContentType
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.IMessageHeaders
    name: IMessageHeaders
    nameWithType: IMessageHeaders
    fullName: Steeltoe.Messaging.IMessageHeaders
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.CorrelationId(Steeltoe.Messaging.IMessageHeaders)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.CorrelationId(Steeltoe.Messaging.IMessageHeaders)
  name: CorrelationId(IMessageHeaders)
  nameWithType: MessageHeaderExtensions.CorrelationId(IMessageHeaders)
  fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.CorrelationId(Steeltoe.Messaging.IMessageHeaders)
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.CorrelationId(Steeltoe.Messaging.IMessageHeaders)
    name: CorrelationId
    nameWithType: MessageHeaderExtensions.CorrelationId
    fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.CorrelationId
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.IMessageHeaders
    name: IMessageHeaders
    nameWithType: IMessageHeaders
    fullName: Steeltoe.Messaging.IMessageHeaders
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.CorrelationId(Steeltoe.Messaging.IMessageHeaders)
    name: CorrelationId
    nameWithType: MessageHeaderExtensions.CorrelationId
    fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.CorrelationId
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.IMessageHeaders
    name: IMessageHeaders
    nameWithType: IMessageHeaders
    fullName: Steeltoe.Messaging.IMessageHeaders
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.Delay(Steeltoe.Messaging.IMessageHeaders)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.Delay(Steeltoe.Messaging.IMessageHeaders)
  name: Delay(IMessageHeaders)
  nameWithType: MessageHeaderExtensions.Delay(IMessageHeaders)
  fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.Delay(Steeltoe.Messaging.IMessageHeaders)
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.Delay(Steeltoe.Messaging.IMessageHeaders)
    name: Delay
    nameWithType: MessageHeaderExtensions.Delay
    fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.Delay
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.IMessageHeaders
    name: IMessageHeaders
    nameWithType: IMessageHeaders
    fullName: Steeltoe.Messaging.IMessageHeaders
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.Delay(Steeltoe.Messaging.IMessageHeaders)
    name: Delay
    nameWithType: MessageHeaderExtensions.Delay
    fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.Delay
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.IMessageHeaders
    name: IMessageHeaders
    nameWithType: IMessageHeaders
    fullName: Steeltoe.Messaging.IMessageHeaders
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.DeliveryMode(Steeltoe.Messaging.IMessageHeaders)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.DeliveryMode(Steeltoe.Messaging.IMessageHeaders)
  name: DeliveryMode(IMessageHeaders)
  nameWithType: MessageHeaderExtensions.DeliveryMode(IMessageHeaders)
  fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.DeliveryMode(Steeltoe.Messaging.IMessageHeaders)
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.DeliveryMode(Steeltoe.Messaging.IMessageHeaders)
    name: DeliveryMode
    nameWithType: MessageHeaderExtensions.DeliveryMode
    fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.DeliveryMode
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.IMessageHeaders
    name: IMessageHeaders
    nameWithType: IMessageHeaders
    fullName: Steeltoe.Messaging.IMessageHeaders
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.DeliveryMode(Steeltoe.Messaging.IMessageHeaders)
    name: DeliveryMode
    nameWithType: MessageHeaderExtensions.DeliveryMode
    fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.DeliveryMode
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.IMessageHeaders
    name: IMessageHeaders
    nameWithType: IMessageHeaders
    fullName: Steeltoe.Messaging.IMessageHeaders
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.DeliveryTag(Steeltoe.Messaging.IMessageHeaders)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.DeliveryTag(Steeltoe.Messaging.IMessageHeaders)
  name: DeliveryTag(IMessageHeaders)
  nameWithType: MessageHeaderExtensions.DeliveryTag(IMessageHeaders)
  fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.DeliveryTag(Steeltoe.Messaging.IMessageHeaders)
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.DeliveryTag(Steeltoe.Messaging.IMessageHeaders)
    name: DeliveryTag
    nameWithType: MessageHeaderExtensions.DeliveryTag
    fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.DeliveryTag
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.IMessageHeaders
    name: IMessageHeaders
    nameWithType: IMessageHeaders
    fullName: Steeltoe.Messaging.IMessageHeaders
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.DeliveryTag(Steeltoe.Messaging.IMessageHeaders)
    name: DeliveryTag
    nameWithType: MessageHeaderExtensions.DeliveryTag
    fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.DeliveryTag
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.IMessageHeaders
    name: IMessageHeaders
    nameWithType: IMessageHeaders
    fullName: Steeltoe.Messaging.IMessageHeaders
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.IsDeliveryTagSet(Steeltoe.Messaging.IMessageHeaders)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.IsDeliveryTagSet(Steeltoe.Messaging.IMessageHeaders)
  name: IsDeliveryTagSet(IMessageHeaders)
  nameWithType: MessageHeaderExtensions.IsDeliveryTagSet(IMessageHeaders)
  fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.IsDeliveryTagSet(Steeltoe.Messaging.IMessageHeaders)
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.IsDeliveryTagSet(Steeltoe.Messaging.IMessageHeaders)
    name: IsDeliveryTagSet
    nameWithType: MessageHeaderExtensions.IsDeliveryTagSet
    fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.IsDeliveryTagSet
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.IMessageHeaders
    name: IMessageHeaders
    nameWithType: IMessageHeaders
    fullName: Steeltoe.Messaging.IMessageHeaders
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.IsDeliveryTagSet(Steeltoe.Messaging.IMessageHeaders)
    name: IsDeliveryTagSet
    nameWithType: MessageHeaderExtensions.IsDeliveryTagSet
    fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.IsDeliveryTagSet
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.IMessageHeaders
    name: IMessageHeaders
    nameWithType: IMessageHeaders
    fullName: Steeltoe.Messaging.IMessageHeaders
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.Expiration(Steeltoe.Messaging.IMessageHeaders)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.Expiration(Steeltoe.Messaging.IMessageHeaders)
  name: Expiration(IMessageHeaders)
  nameWithType: MessageHeaderExtensions.Expiration(IMessageHeaders)
  fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.Expiration(Steeltoe.Messaging.IMessageHeaders)
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.Expiration(Steeltoe.Messaging.IMessageHeaders)
    name: Expiration
    nameWithType: MessageHeaderExtensions.Expiration
    fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.Expiration
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.IMessageHeaders
    name: IMessageHeaders
    nameWithType: IMessageHeaders
    fullName: Steeltoe.Messaging.IMessageHeaders
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.Expiration(Steeltoe.Messaging.IMessageHeaders)
    name: Expiration
    nameWithType: MessageHeaderExtensions.Expiration
    fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.Expiration
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.IMessageHeaders
    name: IMessageHeaders
    nameWithType: IMessageHeaders
    fullName: Steeltoe.Messaging.IMessageHeaders
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.InferredArgumentType(Steeltoe.Messaging.IMessageHeaders)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.InferredArgumentType(Steeltoe.Messaging.IMessageHeaders)
  name: InferredArgumentType(IMessageHeaders)
  nameWithType: MessageHeaderExtensions.InferredArgumentType(IMessageHeaders)
  fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.InferredArgumentType(Steeltoe.Messaging.IMessageHeaders)
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.InferredArgumentType(Steeltoe.Messaging.IMessageHeaders)
    name: InferredArgumentType
    nameWithType: MessageHeaderExtensions.InferredArgumentType
    fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.InferredArgumentType
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.IMessageHeaders
    name: IMessageHeaders
    nameWithType: IMessageHeaders
    fullName: Steeltoe.Messaging.IMessageHeaders
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.InferredArgumentType(Steeltoe.Messaging.IMessageHeaders)
    name: InferredArgumentType
    nameWithType: MessageHeaderExtensions.InferredArgumentType
    fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.InferredArgumentType
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.IMessageHeaders
    name: IMessageHeaders
    nameWithType: IMessageHeaders
    fullName: Steeltoe.Messaging.IMessageHeaders
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.MessageCount(Steeltoe.Messaging.IMessageHeaders)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.MessageCount(Steeltoe.Messaging.IMessageHeaders)
  name: MessageCount(IMessageHeaders)
  nameWithType: MessageHeaderExtensions.MessageCount(IMessageHeaders)
  fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.MessageCount(Steeltoe.Messaging.IMessageHeaders)
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.MessageCount(Steeltoe.Messaging.IMessageHeaders)
    name: MessageCount
    nameWithType: MessageHeaderExtensions.MessageCount
    fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.MessageCount
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.IMessageHeaders
    name: IMessageHeaders
    nameWithType: IMessageHeaders
    fullName: Steeltoe.Messaging.IMessageHeaders
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.MessageCount(Steeltoe.Messaging.IMessageHeaders)
    name: MessageCount
    nameWithType: MessageHeaderExtensions.MessageCount
    fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.MessageCount
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.IMessageHeaders
    name: IMessageHeaders
    nameWithType: IMessageHeaders
    fullName: Steeltoe.Messaging.IMessageHeaders
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.MessageId(Steeltoe.Messaging.IMessageHeaders)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.MessageId(Steeltoe.Messaging.IMessageHeaders)
  name: MessageId(IMessageHeaders)
  nameWithType: MessageHeaderExtensions.MessageId(IMessageHeaders)
  fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.MessageId(Steeltoe.Messaging.IMessageHeaders)
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.MessageId(Steeltoe.Messaging.IMessageHeaders)
    name: MessageId
    nameWithType: MessageHeaderExtensions.MessageId
    fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.MessageId
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.IMessageHeaders
    name: IMessageHeaders
    nameWithType: IMessageHeaders
    fullName: Steeltoe.Messaging.IMessageHeaders
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.MessageId(Steeltoe.Messaging.IMessageHeaders)
    name: MessageId
    nameWithType: MessageHeaderExtensions.MessageId
    fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.MessageId
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.IMessageHeaders
    name: IMessageHeaders
    nameWithType: IMessageHeaders
    fullName: Steeltoe.Messaging.IMessageHeaders
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.Priority(Steeltoe.Messaging.IMessageHeaders)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.Priority(Steeltoe.Messaging.IMessageHeaders)
  name: Priority(IMessageHeaders)
  nameWithType: MessageHeaderExtensions.Priority(IMessageHeaders)
  fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.Priority(Steeltoe.Messaging.IMessageHeaders)
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.Priority(Steeltoe.Messaging.IMessageHeaders)
    name: Priority
    nameWithType: MessageHeaderExtensions.Priority
    fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.Priority
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.IMessageHeaders
    name: IMessageHeaders
    nameWithType: IMessageHeaders
    fullName: Steeltoe.Messaging.IMessageHeaders
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.Priority(Steeltoe.Messaging.IMessageHeaders)
    name: Priority
    nameWithType: MessageHeaderExtensions.Priority
    fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.Priority
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.IMessageHeaders
    name: IMessageHeaders
    nameWithType: IMessageHeaders
    fullName: Steeltoe.Messaging.IMessageHeaders
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.PublishSequenceNumber(Steeltoe.Messaging.IMessageHeaders)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.PublishSequenceNumber(Steeltoe.Messaging.IMessageHeaders)
  name: PublishSequenceNumber(IMessageHeaders)
  nameWithType: MessageHeaderExtensions.PublishSequenceNumber(IMessageHeaders)
  fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.PublishSequenceNumber(Steeltoe.Messaging.IMessageHeaders)
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.PublishSequenceNumber(Steeltoe.Messaging.IMessageHeaders)
    name: PublishSequenceNumber
    nameWithType: MessageHeaderExtensions.PublishSequenceNumber
    fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.PublishSequenceNumber
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.IMessageHeaders
    name: IMessageHeaders
    nameWithType: IMessageHeaders
    fullName: Steeltoe.Messaging.IMessageHeaders
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.PublishSequenceNumber(Steeltoe.Messaging.IMessageHeaders)
    name: PublishSequenceNumber
    nameWithType: MessageHeaderExtensions.PublishSequenceNumber
    fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.PublishSequenceNumber
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.IMessageHeaders
    name: IMessageHeaders
    nameWithType: IMessageHeaders
    fullName: Steeltoe.Messaging.IMessageHeaders
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.ReceivedDelay(Steeltoe.Messaging.IMessageHeaders)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.ReceivedDelay(Steeltoe.Messaging.IMessageHeaders)
  name: ReceivedDelay(IMessageHeaders)
  nameWithType: MessageHeaderExtensions.ReceivedDelay(IMessageHeaders)
  fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.ReceivedDelay(Steeltoe.Messaging.IMessageHeaders)
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.ReceivedDelay(Steeltoe.Messaging.IMessageHeaders)
    name: ReceivedDelay
    nameWithType: MessageHeaderExtensions.ReceivedDelay
    fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.ReceivedDelay
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.IMessageHeaders
    name: IMessageHeaders
    nameWithType: IMessageHeaders
    fullName: Steeltoe.Messaging.IMessageHeaders
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.ReceivedDelay(Steeltoe.Messaging.IMessageHeaders)
    name: ReceivedDelay
    nameWithType: MessageHeaderExtensions.ReceivedDelay
    fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.ReceivedDelay
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.IMessageHeaders
    name: IMessageHeaders
    nameWithType: IMessageHeaders
    fullName: Steeltoe.Messaging.IMessageHeaders
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.ReceivedDeliveryMode(Steeltoe.Messaging.IMessageHeaders)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.ReceivedDeliveryMode(Steeltoe.Messaging.IMessageHeaders)
  name: ReceivedDeliveryMode(IMessageHeaders)
  nameWithType: MessageHeaderExtensions.ReceivedDeliveryMode(IMessageHeaders)
  fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.ReceivedDeliveryMode(Steeltoe.Messaging.IMessageHeaders)
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.ReceivedDeliveryMode(Steeltoe.Messaging.IMessageHeaders)
    name: ReceivedDeliveryMode
    nameWithType: MessageHeaderExtensions.ReceivedDeliveryMode
    fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.ReceivedDeliveryMode
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.IMessageHeaders
    name: IMessageHeaders
    nameWithType: IMessageHeaders
    fullName: Steeltoe.Messaging.IMessageHeaders
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.ReceivedDeliveryMode(Steeltoe.Messaging.IMessageHeaders)
    name: ReceivedDeliveryMode
    nameWithType: MessageHeaderExtensions.ReceivedDeliveryMode
    fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.ReceivedDeliveryMode
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.IMessageHeaders
    name: IMessageHeaders
    nameWithType: IMessageHeaders
    fullName: Steeltoe.Messaging.IMessageHeaders
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.ReceivedExchange(Steeltoe.Messaging.IMessageHeaders)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.ReceivedExchange(Steeltoe.Messaging.IMessageHeaders)
  name: ReceivedExchange(IMessageHeaders)
  nameWithType: MessageHeaderExtensions.ReceivedExchange(IMessageHeaders)
  fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.ReceivedExchange(Steeltoe.Messaging.IMessageHeaders)
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.ReceivedExchange(Steeltoe.Messaging.IMessageHeaders)
    name: ReceivedExchange
    nameWithType: MessageHeaderExtensions.ReceivedExchange
    fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.ReceivedExchange
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.IMessageHeaders
    name: IMessageHeaders
    nameWithType: IMessageHeaders
    fullName: Steeltoe.Messaging.IMessageHeaders
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.ReceivedExchange(Steeltoe.Messaging.IMessageHeaders)
    name: ReceivedExchange
    nameWithType: MessageHeaderExtensions.ReceivedExchange
    fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.ReceivedExchange
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.IMessageHeaders
    name: IMessageHeaders
    nameWithType: IMessageHeaders
    fullName: Steeltoe.Messaging.IMessageHeaders
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.ReceivedRoutingKey(Steeltoe.Messaging.IMessageHeaders)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.ReceivedRoutingKey(Steeltoe.Messaging.IMessageHeaders)
  name: ReceivedRoutingKey(IMessageHeaders)
  nameWithType: MessageHeaderExtensions.ReceivedRoutingKey(IMessageHeaders)
  fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.ReceivedRoutingKey(Steeltoe.Messaging.IMessageHeaders)
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.ReceivedRoutingKey(Steeltoe.Messaging.IMessageHeaders)
    name: ReceivedRoutingKey
    nameWithType: MessageHeaderExtensions.ReceivedRoutingKey
    fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.ReceivedRoutingKey
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.IMessageHeaders
    name: IMessageHeaders
    nameWithType: IMessageHeaders
    fullName: Steeltoe.Messaging.IMessageHeaders
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.ReceivedRoutingKey(Steeltoe.Messaging.IMessageHeaders)
    name: ReceivedRoutingKey
    nameWithType: MessageHeaderExtensions.ReceivedRoutingKey
    fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.ReceivedRoutingKey
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.IMessageHeaders
    name: IMessageHeaders
    nameWithType: IMessageHeaders
    fullName: Steeltoe.Messaging.IMessageHeaders
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.ReceivedUserId(Steeltoe.Messaging.IMessageHeaders)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.ReceivedUserId(Steeltoe.Messaging.IMessageHeaders)
  name: ReceivedUserId(IMessageHeaders)
  nameWithType: MessageHeaderExtensions.ReceivedUserId(IMessageHeaders)
  fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.ReceivedUserId(Steeltoe.Messaging.IMessageHeaders)
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.ReceivedUserId(Steeltoe.Messaging.IMessageHeaders)
    name: ReceivedUserId
    nameWithType: MessageHeaderExtensions.ReceivedUserId
    fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.ReceivedUserId
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.IMessageHeaders
    name: IMessageHeaders
    nameWithType: IMessageHeaders
    fullName: Steeltoe.Messaging.IMessageHeaders
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.ReceivedUserId(Steeltoe.Messaging.IMessageHeaders)
    name: ReceivedUserId
    nameWithType: MessageHeaderExtensions.ReceivedUserId
    fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.ReceivedUserId
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.IMessageHeaders
    name: IMessageHeaders
    nameWithType: IMessageHeaders
    fullName: Steeltoe.Messaging.IMessageHeaders
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.Redelivered(Steeltoe.Messaging.IMessageHeaders)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.Redelivered(Steeltoe.Messaging.IMessageHeaders)
  name: Redelivered(IMessageHeaders)
  nameWithType: MessageHeaderExtensions.Redelivered(IMessageHeaders)
  fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.Redelivered(Steeltoe.Messaging.IMessageHeaders)
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.Redelivered(Steeltoe.Messaging.IMessageHeaders)
    name: Redelivered
    nameWithType: MessageHeaderExtensions.Redelivered
    fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.Redelivered
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.IMessageHeaders
    name: IMessageHeaders
    nameWithType: IMessageHeaders
    fullName: Steeltoe.Messaging.IMessageHeaders
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.Redelivered(Steeltoe.Messaging.IMessageHeaders)
    name: Redelivered
    nameWithType: MessageHeaderExtensions.Redelivered
    fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.Redelivered
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.IMessageHeaders
    name: IMessageHeaders
    nameWithType: IMessageHeaders
    fullName: Steeltoe.Messaging.IMessageHeaders
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.ReplyTo(Steeltoe.Messaging.IMessageHeaders)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.ReplyTo(Steeltoe.Messaging.IMessageHeaders)
  name: ReplyTo(IMessageHeaders)
  nameWithType: MessageHeaderExtensions.ReplyTo(IMessageHeaders)
  fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.ReplyTo(Steeltoe.Messaging.IMessageHeaders)
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.ReplyTo(Steeltoe.Messaging.IMessageHeaders)
    name: ReplyTo
    nameWithType: MessageHeaderExtensions.ReplyTo
    fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.ReplyTo
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.IMessageHeaders
    name: IMessageHeaders
    nameWithType: IMessageHeaders
    fullName: Steeltoe.Messaging.IMessageHeaders
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.ReplyTo(Steeltoe.Messaging.IMessageHeaders)
    name: ReplyTo
    nameWithType: MessageHeaderExtensions.ReplyTo
    fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.ReplyTo
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.IMessageHeaders
    name: IMessageHeaders
    nameWithType: IMessageHeaders
    fullName: Steeltoe.Messaging.IMessageHeaders
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.ReplyToAddress(Steeltoe.Messaging.IMessageHeaders)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.ReplyToAddress(Steeltoe.Messaging.IMessageHeaders)
  name: ReplyToAddress(IMessageHeaders)
  nameWithType: MessageHeaderExtensions.ReplyToAddress(IMessageHeaders)
  fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.ReplyToAddress(Steeltoe.Messaging.IMessageHeaders)
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.ReplyToAddress(Steeltoe.Messaging.IMessageHeaders)
    name: ReplyToAddress
    nameWithType: MessageHeaderExtensions.ReplyToAddress
    fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.ReplyToAddress
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.IMessageHeaders
    name: IMessageHeaders
    nameWithType: IMessageHeaders
    fullName: Steeltoe.Messaging.IMessageHeaders
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.ReplyToAddress(Steeltoe.Messaging.IMessageHeaders)
    name: ReplyToAddress
    nameWithType: MessageHeaderExtensions.ReplyToAddress
    fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.ReplyToAddress
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.IMessageHeaders
    name: IMessageHeaders
    nameWithType: IMessageHeaders
    fullName: Steeltoe.Messaging.IMessageHeaders
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.Target(Steeltoe.Messaging.IMessageHeaders)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.Target(Steeltoe.Messaging.IMessageHeaders)
  name: Target(IMessageHeaders)
  nameWithType: MessageHeaderExtensions.Target(IMessageHeaders)
  fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.Target(Steeltoe.Messaging.IMessageHeaders)
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.Target(Steeltoe.Messaging.IMessageHeaders)
    name: Target
    nameWithType: MessageHeaderExtensions.Target
    fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.Target
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.IMessageHeaders
    name: IMessageHeaders
    nameWithType: IMessageHeaders
    fullName: Steeltoe.Messaging.IMessageHeaders
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.Target(Steeltoe.Messaging.IMessageHeaders)
    name: Target
    nameWithType: MessageHeaderExtensions.Target
    fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.Target
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.IMessageHeaders
    name: IMessageHeaders
    nameWithType: IMessageHeaders
    fullName: Steeltoe.Messaging.IMessageHeaders
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.TargetMethod(Steeltoe.Messaging.IMessageHeaders)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.TargetMethod(Steeltoe.Messaging.IMessageHeaders)
  name: TargetMethod(IMessageHeaders)
  nameWithType: MessageHeaderExtensions.TargetMethod(IMessageHeaders)
  fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.TargetMethod(Steeltoe.Messaging.IMessageHeaders)
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.TargetMethod(Steeltoe.Messaging.IMessageHeaders)
    name: TargetMethod
    nameWithType: MessageHeaderExtensions.TargetMethod
    fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.TargetMethod
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.IMessageHeaders
    name: IMessageHeaders
    nameWithType: IMessageHeaders
    fullName: Steeltoe.Messaging.IMessageHeaders
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.TargetMethod(Steeltoe.Messaging.IMessageHeaders)
    name: TargetMethod
    nameWithType: MessageHeaderExtensions.TargetMethod
    fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.TargetMethod
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.IMessageHeaders
    name: IMessageHeaders
    nameWithType: IMessageHeaders
    fullName: Steeltoe.Messaging.IMessageHeaders
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.Timestamp(Steeltoe.Messaging.IMessageHeaders)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.Timestamp(Steeltoe.Messaging.IMessageHeaders)
  name: Timestamp(IMessageHeaders)
  nameWithType: MessageHeaderExtensions.Timestamp(IMessageHeaders)
  fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.Timestamp(Steeltoe.Messaging.IMessageHeaders)
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.Timestamp(Steeltoe.Messaging.IMessageHeaders)
    name: Timestamp
    nameWithType: MessageHeaderExtensions.Timestamp
    fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.Timestamp
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.IMessageHeaders
    name: IMessageHeaders
    nameWithType: IMessageHeaders
    fullName: Steeltoe.Messaging.IMessageHeaders
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.Timestamp(Steeltoe.Messaging.IMessageHeaders)
    name: Timestamp
    nameWithType: MessageHeaderExtensions.Timestamp
    fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.Timestamp
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.IMessageHeaders
    name: IMessageHeaders
    nameWithType: IMessageHeaders
    fullName: Steeltoe.Messaging.IMessageHeaders
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.Type(Steeltoe.Messaging.IMessageHeaders)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.Type(Steeltoe.Messaging.IMessageHeaders)
  name: Type(IMessageHeaders)
  nameWithType: MessageHeaderExtensions.Type(IMessageHeaders)
  fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.Type(Steeltoe.Messaging.IMessageHeaders)
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.Type(Steeltoe.Messaging.IMessageHeaders)
    name: Type
    nameWithType: MessageHeaderExtensions.Type
    fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.Type
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.IMessageHeaders
    name: IMessageHeaders
    nameWithType: IMessageHeaders
    fullName: Steeltoe.Messaging.IMessageHeaders
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.Type(Steeltoe.Messaging.IMessageHeaders)
    name: Type
    nameWithType: MessageHeaderExtensions.Type
    fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.Type
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.IMessageHeaders
    name: IMessageHeaders
    nameWithType: IMessageHeaders
    fullName: Steeltoe.Messaging.IMessageHeaders
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.UserId(Steeltoe.Messaging.IMessageHeaders)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.UserId(Steeltoe.Messaging.IMessageHeaders)
  name: UserId(IMessageHeaders)
  nameWithType: MessageHeaderExtensions.UserId(IMessageHeaders)
  fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.UserId(Steeltoe.Messaging.IMessageHeaders)
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.UserId(Steeltoe.Messaging.IMessageHeaders)
    name: UserId
    nameWithType: MessageHeaderExtensions.UserId
    fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.UserId
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.IMessageHeaders
    name: IMessageHeaders
    nameWithType: IMessageHeaders
    fullName: Steeltoe.Messaging.IMessageHeaders
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.UserId(Steeltoe.Messaging.IMessageHeaders)
    name: UserId
    nameWithType: MessageHeaderExtensions.UserId
    fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.UserId
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.IMessageHeaders
    name: IMessageHeaders
    nameWithType: IMessageHeaders
    fullName: Steeltoe.Messaging.IMessageHeaders
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.FinalRetryForMessageWithNoId(Steeltoe.Messaging.IMessageHeaders)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.FinalRetryForMessageWithNoId(Steeltoe.Messaging.IMessageHeaders)
  name: FinalRetryForMessageWithNoId(IMessageHeaders)
  nameWithType: MessageHeaderExtensions.FinalRetryForMessageWithNoId(IMessageHeaders)
  fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.FinalRetryForMessageWithNoId(Steeltoe.Messaging.IMessageHeaders)
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.FinalRetryForMessageWithNoId(Steeltoe.Messaging.IMessageHeaders)
    name: FinalRetryForMessageWithNoId
    nameWithType: MessageHeaderExtensions.FinalRetryForMessageWithNoId
    fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.FinalRetryForMessageWithNoId
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.IMessageHeaders
    name: IMessageHeaders
    nameWithType: IMessageHeaders
    fullName: Steeltoe.Messaging.IMessageHeaders
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.FinalRetryForMessageWithNoId(Steeltoe.Messaging.IMessageHeaders)
    name: FinalRetryForMessageWithNoId
    nameWithType: MessageHeaderExtensions.FinalRetryForMessageWithNoId
    fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.FinalRetryForMessageWithNoId
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.IMessageHeaders
    name: IMessageHeaders
    nameWithType: IMessageHeaders
    fullName: Steeltoe.Messaging.IMessageHeaders
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.IsFinalRetryForMessageWithNoId(Steeltoe.Messaging.IMessageHeaders)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.IsFinalRetryForMessageWithNoId(Steeltoe.Messaging.IMessageHeaders)
  name: IsFinalRetryForMessageWithNoId(IMessageHeaders)
  nameWithType: MessageHeaderExtensions.IsFinalRetryForMessageWithNoId(IMessageHeaders)
  fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.IsFinalRetryForMessageWithNoId(Steeltoe.Messaging.IMessageHeaders)
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.IsFinalRetryForMessageWithNoId(Steeltoe.Messaging.IMessageHeaders)
    name: IsFinalRetryForMessageWithNoId
    nameWithType: MessageHeaderExtensions.IsFinalRetryForMessageWithNoId
    fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.IsFinalRetryForMessageWithNoId
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.IMessageHeaders
    name: IMessageHeaders
    nameWithType: IMessageHeaders
    fullName: Steeltoe.Messaging.IMessageHeaders
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.IsFinalRetryForMessageWithNoId(Steeltoe.Messaging.IMessageHeaders)
    name: IsFinalRetryForMessageWithNoId
    nameWithType: MessageHeaderExtensions.IsFinalRetryForMessageWithNoId
    fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.IsFinalRetryForMessageWithNoId
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.IMessageHeaders
    name: IMessageHeaders
    nameWithType: IMessageHeaders
    fullName: Steeltoe.Messaging.IMessageHeaders
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.LastInBatch(Steeltoe.Messaging.IMessageHeaders)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.LastInBatch(Steeltoe.Messaging.IMessageHeaders)
  name: LastInBatch(IMessageHeaders)
  nameWithType: MessageHeaderExtensions.LastInBatch(IMessageHeaders)
  fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.LastInBatch(Steeltoe.Messaging.IMessageHeaders)
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.LastInBatch(Steeltoe.Messaging.IMessageHeaders)
    name: LastInBatch
    nameWithType: MessageHeaderExtensions.LastInBatch
    fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.LastInBatch
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.IMessageHeaders
    name: IMessageHeaders
    nameWithType: IMessageHeaders
    fullName: Steeltoe.Messaging.IMessageHeaders
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.LastInBatch(Steeltoe.Messaging.IMessageHeaders)
    name: LastInBatch
    nameWithType: MessageHeaderExtensions.LastInBatch
    fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageHeaderExtensions.LastInBatch
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.IMessageHeaders
    name: IMessageHeaders
    nameWithType: IMessageHeaders
    fullName: Steeltoe.Messaging.IMessageHeaders
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IDictionary`2
  commentId: T:System.Collections.Generic.IDictionary`2
  isExternal: true
  name: IDictionary<TKey, TValue>
  nameWithType: IDictionary<TKey, TValue>
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>
  nameWithType.vb: IDictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.IDictionary(Of TKey, TValue)
  name.vb: IDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Collections.Generic.ICollection`1
  commentId: T:System.Collections.Generic.ICollection`1
  isExternal: true
  name: ICollection<T>
  nameWithType: ICollection<T>
  fullName: System.Collections.Generic.ICollection<T>
  nameWithType.vb: ICollection(Of T)
  fullName.vb: System.Collections.Generic.ICollection(Of T)
  name.vb: ICollection(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections
  commentId: N:System.Collections
  isExternal: true
  name: System.Collections
  nameWithType: System.Collections
  fullName: System.Collections
- uid: Steeltoe.Messaging.RabbitMQ.Extensions
  commentId: N:Steeltoe.Messaging.RabbitMQ.Extensions
  name: Steeltoe.Messaging.RabbitMQ.Extensions
  nameWithType: Steeltoe.Messaging.RabbitMQ.Extensions
  fullName: Steeltoe.Messaging.RabbitMQ.Extensions
- uid: Steeltoe.Messaging.IMessageHeaders.Get*
  commentId: Overload:Steeltoe.Messaging.IMessageHeaders.Get
  name: Get
  nameWithType: IMessageHeaders.Get
  fullName: Steeltoe.Messaging.IMessageHeaders.Get
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: Steeltoe.Messaging.IMessageHeaders.Id*
  commentId: Overload:Steeltoe.Messaging.IMessageHeaders.Id
  name: Id
  nameWithType: IMessageHeaders.Id
  fullName: Steeltoe.Messaging.IMessageHeaders.Id
- uid: Steeltoe.Messaging.IMessageHeaders.Timestamp*
  commentId: Overload:Steeltoe.Messaging.IMessageHeaders.Timestamp
  name: Timestamp
  nameWithType: IMessageHeaders.Timestamp
  fullName: Steeltoe.Messaging.IMessageHeaders.Timestamp
- uid: System.Nullable{System.Int64}
  commentId: T:System.Nullable{System.Int64}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Int64>
  nameWithType: Nullable<Int64>
  fullName: System.Nullable<System.Int64>
  nameWithType.vb: Nullable(Of Int64)
  fullName.vb: System.Nullable(Of System.Int64)
  name.vb: Nullable(Of Int64)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.IMessageHeaders.ReplyChannel*
  commentId: Overload:Steeltoe.Messaging.IMessageHeaders.ReplyChannel
  name: ReplyChannel
  nameWithType: IMessageHeaders.ReplyChannel
  fullName: Steeltoe.Messaging.IMessageHeaders.ReplyChannel
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Steeltoe.Messaging.IMessageHeaders.ErrorChannel*
  commentId: Overload:Steeltoe.Messaging.IMessageHeaders.ErrorChannel
  name: ErrorChannel
  nameWithType: IMessageHeaders.ErrorChannel
  fullName: Steeltoe.Messaging.IMessageHeaders.ErrorChannel
