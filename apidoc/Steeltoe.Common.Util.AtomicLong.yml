### YamlMime:ManagedReference
items:
- uid: Steeltoe.Common.Util.AtomicLong
  commentId: T:Steeltoe.Common.Util.AtomicLong
  id: AtomicLong
  parent: Steeltoe.Common.Util
  children:
  - Steeltoe.Common.Util.AtomicLong.#ctor
  - Steeltoe.Common.Util.AtomicLong.#ctor(System.Int64)
  - Steeltoe.Common.Util.AtomicLong.AddAndGet(System.Int64)
  - Steeltoe.Common.Util.AtomicLong.CompareAndSet(System.Int64,System.Int64)
  - Steeltoe.Common.Util.AtomicLong.GetAndSet(System.Int64)
  - Steeltoe.Common.Util.AtomicLong.Value
  langs:
  - csharp
  - vb
  name: AtomicLong
  nameWithType: AtomicLong
  fullName: Steeltoe.Common.Util.AtomicLong
  type: Class
  source:
    remote:
      path: src/Common/src/Abstractions/Util/AtomicLong.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: AtomicLong
    path: ../Steeltoe/src/Common/src/Abstractions/Util/AtomicLong.cs
    startLine: 8
  assemblies:
  - Steeltoe.Common.Abstractions
  namespace: Steeltoe.Common.Util
  syntax:
    content: public class AtomicLong
    content.vb: Public Class AtomicLong
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Steeltoe.Common.Util.AtomicLong.#ctor
  commentId: M:Steeltoe.Common.Util.AtomicLong.#ctor
  id: '#ctor'
  parent: Steeltoe.Common.Util.AtomicLong
  langs:
  - csharp
  - vb
  name: AtomicLong()
  nameWithType: AtomicLong.AtomicLong()
  fullName: Steeltoe.Common.Util.AtomicLong.AtomicLong()
  type: Constructor
  source:
    remote:
      path: src/Common/src/Abstractions/Util/AtomicLong.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: .ctor
    path: ../Steeltoe/src/Common/src/Abstractions/Util/AtomicLong.cs
    startLine: 12
  assemblies:
  - Steeltoe.Common.Abstractions
  namespace: Steeltoe.Common.Util
  syntax:
    content: public AtomicLong()
    content.vb: Public Sub New
  overload: Steeltoe.Common.Util.AtomicLong.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Steeltoe.Common.Util.AtomicLong.#ctor(System.Int64)
  commentId: M:Steeltoe.Common.Util.AtomicLong.#ctor(System.Int64)
  id: '#ctor(System.Int64)'
  parent: Steeltoe.Common.Util.AtomicLong
  langs:
  - csharp
  - vb
  name: AtomicLong(Int64)
  nameWithType: AtomicLong.AtomicLong(Int64)
  fullName: Steeltoe.Common.Util.AtomicLong.AtomicLong(System.Int64)
  type: Constructor
  source:
    remote:
      path: src/Common/src/Abstractions/Util/AtomicLong.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: .ctor
    path: ../Steeltoe/src/Common/src/Abstractions/Util/AtomicLong.cs
    startLine: 17
  assemblies:
  - Steeltoe.Common.Abstractions
  namespace: Steeltoe.Common.Util
  syntax:
    content: public AtomicLong(long value)
    parameters:
    - id: value
      type: System.Int64
    content.vb: Public Sub New(value As Long)
  overload: Steeltoe.Common.Util.AtomicLong.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Steeltoe.Common.Util.AtomicLong.Value
  commentId: P:Steeltoe.Common.Util.AtomicLong.Value
  id: Value
  parent: Steeltoe.Common.Util.AtomicLong
  langs:
  - csharp
  - vb
  name: Value
  nameWithType: AtomicLong.Value
  fullName: Steeltoe.Common.Util.AtomicLong.Value
  type: Property
  source:
    remote:
      path: src/Common/src/Abstractions/Util/AtomicLong.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Value
    path: ../Steeltoe/src/Common/src/Abstractions/Util/AtomicLong.cs
    startLine: 22
  assemblies:
  - Steeltoe.Common.Abstractions
  namespace: Steeltoe.Common.Util
  syntax:
    content: public long Value { get; set; }
    parameters: []
    return:
      type: System.Int64
    content.vb: Public Property Value As Long
  overload: Steeltoe.Common.Util.AtomicLong.Value*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Steeltoe.Common.Util.AtomicLong.CompareAndSet(System.Int64,System.Int64)
  commentId: M:Steeltoe.Common.Util.AtomicLong.CompareAndSet(System.Int64,System.Int64)
  id: CompareAndSet(System.Int64,System.Int64)
  parent: Steeltoe.Common.Util.AtomicLong
  langs:
  - csharp
  - vb
  name: CompareAndSet(Int64, Int64)
  nameWithType: AtomicLong.CompareAndSet(Int64, Int64)
  fullName: Steeltoe.Common.Util.AtomicLong.CompareAndSet(System.Int64, System.Int64)
  type: Method
  source:
    remote:
      path: src/Common/src/Abstractions/Util/AtomicLong.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: CompareAndSet
    path: ../Steeltoe/src/Common/src/Abstractions/Util/AtomicLong.cs
    startLine: 35
  assemblies:
  - Steeltoe.Common.Abstractions
  namespace: Steeltoe.Common.Util
  syntax:
    content: public bool CompareAndSet(long expected, long update)
    parameters:
    - id: expected
      type: System.Int64
    - id: update
      type: System.Int64
    return:
      type: System.Boolean
    content.vb: Public Function CompareAndSet(expected As Long, update As Long) As Boolean
  overload: Steeltoe.Common.Util.AtomicLong.CompareAndSet*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Steeltoe.Common.Util.AtomicLong.GetAndSet(System.Int64)
  commentId: M:Steeltoe.Common.Util.AtomicLong.GetAndSet(System.Int64)
  id: GetAndSet(System.Int64)
  parent: Steeltoe.Common.Util.AtomicLong
  langs:
  - csharp
  - vb
  name: GetAndSet(Int64)
  nameWithType: AtomicLong.GetAndSet(Int64)
  fullName: Steeltoe.Common.Util.AtomicLong.GetAndSet(System.Int64)
  type: Method
  source:
    remote:
      path: src/Common/src/Abstractions/Util/AtomicLong.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: GetAndSet
    path: ../Steeltoe/src/Common/src/Abstractions/Util/AtomicLong.cs
    startLine: 40
  assemblies:
  - Steeltoe.Common.Abstractions
  namespace: Steeltoe.Common.Util
  syntax:
    content: public long GetAndSet(long value)
    parameters:
    - id: value
      type: System.Int64
    return:
      type: System.Int64
    content.vb: Public Function GetAndSet(value As Long) As Long
  overload: Steeltoe.Common.Util.AtomicLong.GetAndSet*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Steeltoe.Common.Util.AtomicLong.AddAndGet(System.Int64)
  commentId: M:Steeltoe.Common.Util.AtomicLong.AddAndGet(System.Int64)
  id: AddAndGet(System.Int64)
  parent: Steeltoe.Common.Util.AtomicLong
  langs:
  - csharp
  - vb
  name: AddAndGet(Int64)
  nameWithType: AtomicLong.AddAndGet(Int64)
  fullName: Steeltoe.Common.Util.AtomicLong.AddAndGet(System.Int64)
  type: Method
  source:
    remote:
      path: src/Common/src/Abstractions/Util/AtomicLong.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: AddAndGet
    path: ../Steeltoe/src/Common/src/Abstractions/Util/AtomicLong.cs
    startLine: 45
  assemblies:
  - Steeltoe.Common.Abstractions
  namespace: Steeltoe.Common.Util
  syntax:
    content: public long AddAndGet(long value)
    parameters:
    - id: value
      type: System.Int64
    return:
      type: System.Int64
    content.vb: Public Function AddAndGet(value As Long) As Long
  overload: Steeltoe.Common.Util.AtomicLong.AddAndGet*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Steeltoe.Common.Util
  commentId: N:Steeltoe.Common.Util
  name: Steeltoe.Common.Util
  nameWithType: Steeltoe.Common.Util
  fullName: Steeltoe.Common.Util
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Steeltoe.Common.Util.AtomicLong.#ctor*
  commentId: Overload:Steeltoe.Common.Util.AtomicLong.#ctor
  name: AtomicLong
  nameWithType: AtomicLong.AtomicLong
  fullName: Steeltoe.Common.Util.AtomicLong.AtomicLong
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: Steeltoe.Common.Util.AtomicLong.Value*
  commentId: Overload:Steeltoe.Common.Util.AtomicLong.Value
  name: Value
  nameWithType: AtomicLong.Value
  fullName: Steeltoe.Common.Util.AtomicLong.Value
- uid: Steeltoe.Common.Util.AtomicLong.CompareAndSet*
  commentId: Overload:Steeltoe.Common.Util.AtomicLong.CompareAndSet
  name: CompareAndSet
  nameWithType: AtomicLong.CompareAndSet
  fullName: Steeltoe.Common.Util.AtomicLong.CompareAndSet
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Steeltoe.Common.Util.AtomicLong.GetAndSet*
  commentId: Overload:Steeltoe.Common.Util.AtomicLong.GetAndSet
  name: GetAndSet
  nameWithType: AtomicLong.GetAndSet
  fullName: Steeltoe.Common.Util.AtomicLong.GetAndSet
- uid: Steeltoe.Common.Util.AtomicLong.AddAndGet*
  commentId: Overload:Steeltoe.Common.Util.AtomicLong.AddAndGet
  name: AddAndGet
  nameWithType: AtomicLong.AddAndGet
  fullName: Steeltoe.Common.Util.AtomicLong.AddAndGet
