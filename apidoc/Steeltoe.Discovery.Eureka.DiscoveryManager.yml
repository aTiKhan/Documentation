### YamlMime:ManagedReference
items:
- uid: Steeltoe.Discovery.Eureka.DiscoveryManager
  commentId: T:Steeltoe.Discovery.Eureka.DiscoveryManager
  id: DiscoveryManager
  parent: Steeltoe.Discovery.Eureka
  children:
  - Steeltoe.Discovery.Eureka.DiscoveryManager.#ctor
  - Steeltoe.Discovery.Eureka.DiscoveryManager._instance
  - Steeltoe.Discovery.Eureka.DiscoveryManager._logger
  - Steeltoe.Discovery.Eureka.DiscoveryManager.Client
  - Steeltoe.Discovery.Eureka.DiscoveryManager.ClientConfig
  - Steeltoe.Discovery.Eureka.DiscoveryManager.Initialize(Steeltoe.Discovery.Eureka.IEurekaClientConfig,ILoggerFactory)
  - Steeltoe.Discovery.Eureka.DiscoveryManager.Initialize(Steeltoe.Discovery.Eureka.IEurekaClientConfig,Steeltoe.Discovery.Eureka.IEurekaInstanceConfig,ILoggerFactory)
  - Steeltoe.Discovery.Eureka.DiscoveryManager.Initialize(Steeltoe.Discovery.Eureka.IEurekaClientConfig,Steeltoe.Discovery.Eureka.IEurekaInstanceConfig,Steeltoe.Discovery.Eureka.Transport.IEurekaHttpClient,ILoggerFactory)
  - Steeltoe.Discovery.Eureka.DiscoveryManager.Initialize(Steeltoe.Discovery.Eureka.IEurekaClientConfig,Steeltoe.Discovery.Eureka.Transport.IEurekaHttpClient,ILoggerFactory)
  - Steeltoe.Discovery.Eureka.DiscoveryManager.Instance
  - Steeltoe.Discovery.Eureka.DiscoveryManager.InstanceConfig
  - Steeltoe.Discovery.Eureka.DiscoveryManager.LookupService
  langs:
  - csharp
  - vb
  name: DiscoveryManager
  nameWithType: DiscoveryManager
  fullName: Steeltoe.Discovery.Eureka.DiscoveryManager
  type: Class
  source:
    remote:
      path: src/Discovery/src/Eureka/DiscoveryManager.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: DiscoveryManager
    path: ../Steeltoe/src/Discovery/src/Eureka/DiscoveryManager.cs
    startLine: 10
  assemblies:
  - Steeltoe.Discovery.Eureka
  namespace: Steeltoe.Discovery.Eureka
  syntax:
    content: public class DiscoveryManager
    content.vb: Public Class DiscoveryManager
  inheritance:
  - System.Object
  derivedClasses:
  - Steeltoe.Discovery.Eureka.EurekaDiscoveryManager
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Steeltoe.Discovery.Eureka.DiscoveryManager.#ctor
  commentId: M:Steeltoe.Discovery.Eureka.DiscoveryManager.#ctor
  id: '#ctor'
  parent: Steeltoe.Discovery.Eureka.DiscoveryManager
  langs:
  - csharp
  - vb
  name: DiscoveryManager()
  nameWithType: DiscoveryManager.DiscoveryManager()
  fullName: Steeltoe.Discovery.Eureka.DiscoveryManager.DiscoveryManager()
  type: Constructor
  source:
    remote:
      path: src/Discovery/src/Eureka/DiscoveryManager.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: .ctor
    path: ../Steeltoe/src/Discovery/src/Eureka/DiscoveryManager.cs
    startLine: 12
  assemblies:
  - Steeltoe.Discovery.Eureka
  namespace: Steeltoe.Discovery.Eureka
  syntax:
    content: protected DiscoveryManager()
    content.vb: Protected Sub New
  overload: Steeltoe.Discovery.Eureka.DiscoveryManager.#ctor*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Steeltoe.Discovery.Eureka.DiscoveryManager._instance
  commentId: F:Steeltoe.Discovery.Eureka.DiscoveryManager._instance
  id: _instance
  parent: Steeltoe.Discovery.Eureka.DiscoveryManager
  langs:
  - csharp
  - vb
  name: _instance
  nameWithType: DiscoveryManager._instance
  fullName: Steeltoe.Discovery.Eureka.DiscoveryManager._instance
  type: Field
  source:
    remote:
      path: src/Discovery/src/Eureka/DiscoveryManager.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: _instance
    path: ../Steeltoe/src/Discovery/src/Eureka/DiscoveryManager.cs
    startLine: 16
  assemblies:
  - Steeltoe.Discovery.Eureka
  namespace: Steeltoe.Discovery.Eureka
  syntax:
    content: protected static readonly DiscoveryManager _instance
    return:
      type: Steeltoe.Discovery.Eureka.DiscoveryManager
    content.vb: Protected Shared ReadOnly _instance As DiscoveryManager
  modifiers.csharp:
  - protected
  - static
  - readonly
  modifiers.vb:
  - Protected
  - Shared
  - ReadOnly
- uid: Steeltoe.Discovery.Eureka.DiscoveryManager.Instance
  commentId: P:Steeltoe.Discovery.Eureka.DiscoveryManager.Instance
  id: Instance
  parent: Steeltoe.Discovery.Eureka.DiscoveryManager
  langs:
  - csharp
  - vb
  name: Instance
  nameWithType: DiscoveryManager.Instance
  fullName: Steeltoe.Discovery.Eureka.DiscoveryManager.Instance
  type: Property
  source:
    remote:
      path: src/Discovery/src/Eureka/DiscoveryManager.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Instance
    path: ../Steeltoe/src/Discovery/src/Eureka/DiscoveryManager.cs
    startLine: 18
  assemblies:
  - Steeltoe.Discovery.Eureka
  namespace: Steeltoe.Discovery.Eureka
  syntax:
    content: public static DiscoveryManager Instance { get; }
    parameters: []
    return:
      type: Steeltoe.Discovery.Eureka.DiscoveryManager
    content.vb: Public Shared ReadOnly Property Instance As DiscoveryManager
  overload: Steeltoe.Discovery.Eureka.DiscoveryManager.Instance*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Steeltoe.Discovery.Eureka.DiscoveryManager.Client
  commentId: P:Steeltoe.Discovery.Eureka.DiscoveryManager.Client
  id: Client
  parent: Steeltoe.Discovery.Eureka.DiscoveryManager
  langs:
  - csharp
  - vb
  name: Client
  nameWithType: DiscoveryManager.Client
  fullName: Steeltoe.Discovery.Eureka.DiscoveryManager.Client
  type: Property
  source:
    remote:
      path: src/Discovery/src/Eureka/DiscoveryManager.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Client
    path: ../Steeltoe/src/Discovery/src/Eureka/DiscoveryManager.cs
    startLine: 26
  assemblies:
  - Steeltoe.Discovery.Eureka
  namespace: Steeltoe.Discovery.Eureka
  syntax:
    content: public virtual DiscoveryClient Client { get; protected set; }
    parameters: []
    return:
      type: Steeltoe.Discovery.Eureka.DiscoveryClient
    content.vb: Public Overridable Property Client As DiscoveryClient
  overload: Steeltoe.Discovery.Eureka.DiscoveryManager.Client*
  modifiers.csharp:
  - public
  - virtual
  - get
  - protected set
  modifiers.vb:
  - Public
  - Overridable
  - Get
  - Protected Set
- uid: Steeltoe.Discovery.Eureka.DiscoveryManager.ClientConfig
  commentId: P:Steeltoe.Discovery.Eureka.DiscoveryManager.ClientConfig
  id: ClientConfig
  parent: Steeltoe.Discovery.Eureka.DiscoveryManager
  langs:
  - csharp
  - vb
  name: ClientConfig
  nameWithType: DiscoveryManager.ClientConfig
  fullName: Steeltoe.Discovery.Eureka.DiscoveryManager.ClientConfig
  type: Property
  source:
    remote:
      path: src/Discovery/src/Eureka/DiscoveryManager.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: ClientConfig
    path: ../Steeltoe/src/Discovery/src/Eureka/DiscoveryManager.cs
    startLine: 28
  assemblies:
  - Steeltoe.Discovery.Eureka
  namespace: Steeltoe.Discovery.Eureka
  syntax:
    content: public virtual IEurekaClientConfig ClientConfig { get; protected set; }
    parameters: []
    return:
      type: Steeltoe.Discovery.Eureka.IEurekaClientConfig
    content.vb: Public Overridable Property ClientConfig As IEurekaClientConfig
  overload: Steeltoe.Discovery.Eureka.DiscoveryManager.ClientConfig*
  modifiers.csharp:
  - public
  - virtual
  - get
  - protected set
  modifiers.vb:
  - Public
  - Overridable
  - Get
  - Protected Set
- uid: Steeltoe.Discovery.Eureka.DiscoveryManager.InstanceConfig
  commentId: P:Steeltoe.Discovery.Eureka.DiscoveryManager.InstanceConfig
  id: InstanceConfig
  parent: Steeltoe.Discovery.Eureka.DiscoveryManager
  langs:
  - csharp
  - vb
  name: InstanceConfig
  nameWithType: DiscoveryManager.InstanceConfig
  fullName: Steeltoe.Discovery.Eureka.DiscoveryManager.InstanceConfig
  type: Property
  source:
    remote:
      path: src/Discovery/src/Eureka/DiscoveryManager.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: InstanceConfig
    path: ../Steeltoe/src/Discovery/src/Eureka/DiscoveryManager.cs
    startLine: 30
  assemblies:
  - Steeltoe.Discovery.Eureka
  namespace: Steeltoe.Discovery.Eureka
  syntax:
    content: public virtual IEurekaInstanceConfig InstanceConfig { get; protected set; }
    parameters: []
    return:
      type: Steeltoe.Discovery.Eureka.IEurekaInstanceConfig
    content.vb: Public Overridable Property InstanceConfig As IEurekaInstanceConfig
  overload: Steeltoe.Discovery.Eureka.DiscoveryManager.InstanceConfig*
  modifiers.csharp:
  - public
  - virtual
  - get
  - protected set
  modifiers.vb:
  - Public
  - Overridable
  - Get
  - Protected Set
- uid: Steeltoe.Discovery.Eureka.DiscoveryManager.LookupService
  commentId: P:Steeltoe.Discovery.Eureka.DiscoveryManager.LookupService
  id: LookupService
  parent: Steeltoe.Discovery.Eureka.DiscoveryManager
  langs:
  - csharp
  - vb
  name: LookupService
  nameWithType: DiscoveryManager.LookupService
  fullName: Steeltoe.Discovery.Eureka.DiscoveryManager.LookupService
  type: Property
  source:
    remote:
      path: src/Discovery/src/Eureka/DiscoveryManager.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: LookupService
    path: ../Steeltoe/src/Discovery/src/Eureka/DiscoveryManager.cs
    startLine: 32
  assemblies:
  - Steeltoe.Discovery.Eureka
  namespace: Steeltoe.Discovery.Eureka
  syntax:
    content: public virtual ILookupService LookupService { get; }
    parameters: []
    return:
      type: Steeltoe.Discovery.Eureka.ILookupService
    content.vb: Public Overridable ReadOnly Property LookupService As ILookupService
  overload: Steeltoe.Discovery.Eureka.DiscoveryManager.LookupService*
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: Steeltoe.Discovery.Eureka.DiscoveryManager._logger
  commentId: F:Steeltoe.Discovery.Eureka.DiscoveryManager._logger
  id: _logger
  parent: Steeltoe.Discovery.Eureka.DiscoveryManager
  langs:
  - csharp
  - vb
  name: _logger
  nameWithType: DiscoveryManager._logger
  fullName: Steeltoe.Discovery.Eureka.DiscoveryManager._logger
  type: Field
  source:
    remote:
      path: src/Discovery/src/Eureka/DiscoveryManager.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: _logger
    path: ../Steeltoe/src/Discovery/src/Eureka/DiscoveryManager.cs
    startLine: 40
  assemblies:
  - Steeltoe.Discovery.Eureka
  namespace: Steeltoe.Discovery.Eureka
  syntax:
    content: protected ILogger _logger
    return:
      type: ILogger
    content.vb: Protected _logger As ILogger
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Steeltoe.Discovery.Eureka.DiscoveryManager.Initialize(Steeltoe.Discovery.Eureka.IEurekaClientConfig,ILoggerFactory)
  commentId: M:Steeltoe.Discovery.Eureka.DiscoveryManager.Initialize(Steeltoe.Discovery.Eureka.IEurekaClientConfig,ILoggerFactory)
  id: Initialize(Steeltoe.Discovery.Eureka.IEurekaClientConfig,ILoggerFactory)
  parent: Steeltoe.Discovery.Eureka.DiscoveryManager
  langs:
  - csharp
  - vb
  name: Initialize(IEurekaClientConfig, ILoggerFactory)
  nameWithType: DiscoveryManager.Initialize(IEurekaClientConfig, ILoggerFactory)
  fullName: Steeltoe.Discovery.Eureka.DiscoveryManager.Initialize(Steeltoe.Discovery.Eureka.IEurekaClientConfig, ILoggerFactory)
  type: Method
  source:
    remote:
      path: src/Discovery/src/Eureka/DiscoveryManager.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Initialize
    path: ../Steeltoe/src/Discovery/src/Eureka/DiscoveryManager.cs
    startLine: 42
  assemblies:
  - Steeltoe.Discovery.Eureka
  namespace: Steeltoe.Discovery.Eureka
  syntax:
    content: public virtual void Initialize(IEurekaClientConfig clientConfig, ILoggerFactory logFactory = null)
    parameters:
    - id: clientConfig
      type: Steeltoe.Discovery.Eureka.IEurekaClientConfig
    - id: logFactory
      type: ILoggerFactory
    content.vb: Public Overridable Sub Initialize(clientConfig As IEurekaClientConfig, logFactory As ILoggerFactory = Nothing)
  overload: Steeltoe.Discovery.Eureka.DiscoveryManager.Initialize*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Steeltoe.Discovery.Eureka.DiscoveryManager.Initialize(Steeltoe.Discovery.Eureka.IEurekaClientConfig,Steeltoe.Discovery.Eureka.IEurekaInstanceConfig,ILoggerFactory)
  commentId: M:Steeltoe.Discovery.Eureka.DiscoveryManager.Initialize(Steeltoe.Discovery.Eureka.IEurekaClientConfig,Steeltoe.Discovery.Eureka.IEurekaInstanceConfig,ILoggerFactory)
  id: Initialize(Steeltoe.Discovery.Eureka.IEurekaClientConfig,Steeltoe.Discovery.Eureka.IEurekaInstanceConfig,ILoggerFactory)
  parent: Steeltoe.Discovery.Eureka.DiscoveryManager
  langs:
  - csharp
  - vb
  name: Initialize(IEurekaClientConfig, IEurekaInstanceConfig, ILoggerFactory)
  nameWithType: DiscoveryManager.Initialize(IEurekaClientConfig, IEurekaInstanceConfig, ILoggerFactory)
  fullName: Steeltoe.Discovery.Eureka.DiscoveryManager.Initialize(Steeltoe.Discovery.Eureka.IEurekaClientConfig, Steeltoe.Discovery.Eureka.IEurekaInstanceConfig, ILoggerFactory)
  type: Method
  source:
    remote:
      path: src/Discovery/src/Eureka/DiscoveryManager.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Initialize
    path: ../Steeltoe/src/Discovery/src/Eureka/DiscoveryManager.cs
    startLine: 47
  assemblies:
  - Steeltoe.Discovery.Eureka
  namespace: Steeltoe.Discovery.Eureka
  syntax:
    content: public virtual void Initialize(IEurekaClientConfig clientConfig, IEurekaInstanceConfig instanceConfig, ILoggerFactory logFactory = null)
    parameters:
    - id: clientConfig
      type: Steeltoe.Discovery.Eureka.IEurekaClientConfig
    - id: instanceConfig
      type: Steeltoe.Discovery.Eureka.IEurekaInstanceConfig
    - id: logFactory
      type: ILoggerFactory
    content.vb: Public Overridable Sub Initialize(clientConfig As IEurekaClientConfig, instanceConfig As IEurekaInstanceConfig, logFactory As ILoggerFactory = Nothing)
  overload: Steeltoe.Discovery.Eureka.DiscoveryManager.Initialize*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Steeltoe.Discovery.Eureka.DiscoveryManager.Initialize(Steeltoe.Discovery.Eureka.IEurekaClientConfig,Steeltoe.Discovery.Eureka.Transport.IEurekaHttpClient,ILoggerFactory)
  commentId: M:Steeltoe.Discovery.Eureka.DiscoveryManager.Initialize(Steeltoe.Discovery.Eureka.IEurekaClientConfig,Steeltoe.Discovery.Eureka.Transport.IEurekaHttpClient,ILoggerFactory)
  id: Initialize(Steeltoe.Discovery.Eureka.IEurekaClientConfig,Steeltoe.Discovery.Eureka.Transport.IEurekaHttpClient,ILoggerFactory)
  parent: Steeltoe.Discovery.Eureka.DiscoveryManager
  langs:
  - csharp
  - vb
  name: Initialize(IEurekaClientConfig, IEurekaHttpClient, ILoggerFactory)
  nameWithType: DiscoveryManager.Initialize(IEurekaClientConfig, IEurekaHttpClient, ILoggerFactory)
  fullName: Steeltoe.Discovery.Eureka.DiscoveryManager.Initialize(Steeltoe.Discovery.Eureka.IEurekaClientConfig, Steeltoe.Discovery.Eureka.Transport.IEurekaHttpClient, ILoggerFactory)
  type: Method
  source:
    remote:
      path: src/Discovery/src/Eureka/DiscoveryManager.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Initialize
    path: ../Steeltoe/src/Discovery/src/Eureka/DiscoveryManager.cs
    startLine: 52
  assemblies:
  - Steeltoe.Discovery.Eureka
  namespace: Steeltoe.Discovery.Eureka
  syntax:
    content: public virtual void Initialize(IEurekaClientConfig clientConfig, IEurekaHttpClient httpClient, ILoggerFactory logFactory = null)
    parameters:
    - id: clientConfig
      type: Steeltoe.Discovery.Eureka.IEurekaClientConfig
    - id: httpClient
      type: Steeltoe.Discovery.Eureka.Transport.IEurekaHttpClient
    - id: logFactory
      type: ILoggerFactory
    content.vb: Public Overridable Sub Initialize(clientConfig As IEurekaClientConfig, httpClient As IEurekaHttpClient, logFactory As ILoggerFactory = Nothing)
  overload: Steeltoe.Discovery.Eureka.DiscoveryManager.Initialize*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Steeltoe.Discovery.Eureka.DiscoveryManager.Initialize(Steeltoe.Discovery.Eureka.IEurekaClientConfig,Steeltoe.Discovery.Eureka.IEurekaInstanceConfig,Steeltoe.Discovery.Eureka.Transport.IEurekaHttpClient,ILoggerFactory)
  commentId: M:Steeltoe.Discovery.Eureka.DiscoveryManager.Initialize(Steeltoe.Discovery.Eureka.IEurekaClientConfig,Steeltoe.Discovery.Eureka.IEurekaInstanceConfig,Steeltoe.Discovery.Eureka.Transport.IEurekaHttpClient,ILoggerFactory)
  id: Initialize(Steeltoe.Discovery.Eureka.IEurekaClientConfig,Steeltoe.Discovery.Eureka.IEurekaInstanceConfig,Steeltoe.Discovery.Eureka.Transport.IEurekaHttpClient,ILoggerFactory)
  parent: Steeltoe.Discovery.Eureka.DiscoveryManager
  langs:
  - csharp
  - vb
  name: Initialize(IEurekaClientConfig, IEurekaInstanceConfig, IEurekaHttpClient, ILoggerFactory)
  nameWithType: DiscoveryManager.Initialize(IEurekaClientConfig, IEurekaInstanceConfig, IEurekaHttpClient, ILoggerFactory)
  fullName: Steeltoe.Discovery.Eureka.DiscoveryManager.Initialize(Steeltoe.Discovery.Eureka.IEurekaClientConfig, Steeltoe.Discovery.Eureka.IEurekaInstanceConfig, Steeltoe.Discovery.Eureka.Transport.IEurekaHttpClient, ILoggerFactory)
  type: Method
  source:
    remote:
      path: src/Discovery/src/Eureka/DiscoveryManager.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Initialize
    path: ../Steeltoe/src/Discovery/src/Eureka/DiscoveryManager.cs
    startLine: 59
  assemblies:
  - Steeltoe.Discovery.Eureka
  namespace: Steeltoe.Discovery.Eureka
  syntax:
    content: public virtual void Initialize(IEurekaClientConfig clientConfig, IEurekaInstanceConfig instanceConfig, IEurekaHttpClient httpClient, ILoggerFactory logFactory = null)
    parameters:
    - id: clientConfig
      type: Steeltoe.Discovery.Eureka.IEurekaClientConfig
    - id: instanceConfig
      type: Steeltoe.Discovery.Eureka.IEurekaInstanceConfig
    - id: httpClient
      type: Steeltoe.Discovery.Eureka.Transport.IEurekaHttpClient
    - id: logFactory
      type: ILoggerFactory
    content.vb: Public Overridable Sub Initialize(clientConfig As IEurekaClientConfig, instanceConfig As IEurekaInstanceConfig, httpClient As IEurekaHttpClient, logFactory As ILoggerFactory = Nothing)
  overload: Steeltoe.Discovery.Eureka.DiscoveryManager.Initialize*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
references:
- uid: Steeltoe.Discovery.Eureka
  commentId: N:Steeltoe.Discovery.Eureka
  name: Steeltoe.Discovery.Eureka
  nameWithType: Steeltoe.Discovery.Eureka
  fullName: Steeltoe.Discovery.Eureka
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Steeltoe.Discovery.Eureka.DiscoveryManager.#ctor*
  commentId: Overload:Steeltoe.Discovery.Eureka.DiscoveryManager.#ctor
  name: DiscoveryManager
  nameWithType: DiscoveryManager.DiscoveryManager
  fullName: Steeltoe.Discovery.Eureka.DiscoveryManager.DiscoveryManager
- uid: Steeltoe.Discovery.Eureka.DiscoveryManager
  commentId: T:Steeltoe.Discovery.Eureka.DiscoveryManager
  parent: Steeltoe.Discovery.Eureka
  name: DiscoveryManager
  nameWithType: DiscoveryManager
  fullName: Steeltoe.Discovery.Eureka.DiscoveryManager
- uid: Steeltoe.Discovery.Eureka.DiscoveryManager.Instance*
  commentId: Overload:Steeltoe.Discovery.Eureka.DiscoveryManager.Instance
  name: Instance
  nameWithType: DiscoveryManager.Instance
  fullName: Steeltoe.Discovery.Eureka.DiscoveryManager.Instance
- uid: Steeltoe.Discovery.Eureka.DiscoveryManager.Client*
  commentId: Overload:Steeltoe.Discovery.Eureka.DiscoveryManager.Client
  name: Client
  nameWithType: DiscoveryManager.Client
  fullName: Steeltoe.Discovery.Eureka.DiscoveryManager.Client
- uid: Steeltoe.Discovery.Eureka.DiscoveryClient
  commentId: T:Steeltoe.Discovery.Eureka.DiscoveryClient
  parent: Steeltoe.Discovery.Eureka
  name: DiscoveryClient
  nameWithType: DiscoveryClient
  fullName: Steeltoe.Discovery.Eureka.DiscoveryClient
- uid: Steeltoe.Discovery.Eureka.DiscoveryManager.ClientConfig*
  commentId: Overload:Steeltoe.Discovery.Eureka.DiscoveryManager.ClientConfig
  name: ClientConfig
  nameWithType: DiscoveryManager.ClientConfig
  fullName: Steeltoe.Discovery.Eureka.DiscoveryManager.ClientConfig
- uid: Steeltoe.Discovery.Eureka.IEurekaClientConfig
  commentId: T:Steeltoe.Discovery.Eureka.IEurekaClientConfig
  parent: Steeltoe.Discovery.Eureka
  name: IEurekaClientConfig
  nameWithType: IEurekaClientConfig
  fullName: Steeltoe.Discovery.Eureka.IEurekaClientConfig
- uid: Steeltoe.Discovery.Eureka.DiscoveryManager.InstanceConfig*
  commentId: Overload:Steeltoe.Discovery.Eureka.DiscoveryManager.InstanceConfig
  name: InstanceConfig
  nameWithType: DiscoveryManager.InstanceConfig
  fullName: Steeltoe.Discovery.Eureka.DiscoveryManager.InstanceConfig
- uid: Steeltoe.Discovery.Eureka.IEurekaInstanceConfig
  commentId: T:Steeltoe.Discovery.Eureka.IEurekaInstanceConfig
  parent: Steeltoe.Discovery.Eureka
  name: IEurekaInstanceConfig
  nameWithType: IEurekaInstanceConfig
  fullName: Steeltoe.Discovery.Eureka.IEurekaInstanceConfig
- uid: Steeltoe.Discovery.Eureka.DiscoveryManager.LookupService*
  commentId: Overload:Steeltoe.Discovery.Eureka.DiscoveryManager.LookupService
  name: LookupService
  nameWithType: DiscoveryManager.LookupService
  fullName: Steeltoe.Discovery.Eureka.DiscoveryManager.LookupService
- uid: Steeltoe.Discovery.Eureka.ILookupService
  commentId: T:Steeltoe.Discovery.Eureka.ILookupService
  parent: Steeltoe.Discovery.Eureka
  name: ILookupService
  nameWithType: ILookupService
  fullName: Steeltoe.Discovery.Eureka.ILookupService
- uid: ILogger
  isExternal: true
  name: ILogger
  nameWithType: ILogger
  fullName: ILogger
- uid: Steeltoe.Discovery.Eureka.DiscoveryManager.Initialize*
  commentId: Overload:Steeltoe.Discovery.Eureka.DiscoveryManager.Initialize
  name: Initialize
  nameWithType: DiscoveryManager.Initialize
  fullName: Steeltoe.Discovery.Eureka.DiscoveryManager.Initialize
- uid: ILoggerFactory
  isExternal: true
  name: ILoggerFactory
  nameWithType: ILoggerFactory
  fullName: ILoggerFactory
- uid: Steeltoe.Discovery.Eureka.Transport.IEurekaHttpClient
  commentId: T:Steeltoe.Discovery.Eureka.Transport.IEurekaHttpClient
  parent: Steeltoe.Discovery.Eureka.Transport
  name: IEurekaHttpClient
  nameWithType: IEurekaHttpClient
  fullName: Steeltoe.Discovery.Eureka.Transport.IEurekaHttpClient
- uid: Steeltoe.Discovery.Eureka.Transport
  commentId: N:Steeltoe.Discovery.Eureka.Transport
  name: Steeltoe.Discovery.Eureka.Transport
  nameWithType: Steeltoe.Discovery.Eureka.Transport
  fullName: Steeltoe.Discovery.Eureka.Transport
