### YamlMime:ManagedReference
items:
- uid: Steeltoe.Messaging.RabbitMQ.Listener.DefaultExceptionStrategy
  commentId: T:Steeltoe.Messaging.RabbitMQ.Listener.DefaultExceptionStrategy
  id: DefaultExceptionStrategy
  parent: Steeltoe.Messaging.RabbitMQ.Listener
  children:
  - Steeltoe.Messaging.RabbitMQ.Listener.DefaultExceptionStrategy.#ctor(Microsoft.Extensions.Logging.ILogger)
  - Steeltoe.Messaging.RabbitMQ.Listener.DefaultExceptionStrategy.IsFatal(System.Exception)
  - Steeltoe.Messaging.RabbitMQ.Listener.DefaultExceptionStrategy.IsUserCauseFatal(System.Exception)
  langs:
  - csharp
  - vb
  name: DefaultExceptionStrategy
  nameWithType: DefaultExceptionStrategy
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.DefaultExceptionStrategy
  type: Class
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Listener/DefaultExceptionStrategy.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: DefaultExceptionStrategy
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Listener/DefaultExceptionStrategy.cs
    startLine: 12
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Listener
  syntax:
    content: 'public class DefaultExceptionStrategy : IFatalExceptionStrategy'
    content.vb: >-
      Public Class DefaultExceptionStrategy

          Implements IFatalExceptionStrategy
  inheritance:
  - System.Object
  implements:
  - Steeltoe.Messaging.RabbitMQ.Listener.IFatalExceptionStrategy
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Steeltoe.Messaging.RabbitMQ.Listener.DefaultExceptionStrategy.#ctor(Microsoft.Extensions.Logging.ILogger)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Listener.DefaultExceptionStrategy.#ctor(Microsoft.Extensions.Logging.ILogger)
  id: '#ctor(Microsoft.Extensions.Logging.ILogger)'
  parent: Steeltoe.Messaging.RabbitMQ.Listener.DefaultExceptionStrategy
  langs:
  - csharp
  - vb
  name: DefaultExceptionStrategy(ILogger)
  nameWithType: DefaultExceptionStrategy.DefaultExceptionStrategy(ILogger)
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.DefaultExceptionStrategy.DefaultExceptionStrategy(Microsoft.Extensions.Logging.ILogger)
  type: Constructor
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Listener/DefaultExceptionStrategy.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: .ctor
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Listener/DefaultExceptionStrategy.cs
    startLine: 16
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Listener
  syntax:
    content: public DefaultExceptionStrategy(ILogger logger = null)
    parameters:
    - id: logger
      type: Microsoft.Extensions.Logging.ILogger
    content.vb: Public Sub New(logger As ILogger = Nothing)
  overload: Steeltoe.Messaging.RabbitMQ.Listener.DefaultExceptionStrategy.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Steeltoe.Messaging.RabbitMQ.Listener.DefaultExceptionStrategy.IsFatal(System.Exception)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Listener.DefaultExceptionStrategy.IsFatal(System.Exception)
  id: IsFatal(System.Exception)
  parent: Steeltoe.Messaging.RabbitMQ.Listener.DefaultExceptionStrategy
  langs:
  - csharp
  - vb
  name: IsFatal(Exception)
  nameWithType: DefaultExceptionStrategy.IsFatal(Exception)
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.DefaultExceptionStrategy.IsFatal(System.Exception)
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Listener/DefaultExceptionStrategy.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: IsFatal
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Listener/DefaultExceptionStrategy.cs
    startLine: 21
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Listener
  syntax:
    content: public bool IsFatal(Exception exception)
    parameters:
    - id: exception
      type: System.Exception
    return:
      type: System.Boolean
    content.vb: Public Function IsFatal(exception As Exception) As Boolean
  overload: Steeltoe.Messaging.RabbitMQ.Listener.DefaultExceptionStrategy.IsFatal*
  implements:
  - Steeltoe.Messaging.RabbitMQ.Listener.IFatalExceptionStrategy.IsFatal(System.Exception)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Steeltoe.Messaging.RabbitMQ.Listener.DefaultExceptionStrategy.IsUserCauseFatal(System.Exception)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Listener.DefaultExceptionStrategy.IsUserCauseFatal(System.Exception)
  id: IsUserCauseFatal(System.Exception)
  parent: Steeltoe.Messaging.RabbitMQ.Listener.DefaultExceptionStrategy
  langs:
  - csharp
  - vb
  name: IsUserCauseFatal(Exception)
  nameWithType: DefaultExceptionStrategy.IsUserCauseFatal(Exception)
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.DefaultExceptionStrategy.IsUserCauseFatal(System.Exception)
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Listener/DefaultExceptionStrategy.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: IsUserCauseFatal
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Listener/DefaultExceptionStrategy.cs
    startLine: 42
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Listener
  syntax:
    content: protected virtual bool IsUserCauseFatal(Exception cause)
    parameters:
    - id: cause
      type: System.Exception
    return:
      type: System.Boolean
    content.vb: Protected Overridable Function IsUserCauseFatal(cause As Exception) As Boolean
  overload: Steeltoe.Messaging.RabbitMQ.Listener.DefaultExceptionStrategy.IsUserCauseFatal*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
references:
- uid: Steeltoe.Messaging.RabbitMQ.Listener
  commentId: N:Steeltoe.Messaging.RabbitMQ.Listener
  name: Steeltoe.Messaging.RabbitMQ.Listener
  nameWithType: Steeltoe.Messaging.RabbitMQ.Listener
  fullName: Steeltoe.Messaging.RabbitMQ.Listener
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Steeltoe.Messaging.RabbitMQ.Listener.IFatalExceptionStrategy
  commentId: T:Steeltoe.Messaging.RabbitMQ.Listener.IFatalExceptionStrategy
  parent: Steeltoe.Messaging.RabbitMQ.Listener
  name: IFatalExceptionStrategy
  nameWithType: IFatalExceptionStrategy
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.IFatalExceptionStrategy
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Steeltoe.Messaging.RabbitMQ.Listener.DefaultExceptionStrategy.#ctor*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Listener.DefaultExceptionStrategy.#ctor
  name: DefaultExceptionStrategy
  nameWithType: DefaultExceptionStrategy.DefaultExceptionStrategy
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.DefaultExceptionStrategy.DefaultExceptionStrategy
- uid: Microsoft.Extensions.Logging.ILogger
  commentId: T:Microsoft.Extensions.Logging.ILogger
  parent: Microsoft.Extensions.Logging
  isExternal: true
  name: ILogger
  nameWithType: ILogger
  fullName: Microsoft.Extensions.Logging.ILogger
- uid: Microsoft.Extensions.Logging
  commentId: N:Microsoft.Extensions.Logging
  isExternal: true
  name: Microsoft.Extensions.Logging
  nameWithType: Microsoft.Extensions.Logging
  fullName: Microsoft.Extensions.Logging
- uid: Steeltoe.Messaging.RabbitMQ.Listener.DefaultExceptionStrategy.IsFatal*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Listener.DefaultExceptionStrategy.IsFatal
  name: IsFatal
  nameWithType: DefaultExceptionStrategy.IsFatal
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.DefaultExceptionStrategy.IsFatal
- uid: Steeltoe.Messaging.RabbitMQ.Listener.IFatalExceptionStrategy.IsFatal(System.Exception)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Listener.IFatalExceptionStrategy.IsFatal(System.Exception)
  parent: Steeltoe.Messaging.RabbitMQ.Listener.IFatalExceptionStrategy
  isExternal: true
  name: IsFatal(Exception)
  nameWithType: IFatalExceptionStrategy.IsFatal(Exception)
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.IFatalExceptionStrategy.IsFatal(System.Exception)
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Listener.IFatalExceptionStrategy.IsFatal(System.Exception)
    name: IsFatal
    nameWithType: IFatalExceptionStrategy.IsFatal
    fullName: Steeltoe.Messaging.RabbitMQ.Listener.IFatalExceptionStrategy.IsFatal
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Listener.IFatalExceptionStrategy.IsFatal(System.Exception)
    name: IsFatal
    nameWithType: IFatalExceptionStrategy.IsFatal
    fullName: Steeltoe.Messaging.RabbitMQ.Listener.IFatalExceptionStrategy.IsFatal
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Exception
  commentId: T:System.Exception
  parent: System
  isExternal: true
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Steeltoe.Messaging.RabbitMQ.Listener.DefaultExceptionStrategy.IsUserCauseFatal*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Listener.DefaultExceptionStrategy.IsUserCauseFatal
  name: IsUserCauseFatal
  nameWithType: DefaultExceptionStrategy.IsUserCauseFatal
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.DefaultExceptionStrategy.IsUserCauseFatal
