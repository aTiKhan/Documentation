### YamlMime:ManagedReference
items:
- uid: Steeltoe.Messaging.RabbitMQ.Config.BindingBuilder.HeadersExchangeMapConfigurer
  commentId: T:Steeltoe.Messaging.RabbitMQ.Config.BindingBuilder.HeadersExchangeMapConfigurer
  id: BindingBuilder.HeadersExchangeMapConfigurer
  parent: Steeltoe.Messaging.RabbitMQ.Config
  children:
  - Steeltoe.Messaging.RabbitMQ.Config.BindingBuilder.HeadersExchangeMapConfigurer.#ctor(Steeltoe.Messaging.RabbitMQ.Config.BindingBuilder.DestinationConfigurer,Steeltoe.Messaging.RabbitMQ.Config.HeadersExchange)
  - Steeltoe.Messaging.RabbitMQ.Config.BindingBuilder.HeadersExchangeMapConfigurer.Destination
  - Steeltoe.Messaging.RabbitMQ.Config.BindingBuilder.HeadersExchangeMapConfigurer.Exchange
  - Steeltoe.Messaging.RabbitMQ.Config.BindingBuilder.HeadersExchangeMapConfigurer.Where(System.String)
  - Steeltoe.Messaging.RabbitMQ.Config.BindingBuilder.HeadersExchangeMapConfigurer.WhereAll(System.Collections.Generic.Dictionary{System.String,System.Object})
  - Steeltoe.Messaging.RabbitMQ.Config.BindingBuilder.HeadersExchangeMapConfigurer.WhereAll(System.String[])
  - Steeltoe.Messaging.RabbitMQ.Config.BindingBuilder.HeadersExchangeMapConfigurer.WhereAny(System.Collections.Generic.Dictionary{System.String,System.Object})
  - Steeltoe.Messaging.RabbitMQ.Config.BindingBuilder.HeadersExchangeMapConfigurer.WhereAny(System.String[])
  langs:
  - csharp
  - vb
  name: BindingBuilder.HeadersExchangeMapConfigurer
  nameWithType: BindingBuilder.HeadersExchangeMapConfigurer
  fullName: Steeltoe.Messaging.RabbitMQ.Config.BindingBuilder.HeadersExchangeMapConfigurer
  type: Class
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Config/BindingBuilder.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: HeadersExchangeMapConfigurer
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Config/BindingBuilder.cs
    startLine: 72
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Config
  syntax:
    content: public class HeadersExchangeMapConfigurer
    content.vb: Public Class HeadersExchangeMapConfigurer
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Steeltoe.Messaging.RabbitMQ.Config.BindingBuilder.HeadersExchangeMapConfigurer.Destination
  commentId: P:Steeltoe.Messaging.RabbitMQ.Config.BindingBuilder.HeadersExchangeMapConfigurer.Destination
  id: Destination
  parent: Steeltoe.Messaging.RabbitMQ.Config.BindingBuilder.HeadersExchangeMapConfigurer
  langs:
  - csharp
  - vb
  name: Destination
  nameWithType: BindingBuilder.HeadersExchangeMapConfigurer.Destination
  fullName: Steeltoe.Messaging.RabbitMQ.Config.BindingBuilder.HeadersExchangeMapConfigurer.Destination
  type: Property
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Config/BindingBuilder.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Destination
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Config/BindingBuilder.cs
    startLine: 74
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Config
  syntax:
    content: public BindingBuilder.DestinationConfigurer Destination { get; }
    parameters: []
    return:
      type: Steeltoe.Messaging.RabbitMQ.Config.BindingBuilder.DestinationConfigurer
    content.vb: Public ReadOnly Property Destination As BindingBuilder.DestinationConfigurer
  overload: Steeltoe.Messaging.RabbitMQ.Config.BindingBuilder.HeadersExchangeMapConfigurer.Destination*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Steeltoe.Messaging.RabbitMQ.Config.BindingBuilder.HeadersExchangeMapConfigurer.Exchange
  commentId: P:Steeltoe.Messaging.RabbitMQ.Config.BindingBuilder.HeadersExchangeMapConfigurer.Exchange
  id: Exchange
  parent: Steeltoe.Messaging.RabbitMQ.Config.BindingBuilder.HeadersExchangeMapConfigurer
  langs:
  - csharp
  - vb
  name: Exchange
  nameWithType: BindingBuilder.HeadersExchangeMapConfigurer.Exchange
  fullName: Steeltoe.Messaging.RabbitMQ.Config.BindingBuilder.HeadersExchangeMapConfigurer.Exchange
  type: Property
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Config/BindingBuilder.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Exchange
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Config/BindingBuilder.cs
    startLine: 76
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Config
  syntax:
    content: public HeadersExchange Exchange { get; }
    parameters: []
    return:
      type: Steeltoe.Messaging.RabbitMQ.Config.HeadersExchange
    content.vb: Public ReadOnly Property Exchange As HeadersExchange
  overload: Steeltoe.Messaging.RabbitMQ.Config.BindingBuilder.HeadersExchangeMapConfigurer.Exchange*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Steeltoe.Messaging.RabbitMQ.Config.BindingBuilder.HeadersExchangeMapConfigurer.#ctor(Steeltoe.Messaging.RabbitMQ.Config.BindingBuilder.DestinationConfigurer,Steeltoe.Messaging.RabbitMQ.Config.HeadersExchange)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Config.BindingBuilder.HeadersExchangeMapConfigurer.#ctor(Steeltoe.Messaging.RabbitMQ.Config.BindingBuilder.DestinationConfigurer,Steeltoe.Messaging.RabbitMQ.Config.HeadersExchange)
  id: '#ctor(Steeltoe.Messaging.RabbitMQ.Config.BindingBuilder.DestinationConfigurer,Steeltoe.Messaging.RabbitMQ.Config.HeadersExchange)'
  parent: Steeltoe.Messaging.RabbitMQ.Config.BindingBuilder.HeadersExchangeMapConfigurer
  langs:
  - csharp
  - vb
  name: HeadersExchangeMapConfigurer(BindingBuilder.DestinationConfigurer, HeadersExchange)
  nameWithType: BindingBuilder.HeadersExchangeMapConfigurer.HeadersExchangeMapConfigurer(BindingBuilder.DestinationConfigurer, HeadersExchange)
  fullName: Steeltoe.Messaging.RabbitMQ.Config.BindingBuilder.HeadersExchangeMapConfigurer.HeadersExchangeMapConfigurer(Steeltoe.Messaging.RabbitMQ.Config.BindingBuilder.DestinationConfigurer, Steeltoe.Messaging.RabbitMQ.Config.HeadersExchange)
  type: Constructor
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Config/BindingBuilder.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: .ctor
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Config/BindingBuilder.cs
    startLine: 78
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Config
  syntax:
    content: public HeadersExchangeMapConfigurer(BindingBuilder.DestinationConfigurer destination, HeadersExchange exchange)
    parameters:
    - id: destination
      type: Steeltoe.Messaging.RabbitMQ.Config.BindingBuilder.DestinationConfigurer
    - id: exchange
      type: Steeltoe.Messaging.RabbitMQ.Config.HeadersExchange
    content.vb: Public Sub New(destination As BindingBuilder.DestinationConfigurer, exchange As HeadersExchange)
  overload: Steeltoe.Messaging.RabbitMQ.Config.BindingBuilder.HeadersExchangeMapConfigurer.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Steeltoe.Messaging.RabbitMQ.Config.BindingBuilder.HeadersExchangeMapConfigurer.Where(System.String)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Config.BindingBuilder.HeadersExchangeMapConfigurer.Where(System.String)
  id: Where(System.String)
  parent: Steeltoe.Messaging.RabbitMQ.Config.BindingBuilder.HeadersExchangeMapConfigurer
  langs:
  - csharp
  - vb
  name: Where(String)
  nameWithType: BindingBuilder.HeadersExchangeMapConfigurer.Where(String)
  fullName: Steeltoe.Messaging.RabbitMQ.Config.BindingBuilder.HeadersExchangeMapConfigurer.Where(System.String)
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Config/BindingBuilder.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Where
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Config/BindingBuilder.cs
    startLine: 84
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Config
  syntax:
    content: public BindingBuilder.HeadersExchangeMapConfigurer.HeadersExchangeSingleValueBindingCreator Where(string key)
    parameters:
    - id: key
      type: System.String
    return:
      type: Steeltoe.Messaging.RabbitMQ.Config.BindingBuilder.HeadersExchangeMapConfigurer.HeadersExchangeSingleValueBindingCreator
    content.vb: Public Function Where(key As String) As BindingBuilder.HeadersExchangeMapConfigurer.HeadersExchangeSingleValueBindingCreator
  overload: Steeltoe.Messaging.RabbitMQ.Config.BindingBuilder.HeadersExchangeMapConfigurer.Where*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Steeltoe.Messaging.RabbitMQ.Config.BindingBuilder.HeadersExchangeMapConfigurer.WhereAny(System.String[])
  commentId: M:Steeltoe.Messaging.RabbitMQ.Config.BindingBuilder.HeadersExchangeMapConfigurer.WhereAny(System.String[])
  id: WhereAny(System.String[])
  parent: Steeltoe.Messaging.RabbitMQ.Config.BindingBuilder.HeadersExchangeMapConfigurer
  langs:
  - csharp
  - vb
  name: WhereAny(String[])
  nameWithType: BindingBuilder.HeadersExchangeMapConfigurer.WhereAny(String[])
  fullName: Steeltoe.Messaging.RabbitMQ.Config.BindingBuilder.HeadersExchangeMapConfigurer.WhereAny(System.String[])
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Config/BindingBuilder.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: WhereAny
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Config/BindingBuilder.cs
    startLine: 89
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Config
  syntax:
    content: public BindingBuilder.HeadersExchangeMapConfigurer.HeadersExchangeKeysBindingCreator WhereAny(params string[] headerKeys)
    parameters:
    - id: headerKeys
      type: System.String[]
    return:
      type: Steeltoe.Messaging.RabbitMQ.Config.BindingBuilder.HeadersExchangeMapConfigurer.HeadersExchangeKeysBindingCreator
    content.vb: Public Function WhereAny(ParamArray headerKeys As String()) As BindingBuilder.HeadersExchangeMapConfigurer.HeadersExchangeKeysBindingCreator
  overload: Steeltoe.Messaging.RabbitMQ.Config.BindingBuilder.HeadersExchangeMapConfigurer.WhereAny*
  nameWithType.vb: BindingBuilder.HeadersExchangeMapConfigurer.WhereAny(String())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Steeltoe.Messaging.RabbitMQ.Config.BindingBuilder.HeadersExchangeMapConfigurer.WhereAny(System.String())
  name.vb: WhereAny(String())
- uid: Steeltoe.Messaging.RabbitMQ.Config.BindingBuilder.HeadersExchangeMapConfigurer.WhereAny(System.Collections.Generic.Dictionary{System.String,System.Object})
  commentId: M:Steeltoe.Messaging.RabbitMQ.Config.BindingBuilder.HeadersExchangeMapConfigurer.WhereAny(System.Collections.Generic.Dictionary{System.String,System.Object})
  id: WhereAny(System.Collections.Generic.Dictionary{System.String,System.Object})
  parent: Steeltoe.Messaging.RabbitMQ.Config.BindingBuilder.HeadersExchangeMapConfigurer
  langs:
  - csharp
  - vb
  name: WhereAny(Dictionary<String, Object>)
  nameWithType: BindingBuilder.HeadersExchangeMapConfigurer.WhereAny(Dictionary<String, Object>)
  fullName: Steeltoe.Messaging.RabbitMQ.Config.BindingBuilder.HeadersExchangeMapConfigurer.WhereAny(System.Collections.Generic.Dictionary<System.String, System.Object>)
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Config/BindingBuilder.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: WhereAny
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Config/BindingBuilder.cs
    startLine: 94
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Config
  syntax:
    content: public BindingBuilder.HeadersExchangeMapConfigurer.HeadersExchangeMapBindingCreator WhereAny(Dictionary<string, object> headerValues)
    parameters:
    - id: headerValues
      type: System.Collections.Generic.Dictionary{System.String,System.Object}
    return:
      type: Steeltoe.Messaging.RabbitMQ.Config.BindingBuilder.HeadersExchangeMapConfigurer.HeadersExchangeMapBindingCreator
    content.vb: Public Function WhereAny(headerValues As Dictionary(Of String, Object)) As BindingBuilder.HeadersExchangeMapConfigurer.HeadersExchangeMapBindingCreator
  overload: Steeltoe.Messaging.RabbitMQ.Config.BindingBuilder.HeadersExchangeMapConfigurer.WhereAny*
  nameWithType.vb: BindingBuilder.HeadersExchangeMapConfigurer.WhereAny(Dictionary(Of String, Object))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Steeltoe.Messaging.RabbitMQ.Config.BindingBuilder.HeadersExchangeMapConfigurer.WhereAny(System.Collections.Generic.Dictionary(Of System.String, System.Object))
  name.vb: WhereAny(Dictionary(Of String, Object))
- uid: Steeltoe.Messaging.RabbitMQ.Config.BindingBuilder.HeadersExchangeMapConfigurer.WhereAll(System.String[])
  commentId: M:Steeltoe.Messaging.RabbitMQ.Config.BindingBuilder.HeadersExchangeMapConfigurer.WhereAll(System.String[])
  id: WhereAll(System.String[])
  parent: Steeltoe.Messaging.RabbitMQ.Config.BindingBuilder.HeadersExchangeMapConfigurer
  langs:
  - csharp
  - vb
  name: WhereAll(String[])
  nameWithType: BindingBuilder.HeadersExchangeMapConfigurer.WhereAll(String[])
  fullName: Steeltoe.Messaging.RabbitMQ.Config.BindingBuilder.HeadersExchangeMapConfigurer.WhereAll(System.String[])
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Config/BindingBuilder.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: WhereAll
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Config/BindingBuilder.cs
    startLine: 99
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Config
  syntax:
    content: public BindingBuilder.HeadersExchangeMapConfigurer.HeadersExchangeKeysBindingCreator WhereAll(params string[] headerKeys)
    parameters:
    - id: headerKeys
      type: System.String[]
    return:
      type: Steeltoe.Messaging.RabbitMQ.Config.BindingBuilder.HeadersExchangeMapConfigurer.HeadersExchangeKeysBindingCreator
    content.vb: Public Function WhereAll(ParamArray headerKeys As String()) As BindingBuilder.HeadersExchangeMapConfigurer.HeadersExchangeKeysBindingCreator
  overload: Steeltoe.Messaging.RabbitMQ.Config.BindingBuilder.HeadersExchangeMapConfigurer.WhereAll*
  nameWithType.vb: BindingBuilder.HeadersExchangeMapConfigurer.WhereAll(String())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Steeltoe.Messaging.RabbitMQ.Config.BindingBuilder.HeadersExchangeMapConfigurer.WhereAll(System.String())
  name.vb: WhereAll(String())
- uid: Steeltoe.Messaging.RabbitMQ.Config.BindingBuilder.HeadersExchangeMapConfigurer.WhereAll(System.Collections.Generic.Dictionary{System.String,System.Object})
  commentId: M:Steeltoe.Messaging.RabbitMQ.Config.BindingBuilder.HeadersExchangeMapConfigurer.WhereAll(System.Collections.Generic.Dictionary{System.String,System.Object})
  id: WhereAll(System.Collections.Generic.Dictionary{System.String,System.Object})
  parent: Steeltoe.Messaging.RabbitMQ.Config.BindingBuilder.HeadersExchangeMapConfigurer
  langs:
  - csharp
  - vb
  name: WhereAll(Dictionary<String, Object>)
  nameWithType: BindingBuilder.HeadersExchangeMapConfigurer.WhereAll(Dictionary<String, Object>)
  fullName: Steeltoe.Messaging.RabbitMQ.Config.BindingBuilder.HeadersExchangeMapConfigurer.WhereAll(System.Collections.Generic.Dictionary<System.String, System.Object>)
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Config/BindingBuilder.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: WhereAll
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Config/BindingBuilder.cs
    startLine: 104
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Config
  syntax:
    content: public BindingBuilder.HeadersExchangeMapConfigurer.HeadersExchangeMapBindingCreator WhereAll(Dictionary<string, object> headerValues)
    parameters:
    - id: headerValues
      type: System.Collections.Generic.Dictionary{System.String,System.Object}
    return:
      type: Steeltoe.Messaging.RabbitMQ.Config.BindingBuilder.HeadersExchangeMapConfigurer.HeadersExchangeMapBindingCreator
    content.vb: Public Function WhereAll(headerValues As Dictionary(Of String, Object)) As BindingBuilder.HeadersExchangeMapConfigurer.HeadersExchangeMapBindingCreator
  overload: Steeltoe.Messaging.RabbitMQ.Config.BindingBuilder.HeadersExchangeMapConfigurer.WhereAll*
  nameWithType.vb: BindingBuilder.HeadersExchangeMapConfigurer.WhereAll(Dictionary(Of String, Object))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Steeltoe.Messaging.RabbitMQ.Config.BindingBuilder.HeadersExchangeMapConfigurer.WhereAll(System.Collections.Generic.Dictionary(Of System.String, System.Object))
  name.vb: WhereAll(Dictionary(Of String, Object))
references:
- uid: Steeltoe.Messaging.RabbitMQ.Config
  commentId: N:Steeltoe.Messaging.RabbitMQ.Config
  name: Steeltoe.Messaging.RabbitMQ.Config
  nameWithType: Steeltoe.Messaging.RabbitMQ.Config
  fullName: Steeltoe.Messaging.RabbitMQ.Config
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Steeltoe.Messaging.RabbitMQ.Config.BindingBuilder.HeadersExchangeMapConfigurer.Destination*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Config.BindingBuilder.HeadersExchangeMapConfigurer.Destination
  name: Destination
  nameWithType: BindingBuilder.HeadersExchangeMapConfigurer.Destination
  fullName: Steeltoe.Messaging.RabbitMQ.Config.BindingBuilder.HeadersExchangeMapConfigurer.Destination
- uid: Steeltoe.Messaging.RabbitMQ.Config.BindingBuilder.DestinationConfigurer
  commentId: T:Steeltoe.Messaging.RabbitMQ.Config.BindingBuilder.DestinationConfigurer
  parent: Steeltoe.Messaging.RabbitMQ.Config
  name: BindingBuilder.DestinationConfigurer
  nameWithType: BindingBuilder.DestinationConfigurer
  fullName: Steeltoe.Messaging.RabbitMQ.Config.BindingBuilder.DestinationConfigurer
- uid: Steeltoe.Messaging.RabbitMQ.Config.BindingBuilder.HeadersExchangeMapConfigurer.Exchange*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Config.BindingBuilder.HeadersExchangeMapConfigurer.Exchange
  name: Exchange
  nameWithType: BindingBuilder.HeadersExchangeMapConfigurer.Exchange
  fullName: Steeltoe.Messaging.RabbitMQ.Config.BindingBuilder.HeadersExchangeMapConfigurer.Exchange
- uid: Steeltoe.Messaging.RabbitMQ.Config.HeadersExchange
  commentId: T:Steeltoe.Messaging.RabbitMQ.Config.HeadersExchange
  parent: Steeltoe.Messaging.RabbitMQ.Config
  name: HeadersExchange
  nameWithType: HeadersExchange
  fullName: Steeltoe.Messaging.RabbitMQ.Config.HeadersExchange
- uid: Steeltoe.Messaging.RabbitMQ.Config.BindingBuilder.HeadersExchangeMapConfigurer.#ctor*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Config.BindingBuilder.HeadersExchangeMapConfigurer.#ctor
  name: HeadersExchangeMapConfigurer
  nameWithType: BindingBuilder.HeadersExchangeMapConfigurer.HeadersExchangeMapConfigurer
  fullName: Steeltoe.Messaging.RabbitMQ.Config.BindingBuilder.HeadersExchangeMapConfigurer.HeadersExchangeMapConfigurer
- uid: Steeltoe.Messaging.RabbitMQ.Config.BindingBuilder.HeadersExchangeMapConfigurer.Where*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Config.BindingBuilder.HeadersExchangeMapConfigurer.Where
  name: Where
  nameWithType: BindingBuilder.HeadersExchangeMapConfigurer.Where
  fullName: Steeltoe.Messaging.RabbitMQ.Config.BindingBuilder.HeadersExchangeMapConfigurer.Where
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Steeltoe.Messaging.RabbitMQ.Config.BindingBuilder.HeadersExchangeMapConfigurer.HeadersExchangeSingleValueBindingCreator
  commentId: T:Steeltoe.Messaging.RabbitMQ.Config.BindingBuilder.HeadersExchangeMapConfigurer.HeadersExchangeSingleValueBindingCreator
  parent: Steeltoe.Messaging.RabbitMQ.Config
  name: BindingBuilder.HeadersExchangeMapConfigurer.HeadersExchangeSingleValueBindingCreator
  nameWithType: BindingBuilder.HeadersExchangeMapConfigurer.HeadersExchangeSingleValueBindingCreator
  fullName: Steeltoe.Messaging.RabbitMQ.Config.BindingBuilder.HeadersExchangeMapConfigurer.HeadersExchangeSingleValueBindingCreator
- uid: Steeltoe.Messaging.RabbitMQ.Config.BindingBuilder.HeadersExchangeMapConfigurer.WhereAny*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Config.BindingBuilder.HeadersExchangeMapConfigurer.WhereAny
  name: WhereAny
  nameWithType: BindingBuilder.HeadersExchangeMapConfigurer.WhereAny
  fullName: Steeltoe.Messaging.RabbitMQ.Config.BindingBuilder.HeadersExchangeMapConfigurer.WhereAny
- uid: System.String[]
  isExternal: true
  name: String[]
  nameWithType: String[]
  fullName: System.String[]
  nameWithType.vb: String()
  fullName.vb: System.String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Steeltoe.Messaging.RabbitMQ.Config.BindingBuilder.HeadersExchangeMapConfigurer.HeadersExchangeKeysBindingCreator
  commentId: T:Steeltoe.Messaging.RabbitMQ.Config.BindingBuilder.HeadersExchangeMapConfigurer.HeadersExchangeKeysBindingCreator
  parent: Steeltoe.Messaging.RabbitMQ.Config
  name: BindingBuilder.HeadersExchangeMapConfigurer.HeadersExchangeKeysBindingCreator
  nameWithType: BindingBuilder.HeadersExchangeMapConfigurer.HeadersExchangeKeysBindingCreator
  fullName: Steeltoe.Messaging.RabbitMQ.Config.BindingBuilder.HeadersExchangeMapConfigurer.HeadersExchangeKeysBindingCreator
- uid: System.Collections.Generic.Dictionary{System.String,System.Object}
  commentId: T:System.Collections.Generic.Dictionary{System.String,System.Object}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  name: Dictionary<String, Object>
  nameWithType: Dictionary<String, Object>
  fullName: System.Collections.Generic.Dictionary<System.String, System.Object>
  nameWithType.vb: Dictionary(Of String, Object)
  fullName.vb: System.Collections.Generic.Dictionary(Of System.String, System.Object)
  name.vb: Dictionary(Of String, Object)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Config.BindingBuilder.HeadersExchangeMapConfigurer.HeadersExchangeMapBindingCreator
  commentId: T:Steeltoe.Messaging.RabbitMQ.Config.BindingBuilder.HeadersExchangeMapConfigurer.HeadersExchangeMapBindingCreator
  parent: Steeltoe.Messaging.RabbitMQ.Config
  name: BindingBuilder.HeadersExchangeMapConfigurer.HeadersExchangeMapBindingCreator
  nameWithType: BindingBuilder.HeadersExchangeMapConfigurer.HeadersExchangeMapBindingCreator
  fullName: Steeltoe.Messaging.RabbitMQ.Config.BindingBuilder.HeadersExchangeMapConfigurer.HeadersExchangeMapBindingCreator
- uid: System.Collections.Generic.Dictionary`2
  commentId: T:System.Collections.Generic.Dictionary`2
  isExternal: true
  name: Dictionary<TKey, TValue>
  nameWithType: Dictionary<TKey, TValue>
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>
  nameWithType.vb: Dictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue)
  name.vb: Dictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Steeltoe.Messaging.RabbitMQ.Config.BindingBuilder.HeadersExchangeMapConfigurer.WhereAll*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Config.BindingBuilder.HeadersExchangeMapConfigurer.WhereAll
  name: WhereAll
  nameWithType: BindingBuilder.HeadersExchangeMapConfigurer.WhereAll
  fullName: Steeltoe.Messaging.RabbitMQ.Config.BindingBuilder.HeadersExchangeMapConfigurer.WhereAll
