### YamlMime:ManagedReference
items:
- uid: Steeltoe.Common.Util.AntPathMatcher.AntPathStringMatcher
  commentId: T:Steeltoe.Common.Util.AntPathMatcher.AntPathStringMatcher
  id: AntPathMatcher.AntPathStringMatcher
  parent: Steeltoe.Common.Util
  children:
  - Steeltoe.Common.Util.AntPathMatcher.AntPathStringMatcher.#ctor(System.String)
  - Steeltoe.Common.Util.AntPathMatcher.AntPathStringMatcher.#ctor(System.String,System.Boolean)
  - Steeltoe.Common.Util.AntPathMatcher.AntPathStringMatcher.MatchStrings(System.String,System.Collections.Generic.IDictionary{System.String,System.String})
  langs:
  - csharp
  - vb
  name: AntPathMatcher.AntPathStringMatcher
  nameWithType: AntPathMatcher.AntPathStringMatcher
  fullName: Steeltoe.Common.Util.AntPathMatcher.AntPathStringMatcher
  type: Class
  source:
    remote:
      path: src/Common/src/Common/Util/AntPathMatcher.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: AntPathStringMatcher
    path: ../Steeltoe/src/Common/src/Common/Util/AntPathMatcher.cs
    startLine: 738
  assemblies:
  - Steeltoe.Common
  namespace: Steeltoe.Common.Util
  syntax:
    content: protected class AntPathStringMatcher
    content.vb: Protected Class AntPathStringMatcher
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - protected
  - class
  modifiers.vb:
  - Protected
  - Class
- uid: Steeltoe.Common.Util.AntPathMatcher.AntPathStringMatcher.#ctor(System.String)
  commentId: M:Steeltoe.Common.Util.AntPathMatcher.AntPathStringMatcher.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: Steeltoe.Common.Util.AntPathMatcher.AntPathStringMatcher
  langs:
  - csharp
  - vb
  name: AntPathStringMatcher(String)
  nameWithType: AntPathMatcher.AntPathStringMatcher.AntPathStringMatcher(String)
  fullName: Steeltoe.Common.Util.AntPathMatcher.AntPathStringMatcher.AntPathStringMatcher(System.String)
  type: Constructor
  source:
    remote:
      path: src/Common/src/Common/Util/AntPathMatcher.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: .ctor
    path: ../Steeltoe/src/Common/src/Common/Util/AntPathMatcher.cs
    startLine: 745
  assemblies:
  - Steeltoe.Common
  namespace: Steeltoe.Common.Util
  syntax:
    content: public AntPathStringMatcher(string pattern)
    parameters:
    - id: pattern
      type: System.String
    content.vb: Public Sub New(pattern As String)
  overload: Steeltoe.Common.Util.AntPathMatcher.AntPathStringMatcher.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Steeltoe.Common.Util.AntPathMatcher.AntPathStringMatcher.#ctor(System.String,System.Boolean)
  commentId: M:Steeltoe.Common.Util.AntPathMatcher.AntPathStringMatcher.#ctor(System.String,System.Boolean)
  id: '#ctor(System.String,System.Boolean)'
  parent: Steeltoe.Common.Util.AntPathMatcher.AntPathStringMatcher
  langs:
  - csharp
  - vb
  name: AntPathStringMatcher(String, Boolean)
  nameWithType: AntPathMatcher.AntPathStringMatcher.AntPathStringMatcher(String, Boolean)
  fullName: Steeltoe.Common.Util.AntPathMatcher.AntPathStringMatcher.AntPathStringMatcher(System.String, System.Boolean)
  type: Constructor
  source:
    remote:
      path: src/Common/src/Common/Util/AntPathMatcher.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: .ctor
    path: ../Steeltoe/src/Common/src/Common/Util/AntPathMatcher.cs
    startLine: 750
  assemblies:
  - Steeltoe.Common
  namespace: Steeltoe.Common.Util
  syntax:
    content: public AntPathStringMatcher(string pattern, bool caseSensitive)
    parameters:
    - id: pattern
      type: System.String
    - id: caseSensitive
      type: System.Boolean
    content.vb: Public Sub New(pattern As String, caseSensitive As Boolean)
  overload: Steeltoe.Common.Util.AntPathMatcher.AntPathStringMatcher.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Steeltoe.Common.Util.AntPathMatcher.AntPathStringMatcher.MatchStrings(System.String,System.Collections.Generic.IDictionary{System.String,System.String})
  commentId: M:Steeltoe.Common.Util.AntPathMatcher.AntPathStringMatcher.MatchStrings(System.String,System.Collections.Generic.IDictionary{System.String,System.String})
  id: MatchStrings(System.String,System.Collections.Generic.IDictionary{System.String,System.String})
  parent: Steeltoe.Common.Util.AntPathMatcher.AntPathStringMatcher
  langs:
  - csharp
  - vb
  name: MatchStrings(String, IDictionary<String, String>)
  nameWithType: AntPathMatcher.AntPathStringMatcher.MatchStrings(String, IDictionary<String, String>)
  fullName: Steeltoe.Common.Util.AntPathMatcher.AntPathStringMatcher.MatchStrings(System.String, System.Collections.Generic.IDictionary<System.String, System.String>)
  type: Method
  source:
    remote:
      path: src/Common/src/Common/Util/AntPathMatcher.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: MatchStrings
    path: ../Steeltoe/src/Common/src/Common/Util/AntPathMatcher.cs
    startLine: 796
  assemblies:
  - Steeltoe.Common
  namespace: Steeltoe.Common.Util
  syntax:
    content: public bool MatchStrings(string str, IDictionary<string, string> uriTemplateVariables)
    parameters:
    - id: str
      type: System.String
    - id: uriTemplateVariables
      type: System.Collections.Generic.IDictionary{System.String,System.String}
    return:
      type: System.Boolean
    content.vb: Public Function MatchStrings(str As String, uriTemplateVariables As IDictionary(Of String, String)) As Boolean
  overload: Steeltoe.Common.Util.AntPathMatcher.AntPathStringMatcher.MatchStrings*
  nameWithType.vb: AntPathMatcher.AntPathStringMatcher.MatchStrings(String, IDictionary(Of String, String))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Steeltoe.Common.Util.AntPathMatcher.AntPathStringMatcher.MatchStrings(System.String, System.Collections.Generic.IDictionary(Of System.String, System.String))
  name.vb: MatchStrings(String, IDictionary(Of String, String))
references:
- uid: Steeltoe.Common.Util
  commentId: N:Steeltoe.Common.Util
  name: Steeltoe.Common.Util
  nameWithType: Steeltoe.Common.Util
  fullName: Steeltoe.Common.Util
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Steeltoe.Common.Util.AntPathMatcher.AntPathStringMatcher.#ctor*
  commentId: Overload:Steeltoe.Common.Util.AntPathMatcher.AntPathStringMatcher.#ctor
  name: AntPathStringMatcher
  nameWithType: AntPathMatcher.AntPathStringMatcher.AntPathStringMatcher
  fullName: Steeltoe.Common.Util.AntPathMatcher.AntPathStringMatcher.AntPathStringMatcher
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Steeltoe.Common.Util.AntPathMatcher.AntPathStringMatcher.MatchStrings*
  commentId: Overload:Steeltoe.Common.Util.AntPathMatcher.AntPathStringMatcher.MatchStrings
  name: MatchStrings
  nameWithType: AntPathMatcher.AntPathStringMatcher.MatchStrings
  fullName: Steeltoe.Common.Util.AntPathMatcher.AntPathStringMatcher.MatchStrings
- uid: System.Collections.Generic.IDictionary{System.String,System.String}
  commentId: T:System.Collections.Generic.IDictionary{System.String,System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IDictionary`2
  name: IDictionary<String, String>
  nameWithType: IDictionary<String, String>
  fullName: System.Collections.Generic.IDictionary<System.String, System.String>
  nameWithType.vb: IDictionary(Of String, String)
  fullName.vb: System.Collections.Generic.IDictionary(Of System.String, System.String)
  name.vb: IDictionary(Of String, String)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IDictionary`2
  commentId: T:System.Collections.Generic.IDictionary`2
  isExternal: true
  name: IDictionary<TKey, TValue>
  nameWithType: IDictionary<TKey, TValue>
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>
  nameWithType.vb: IDictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.IDictionary(Of TKey, TValue)
  name.vb: IDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
