### YamlMime:ManagedReference
items:
- uid: Steeltoe.CircuitBreaker.Hystrix.Util.ObservableExtensions
  commentId: T:Steeltoe.CircuitBreaker.Hystrix.Util.ObservableExtensions
  id: ObservableExtensions
  parent: Steeltoe.CircuitBreaker.Hystrix.Util
  children:
  - Steeltoe.CircuitBreaker.Hystrix.Util.ObservableExtensions.OnDispose``1(System.IObservable{``0},System.Action)
  - Steeltoe.CircuitBreaker.Hystrix.Util.ObservableExtensions.OnSubscribe``1(System.IObservable{``0},System.Action)
  langs:
  - csharp
  - vb
  name: ObservableExtensions
  nameWithType: ObservableExtensions
  fullName: Steeltoe.CircuitBreaker.Hystrix.Util.ObservableExtensions
  type: Class
  source:
    remote:
      path: src/CircuitBreaker/src/HystrixBase/Util/ObservableExtensions.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: ObservableExtensions
    path: ../Steeltoe/src/CircuitBreaker/src/HystrixBase/Util/ObservableExtensions.cs
    startLine: 9
  assemblies:
  - Steeltoe.CircuitBreaker.HystrixBase
  namespace: Steeltoe.CircuitBreaker.Hystrix.Util
  syntax:
    content: public static class ObservableExtensions
    content.vb: Public Module ObservableExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Steeltoe.CircuitBreaker.Hystrix.Util.ObservableExtensions.OnSubscribe``1(System.IObservable{``0},System.Action)
  commentId: M:Steeltoe.CircuitBreaker.Hystrix.Util.ObservableExtensions.OnSubscribe``1(System.IObservable{``0},System.Action)
  id: OnSubscribe``1(System.IObservable{``0},System.Action)
  isExtensionMethod: true
  parent: Steeltoe.CircuitBreaker.Hystrix.Util.ObservableExtensions
  langs:
  - csharp
  - vb
  name: OnSubscribe<TSource>(IObservable<TSource>, Action)
  nameWithType: ObservableExtensions.OnSubscribe<TSource>(IObservable<TSource>, Action)
  fullName: Steeltoe.CircuitBreaker.Hystrix.Util.ObservableExtensions.OnSubscribe<TSource>(System.IObservable<TSource>, System.Action)
  type: Method
  source:
    remote:
      path: src/CircuitBreaker/src/HystrixBase/Util/ObservableExtensions.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: OnSubscribe
    path: ../Steeltoe/src/CircuitBreaker/src/HystrixBase/Util/ObservableExtensions.cs
    startLine: 11
  assemblies:
  - Steeltoe.CircuitBreaker.HystrixBase
  namespace: Steeltoe.CircuitBreaker.Hystrix.Util
  syntax:
    content: public static IObservable<TSource> OnSubscribe<TSource>(this IObservable<TSource> source, Action onSubscribe)
    parameters:
    - id: source
      type: System.IObservable{{TSource}}
    - id: onSubscribe
      type: System.Action
    typeParameters:
    - id: TSource
    return:
      type: System.IObservable{{TSource}}
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function OnSubscribe(Of TSource)(source As IObservable(Of TSource), onSubscribe As Action) As IObservable(Of TSource)
  overload: Steeltoe.CircuitBreaker.Hystrix.Util.ObservableExtensions.OnSubscribe*
  nameWithType.vb: ObservableExtensions.OnSubscribe(Of TSource)(IObservable(Of TSource), Action)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Steeltoe.CircuitBreaker.Hystrix.Util.ObservableExtensions.OnSubscribe(Of TSource)(System.IObservable(Of TSource), System.Action)
  name.vb: OnSubscribe(Of TSource)(IObservable(Of TSource), Action)
- uid: Steeltoe.CircuitBreaker.Hystrix.Util.ObservableExtensions.OnDispose``1(System.IObservable{``0},System.Action)
  commentId: M:Steeltoe.CircuitBreaker.Hystrix.Util.ObservableExtensions.OnDispose``1(System.IObservable{``0},System.Action)
  id: OnDispose``1(System.IObservable{``0},System.Action)
  isExtensionMethod: true
  parent: Steeltoe.CircuitBreaker.Hystrix.Util.ObservableExtensions
  langs:
  - csharp
  - vb
  name: OnDispose<T>(IObservable<T>, Action)
  nameWithType: ObservableExtensions.OnDispose<T>(IObservable<T>, Action)
  fullName: Steeltoe.CircuitBreaker.Hystrix.Util.ObservableExtensions.OnDispose<T>(System.IObservable<T>, System.Action)
  type: Method
  source:
    remote:
      path: src/CircuitBreaker/src/HystrixBase/Util/ObservableExtensions.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: OnDispose
    path: ../Steeltoe/src/CircuitBreaker/src/HystrixBase/Util/ObservableExtensions.cs
    startLine: 21
  assemblies:
  - Steeltoe.CircuitBreaker.HystrixBase
  namespace: Steeltoe.CircuitBreaker.Hystrix.Util
  syntax:
    content: public static IObservable<T> OnDispose<T>(this IObservable<T> source, Action action)
    parameters:
    - id: source
      type: System.IObservable{{T}}
    - id: action
      type: System.Action
    typeParameters:
    - id: T
    return:
      type: System.IObservable{{T}}
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function OnDispose(Of T)(source As IObservable(Of T), action As Action) As IObservable(Of T)
  overload: Steeltoe.CircuitBreaker.Hystrix.Util.ObservableExtensions.OnDispose*
  nameWithType.vb: ObservableExtensions.OnDispose(Of T)(IObservable(Of T), Action)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Steeltoe.CircuitBreaker.Hystrix.Util.ObservableExtensions.OnDispose(Of T)(System.IObservable(Of T), System.Action)
  name.vb: OnDispose(Of T)(IObservable(Of T), Action)
references:
- uid: Steeltoe.CircuitBreaker.Hystrix.Util
  commentId: N:Steeltoe.CircuitBreaker.Hystrix.Util
  name: Steeltoe.CircuitBreaker.Hystrix.Util
  nameWithType: Steeltoe.CircuitBreaker.Hystrix.Util
  fullName: Steeltoe.CircuitBreaker.Hystrix.Util
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Steeltoe.CircuitBreaker.Hystrix.Util.ObservableExtensions.OnSubscribe*
  commentId: Overload:Steeltoe.CircuitBreaker.Hystrix.Util.ObservableExtensions.OnSubscribe
  name: OnSubscribe
  nameWithType: ObservableExtensions.OnSubscribe
  fullName: Steeltoe.CircuitBreaker.Hystrix.Util.ObservableExtensions.OnSubscribe
- uid: System.IObservable{{TSource}}
  commentId: T:System.IObservable{``0}
  parent: System
  definition: System.IObservable`1
  name: IObservable<TSource>
  nameWithType: IObservable<TSource>
  fullName: System.IObservable<TSource>
  nameWithType.vb: IObservable(Of TSource)
  fullName.vb: System.IObservable(Of TSource)
  name.vb: IObservable(Of TSource)
  spec.csharp:
  - uid: System.IObservable`1
    name: IObservable
    nameWithType: IObservable
    fullName: System.IObservable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IObservable`1
    name: IObservable
    nameWithType: IObservable
    fullName: System.IObservable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Action
  commentId: T:System.Action
  parent: System
  isExternal: true
  name: Action
  nameWithType: Action
  fullName: System.Action
- uid: System.IObservable`1
  commentId: T:System.IObservable`1
  isExternal: true
  name: IObservable<T>
  nameWithType: IObservable<T>
  fullName: System.IObservable<T>
  nameWithType.vb: IObservable(Of T)
  fullName.vb: System.IObservable(Of T)
  name.vb: IObservable(Of T)
  spec.csharp:
  - uid: System.IObservable`1
    name: IObservable
    nameWithType: IObservable
    fullName: System.IObservable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IObservable`1
    name: IObservable
    nameWithType: IObservable
    fullName: System.IObservable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.CircuitBreaker.Hystrix.Util.ObservableExtensions.OnDispose*
  commentId: Overload:Steeltoe.CircuitBreaker.Hystrix.Util.ObservableExtensions.OnDispose
  name: OnDispose
  nameWithType: ObservableExtensions.OnDispose
  fullName: Steeltoe.CircuitBreaker.Hystrix.Util.ObservableExtensions.OnDispose
- uid: System.IObservable{{T}}
  commentId: T:System.IObservable{``0}
  parent: System
  definition: System.IObservable`1
  name: IObservable<T>
  nameWithType: IObservable<T>
  fullName: System.IObservable<T>
  nameWithType.vb: IObservable(Of T)
  fullName.vb: System.IObservable(Of T)
  name.vb: IObservable(Of T)
  spec.csharp:
  - uid: System.IObservable`1
    name: IObservable
    nameWithType: IObservable
    fullName: System.IObservable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IObservable`1
    name: IObservable
    nameWithType: IObservable
    fullName: System.IObservable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
