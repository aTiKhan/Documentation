### YamlMime:ManagedReference
items:
- uid: Steeltoe.Messaging.RabbitMQ.Core.Envelope
  commentId: T:Steeltoe.Messaging.RabbitMQ.Core.Envelope
  id: Envelope
  parent: Steeltoe.Messaging.RabbitMQ.Core
  children:
  - Steeltoe.Messaging.RabbitMQ.Core.Envelope.#ctor(System.UInt64,System.Boolean,System.String,System.String)
  - Steeltoe.Messaging.RabbitMQ.Core.Envelope.DeliveryTag
  - Steeltoe.Messaging.RabbitMQ.Core.Envelope.Exchange
  - Steeltoe.Messaging.RabbitMQ.Core.Envelope.Redeliver
  - Steeltoe.Messaging.RabbitMQ.Core.Envelope.RoutingKey
  langs:
  - csharp
  - vb
  name: Envelope
  nameWithType: Envelope
  fullName: Steeltoe.Messaging.RabbitMQ.Core.Envelope
  type: Class
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Core/Envelope.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Envelope
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Core/Envelope.cs
    startLine: 6
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Core
  syntax:
    content: public class Envelope
    content.vb: Public Class Envelope
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Steeltoe.Messaging.RabbitMQ.Core.Envelope.#ctor(System.UInt64,System.Boolean,System.String,System.String)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Core.Envelope.#ctor(System.UInt64,System.Boolean,System.String,System.String)
  id: '#ctor(System.UInt64,System.Boolean,System.String,System.String)'
  parent: Steeltoe.Messaging.RabbitMQ.Core.Envelope
  langs:
  - csharp
  - vb
  name: Envelope(UInt64, Boolean, String, String)
  nameWithType: Envelope.Envelope(UInt64, Boolean, String, String)
  fullName: Steeltoe.Messaging.RabbitMQ.Core.Envelope.Envelope(System.UInt64, System.Boolean, System.String, System.String)
  type: Constructor
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Core/Envelope.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: .ctor
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Core/Envelope.cs
    startLine: 8
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Core
  syntax:
    content: public Envelope(ulong deliveryTag, bool redeliver, string exchange, string routingKey)
    parameters:
    - id: deliveryTag
      type: System.UInt64
    - id: redeliver
      type: System.Boolean
    - id: exchange
      type: System.String
    - id: routingKey
      type: System.String
    content.vb: Public Sub New(deliveryTag As ULong, redeliver As Boolean, exchange As String, routingKey As String)
  overload: Steeltoe.Messaging.RabbitMQ.Core.Envelope.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Steeltoe.Messaging.RabbitMQ.Core.Envelope.DeliveryTag
  commentId: P:Steeltoe.Messaging.RabbitMQ.Core.Envelope.DeliveryTag
  id: DeliveryTag
  parent: Steeltoe.Messaging.RabbitMQ.Core.Envelope
  langs:
  - csharp
  - vb
  name: DeliveryTag
  nameWithType: Envelope.DeliveryTag
  fullName: Steeltoe.Messaging.RabbitMQ.Core.Envelope.DeliveryTag
  type: Property
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Core/Envelope.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: DeliveryTag
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Core/Envelope.cs
    startLine: 16
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Core
  syntax:
    content: public ulong DeliveryTag { get; }
    parameters: []
    return:
      type: System.UInt64
    content.vb: Public ReadOnly Property DeliveryTag As ULong
  overload: Steeltoe.Messaging.RabbitMQ.Core.Envelope.DeliveryTag*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Steeltoe.Messaging.RabbitMQ.Core.Envelope.Redeliver
  commentId: P:Steeltoe.Messaging.RabbitMQ.Core.Envelope.Redeliver
  id: Redeliver
  parent: Steeltoe.Messaging.RabbitMQ.Core.Envelope
  langs:
  - csharp
  - vb
  name: Redeliver
  nameWithType: Envelope.Redeliver
  fullName: Steeltoe.Messaging.RabbitMQ.Core.Envelope.Redeliver
  type: Property
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Core/Envelope.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Redeliver
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Core/Envelope.cs
    startLine: 18
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Core
  syntax:
    content: public bool Redeliver { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property Redeliver As Boolean
  overload: Steeltoe.Messaging.RabbitMQ.Core.Envelope.Redeliver*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Steeltoe.Messaging.RabbitMQ.Core.Envelope.Exchange
  commentId: P:Steeltoe.Messaging.RabbitMQ.Core.Envelope.Exchange
  id: Exchange
  parent: Steeltoe.Messaging.RabbitMQ.Core.Envelope
  langs:
  - csharp
  - vb
  name: Exchange
  nameWithType: Envelope.Exchange
  fullName: Steeltoe.Messaging.RabbitMQ.Core.Envelope.Exchange
  type: Property
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Core/Envelope.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Exchange
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Core/Envelope.cs
    startLine: 20
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Core
  syntax:
    content: public string Exchange { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property Exchange As String
  overload: Steeltoe.Messaging.RabbitMQ.Core.Envelope.Exchange*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Steeltoe.Messaging.RabbitMQ.Core.Envelope.RoutingKey
  commentId: P:Steeltoe.Messaging.RabbitMQ.Core.Envelope.RoutingKey
  id: RoutingKey
  parent: Steeltoe.Messaging.RabbitMQ.Core.Envelope
  langs:
  - csharp
  - vb
  name: RoutingKey
  nameWithType: Envelope.RoutingKey
  fullName: Steeltoe.Messaging.RabbitMQ.Core.Envelope.RoutingKey
  type: Property
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Core/Envelope.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: RoutingKey
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Core/Envelope.cs
    startLine: 22
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Core
  syntax:
    content: public string RoutingKey { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property RoutingKey As String
  overload: Steeltoe.Messaging.RabbitMQ.Core.Envelope.RoutingKey*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: Steeltoe.Messaging.RabbitMQ.Core
  commentId: N:Steeltoe.Messaging.RabbitMQ.Core
  name: Steeltoe.Messaging.RabbitMQ.Core
  nameWithType: Steeltoe.Messaging.RabbitMQ.Core
  fullName: Steeltoe.Messaging.RabbitMQ.Core
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Steeltoe.Messaging.RabbitMQ.Core.Envelope.#ctor*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Core.Envelope.#ctor
  name: Envelope
  nameWithType: Envelope.Envelope
  fullName: Steeltoe.Messaging.RabbitMQ.Core.Envelope.Envelope
- uid: System.UInt64
  commentId: T:System.UInt64
  parent: System
  isExternal: true
  name: UInt64
  nameWithType: UInt64
  fullName: System.UInt64
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Steeltoe.Messaging.RabbitMQ.Core.Envelope.DeliveryTag*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Core.Envelope.DeliveryTag
  name: DeliveryTag
  nameWithType: Envelope.DeliveryTag
  fullName: Steeltoe.Messaging.RabbitMQ.Core.Envelope.DeliveryTag
- uid: Steeltoe.Messaging.RabbitMQ.Core.Envelope.Redeliver*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Core.Envelope.Redeliver
  name: Redeliver
  nameWithType: Envelope.Redeliver
  fullName: Steeltoe.Messaging.RabbitMQ.Core.Envelope.Redeliver
- uid: Steeltoe.Messaging.RabbitMQ.Core.Envelope.Exchange*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Core.Envelope.Exchange
  name: Exchange
  nameWithType: Envelope.Exchange
  fullName: Steeltoe.Messaging.RabbitMQ.Core.Envelope.Exchange
- uid: Steeltoe.Messaging.RabbitMQ.Core.Envelope.RoutingKey*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Core.Envelope.RoutingKey
  name: RoutingKey
  nameWithType: Envelope.RoutingKey
  fullName: Steeltoe.Messaging.RabbitMQ.Core.Envelope.RoutingKey
