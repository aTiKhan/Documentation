### YamlMime:ManagedReference
items:
- uid: Steeltoe.Connector.EF6Core.OracleDbContextServiceCollectionExtensions
  commentId: T:Steeltoe.Connector.EF6Core.OracleDbContextServiceCollectionExtensions
  id: OracleDbContextServiceCollectionExtensions
  parent: Steeltoe.Connector.EF6Core
  children:
  - Steeltoe.Connector.EF6Core.OracleDbContextServiceCollectionExtensions.AddDbContext``1(IServiceCollection,IConfiguration,ServiceLifetime)
  - Steeltoe.Connector.EF6Core.OracleDbContextServiceCollectionExtensions.AddDbContext``1(IServiceCollection,IConfiguration,System.String,ServiceLifetime)
  langs:
  - csharp
  - vb
  name: OracleDbContextServiceCollectionExtensions
  nameWithType: OracleDbContextServiceCollectionExtensions
  fullName: Steeltoe.Connector.EF6Core.OracleDbContextServiceCollectionExtensions
  type: Class
  source:
    remote:
      path: src/Connectors/src/Connector.EF6Core/OracleDbContextServiceCollectionExtensions.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: OracleDbContextServiceCollectionExtensions
    path: ../Steeltoe/src/Connectors/src/Connector.EF6Core/OracleDbContextServiceCollectionExtensions.cs
    startLine: 13
  assemblies:
  - Steeltoe.Connector.EF6Core
  namespace: Steeltoe.Connector.EF6Core
  syntax:
    content: public static class OracleDbContextServiceCollectionExtensions
    content.vb: Public Module OracleDbContextServiceCollectionExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Steeltoe.Connector.EF6Core.OracleDbContextServiceCollectionExtensions.AddDbContext``1(IServiceCollection,IConfiguration,ServiceLifetime)
  commentId: M:Steeltoe.Connector.EF6Core.OracleDbContextServiceCollectionExtensions.AddDbContext``1(IServiceCollection,IConfiguration,ServiceLifetime)
  id: AddDbContext``1(IServiceCollection,IConfiguration,ServiceLifetime)
  isExtensionMethod: true
  parent: Steeltoe.Connector.EF6Core.OracleDbContextServiceCollectionExtensions
  langs:
  - csharp
  - vb
  name: AddDbContext<TContext>(IServiceCollection, IConfiguration, ServiceLifetime)
  nameWithType: OracleDbContextServiceCollectionExtensions.AddDbContext<TContext>(IServiceCollection, IConfiguration, ServiceLifetime)
  fullName: Steeltoe.Connector.EF6Core.OracleDbContextServiceCollectionExtensions.AddDbContext<TContext>(IServiceCollection, IConfiguration, ServiceLifetime)
  type: Method
  source:
    remote:
      path: src/Connectors/src/Connector.EF6Core/OracleDbContextServiceCollectionExtensions.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: AddDbContext
    path: ../Steeltoe/src/Connectors/src/Connector.EF6Core/OracleDbContextServiceCollectionExtensions.cs
    startLine: 23
  assemblies:
  - Steeltoe.Connector.EF6Core
  namespace: Steeltoe.Connector.EF6Core
  summary: "\nAdd a Oracle-backed DbContext and Oracle health contributor to the Service Collection\n"
  example: []
  syntax:
    content: public static IServiceCollection AddDbContext<TContext>(this IServiceCollection services, IConfiguration config, ServiceLifetime contextLifetime = null)
    parameters:
    - id: services
      type: IServiceCollection
      description: Service Collection
    - id: config
      type: IConfiguration
      description: Application Configuration
    - id: contextLifetime
      type: ServiceLifetime
      description: Lifetime of the service to inject
    typeParameters:
    - id: TContext
      description: Type of DbContext to add
    return:
      type: IServiceCollection
      description: IServiceCollection for chaining
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function AddDbContext(Of TContext)(services As IServiceCollection, config As IConfiguration, contextLifetime As ServiceLifetime = Nothing) As IServiceCollection
  overload: Steeltoe.Connector.EF6Core.OracleDbContextServiceCollectionExtensions.AddDbContext*
  nameWithType.vb: OracleDbContextServiceCollectionExtensions.AddDbContext(Of TContext)(IServiceCollection, IConfiguration, ServiceLifetime)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Steeltoe.Connector.EF6Core.OracleDbContextServiceCollectionExtensions.AddDbContext(Of TContext)(IServiceCollection, IConfiguration, ServiceLifetime)
  name.vb: AddDbContext(Of TContext)(IServiceCollection, IConfiguration, ServiceLifetime)
- uid: Steeltoe.Connector.EF6Core.OracleDbContextServiceCollectionExtensions.AddDbContext``1(IServiceCollection,IConfiguration,System.String,ServiceLifetime)
  commentId: M:Steeltoe.Connector.EF6Core.OracleDbContextServiceCollectionExtensions.AddDbContext``1(IServiceCollection,IConfiguration,System.String,ServiceLifetime)
  id: AddDbContext``1(IServiceCollection,IConfiguration,System.String,ServiceLifetime)
  isExtensionMethod: true
  parent: Steeltoe.Connector.EF6Core.OracleDbContextServiceCollectionExtensions
  langs:
  - csharp
  - vb
  name: AddDbContext<TContext>(IServiceCollection, IConfiguration, String, ServiceLifetime)
  nameWithType: OracleDbContextServiceCollectionExtensions.AddDbContext<TContext>(IServiceCollection, IConfiguration, String, ServiceLifetime)
  fullName: Steeltoe.Connector.EF6Core.OracleDbContextServiceCollectionExtensions.AddDbContext<TContext>(IServiceCollection, IConfiguration, System.String, ServiceLifetime)
  type: Method
  source:
    remote:
      path: src/Connectors/src/Connector.EF6Core/OracleDbContextServiceCollectionExtensions.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: AddDbContext
    path: ../Steeltoe/src/Connectors/src/Connector.EF6Core/OracleDbContextServiceCollectionExtensions.cs
    startLine: 50
  assemblies:
  - Steeltoe.Connector.EF6Core
  namespace: Steeltoe.Connector.EF6Core
  summary: "\nAdd a Oracle-backed DbContext and Oracle health contributor to the Service Collection\n"
  example: []
  syntax:
    content: public static IServiceCollection AddDbContext<TContext>(this IServiceCollection services, IConfiguration config, string serviceName, ServiceLifetime contextLifetime = null)
    parameters:
    - id: services
      type: IServiceCollection
      description: Service Collection
    - id: config
      type: IConfiguration
      description: Application Configuration
    - id: serviceName
      type: System.String
      description: Name of service binding in Cloud Foundry
    - id: contextLifetime
      type: ServiceLifetime
      description: Lifetime of the service to inject
    typeParameters:
    - id: TContext
      description: Type of DbContext to add
    return:
      type: IServiceCollection
      description: IServiceCollection for chaining
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function AddDbContext(Of TContext)(services As IServiceCollection, config As IConfiguration, serviceName As String, contextLifetime As ServiceLifetime = Nothing) As IServiceCollection
  overload: Steeltoe.Connector.EF6Core.OracleDbContextServiceCollectionExtensions.AddDbContext*
  nameWithType.vb: OracleDbContextServiceCollectionExtensions.AddDbContext(Of TContext)(IServiceCollection, IConfiguration, String, ServiceLifetime)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Steeltoe.Connector.EF6Core.OracleDbContextServiceCollectionExtensions.AddDbContext(Of TContext)(IServiceCollection, IConfiguration, System.String, ServiceLifetime)
  name.vb: AddDbContext(Of TContext)(IServiceCollection, IConfiguration, String, ServiceLifetime)
references:
- uid: Steeltoe.Connector.EF6Core
  commentId: N:Steeltoe.Connector.EF6Core
  name: Steeltoe.Connector.EF6Core
  nameWithType: Steeltoe.Connector.EF6Core
  fullName: Steeltoe.Connector.EF6Core
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Steeltoe.Connector.EF6Core.OracleDbContextServiceCollectionExtensions.AddDbContext*
  commentId: Overload:Steeltoe.Connector.EF6Core.OracleDbContextServiceCollectionExtensions.AddDbContext
  name: AddDbContext
  nameWithType: OracleDbContextServiceCollectionExtensions.AddDbContext
  fullName: Steeltoe.Connector.EF6Core.OracleDbContextServiceCollectionExtensions.AddDbContext
- uid: IServiceCollection
  isExternal: true
  name: IServiceCollection
  nameWithType: IServiceCollection
  fullName: IServiceCollection
- uid: IConfiguration
  isExternal: true
  name: IConfiguration
  nameWithType: IConfiguration
  fullName: IConfiguration
- uid: ServiceLifetime
  isExternal: true
  name: ServiceLifetime
  nameWithType: ServiceLifetime
  fullName: ServiceLifetime
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
