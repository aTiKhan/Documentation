### YamlMime:ManagedReference
items:
- uid: Steeltoe.Common.Transaction.ITransactionExecution
  commentId: T:Steeltoe.Common.Transaction.ITransactionExecution
  id: ITransactionExecution
  parent: Steeltoe.Common.Transaction
  children:
  - Steeltoe.Common.Transaction.ITransactionExecution.IsCompleted
  - Steeltoe.Common.Transaction.ITransactionExecution.IsNewTransaction
  - Steeltoe.Common.Transaction.ITransactionExecution.IsRollbackOnly
  - Steeltoe.Common.Transaction.ITransactionExecution.SetRollbackOnly
  langs:
  - csharp
  - vb
  name: ITransactionExecution
  nameWithType: ITransactionExecution
  fullName: Steeltoe.Common.Transaction.ITransactionExecution
  type: Interface
  source:
    remote:
      path: src/Common/src/Abstractions/Transaction/ITransactionExecution.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: ITransactionExecution
    path: ../Steeltoe/src/Common/src/Abstractions/Transaction/ITransactionExecution.cs
    startLine: 6
  assemblies:
  - Steeltoe.Common.Abstractions
  namespace: Steeltoe.Common.Transaction
  syntax:
    content: public interface ITransactionExecution
    content.vb: Public Interface ITransactionExecution
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Steeltoe.Common.Transaction.ITransactionExecution.SetRollbackOnly
  commentId: M:Steeltoe.Common.Transaction.ITransactionExecution.SetRollbackOnly
  id: SetRollbackOnly
  parent: Steeltoe.Common.Transaction.ITransactionExecution
  langs:
  - csharp
  - vb
  name: SetRollbackOnly()
  nameWithType: ITransactionExecution.SetRollbackOnly()
  fullName: Steeltoe.Common.Transaction.ITransactionExecution.SetRollbackOnly()
  type: Method
  source:
    remote:
      path: src/Common/src/Abstractions/Transaction/ITransactionExecution.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: SetRollbackOnly
    path: ../Steeltoe/src/Common/src/Abstractions/Transaction/ITransactionExecution.cs
    startLine: 8
  assemblies:
  - Steeltoe.Common.Abstractions
  namespace: Steeltoe.Common.Transaction
  syntax:
    content: void SetRollbackOnly()
    content.vb: Sub SetRollbackOnly
  overload: Steeltoe.Common.Transaction.ITransactionExecution.SetRollbackOnly*
- uid: Steeltoe.Common.Transaction.ITransactionExecution.IsCompleted
  commentId: P:Steeltoe.Common.Transaction.ITransactionExecution.IsCompleted
  id: IsCompleted
  parent: Steeltoe.Common.Transaction.ITransactionExecution
  langs:
  - csharp
  - vb
  name: IsCompleted
  nameWithType: ITransactionExecution.IsCompleted
  fullName: Steeltoe.Common.Transaction.ITransactionExecution.IsCompleted
  type: Property
  source:
    remote:
      path: src/Common/src/Abstractions/Transaction/ITransactionExecution.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: IsCompleted
    path: ../Steeltoe/src/Common/src/Abstractions/Transaction/ITransactionExecution.cs
    startLine: 10
  assemblies:
  - Steeltoe.Common.Abstractions
  namespace: Steeltoe.Common.Transaction
  syntax:
    content: bool IsCompleted { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: ReadOnly Property IsCompleted As Boolean
  overload: Steeltoe.Common.Transaction.ITransactionExecution.IsCompleted*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Steeltoe.Common.Transaction.ITransactionExecution.IsRollbackOnly
  commentId: P:Steeltoe.Common.Transaction.ITransactionExecution.IsRollbackOnly
  id: IsRollbackOnly
  parent: Steeltoe.Common.Transaction.ITransactionExecution
  langs:
  - csharp
  - vb
  name: IsRollbackOnly
  nameWithType: ITransactionExecution.IsRollbackOnly
  fullName: Steeltoe.Common.Transaction.ITransactionExecution.IsRollbackOnly
  type: Property
  source:
    remote:
      path: src/Common/src/Abstractions/Transaction/ITransactionExecution.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: IsRollbackOnly
    path: ../Steeltoe/src/Common/src/Abstractions/Transaction/ITransactionExecution.cs
    startLine: 12
  assemblies:
  - Steeltoe.Common.Abstractions
  namespace: Steeltoe.Common.Transaction
  syntax:
    content: bool IsRollbackOnly { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: ReadOnly Property IsRollbackOnly As Boolean
  overload: Steeltoe.Common.Transaction.ITransactionExecution.IsRollbackOnly*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Steeltoe.Common.Transaction.ITransactionExecution.IsNewTransaction
  commentId: P:Steeltoe.Common.Transaction.ITransactionExecution.IsNewTransaction
  id: IsNewTransaction
  parent: Steeltoe.Common.Transaction.ITransactionExecution
  langs:
  - csharp
  - vb
  name: IsNewTransaction
  nameWithType: ITransactionExecution.IsNewTransaction
  fullName: Steeltoe.Common.Transaction.ITransactionExecution.IsNewTransaction
  type: Property
  source:
    remote:
      path: src/Common/src/Abstractions/Transaction/ITransactionExecution.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: IsNewTransaction
    path: ../Steeltoe/src/Common/src/Abstractions/Transaction/ITransactionExecution.cs
    startLine: 14
  assemblies:
  - Steeltoe.Common.Abstractions
  namespace: Steeltoe.Common.Transaction
  syntax:
    content: bool IsNewTransaction { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: ReadOnly Property IsNewTransaction As Boolean
  overload: Steeltoe.Common.Transaction.ITransactionExecution.IsNewTransaction*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
references:
- uid: Steeltoe.Common.Transaction
  commentId: N:Steeltoe.Common.Transaction
  name: Steeltoe.Common.Transaction
  nameWithType: Steeltoe.Common.Transaction
  fullName: Steeltoe.Common.Transaction
- uid: Steeltoe.Common.Transaction.ITransactionExecution.SetRollbackOnly*
  commentId: Overload:Steeltoe.Common.Transaction.ITransactionExecution.SetRollbackOnly
  name: SetRollbackOnly
  nameWithType: ITransactionExecution.SetRollbackOnly
  fullName: Steeltoe.Common.Transaction.ITransactionExecution.SetRollbackOnly
- uid: Steeltoe.Common.Transaction.ITransactionExecution.IsCompleted*
  commentId: Overload:Steeltoe.Common.Transaction.ITransactionExecution.IsCompleted
  name: IsCompleted
  nameWithType: ITransactionExecution.IsCompleted
  fullName: Steeltoe.Common.Transaction.ITransactionExecution.IsCompleted
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Steeltoe.Common.Transaction.ITransactionExecution.IsRollbackOnly*
  commentId: Overload:Steeltoe.Common.Transaction.ITransactionExecution.IsRollbackOnly
  name: IsRollbackOnly
  nameWithType: ITransactionExecution.IsRollbackOnly
  fullName: Steeltoe.Common.Transaction.ITransactionExecution.IsRollbackOnly
- uid: Steeltoe.Common.Transaction.ITransactionExecution.IsNewTransaction*
  commentId: Overload:Steeltoe.Common.Transaction.ITransactionExecution.IsNewTransaction
  name: IsNewTransaction
  nameWithType: ITransactionExecution.IsNewTransaction
  fullName: Steeltoe.Common.Transaction.ITransactionExecution.IsNewTransaction
