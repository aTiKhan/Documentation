### YamlMime:ManagedReference
items:
- uid: Steeltoe.Messaging.Message`1
  commentId: T:Steeltoe.Messaging.Message`1
  id: Message`1
  parent: Steeltoe.Messaging
  children:
  - Steeltoe.Messaging.Message`1.#ctor(`0)
  - Steeltoe.Messaging.Message`1.#ctor(`0,Steeltoe.Messaging.IMessageHeaders)
  - Steeltoe.Messaging.Message`1.#ctor(`0,System.Collections.Generic.IDictionary{System.String,System.Object})
  - Steeltoe.Messaging.Message`1.Equals(System.Object)
  - Steeltoe.Messaging.Message`1.GetHashCode
  - Steeltoe.Messaging.Message`1.headers
  - Steeltoe.Messaging.Message`1.Headers
  - Steeltoe.Messaging.Message`1.payload
  - Steeltoe.Messaging.Message`1.Payload
  - Steeltoe.Messaging.Message`1.Steeltoe#Messaging#IMessage#Payload
  - Steeltoe.Messaging.Message`1.ToString
  langs:
  - csharp
  - vb
  name: Message<P>
  nameWithType: Message<P>
  fullName: Steeltoe.Messaging.Message<P>
  type: Class
  source:
    remote:
      path: src/Messaging/src/MessagingBase/Message.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Message
    path: ../Steeltoe/src/Messaging/src/MessagingBase/Message.cs
    startLine: 98
  assemblies:
  - Steeltoe.Messaging.MessagingBase
  namespace: Steeltoe.Messaging
  syntax:
    content: 'public class Message<P> : AbstractMessage, IMessage<P>, IMessage'
    typeParameters:
    - id: P
    content.vb: >-
      Public Class Message(Of P)

          Inherits AbstractMessage

          Implements IMessage(Of P), IMessage
  inheritance:
  - System.Object
  - Steeltoe.Messaging.AbstractMessage
  derivedClasses:
  - Steeltoe.Messaging.Support.ErrorMessage
  implements:
  - Steeltoe.Messaging.IMessage{{P}}
  - Steeltoe.Messaging.IMessage
  inheritedMembers:
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  nameWithType.vb: Message(Of P)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
  fullName.vb: Steeltoe.Messaging.Message(Of P)
  name.vb: Message(Of P)
- uid: Steeltoe.Messaging.Message`1.payload
  commentId: F:Steeltoe.Messaging.Message`1.payload
  id: payload
  parent: Steeltoe.Messaging.Message`1
  langs:
  - csharp
  - vb
  name: payload
  nameWithType: Message<P>.payload
  fullName: Steeltoe.Messaging.Message<P>.payload
  type: Field
  source:
    remote:
      path: src/Messaging/src/MessagingBase/Message.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: payload
    path: ../Steeltoe/src/Messaging/src/MessagingBase/Message.cs
    startLine: 100
  assemblies:
  - Steeltoe.Messaging.MessagingBase
  namespace: Steeltoe.Messaging
  syntax:
    content: protected readonly P payload
    return:
      type: '{P}'
    content.vb: Protected ReadOnly payload As P
  nameWithType.vb: Message(Of P).payload
  modifiers.csharp:
  - protected
  - readonly
  modifiers.vb:
  - Protected
  - ReadOnly
  fullName.vb: Steeltoe.Messaging.Message(Of P).payload
- uid: Steeltoe.Messaging.Message`1.headers
  commentId: F:Steeltoe.Messaging.Message`1.headers
  id: headers
  parent: Steeltoe.Messaging.Message`1
  langs:
  - csharp
  - vb
  name: headers
  nameWithType: Message<P>.headers
  fullName: Steeltoe.Messaging.Message<P>.headers
  type: Field
  source:
    remote:
      path: src/Messaging/src/MessagingBase/Message.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: headers
    path: ../Steeltoe/src/Messaging/src/MessagingBase/Message.cs
    startLine: 102
  assemblies:
  - Steeltoe.Messaging.MessagingBase
  namespace: Steeltoe.Messaging
  syntax:
    content: protected readonly IMessageHeaders headers
    return:
      type: Steeltoe.Messaging.IMessageHeaders
    content.vb: Protected ReadOnly headers As IMessageHeaders
  nameWithType.vb: Message(Of P).headers
  modifiers.csharp:
  - protected
  - readonly
  modifiers.vb:
  - Protected
  - ReadOnly
  fullName.vb: Steeltoe.Messaging.Message(Of P).headers
- uid: Steeltoe.Messaging.Message`1.#ctor(`0)
  commentId: M:Steeltoe.Messaging.Message`1.#ctor(`0)
  id: '#ctor(`0)'
  parent: Steeltoe.Messaging.Message`1
  langs:
  - csharp
  - vb
  name: Message(P)
  nameWithType: Message<P>.Message(P)
  fullName: Steeltoe.Messaging.Message<P>.Message(P)
  type: Constructor
  source:
    remote:
      path: src/Messaging/src/MessagingBase/Message.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: .ctor
    path: ../Steeltoe/src/Messaging/src/MessagingBase/Message.cs
    startLine: 104
  assemblies:
  - Steeltoe.Messaging.MessagingBase
  namespace: Steeltoe.Messaging
  syntax:
    content: protected Message(P payload)
    parameters:
    - id: payload
      type: '{P}'
    content.vb: Protected Sub New(payload As P)
  overload: Steeltoe.Messaging.Message`1.#ctor*
  nameWithType.vb: Message(Of P).Message(P)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: Steeltoe.Messaging.Message(Of P).Message(P)
- uid: Steeltoe.Messaging.Message`1.#ctor(`0,System.Collections.Generic.IDictionary{System.String,System.Object})
  commentId: M:Steeltoe.Messaging.Message`1.#ctor(`0,System.Collections.Generic.IDictionary{System.String,System.Object})
  id: '#ctor(`0,System.Collections.Generic.IDictionary{System.String,System.Object})'
  parent: Steeltoe.Messaging.Message`1
  langs:
  - csharp
  - vb
  name: Message(P, IDictionary<String, Object>)
  nameWithType: Message<P>.Message(P, IDictionary<String, Object>)
  fullName: Steeltoe.Messaging.Message<P>.Message(P, System.Collections.Generic.IDictionary<System.String, System.Object>)
  type: Constructor
  source:
    remote:
      path: src/Messaging/src/MessagingBase/Message.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: .ctor
    path: ../Steeltoe/src/Messaging/src/MessagingBase/Message.cs
    startLine: 109
  assemblies:
  - Steeltoe.Messaging.MessagingBase
  namespace: Steeltoe.Messaging
  syntax:
    content: protected Message(P payload, IDictionary<string, object> headers)
    parameters:
    - id: payload
      type: '{P}'
    - id: headers
      type: System.Collections.Generic.IDictionary{System.String,System.Object}
    content.vb: Protected Sub New(payload As P, headers As IDictionary(Of String, Object))
  overload: Steeltoe.Messaging.Message`1.#ctor*
  nameWithType.vb: Message(Of P).Message(P, IDictionary(Of String, Object))
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: Steeltoe.Messaging.Message(Of P).Message(P, System.Collections.Generic.IDictionary(Of System.String, System.Object))
  name.vb: Message(P, IDictionary(Of String, Object))
- uid: Steeltoe.Messaging.Message`1.#ctor(`0,Steeltoe.Messaging.IMessageHeaders)
  commentId: M:Steeltoe.Messaging.Message`1.#ctor(`0,Steeltoe.Messaging.IMessageHeaders)
  id: '#ctor(`0,Steeltoe.Messaging.IMessageHeaders)'
  parent: Steeltoe.Messaging.Message`1
  langs:
  - csharp
  - vb
  name: Message(P, IMessageHeaders)
  nameWithType: Message<P>.Message(P, IMessageHeaders)
  fullName: Steeltoe.Messaging.Message<P>.Message(P, Steeltoe.Messaging.IMessageHeaders)
  type: Constructor
  source:
    remote:
      path: src/Messaging/src/MessagingBase/Message.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: .ctor
    path: ../Steeltoe/src/Messaging/src/MessagingBase/Message.cs
    startLine: 114
  assemblies:
  - Steeltoe.Messaging.MessagingBase
  namespace: Steeltoe.Messaging
  syntax:
    content: protected Message(P payload, IMessageHeaders headers)
    parameters:
    - id: payload
      type: '{P}'
    - id: headers
      type: Steeltoe.Messaging.IMessageHeaders
    content.vb: Protected Sub New(payload As P, headers As IMessageHeaders)
  overload: Steeltoe.Messaging.Message`1.#ctor*
  nameWithType.vb: Message(Of P).Message(P, IMessageHeaders)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: Steeltoe.Messaging.Message(Of P).Message(P, Steeltoe.Messaging.IMessageHeaders)
- uid: Steeltoe.Messaging.Message`1.Payload
  commentId: P:Steeltoe.Messaging.Message`1.Payload
  id: Payload
  parent: Steeltoe.Messaging.Message`1
  langs:
  - csharp
  - vb
  name: Payload
  nameWithType: Message<P>.Payload
  fullName: Steeltoe.Messaging.Message<P>.Payload
  type: Property
  source:
    remote:
      path: src/Messaging/src/MessagingBase/Message.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Payload
    path: ../Steeltoe/src/Messaging/src/MessagingBase/Message.cs
    startLine: 130
  assemblies:
  - Steeltoe.Messaging.MessagingBase
  namespace: Steeltoe.Messaging
  syntax:
    content: public P Payload { get; }
    parameters: []
    return:
      type: '{P}'
    content.vb: Public ReadOnly Property Payload As P
  overload: Steeltoe.Messaging.Message`1.Payload*
  implements:
  - Steeltoe.Messaging.IMessage{{P}}.Payload
  nameWithType.vb: Message(Of P).Payload
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: Steeltoe.Messaging.Message(Of P).Payload
- uid: Steeltoe.Messaging.Message`1.Headers
  commentId: P:Steeltoe.Messaging.Message`1.Headers
  id: Headers
  parent: Steeltoe.Messaging.Message`1
  langs:
  - csharp
  - vb
  name: Headers
  nameWithType: Message<P>.Headers
  fullName: Steeltoe.Messaging.Message<P>.Headers
  type: Property
  source:
    remote:
      path: src/Messaging/src/MessagingBase/Message.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Headers
    path: ../Steeltoe/src/Messaging/src/MessagingBase/Message.cs
    startLine: 135
  assemblies:
  - Steeltoe.Messaging.MessagingBase
  namespace: Steeltoe.Messaging
  syntax:
    content: public IMessageHeaders Headers { get; }
    parameters: []
    return:
      type: Steeltoe.Messaging.IMessageHeaders
    content.vb: Public ReadOnly Property Headers As IMessageHeaders
  overload: Steeltoe.Messaging.Message`1.Headers*
  implements:
  - Steeltoe.Messaging.IMessage.Headers
  nameWithType.vb: Message(Of P).Headers
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: Steeltoe.Messaging.Message(Of P).Headers
- uid: Steeltoe.Messaging.Message`1.Steeltoe#Messaging#IMessage#Payload
  commentId: P:Steeltoe.Messaging.Message`1.Steeltoe#Messaging#IMessage#Payload
  id: Steeltoe#Messaging#IMessage#Payload
  isEii: true
  parent: Steeltoe.Messaging.Message`1
  langs:
  - csharp
  - vb
  name: IMessage.Payload
  nameWithType: Message<P>.IMessage.Payload
  fullName: Steeltoe.Messaging.Message<P>.Steeltoe.Messaging.IMessage.Payload
  type: Property
  source:
    remote:
      path: src/Messaging/src/MessagingBase/Message.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Steeltoe.Messaging.IMessage.Payload
    path: ../Steeltoe/src/Messaging/src/MessagingBase/Message.cs
    startLine: 140
  assemblies:
  - Steeltoe.Messaging.MessagingBase
  namespace: Steeltoe.Messaging
  syntax:
    content: object IMessage.Payload { get; }
    parameters: []
    return:
      type: System.Object
    content.vb: ReadOnly WriteOnly Property Steeltoe.Messaging.IMessage.Payload As Object Implements IMessage.Payload
  overload: Steeltoe.Messaging.Message`1.Steeltoe#Messaging#IMessage#Payload*
  implements:
  - Steeltoe.Messaging.IMessage.Payload
  nameWithType.vb: Message(Of P).Steeltoe.Messaging.IMessage.Payload
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
  fullName.vb: Steeltoe.Messaging.Message(Of P).Steeltoe.Messaging.IMessage.Payload
  name.vb: Steeltoe.Messaging.IMessage.Payload
- uid: Steeltoe.Messaging.Message`1.Equals(System.Object)
  commentId: M:Steeltoe.Messaging.Message`1.Equals(System.Object)
  id: Equals(System.Object)
  parent: Steeltoe.Messaging.Message`1
  langs:
  - csharp
  - vb
  name: Equals(Object)
  nameWithType: Message<P>.Equals(Object)
  fullName: Steeltoe.Messaging.Message<P>.Equals(System.Object)
  type: Method
  source:
    remote:
      path: src/Messaging/src/MessagingBase/Message.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Equals
    path: ../Steeltoe/src/Messaging/src/MessagingBase/Message.cs
    startLine: 142
  assemblies:
  - Steeltoe.Messaging.MessagingBase
  namespace: Steeltoe.Messaging
  syntax:
    content: public override bool Equals(object other)
    parameters:
    - id: other
      type: System.Object
    return:
      type: System.Boolean
    content.vb: Public Overrides Function Equals(other As Object) As Boolean
  overridden: System.Object.Equals(System.Object)
  overload: Steeltoe.Messaging.Message`1.Equals*
  nameWithType.vb: Message(Of P).Equals(Object)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: Steeltoe.Messaging.Message(Of P).Equals(System.Object)
- uid: Steeltoe.Messaging.Message`1.GetHashCode
  commentId: M:Steeltoe.Messaging.Message`1.GetHashCode
  id: GetHashCode
  parent: Steeltoe.Messaging.Message`1
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: Message<P>.GetHashCode()
  fullName: Steeltoe.Messaging.Message<P>.GetHashCode()
  type: Method
  source:
    remote:
      path: src/Messaging/src/MessagingBase/Message.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: GetHashCode
    path: ../Steeltoe/src/Messaging/src/MessagingBase/Message.cs
    startLine: 158
  assemblies:
  - Steeltoe.Messaging.MessagingBase
  namespace: Steeltoe.Messaging
  syntax:
    content: public override int GetHashCode()
    return:
      type: System.Int32
    content.vb: Public Overrides Function GetHashCode As Integer
  overridden: System.Object.GetHashCode
  overload: Steeltoe.Messaging.Message`1.GetHashCode*
  nameWithType.vb: Message(Of P).GetHashCode()
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: Steeltoe.Messaging.Message(Of P).GetHashCode()
- uid: Steeltoe.Messaging.Message`1.ToString
  commentId: M:Steeltoe.Messaging.Message`1.ToString
  id: ToString
  parent: Steeltoe.Messaging.Message`1
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: Message<P>.ToString()
  fullName: Steeltoe.Messaging.Message<P>.ToString()
  type: Method
  source:
    remote:
      path: src/Messaging/src/MessagingBase/Message.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: ToString
    path: ../Steeltoe/src/Messaging/src/MessagingBase/Message.cs
    startLine: 164
  assemblies:
  - Steeltoe.Messaging.MessagingBase
  namespace: Steeltoe.Messaging
  syntax:
    content: public override string ToString()
    return:
      type: System.String
    content.vb: Public Overrides Function ToString As String
  overridden: System.Object.ToString
  overload: Steeltoe.Messaging.Message`1.ToString*
  nameWithType.vb: Message(Of P).ToString()
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: Steeltoe.Messaging.Message(Of P).ToString()
references:
- uid: Steeltoe.Messaging
  commentId: N:Steeltoe.Messaging
  name: Steeltoe.Messaging
  nameWithType: Steeltoe.Messaging
  fullName: Steeltoe.Messaging
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Steeltoe.Messaging.AbstractMessage
  commentId: T:Steeltoe.Messaging.AbstractMessage
  parent: Steeltoe.Messaging
  name: AbstractMessage
  nameWithType: AbstractMessage
  fullName: Steeltoe.Messaging.AbstractMessage
- uid: Steeltoe.Messaging.IMessage{{P}}
  commentId: T:Steeltoe.Messaging.IMessage{`0}
  parent: Steeltoe.Messaging
  definition: Steeltoe.Messaging.IMessage`1
  name: IMessage<P>
  nameWithType: IMessage<P>
  fullName: Steeltoe.Messaging.IMessage<P>
  nameWithType.vb: IMessage(Of P)
  fullName.vb: Steeltoe.Messaging.IMessage(Of P)
  name.vb: IMessage(Of P)
  spec.csharp:
  - uid: Steeltoe.Messaging.IMessage`1
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: <
    nameWithType: <
    fullName: <
  - name: P
    nameWithType: P
    fullName: P
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Steeltoe.Messaging.IMessage`1
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: P
    nameWithType: P
    fullName: P
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.IMessage
  commentId: T:Steeltoe.Messaging.IMessage
  parent: Steeltoe.Messaging
  name: IMessage
  nameWithType: IMessage
  fullName: Steeltoe.Messaging.IMessage
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Steeltoe.Messaging.IMessage`1
  commentId: T:Steeltoe.Messaging.IMessage`1
  name: IMessage<T>
  nameWithType: IMessage<T>
  fullName: Steeltoe.Messaging.IMessage<T>
  nameWithType.vb: IMessage(Of T)
  fullName.vb: Steeltoe.Messaging.IMessage(Of T)
  name.vb: IMessage(Of T)
  spec.csharp:
  - uid: Steeltoe.Messaging.IMessage`1
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Steeltoe.Messaging.IMessage`1
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: '{P}'
  commentId: '!:P'
  definition: P
  name: P
  nameWithType: P
  fullName: P
- uid: P
  name: P
  nameWithType: P
  fullName: P
- uid: Steeltoe.Messaging.IMessageHeaders
  commentId: T:Steeltoe.Messaging.IMessageHeaders
  parent: Steeltoe.Messaging
  name: IMessageHeaders
  nameWithType: IMessageHeaders
  fullName: Steeltoe.Messaging.IMessageHeaders
- uid: Steeltoe.Messaging.Message`1.#ctor*
  commentId: Overload:Steeltoe.Messaging.Message`1.#ctor
  name: Message
  nameWithType: Message<P>.Message
  fullName: Steeltoe.Messaging.Message<P>.Message
  nameWithType.vb: Message(Of P).Message
  fullName.vb: Steeltoe.Messaging.Message(Of P).Message
- uid: System.Collections.Generic.IDictionary{System.String,System.Object}
  commentId: T:System.Collections.Generic.IDictionary{System.String,System.Object}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IDictionary`2
  name: IDictionary<String, Object>
  nameWithType: IDictionary<String, Object>
  fullName: System.Collections.Generic.IDictionary<System.String, System.Object>
  nameWithType.vb: IDictionary(Of String, Object)
  fullName.vb: System.Collections.Generic.IDictionary(Of System.String, System.Object)
  name.vb: IDictionary(Of String, Object)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IDictionary`2
  commentId: T:System.Collections.Generic.IDictionary`2
  isExternal: true
  name: IDictionary<TKey, TValue>
  nameWithType: IDictionary<TKey, TValue>
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>
  nameWithType.vb: IDictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.IDictionary(Of TKey, TValue)
  name.vb: IDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Steeltoe.Messaging.Message`1.Payload*
  commentId: Overload:Steeltoe.Messaging.Message`1.Payload
  name: Payload
  nameWithType: Message<P>.Payload
  fullName: Steeltoe.Messaging.Message<P>.Payload
  nameWithType.vb: Message(Of P).Payload
  fullName.vb: Steeltoe.Messaging.Message(Of P).Payload
- uid: Steeltoe.Messaging.IMessage{{P}}.Payload
  commentId: P:Steeltoe.Messaging.IMessage{`0}.Payload
  parent: Steeltoe.Messaging.IMessage{{P}}
  definition: Steeltoe.Messaging.IMessage`1.Payload
  name: Payload
  nameWithType: IMessage<P>.Payload
  fullName: Steeltoe.Messaging.IMessage<P>.Payload
  nameWithType.vb: IMessage(Of P).Payload
  fullName.vb: Steeltoe.Messaging.IMessage(Of P).Payload
- uid: Steeltoe.Messaging.IMessage`1.Payload
  commentId: P:Steeltoe.Messaging.IMessage`1.Payload
  name: Payload
  nameWithType: IMessage<T>.Payload
  fullName: Steeltoe.Messaging.IMessage<T>.Payload
  nameWithType.vb: IMessage(Of T).Payload
  fullName.vb: Steeltoe.Messaging.IMessage(Of T).Payload
- uid: Steeltoe.Messaging.Message`1.Headers*
  commentId: Overload:Steeltoe.Messaging.Message`1.Headers
  name: Headers
  nameWithType: Message<P>.Headers
  fullName: Steeltoe.Messaging.Message<P>.Headers
  nameWithType.vb: Message(Of P).Headers
  fullName.vb: Steeltoe.Messaging.Message(Of P).Headers
- uid: Steeltoe.Messaging.IMessage.Headers
  commentId: P:Steeltoe.Messaging.IMessage.Headers
  parent: Steeltoe.Messaging.IMessage
  name: Headers
  nameWithType: IMessage.Headers
  fullName: Steeltoe.Messaging.IMessage.Headers
- uid: Steeltoe.Messaging.Message`1.Steeltoe#Messaging#IMessage#Payload*
  commentId: Overload:Steeltoe.Messaging.Message`1.Steeltoe#Messaging#IMessage#Payload
  name: IMessage.Payload
  nameWithType: Message<P>.IMessage.Payload
  fullName: Steeltoe.Messaging.Message<P>.Steeltoe.Messaging.IMessage.Payload
  nameWithType.vb: Message(Of P).Steeltoe.Messaging.IMessage.Payload
  fullName.vb: Steeltoe.Messaging.Message(Of P).Steeltoe.Messaging.IMessage.Payload
  name.vb: Steeltoe.Messaging.IMessage.Payload
- uid: Steeltoe.Messaging.IMessage.Payload
  commentId: P:Steeltoe.Messaging.IMessage.Payload
  parent: Steeltoe.Messaging.IMessage
  name: Payload
  nameWithType: IMessage.Payload
  fullName: Steeltoe.Messaging.IMessage.Payload
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Message`1.Equals*
  commentId: Overload:Steeltoe.Messaging.Message`1.Equals
  name: Equals
  nameWithType: Message<P>.Equals
  fullName: Steeltoe.Messaging.Message<P>.Equals
  nameWithType.vb: Message(Of P).Equals
  fullName.vb: Steeltoe.Messaging.Message(Of P).Equals
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Message`1.GetHashCode*
  commentId: Overload:Steeltoe.Messaging.Message`1.GetHashCode
  name: GetHashCode
  nameWithType: Message<P>.GetHashCode
  fullName: Steeltoe.Messaging.Message<P>.GetHashCode
  nameWithType.vb: Message(Of P).GetHashCode
  fullName.vb: Steeltoe.Messaging.Message(Of P).GetHashCode
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Message`1.ToString*
  commentId: Overload:Steeltoe.Messaging.Message`1.ToString
  name: ToString
  nameWithType: Message<P>.ToString
  fullName: Steeltoe.Messaging.Message<P>.ToString
  nameWithType.vb: Message(Of P).ToString
  fullName.vb: Steeltoe.Messaging.Message(Of P).ToString
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
