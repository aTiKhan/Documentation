### YamlMime:ManagedReference
items:
- uid: Steeltoe.Extensions.Logging.DynamicSerilog.ISerilogOptions
  commentId: T:Steeltoe.Extensions.Logging.DynamicSerilog.ISerilogOptions
  id: ISerilogOptions
  parent: Steeltoe.Extensions.Logging.DynamicSerilog
  children:
  - Steeltoe.Extensions.Logging.DynamicSerilog.ISerilogOptions.ConfigPath
  - Steeltoe.Extensions.Logging.DynamicSerilog.ISerilogOptions.FullnameExclusions
  - Steeltoe.Extensions.Logging.DynamicSerilog.ISerilogOptions.MinimumLevel
  - Steeltoe.Extensions.Logging.DynamicSerilog.ISerilogOptions.SubloggerConfigKeyExclusions
  langs:
  - csharp
  - vb
  name: ISerilogOptions
  nameWithType: ISerilogOptions
  fullName: Steeltoe.Extensions.Logging.DynamicSerilog.ISerilogOptions
  type: Interface
  source:
    remote:
      path: src/Logging/src/DynamicSerilogBase/ISerilogOptions.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: ISerilogOptions
    path: ../Steeltoe/src/Logging/src/DynamicSerilogBase/ISerilogOptions.cs
    startLine: 8
  assemblies:
  - Steeltoe.Extensions.Logging.DynamicSerilogBase
  namespace: Steeltoe.Extensions.Logging.DynamicSerilog
  syntax:
    content: public interface ISerilogOptions
    content.vb: Public Interface ISerilogOptions
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Steeltoe.Extensions.Logging.DynamicSerilog.ISerilogOptions.ConfigPath
  commentId: P:Steeltoe.Extensions.Logging.DynamicSerilog.ISerilogOptions.ConfigPath
  id: ConfigPath
  parent: Steeltoe.Extensions.Logging.DynamicSerilog.ISerilogOptions
  langs:
  - csharp
  - vb
  name: ConfigPath
  nameWithType: ISerilogOptions.ConfigPath
  fullName: Steeltoe.Extensions.Logging.DynamicSerilog.ISerilogOptions.ConfigPath
  type: Property
  source:
    remote:
      path: src/Logging/src/DynamicSerilogBase/ISerilogOptions.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: ConfigPath
    path: ../Steeltoe/src/Logging/src/DynamicSerilogBase/ISerilogOptions.cs
    startLine: 10
  assemblies:
  - Steeltoe.Extensions.Logging.DynamicSerilogBase
  namespace: Steeltoe.Extensions.Logging.DynamicSerilog
  syntax:
    content: string ConfigPath { get; }
    parameters: []
    return:
      type: System.String
    content.vb: ReadOnly Property ConfigPath As String
  overload: Steeltoe.Extensions.Logging.DynamicSerilog.ISerilogOptions.ConfigPath*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Steeltoe.Extensions.Logging.DynamicSerilog.ISerilogOptions.MinimumLevel
  commentId: P:Steeltoe.Extensions.Logging.DynamicSerilog.ISerilogOptions.MinimumLevel
  id: MinimumLevel
  parent: Steeltoe.Extensions.Logging.DynamicSerilog.ISerilogOptions
  langs:
  - csharp
  - vb
  name: MinimumLevel
  nameWithType: ISerilogOptions.MinimumLevel
  fullName: Steeltoe.Extensions.Logging.DynamicSerilog.ISerilogOptions.MinimumLevel
  type: Property
  source:
    remote:
      path: src/Logging/src/DynamicSerilogBase/ISerilogOptions.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: MinimumLevel
    path: ../Steeltoe/src/Logging/src/DynamicSerilogBase/ISerilogOptions.cs
    startLine: 12
  assemblies:
  - Steeltoe.Extensions.Logging.DynamicSerilogBase
  namespace: Steeltoe.Extensions.Logging.DynamicSerilog
  syntax:
    content: MinimumLevel MinimumLevel { get; set; }
    parameters: []
    return:
      type: Steeltoe.Extensions.Logging.DynamicSerilog.MinimumLevel
    content.vb: Property MinimumLevel As MinimumLevel
  overload: Steeltoe.Extensions.Logging.DynamicSerilog.ISerilogOptions.MinimumLevel*
  modifiers.csharp:
  - get
  - set
- uid: Steeltoe.Extensions.Logging.DynamicSerilog.ISerilogOptions.SubloggerConfigKeyExclusions
  commentId: P:Steeltoe.Extensions.Logging.DynamicSerilog.ISerilogOptions.SubloggerConfigKeyExclusions
  id: SubloggerConfigKeyExclusions
  parent: Steeltoe.Extensions.Logging.DynamicSerilog.ISerilogOptions
  langs:
  - csharp
  - vb
  name: SubloggerConfigKeyExclusions
  nameWithType: ISerilogOptions.SubloggerConfigKeyExclusions
  fullName: Steeltoe.Extensions.Logging.DynamicSerilog.ISerilogOptions.SubloggerConfigKeyExclusions
  type: Property
  source:
    remote:
      path: src/Logging/src/DynamicSerilogBase/ISerilogOptions.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: SubloggerConfigKeyExclusions
    path: ../Steeltoe/src/Logging/src/DynamicSerilogBase/ISerilogOptions.cs
    startLine: 14
  assemblies:
  - Steeltoe.Extensions.Logging.DynamicSerilogBase
  namespace: Steeltoe.Extensions.Logging.DynamicSerilog
  syntax:
    content: IEnumerable<string> SubloggerConfigKeyExclusions { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{System.String}
    content.vb: Property SubloggerConfigKeyExclusions As IEnumerable(Of String)
  overload: Steeltoe.Extensions.Logging.DynamicSerilog.ISerilogOptions.SubloggerConfigKeyExclusions*
  modifiers.csharp:
  - get
  - set
- uid: Steeltoe.Extensions.Logging.DynamicSerilog.ISerilogOptions.FullnameExclusions
  commentId: P:Steeltoe.Extensions.Logging.DynamicSerilog.ISerilogOptions.FullnameExclusions
  id: FullnameExclusions
  parent: Steeltoe.Extensions.Logging.DynamicSerilog.ISerilogOptions
  langs:
  - csharp
  - vb
  name: FullnameExclusions
  nameWithType: ISerilogOptions.FullnameExclusions
  fullName: Steeltoe.Extensions.Logging.DynamicSerilog.ISerilogOptions.FullnameExclusions
  type: Property
  source:
    remote:
      path: src/Logging/src/DynamicSerilogBase/ISerilogOptions.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: FullnameExclusions
    path: ../Steeltoe/src/Logging/src/DynamicSerilogBase/ISerilogOptions.cs
    startLine: 16
  assemblies:
  - Steeltoe.Extensions.Logging.DynamicSerilogBase
  namespace: Steeltoe.Extensions.Logging.DynamicSerilog
  syntax:
    content: IEnumerable<string> FullnameExclusions { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{System.String}
    content.vb: ReadOnly Property FullnameExclusions As IEnumerable(Of String)
  overload: Steeltoe.Extensions.Logging.DynamicSerilog.ISerilogOptions.FullnameExclusions*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
references:
- uid: Steeltoe.Extensions.Logging.DynamicSerilog
  commentId: N:Steeltoe.Extensions.Logging.DynamicSerilog
  name: Steeltoe.Extensions.Logging.DynamicSerilog
  nameWithType: Steeltoe.Extensions.Logging.DynamicSerilog
  fullName: Steeltoe.Extensions.Logging.DynamicSerilog
- uid: Steeltoe.Extensions.Logging.DynamicSerilog.ISerilogOptions.ConfigPath*
  commentId: Overload:Steeltoe.Extensions.Logging.DynamicSerilog.ISerilogOptions.ConfigPath
  name: ConfigPath
  nameWithType: ISerilogOptions.ConfigPath
  fullName: Steeltoe.Extensions.Logging.DynamicSerilog.ISerilogOptions.ConfigPath
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Steeltoe.Extensions.Logging.DynamicSerilog.ISerilogOptions.MinimumLevel*
  commentId: Overload:Steeltoe.Extensions.Logging.DynamicSerilog.ISerilogOptions.MinimumLevel
  name: MinimumLevel
  nameWithType: ISerilogOptions.MinimumLevel
  fullName: Steeltoe.Extensions.Logging.DynamicSerilog.ISerilogOptions.MinimumLevel
- uid: Steeltoe.Extensions.Logging.DynamicSerilog.MinimumLevel
  commentId: T:Steeltoe.Extensions.Logging.DynamicSerilog.MinimumLevel
  parent: Steeltoe.Extensions.Logging.DynamicSerilog
  name: MinimumLevel
  nameWithType: MinimumLevel
  fullName: Steeltoe.Extensions.Logging.DynamicSerilog.MinimumLevel
- uid: Steeltoe.Extensions.Logging.DynamicSerilog.ISerilogOptions.SubloggerConfigKeyExclusions*
  commentId: Overload:Steeltoe.Extensions.Logging.DynamicSerilog.ISerilogOptions.SubloggerConfigKeyExclusions
  name: SubloggerConfigKeyExclusions
  nameWithType: ISerilogOptions.SubloggerConfigKeyExclusions
  fullName: Steeltoe.Extensions.Logging.DynamicSerilog.ISerilogOptions.SubloggerConfigKeyExclusions
- uid: System.Collections.Generic.IEnumerable{System.String}
  commentId: T:System.Collections.Generic.IEnumerable{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<String>
  nameWithType: IEnumerable<String>
  fullName: System.Collections.Generic.IEnumerable<System.String>
  nameWithType.vb: IEnumerable(Of String)
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.String)
  name.vb: IEnumerable(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Steeltoe.Extensions.Logging.DynamicSerilog.ISerilogOptions.FullnameExclusions*
  commentId: Overload:Steeltoe.Extensions.Logging.DynamicSerilog.ISerilogOptions.FullnameExclusions
  name: FullnameExclusions
  nameWithType: ISerilogOptions.FullnameExclusions
  fullName: Steeltoe.Extensions.Logging.DynamicSerilog.ISerilogOptions.FullnameExclusions
