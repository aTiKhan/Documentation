### YamlMime:ManagedReference
items:
- uid: Steeltoe.Messaging.RabbitMQ.Config.IExchange
  commentId: T:Steeltoe.Messaging.RabbitMQ.Config.IExchange
  id: IExchange
  parent: Steeltoe.Messaging.RabbitMQ.Config
  children:
  - Steeltoe.Messaging.RabbitMQ.Config.IExchange.ExchangeName
  - Steeltoe.Messaging.RabbitMQ.Config.IExchange.IsAutoDelete
  - Steeltoe.Messaging.RabbitMQ.Config.IExchange.IsDelayed
  - Steeltoe.Messaging.RabbitMQ.Config.IExchange.IsDurable
  - Steeltoe.Messaging.RabbitMQ.Config.IExchange.IsInternal
  - Steeltoe.Messaging.RabbitMQ.Config.IExchange.Type
  langs:
  - csharp
  - vb
  name: IExchange
  nameWithType: IExchange
  fullName: Steeltoe.Messaging.RabbitMQ.Config.IExchange
  type: Interface
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Config/IExchange.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: IExchange
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Config/IExchange.cs
    startLine: 8
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Config
  syntax:
    content: 'public interface IExchange : IDeclarable, IServiceNameAware'
    content.vb: >-
      Public Interface IExchange

          Inherits IDeclarable, IServiceNameAware
  inheritedMembers:
  - Steeltoe.Messaging.RabbitMQ.Config.IDeclarable.ShouldDeclare
  - Steeltoe.Messaging.RabbitMQ.Config.IDeclarable.DeclaringAdmins
  - Steeltoe.Messaging.RabbitMQ.Config.IDeclarable.IgnoreDeclarationExceptions
  - Steeltoe.Messaging.RabbitMQ.Config.IDeclarable.Arguments
  - Steeltoe.Messaging.RabbitMQ.Config.IDeclarable.AddArgument(System.String,System.Object)
  - Steeltoe.Messaging.RabbitMQ.Config.IDeclarable.RemoveArgument(System.String)
  - Steeltoe.Common.Services.IServiceNameAware.ServiceName
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Steeltoe.Messaging.RabbitMQ.Config.IExchange.ExchangeName
  commentId: P:Steeltoe.Messaging.RabbitMQ.Config.IExchange.ExchangeName
  id: ExchangeName
  parent: Steeltoe.Messaging.RabbitMQ.Config.IExchange
  langs:
  - csharp
  - vb
  name: ExchangeName
  nameWithType: IExchange.ExchangeName
  fullName: Steeltoe.Messaging.RabbitMQ.Config.IExchange.ExchangeName
  type: Property
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Config/IExchange.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: ExchangeName
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Config/IExchange.cs
    startLine: 10
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Config
  syntax:
    content: string ExchangeName { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Property ExchangeName As String
  overload: Steeltoe.Messaging.RabbitMQ.Config.IExchange.ExchangeName*
  modifiers.csharp:
  - get
  - set
- uid: Steeltoe.Messaging.RabbitMQ.Config.IExchange.Type
  commentId: P:Steeltoe.Messaging.RabbitMQ.Config.IExchange.Type
  id: Type
  parent: Steeltoe.Messaging.RabbitMQ.Config.IExchange
  langs:
  - csharp
  - vb
  name: Type
  nameWithType: IExchange.Type
  fullName: Steeltoe.Messaging.RabbitMQ.Config.IExchange.Type
  type: Property
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Config/IExchange.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Type
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Config/IExchange.cs
    startLine: 12
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Config
  syntax:
    content: string Type { get; }
    parameters: []
    return:
      type: System.String
    content.vb: ReadOnly Property Type As String
  overload: Steeltoe.Messaging.RabbitMQ.Config.IExchange.Type*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Steeltoe.Messaging.RabbitMQ.Config.IExchange.IsDurable
  commentId: P:Steeltoe.Messaging.RabbitMQ.Config.IExchange.IsDurable
  id: IsDurable
  parent: Steeltoe.Messaging.RabbitMQ.Config.IExchange
  langs:
  - csharp
  - vb
  name: IsDurable
  nameWithType: IExchange.IsDurable
  fullName: Steeltoe.Messaging.RabbitMQ.Config.IExchange.IsDurable
  type: Property
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Config/IExchange.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: IsDurable
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Config/IExchange.cs
    startLine: 14
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Config
  syntax:
    content: bool IsDurable { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Property IsDurable As Boolean
  overload: Steeltoe.Messaging.RabbitMQ.Config.IExchange.IsDurable*
  modifiers.csharp:
  - get
  - set
- uid: Steeltoe.Messaging.RabbitMQ.Config.IExchange.IsAutoDelete
  commentId: P:Steeltoe.Messaging.RabbitMQ.Config.IExchange.IsAutoDelete
  id: IsAutoDelete
  parent: Steeltoe.Messaging.RabbitMQ.Config.IExchange
  langs:
  - csharp
  - vb
  name: IsAutoDelete
  nameWithType: IExchange.IsAutoDelete
  fullName: Steeltoe.Messaging.RabbitMQ.Config.IExchange.IsAutoDelete
  type: Property
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Config/IExchange.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: IsAutoDelete
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Config/IExchange.cs
    startLine: 16
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Config
  syntax:
    content: bool IsAutoDelete { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Property IsAutoDelete As Boolean
  overload: Steeltoe.Messaging.RabbitMQ.Config.IExchange.IsAutoDelete*
  modifiers.csharp:
  - get
  - set
- uid: Steeltoe.Messaging.RabbitMQ.Config.IExchange.IsDelayed
  commentId: P:Steeltoe.Messaging.RabbitMQ.Config.IExchange.IsDelayed
  id: IsDelayed
  parent: Steeltoe.Messaging.RabbitMQ.Config.IExchange
  langs:
  - csharp
  - vb
  name: IsDelayed
  nameWithType: IExchange.IsDelayed
  fullName: Steeltoe.Messaging.RabbitMQ.Config.IExchange.IsDelayed
  type: Property
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Config/IExchange.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: IsDelayed
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Config/IExchange.cs
    startLine: 18
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Config
  syntax:
    content: bool IsDelayed { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Property IsDelayed As Boolean
  overload: Steeltoe.Messaging.RabbitMQ.Config.IExchange.IsDelayed*
  modifiers.csharp:
  - get
  - set
- uid: Steeltoe.Messaging.RabbitMQ.Config.IExchange.IsInternal
  commentId: P:Steeltoe.Messaging.RabbitMQ.Config.IExchange.IsInternal
  id: IsInternal
  parent: Steeltoe.Messaging.RabbitMQ.Config.IExchange
  langs:
  - csharp
  - vb
  name: IsInternal
  nameWithType: IExchange.IsInternal
  fullName: Steeltoe.Messaging.RabbitMQ.Config.IExchange.IsInternal
  type: Property
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Config/IExchange.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: IsInternal
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Config/IExchange.cs
    startLine: 20
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Config
  syntax:
    content: bool IsInternal { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Property IsInternal As Boolean
  overload: Steeltoe.Messaging.RabbitMQ.Config.IExchange.IsInternal*
  modifiers.csharp:
  - get
  - set
references:
- uid: Steeltoe.Messaging.RabbitMQ.Config
  commentId: N:Steeltoe.Messaging.RabbitMQ.Config
  name: Steeltoe.Messaging.RabbitMQ.Config
  nameWithType: Steeltoe.Messaging.RabbitMQ.Config
  fullName: Steeltoe.Messaging.RabbitMQ.Config
- uid: Steeltoe.Messaging.RabbitMQ.Config.IDeclarable.ShouldDeclare
  commentId: P:Steeltoe.Messaging.RabbitMQ.Config.IDeclarable.ShouldDeclare
  parent: Steeltoe.Messaging.RabbitMQ.Config.IDeclarable
  name: ShouldDeclare
  nameWithType: IDeclarable.ShouldDeclare
  fullName: Steeltoe.Messaging.RabbitMQ.Config.IDeclarable.ShouldDeclare
- uid: Steeltoe.Messaging.RabbitMQ.Config.IDeclarable.DeclaringAdmins
  commentId: P:Steeltoe.Messaging.RabbitMQ.Config.IDeclarable.DeclaringAdmins
  parent: Steeltoe.Messaging.RabbitMQ.Config.IDeclarable
  name: DeclaringAdmins
  nameWithType: IDeclarable.DeclaringAdmins
  fullName: Steeltoe.Messaging.RabbitMQ.Config.IDeclarable.DeclaringAdmins
- uid: Steeltoe.Messaging.RabbitMQ.Config.IDeclarable.IgnoreDeclarationExceptions
  commentId: P:Steeltoe.Messaging.RabbitMQ.Config.IDeclarable.IgnoreDeclarationExceptions
  parent: Steeltoe.Messaging.RabbitMQ.Config.IDeclarable
  name: IgnoreDeclarationExceptions
  nameWithType: IDeclarable.IgnoreDeclarationExceptions
  fullName: Steeltoe.Messaging.RabbitMQ.Config.IDeclarable.IgnoreDeclarationExceptions
- uid: Steeltoe.Messaging.RabbitMQ.Config.IDeclarable.Arguments
  commentId: P:Steeltoe.Messaging.RabbitMQ.Config.IDeclarable.Arguments
  parent: Steeltoe.Messaging.RabbitMQ.Config.IDeclarable
  name: Arguments
  nameWithType: IDeclarable.Arguments
  fullName: Steeltoe.Messaging.RabbitMQ.Config.IDeclarable.Arguments
- uid: Steeltoe.Messaging.RabbitMQ.Config.IDeclarable.AddArgument(System.String,System.Object)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Config.IDeclarable.AddArgument(System.String,System.Object)
  parent: Steeltoe.Messaging.RabbitMQ.Config.IDeclarable
  isExternal: true
  name: AddArgument(String, Object)
  nameWithType: IDeclarable.AddArgument(String, Object)
  fullName: Steeltoe.Messaging.RabbitMQ.Config.IDeclarable.AddArgument(System.String, System.Object)
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Config.IDeclarable.AddArgument(System.String,System.Object)
    name: AddArgument
    nameWithType: IDeclarable.AddArgument
    fullName: Steeltoe.Messaging.RabbitMQ.Config.IDeclarable.AddArgument
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Config.IDeclarable.AddArgument(System.String,System.Object)
    name: AddArgument
    nameWithType: IDeclarable.AddArgument
    fullName: Steeltoe.Messaging.RabbitMQ.Config.IDeclarable.AddArgument
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Config.IDeclarable.RemoveArgument(System.String)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Config.IDeclarable.RemoveArgument(System.String)
  parent: Steeltoe.Messaging.RabbitMQ.Config.IDeclarable
  isExternal: true
  name: RemoveArgument(String)
  nameWithType: IDeclarable.RemoveArgument(String)
  fullName: Steeltoe.Messaging.RabbitMQ.Config.IDeclarable.RemoveArgument(System.String)
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Config.IDeclarable.RemoveArgument(System.String)
    name: RemoveArgument
    nameWithType: IDeclarable.RemoveArgument
    fullName: Steeltoe.Messaging.RabbitMQ.Config.IDeclarable.RemoveArgument
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Config.IDeclarable.RemoveArgument(System.String)
    name: RemoveArgument
    nameWithType: IDeclarable.RemoveArgument
    fullName: Steeltoe.Messaging.RabbitMQ.Config.IDeclarable.RemoveArgument
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Common.Services.IServiceNameAware.ServiceName
  commentId: P:Steeltoe.Common.Services.IServiceNameAware.ServiceName
  parent: Steeltoe.Common.Services.IServiceNameAware
  name: ServiceName
  nameWithType: IServiceNameAware.ServiceName
  fullName: Steeltoe.Common.Services.IServiceNameAware.ServiceName
- uid: Steeltoe.Messaging.RabbitMQ.Config.IDeclarable
  commentId: T:Steeltoe.Messaging.RabbitMQ.Config.IDeclarable
  parent: Steeltoe.Messaging.RabbitMQ.Config
  name: IDeclarable
  nameWithType: IDeclarable
  fullName: Steeltoe.Messaging.RabbitMQ.Config.IDeclarable
- uid: Steeltoe.Common.Services.IServiceNameAware
  commentId: T:Steeltoe.Common.Services.IServiceNameAware
  parent: Steeltoe.Common.Services
  name: IServiceNameAware
  nameWithType: IServiceNameAware
  fullName: Steeltoe.Common.Services.IServiceNameAware
- uid: Steeltoe.Common.Services
  commentId: N:Steeltoe.Common.Services
  name: Steeltoe.Common.Services
  nameWithType: Steeltoe.Common.Services
  fullName: Steeltoe.Common.Services
- uid: Steeltoe.Messaging.RabbitMQ.Config.IExchange.ExchangeName*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Config.IExchange.ExchangeName
  name: ExchangeName
  nameWithType: IExchange.ExchangeName
  fullName: Steeltoe.Messaging.RabbitMQ.Config.IExchange.ExchangeName
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Steeltoe.Messaging.RabbitMQ.Config.IExchange.Type*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Config.IExchange.Type
  name: Type
  nameWithType: IExchange.Type
  fullName: Steeltoe.Messaging.RabbitMQ.Config.IExchange.Type
- uid: Steeltoe.Messaging.RabbitMQ.Config.IExchange.IsDurable*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Config.IExchange.IsDurable
  name: IsDurable
  nameWithType: IExchange.IsDurable
  fullName: Steeltoe.Messaging.RabbitMQ.Config.IExchange.IsDurable
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Steeltoe.Messaging.RabbitMQ.Config.IExchange.IsAutoDelete*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Config.IExchange.IsAutoDelete
  name: IsAutoDelete
  nameWithType: IExchange.IsAutoDelete
  fullName: Steeltoe.Messaging.RabbitMQ.Config.IExchange.IsAutoDelete
- uid: Steeltoe.Messaging.RabbitMQ.Config.IExchange.IsDelayed*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Config.IExchange.IsDelayed
  name: IsDelayed
  nameWithType: IExchange.IsDelayed
  fullName: Steeltoe.Messaging.RabbitMQ.Config.IExchange.IsDelayed
- uid: Steeltoe.Messaging.RabbitMQ.Config.IExchange.IsInternal*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Config.IExchange.IsInternal
  name: IsInternal
  nameWithType: IExchange.IsInternal
  fullName: Steeltoe.Messaging.RabbitMQ.Config.IExchange.IsInternal
