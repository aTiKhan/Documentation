### YamlMime:ManagedReference
items:
- uid: Steeltoe.Stream.Binding.AbstractBindingTargetFactory`1
  commentId: T:Steeltoe.Stream.Binding.AbstractBindingTargetFactory`1
  id: AbstractBindingTargetFactory`1
  parent: Steeltoe.Stream.Binding
  children:
  - Steeltoe.Stream.Binding.AbstractBindingTargetFactory`1.#ctor(Steeltoe.Common.Contexts.IApplicationContext)
  - Steeltoe.Stream.Binding.AbstractBindingTargetFactory`1.ApplicationContext
  - Steeltoe.Stream.Binding.AbstractBindingTargetFactory`1.BindingTargetType
  - Steeltoe.Stream.Binding.AbstractBindingTargetFactory`1.CanCreate(System.Type)
  - Steeltoe.Stream.Binding.AbstractBindingTargetFactory`1.CreateInput(System.String)
  - Steeltoe.Stream.Binding.AbstractBindingTargetFactory`1.CreateOutput(System.String)
  - Steeltoe.Stream.Binding.AbstractBindingTargetFactory`1.Steeltoe#Stream#Binding#IBindingTargetFactory#CreateInput(System.String)
  - Steeltoe.Stream.Binding.AbstractBindingTargetFactory`1.Steeltoe#Stream#Binding#IBindingTargetFactory#CreateOutput(System.String)
  langs:
  - csharp
  - vb
  name: AbstractBindingTargetFactory<T>
  nameWithType: AbstractBindingTargetFactory<T>
  fullName: Steeltoe.Stream.Binding.AbstractBindingTargetFactory<T>
  type: Class
  source:
    remote:
      path: src/Stream/src/StreamBase/Binding/AbstractBindingTargetFactory.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: AbstractBindingTargetFactory
    path: ../Steeltoe/src/Stream/src/StreamBase/Binding/AbstractBindingTargetFactory.cs
    startLine: 9
  assemblies:
  - Steeltoe.Stream.StreamBase
  namespace: Steeltoe.Stream.Binding
  syntax:
    content: 'public abstract class AbstractBindingTargetFactory<T> : IBindingTargetFactory'
    typeParameters:
    - id: T
    content.vb: >-
      Public MustInherit Class AbstractBindingTargetFactory(Of T)

          Implements IBindingTargetFactory
  inheritance:
  - System.Object
  derivedClasses:
  - Steeltoe.Stream.Binding.MessageSourceBindingTargetFactory
  - Steeltoe.Stream.Binding.SubscribableChannelBindingTargetFactory
  implements:
  - Steeltoe.Stream.Binding.IBindingTargetFactory
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  nameWithType.vb: AbstractBindingTargetFactory(Of T)
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
  fullName.vb: Steeltoe.Stream.Binding.AbstractBindingTargetFactory(Of T)
  name.vb: AbstractBindingTargetFactory(Of T)
- uid: Steeltoe.Stream.Binding.AbstractBindingTargetFactory`1.BindingTargetType
  commentId: P:Steeltoe.Stream.Binding.AbstractBindingTargetFactory`1.BindingTargetType
  id: BindingTargetType
  parent: Steeltoe.Stream.Binding.AbstractBindingTargetFactory`1
  langs:
  - csharp
  - vb
  name: BindingTargetType
  nameWithType: AbstractBindingTargetFactory<T>.BindingTargetType
  fullName: Steeltoe.Stream.Binding.AbstractBindingTargetFactory<T>.BindingTargetType
  type: Property
  source:
    remote:
      path: src/Stream/src/StreamBase/Binding/AbstractBindingTargetFactory.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: BindingTargetType
    path: ../Steeltoe/src/Stream/src/StreamBase/Binding/AbstractBindingTargetFactory.cs
    startLine: 11
  assemblies:
  - Steeltoe.Stream.StreamBase
  namespace: Steeltoe.Stream.Binding
  syntax:
    content: public Type BindingTargetType { get; }
    parameters: []
    return:
      type: System.Type
    content.vb: Public ReadOnly Property BindingTargetType As Type
  overload: Steeltoe.Stream.Binding.AbstractBindingTargetFactory`1.BindingTargetType*
  nameWithType.vb: AbstractBindingTargetFactory(Of T).BindingTargetType
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: Steeltoe.Stream.Binding.AbstractBindingTargetFactory(Of T).BindingTargetType
- uid: Steeltoe.Stream.Binding.AbstractBindingTargetFactory`1.#ctor(Steeltoe.Common.Contexts.IApplicationContext)
  commentId: M:Steeltoe.Stream.Binding.AbstractBindingTargetFactory`1.#ctor(Steeltoe.Common.Contexts.IApplicationContext)
  id: '#ctor(Steeltoe.Common.Contexts.IApplicationContext)'
  parent: Steeltoe.Stream.Binding.AbstractBindingTargetFactory`1
  langs:
  - csharp
  - vb
  name: AbstractBindingTargetFactory(IApplicationContext)
  nameWithType: AbstractBindingTargetFactory<T>.AbstractBindingTargetFactory(IApplicationContext)
  fullName: Steeltoe.Stream.Binding.AbstractBindingTargetFactory<T>.AbstractBindingTargetFactory(Steeltoe.Common.Contexts.IApplicationContext)
  type: Constructor
  source:
    remote:
      path: src/Stream/src/StreamBase/Binding/AbstractBindingTargetFactory.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: .ctor
    path: ../Steeltoe/src/Stream/src/StreamBase/Binding/AbstractBindingTargetFactory.cs
    startLine: 13
  assemblies:
  - Steeltoe.Stream.StreamBase
  namespace: Steeltoe.Stream.Binding
  syntax:
    content: protected AbstractBindingTargetFactory(IApplicationContext context)
    parameters:
    - id: context
      type: Steeltoe.Common.Contexts.IApplicationContext
    content.vb: Protected Sub New(context As IApplicationContext)
  overload: Steeltoe.Stream.Binding.AbstractBindingTargetFactory`1.#ctor*
  nameWithType.vb: AbstractBindingTargetFactory(Of T).AbstractBindingTargetFactory(IApplicationContext)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: Steeltoe.Stream.Binding.AbstractBindingTargetFactory(Of T).AbstractBindingTargetFactory(Steeltoe.Common.Contexts.IApplicationContext)
- uid: Steeltoe.Stream.Binding.AbstractBindingTargetFactory`1.ApplicationContext
  commentId: P:Steeltoe.Stream.Binding.AbstractBindingTargetFactory`1.ApplicationContext
  id: ApplicationContext
  parent: Steeltoe.Stream.Binding.AbstractBindingTargetFactory`1
  langs:
  - csharp
  - vb
  name: ApplicationContext
  nameWithType: AbstractBindingTargetFactory<T>.ApplicationContext
  fullName: Steeltoe.Stream.Binding.AbstractBindingTargetFactory<T>.ApplicationContext
  type: Property
  source:
    remote:
      path: src/Stream/src/StreamBase/Binding/AbstractBindingTargetFactory.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: ApplicationContext
    path: ../Steeltoe/src/Stream/src/StreamBase/Binding/AbstractBindingTargetFactory.cs
    startLine: 19
  assemblies:
  - Steeltoe.Stream.StreamBase
  namespace: Steeltoe.Stream.Binding
  syntax:
    content: public IApplicationContext ApplicationContext { get; }
    parameters: []
    return:
      type: Steeltoe.Common.Contexts.IApplicationContext
    content.vb: Public ReadOnly Property ApplicationContext As IApplicationContext
  overload: Steeltoe.Stream.Binding.AbstractBindingTargetFactory`1.ApplicationContext*
  nameWithType.vb: AbstractBindingTargetFactory(Of T).ApplicationContext
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: Steeltoe.Stream.Binding.AbstractBindingTargetFactory(Of T).ApplicationContext
- uid: Steeltoe.Stream.Binding.AbstractBindingTargetFactory`1.CanCreate(System.Type)
  commentId: M:Steeltoe.Stream.Binding.AbstractBindingTargetFactory`1.CanCreate(System.Type)
  id: CanCreate(System.Type)
  parent: Steeltoe.Stream.Binding.AbstractBindingTargetFactory`1
  langs:
  - csharp
  - vb
  name: CanCreate(Type)
  nameWithType: AbstractBindingTargetFactory<T>.CanCreate(Type)
  fullName: Steeltoe.Stream.Binding.AbstractBindingTargetFactory<T>.CanCreate(System.Type)
  type: Method
  source:
    remote:
      path: src/Stream/src/StreamBase/Binding/AbstractBindingTargetFactory.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: CanCreate
    path: ../Steeltoe/src/Stream/src/StreamBase/Binding/AbstractBindingTargetFactory.cs
    startLine: 21
  assemblies:
  - Steeltoe.Stream.StreamBase
  namespace: Steeltoe.Stream.Binding
  syntax:
    content: public virtual bool CanCreate(Type type)
    parameters:
    - id: type
      type: System.Type
    return:
      type: System.Boolean
    content.vb: Public Overridable Function CanCreate(type As Type) As Boolean
  overload: Steeltoe.Stream.Binding.AbstractBindingTargetFactory`1.CanCreate*
  implements:
  - Steeltoe.Stream.Binding.IBindingTargetFactory.CanCreate(System.Type)
  nameWithType.vb: AbstractBindingTargetFactory(Of T).CanCreate(Type)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Steeltoe.Stream.Binding.AbstractBindingTargetFactory(Of T).CanCreate(System.Type)
- uid: Steeltoe.Stream.Binding.AbstractBindingTargetFactory`1.CreateInput(System.String)
  commentId: M:Steeltoe.Stream.Binding.AbstractBindingTargetFactory`1.CreateInput(System.String)
  id: CreateInput(System.String)
  parent: Steeltoe.Stream.Binding.AbstractBindingTargetFactory`1
  langs:
  - csharp
  - vb
  name: CreateInput(String)
  nameWithType: AbstractBindingTargetFactory<T>.CreateInput(String)
  fullName: Steeltoe.Stream.Binding.AbstractBindingTargetFactory<T>.CreateInput(System.String)
  type: Method
  source:
    remote:
      path: src/Stream/src/StreamBase/Binding/AbstractBindingTargetFactory.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: CreateInput
    path: ../Steeltoe/src/Stream/src/StreamBase/Binding/AbstractBindingTargetFactory.cs
    startLine: 26
  assemblies:
  - Steeltoe.Stream.StreamBase
  namespace: Steeltoe.Stream.Binding
  syntax:
    content: public abstract T CreateInput(string name)
    parameters:
    - id: name
      type: System.String
    return:
      type: '{T}'
    content.vb: Public MustOverride Function CreateInput(name As String) As T
  overload: Steeltoe.Stream.Binding.AbstractBindingTargetFactory`1.CreateInput*
  nameWithType.vb: AbstractBindingTargetFactory(Of T).CreateInput(String)
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
  fullName.vb: Steeltoe.Stream.Binding.AbstractBindingTargetFactory(Of T).CreateInput(System.String)
- uid: Steeltoe.Stream.Binding.AbstractBindingTargetFactory`1.CreateOutput(System.String)
  commentId: M:Steeltoe.Stream.Binding.AbstractBindingTargetFactory`1.CreateOutput(System.String)
  id: CreateOutput(System.String)
  parent: Steeltoe.Stream.Binding.AbstractBindingTargetFactory`1
  langs:
  - csharp
  - vb
  name: CreateOutput(String)
  nameWithType: AbstractBindingTargetFactory<T>.CreateOutput(String)
  fullName: Steeltoe.Stream.Binding.AbstractBindingTargetFactory<T>.CreateOutput(System.String)
  type: Method
  source:
    remote:
      path: src/Stream/src/StreamBase/Binding/AbstractBindingTargetFactory.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: CreateOutput
    path: ../Steeltoe/src/Stream/src/StreamBase/Binding/AbstractBindingTargetFactory.cs
    startLine: 28
  assemblies:
  - Steeltoe.Stream.StreamBase
  namespace: Steeltoe.Stream.Binding
  syntax:
    content: public abstract T CreateOutput(string name)
    parameters:
    - id: name
      type: System.String
    return:
      type: '{T}'
    content.vb: Public MustOverride Function CreateOutput(name As String) As T
  overload: Steeltoe.Stream.Binding.AbstractBindingTargetFactory`1.CreateOutput*
  nameWithType.vb: AbstractBindingTargetFactory(Of T).CreateOutput(String)
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
  fullName.vb: Steeltoe.Stream.Binding.AbstractBindingTargetFactory(Of T).CreateOutput(System.String)
- uid: Steeltoe.Stream.Binding.AbstractBindingTargetFactory`1.Steeltoe#Stream#Binding#IBindingTargetFactory#CreateInput(System.String)
  commentId: M:Steeltoe.Stream.Binding.AbstractBindingTargetFactory`1.Steeltoe#Stream#Binding#IBindingTargetFactory#CreateInput(System.String)
  id: Steeltoe#Stream#Binding#IBindingTargetFactory#CreateInput(System.String)
  isEii: true
  parent: Steeltoe.Stream.Binding.AbstractBindingTargetFactory`1
  langs:
  - csharp
  - vb
  name: IBindingTargetFactory.CreateInput(String)
  nameWithType: AbstractBindingTargetFactory<T>.IBindingTargetFactory.CreateInput(String)
  fullName: Steeltoe.Stream.Binding.AbstractBindingTargetFactory<T>.Steeltoe.Stream.Binding.IBindingTargetFactory.CreateInput(System.String)
  type: Method
  source:
    remote:
      path: src/Stream/src/StreamBase/Binding/AbstractBindingTargetFactory.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Steeltoe.Stream.Binding.IBindingTargetFactory.CreateInput
    path: ../Steeltoe/src/Stream/src/StreamBase/Binding/AbstractBindingTargetFactory.cs
    startLine: 30
  assemblies:
  - Steeltoe.Stream.StreamBase
  namespace: Steeltoe.Stream.Binding
  syntax:
    content: object IBindingTargetFactory.CreateInput(string name)
    parameters:
    - id: name
      type: System.String
    return:
      type: System.Object
    content.vb: Function Steeltoe.Stream.Binding.IBindingTargetFactory.CreateInput(name As String) As Object Implements IBindingTargetFactory.CreateInput
  overload: Steeltoe.Stream.Binding.AbstractBindingTargetFactory`1.Steeltoe#Stream#Binding#IBindingTargetFactory#CreateInput*
  implements:
  - Steeltoe.Stream.Binding.IBindingTargetFactory.CreateInput(System.String)
  nameWithType.vb: AbstractBindingTargetFactory(Of T).Steeltoe.Stream.Binding.IBindingTargetFactory.CreateInput(String)
  fullName.vb: Steeltoe.Stream.Binding.AbstractBindingTargetFactory(Of T).Steeltoe.Stream.Binding.IBindingTargetFactory.CreateInput(System.String)
  name.vb: Steeltoe.Stream.Binding.IBindingTargetFactory.CreateInput(String)
- uid: Steeltoe.Stream.Binding.AbstractBindingTargetFactory`1.Steeltoe#Stream#Binding#IBindingTargetFactory#CreateOutput(System.String)
  commentId: M:Steeltoe.Stream.Binding.AbstractBindingTargetFactory`1.Steeltoe#Stream#Binding#IBindingTargetFactory#CreateOutput(System.String)
  id: Steeltoe#Stream#Binding#IBindingTargetFactory#CreateOutput(System.String)
  isEii: true
  parent: Steeltoe.Stream.Binding.AbstractBindingTargetFactory`1
  langs:
  - csharp
  - vb
  name: IBindingTargetFactory.CreateOutput(String)
  nameWithType: AbstractBindingTargetFactory<T>.IBindingTargetFactory.CreateOutput(String)
  fullName: Steeltoe.Stream.Binding.AbstractBindingTargetFactory<T>.Steeltoe.Stream.Binding.IBindingTargetFactory.CreateOutput(System.String)
  type: Method
  source:
    remote:
      path: src/Stream/src/StreamBase/Binding/AbstractBindingTargetFactory.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Steeltoe.Stream.Binding.IBindingTargetFactory.CreateOutput
    path: ../Steeltoe/src/Stream/src/StreamBase/Binding/AbstractBindingTargetFactory.cs
    startLine: 35
  assemblies:
  - Steeltoe.Stream.StreamBase
  namespace: Steeltoe.Stream.Binding
  syntax:
    content: object IBindingTargetFactory.CreateOutput(string name)
    parameters:
    - id: name
      type: System.String
    return:
      type: System.Object
    content.vb: Function Steeltoe.Stream.Binding.IBindingTargetFactory.CreateOutput(name As String) As Object Implements IBindingTargetFactory.CreateOutput
  overload: Steeltoe.Stream.Binding.AbstractBindingTargetFactory`1.Steeltoe#Stream#Binding#IBindingTargetFactory#CreateOutput*
  implements:
  - Steeltoe.Stream.Binding.IBindingTargetFactory.CreateOutput(System.String)
  nameWithType.vb: AbstractBindingTargetFactory(Of T).Steeltoe.Stream.Binding.IBindingTargetFactory.CreateOutput(String)
  fullName.vb: Steeltoe.Stream.Binding.AbstractBindingTargetFactory(Of T).Steeltoe.Stream.Binding.IBindingTargetFactory.CreateOutput(System.String)
  name.vb: Steeltoe.Stream.Binding.IBindingTargetFactory.CreateOutput(String)
references:
- uid: Steeltoe.Stream.Binding
  commentId: N:Steeltoe.Stream.Binding
  name: Steeltoe.Stream.Binding
  nameWithType: Steeltoe.Stream.Binding
  fullName: Steeltoe.Stream.Binding
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Steeltoe.Stream.Binding.IBindingTargetFactory
  commentId: T:Steeltoe.Stream.Binding.IBindingTargetFactory
  parent: Steeltoe.Stream.Binding
  name: IBindingTargetFactory
  nameWithType: IBindingTargetFactory
  fullName: Steeltoe.Stream.Binding.IBindingTargetFactory
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Steeltoe.Stream.Binding.AbstractBindingTargetFactory`1.BindingTargetType*
  commentId: Overload:Steeltoe.Stream.Binding.AbstractBindingTargetFactory`1.BindingTargetType
  name: BindingTargetType
  nameWithType: AbstractBindingTargetFactory<T>.BindingTargetType
  fullName: Steeltoe.Stream.Binding.AbstractBindingTargetFactory<T>.BindingTargetType
  nameWithType.vb: AbstractBindingTargetFactory(Of T).BindingTargetType
  fullName.vb: Steeltoe.Stream.Binding.AbstractBindingTargetFactory(Of T).BindingTargetType
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: Steeltoe.Stream.Binding.AbstractBindingTargetFactory`1.#ctor*
  commentId: Overload:Steeltoe.Stream.Binding.AbstractBindingTargetFactory`1.#ctor
  name: AbstractBindingTargetFactory
  nameWithType: AbstractBindingTargetFactory<T>.AbstractBindingTargetFactory
  fullName: Steeltoe.Stream.Binding.AbstractBindingTargetFactory<T>.AbstractBindingTargetFactory
  nameWithType.vb: AbstractBindingTargetFactory(Of T).AbstractBindingTargetFactory
  fullName.vb: Steeltoe.Stream.Binding.AbstractBindingTargetFactory(Of T).AbstractBindingTargetFactory
- uid: Steeltoe.Common.Contexts.IApplicationContext
  commentId: T:Steeltoe.Common.Contexts.IApplicationContext
  parent: Steeltoe.Common.Contexts
  name: IApplicationContext
  nameWithType: IApplicationContext
  fullName: Steeltoe.Common.Contexts.IApplicationContext
- uid: Steeltoe.Common.Contexts
  commentId: N:Steeltoe.Common.Contexts
  name: Steeltoe.Common.Contexts
  nameWithType: Steeltoe.Common.Contexts
  fullName: Steeltoe.Common.Contexts
- uid: Steeltoe.Stream.Binding.AbstractBindingTargetFactory`1.ApplicationContext*
  commentId: Overload:Steeltoe.Stream.Binding.AbstractBindingTargetFactory`1.ApplicationContext
  name: ApplicationContext
  nameWithType: AbstractBindingTargetFactory<T>.ApplicationContext
  fullName: Steeltoe.Stream.Binding.AbstractBindingTargetFactory<T>.ApplicationContext
  nameWithType.vb: AbstractBindingTargetFactory(Of T).ApplicationContext
  fullName.vb: Steeltoe.Stream.Binding.AbstractBindingTargetFactory(Of T).ApplicationContext
- uid: Steeltoe.Stream.Binding.AbstractBindingTargetFactory`1.CanCreate*
  commentId: Overload:Steeltoe.Stream.Binding.AbstractBindingTargetFactory`1.CanCreate
  name: CanCreate
  nameWithType: AbstractBindingTargetFactory<T>.CanCreate
  fullName: Steeltoe.Stream.Binding.AbstractBindingTargetFactory<T>.CanCreate
  nameWithType.vb: AbstractBindingTargetFactory(Of T).CanCreate
  fullName.vb: Steeltoe.Stream.Binding.AbstractBindingTargetFactory(Of T).CanCreate
- uid: Steeltoe.Stream.Binding.IBindingTargetFactory.CanCreate(System.Type)
  commentId: M:Steeltoe.Stream.Binding.IBindingTargetFactory.CanCreate(System.Type)
  parent: Steeltoe.Stream.Binding.IBindingTargetFactory
  isExternal: true
  name: CanCreate(Type)
  nameWithType: IBindingTargetFactory.CanCreate(Type)
  fullName: Steeltoe.Stream.Binding.IBindingTargetFactory.CanCreate(System.Type)
  spec.csharp:
  - uid: Steeltoe.Stream.Binding.IBindingTargetFactory.CanCreate(System.Type)
    name: CanCreate
    nameWithType: IBindingTargetFactory.CanCreate
    fullName: Steeltoe.Stream.Binding.IBindingTargetFactory.CanCreate
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Stream.Binding.IBindingTargetFactory.CanCreate(System.Type)
    name: CanCreate
    nameWithType: IBindingTargetFactory.CanCreate
    fullName: Steeltoe.Stream.Binding.IBindingTargetFactory.CanCreate
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Steeltoe.Stream.Binding.AbstractBindingTargetFactory`1.CreateInput*
  commentId: Overload:Steeltoe.Stream.Binding.AbstractBindingTargetFactory`1.CreateInput
  name: CreateInput
  nameWithType: AbstractBindingTargetFactory<T>.CreateInput
  fullName: Steeltoe.Stream.Binding.AbstractBindingTargetFactory<T>.CreateInput
  nameWithType.vb: AbstractBindingTargetFactory(Of T).CreateInput
  fullName.vb: Steeltoe.Stream.Binding.AbstractBindingTargetFactory(Of T).CreateInput
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: Steeltoe.Stream.Binding.AbstractBindingTargetFactory`1.CreateOutput*
  commentId: Overload:Steeltoe.Stream.Binding.AbstractBindingTargetFactory`1.CreateOutput
  name: CreateOutput
  nameWithType: AbstractBindingTargetFactory<T>.CreateOutput
  fullName: Steeltoe.Stream.Binding.AbstractBindingTargetFactory<T>.CreateOutput
  nameWithType.vb: AbstractBindingTargetFactory(Of T).CreateOutput
  fullName.vb: Steeltoe.Stream.Binding.AbstractBindingTargetFactory(Of T).CreateOutput
- uid: Steeltoe.Stream.Binding.AbstractBindingTargetFactory`1.Steeltoe#Stream#Binding#IBindingTargetFactory#CreateInput*
  commentId: Overload:Steeltoe.Stream.Binding.AbstractBindingTargetFactory`1.Steeltoe#Stream#Binding#IBindingTargetFactory#CreateInput
  name: IBindingTargetFactory.CreateInput
  nameWithType: AbstractBindingTargetFactory<T>.IBindingTargetFactory.CreateInput
  fullName: Steeltoe.Stream.Binding.AbstractBindingTargetFactory<T>.Steeltoe.Stream.Binding.IBindingTargetFactory.CreateInput
  nameWithType.vb: AbstractBindingTargetFactory(Of T).Steeltoe.Stream.Binding.IBindingTargetFactory.CreateInput
  fullName.vb: Steeltoe.Stream.Binding.AbstractBindingTargetFactory(Of T).Steeltoe.Stream.Binding.IBindingTargetFactory.CreateInput
  name.vb: Steeltoe.Stream.Binding.IBindingTargetFactory.CreateInput
- uid: Steeltoe.Stream.Binding.IBindingTargetFactory.CreateInput(System.String)
  commentId: M:Steeltoe.Stream.Binding.IBindingTargetFactory.CreateInput(System.String)
  parent: Steeltoe.Stream.Binding.IBindingTargetFactory
  isExternal: true
  name: CreateInput(String)
  nameWithType: IBindingTargetFactory.CreateInput(String)
  fullName: Steeltoe.Stream.Binding.IBindingTargetFactory.CreateInput(System.String)
  spec.csharp:
  - uid: Steeltoe.Stream.Binding.IBindingTargetFactory.CreateInput(System.String)
    name: CreateInput
    nameWithType: IBindingTargetFactory.CreateInput
    fullName: Steeltoe.Stream.Binding.IBindingTargetFactory.CreateInput
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Stream.Binding.IBindingTargetFactory.CreateInput(System.String)
    name: CreateInput
    nameWithType: IBindingTargetFactory.CreateInput
    fullName: Steeltoe.Stream.Binding.IBindingTargetFactory.CreateInput
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Stream.Binding.AbstractBindingTargetFactory`1.Steeltoe#Stream#Binding#IBindingTargetFactory#CreateOutput*
  commentId: Overload:Steeltoe.Stream.Binding.AbstractBindingTargetFactory`1.Steeltoe#Stream#Binding#IBindingTargetFactory#CreateOutput
  name: IBindingTargetFactory.CreateOutput
  nameWithType: AbstractBindingTargetFactory<T>.IBindingTargetFactory.CreateOutput
  fullName: Steeltoe.Stream.Binding.AbstractBindingTargetFactory<T>.Steeltoe.Stream.Binding.IBindingTargetFactory.CreateOutput
  nameWithType.vb: AbstractBindingTargetFactory(Of T).Steeltoe.Stream.Binding.IBindingTargetFactory.CreateOutput
  fullName.vb: Steeltoe.Stream.Binding.AbstractBindingTargetFactory(Of T).Steeltoe.Stream.Binding.IBindingTargetFactory.CreateOutput
  name.vb: Steeltoe.Stream.Binding.IBindingTargetFactory.CreateOutput
- uid: Steeltoe.Stream.Binding.IBindingTargetFactory.CreateOutput(System.String)
  commentId: M:Steeltoe.Stream.Binding.IBindingTargetFactory.CreateOutput(System.String)
  parent: Steeltoe.Stream.Binding.IBindingTargetFactory
  isExternal: true
  name: CreateOutput(String)
  nameWithType: IBindingTargetFactory.CreateOutput(String)
  fullName: Steeltoe.Stream.Binding.IBindingTargetFactory.CreateOutput(System.String)
  spec.csharp:
  - uid: Steeltoe.Stream.Binding.IBindingTargetFactory.CreateOutput(System.String)
    name: CreateOutput
    nameWithType: IBindingTargetFactory.CreateOutput
    fullName: Steeltoe.Stream.Binding.IBindingTargetFactory.CreateOutput
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Stream.Binding.IBindingTargetFactory.CreateOutput(System.String)
    name: CreateOutput
    nameWithType: IBindingTargetFactory.CreateOutput
    fullName: Steeltoe.Stream.Binding.IBindingTargetFactory.CreateOutput
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
