### YamlMime:ManagedReference
items:
- uid: Steeltoe.Messaging.IMessage`1
  commentId: T:Steeltoe.Messaging.IMessage`1
  id: IMessage`1
  parent: Steeltoe.Messaging
  children:
  - Steeltoe.Messaging.IMessage`1.Payload
  langs:
  - csharp
  - vb
  name: IMessage<T>
  nameWithType: IMessage<T>
  fullName: Steeltoe.Messaging.IMessage<T>
  type: Interface
  source:
    remote:
      path: src/Messaging/src/Abstractions/IMessage.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: IMessage
    path: ../Steeltoe/src/Messaging/src/Abstractions/IMessage.cs
    startLine: 26
  assemblies:
  - Steeltoe.Messaging.Abstractions
  namespace: Steeltoe.Messaging
  summary: "\nA generic message representation with headers and a body\n"
  example: []
  syntax:
    content: 'public interface IMessage<out T> : IMessage'
    typeParameters:
    - id: T
      description: the type of the payload
    content.vb: >-
      Public Interface IMessage(Of Out T)

          Inherits IMessage
  inheritedMembers:
  - Steeltoe.Messaging.IMessage.Headers
  nameWithType.vb: IMessage(Of T)
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
  fullName.vb: Steeltoe.Messaging.IMessage(Of T)
  name.vb: IMessage(Of T)
- uid: Steeltoe.Messaging.IMessage`1.Payload
  commentId: P:Steeltoe.Messaging.IMessage`1.Payload
  id: Payload
  parent: Steeltoe.Messaging.IMessage`1
  langs:
  - csharp
  - vb
  name: Payload
  nameWithType: IMessage<T>.Payload
  fullName: Steeltoe.Messaging.IMessage<T>.Payload
  type: Property
  source:
    remote:
      path: src/Messaging/src/Abstractions/IMessage.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Payload
    path: ../Steeltoe/src/Messaging/src/Abstractions/IMessage.cs
    startLine: 31
  assemblies:
  - Steeltoe.Messaging.Abstractions
  namespace: Steeltoe.Messaging
  summary: "\nGets the headers for the message\n"
  example: []
  syntax:
    content: T Payload { get; }
    parameters: []
    return:
      type: '{T}'
    content.vb: ReadOnly Property Payload As T
  overload: Steeltoe.Messaging.IMessage`1.Payload*
  nameWithType.vb: IMessage(Of T).Payload
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
  fullName.vb: Steeltoe.Messaging.IMessage(Of T).Payload
references:
- uid: Steeltoe.Messaging
  commentId: N:Steeltoe.Messaging
  name: Steeltoe.Messaging
  nameWithType: Steeltoe.Messaging
  fullName: Steeltoe.Messaging
- uid: Steeltoe.Messaging.IMessage.Headers
  commentId: P:Steeltoe.Messaging.IMessage.Headers
  parent: Steeltoe.Messaging.IMessage
  name: Headers
  nameWithType: IMessage.Headers
  fullName: Steeltoe.Messaging.IMessage.Headers
- uid: Steeltoe.Messaging.IMessage
  commentId: T:Steeltoe.Messaging.IMessage
  parent: Steeltoe.Messaging
  name: IMessage
  nameWithType: IMessage
  fullName: Steeltoe.Messaging.IMessage
- uid: Steeltoe.Messaging.IMessage`1.Payload*
  commentId: Overload:Steeltoe.Messaging.IMessage`1.Payload
  name: Payload
  nameWithType: IMessage<T>.Payload
  fullName: Steeltoe.Messaging.IMessage<T>.Payload
  nameWithType.vb: IMessage(Of T).Payload
  fullName.vb: Steeltoe.Messaging.IMessage(Of T).Payload
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  name: T
  nameWithType: T
  fullName: T
