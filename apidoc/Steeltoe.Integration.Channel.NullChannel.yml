### YamlMime:ManagedReference
items:
- uid: Steeltoe.Integration.Channel.NullChannel
  commentId: T:Steeltoe.Integration.Channel.NullChannel
  id: NullChannel
  parent: Steeltoe.Integration.Channel
  children:
  - Steeltoe.Integration.Channel.NullChannel.#ctor(Microsoft.Extensions.Logging.ILogger)
  - Steeltoe.Integration.Channel.NullChannel.Receive
  - Steeltoe.Integration.Channel.NullChannel.Receive(System.Int32)
  - Steeltoe.Integration.Channel.NullChannel.ReceiveAsync(System.Threading.CancellationToken)
  - Steeltoe.Integration.Channel.NullChannel.Send(Steeltoe.Messaging.IMessage)
  - Steeltoe.Integration.Channel.NullChannel.Send(Steeltoe.Messaging.IMessage,System.Int32)
  - Steeltoe.Integration.Channel.NullChannel.SendAsync(Steeltoe.Messaging.IMessage,System.Threading.CancellationToken)
  - Steeltoe.Integration.Channel.NullChannel.ServiceName
  langs:
  - csharp
  - vb
  name: NullChannel
  nameWithType: NullChannel
  fullName: Steeltoe.Integration.Channel.NullChannel
  type: Class
  source:
    remote:
      path: src/Integration/src/IntegrationBase/Channel/NullChannel.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: NullChannel
    path: ../Steeltoe/src/Integration/src/IntegrationBase/Channel/NullChannel.cs
    startLine: 14
  assemblies:
  - Steeltoe.Integration.IntegrationBase
  namespace: Steeltoe.Integration.Channel
  syntax:
    content: 'public class NullChannel : Channel<IMessage>, IPollableChannel, IMessageChannel, IServiceNameAware'
    content.vb: >-
      Public Class NullChannel

          Inherits Channel(Of IMessage)

          Implements IPollableChannel, IMessageChannel, IServiceNameAware
  inheritance:
  - System.Object
  - System.Threading.Channels.Channel{Steeltoe.Messaging.IMessage,Steeltoe.Messaging.IMessage}
  - System.Threading.Channels.Channel{Steeltoe.Messaging.IMessage}
  implements:
  - Steeltoe.Messaging.IPollableChannel
  - Steeltoe.Messaging.IMessageChannel
  - IServiceNameAware
  inheritedMembers:
  - System.Threading.Channels.Channel{Steeltoe.Messaging.IMessage,Steeltoe.Messaging.IMessage}.Reader
  - System.Threading.Channels.Channel{Steeltoe.Messaging.IMessage,Steeltoe.Messaging.IMessage}.Writer
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Steeltoe.Integration.Channel.NullChannel.ServiceName
  commentId: P:Steeltoe.Integration.Channel.NullChannel.ServiceName
  id: ServiceName
  parent: Steeltoe.Integration.Channel.NullChannel
  langs:
  - csharp
  - vb
  name: ServiceName
  nameWithType: NullChannel.ServiceName
  fullName: Steeltoe.Integration.Channel.NullChannel.ServiceName
  type: Property
  source:
    remote:
      path: src/Integration/src/IntegrationBase/Channel/NullChannel.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: ServiceName
    path: ../Steeltoe/src/Integration/src/IntegrationBase/Channel/NullChannel.cs
    startLine: 18
  assemblies:
  - Steeltoe.Integration.IntegrationBase
  namespace: Steeltoe.Integration.Channel
  syntax:
    content: public string ServiceName { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property ServiceName As String
  overload: Steeltoe.Integration.Channel.NullChannel.ServiceName*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Steeltoe.Integration.Channel.NullChannel.#ctor(Microsoft.Extensions.Logging.ILogger)
  commentId: M:Steeltoe.Integration.Channel.NullChannel.#ctor(Microsoft.Extensions.Logging.ILogger)
  id: '#ctor(Microsoft.Extensions.Logging.ILogger)'
  parent: Steeltoe.Integration.Channel.NullChannel
  langs:
  - csharp
  - vb
  name: NullChannel(ILogger)
  nameWithType: NullChannel.NullChannel(ILogger)
  fullName: Steeltoe.Integration.Channel.NullChannel.NullChannel(Microsoft.Extensions.Logging.ILogger)
  type: Constructor
  source:
    remote:
      path: src/Integration/src/IntegrationBase/Channel/NullChannel.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: .ctor
    path: ../Steeltoe/src/Integration/src/IntegrationBase/Channel/NullChannel.cs
    startLine: 20
  assemblies:
  - Steeltoe.Integration.IntegrationBase
  namespace: Steeltoe.Integration.Channel
  syntax:
    content: public NullChannel(ILogger logger = null)
    parameters:
    - id: logger
      type: Microsoft.Extensions.Logging.ILogger
    content.vb: Public Sub New(logger As ILogger = Nothing)
  overload: Steeltoe.Integration.Channel.NullChannel.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Steeltoe.Integration.Channel.NullChannel.Receive
  commentId: M:Steeltoe.Integration.Channel.NullChannel.Receive
  id: Receive
  parent: Steeltoe.Integration.Channel.NullChannel
  langs:
  - csharp
  - vb
  name: Receive()
  nameWithType: NullChannel.Receive()
  fullName: Steeltoe.Integration.Channel.NullChannel.Receive()
  type: Method
  source:
    remote:
      path: src/Integration/src/IntegrationBase/Channel/NullChannel.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Receive
    path: ../Steeltoe/src/Integration/src/IntegrationBase/Channel/NullChannel.cs
    startLine: 27
  assemblies:
  - Steeltoe.Integration.IntegrationBase
  namespace: Steeltoe.Integration.Channel
  syntax:
    content: public IMessage Receive()
    return:
      type: Steeltoe.Messaging.IMessage
    content.vb: Public Function Receive As IMessage
  overload: Steeltoe.Integration.Channel.NullChannel.Receive*
  implements:
  - Steeltoe.Messaging.IPollableChannel.Receive
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Steeltoe.Integration.Channel.NullChannel.Receive(System.Int32)
  commentId: M:Steeltoe.Integration.Channel.NullChannel.Receive(System.Int32)
  id: Receive(System.Int32)
  parent: Steeltoe.Integration.Channel.NullChannel
  langs:
  - csharp
  - vb
  name: Receive(Int32)
  nameWithType: NullChannel.Receive(Int32)
  fullName: Steeltoe.Integration.Channel.NullChannel.Receive(System.Int32)
  type: Method
  source:
    remote:
      path: src/Integration/src/IntegrationBase/Channel/NullChannel.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Receive
    path: ../Steeltoe/src/Integration/src/IntegrationBase/Channel/NullChannel.cs
    startLine: 33
  assemblies:
  - Steeltoe.Integration.IntegrationBase
  namespace: Steeltoe.Integration.Channel
  syntax:
    content: public IMessage Receive(int timeout)
    parameters:
    - id: timeout
      type: System.Int32
    return:
      type: Steeltoe.Messaging.IMessage
    content.vb: Public Function Receive(timeout As Integer) As IMessage
  overload: Steeltoe.Integration.Channel.NullChannel.Receive*
  implements:
  - Steeltoe.Messaging.IPollableChannel.Receive(System.Int32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Steeltoe.Integration.Channel.NullChannel.ReceiveAsync(System.Threading.CancellationToken)
  commentId: M:Steeltoe.Integration.Channel.NullChannel.ReceiveAsync(System.Threading.CancellationToken)
  id: ReceiveAsync(System.Threading.CancellationToken)
  parent: Steeltoe.Integration.Channel.NullChannel
  langs:
  - csharp
  - vb
  name: ReceiveAsync(CancellationToken)
  nameWithType: NullChannel.ReceiveAsync(CancellationToken)
  fullName: Steeltoe.Integration.Channel.NullChannel.ReceiveAsync(System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Integration/src/IntegrationBase/Channel/NullChannel.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: ReceiveAsync
    path: ../Steeltoe/src/Integration/src/IntegrationBase/Channel/NullChannel.cs
    startLine: 39
  assemblies:
  - Steeltoe.Integration.IntegrationBase
  namespace: Steeltoe.Integration.Channel
  syntax:
    content: public ValueTask<IMessage> ReceiveAsync(CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.ValueTask{Steeltoe.Messaging.IMessage}
    content.vb: Public Function ReceiveAsync(cancellationToken As CancellationToken = Nothing) As ValueTask(Of IMessage)
  overload: Steeltoe.Integration.Channel.NullChannel.ReceiveAsync*
  implements:
  - Steeltoe.Messaging.IPollableChannel.ReceiveAsync(System.Threading.CancellationToken)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Steeltoe.Integration.Channel.NullChannel.Send(Steeltoe.Messaging.IMessage)
  commentId: M:Steeltoe.Integration.Channel.NullChannel.Send(Steeltoe.Messaging.IMessage)
  id: Send(Steeltoe.Messaging.IMessage)
  parent: Steeltoe.Integration.Channel.NullChannel
  langs:
  - csharp
  - vb
  name: Send(IMessage)
  nameWithType: NullChannel.Send(IMessage)
  fullName: Steeltoe.Integration.Channel.NullChannel.Send(Steeltoe.Messaging.IMessage)
  type: Method
  source:
    remote:
      path: src/Integration/src/IntegrationBase/Channel/NullChannel.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Send
    path: ../Steeltoe/src/Integration/src/IntegrationBase/Channel/NullChannel.cs
    startLine: 45
  assemblies:
  - Steeltoe.Integration.IntegrationBase
  namespace: Steeltoe.Integration.Channel
  syntax:
    content: public bool Send(IMessage message)
    parameters:
    - id: message
      type: Steeltoe.Messaging.IMessage
    return:
      type: System.Boolean
    content.vb: Public Function Send(message As IMessage) As Boolean
  overload: Steeltoe.Integration.Channel.NullChannel.Send*
  implements:
  - Steeltoe.Messaging.IMessageChannel.Send(Steeltoe.Messaging.IMessage)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Steeltoe.Integration.Channel.NullChannel.Send(Steeltoe.Messaging.IMessage,System.Int32)
  commentId: M:Steeltoe.Integration.Channel.NullChannel.Send(Steeltoe.Messaging.IMessage,System.Int32)
  id: Send(Steeltoe.Messaging.IMessage,System.Int32)
  parent: Steeltoe.Integration.Channel.NullChannel
  langs:
  - csharp
  - vb
  name: Send(IMessage, Int32)
  nameWithType: NullChannel.Send(IMessage, Int32)
  fullName: Steeltoe.Integration.Channel.NullChannel.Send(Steeltoe.Messaging.IMessage, System.Int32)
  type: Method
  source:
    remote:
      path: src/Integration/src/IntegrationBase/Channel/NullChannel.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Send
    path: ../Steeltoe/src/Integration/src/IntegrationBase/Channel/NullChannel.cs
    startLine: 51
  assemblies:
  - Steeltoe.Integration.IntegrationBase
  namespace: Steeltoe.Integration.Channel
  syntax:
    content: public bool Send(IMessage message, int timeout)
    parameters:
    - id: message
      type: Steeltoe.Messaging.IMessage
    - id: timeout
      type: System.Int32
    return:
      type: System.Boolean
    content.vb: Public Function Send(message As IMessage, timeout As Integer) As Boolean
  overload: Steeltoe.Integration.Channel.NullChannel.Send*
  implements:
  - Steeltoe.Messaging.IMessageChannel.Send(Steeltoe.Messaging.IMessage,System.Int32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Steeltoe.Integration.Channel.NullChannel.SendAsync(Steeltoe.Messaging.IMessage,System.Threading.CancellationToken)
  commentId: M:Steeltoe.Integration.Channel.NullChannel.SendAsync(Steeltoe.Messaging.IMessage,System.Threading.CancellationToken)
  id: SendAsync(Steeltoe.Messaging.IMessage,System.Threading.CancellationToken)
  parent: Steeltoe.Integration.Channel.NullChannel
  langs:
  - csharp
  - vb
  name: SendAsync(IMessage, CancellationToken)
  nameWithType: NullChannel.SendAsync(IMessage, CancellationToken)
  fullName: Steeltoe.Integration.Channel.NullChannel.SendAsync(Steeltoe.Messaging.IMessage, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Integration/src/IntegrationBase/Channel/NullChannel.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: SendAsync
    path: ../Steeltoe/src/Integration/src/IntegrationBase/Channel/NullChannel.cs
    startLine: 57
  assemblies:
  - Steeltoe.Integration.IntegrationBase
  namespace: Steeltoe.Integration.Channel
  syntax:
    content: public ValueTask<bool> SendAsync(IMessage message, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: message
      type: Steeltoe.Messaging.IMessage
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.ValueTask{System.Boolean}
    content.vb: Public Function SendAsync(message As IMessage, cancellationToken As CancellationToken = Nothing) As ValueTask(Of Boolean)
  overload: Steeltoe.Integration.Channel.NullChannel.SendAsync*
  implements:
  - Steeltoe.Messaging.IMessageChannel.SendAsync(Steeltoe.Messaging.IMessage,System.Threading.CancellationToken)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Steeltoe.Integration.Channel
  commentId: N:Steeltoe.Integration.Channel
  name: Steeltoe.Integration.Channel
  nameWithType: Steeltoe.Integration.Channel
  fullName: Steeltoe.Integration.Channel
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Threading.Channels.Channel{Steeltoe.Messaging.IMessage,Steeltoe.Messaging.IMessage}
  commentId: T:System.Threading.Channels.Channel{Steeltoe.Messaging.IMessage,Steeltoe.Messaging.IMessage}
  parent: System.Threading.Channels
  definition: System.Threading.Channels.Channel`2
  name: Channel<IMessage, IMessage>
  nameWithType: Channel<IMessage, IMessage>
  fullName: System.Threading.Channels.Channel<Steeltoe.Messaging.IMessage, Steeltoe.Messaging.IMessage>
  nameWithType.vb: Channel(Of IMessage, IMessage)
  fullName.vb: System.Threading.Channels.Channel(Of Steeltoe.Messaging.IMessage, Steeltoe.Messaging.IMessage)
  name.vb: Channel(Of IMessage, IMessage)
  spec.csharp:
  - uid: System.Threading.Channels.Channel`2
    name: Channel
    nameWithType: Channel
    fullName: System.Threading.Channels.Channel
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Channels.Channel`2
    name: Channel
    nameWithType: Channel
    fullName: System.Threading.Channels.Channel
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Channels.Channel{Steeltoe.Messaging.IMessage}
  commentId: T:System.Threading.Channels.Channel{Steeltoe.Messaging.IMessage}
  parent: System.Threading.Channels
  definition: System.Threading.Channels.Channel`1
  name: Channel<IMessage>
  nameWithType: Channel<IMessage>
  fullName: System.Threading.Channels.Channel<Steeltoe.Messaging.IMessage>
  nameWithType.vb: Channel(Of IMessage)
  fullName.vb: System.Threading.Channels.Channel(Of Steeltoe.Messaging.IMessage)
  name.vb: Channel(Of IMessage)
  spec.csharp:
  - uid: System.Threading.Channels.Channel`1
    name: Channel
    nameWithType: Channel
    fullName: System.Threading.Channels.Channel
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Channels.Channel`1
    name: Channel
    nameWithType: Channel
    fullName: System.Threading.Channels.Channel
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.IPollableChannel
  commentId: T:Steeltoe.Messaging.IPollableChannel
  parent: Steeltoe.Messaging
  name: IPollableChannel
  nameWithType: IPollableChannel
  fullName: Steeltoe.Messaging.IPollableChannel
- uid: Steeltoe.Messaging.IMessageChannel
  commentId: T:Steeltoe.Messaging.IMessageChannel
  parent: Steeltoe.Messaging
  name: IMessageChannel
  nameWithType: IMessageChannel
  fullName: Steeltoe.Messaging.IMessageChannel
- uid: IServiceNameAware
  isExternal: true
  name: IServiceNameAware
  nameWithType: IServiceNameAware
  fullName: IServiceNameAware
- uid: System.Threading.Channels.Channel{Steeltoe.Messaging.IMessage,Steeltoe.Messaging.IMessage}.Reader
  commentId: P:System.Threading.Channels.Channel{Steeltoe.Messaging.IMessage,Steeltoe.Messaging.IMessage}.Reader
  parent: System.Threading.Channels.Channel{Steeltoe.Messaging.IMessage,Steeltoe.Messaging.IMessage}
  definition: System.Threading.Channels.Channel`2.Reader
  name: Reader
  nameWithType: Channel<IMessage, IMessage>.Reader
  fullName: System.Threading.Channels.Channel<Steeltoe.Messaging.IMessage, Steeltoe.Messaging.IMessage>.Reader
  nameWithType.vb: Channel(Of IMessage, IMessage).Reader
  fullName.vb: System.Threading.Channels.Channel(Of Steeltoe.Messaging.IMessage, Steeltoe.Messaging.IMessage).Reader
- uid: System.Threading.Channels.Channel{Steeltoe.Messaging.IMessage,Steeltoe.Messaging.IMessage}.Writer
  commentId: P:System.Threading.Channels.Channel{Steeltoe.Messaging.IMessage,Steeltoe.Messaging.IMessage}.Writer
  parent: System.Threading.Channels.Channel{Steeltoe.Messaging.IMessage,Steeltoe.Messaging.IMessage}
  definition: System.Threading.Channels.Channel`2.Writer
  name: Writer
  nameWithType: Channel<IMessage, IMessage>.Writer
  fullName: System.Threading.Channels.Channel<Steeltoe.Messaging.IMessage, Steeltoe.Messaging.IMessage>.Writer
  nameWithType.vb: Channel(Of IMessage, IMessage).Writer
  fullName.vb: System.Threading.Channels.Channel(Of Steeltoe.Messaging.IMessage, Steeltoe.Messaging.IMessage).Writer
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Threading.Channels.Channel`2
  commentId: T:System.Threading.Channels.Channel`2
  isExternal: true
  name: Channel<TWrite, TRead>
  nameWithType: Channel<TWrite, TRead>
  fullName: System.Threading.Channels.Channel<TWrite, TRead>
  nameWithType.vb: Channel(Of TWrite, TRead)
  fullName.vb: System.Threading.Channels.Channel(Of TWrite, TRead)
  name.vb: Channel(Of TWrite, TRead)
  spec.csharp:
  - uid: System.Threading.Channels.Channel`2
    name: Channel
    nameWithType: Channel
    fullName: System.Threading.Channels.Channel
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TWrite
    nameWithType: TWrite
    fullName: TWrite
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TRead
    nameWithType: TRead
    fullName: TRead
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Channels.Channel`2
    name: Channel
    nameWithType: Channel
    fullName: System.Threading.Channels.Channel
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TWrite
    nameWithType: TWrite
    fullName: TWrite
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TRead
    nameWithType: TRead
    fullName: TRead
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Channels
  commentId: N:System.Threading.Channels
  isExternal: true
  name: System.Threading.Channels
  nameWithType: System.Threading.Channels
  fullName: System.Threading.Channels
- uid: System.Threading.Channels.Channel`1
  commentId: T:System.Threading.Channels.Channel`1
  isExternal: true
  name: Channel<T>
  nameWithType: Channel<T>
  fullName: System.Threading.Channels.Channel<T>
  nameWithType.vb: Channel(Of T)
  fullName.vb: System.Threading.Channels.Channel(Of T)
  name.vb: Channel(Of T)
  spec.csharp:
  - uid: System.Threading.Channels.Channel`1
    name: Channel
    nameWithType: Channel
    fullName: System.Threading.Channels.Channel
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Channels.Channel`1
    name: Channel
    nameWithType: Channel
    fullName: System.Threading.Channels.Channel
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging
  commentId: N:Steeltoe.Messaging
  name: Steeltoe.Messaging
  nameWithType: Steeltoe.Messaging
  fullName: Steeltoe.Messaging
- uid: System.Threading.Channels.Channel`2.Reader
  commentId: P:System.Threading.Channels.Channel`2.Reader
  isExternal: true
  name: Reader
  nameWithType: Channel<TWrite, TRead>.Reader
  fullName: System.Threading.Channels.Channel<TWrite, TRead>.Reader
  nameWithType.vb: Channel(Of TWrite, TRead).Reader
  fullName.vb: System.Threading.Channels.Channel(Of TWrite, TRead).Reader
- uid: System.Threading.Channels.Channel`2.Writer
  commentId: P:System.Threading.Channels.Channel`2.Writer
  isExternal: true
  name: Writer
  nameWithType: Channel<TWrite, TRead>.Writer
  fullName: System.Threading.Channels.Channel<TWrite, TRead>.Writer
  nameWithType.vb: Channel(Of TWrite, TRead).Writer
  fullName.vb: System.Threading.Channels.Channel(Of TWrite, TRead).Writer
- uid: Steeltoe.Integration.Channel.NullChannel.ServiceName*
  commentId: Overload:Steeltoe.Integration.Channel.NullChannel.ServiceName
  name: ServiceName
  nameWithType: NullChannel.ServiceName
  fullName: Steeltoe.Integration.Channel.NullChannel.ServiceName
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Steeltoe.Integration.Channel.NullChannel.#ctor*
  commentId: Overload:Steeltoe.Integration.Channel.NullChannel.#ctor
  name: NullChannel
  nameWithType: NullChannel.NullChannel
  fullName: Steeltoe.Integration.Channel.NullChannel.NullChannel
- uid: Microsoft.Extensions.Logging.ILogger
  commentId: T:Microsoft.Extensions.Logging.ILogger
  parent: Microsoft.Extensions.Logging
  isExternal: true
  name: ILogger
  nameWithType: ILogger
  fullName: Microsoft.Extensions.Logging.ILogger
- uid: Microsoft.Extensions.Logging
  commentId: N:Microsoft.Extensions.Logging
  isExternal: true
  name: Microsoft.Extensions.Logging
  nameWithType: Microsoft.Extensions.Logging
  fullName: Microsoft.Extensions.Logging
- uid: Steeltoe.Integration.Channel.NullChannel.Receive*
  commentId: Overload:Steeltoe.Integration.Channel.NullChannel.Receive
  name: Receive
  nameWithType: NullChannel.Receive
  fullName: Steeltoe.Integration.Channel.NullChannel.Receive
- uid: Steeltoe.Messaging.IPollableChannel.Receive
  commentId: M:Steeltoe.Messaging.IPollableChannel.Receive
  parent: Steeltoe.Messaging.IPollableChannel
  name: Receive()
  nameWithType: IPollableChannel.Receive()
  fullName: Steeltoe.Messaging.IPollableChannel.Receive()
  spec.csharp:
  - uid: Steeltoe.Messaging.IPollableChannel.Receive
    name: Receive
    nameWithType: IPollableChannel.Receive
    fullName: Steeltoe.Messaging.IPollableChannel.Receive
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.IPollableChannel.Receive
    name: Receive
    nameWithType: IPollableChannel.Receive
    fullName: Steeltoe.Messaging.IPollableChannel.Receive
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.IMessage
  commentId: T:Steeltoe.Messaging.IMessage
  parent: Steeltoe.Messaging
  name: IMessage
  nameWithType: IMessage
  fullName: Steeltoe.Messaging.IMessage
- uid: Steeltoe.Messaging.IPollableChannel.Receive(System.Int32)
  commentId: M:Steeltoe.Messaging.IPollableChannel.Receive(System.Int32)
  parent: Steeltoe.Messaging.IPollableChannel
  isExternal: true
  name: Receive(Int32)
  nameWithType: IPollableChannel.Receive(Int32)
  fullName: Steeltoe.Messaging.IPollableChannel.Receive(System.Int32)
  spec.csharp:
  - uid: Steeltoe.Messaging.IPollableChannel.Receive(System.Int32)
    name: Receive
    nameWithType: IPollableChannel.Receive
    fullName: Steeltoe.Messaging.IPollableChannel.Receive
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.IPollableChannel.Receive(System.Int32)
    name: Receive
    nameWithType: IPollableChannel.Receive
    fullName: Steeltoe.Messaging.IPollableChannel.Receive
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Steeltoe.Integration.Channel.NullChannel.ReceiveAsync*
  commentId: Overload:Steeltoe.Integration.Channel.NullChannel.ReceiveAsync
  name: ReceiveAsync
  nameWithType: NullChannel.ReceiveAsync
  fullName: Steeltoe.Integration.Channel.NullChannel.ReceiveAsync
- uid: Steeltoe.Messaging.IPollableChannel.ReceiveAsync(System.Threading.CancellationToken)
  commentId: M:Steeltoe.Messaging.IPollableChannel.ReceiveAsync(System.Threading.CancellationToken)
  parent: Steeltoe.Messaging.IPollableChannel
  isExternal: true
  name: ReceiveAsync(CancellationToken)
  nameWithType: IPollableChannel.ReceiveAsync(CancellationToken)
  fullName: Steeltoe.Messaging.IPollableChannel.ReceiveAsync(System.Threading.CancellationToken)
  spec.csharp:
  - uid: Steeltoe.Messaging.IPollableChannel.ReceiveAsync(System.Threading.CancellationToken)
    name: ReceiveAsync
    nameWithType: IPollableChannel.ReceiveAsync
    fullName: Steeltoe.Messaging.IPollableChannel.ReceiveAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.IPollableChannel.ReceiveAsync(System.Threading.CancellationToken)
    name: ReceiveAsync
    nameWithType: IPollableChannel.ReceiveAsync
    fullName: Steeltoe.Messaging.IPollableChannel.ReceiveAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.ValueTask{Steeltoe.Messaging.IMessage}
  commentId: T:System.Threading.Tasks.ValueTask{Steeltoe.Messaging.IMessage}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.ValueTask`1
  name: ValueTask<IMessage>
  nameWithType: ValueTask<IMessage>
  fullName: System.Threading.Tasks.ValueTask<Steeltoe.Messaging.IMessage>
  nameWithType.vb: ValueTask(Of IMessage)
  fullName.vb: System.Threading.Tasks.ValueTask(Of Steeltoe.Messaging.IMessage)
  name.vb: ValueTask(Of IMessage)
  spec.csharp:
  - uid: System.Threading.Tasks.ValueTask`1
    name: ValueTask
    nameWithType: ValueTask
    fullName: System.Threading.Tasks.ValueTask
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.ValueTask`1
    name: ValueTask
    nameWithType: ValueTask
    fullName: System.Threading.Tasks.ValueTask
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: true
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
- uid: System.Threading.Tasks.ValueTask`1
  commentId: T:System.Threading.Tasks.ValueTask`1
  isExternal: true
  name: ValueTask<TResult>
  nameWithType: ValueTask<TResult>
  fullName: System.Threading.Tasks.ValueTask<TResult>
  nameWithType.vb: ValueTask(Of TResult)
  fullName.vb: System.Threading.Tasks.ValueTask(Of TResult)
  name.vb: ValueTask(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.ValueTask`1
    name: ValueTask
    nameWithType: ValueTask
    fullName: System.Threading.Tasks.ValueTask
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.ValueTask`1
    name: ValueTask
    nameWithType: ValueTask
    fullName: System.Threading.Tasks.ValueTask
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: Steeltoe.Integration.Channel.NullChannel.Send*
  commentId: Overload:Steeltoe.Integration.Channel.NullChannel.Send
  name: Send
  nameWithType: NullChannel.Send
  fullName: Steeltoe.Integration.Channel.NullChannel.Send
- uid: Steeltoe.Messaging.IMessageChannel.Send(Steeltoe.Messaging.IMessage)
  commentId: M:Steeltoe.Messaging.IMessageChannel.Send(Steeltoe.Messaging.IMessage)
  parent: Steeltoe.Messaging.IMessageChannel
  name: Send(IMessage)
  nameWithType: IMessageChannel.Send(IMessage)
  fullName: Steeltoe.Messaging.IMessageChannel.Send(Steeltoe.Messaging.IMessage)
  spec.csharp:
  - uid: Steeltoe.Messaging.IMessageChannel.Send(Steeltoe.Messaging.IMessage)
    name: Send
    nameWithType: IMessageChannel.Send
    fullName: Steeltoe.Messaging.IMessageChannel.Send
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.IMessageChannel.Send(Steeltoe.Messaging.IMessage)
    name: Send
    nameWithType: IMessageChannel.Send
    fullName: Steeltoe.Messaging.IMessageChannel.Send
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Steeltoe.Messaging.IMessageChannel.Send(Steeltoe.Messaging.IMessage,System.Int32)
  commentId: M:Steeltoe.Messaging.IMessageChannel.Send(Steeltoe.Messaging.IMessage,System.Int32)
  parent: Steeltoe.Messaging.IMessageChannel
  isExternal: true
  name: Send(IMessage, Int32)
  nameWithType: IMessageChannel.Send(IMessage, Int32)
  fullName: Steeltoe.Messaging.IMessageChannel.Send(Steeltoe.Messaging.IMessage, System.Int32)
  spec.csharp:
  - uid: Steeltoe.Messaging.IMessageChannel.Send(Steeltoe.Messaging.IMessage,System.Int32)
    name: Send
    nameWithType: IMessageChannel.Send
    fullName: Steeltoe.Messaging.IMessageChannel.Send
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.IMessageChannel.Send(Steeltoe.Messaging.IMessage,System.Int32)
    name: Send
    nameWithType: IMessageChannel.Send
    fullName: Steeltoe.Messaging.IMessageChannel.Send
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Integration.Channel.NullChannel.SendAsync*
  commentId: Overload:Steeltoe.Integration.Channel.NullChannel.SendAsync
  name: SendAsync
  nameWithType: NullChannel.SendAsync
  fullName: Steeltoe.Integration.Channel.NullChannel.SendAsync
- uid: Steeltoe.Messaging.IMessageChannel.SendAsync(Steeltoe.Messaging.IMessage,System.Threading.CancellationToken)
  commentId: M:Steeltoe.Messaging.IMessageChannel.SendAsync(Steeltoe.Messaging.IMessage,System.Threading.CancellationToken)
  parent: Steeltoe.Messaging.IMessageChannel
  isExternal: true
  name: SendAsync(IMessage, CancellationToken)
  nameWithType: IMessageChannel.SendAsync(IMessage, CancellationToken)
  fullName: Steeltoe.Messaging.IMessageChannel.SendAsync(Steeltoe.Messaging.IMessage, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Steeltoe.Messaging.IMessageChannel.SendAsync(Steeltoe.Messaging.IMessage,System.Threading.CancellationToken)
    name: SendAsync
    nameWithType: IMessageChannel.SendAsync
    fullName: Steeltoe.Messaging.IMessageChannel.SendAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.IMessageChannel.SendAsync(Steeltoe.Messaging.IMessage,System.Threading.CancellationToken)
    name: SendAsync
    nameWithType: IMessageChannel.SendAsync
    fullName: Steeltoe.Messaging.IMessageChannel.SendAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.ValueTask{System.Boolean}
  commentId: T:System.Threading.Tasks.ValueTask{System.Boolean}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.ValueTask`1
  name: ValueTask<Boolean>
  nameWithType: ValueTask<Boolean>
  fullName: System.Threading.Tasks.ValueTask<System.Boolean>
  nameWithType.vb: ValueTask(Of Boolean)
  fullName.vb: System.Threading.Tasks.ValueTask(Of System.Boolean)
  name.vb: ValueTask(Of Boolean)
  spec.csharp:
  - uid: System.Threading.Tasks.ValueTask`1
    name: ValueTask
    nameWithType: ValueTask
    fullName: System.Threading.Tasks.ValueTask
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.ValueTask`1
    name: ValueTask
    nameWithType: ValueTask
    fullName: System.Threading.Tasks.ValueTask
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
