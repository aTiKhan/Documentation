### YamlMime:ManagedReference
items:
- uid: Steeltoe.Stream.Binder.EmbeddedHeaderUtils
  commentId: T:Steeltoe.Stream.Binder.EmbeddedHeaderUtils
  id: EmbeddedHeaderUtils
  parent: Steeltoe.Stream.Binder
  children:
  - Steeltoe.Stream.Binder.EmbeddedHeaderUtils.EmbedHeaders(Steeltoe.Stream.Binder.MessageValues,System.String[])
  - Steeltoe.Stream.Binder.EmbeddedHeaderUtils.ExtractHeaders(Steeltoe.Messaging.IMessage{System.Byte[]},System.Boolean)
  - Steeltoe.Stream.Binder.EmbeddedHeaderUtils.ExtractHeaders(System.Byte[])
  - Steeltoe.Stream.Binder.EmbeddedHeaderUtils.HeadersToEmbed(System.String[])
  - Steeltoe.Stream.Binder.EmbeddedHeaderUtils.MayHaveEmbeddedHeaders(System.Byte[])
  langs:
  - csharp
  - vb
  name: EmbeddedHeaderUtils
  nameWithType: EmbeddedHeaderUtils
  fullName: Steeltoe.Stream.Binder.EmbeddedHeaderUtils
  type: Class
  source:
    remote:
      path: src/Stream/src/StreamBase/Binder/EmbeddedHeaderUtils.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: EmbeddedHeaderUtils
    path: ../Steeltoe/src/Stream/src/StreamBase/Binder/EmbeddedHeaderUtils.cs
    startLine: 13
  assemblies:
  - Steeltoe.Stream.StreamBase
  namespace: Steeltoe.Stream.Binder
  syntax:
    content: public static class EmbeddedHeaderUtils
    content.vb: Public Module EmbeddedHeaderUtils
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Steeltoe.Stream.Binder.EmbeddedHeaderUtils.EmbedHeaders(Steeltoe.Stream.Binder.MessageValues,System.String[])
  commentId: M:Steeltoe.Stream.Binder.EmbeddedHeaderUtils.EmbedHeaders(Steeltoe.Stream.Binder.MessageValues,System.String[])
  id: EmbedHeaders(Steeltoe.Stream.Binder.MessageValues,System.String[])
  parent: Steeltoe.Stream.Binder.EmbeddedHeaderUtils
  langs:
  - csharp
  - vb
  name: EmbedHeaders(MessageValues, String[])
  nameWithType: EmbeddedHeaderUtils.EmbedHeaders(MessageValues, String[])
  fullName: Steeltoe.Stream.Binder.EmbeddedHeaderUtils.EmbedHeaders(Steeltoe.Stream.Binder.MessageValues, System.String[])
  type: Method
  source:
    remote:
      path: src/Stream/src/StreamBase/Binder/EmbeddedHeaderUtils.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: EmbedHeaders
    path: ../Steeltoe/src/Stream/src/StreamBase/Binder/EmbeddedHeaderUtils.cs
    startLine: 15
  assemblies:
  - Steeltoe.Stream.StreamBase
  namespace: Steeltoe.Stream.Binder
  syntax:
    content: public static byte[] EmbedHeaders(MessageValues original, params string[] headers)
    parameters:
    - id: original
      type: Steeltoe.Stream.Binder.MessageValues
    - id: headers
      type: System.String[]
    return:
      type: System.Byte[]
    content.vb: Public Shared Function EmbedHeaders(original As MessageValues, ParamArray headers As String()) As Byte()
  overload: Steeltoe.Stream.Binder.EmbeddedHeaderUtils.EmbedHeaders*
  nameWithType.vb: EmbeddedHeaderUtils.EmbedHeaders(MessageValues, String())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Steeltoe.Stream.Binder.EmbeddedHeaderUtils.EmbedHeaders(Steeltoe.Stream.Binder.MessageValues, System.String())
  name.vb: EmbedHeaders(MessageValues, String())
- uid: Steeltoe.Stream.Binder.EmbeddedHeaderUtils.MayHaveEmbeddedHeaders(System.Byte[])
  commentId: M:Steeltoe.Stream.Binder.EmbeddedHeaderUtils.MayHaveEmbeddedHeaders(System.Byte[])
  id: MayHaveEmbeddedHeaders(System.Byte[])
  parent: Steeltoe.Stream.Binder.EmbeddedHeaderUtils
  langs:
  - csharp
  - vb
  name: MayHaveEmbeddedHeaders(Byte[])
  nameWithType: EmbeddedHeaderUtils.MayHaveEmbeddedHeaders(Byte[])
  fullName: Steeltoe.Stream.Binder.EmbeddedHeaderUtils.MayHaveEmbeddedHeaders(System.Byte[])
  type: Method
  source:
    remote:
      path: src/Stream/src/StreamBase/Binder/EmbeddedHeaderUtils.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: MayHaveEmbeddedHeaders
    path: ../Steeltoe/src/Stream/src/StreamBase/Binder/EmbeddedHeaderUtils.cs
    startLine: 71
  assemblies:
  - Steeltoe.Stream.StreamBase
  namespace: Steeltoe.Stream.Binder
  syntax:
    content: public static bool MayHaveEmbeddedHeaders(byte[] bytes)
    parameters:
    - id: bytes
      type: System.Byte[]
    return:
      type: System.Boolean
    content.vb: Public Shared Function MayHaveEmbeddedHeaders(bytes As Byte()) As Boolean
  overload: Steeltoe.Stream.Binder.EmbeddedHeaderUtils.MayHaveEmbeddedHeaders*
  nameWithType.vb: EmbeddedHeaderUtils.MayHaveEmbeddedHeaders(Byte())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Steeltoe.Stream.Binder.EmbeddedHeaderUtils.MayHaveEmbeddedHeaders(System.Byte())
  name.vb: MayHaveEmbeddedHeaders(Byte())
- uid: Steeltoe.Stream.Binder.EmbeddedHeaderUtils.ExtractHeaders(System.Byte[])
  commentId: M:Steeltoe.Stream.Binder.EmbeddedHeaderUtils.ExtractHeaders(System.Byte[])
  id: ExtractHeaders(System.Byte[])
  parent: Steeltoe.Stream.Binder.EmbeddedHeaderUtils
  langs:
  - csharp
  - vb
  name: ExtractHeaders(Byte[])
  nameWithType: EmbeddedHeaderUtils.ExtractHeaders(Byte[])
  fullName: Steeltoe.Stream.Binder.EmbeddedHeaderUtils.ExtractHeaders(System.Byte[])
  type: Method
  source:
    remote:
      path: src/Stream/src/StreamBase/Binder/EmbeddedHeaderUtils.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: ExtractHeaders
    path: ../Steeltoe/src/Stream/src/StreamBase/Binder/EmbeddedHeaderUtils.cs
    startLine: 76
  assemblies:
  - Steeltoe.Stream.StreamBase
  namespace: Steeltoe.Stream.Binder
  syntax:
    content: public static MessageValues ExtractHeaders(byte[] payload)
    parameters:
    - id: payload
      type: System.Byte[]
    return:
      type: Steeltoe.Stream.Binder.MessageValues
    content.vb: Public Shared Function ExtractHeaders(payload As Byte()) As MessageValues
  overload: Steeltoe.Stream.Binder.EmbeddedHeaderUtils.ExtractHeaders*
  nameWithType.vb: EmbeddedHeaderUtils.ExtractHeaders(Byte())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Steeltoe.Stream.Binder.EmbeddedHeaderUtils.ExtractHeaders(System.Byte())
  name.vb: ExtractHeaders(Byte())
- uid: Steeltoe.Stream.Binder.EmbeddedHeaderUtils.ExtractHeaders(Steeltoe.Messaging.IMessage{System.Byte[]},System.Boolean)
  commentId: M:Steeltoe.Stream.Binder.EmbeddedHeaderUtils.ExtractHeaders(Steeltoe.Messaging.IMessage{System.Byte[]},System.Boolean)
  id: ExtractHeaders(Steeltoe.Messaging.IMessage{System.Byte[]},System.Boolean)
  parent: Steeltoe.Stream.Binder.EmbeddedHeaderUtils
  langs:
  - csharp
  - vb
  name: ExtractHeaders(IMessage<Byte[]>, Boolean)
  nameWithType: EmbeddedHeaderUtils.ExtractHeaders(IMessage<Byte[]>, Boolean)
  fullName: Steeltoe.Stream.Binder.EmbeddedHeaderUtils.ExtractHeaders(Steeltoe.Messaging.IMessage<System.Byte[]>, System.Boolean)
  type: Method
  source:
    remote:
      path: src/Stream/src/StreamBase/Binder/EmbeddedHeaderUtils.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: ExtractHeaders
    path: ../Steeltoe/src/Stream/src/StreamBase/Binder/EmbeddedHeaderUtils.cs
    startLine: 81
  assemblies:
  - Steeltoe.Stream.StreamBase
  namespace: Steeltoe.Stream.Binder
  syntax:
    content: public static MessageValues ExtractHeaders(IMessage<byte[]> message, bool copyRequestHeaders)
    parameters:
    - id: message
      type: Steeltoe.Messaging.IMessage{System.Byte[]}
    - id: copyRequestHeaders
      type: System.Boolean
    return:
      type: Steeltoe.Stream.Binder.MessageValues
    content.vb: Public Shared Function ExtractHeaders(message As IMessage(Of Byte()), copyRequestHeaders As Boolean) As MessageValues
  overload: Steeltoe.Stream.Binder.EmbeddedHeaderUtils.ExtractHeaders*
  nameWithType.vb: EmbeddedHeaderUtils.ExtractHeaders(IMessage(Of Byte()), Boolean)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Steeltoe.Stream.Binder.EmbeddedHeaderUtils.ExtractHeaders(Steeltoe.Messaging.IMessage(Of System.Byte()), System.Boolean)
  name.vb: ExtractHeaders(IMessage(Of Byte()), Boolean)
- uid: Steeltoe.Stream.Binder.EmbeddedHeaderUtils.HeadersToEmbed(System.String[])
  commentId: M:Steeltoe.Stream.Binder.EmbeddedHeaderUtils.HeadersToEmbed(System.String[])
  id: HeadersToEmbed(System.String[])
  parent: Steeltoe.Stream.Binder.EmbeddedHeaderUtils
  langs:
  - csharp
  - vb
  name: HeadersToEmbed(String[])
  nameWithType: EmbeddedHeaderUtils.HeadersToEmbed(String[])
  fullName: Steeltoe.Stream.Binder.EmbeddedHeaderUtils.HeadersToEmbed(System.String[])
  type: Method
  source:
    remote:
      path: src/Stream/src/StreamBase/Binder/EmbeddedHeaderUtils.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: HeadersToEmbed
    path: ../Steeltoe/src/Stream/src/StreamBase/Binder/EmbeddedHeaderUtils.cs
    startLine: 86
  assemblies:
  - Steeltoe.Stream.StreamBase
  namespace: Steeltoe.Stream.Binder
  syntax:
    content: public static string[] HeadersToEmbed(string[] configuredHeaders)
    parameters:
    - id: configuredHeaders
      type: System.String[]
    return:
      type: System.String[]
    content.vb: Public Shared Function HeadersToEmbed(configuredHeaders As String()) As String()
  overload: Steeltoe.Stream.Binder.EmbeddedHeaderUtils.HeadersToEmbed*
  nameWithType.vb: EmbeddedHeaderUtils.HeadersToEmbed(String())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Steeltoe.Stream.Binder.EmbeddedHeaderUtils.HeadersToEmbed(System.String())
  name.vb: HeadersToEmbed(String())
references:
- uid: Steeltoe.Stream.Binder
  commentId: N:Steeltoe.Stream.Binder
  name: Steeltoe.Stream.Binder
  nameWithType: Steeltoe.Stream.Binder
  fullName: Steeltoe.Stream.Binder
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Steeltoe.Stream.Binder.EmbeddedHeaderUtils.EmbedHeaders*
  commentId: Overload:Steeltoe.Stream.Binder.EmbeddedHeaderUtils.EmbedHeaders
  name: EmbedHeaders
  nameWithType: EmbeddedHeaderUtils.EmbedHeaders
  fullName: Steeltoe.Stream.Binder.EmbeddedHeaderUtils.EmbedHeaders
- uid: Steeltoe.Stream.Binder.MessageValues
  commentId: T:Steeltoe.Stream.Binder.MessageValues
  parent: Steeltoe.Stream.Binder
  name: MessageValues
  nameWithType: MessageValues
  fullName: Steeltoe.Stream.Binder.MessageValues
- uid: System.String[]
  isExternal: true
  name: String[]
  nameWithType: String[]
  fullName: System.String[]
  nameWithType.vb: String()
  fullName.vb: System.String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Byte[]
  isExternal: true
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  nameWithType.vb: Byte()
  fullName.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Steeltoe.Stream.Binder.EmbeddedHeaderUtils.MayHaveEmbeddedHeaders*
  commentId: Overload:Steeltoe.Stream.Binder.EmbeddedHeaderUtils.MayHaveEmbeddedHeaders
  name: MayHaveEmbeddedHeaders
  nameWithType: EmbeddedHeaderUtils.MayHaveEmbeddedHeaders
  fullName: Steeltoe.Stream.Binder.EmbeddedHeaderUtils.MayHaveEmbeddedHeaders
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Steeltoe.Stream.Binder.EmbeddedHeaderUtils.ExtractHeaders*
  commentId: Overload:Steeltoe.Stream.Binder.EmbeddedHeaderUtils.ExtractHeaders
  name: ExtractHeaders
  nameWithType: EmbeddedHeaderUtils.ExtractHeaders
  fullName: Steeltoe.Stream.Binder.EmbeddedHeaderUtils.ExtractHeaders
- uid: Steeltoe.Messaging.IMessage{System.Byte[]}
  commentId: T:Steeltoe.Messaging.IMessage{System.Byte[]}
  parent: Steeltoe.Messaging
  definition: Steeltoe.Messaging.IMessage`1
  name: IMessage<Byte[]>
  nameWithType: IMessage<Byte[]>
  fullName: Steeltoe.Messaging.IMessage<System.Byte[]>
  nameWithType.vb: IMessage(Of Byte())
  fullName.vb: Steeltoe.Messaging.IMessage(Of System.Byte())
  name.vb: IMessage(Of Byte())
  spec.csharp:
  - uid: Steeltoe.Messaging.IMessage`1
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Steeltoe.Messaging.IMessage`1
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.IMessage`1
  commentId: T:Steeltoe.Messaging.IMessage`1
  name: IMessage<T>
  nameWithType: IMessage<T>
  fullName: Steeltoe.Messaging.IMessage<T>
  nameWithType.vb: IMessage(Of T)
  fullName.vb: Steeltoe.Messaging.IMessage(Of T)
  name.vb: IMessage(Of T)
  spec.csharp:
  - uid: Steeltoe.Messaging.IMessage`1
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Steeltoe.Messaging.IMessage`1
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging
  commentId: N:Steeltoe.Messaging
  name: Steeltoe.Messaging
  nameWithType: Steeltoe.Messaging
  fullName: Steeltoe.Messaging
- uid: Steeltoe.Stream.Binder.EmbeddedHeaderUtils.HeadersToEmbed*
  commentId: Overload:Steeltoe.Stream.Binder.EmbeddedHeaderUtils.HeadersToEmbed
  name: HeadersToEmbed
  nameWithType: EmbeddedHeaderUtils.HeadersToEmbed
  fullName: Steeltoe.Stream.Binder.EmbeddedHeaderUtils.HeadersToEmbed
