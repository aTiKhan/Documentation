### YamlMime:ManagedReference
items:
- uid: Steeltoe.Integration.Support.IMessageBuilder`1
  commentId: T:Steeltoe.Integration.Support.IMessageBuilder`1
  id: IMessageBuilder`1
  parent: Steeltoe.Integration.Support
  children:
  - Steeltoe.Integration.Support.IMessageBuilder`1.Build
  - Steeltoe.Integration.Support.IMessageBuilder`1.CopyHeaders(System.Collections.Generic.IDictionary{System.String,System.Object})
  - Steeltoe.Integration.Support.IMessageBuilder`1.CopyHeadersIfAbsent(System.Collections.Generic.IDictionary{System.String,System.Object})
  - Steeltoe.Integration.Support.IMessageBuilder`1.FilterAndCopyHeadersIfAbsent(System.Collections.Generic.IDictionary{System.String,System.Object},System.String[])
  - Steeltoe.Integration.Support.IMessageBuilder`1.Payload
  - Steeltoe.Integration.Support.IMessageBuilder`1.PopSequenceDetails
  - Steeltoe.Integration.Support.IMessageBuilder`1.PushSequenceDetails(System.Object,System.Int32,System.Int32)
  - Steeltoe.Integration.Support.IMessageBuilder`1.RemoveHeader(System.String)
  - Steeltoe.Integration.Support.IMessageBuilder`1.RemoveHeaders(System.String[])
  - Steeltoe.Integration.Support.IMessageBuilder`1.SetCorrelationId(System.Object)
  - Steeltoe.Integration.Support.IMessageBuilder`1.SetErrorChannel(Steeltoe.Messaging.IMessageChannel)
  - Steeltoe.Integration.Support.IMessageBuilder`1.SetErrorChannelName(System.String)
  - Steeltoe.Integration.Support.IMessageBuilder`1.SetExpirationDate(System.Int64)
  - Steeltoe.Integration.Support.IMessageBuilder`1.SetExpirationDate(System.Nullable{System.DateTime})
  - Steeltoe.Integration.Support.IMessageBuilder`1.SetHeader(System.String,System.Object)
  - Steeltoe.Integration.Support.IMessageBuilder`1.SetHeaderIfAbsent(System.String,System.Object)
  - Steeltoe.Integration.Support.IMessageBuilder`1.SetPriority(System.Int32)
  - Steeltoe.Integration.Support.IMessageBuilder`1.SetReplyChannel(Steeltoe.Messaging.IMessageChannel)
  - Steeltoe.Integration.Support.IMessageBuilder`1.SetReplyChannelName(System.String)
  - Steeltoe.Integration.Support.IMessageBuilder`1.SetSequenceNumber(System.Int32)
  - Steeltoe.Integration.Support.IMessageBuilder`1.SetSequenceSize(System.Int32)
  langs:
  - csharp
  - vb
  name: IMessageBuilder<T>
  nameWithType: IMessageBuilder<T>
  fullName: Steeltoe.Integration.Support.IMessageBuilder<T>
  type: Interface
  source:
    remote:
      path: src/Integration/src/Abstractions/Support/IMessageBuilder.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: IMessageBuilder
    path: ../Steeltoe/src/Integration/src/Abstractions/Support/IMessageBuilder.cs
    startLine: 174
  assemblies:
  - Steeltoe.Integration.Abstractions
  namespace: Steeltoe.Integration.Support
  summary: "\nA typed MessageBuilder.\n"
  example: []
  syntax:
    content: 'public interface IMessageBuilder<T> : IMessageBuilder'
    typeParameters:
    - id: T
      description: the type of the payload
    content.vb: >-
      Public Interface IMessageBuilder(Of T)

          Inherits IMessageBuilder
  inheritedMembers:
  - Steeltoe.Integration.Support.IMessageBuilder.Headers
  nameWithType.vb: IMessageBuilder(Of T)
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
  fullName.vb: Steeltoe.Integration.Support.IMessageBuilder(Of T)
  name.vb: IMessageBuilder(Of T)
- uid: Steeltoe.Integration.Support.IMessageBuilder`1.SetExpirationDate(System.Int64)
  commentId: M:Steeltoe.Integration.Support.IMessageBuilder`1.SetExpirationDate(System.Int64)
  id: SetExpirationDate(System.Int64)
  parent: Steeltoe.Integration.Support.IMessageBuilder`1
  langs:
  - csharp
  - vb
  name: SetExpirationDate(Int64)
  nameWithType: IMessageBuilder<T>.SetExpirationDate(Int64)
  fullName: Steeltoe.Integration.Support.IMessageBuilder<T>.SetExpirationDate(System.Int64)
  type: Method
  source:
    remote:
      path: src/Integration/src/Abstractions/Support/IMessageBuilder.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: SetExpirationDate
    path: ../Steeltoe/src/Integration/src/Abstractions/Support/IMessageBuilder.cs
    startLine: 181
  assemblies:
  - Steeltoe.Integration.Abstractions
  namespace: Steeltoe.Integration.Support
  summary: "\nAdds an expiration date in the headers\n"
  example: []
  syntax:
    content: IMessageBuilder<T> SetExpirationDate(long expirationDate)
    parameters:
    - id: expirationDate
      type: System.Int64
      description: expiration date added to header
    return:
      type: Steeltoe.Integration.Support.IMessageBuilder`1
      description: the builder
    content.vb: Function SetExpirationDate(expirationDate As Long) As IMessageBuilder(Of T)
  overload: Steeltoe.Integration.Support.IMessageBuilder`1.SetExpirationDate*
  nameWithType.vb: IMessageBuilder(Of T).SetExpirationDate(Int64)
  fullName.vb: Steeltoe.Integration.Support.IMessageBuilder(Of T).SetExpirationDate(System.Int64)
- uid: Steeltoe.Integration.Support.IMessageBuilder`1.SetExpirationDate(System.Nullable{System.DateTime})
  commentId: M:Steeltoe.Integration.Support.IMessageBuilder`1.SetExpirationDate(System.Nullable{System.DateTime})
  id: SetExpirationDate(System.Nullable{System.DateTime})
  parent: Steeltoe.Integration.Support.IMessageBuilder`1
  langs:
  - csharp
  - vb
  name: SetExpirationDate(Nullable<DateTime>)
  nameWithType: IMessageBuilder<T>.SetExpirationDate(Nullable<DateTime>)
  fullName: Steeltoe.Integration.Support.IMessageBuilder<T>.SetExpirationDate(System.Nullable<System.DateTime>)
  type: Method
  source:
    remote:
      path: src/Integration/src/Abstractions/Support/IMessageBuilder.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: SetExpirationDate
    path: ../Steeltoe/src/Integration/src/Abstractions/Support/IMessageBuilder.cs
    startLine: 188
  assemblies:
  - Steeltoe.Integration.Abstractions
  namespace: Steeltoe.Integration.Support
  summary: "\nAdds an expiration date in the headers\n"
  example: []
  syntax:
    content: IMessageBuilder<T> SetExpirationDate(DateTime? expirationDate)
    parameters:
    - id: expirationDate
      type: System.Nullable{System.DateTime}
      description: expiration date added to header
    return:
      type: Steeltoe.Integration.Support.IMessageBuilder`1
      description: the builder
    content.vb: Function SetExpirationDate(expirationDate As Date?) As IMessageBuilder(Of T)
  overload: Steeltoe.Integration.Support.IMessageBuilder`1.SetExpirationDate*
  nameWithType.vb: IMessageBuilder(Of T).SetExpirationDate(Nullable(Of DateTime))
  fullName.vb: Steeltoe.Integration.Support.IMessageBuilder(Of T).SetExpirationDate(System.Nullable(Of System.DateTime))
  name.vb: SetExpirationDate(Nullable(Of DateTime))
- uid: Steeltoe.Integration.Support.IMessageBuilder`1.SetCorrelationId(System.Object)
  commentId: M:Steeltoe.Integration.Support.IMessageBuilder`1.SetCorrelationId(System.Object)
  id: SetCorrelationId(System.Object)
  parent: Steeltoe.Integration.Support.IMessageBuilder`1
  langs:
  - csharp
  - vb
  name: SetCorrelationId(Object)
  nameWithType: IMessageBuilder<T>.SetCorrelationId(Object)
  fullName: Steeltoe.Integration.Support.IMessageBuilder<T>.SetCorrelationId(System.Object)
  type: Method
  source:
    remote:
      path: src/Integration/src/Abstractions/Support/IMessageBuilder.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: SetCorrelationId
    path: ../Steeltoe/src/Integration/src/Abstractions/Support/IMessageBuilder.cs
    startLine: 195
  assemblies:
  - Steeltoe.Integration.Abstractions
  namespace: Steeltoe.Integration.Support
  summary: "\nAdds the correlationId to the headers\n"
  example: []
  syntax:
    content: IMessageBuilder<T> SetCorrelationId(object correlationId)
    parameters:
    - id: correlationId
      type: System.Object
      description: the id to add
    return:
      type: Steeltoe.Integration.Support.IMessageBuilder`1
      description: the builder
    content.vb: Function SetCorrelationId(correlationId As Object) As IMessageBuilder(Of T)
  overload: Steeltoe.Integration.Support.IMessageBuilder`1.SetCorrelationId*
  nameWithType.vb: IMessageBuilder(Of T).SetCorrelationId(Object)
  fullName.vb: Steeltoe.Integration.Support.IMessageBuilder(Of T).SetCorrelationId(System.Object)
- uid: Steeltoe.Integration.Support.IMessageBuilder`1.PushSequenceDetails(System.Object,System.Int32,System.Int32)
  commentId: M:Steeltoe.Integration.Support.IMessageBuilder`1.PushSequenceDetails(System.Object,System.Int32,System.Int32)
  id: PushSequenceDetails(System.Object,System.Int32,System.Int32)
  parent: Steeltoe.Integration.Support.IMessageBuilder`1
  langs:
  - csharp
  - vb
  name: PushSequenceDetails(Object, Int32, Int32)
  nameWithType: IMessageBuilder<T>.PushSequenceDetails(Object, Int32, Int32)
  fullName: Steeltoe.Integration.Support.IMessageBuilder<T>.PushSequenceDetails(System.Object, System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: src/Integration/src/Abstractions/Support/IMessageBuilder.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: PushSequenceDetails
    path: ../Steeltoe/src/Integration/src/Abstractions/Support/IMessageBuilder.cs
    startLine: 204
  assemblies:
  - Steeltoe.Integration.Abstractions
  namespace: Steeltoe.Integration.Support
  summary: "\nAdds a sequence details header to the message\n"
  example: []
  syntax:
    content: IMessageBuilder<T> PushSequenceDetails(object correlationId, int sequenceNumber, int sequenceSize)
    parameters:
    - id: correlationId
      type: System.Object
      description: correlation id to use in sequence
    - id: sequenceNumber
      type: System.Int32
      description: the sequence number
    - id: sequenceSize
      type: System.Int32
      description: the size of the sequence number
    return:
      type: Steeltoe.Integration.Support.IMessageBuilder`1
      description: the builder
    content.vb: Function PushSequenceDetails(correlationId As Object, sequenceNumber As Integer, sequenceSize As Integer) As IMessageBuilder(Of T)
  overload: Steeltoe.Integration.Support.IMessageBuilder`1.PushSequenceDetails*
  nameWithType.vb: IMessageBuilder(Of T).PushSequenceDetails(Object, Int32, Int32)
  fullName.vb: Steeltoe.Integration.Support.IMessageBuilder(Of T).PushSequenceDetails(System.Object, System.Int32, System.Int32)
- uid: Steeltoe.Integration.Support.IMessageBuilder`1.PopSequenceDetails
  commentId: M:Steeltoe.Integration.Support.IMessageBuilder`1.PopSequenceDetails
  id: PopSequenceDetails
  parent: Steeltoe.Integration.Support.IMessageBuilder`1
  langs:
  - csharp
  - vb
  name: PopSequenceDetails()
  nameWithType: IMessageBuilder<T>.PopSequenceDetails()
  fullName: Steeltoe.Integration.Support.IMessageBuilder<T>.PopSequenceDetails()
  type: Method
  source:
    remote:
      path: src/Integration/src/Abstractions/Support/IMessageBuilder.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: PopSequenceDetails
    path: ../Steeltoe/src/Integration/src/Abstractions/Support/IMessageBuilder.cs
    startLine: 210
  assemblies:
  - Steeltoe.Integration.Abstractions
  namespace: Steeltoe.Integration.Support
  summary: "\nRemoves a sequence details header from the message\n"
  example: []
  syntax:
    content: IMessageBuilder<T> PopSequenceDetails()
    return:
      type: Steeltoe.Integration.Support.IMessageBuilder`1
      description: the builder
    content.vb: Function PopSequenceDetails As IMessageBuilder(Of T)
  overload: Steeltoe.Integration.Support.IMessageBuilder`1.PopSequenceDetails*
  nameWithType.vb: IMessageBuilder(Of T).PopSequenceDetails()
  fullName.vb: Steeltoe.Integration.Support.IMessageBuilder(Of T).PopSequenceDetails()
- uid: Steeltoe.Integration.Support.IMessageBuilder`1.SetReplyChannel(Steeltoe.Messaging.IMessageChannel)
  commentId: M:Steeltoe.Integration.Support.IMessageBuilder`1.SetReplyChannel(Steeltoe.Messaging.IMessageChannel)
  id: SetReplyChannel(Steeltoe.Messaging.IMessageChannel)
  parent: Steeltoe.Integration.Support.IMessageBuilder`1
  langs:
  - csharp
  - vb
  name: SetReplyChannel(IMessageChannel)
  nameWithType: IMessageBuilder<T>.SetReplyChannel(IMessageChannel)
  fullName: Steeltoe.Integration.Support.IMessageBuilder<T>.SetReplyChannel(Steeltoe.Messaging.IMessageChannel)
  type: Method
  source:
    remote:
      path: src/Integration/src/Abstractions/Support/IMessageBuilder.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: SetReplyChannel
    path: ../Steeltoe/src/Integration/src/Abstractions/Support/IMessageBuilder.cs
    startLine: 217
  assemblies:
  - Steeltoe.Integration.Abstractions
  namespace: Steeltoe.Integration.Support
  summary: "\nAdds a reply channel to the message\n"
  example: []
  syntax:
    content: IMessageBuilder<T> SetReplyChannel(IMessageChannel replyChannel)
    parameters:
    - id: replyChannel
      type: Steeltoe.Messaging.IMessageChannel
      description: the reply channel
    return:
      type: Steeltoe.Integration.Support.IMessageBuilder`1
      description: the builder
    content.vb: Function SetReplyChannel(replyChannel As IMessageChannel) As IMessageBuilder(Of T)
  overload: Steeltoe.Integration.Support.IMessageBuilder`1.SetReplyChannel*
  nameWithType.vb: IMessageBuilder(Of T).SetReplyChannel(IMessageChannel)
  fullName.vb: Steeltoe.Integration.Support.IMessageBuilder(Of T).SetReplyChannel(Steeltoe.Messaging.IMessageChannel)
- uid: Steeltoe.Integration.Support.IMessageBuilder`1.SetReplyChannelName(System.String)
  commentId: M:Steeltoe.Integration.Support.IMessageBuilder`1.SetReplyChannelName(System.String)
  id: SetReplyChannelName(System.String)
  parent: Steeltoe.Integration.Support.IMessageBuilder`1
  langs:
  - csharp
  - vb
  name: SetReplyChannelName(String)
  nameWithType: IMessageBuilder<T>.SetReplyChannelName(String)
  fullName: Steeltoe.Integration.Support.IMessageBuilder<T>.SetReplyChannelName(System.String)
  type: Method
  source:
    remote:
      path: src/Integration/src/Abstractions/Support/IMessageBuilder.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: SetReplyChannelName
    path: ../Steeltoe/src/Integration/src/Abstractions/Support/IMessageBuilder.cs
    startLine: 224
  assemblies:
  - Steeltoe.Integration.Abstractions
  namespace: Steeltoe.Integration.Support
  summary: "\nAdds a reply channel name to the message\n"
  example: []
  syntax:
    content: IMessageBuilder<T> SetReplyChannelName(string replyChannelName)
    parameters:
    - id: replyChannelName
      type: System.String
      description: the reply channel name
    return:
      type: Steeltoe.Integration.Support.IMessageBuilder`1
      description: the builder
    content.vb: Function SetReplyChannelName(replyChannelName As String) As IMessageBuilder(Of T)
  overload: Steeltoe.Integration.Support.IMessageBuilder`1.SetReplyChannelName*
  nameWithType.vb: IMessageBuilder(Of T).SetReplyChannelName(String)
  fullName.vb: Steeltoe.Integration.Support.IMessageBuilder(Of T).SetReplyChannelName(System.String)
- uid: Steeltoe.Integration.Support.IMessageBuilder`1.SetErrorChannel(Steeltoe.Messaging.IMessageChannel)
  commentId: M:Steeltoe.Integration.Support.IMessageBuilder`1.SetErrorChannel(Steeltoe.Messaging.IMessageChannel)
  id: SetErrorChannel(Steeltoe.Messaging.IMessageChannel)
  parent: Steeltoe.Integration.Support.IMessageBuilder`1
  langs:
  - csharp
  - vb
  name: SetErrorChannel(IMessageChannel)
  nameWithType: IMessageBuilder<T>.SetErrorChannel(IMessageChannel)
  fullName: Steeltoe.Integration.Support.IMessageBuilder<T>.SetErrorChannel(Steeltoe.Messaging.IMessageChannel)
  type: Method
  source:
    remote:
      path: src/Integration/src/Abstractions/Support/IMessageBuilder.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: SetErrorChannel
    path: ../Steeltoe/src/Integration/src/Abstractions/Support/IMessageBuilder.cs
    startLine: 231
  assemblies:
  - Steeltoe.Integration.Abstractions
  namespace: Steeltoe.Integration.Support
  summary: "\nAdds an error channel to the messsage\n"
  example: []
  syntax:
    content: IMessageBuilder<T> SetErrorChannel(IMessageChannel errorChannel)
    parameters:
    - id: errorChannel
      type: Steeltoe.Messaging.IMessageChannel
      description: the error channel
    return:
      type: Steeltoe.Integration.Support.IMessageBuilder`1
      description: the builder
    content.vb: Function SetErrorChannel(errorChannel As IMessageChannel) As IMessageBuilder(Of T)
  overload: Steeltoe.Integration.Support.IMessageBuilder`1.SetErrorChannel*
  nameWithType.vb: IMessageBuilder(Of T).SetErrorChannel(IMessageChannel)
  fullName.vb: Steeltoe.Integration.Support.IMessageBuilder(Of T).SetErrorChannel(Steeltoe.Messaging.IMessageChannel)
- uid: Steeltoe.Integration.Support.IMessageBuilder`1.SetErrorChannelName(System.String)
  commentId: M:Steeltoe.Integration.Support.IMessageBuilder`1.SetErrorChannelName(System.String)
  id: SetErrorChannelName(System.String)
  parent: Steeltoe.Integration.Support.IMessageBuilder`1
  langs:
  - csharp
  - vb
  name: SetErrorChannelName(String)
  nameWithType: IMessageBuilder<T>.SetErrorChannelName(String)
  fullName: Steeltoe.Integration.Support.IMessageBuilder<T>.SetErrorChannelName(System.String)
  type: Method
  source:
    remote:
      path: src/Integration/src/Abstractions/Support/IMessageBuilder.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: SetErrorChannelName
    path: ../Steeltoe/src/Integration/src/Abstractions/Support/IMessageBuilder.cs
    startLine: 238
  assemblies:
  - Steeltoe.Integration.Abstractions
  namespace: Steeltoe.Integration.Support
  summary: "\nAdds an error channel name to the message\n"
  example: []
  syntax:
    content: IMessageBuilder<T> SetErrorChannelName(string errorChannelName)
    parameters:
    - id: errorChannelName
      type: System.String
      description: the name of the error channel
    return:
      type: Steeltoe.Integration.Support.IMessageBuilder`1
      description: the builder
    content.vb: Function SetErrorChannelName(errorChannelName As String) As IMessageBuilder(Of T)
  overload: Steeltoe.Integration.Support.IMessageBuilder`1.SetErrorChannelName*
  nameWithType.vb: IMessageBuilder(Of T).SetErrorChannelName(String)
  fullName.vb: Steeltoe.Integration.Support.IMessageBuilder(Of T).SetErrorChannelName(System.String)
- uid: Steeltoe.Integration.Support.IMessageBuilder`1.SetSequenceNumber(System.Int32)
  commentId: M:Steeltoe.Integration.Support.IMessageBuilder`1.SetSequenceNumber(System.Int32)
  id: SetSequenceNumber(System.Int32)
  parent: Steeltoe.Integration.Support.IMessageBuilder`1
  langs:
  - csharp
  - vb
  name: SetSequenceNumber(Int32)
  nameWithType: IMessageBuilder<T>.SetSequenceNumber(Int32)
  fullName: Steeltoe.Integration.Support.IMessageBuilder<T>.SetSequenceNumber(System.Int32)
  type: Method
  source:
    remote:
      path: src/Integration/src/Abstractions/Support/IMessageBuilder.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: SetSequenceNumber
    path: ../Steeltoe/src/Integration/src/Abstractions/Support/IMessageBuilder.cs
    startLine: 245
  assemblies:
  - Steeltoe.Integration.Abstractions
  namespace: Steeltoe.Integration.Support
  summary: "\nAdds sequence details header to the message\n"
  example: []
  syntax:
    content: IMessageBuilder<T> SetSequenceNumber(int sequenceNumber)
    parameters:
    - id: sequenceNumber
      type: System.Int32
      description: the sequence number
    return:
      type: Steeltoe.Integration.Support.IMessageBuilder`1
      description: the builder
    content.vb: Function SetSequenceNumber(sequenceNumber As Integer) As IMessageBuilder(Of T)
  overload: Steeltoe.Integration.Support.IMessageBuilder`1.SetSequenceNumber*
  nameWithType.vb: IMessageBuilder(Of T).SetSequenceNumber(Int32)
  fullName.vb: Steeltoe.Integration.Support.IMessageBuilder(Of T).SetSequenceNumber(System.Int32)
- uid: Steeltoe.Integration.Support.IMessageBuilder`1.SetSequenceSize(System.Int32)
  commentId: M:Steeltoe.Integration.Support.IMessageBuilder`1.SetSequenceSize(System.Int32)
  id: SetSequenceSize(System.Int32)
  parent: Steeltoe.Integration.Support.IMessageBuilder`1
  langs:
  - csharp
  - vb
  name: SetSequenceSize(Int32)
  nameWithType: IMessageBuilder<T>.SetSequenceSize(Int32)
  fullName: Steeltoe.Integration.Support.IMessageBuilder<T>.SetSequenceSize(System.Int32)
  type: Method
  source:
    remote:
      path: src/Integration/src/Abstractions/Support/IMessageBuilder.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: SetSequenceSize
    path: ../Steeltoe/src/Integration/src/Abstractions/Support/IMessageBuilder.cs
    startLine: 252
  assemblies:
  - Steeltoe.Integration.Abstractions
  namespace: Steeltoe.Integration.Support
  summary: "\nSets the size of the sequence number\n"
  example: []
  syntax:
    content: IMessageBuilder<T> SetSequenceSize(int sequenceSize)
    parameters:
    - id: sequenceSize
      type: System.Int32
      description: the size
    return:
      type: Steeltoe.Integration.Support.IMessageBuilder`1
      description: the builder
    content.vb: Function SetSequenceSize(sequenceSize As Integer) As IMessageBuilder(Of T)
  overload: Steeltoe.Integration.Support.IMessageBuilder`1.SetSequenceSize*
  nameWithType.vb: IMessageBuilder(Of T).SetSequenceSize(Int32)
  fullName.vb: Steeltoe.Integration.Support.IMessageBuilder(Of T).SetSequenceSize(System.Int32)
- uid: Steeltoe.Integration.Support.IMessageBuilder`1.SetPriority(System.Int32)
  commentId: M:Steeltoe.Integration.Support.IMessageBuilder`1.SetPriority(System.Int32)
  id: SetPriority(System.Int32)
  parent: Steeltoe.Integration.Support.IMessageBuilder`1
  langs:
  - csharp
  - vb
  name: SetPriority(Int32)
  nameWithType: IMessageBuilder<T>.SetPriority(Int32)
  fullName: Steeltoe.Integration.Support.IMessageBuilder<T>.SetPriority(System.Int32)
  type: Method
  source:
    remote:
      path: src/Integration/src/Abstractions/Support/IMessageBuilder.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: SetPriority
    path: ../Steeltoe/src/Integration/src/Abstractions/Support/IMessageBuilder.cs
    startLine: 259
  assemblies:
  - Steeltoe.Integration.Abstractions
  namespace: Steeltoe.Integration.Support
  summary: "\nAdds a priority header to the message\n"
  example: []
  syntax:
    content: IMessageBuilder<T> SetPriority(int priority)
    parameters:
    - id: priority
      type: System.Int32
      description: the priority to add
    return:
      type: Steeltoe.Integration.Support.IMessageBuilder`1
      description: the builder
    content.vb: Function SetPriority(priority As Integer) As IMessageBuilder(Of T)
  overload: Steeltoe.Integration.Support.IMessageBuilder`1.SetPriority*
  nameWithType.vb: IMessageBuilder(Of T).SetPriority(Int32)
  fullName.vb: Steeltoe.Integration.Support.IMessageBuilder(Of T).SetPriority(System.Int32)
- uid: Steeltoe.Integration.Support.IMessageBuilder`1.FilterAndCopyHeadersIfAbsent(System.Collections.Generic.IDictionary{System.String,System.Object},System.String[])
  commentId: M:Steeltoe.Integration.Support.IMessageBuilder`1.FilterAndCopyHeadersIfAbsent(System.Collections.Generic.IDictionary{System.String,System.Object},System.String[])
  id: FilterAndCopyHeadersIfAbsent(System.Collections.Generic.IDictionary{System.String,System.Object},System.String[])
  parent: Steeltoe.Integration.Support.IMessageBuilder`1
  langs:
  - csharp
  - vb
  name: FilterAndCopyHeadersIfAbsent(IDictionary<String, Object>, String[])
  nameWithType: IMessageBuilder<T>.FilterAndCopyHeadersIfAbsent(IDictionary<String, Object>, String[])
  fullName: Steeltoe.Integration.Support.IMessageBuilder<T>.FilterAndCopyHeadersIfAbsent(System.Collections.Generic.IDictionary<System.String, System.Object>, System.String[])
  type: Method
  source:
    remote:
      path: src/Integration/src/Abstractions/Support/IMessageBuilder.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: FilterAndCopyHeadersIfAbsent
    path: ../Steeltoe/src/Integration/src/Abstractions/Support/IMessageBuilder.cs
    startLine: 268
  assemblies:
  - Steeltoe.Integration.Abstractions
  namespace: Steeltoe.Integration.Support
  summary: "\nRemove headers from the provided map matching to the provided pattens\nand only after that copy the result into the target message headers.\n"
  example: []
  syntax:
    content: IMessageBuilder<T> FilterAndCopyHeadersIfAbsent(IDictionary<string, object> headersToCopy, params string[] headerPatternsToFilter)
    parameters:
    - id: headersToCopy
      type: System.Collections.Generic.IDictionary{System.String,System.Object}
      description: the set of headers to copy
    - id: headerPatternsToFilter
      type: System.String[]
      description: header patterns to filter before copy
    return:
      type: Steeltoe.Integration.Support.IMessageBuilder`1
      description: the builder
    content.vb: Function FilterAndCopyHeadersIfAbsent(headersToCopy As IDictionary(Of String, Object), ParamArray headerPatternsToFilter As String()) As IMessageBuilder(Of T)
  overload: Steeltoe.Integration.Support.IMessageBuilder`1.FilterAndCopyHeadersIfAbsent*
  nameWithType.vb: IMessageBuilder(Of T).FilterAndCopyHeadersIfAbsent(IDictionary(Of String, Object), String())
  fullName.vb: Steeltoe.Integration.Support.IMessageBuilder(Of T).FilterAndCopyHeadersIfAbsent(System.Collections.Generic.IDictionary(Of System.String, System.Object), System.String())
  name.vb: FilterAndCopyHeadersIfAbsent(IDictionary(Of String, Object), String())
- uid: Steeltoe.Integration.Support.IMessageBuilder`1.Payload
  commentId: P:Steeltoe.Integration.Support.IMessageBuilder`1.Payload
  id: Payload
  parent: Steeltoe.Integration.Support.IMessageBuilder`1
  langs:
  - csharp
  - vb
  name: Payload
  nameWithType: IMessageBuilder<T>.Payload
  fullName: Steeltoe.Integration.Support.IMessageBuilder<T>.Payload
  type: Property
  source:
    remote:
      path: src/Integration/src/Abstractions/Support/IMessageBuilder.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Payload
    path: ../Steeltoe/src/Integration/src/Abstractions/Support/IMessageBuilder.cs
    startLine: 273
  assemblies:
  - Steeltoe.Integration.Abstractions
  namespace: Steeltoe.Integration.Support
  summary: "\nGets the payload of the message\n"
  example: []
  syntax:
    content: T Payload { get; }
    parameters: []
    return:
      type: '{T}'
    content.vb: ReadOnly Property Payload As T
  overload: Steeltoe.Integration.Support.IMessageBuilder`1.Payload*
  nameWithType.vb: IMessageBuilder(Of T).Payload
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
  fullName.vb: Steeltoe.Integration.Support.IMessageBuilder(Of T).Payload
- uid: Steeltoe.Integration.Support.IMessageBuilder`1.SetHeader(System.String,System.Object)
  commentId: M:Steeltoe.Integration.Support.IMessageBuilder`1.SetHeader(System.String,System.Object)
  id: SetHeader(System.String,System.Object)
  parent: Steeltoe.Integration.Support.IMessageBuilder`1
  langs:
  - csharp
  - vb
  name: SetHeader(String, Object)
  nameWithType: IMessageBuilder<T>.SetHeader(String, Object)
  fullName: Steeltoe.Integration.Support.IMessageBuilder<T>.SetHeader(System.String, System.Object)
  type: Method
  source:
    remote:
      path: src/Integration/src/Abstractions/Support/IMessageBuilder.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: SetHeader
    path: ../Steeltoe/src/Integration/src/Abstractions/Support/IMessageBuilder.cs
    startLine: 281
  assemblies:
  - Steeltoe.Integration.Abstractions
  namespace: Steeltoe.Integration.Support
  summary: "\nAdd a header and value to the message\n"
  example: []
  syntax:
    content: IMessageBuilder<T> SetHeader(string headerName, object headerValue)
    parameters:
    - id: headerName
      type: System.String
      description: name of the header
    - id: headerValue
      type: System.Object
      description: value of the header item
    return:
      type: Steeltoe.Integration.Support.IMessageBuilder`1
      description: the builder
    content.vb: Function SetHeader(headerName As String, headerValue As Object) As IMessageBuilder(Of T)
  overload: Steeltoe.Integration.Support.IMessageBuilder`1.SetHeader*
  nameWithType.vb: IMessageBuilder(Of T).SetHeader(String, Object)
  fullName.vb: Steeltoe.Integration.Support.IMessageBuilder(Of T).SetHeader(System.String, System.Object)
- uid: Steeltoe.Integration.Support.IMessageBuilder`1.SetHeaderIfAbsent(System.String,System.Object)
  commentId: M:Steeltoe.Integration.Support.IMessageBuilder`1.SetHeaderIfAbsent(System.String,System.Object)
  id: SetHeaderIfAbsent(System.String,System.Object)
  parent: Steeltoe.Integration.Support.IMessageBuilder`1
  langs:
  - csharp
  - vb
  name: SetHeaderIfAbsent(String, Object)
  nameWithType: IMessageBuilder<T>.SetHeaderIfAbsent(String, Object)
  fullName: Steeltoe.Integration.Support.IMessageBuilder<T>.SetHeaderIfAbsent(System.String, System.Object)
  type: Method
  source:
    remote:
      path: src/Integration/src/Abstractions/Support/IMessageBuilder.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: SetHeaderIfAbsent
    path: ../Steeltoe/src/Integration/src/Abstractions/Support/IMessageBuilder.cs
    startLine: 289
  assemblies:
  - Steeltoe.Integration.Abstractions
  namespace: Steeltoe.Integration.Support
  summary: "\nAdd a header and value to the message if not present\n"
  example: []
  syntax:
    content: IMessageBuilder<T> SetHeaderIfAbsent(string headerName, object headerValue)
    parameters:
    - id: headerName
      type: System.String
      description: name of the header
    - id: headerValue
      type: System.Object
      description: value of the header item
    return:
      type: Steeltoe.Integration.Support.IMessageBuilder`1
      description: the builder
    content.vb: Function SetHeaderIfAbsent(headerName As String, headerValue As Object) As IMessageBuilder(Of T)
  overload: Steeltoe.Integration.Support.IMessageBuilder`1.SetHeaderIfAbsent*
  nameWithType.vb: IMessageBuilder(Of T).SetHeaderIfAbsent(String, Object)
  fullName.vb: Steeltoe.Integration.Support.IMessageBuilder(Of T).SetHeaderIfAbsent(System.String, System.Object)
- uid: Steeltoe.Integration.Support.IMessageBuilder`1.RemoveHeaders(System.String[])
  commentId: M:Steeltoe.Integration.Support.IMessageBuilder`1.RemoveHeaders(System.String[])
  id: RemoveHeaders(System.String[])
  parent: Steeltoe.Integration.Support.IMessageBuilder`1
  langs:
  - csharp
  - vb
  name: RemoveHeaders(String[])
  nameWithType: IMessageBuilder<T>.RemoveHeaders(String[])
  fullName: Steeltoe.Integration.Support.IMessageBuilder<T>.RemoveHeaders(System.String[])
  type: Method
  source:
    remote:
      path: src/Integration/src/Abstractions/Support/IMessageBuilder.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: RemoveHeaders
    path: ../Steeltoe/src/Integration/src/Abstractions/Support/IMessageBuilder.cs
    startLine: 296
  assemblies:
  - Steeltoe.Integration.Abstractions
  namespace: Steeltoe.Integration.Support
  summary: "\nRemove the headers matched by the header patterns from the message\n"
  example: []
  syntax:
    content: IMessageBuilder<T> RemoveHeaders(params string[] headerPatterns)
    parameters:
    - id: headerPatterns
      type: System.String[]
      description: header patterns to match
    return:
      type: Steeltoe.Integration.Support.IMessageBuilder`1
      description: the builder
    content.vb: Function RemoveHeaders(ParamArray headerPatterns As String()) As IMessageBuilder(Of T)
  overload: Steeltoe.Integration.Support.IMessageBuilder`1.RemoveHeaders*
  nameWithType.vb: IMessageBuilder(Of T).RemoveHeaders(String())
  fullName.vb: Steeltoe.Integration.Support.IMessageBuilder(Of T).RemoveHeaders(System.String())
  name.vb: RemoveHeaders(String())
- uid: Steeltoe.Integration.Support.IMessageBuilder`1.RemoveHeader(System.String)
  commentId: M:Steeltoe.Integration.Support.IMessageBuilder`1.RemoveHeader(System.String)
  id: RemoveHeader(System.String)
  parent: Steeltoe.Integration.Support.IMessageBuilder`1
  langs:
  - csharp
  - vb
  name: RemoveHeader(String)
  nameWithType: IMessageBuilder<T>.RemoveHeader(String)
  fullName: Steeltoe.Integration.Support.IMessageBuilder<T>.RemoveHeader(System.String)
  type: Method
  source:
    remote:
      path: src/Integration/src/Abstractions/Support/IMessageBuilder.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: RemoveHeader
    path: ../Steeltoe/src/Integration/src/Abstractions/Support/IMessageBuilder.cs
    startLine: 303
  assemblies:
  - Steeltoe.Integration.Abstractions
  namespace: Steeltoe.Integration.Support
  summary: "\nRemove the header if present\n"
  example: []
  syntax:
    content: IMessageBuilder<T> RemoveHeader(string headerName)
    parameters:
    - id: headerName
      type: System.String
      description: the name of the header to remove
    return:
      type: Steeltoe.Integration.Support.IMessageBuilder`1
      description: the builder
    content.vb: Function RemoveHeader(headerName As String) As IMessageBuilder(Of T)
  overload: Steeltoe.Integration.Support.IMessageBuilder`1.RemoveHeader*
  nameWithType.vb: IMessageBuilder(Of T).RemoveHeader(String)
  fullName.vb: Steeltoe.Integration.Support.IMessageBuilder(Of T).RemoveHeader(System.String)
- uid: Steeltoe.Integration.Support.IMessageBuilder`1.CopyHeaders(System.Collections.Generic.IDictionary{System.String,System.Object})
  commentId: M:Steeltoe.Integration.Support.IMessageBuilder`1.CopyHeaders(System.Collections.Generic.IDictionary{System.String,System.Object})
  id: CopyHeaders(System.Collections.Generic.IDictionary{System.String,System.Object})
  parent: Steeltoe.Integration.Support.IMessageBuilder`1
  langs:
  - csharp
  - vb
  name: CopyHeaders(IDictionary<String, Object>)
  nameWithType: IMessageBuilder<T>.CopyHeaders(IDictionary<String, Object>)
  fullName: Steeltoe.Integration.Support.IMessageBuilder<T>.CopyHeaders(System.Collections.Generic.IDictionary<System.String, System.Object>)
  type: Method
  source:
    remote:
      path: src/Integration/src/Abstractions/Support/IMessageBuilder.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: CopyHeaders
    path: ../Steeltoe/src/Integration/src/Abstractions/Support/IMessageBuilder.cs
    startLine: 310
  assemblies:
  - Steeltoe.Integration.Abstractions
  namespace: Steeltoe.Integration.Support
  summary: "\nAdds the headers to the message overwriting any existing values.\n"
  example: []
  syntax:
    content: IMessageBuilder<T> CopyHeaders(IDictionary<string, object> headersToCopy)
    parameters:
    - id: headersToCopy
      type: System.Collections.Generic.IDictionary{System.String,System.Object}
      description: the headers to add
    return:
      type: Steeltoe.Integration.Support.IMessageBuilder`1
      description: the builder
    content.vb: Function CopyHeaders(headersToCopy As IDictionary(Of String, Object)) As IMessageBuilder(Of T)
  overload: Steeltoe.Integration.Support.IMessageBuilder`1.CopyHeaders*
  nameWithType.vb: IMessageBuilder(Of T).CopyHeaders(IDictionary(Of String, Object))
  fullName.vb: Steeltoe.Integration.Support.IMessageBuilder(Of T).CopyHeaders(System.Collections.Generic.IDictionary(Of System.String, System.Object))
  name.vb: CopyHeaders(IDictionary(Of String, Object))
- uid: Steeltoe.Integration.Support.IMessageBuilder`1.CopyHeadersIfAbsent(System.Collections.Generic.IDictionary{System.String,System.Object})
  commentId: M:Steeltoe.Integration.Support.IMessageBuilder`1.CopyHeadersIfAbsent(System.Collections.Generic.IDictionary{System.String,System.Object})
  id: CopyHeadersIfAbsent(System.Collections.Generic.IDictionary{System.String,System.Object})
  parent: Steeltoe.Integration.Support.IMessageBuilder`1
  langs:
  - csharp
  - vb
  name: CopyHeadersIfAbsent(IDictionary<String, Object>)
  nameWithType: IMessageBuilder<T>.CopyHeadersIfAbsent(IDictionary<String, Object>)
  fullName: Steeltoe.Integration.Support.IMessageBuilder<T>.CopyHeadersIfAbsent(System.Collections.Generic.IDictionary<System.String, System.Object>)
  type: Method
  source:
    remote:
      path: src/Integration/src/Abstractions/Support/IMessageBuilder.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: CopyHeadersIfAbsent
    path: ../Steeltoe/src/Integration/src/Abstractions/Support/IMessageBuilder.cs
    startLine: 317
  assemblies:
  - Steeltoe.Integration.Abstractions
  namespace: Steeltoe.Integration.Support
  summary: "\nAdds the headers to the message but will not overwrite any existing values.\n"
  example: []
  syntax:
    content: IMessageBuilder<T> CopyHeadersIfAbsent(IDictionary<string, object> headersToCopy)
    parameters:
    - id: headersToCopy
      type: System.Collections.Generic.IDictionary{System.String,System.Object}
      description: the headers to add
    return:
      type: Steeltoe.Integration.Support.IMessageBuilder`1
      description: the builder
    content.vb: Function CopyHeadersIfAbsent(headersToCopy As IDictionary(Of String, Object)) As IMessageBuilder(Of T)
  overload: Steeltoe.Integration.Support.IMessageBuilder`1.CopyHeadersIfAbsent*
  nameWithType.vb: IMessageBuilder(Of T).CopyHeadersIfAbsent(IDictionary(Of String, Object))
  fullName.vb: Steeltoe.Integration.Support.IMessageBuilder(Of T).CopyHeadersIfAbsent(System.Collections.Generic.IDictionary(Of System.String, System.Object))
  name.vb: CopyHeadersIfAbsent(IDictionary(Of String, Object))
- uid: Steeltoe.Integration.Support.IMessageBuilder`1.Build
  commentId: M:Steeltoe.Integration.Support.IMessageBuilder`1.Build
  id: Build
  parent: Steeltoe.Integration.Support.IMessageBuilder`1
  langs:
  - csharp
  - vb
  name: Build()
  nameWithType: IMessageBuilder<T>.Build()
  fullName: Steeltoe.Integration.Support.IMessageBuilder<T>.Build()
  type: Method
  source:
    remote:
      path: src/Integration/src/Abstractions/Support/IMessageBuilder.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Build
    path: ../Steeltoe/src/Integration/src/Abstractions/Support/IMessageBuilder.cs
    startLine: 323
  assemblies:
  - Steeltoe.Integration.Abstractions
  namespace: Steeltoe.Integration.Support
  summary: "\nBuild the message\n"
  example: []
  syntax:
    content: IMessage<T> Build()
    return:
      type: Steeltoe.Messaging.IMessage{{T}}
      description: the message
    content.vb: Function Build As IMessage(Of T)
  overload: Steeltoe.Integration.Support.IMessageBuilder`1.Build*
  nameWithType.vb: IMessageBuilder(Of T).Build()
  fullName.vb: Steeltoe.Integration.Support.IMessageBuilder(Of T).Build()
references:
- uid: Steeltoe.Integration.Support
  commentId: N:Steeltoe.Integration.Support
  name: Steeltoe.Integration.Support
  nameWithType: Steeltoe.Integration.Support
  fullName: Steeltoe.Integration.Support
- uid: Steeltoe.Integration.Support.IMessageBuilder.Headers
  commentId: P:Steeltoe.Integration.Support.IMessageBuilder.Headers
  parent: Steeltoe.Integration.Support.IMessageBuilder
  name: Headers
  nameWithType: IMessageBuilder.Headers
  fullName: Steeltoe.Integration.Support.IMessageBuilder.Headers
- uid: Steeltoe.Integration.Support.IMessageBuilder
  commentId: T:Steeltoe.Integration.Support.IMessageBuilder
  parent: Steeltoe.Integration.Support
  name: IMessageBuilder
  nameWithType: IMessageBuilder
  fullName: Steeltoe.Integration.Support.IMessageBuilder
- uid: Steeltoe.Integration.Support.IMessageBuilder`1.SetExpirationDate*
  commentId: Overload:Steeltoe.Integration.Support.IMessageBuilder`1.SetExpirationDate
  name: SetExpirationDate
  nameWithType: IMessageBuilder<T>.SetExpirationDate
  fullName: Steeltoe.Integration.Support.IMessageBuilder<T>.SetExpirationDate
  nameWithType.vb: IMessageBuilder(Of T).SetExpirationDate
  fullName.vb: Steeltoe.Integration.Support.IMessageBuilder(Of T).SetExpirationDate
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: Steeltoe.Integration.Support.IMessageBuilder`1
  commentId: T:Steeltoe.Integration.Support.IMessageBuilder`1
  parent: Steeltoe.Integration.Support
  name: IMessageBuilder<T>
  nameWithType: IMessageBuilder<T>
  fullName: Steeltoe.Integration.Support.IMessageBuilder<T>
  nameWithType.vb: IMessageBuilder(Of T)
  fullName.vb: Steeltoe.Integration.Support.IMessageBuilder(Of T)
  name.vb: IMessageBuilder(Of T)
  spec.csharp:
  - uid: Steeltoe.Integration.Support.IMessageBuilder`1
    name: IMessageBuilder
    nameWithType: IMessageBuilder
    fullName: Steeltoe.Integration.Support.IMessageBuilder
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Steeltoe.Integration.Support.IMessageBuilder`1
    name: IMessageBuilder
    nameWithType: IMessageBuilder
    fullName: Steeltoe.Integration.Support.IMessageBuilder
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Nullable{System.DateTime}
  commentId: T:System.Nullable{System.DateTime}
  parent: System
  definition: System.Nullable`1
  name: Nullable<DateTime>
  nameWithType: Nullable<DateTime>
  fullName: System.Nullable<System.DateTime>
  nameWithType.vb: Nullable(Of DateTime)
  fullName.vb: System.Nullable(Of System.DateTime)
  name.vb: Nullable(Of DateTime)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Integration.Support.IMessageBuilder`1.SetCorrelationId*
  commentId: Overload:Steeltoe.Integration.Support.IMessageBuilder`1.SetCorrelationId
  name: SetCorrelationId
  nameWithType: IMessageBuilder<T>.SetCorrelationId
  fullName: Steeltoe.Integration.Support.IMessageBuilder<T>.SetCorrelationId
  nameWithType.vb: IMessageBuilder(Of T).SetCorrelationId
  fullName.vb: Steeltoe.Integration.Support.IMessageBuilder(Of T).SetCorrelationId
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Steeltoe.Integration.Support.IMessageBuilder`1.PushSequenceDetails*
  commentId: Overload:Steeltoe.Integration.Support.IMessageBuilder`1.PushSequenceDetails
  name: PushSequenceDetails
  nameWithType: IMessageBuilder<T>.PushSequenceDetails
  fullName: Steeltoe.Integration.Support.IMessageBuilder<T>.PushSequenceDetails
  nameWithType.vb: IMessageBuilder(Of T).PushSequenceDetails
  fullName.vb: Steeltoe.Integration.Support.IMessageBuilder(Of T).PushSequenceDetails
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Steeltoe.Integration.Support.IMessageBuilder`1.PopSequenceDetails*
  commentId: Overload:Steeltoe.Integration.Support.IMessageBuilder`1.PopSequenceDetails
  name: PopSequenceDetails
  nameWithType: IMessageBuilder<T>.PopSequenceDetails
  fullName: Steeltoe.Integration.Support.IMessageBuilder<T>.PopSequenceDetails
  nameWithType.vb: IMessageBuilder(Of T).PopSequenceDetails
  fullName.vb: Steeltoe.Integration.Support.IMessageBuilder(Of T).PopSequenceDetails
- uid: Steeltoe.Integration.Support.IMessageBuilder`1.SetReplyChannel*
  commentId: Overload:Steeltoe.Integration.Support.IMessageBuilder`1.SetReplyChannel
  name: SetReplyChannel
  nameWithType: IMessageBuilder<T>.SetReplyChannel
  fullName: Steeltoe.Integration.Support.IMessageBuilder<T>.SetReplyChannel
  nameWithType.vb: IMessageBuilder(Of T).SetReplyChannel
  fullName.vb: Steeltoe.Integration.Support.IMessageBuilder(Of T).SetReplyChannel
- uid: Steeltoe.Messaging.IMessageChannel
  commentId: T:Steeltoe.Messaging.IMessageChannel
  parent: Steeltoe.Messaging
  name: IMessageChannel
  nameWithType: IMessageChannel
  fullName: Steeltoe.Messaging.IMessageChannel
- uid: Steeltoe.Messaging
  commentId: N:Steeltoe.Messaging
  name: Steeltoe.Messaging
  nameWithType: Steeltoe.Messaging
  fullName: Steeltoe.Messaging
- uid: Steeltoe.Integration.Support.IMessageBuilder`1.SetReplyChannelName*
  commentId: Overload:Steeltoe.Integration.Support.IMessageBuilder`1.SetReplyChannelName
  name: SetReplyChannelName
  nameWithType: IMessageBuilder<T>.SetReplyChannelName
  fullName: Steeltoe.Integration.Support.IMessageBuilder<T>.SetReplyChannelName
  nameWithType.vb: IMessageBuilder(Of T).SetReplyChannelName
  fullName.vb: Steeltoe.Integration.Support.IMessageBuilder(Of T).SetReplyChannelName
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Steeltoe.Integration.Support.IMessageBuilder`1.SetErrorChannel*
  commentId: Overload:Steeltoe.Integration.Support.IMessageBuilder`1.SetErrorChannel
  name: SetErrorChannel
  nameWithType: IMessageBuilder<T>.SetErrorChannel
  fullName: Steeltoe.Integration.Support.IMessageBuilder<T>.SetErrorChannel
  nameWithType.vb: IMessageBuilder(Of T).SetErrorChannel
  fullName.vb: Steeltoe.Integration.Support.IMessageBuilder(Of T).SetErrorChannel
- uid: Steeltoe.Integration.Support.IMessageBuilder`1.SetErrorChannelName*
  commentId: Overload:Steeltoe.Integration.Support.IMessageBuilder`1.SetErrorChannelName
  name: SetErrorChannelName
  nameWithType: IMessageBuilder<T>.SetErrorChannelName
  fullName: Steeltoe.Integration.Support.IMessageBuilder<T>.SetErrorChannelName
  nameWithType.vb: IMessageBuilder(Of T).SetErrorChannelName
  fullName.vb: Steeltoe.Integration.Support.IMessageBuilder(Of T).SetErrorChannelName
- uid: Steeltoe.Integration.Support.IMessageBuilder`1.SetSequenceNumber*
  commentId: Overload:Steeltoe.Integration.Support.IMessageBuilder`1.SetSequenceNumber
  name: SetSequenceNumber
  nameWithType: IMessageBuilder<T>.SetSequenceNumber
  fullName: Steeltoe.Integration.Support.IMessageBuilder<T>.SetSequenceNumber
  nameWithType.vb: IMessageBuilder(Of T).SetSequenceNumber
  fullName.vb: Steeltoe.Integration.Support.IMessageBuilder(Of T).SetSequenceNumber
- uid: Steeltoe.Integration.Support.IMessageBuilder`1.SetSequenceSize*
  commentId: Overload:Steeltoe.Integration.Support.IMessageBuilder`1.SetSequenceSize
  name: SetSequenceSize
  nameWithType: IMessageBuilder<T>.SetSequenceSize
  fullName: Steeltoe.Integration.Support.IMessageBuilder<T>.SetSequenceSize
  nameWithType.vb: IMessageBuilder(Of T).SetSequenceSize
  fullName.vb: Steeltoe.Integration.Support.IMessageBuilder(Of T).SetSequenceSize
- uid: Steeltoe.Integration.Support.IMessageBuilder`1.SetPriority*
  commentId: Overload:Steeltoe.Integration.Support.IMessageBuilder`1.SetPriority
  name: SetPriority
  nameWithType: IMessageBuilder<T>.SetPriority
  fullName: Steeltoe.Integration.Support.IMessageBuilder<T>.SetPriority
  nameWithType.vb: IMessageBuilder(Of T).SetPriority
  fullName.vb: Steeltoe.Integration.Support.IMessageBuilder(Of T).SetPriority
- uid: Steeltoe.Integration.Support.IMessageBuilder`1.FilterAndCopyHeadersIfAbsent*
  commentId: Overload:Steeltoe.Integration.Support.IMessageBuilder`1.FilterAndCopyHeadersIfAbsent
  name: FilterAndCopyHeadersIfAbsent
  nameWithType: IMessageBuilder<T>.FilterAndCopyHeadersIfAbsent
  fullName: Steeltoe.Integration.Support.IMessageBuilder<T>.FilterAndCopyHeadersIfAbsent
  nameWithType.vb: IMessageBuilder(Of T).FilterAndCopyHeadersIfAbsent
  fullName.vb: Steeltoe.Integration.Support.IMessageBuilder(Of T).FilterAndCopyHeadersIfAbsent
- uid: System.Collections.Generic.IDictionary{System.String,System.Object}
  commentId: T:System.Collections.Generic.IDictionary{System.String,System.Object}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IDictionary`2
  name: IDictionary<String, Object>
  nameWithType: IDictionary<String, Object>
  fullName: System.Collections.Generic.IDictionary<System.String, System.Object>
  nameWithType.vb: IDictionary(Of String, Object)
  fullName.vb: System.Collections.Generic.IDictionary(Of System.String, System.Object)
  name.vb: IDictionary(Of String, Object)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.String[]
  isExternal: true
  name: String[]
  nameWithType: String[]
  fullName: System.String[]
  nameWithType.vb: String()
  fullName.vb: System.String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Collections.Generic.IDictionary`2
  commentId: T:System.Collections.Generic.IDictionary`2
  isExternal: true
  name: IDictionary<TKey, TValue>
  nameWithType: IDictionary<TKey, TValue>
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>
  nameWithType.vb: IDictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.IDictionary(Of TKey, TValue)
  name.vb: IDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Steeltoe.Integration.Support.IMessageBuilder`1.Payload*
  commentId: Overload:Steeltoe.Integration.Support.IMessageBuilder`1.Payload
  name: Payload
  nameWithType: IMessageBuilder<T>.Payload
  fullName: Steeltoe.Integration.Support.IMessageBuilder<T>.Payload
  nameWithType.vb: IMessageBuilder(Of T).Payload
  fullName.vb: Steeltoe.Integration.Support.IMessageBuilder(Of T).Payload
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: Steeltoe.Integration.Support.IMessageBuilder`1.SetHeader*
  commentId: Overload:Steeltoe.Integration.Support.IMessageBuilder`1.SetHeader
  name: SetHeader
  nameWithType: IMessageBuilder<T>.SetHeader
  fullName: Steeltoe.Integration.Support.IMessageBuilder<T>.SetHeader
  nameWithType.vb: IMessageBuilder(Of T).SetHeader
  fullName.vb: Steeltoe.Integration.Support.IMessageBuilder(Of T).SetHeader
- uid: Steeltoe.Integration.Support.IMessageBuilder`1.SetHeaderIfAbsent*
  commentId: Overload:Steeltoe.Integration.Support.IMessageBuilder`1.SetHeaderIfAbsent
  name: SetHeaderIfAbsent
  nameWithType: IMessageBuilder<T>.SetHeaderIfAbsent
  fullName: Steeltoe.Integration.Support.IMessageBuilder<T>.SetHeaderIfAbsent
  nameWithType.vb: IMessageBuilder(Of T).SetHeaderIfAbsent
  fullName.vb: Steeltoe.Integration.Support.IMessageBuilder(Of T).SetHeaderIfAbsent
- uid: Steeltoe.Integration.Support.IMessageBuilder`1.RemoveHeaders*
  commentId: Overload:Steeltoe.Integration.Support.IMessageBuilder`1.RemoveHeaders
  name: RemoveHeaders
  nameWithType: IMessageBuilder<T>.RemoveHeaders
  fullName: Steeltoe.Integration.Support.IMessageBuilder<T>.RemoveHeaders
  nameWithType.vb: IMessageBuilder(Of T).RemoveHeaders
  fullName.vb: Steeltoe.Integration.Support.IMessageBuilder(Of T).RemoveHeaders
- uid: Steeltoe.Integration.Support.IMessageBuilder`1.RemoveHeader*
  commentId: Overload:Steeltoe.Integration.Support.IMessageBuilder`1.RemoveHeader
  name: RemoveHeader
  nameWithType: IMessageBuilder<T>.RemoveHeader
  fullName: Steeltoe.Integration.Support.IMessageBuilder<T>.RemoveHeader
  nameWithType.vb: IMessageBuilder(Of T).RemoveHeader
  fullName.vb: Steeltoe.Integration.Support.IMessageBuilder(Of T).RemoveHeader
- uid: Steeltoe.Integration.Support.IMessageBuilder`1.CopyHeaders*
  commentId: Overload:Steeltoe.Integration.Support.IMessageBuilder`1.CopyHeaders
  name: CopyHeaders
  nameWithType: IMessageBuilder<T>.CopyHeaders
  fullName: Steeltoe.Integration.Support.IMessageBuilder<T>.CopyHeaders
  nameWithType.vb: IMessageBuilder(Of T).CopyHeaders
  fullName.vb: Steeltoe.Integration.Support.IMessageBuilder(Of T).CopyHeaders
- uid: Steeltoe.Integration.Support.IMessageBuilder`1.CopyHeadersIfAbsent*
  commentId: Overload:Steeltoe.Integration.Support.IMessageBuilder`1.CopyHeadersIfAbsent
  name: CopyHeadersIfAbsent
  nameWithType: IMessageBuilder<T>.CopyHeadersIfAbsent
  fullName: Steeltoe.Integration.Support.IMessageBuilder<T>.CopyHeadersIfAbsent
  nameWithType.vb: IMessageBuilder(Of T).CopyHeadersIfAbsent
  fullName.vb: Steeltoe.Integration.Support.IMessageBuilder(Of T).CopyHeadersIfAbsent
- uid: Steeltoe.Integration.Support.IMessageBuilder`1.Build*
  commentId: Overload:Steeltoe.Integration.Support.IMessageBuilder`1.Build
  name: Build
  nameWithType: IMessageBuilder<T>.Build
  fullName: Steeltoe.Integration.Support.IMessageBuilder<T>.Build
  nameWithType.vb: IMessageBuilder(Of T).Build
  fullName.vb: Steeltoe.Integration.Support.IMessageBuilder(Of T).Build
- uid: Steeltoe.Messaging.IMessage{{T}}
  commentId: T:Steeltoe.Messaging.IMessage{``0}
  parent: Steeltoe.Messaging
  definition: Steeltoe.Messaging.IMessage`1
  name: IMessage<T>
  nameWithType: IMessage<T>
  fullName: Steeltoe.Messaging.IMessage<T>
  nameWithType.vb: IMessage(Of T)
  fullName.vb: Steeltoe.Messaging.IMessage(Of T)
  name.vb: IMessage(Of T)
  spec.csharp:
  - uid: Steeltoe.Messaging.IMessage`1
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Steeltoe.Messaging.IMessage`1
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.IMessage`1
  commentId: T:Steeltoe.Messaging.IMessage`1
  name: IMessage<T>
  nameWithType: IMessage<T>
  fullName: Steeltoe.Messaging.IMessage<T>
  nameWithType.vb: IMessage(Of T)
  fullName.vb: Steeltoe.Messaging.IMessage(Of T)
  name.vb: IMessage(Of T)
  spec.csharp:
  - uid: Steeltoe.Messaging.IMessage`1
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Steeltoe.Messaging.IMessage`1
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
