### YamlMime:ManagedReference
items:
- uid: Steeltoe.Connector.Services.RabbitMQServiceInfo
  commentId: T:Steeltoe.Connector.Services.RabbitMQServiceInfo
  id: RabbitMQServiceInfo
  parent: Steeltoe.Connector.Services
  children:
  - Steeltoe.Connector.Services.RabbitMQServiceInfo.#ctor(System.String,System.String)
  - Steeltoe.Connector.Services.RabbitMQServiceInfo.#ctor(System.String,System.String,System.Int32,System.String,System.String,System.String)
  - Steeltoe.Connector.Services.RabbitMQServiceInfo.#ctor(System.String,System.String,System.Int32,System.String,System.String,System.String,System.String)
  - Steeltoe.Connector.Services.RabbitMQServiceInfo.#ctor(System.String,System.String,System.String)
  - Steeltoe.Connector.Services.RabbitMQServiceInfo.#ctor(System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.String})
  - Steeltoe.Connector.Services.RabbitMQServiceInfo.AMQP_SCHEME
  - Steeltoe.Connector.Services.RabbitMQServiceInfo.AMQPS_SCHEME
  - Steeltoe.Connector.Services.RabbitMQServiceInfo.ManagementUri
  - Steeltoe.Connector.Services.RabbitMQServiceInfo.ManagementUris
  - Steeltoe.Connector.Services.RabbitMQServiceInfo.Uris
  - Steeltoe.Connector.Services.RabbitMQServiceInfo.VirtualHost
  langs:
  - csharp
  - vb
  name: RabbitMQServiceInfo
  nameWithType: RabbitMQServiceInfo
  fullName: Steeltoe.Connector.Services.RabbitMQServiceInfo
  type: Class
  source:
    remote:
      path: src/Connectors/src/Abstractions/Services/RabbitMQServiceInfo.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: RabbitMQServiceInfo
    path: ../Steeltoe/src/Connectors/src/Abstractions/Services/RabbitMQServiceInfo.cs
    startLine: 8
  assemblies:
  - Steeltoe.Connector.Abstractions
  namespace: Steeltoe.Connector.Services
  syntax:
    content: 'public class RabbitMQServiceInfo : UriServiceInfo, IServiceInfo'
    content.vb: >-
      Public Class RabbitMQServiceInfo

          Inherits UriServiceInfo

          Implements IServiceInfo
  inheritance:
  - System.Object
  - Steeltoe.Connector.Services.ServiceInfo
  - Steeltoe.Connector.Services.UriServiceInfo
  implements:
  - Steeltoe.Connector.Services.IServiceInfo
  inheritedMembers:
  - Steeltoe.Connector.Services.UriServiceInfo.Info
  - Steeltoe.Connector.Services.UriServiceInfo.Uri
  - Steeltoe.Connector.Services.UriServiceInfo.UserName
  - Steeltoe.Connector.Services.UriServiceInfo.Password
  - Steeltoe.Connector.Services.UriServiceInfo.Host
  - Steeltoe.Connector.Services.UriServiceInfo.Hosts
  - Steeltoe.Connector.Services.UriServiceInfo.Port
  - Steeltoe.Connector.Services.UriServiceInfo.Path
  - Steeltoe.Connector.Services.UriServiceInfo.Query
  - Steeltoe.Connector.Services.UriServiceInfo.Scheme
  - Steeltoe.Connector.Services.ServiceInfo.Id
  - Steeltoe.Connector.Services.ServiceInfo.ApplicationInfo
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Steeltoe.Connector.Services.RabbitMQServiceInfo.AMQP_SCHEME
  commentId: F:Steeltoe.Connector.Services.RabbitMQServiceInfo.AMQP_SCHEME
  id: AMQP_SCHEME
  parent: Steeltoe.Connector.Services.RabbitMQServiceInfo
  langs:
  - csharp
  - vb
  name: AMQP_SCHEME
  nameWithType: RabbitMQServiceInfo.AMQP_SCHEME
  fullName: Steeltoe.Connector.Services.RabbitMQServiceInfo.AMQP_SCHEME
  type: Field
  source:
    remote:
      path: src/Connectors/src/Abstractions/Services/RabbitMQServiceInfo.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: AMQP_SCHEME
    path: ../Steeltoe/src/Connectors/src/Abstractions/Services/RabbitMQServiceInfo.cs
    startLine: 10
  assemblies:
  - Steeltoe.Connector.Abstractions
  namespace: Steeltoe.Connector.Services
  syntax:
    content: public const string AMQP_SCHEME = "amqp"
    return:
      type: System.String
    content.vb: Public Const AMQP_SCHEME As String = "amqp"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Steeltoe.Connector.Services.RabbitMQServiceInfo.AMQPS_SCHEME
  commentId: F:Steeltoe.Connector.Services.RabbitMQServiceInfo.AMQPS_SCHEME
  id: AMQPS_SCHEME
  parent: Steeltoe.Connector.Services.RabbitMQServiceInfo
  langs:
  - csharp
  - vb
  name: AMQPS_SCHEME
  nameWithType: RabbitMQServiceInfo.AMQPS_SCHEME
  fullName: Steeltoe.Connector.Services.RabbitMQServiceInfo.AMQPS_SCHEME
  type: Field
  source:
    remote:
      path: src/Connectors/src/Abstractions/Services/RabbitMQServiceInfo.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: AMQPS_SCHEME
    path: ../Steeltoe/src/Connectors/src/Abstractions/Services/RabbitMQServiceInfo.cs
    startLine: 11
  assemblies:
  - Steeltoe.Connector.Abstractions
  namespace: Steeltoe.Connector.Services
  syntax:
    content: public const string AMQPS_SCHEME = "amqps"
    return:
      type: System.String
    content.vb: Public Const AMQPS_SCHEME As String = "amqps"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Steeltoe.Connector.Services.RabbitMQServiceInfo.#ctor(System.String,System.String,System.Int32,System.String,System.String,System.String)
  commentId: M:Steeltoe.Connector.Services.RabbitMQServiceInfo.#ctor(System.String,System.String,System.Int32,System.String,System.String,System.String)
  id: '#ctor(System.String,System.String,System.Int32,System.String,System.String,System.String)'
  parent: Steeltoe.Connector.Services.RabbitMQServiceInfo
  langs:
  - csharp
  - vb
  name: RabbitMQServiceInfo(String, String, Int32, String, String, String)
  nameWithType: RabbitMQServiceInfo.RabbitMQServiceInfo(String, String, Int32, String, String, String)
  fullName: Steeltoe.Connector.Services.RabbitMQServiceInfo.RabbitMQServiceInfo(System.String, System.String, System.Int32, System.String, System.String, System.String)
  type: Constructor
  source:
    remote:
      path: src/Connectors/src/Abstractions/Services/RabbitMQServiceInfo.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: .ctor
    path: ../Steeltoe/src/Connectors/src/Abstractions/Services/RabbitMQServiceInfo.cs
    startLine: 13
  assemblies:
  - Steeltoe.Connector.Abstractions
  namespace: Steeltoe.Connector.Services
  syntax:
    content: public RabbitMQServiceInfo(string id, string host, int port, string username, string password, string virtualHost)
    parameters:
    - id: id
      type: System.String
    - id: host
      type: System.String
    - id: port
      type: System.Int32
    - id: username
      type: System.String
    - id: password
      type: System.String
    - id: virtualHost
      type: System.String
    content.vb: Public Sub New(id As String, host As String, port As Integer, username As String, password As String, virtualHost As String)
  overload: Steeltoe.Connector.Services.RabbitMQServiceInfo.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Steeltoe.Connector.Services.RabbitMQServiceInfo.#ctor(System.String,System.String,System.Int32,System.String,System.String,System.String,System.String)
  commentId: M:Steeltoe.Connector.Services.RabbitMQServiceInfo.#ctor(System.String,System.String,System.Int32,System.String,System.String,System.String,System.String)
  id: '#ctor(System.String,System.String,System.Int32,System.String,System.String,System.String,System.String)'
  parent: Steeltoe.Connector.Services.RabbitMQServiceInfo
  langs:
  - csharp
  - vb
  name: RabbitMQServiceInfo(String, String, Int32, String, String, String, String)
  nameWithType: RabbitMQServiceInfo.RabbitMQServiceInfo(String, String, Int32, String, String, String, String)
  fullName: Steeltoe.Connector.Services.RabbitMQServiceInfo.RabbitMQServiceInfo(System.String, System.String, System.Int32, System.String, System.String, System.String, System.String)
  type: Constructor
  source:
    remote:
      path: src/Connectors/src/Abstractions/Services/RabbitMQServiceInfo.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: .ctor
    path: ../Steeltoe/src/Connectors/src/Abstractions/Services/RabbitMQServiceInfo.cs
    startLine: 18
  assemblies:
  - Steeltoe.Connector.Abstractions
  namespace: Steeltoe.Connector.Services
  syntax:
    content: public RabbitMQServiceInfo(string id, string host, int port, string username, string password, string virtualHost, string managementUri)
    parameters:
    - id: id
      type: System.String
    - id: host
      type: System.String
    - id: port
      type: System.Int32
    - id: username
      type: System.String
    - id: password
      type: System.String
    - id: virtualHost
      type: System.String
    - id: managementUri
      type: System.String
    content.vb: Public Sub New(id As String, host As String, port As Integer, username As String, password As String, virtualHost As String, managementUri As String)
  overload: Steeltoe.Connector.Services.RabbitMQServiceInfo.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Steeltoe.Connector.Services.RabbitMQServiceInfo.#ctor(System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.String})
  commentId: M:Steeltoe.Connector.Services.RabbitMQServiceInfo.#ctor(System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.String})
  id: '#ctor(System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.String})'
  parent: Steeltoe.Connector.Services.RabbitMQServiceInfo
  langs:
  - csharp
  - vb
  name: RabbitMQServiceInfo(String, String, String, List<String>, List<String>)
  nameWithType: RabbitMQServiceInfo.RabbitMQServiceInfo(String, String, String, List<String>, List<String>)
  fullName: Steeltoe.Connector.Services.RabbitMQServiceInfo.RabbitMQServiceInfo(System.String, System.String, System.String, System.Collections.Generic.List<System.String>, System.Collections.Generic.List<System.String>)
  type: Constructor
  source:
    remote:
      path: src/Connectors/src/Abstractions/Services/RabbitMQServiceInfo.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: .ctor
    path: ../Steeltoe/src/Connectors/src/Abstractions/Services/RabbitMQServiceInfo.cs
    startLine: 24
  assemblies:
  - Steeltoe.Connector.Abstractions
  namespace: Steeltoe.Connector.Services
  syntax:
    content: public RabbitMQServiceInfo(string id, string uri, string managementUri, List<string> uris, List<string> managementUris)
    parameters:
    - id: id
      type: System.String
    - id: uri
      type: System.String
    - id: managementUri
      type: System.String
    - id: uris
      type: System.Collections.Generic.List{System.String}
    - id: managementUris
      type: System.Collections.Generic.List{System.String}
    content.vb: Public Sub New(id As String, uri As String, managementUri As String, uris As List(Of String), managementUris As List(Of String))
  overload: Steeltoe.Connector.Services.RabbitMQServiceInfo.#ctor*
  nameWithType.vb: RabbitMQServiceInfo.RabbitMQServiceInfo(String, String, String, List(Of String), List(Of String))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Steeltoe.Connector.Services.RabbitMQServiceInfo.RabbitMQServiceInfo(System.String, System.String, System.String, System.Collections.Generic.List(Of System.String), System.Collections.Generic.List(Of System.String))
  name.vb: RabbitMQServiceInfo(String, String, String, List(Of String), List(Of String))
- uid: Steeltoe.Connector.Services.RabbitMQServiceInfo.#ctor(System.String,System.String)
  commentId: M:Steeltoe.Connector.Services.RabbitMQServiceInfo.#ctor(System.String,System.String)
  id: '#ctor(System.String,System.String)'
  parent: Steeltoe.Connector.Services.RabbitMQServiceInfo
  langs:
  - csharp
  - vb
  name: RabbitMQServiceInfo(String, String)
  nameWithType: RabbitMQServiceInfo.RabbitMQServiceInfo(String, String)
  fullName: Steeltoe.Connector.Services.RabbitMQServiceInfo.RabbitMQServiceInfo(System.String, System.String)
  type: Constructor
  source:
    remote:
      path: src/Connectors/src/Abstractions/Services/RabbitMQServiceInfo.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: .ctor
    path: ../Steeltoe/src/Connectors/src/Abstractions/Services/RabbitMQServiceInfo.cs
    startLine: 31
  assemblies:
  - Steeltoe.Connector.Abstractions
  namespace: Steeltoe.Connector.Services
  syntax:
    content: public RabbitMQServiceInfo(string id, string uri)
    parameters:
    - id: id
      type: System.String
    - id: uri
      type: System.String
    content.vb: Public Sub New(id As String, uri As String)
  overload: Steeltoe.Connector.Services.RabbitMQServiceInfo.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Steeltoe.Connector.Services.RabbitMQServiceInfo.#ctor(System.String,System.String,System.String)
  commentId: M:Steeltoe.Connector.Services.RabbitMQServiceInfo.#ctor(System.String,System.String,System.String)
  id: '#ctor(System.String,System.String,System.String)'
  parent: Steeltoe.Connector.Services.RabbitMQServiceInfo
  langs:
  - csharp
  - vb
  name: RabbitMQServiceInfo(String, String, String)
  nameWithType: RabbitMQServiceInfo.RabbitMQServiceInfo(String, String, String)
  fullName: Steeltoe.Connector.Services.RabbitMQServiceInfo.RabbitMQServiceInfo(System.String, System.String, System.String)
  type: Constructor
  source:
    remote:
      path: src/Connectors/src/Abstractions/Services/RabbitMQServiceInfo.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: .ctor
    path: ../Steeltoe/src/Connectors/src/Abstractions/Services/RabbitMQServiceInfo.cs
    startLine: 36
  assemblies:
  - Steeltoe.Connector.Abstractions
  namespace: Steeltoe.Connector.Services
  syntax:
    content: public RabbitMQServiceInfo(string id, string uri, string managementUri)
    parameters:
    - id: id
      type: System.String
    - id: uri
      type: System.String
    - id: managementUri
      type: System.String
    content.vb: Public Sub New(id As String, uri As String, managementUri As String)
  overload: Steeltoe.Connector.Services.RabbitMQServiceInfo.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Steeltoe.Connector.Services.RabbitMQServiceInfo.ManagementUri
  commentId: P:Steeltoe.Connector.Services.RabbitMQServiceInfo.ManagementUri
  id: ManagementUri
  parent: Steeltoe.Connector.Services.RabbitMQServiceInfo
  langs:
  - csharp
  - vb
  name: ManagementUri
  nameWithType: RabbitMQServiceInfo.ManagementUri
  fullName: Steeltoe.Connector.Services.RabbitMQServiceInfo.ManagementUri
  type: Property
  source:
    remote:
      path: src/Connectors/src/Abstractions/Services/RabbitMQServiceInfo.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: ManagementUri
    path: ../Steeltoe/src/Connectors/src/Abstractions/Services/RabbitMQServiceInfo.cs
    startLine: 42
  assemblies:
  - Steeltoe.Connector.Abstractions
  namespace: Steeltoe.Connector.Services
  syntax:
    content: public string ManagementUri { get; protected set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property ManagementUri As String
  overload: Steeltoe.Connector.Services.RabbitMQServiceInfo.ManagementUri*
  modifiers.csharp:
  - public
  - get
  - protected set
  modifiers.vb:
  - Public
  - Get
  - Protected Set
- uid: Steeltoe.Connector.Services.RabbitMQServiceInfo.Uris
  commentId: P:Steeltoe.Connector.Services.RabbitMQServiceInfo.Uris
  id: Uris
  parent: Steeltoe.Connector.Services.RabbitMQServiceInfo
  langs:
  - csharp
  - vb
  name: Uris
  nameWithType: RabbitMQServiceInfo.Uris
  fullName: Steeltoe.Connector.Services.RabbitMQServiceInfo.Uris
  type: Property
  source:
    remote:
      path: src/Connectors/src/Abstractions/Services/RabbitMQServiceInfo.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Uris
    path: ../Steeltoe/src/Connectors/src/Abstractions/Services/RabbitMQServiceInfo.cs
    startLine: 44
  assemblies:
  - Steeltoe.Connector.Abstractions
  namespace: Steeltoe.Connector.Services
  syntax:
    content: public List<string> Uris { get; protected set; }
    parameters: []
    return:
      type: System.Collections.Generic.List{System.String}
    content.vb: Public Property Uris As List(Of String)
  overload: Steeltoe.Connector.Services.RabbitMQServiceInfo.Uris*
  modifiers.csharp:
  - public
  - get
  - protected set
  modifiers.vb:
  - Public
  - Get
  - Protected Set
- uid: Steeltoe.Connector.Services.RabbitMQServiceInfo.ManagementUris
  commentId: P:Steeltoe.Connector.Services.RabbitMQServiceInfo.ManagementUris
  id: ManagementUris
  parent: Steeltoe.Connector.Services.RabbitMQServiceInfo
  langs:
  - csharp
  - vb
  name: ManagementUris
  nameWithType: RabbitMQServiceInfo.ManagementUris
  fullName: Steeltoe.Connector.Services.RabbitMQServiceInfo.ManagementUris
  type: Property
  source:
    remote:
      path: src/Connectors/src/Abstractions/Services/RabbitMQServiceInfo.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: ManagementUris
    path: ../Steeltoe/src/Connectors/src/Abstractions/Services/RabbitMQServiceInfo.cs
    startLine: 46
  assemblies:
  - Steeltoe.Connector.Abstractions
  namespace: Steeltoe.Connector.Services
  syntax:
    content: public List<string> ManagementUris { get; protected set; }
    parameters: []
    return:
      type: System.Collections.Generic.List{System.String}
    content.vb: Public Property ManagementUris As List(Of String)
  overload: Steeltoe.Connector.Services.RabbitMQServiceInfo.ManagementUris*
  modifiers.csharp:
  - public
  - get
  - protected set
  modifiers.vb:
  - Public
  - Get
  - Protected Set
- uid: Steeltoe.Connector.Services.RabbitMQServiceInfo.VirtualHost
  commentId: P:Steeltoe.Connector.Services.RabbitMQServiceInfo.VirtualHost
  id: VirtualHost
  parent: Steeltoe.Connector.Services.RabbitMQServiceInfo
  langs:
  - csharp
  - vb
  name: VirtualHost
  nameWithType: RabbitMQServiceInfo.VirtualHost
  fullName: Steeltoe.Connector.Services.RabbitMQServiceInfo.VirtualHost
  type: Property
  source:
    remote:
      path: src/Connectors/src/Abstractions/Services/RabbitMQServiceInfo.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: VirtualHost
    path: ../Steeltoe/src/Connectors/src/Abstractions/Services/RabbitMQServiceInfo.cs
    startLine: 48
  assemblies:
  - Steeltoe.Connector.Abstractions
  namespace: Steeltoe.Connector.Services
  syntax:
    content: public string VirtualHost { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property VirtualHost As String
  overload: Steeltoe.Connector.Services.RabbitMQServiceInfo.VirtualHost*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: Steeltoe.Connector.Services
  commentId: N:Steeltoe.Connector.Services
  name: Steeltoe.Connector.Services
  nameWithType: Steeltoe.Connector.Services
  fullName: Steeltoe.Connector.Services
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Steeltoe.Connector.Services.ServiceInfo
  commentId: T:Steeltoe.Connector.Services.ServiceInfo
  parent: Steeltoe.Connector.Services
  name: ServiceInfo
  nameWithType: ServiceInfo
  fullName: Steeltoe.Connector.Services.ServiceInfo
- uid: Steeltoe.Connector.Services.UriServiceInfo
  commentId: T:Steeltoe.Connector.Services.UriServiceInfo
  parent: Steeltoe.Connector.Services
  name: UriServiceInfo
  nameWithType: UriServiceInfo
  fullName: Steeltoe.Connector.Services.UriServiceInfo
- uid: Steeltoe.Connector.Services.IServiceInfo
  commentId: T:Steeltoe.Connector.Services.IServiceInfo
  parent: Steeltoe.Connector.Services
  name: IServiceInfo
  nameWithType: IServiceInfo
  fullName: Steeltoe.Connector.Services.IServiceInfo
- uid: Steeltoe.Connector.Services.UriServiceInfo.Info
  commentId: P:Steeltoe.Connector.Services.UriServiceInfo.Info
  parent: Steeltoe.Connector.Services.UriServiceInfo
  name: Info
  nameWithType: UriServiceInfo.Info
  fullName: Steeltoe.Connector.Services.UriServiceInfo.Info
- uid: Steeltoe.Connector.Services.UriServiceInfo.Uri
  commentId: P:Steeltoe.Connector.Services.UriServiceInfo.Uri
  parent: Steeltoe.Connector.Services.UriServiceInfo
  name: Uri
  nameWithType: UriServiceInfo.Uri
  fullName: Steeltoe.Connector.Services.UriServiceInfo.Uri
- uid: Steeltoe.Connector.Services.UriServiceInfo.UserName
  commentId: P:Steeltoe.Connector.Services.UriServiceInfo.UserName
  parent: Steeltoe.Connector.Services.UriServiceInfo
  name: UserName
  nameWithType: UriServiceInfo.UserName
  fullName: Steeltoe.Connector.Services.UriServiceInfo.UserName
- uid: Steeltoe.Connector.Services.UriServiceInfo.Password
  commentId: P:Steeltoe.Connector.Services.UriServiceInfo.Password
  parent: Steeltoe.Connector.Services.UriServiceInfo
  name: Password
  nameWithType: UriServiceInfo.Password
  fullName: Steeltoe.Connector.Services.UriServiceInfo.Password
- uid: Steeltoe.Connector.Services.UriServiceInfo.Host
  commentId: P:Steeltoe.Connector.Services.UriServiceInfo.Host
  parent: Steeltoe.Connector.Services.UriServiceInfo
  name: Host
  nameWithType: UriServiceInfo.Host
  fullName: Steeltoe.Connector.Services.UriServiceInfo.Host
- uid: Steeltoe.Connector.Services.UriServiceInfo.Hosts
  commentId: P:Steeltoe.Connector.Services.UriServiceInfo.Hosts
  parent: Steeltoe.Connector.Services.UriServiceInfo
  name: Hosts
  nameWithType: UriServiceInfo.Hosts
  fullName: Steeltoe.Connector.Services.UriServiceInfo.Hosts
- uid: Steeltoe.Connector.Services.UriServiceInfo.Port
  commentId: P:Steeltoe.Connector.Services.UriServiceInfo.Port
  parent: Steeltoe.Connector.Services.UriServiceInfo
  name: Port
  nameWithType: UriServiceInfo.Port
  fullName: Steeltoe.Connector.Services.UriServiceInfo.Port
- uid: Steeltoe.Connector.Services.UriServiceInfo.Path
  commentId: P:Steeltoe.Connector.Services.UriServiceInfo.Path
  parent: Steeltoe.Connector.Services.UriServiceInfo
  name: Path
  nameWithType: UriServiceInfo.Path
  fullName: Steeltoe.Connector.Services.UriServiceInfo.Path
- uid: Steeltoe.Connector.Services.UriServiceInfo.Query
  commentId: P:Steeltoe.Connector.Services.UriServiceInfo.Query
  parent: Steeltoe.Connector.Services.UriServiceInfo
  name: Query
  nameWithType: UriServiceInfo.Query
  fullName: Steeltoe.Connector.Services.UriServiceInfo.Query
- uid: Steeltoe.Connector.Services.UriServiceInfo.Scheme
  commentId: P:Steeltoe.Connector.Services.UriServiceInfo.Scheme
  parent: Steeltoe.Connector.Services.UriServiceInfo
  name: Scheme
  nameWithType: UriServiceInfo.Scheme
  fullName: Steeltoe.Connector.Services.UriServiceInfo.Scheme
- uid: Steeltoe.Connector.Services.ServiceInfo.Id
  commentId: P:Steeltoe.Connector.Services.ServiceInfo.Id
  parent: Steeltoe.Connector.Services.ServiceInfo
  name: Id
  nameWithType: ServiceInfo.Id
  fullName: Steeltoe.Connector.Services.ServiceInfo.Id
- uid: Steeltoe.Connector.Services.ServiceInfo.ApplicationInfo
  commentId: P:Steeltoe.Connector.Services.ServiceInfo.ApplicationInfo
  parent: Steeltoe.Connector.Services.ServiceInfo
  name: ApplicationInfo
  nameWithType: ServiceInfo.ApplicationInfo
  fullName: Steeltoe.Connector.Services.ServiceInfo.ApplicationInfo
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Steeltoe.Connector.Services.RabbitMQServiceInfo.#ctor*
  commentId: Overload:Steeltoe.Connector.Services.RabbitMQServiceInfo.#ctor
  name: RabbitMQServiceInfo
  nameWithType: RabbitMQServiceInfo.RabbitMQServiceInfo
  fullName: Steeltoe.Connector.Services.RabbitMQServiceInfo.RabbitMQServiceInfo
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Collections.Generic.List{System.String}
  commentId: T:System.Collections.Generic.List{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<String>
  nameWithType: List<String>
  fullName: System.Collections.Generic.List<System.String>
  nameWithType.vb: List(Of String)
  fullName.vb: System.Collections.Generic.List(Of System.String)
  name.vb: List(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Steeltoe.Connector.Services.RabbitMQServiceInfo.ManagementUri*
  commentId: Overload:Steeltoe.Connector.Services.RabbitMQServiceInfo.ManagementUri
  name: ManagementUri
  nameWithType: RabbitMQServiceInfo.ManagementUri
  fullName: Steeltoe.Connector.Services.RabbitMQServiceInfo.ManagementUri
- uid: Steeltoe.Connector.Services.RabbitMQServiceInfo.Uris*
  commentId: Overload:Steeltoe.Connector.Services.RabbitMQServiceInfo.Uris
  name: Uris
  nameWithType: RabbitMQServiceInfo.Uris
  fullName: Steeltoe.Connector.Services.RabbitMQServiceInfo.Uris
- uid: Steeltoe.Connector.Services.RabbitMQServiceInfo.ManagementUris*
  commentId: Overload:Steeltoe.Connector.Services.RabbitMQServiceInfo.ManagementUris
  name: ManagementUris
  nameWithType: RabbitMQServiceInfo.ManagementUris
  fullName: Steeltoe.Connector.Services.RabbitMQServiceInfo.ManagementUris
- uid: Steeltoe.Connector.Services.RabbitMQServiceInfo.VirtualHost*
  commentId: Overload:Steeltoe.Connector.Services.RabbitMQServiceInfo.VirtualHost
  name: VirtualHost
  nameWithType: RabbitMQServiceInfo.VirtualHost
  fullName: Steeltoe.Connector.Services.RabbitMQServiceInfo.VirtualHost
