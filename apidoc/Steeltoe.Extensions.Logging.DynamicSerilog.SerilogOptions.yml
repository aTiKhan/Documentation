### YamlMime:ManagedReference
items:
- uid: Steeltoe.Extensions.Logging.DynamicSerilog.SerilogOptions
  commentId: T:Steeltoe.Extensions.Logging.DynamicSerilog.SerilogOptions
  id: SerilogOptions
  parent: Steeltoe.Extensions.Logging.DynamicSerilog
  children:
  - Steeltoe.Extensions.Logging.DynamicSerilog.SerilogOptions.#ctor(IConfiguration)
  - Steeltoe.Extensions.Logging.DynamicSerilog.SerilogOptions.ConfigPath
  - Steeltoe.Extensions.Logging.DynamicSerilog.SerilogOptions.FullnameExclusions
  - Steeltoe.Extensions.Logging.DynamicSerilog.SerilogOptions.MinimumLevel
  - Steeltoe.Extensions.Logging.DynamicSerilog.SerilogOptions.SubloggerConfigKeyExclusions
  langs:
  - csharp
  - vb
  name: SerilogOptions
  nameWithType: SerilogOptions
  fullName: Steeltoe.Extensions.Logging.DynamicSerilog.SerilogOptions
  type: Class
  source:
    remote:
      path: src/Logging/src/DynamicSerilogBase/SerilogOptions.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: SerilogOptions
    path: ../Steeltoe/src/Logging/src/DynamicSerilogBase/SerilogOptions.cs
    startLine: 14
  assemblies:
  - Steeltoe.Extensions.Logging.DynamicSerilogBase
  namespace: Steeltoe.Extensions.Logging.DynamicSerilog
  summary: "\nImplements a subset of the Serilog Options needed for SerilogDynamicProvider\n"
  example: []
  syntax:
    content: 'public class SerilogOptions : ISerilogOptions'
    content.vb: >-
      Public Class SerilogOptions

          Implements ISerilogOptions
  inheritance:
  - System.Object
  implements:
  - Steeltoe.Extensions.Logging.DynamicSerilog.ISerilogOptions
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Steeltoe.Extensions.Logging.DynamicSerilog.SerilogOptions.ConfigPath
  commentId: P:Steeltoe.Extensions.Logging.DynamicSerilog.SerilogOptions.ConfigPath
  id: ConfigPath
  parent: Steeltoe.Extensions.Logging.DynamicSerilog.SerilogOptions
  langs:
  - csharp
  - vb
  name: ConfigPath
  nameWithType: SerilogOptions.ConfigPath
  fullName: Steeltoe.Extensions.Logging.DynamicSerilog.SerilogOptions.ConfigPath
  type: Property
  source:
    remote:
      path: src/Logging/src/DynamicSerilogBase/SerilogOptions.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: ConfigPath
    path: ../Steeltoe/src/Logging/src/DynamicSerilogBase/SerilogOptions.cs
    startLine: 16
  assemblies:
  - Steeltoe.Extensions.Logging.DynamicSerilogBase
  namespace: Steeltoe.Extensions.Logging.DynamicSerilog
  syntax:
    content: public string ConfigPath { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property ConfigPath As String
  overload: Steeltoe.Extensions.Logging.DynamicSerilog.SerilogOptions.ConfigPath*
  implements:
  - Steeltoe.Extensions.Logging.DynamicSerilog.ISerilogOptions.ConfigPath
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Steeltoe.Extensions.Logging.DynamicSerilog.SerilogOptions.MinimumLevel
  commentId: P:Steeltoe.Extensions.Logging.DynamicSerilog.SerilogOptions.MinimumLevel
  id: MinimumLevel
  parent: Steeltoe.Extensions.Logging.DynamicSerilog.SerilogOptions
  langs:
  - csharp
  - vb
  name: MinimumLevel
  nameWithType: SerilogOptions.MinimumLevel
  fullName: Steeltoe.Extensions.Logging.DynamicSerilog.SerilogOptions.MinimumLevel
  type: Property
  source:
    remote:
      path: src/Logging/src/DynamicSerilogBase/SerilogOptions.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: MinimumLevel
    path: ../Steeltoe/src/Logging/src/DynamicSerilogBase/SerilogOptions.cs
    startLine: 22
  assemblies:
  - Steeltoe.Extensions.Logging.DynamicSerilogBase
  namespace: Steeltoe.Extensions.Logging.DynamicSerilog
  summary: "\nGets or sets the minimum level for the root logger (and the &quot;Default&quot;).\nLimits the verbosity of all other overrides to this setting\n"
  example: []
  syntax:
    content: public MinimumLevel MinimumLevel { get; set; }
    parameters: []
    return:
      type: Steeltoe.Extensions.Logging.DynamicSerilog.MinimumLevel
    content.vb: Public Property MinimumLevel As MinimumLevel
  overload: Steeltoe.Extensions.Logging.DynamicSerilog.SerilogOptions.MinimumLevel*
  implements:
  - Steeltoe.Extensions.Logging.DynamicSerilog.ISerilogOptions.MinimumLevel
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Steeltoe.Extensions.Logging.DynamicSerilog.SerilogOptions.SubloggerConfigKeyExclusions
  commentId: P:Steeltoe.Extensions.Logging.DynamicSerilog.SerilogOptions.SubloggerConfigKeyExclusions
  id: SubloggerConfigKeyExclusions
  parent: Steeltoe.Extensions.Logging.DynamicSerilog.SerilogOptions
  langs:
  - csharp
  - vb
  name: SubloggerConfigKeyExclusions
  nameWithType: SerilogOptions.SubloggerConfigKeyExclusions
  fullName: Steeltoe.Extensions.Logging.DynamicSerilog.SerilogOptions.SubloggerConfigKeyExclusions
  type: Property
  source:
    remote:
      path: src/Logging/src/DynamicSerilogBase/SerilogOptions.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: SubloggerConfigKeyExclusions
    path: ../Steeltoe/src/Logging/src/DynamicSerilogBase/SerilogOptions.cs
    startLine: 24
  assemblies:
  - Steeltoe.Extensions.Logging.DynamicSerilogBase
  namespace: Steeltoe.Extensions.Logging.DynamicSerilog
  syntax:
    content: public IEnumerable<string> SubloggerConfigKeyExclusions { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{System.String}
    content.vb: Public Property SubloggerConfigKeyExclusions As IEnumerable(Of String)
  overload: Steeltoe.Extensions.Logging.DynamicSerilog.SerilogOptions.SubloggerConfigKeyExclusions*
  implements:
  - Steeltoe.Extensions.Logging.DynamicSerilog.ISerilogOptions.SubloggerConfigKeyExclusions
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Steeltoe.Extensions.Logging.DynamicSerilog.SerilogOptions.#ctor(IConfiguration)
  commentId: M:Steeltoe.Extensions.Logging.DynamicSerilog.SerilogOptions.#ctor(IConfiguration)
  id: '#ctor(IConfiguration)'
  parent: Steeltoe.Extensions.Logging.DynamicSerilog.SerilogOptions
  langs:
  - csharp
  - vb
  name: SerilogOptions(IConfiguration)
  nameWithType: SerilogOptions.SerilogOptions(IConfiguration)
  fullName: Steeltoe.Extensions.Logging.DynamicSerilog.SerilogOptions.SerilogOptions(IConfiguration)
  type: Constructor
  source:
    remote:
      path: src/Logging/src/DynamicSerilogBase/SerilogOptions.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: .ctor
    path: ../Steeltoe/src/Logging/src/DynamicSerilogBase/SerilogOptions.cs
    startLine: 26
  assemblies:
  - Steeltoe.Extensions.Logging.DynamicSerilogBase
  namespace: Steeltoe.Extensions.Logging.DynamicSerilog
  syntax:
    content: public SerilogOptions(IConfiguration configuration)
    parameters:
    - id: configuration
      type: IConfiguration
    content.vb: Public Sub New(configuration As IConfiguration)
  overload: Steeltoe.Extensions.Logging.DynamicSerilog.SerilogOptions.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Steeltoe.Extensions.Logging.DynamicSerilog.SerilogOptions.FullnameExclusions
  commentId: P:Steeltoe.Extensions.Logging.DynamicSerilog.SerilogOptions.FullnameExclusions
  id: FullnameExclusions
  parent: Steeltoe.Extensions.Logging.DynamicSerilog.SerilogOptions
  langs:
  - csharp
  - vb
  name: FullnameExclusions
  nameWithType: SerilogOptions.FullnameExclusions
  fullName: Steeltoe.Extensions.Logging.DynamicSerilog.SerilogOptions.FullnameExclusions
  type: Property
  source:
    remote:
      path: src/Logging/src/DynamicSerilogBase/SerilogOptions.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: FullnameExclusions
    path: ../Steeltoe/src/Logging/src/DynamicSerilogBase/SerilogOptions.cs
    startLine: 45
  assemblies:
  - Steeltoe.Extensions.Logging.DynamicSerilogBase
  namespace: Steeltoe.Extensions.Logging.DynamicSerilog
  syntax:
    content: public IEnumerable<string> FullnameExclusions { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{System.String}
    content.vb: Public ReadOnly Property FullnameExclusions As IEnumerable(Of String)
  overload: Steeltoe.Extensions.Logging.DynamicSerilog.SerilogOptions.FullnameExclusions*
  implements:
  - Steeltoe.Extensions.Logging.DynamicSerilog.ISerilogOptions.FullnameExclusions
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: Steeltoe.Extensions.Logging.DynamicSerilog
  commentId: N:Steeltoe.Extensions.Logging.DynamicSerilog
  name: Steeltoe.Extensions.Logging.DynamicSerilog
  nameWithType: Steeltoe.Extensions.Logging.DynamicSerilog
  fullName: Steeltoe.Extensions.Logging.DynamicSerilog
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Steeltoe.Extensions.Logging.DynamicSerilog.ISerilogOptions
  commentId: T:Steeltoe.Extensions.Logging.DynamicSerilog.ISerilogOptions
  parent: Steeltoe.Extensions.Logging.DynamicSerilog
  name: ISerilogOptions
  nameWithType: ISerilogOptions
  fullName: Steeltoe.Extensions.Logging.DynamicSerilog.ISerilogOptions
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Steeltoe.Extensions.Logging.DynamicSerilog.SerilogOptions.ConfigPath*
  commentId: Overload:Steeltoe.Extensions.Logging.DynamicSerilog.SerilogOptions.ConfigPath
  name: ConfigPath
  nameWithType: SerilogOptions.ConfigPath
  fullName: Steeltoe.Extensions.Logging.DynamicSerilog.SerilogOptions.ConfigPath
- uid: Steeltoe.Extensions.Logging.DynamicSerilog.ISerilogOptions.ConfigPath
  commentId: P:Steeltoe.Extensions.Logging.DynamicSerilog.ISerilogOptions.ConfigPath
  parent: Steeltoe.Extensions.Logging.DynamicSerilog.ISerilogOptions
  name: ConfigPath
  nameWithType: ISerilogOptions.ConfigPath
  fullName: Steeltoe.Extensions.Logging.DynamicSerilog.ISerilogOptions.ConfigPath
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Steeltoe.Extensions.Logging.DynamicSerilog.SerilogOptions.MinimumLevel*
  commentId: Overload:Steeltoe.Extensions.Logging.DynamicSerilog.SerilogOptions.MinimumLevel
  name: MinimumLevel
  nameWithType: SerilogOptions.MinimumLevel
  fullName: Steeltoe.Extensions.Logging.DynamicSerilog.SerilogOptions.MinimumLevel
- uid: Steeltoe.Extensions.Logging.DynamicSerilog.ISerilogOptions.MinimumLevel
  commentId: P:Steeltoe.Extensions.Logging.DynamicSerilog.ISerilogOptions.MinimumLevel
  parent: Steeltoe.Extensions.Logging.DynamicSerilog.ISerilogOptions
  name: MinimumLevel
  nameWithType: ISerilogOptions.MinimumLevel
  fullName: Steeltoe.Extensions.Logging.DynamicSerilog.ISerilogOptions.MinimumLevel
- uid: Steeltoe.Extensions.Logging.DynamicSerilog.MinimumLevel
  commentId: T:Steeltoe.Extensions.Logging.DynamicSerilog.MinimumLevel
  parent: Steeltoe.Extensions.Logging.DynamicSerilog
  name: MinimumLevel
  nameWithType: MinimumLevel
  fullName: Steeltoe.Extensions.Logging.DynamicSerilog.MinimumLevel
- uid: Steeltoe.Extensions.Logging.DynamicSerilog.SerilogOptions.SubloggerConfigKeyExclusions*
  commentId: Overload:Steeltoe.Extensions.Logging.DynamicSerilog.SerilogOptions.SubloggerConfigKeyExclusions
  name: SubloggerConfigKeyExclusions
  nameWithType: SerilogOptions.SubloggerConfigKeyExclusions
  fullName: Steeltoe.Extensions.Logging.DynamicSerilog.SerilogOptions.SubloggerConfigKeyExclusions
- uid: Steeltoe.Extensions.Logging.DynamicSerilog.ISerilogOptions.SubloggerConfigKeyExclusions
  commentId: P:Steeltoe.Extensions.Logging.DynamicSerilog.ISerilogOptions.SubloggerConfigKeyExclusions
  parent: Steeltoe.Extensions.Logging.DynamicSerilog.ISerilogOptions
  name: SubloggerConfigKeyExclusions
  nameWithType: ISerilogOptions.SubloggerConfigKeyExclusions
  fullName: Steeltoe.Extensions.Logging.DynamicSerilog.ISerilogOptions.SubloggerConfigKeyExclusions
- uid: System.Collections.Generic.IEnumerable{System.String}
  commentId: T:System.Collections.Generic.IEnumerable{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<String>
  nameWithType: IEnumerable<String>
  fullName: System.Collections.Generic.IEnumerable<System.String>
  nameWithType.vb: IEnumerable(Of String)
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.String)
  name.vb: IEnumerable(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Steeltoe.Extensions.Logging.DynamicSerilog.SerilogOptions.#ctor*
  commentId: Overload:Steeltoe.Extensions.Logging.DynamicSerilog.SerilogOptions.#ctor
  name: SerilogOptions
  nameWithType: SerilogOptions.SerilogOptions
  fullName: Steeltoe.Extensions.Logging.DynamicSerilog.SerilogOptions.SerilogOptions
- uid: IConfiguration
  isExternal: true
  name: IConfiguration
  nameWithType: IConfiguration
  fullName: IConfiguration
- uid: Steeltoe.Extensions.Logging.DynamicSerilog.SerilogOptions.FullnameExclusions*
  commentId: Overload:Steeltoe.Extensions.Logging.DynamicSerilog.SerilogOptions.FullnameExclusions
  name: FullnameExclusions
  nameWithType: SerilogOptions.FullnameExclusions
  fullName: Steeltoe.Extensions.Logging.DynamicSerilog.SerilogOptions.FullnameExclusions
- uid: Steeltoe.Extensions.Logging.DynamicSerilog.ISerilogOptions.FullnameExclusions
  commentId: P:Steeltoe.Extensions.Logging.DynamicSerilog.ISerilogOptions.FullnameExclusions
  parent: Steeltoe.Extensions.Logging.DynamicSerilog.ISerilogOptions
  name: FullnameExclusions
  nameWithType: ISerilogOptions.FullnameExclusions
  fullName: Steeltoe.Extensions.Logging.DynamicSerilog.ISerilogOptions.FullnameExclusions
