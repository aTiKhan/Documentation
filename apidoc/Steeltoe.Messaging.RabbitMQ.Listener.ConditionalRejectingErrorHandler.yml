### YamlMime:ManagedReference
items:
- uid: Steeltoe.Messaging.RabbitMQ.Listener.ConditionalRejectingErrorHandler
  commentId: T:Steeltoe.Messaging.RabbitMQ.Listener.ConditionalRejectingErrorHandler
  id: ConditionalRejectingErrorHandler
  parent: Steeltoe.Messaging.RabbitMQ.Listener
  children:
  - Steeltoe.Messaging.RabbitMQ.Listener.ConditionalRejectingErrorHandler.#ctor(Microsoft.Extensions.Logging.ILogger)
  - Steeltoe.Messaging.RabbitMQ.Listener.ConditionalRejectingErrorHandler.#ctor(Steeltoe.Messaging.RabbitMQ.Listener.IFatalExceptionStrategy,Microsoft.Extensions.Logging.ILogger)
  - Steeltoe.Messaging.RabbitMQ.Listener.ConditionalRejectingErrorHandler.CauseChainContainsRRADRE(System.Exception)
  - Steeltoe.Messaging.RabbitMQ.Listener.ConditionalRejectingErrorHandler.DEFAULT_SERVICE_NAME
  - Steeltoe.Messaging.RabbitMQ.Listener.ConditionalRejectingErrorHandler.DiscardFatalsWithXDeath
  - Steeltoe.Messaging.RabbitMQ.Listener.ConditionalRejectingErrorHandler.HandleError(System.Exception)
  - Steeltoe.Messaging.RabbitMQ.Listener.ConditionalRejectingErrorHandler.RejectManual
  - Steeltoe.Messaging.RabbitMQ.Listener.ConditionalRejectingErrorHandler.ServiceName
  langs:
  - csharp
  - vb
  name: ConditionalRejectingErrorHandler
  nameWithType: ConditionalRejectingErrorHandler
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.ConditionalRejectingErrorHandler
  type: Class
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Listener/ConditionalRejectingErrorHandler.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: ConditionalRejectingErrorHandler
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Listener/ConditionalRejectingErrorHandler.cs
    startLine: 13
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Listener
  syntax:
    content: 'public class ConditionalRejectingErrorHandler : IErrorHandler, IServiceNameAware'
    content.vb: >-
      Public Class ConditionalRejectingErrorHandler

          Implements IErrorHandler, IServiceNameAware
  inheritance:
  - System.Object
  implements:
  - Steeltoe.Common.Util.IErrorHandler
  - Steeltoe.Common.Services.IServiceNameAware
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Steeltoe.Messaging.RabbitMQ.Listener.ConditionalRejectingErrorHandler.DEFAULT_SERVICE_NAME
  commentId: F:Steeltoe.Messaging.RabbitMQ.Listener.ConditionalRejectingErrorHandler.DEFAULT_SERVICE_NAME
  id: DEFAULT_SERVICE_NAME
  parent: Steeltoe.Messaging.RabbitMQ.Listener.ConditionalRejectingErrorHandler
  langs:
  - csharp
  - vb
  name: DEFAULT_SERVICE_NAME
  nameWithType: ConditionalRejectingErrorHandler.DEFAULT_SERVICE_NAME
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.ConditionalRejectingErrorHandler.DEFAULT_SERVICE_NAME
  type: Field
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Listener/ConditionalRejectingErrorHandler.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: DEFAULT_SERVICE_NAME
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Listener/ConditionalRejectingErrorHandler.cs
    startLine: 15
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Listener
  syntax:
    content: public const string DEFAULT_SERVICE_NAME = "ConditionalRejectingErrorHandler"
    return:
      type: System.String
    content.vb: Public Const DEFAULT_SERVICE_NAME As String = "ConditionalRejectingErrorHandler"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Steeltoe.Messaging.RabbitMQ.Listener.ConditionalRejectingErrorHandler.#ctor(Microsoft.Extensions.Logging.ILogger)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Listener.ConditionalRejectingErrorHandler.#ctor(Microsoft.Extensions.Logging.ILogger)
  id: '#ctor(Microsoft.Extensions.Logging.ILogger)'
  parent: Steeltoe.Messaging.RabbitMQ.Listener.ConditionalRejectingErrorHandler
  langs:
  - csharp
  - vb
  name: ConditionalRejectingErrorHandler(ILogger)
  nameWithType: ConditionalRejectingErrorHandler.ConditionalRejectingErrorHandler(ILogger)
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.ConditionalRejectingErrorHandler.ConditionalRejectingErrorHandler(Microsoft.Extensions.Logging.ILogger)
  type: Constructor
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Listener/ConditionalRejectingErrorHandler.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: .ctor
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Listener/ConditionalRejectingErrorHandler.cs
    startLine: 20
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Listener
  syntax:
    content: public ConditionalRejectingErrorHandler(ILogger logger = null)
    parameters:
    - id: logger
      type: Microsoft.Extensions.Logging.ILogger
    content.vb: Public Sub New(logger As ILogger = Nothing)
  overload: Steeltoe.Messaging.RabbitMQ.Listener.ConditionalRejectingErrorHandler.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Steeltoe.Messaging.RabbitMQ.Listener.ConditionalRejectingErrorHandler.#ctor(Steeltoe.Messaging.RabbitMQ.Listener.IFatalExceptionStrategy,Microsoft.Extensions.Logging.ILogger)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Listener.ConditionalRejectingErrorHandler.#ctor(Steeltoe.Messaging.RabbitMQ.Listener.IFatalExceptionStrategy,Microsoft.Extensions.Logging.ILogger)
  id: '#ctor(Steeltoe.Messaging.RabbitMQ.Listener.IFatalExceptionStrategy,Microsoft.Extensions.Logging.ILogger)'
  parent: Steeltoe.Messaging.RabbitMQ.Listener.ConditionalRejectingErrorHandler
  langs:
  - csharp
  - vb
  name: ConditionalRejectingErrorHandler(IFatalExceptionStrategy, ILogger)
  nameWithType: ConditionalRejectingErrorHandler.ConditionalRejectingErrorHandler(IFatalExceptionStrategy, ILogger)
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.ConditionalRejectingErrorHandler.ConditionalRejectingErrorHandler(Steeltoe.Messaging.RabbitMQ.Listener.IFatalExceptionStrategy, Microsoft.Extensions.Logging.ILogger)
  type: Constructor
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Listener/ConditionalRejectingErrorHandler.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: .ctor
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Listener/ConditionalRejectingErrorHandler.cs
    startLine: 26
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Listener
  syntax:
    content: public ConditionalRejectingErrorHandler(IFatalExceptionStrategy exceptionStrategy, ILogger logger = null)
    parameters:
    - id: exceptionStrategy
      type: Steeltoe.Messaging.RabbitMQ.Listener.IFatalExceptionStrategy
    - id: logger
      type: Microsoft.Extensions.Logging.ILogger
    content.vb: Public Sub New(exceptionStrategy As IFatalExceptionStrategy, logger As ILogger = Nothing)
  overload: Steeltoe.Messaging.RabbitMQ.Listener.ConditionalRejectingErrorHandler.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Steeltoe.Messaging.RabbitMQ.Listener.ConditionalRejectingErrorHandler.DiscardFatalsWithXDeath
  commentId: P:Steeltoe.Messaging.RabbitMQ.Listener.ConditionalRejectingErrorHandler.DiscardFatalsWithXDeath
  id: DiscardFatalsWithXDeath
  parent: Steeltoe.Messaging.RabbitMQ.Listener.ConditionalRejectingErrorHandler
  langs:
  - csharp
  - vb
  name: DiscardFatalsWithXDeath
  nameWithType: ConditionalRejectingErrorHandler.DiscardFatalsWithXDeath
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.ConditionalRejectingErrorHandler.DiscardFatalsWithXDeath
  type: Property
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Listener/ConditionalRejectingErrorHandler.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: DiscardFatalsWithXDeath
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Listener/ConditionalRejectingErrorHandler.cs
    startLine: 32
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Listener
  syntax:
    content: public virtual bool DiscardFatalsWithXDeath { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Overridable Property DiscardFatalsWithXDeath As Boolean
  overload: Steeltoe.Messaging.RabbitMQ.Listener.ConditionalRejectingErrorHandler.DiscardFatalsWithXDeath*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Steeltoe.Messaging.RabbitMQ.Listener.ConditionalRejectingErrorHandler.RejectManual
  commentId: P:Steeltoe.Messaging.RabbitMQ.Listener.ConditionalRejectingErrorHandler.RejectManual
  id: RejectManual
  parent: Steeltoe.Messaging.RabbitMQ.Listener.ConditionalRejectingErrorHandler
  langs:
  - csharp
  - vb
  name: RejectManual
  nameWithType: ConditionalRejectingErrorHandler.RejectManual
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.ConditionalRejectingErrorHandler.RejectManual
  type: Property
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Listener/ConditionalRejectingErrorHandler.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: RejectManual
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Listener/ConditionalRejectingErrorHandler.cs
    startLine: 34
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Listener
  syntax:
    content: public virtual bool RejectManual { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Overridable Property RejectManual As Boolean
  overload: Steeltoe.Messaging.RabbitMQ.Listener.ConditionalRejectingErrorHandler.RejectManual*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Steeltoe.Messaging.RabbitMQ.Listener.ConditionalRejectingErrorHandler.ServiceName
  commentId: P:Steeltoe.Messaging.RabbitMQ.Listener.ConditionalRejectingErrorHandler.ServiceName
  id: ServiceName
  parent: Steeltoe.Messaging.RabbitMQ.Listener.ConditionalRejectingErrorHandler
  langs:
  - csharp
  - vb
  name: ServiceName
  nameWithType: ConditionalRejectingErrorHandler.ServiceName
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.ConditionalRejectingErrorHandler.ServiceName
  type: Property
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Listener/ConditionalRejectingErrorHandler.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: ServiceName
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Listener/ConditionalRejectingErrorHandler.cs
    startLine: 36
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Listener
  syntax:
    content: public string ServiceName { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property ServiceName As String
  overload: Steeltoe.Messaging.RabbitMQ.Listener.ConditionalRejectingErrorHandler.ServiceName*
  implements:
  - Steeltoe.Common.Services.IServiceNameAware.ServiceName
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Steeltoe.Messaging.RabbitMQ.Listener.ConditionalRejectingErrorHandler.HandleError(System.Exception)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Listener.ConditionalRejectingErrorHandler.HandleError(System.Exception)
  id: HandleError(System.Exception)
  parent: Steeltoe.Messaging.RabbitMQ.Listener.ConditionalRejectingErrorHandler
  langs:
  - csharp
  - vb
  name: HandleError(Exception)
  nameWithType: ConditionalRejectingErrorHandler.HandleError(Exception)
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.ConditionalRejectingErrorHandler.HandleError(System.Exception)
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Listener/ConditionalRejectingErrorHandler.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: HandleError
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Listener/ConditionalRejectingErrorHandler.cs
    startLine: 38
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Listener
  syntax:
    content: public virtual bool HandleError(Exception exception)
    parameters:
    - id: exception
      type: System.Exception
    return:
      type: System.Boolean
    content.vb: Public Overridable Function HandleError(exception As Exception) As Boolean
  overload: Steeltoe.Messaging.RabbitMQ.Listener.ConditionalRejectingErrorHandler.HandleError*
  implements:
  - Steeltoe.Common.Util.IErrorHandler.HandleError(System.Exception)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Steeltoe.Messaging.RabbitMQ.Listener.ConditionalRejectingErrorHandler.CauseChainContainsRRADRE(System.Exception)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Listener.ConditionalRejectingErrorHandler.CauseChainContainsRRADRE(System.Exception)
  id: CauseChainContainsRRADRE(System.Exception)
  parent: Steeltoe.Messaging.RabbitMQ.Listener.ConditionalRejectingErrorHandler
  langs:
  - csharp
  - vb
  name: CauseChainContainsRRADRE(Exception)
  nameWithType: ConditionalRejectingErrorHandler.CauseChainContainsRRADRE(Exception)
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.ConditionalRejectingErrorHandler.CauseChainContainsRRADRE(System.Exception)
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Listener/ConditionalRejectingErrorHandler.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: CauseChainContainsRRADRE
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Listener/ConditionalRejectingErrorHandler.cs
    startLine: 66
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Listener
  syntax:
    content: protected virtual bool CauseChainContainsRRADRE(Exception exception)
    parameters:
    - id: exception
      type: System.Exception
    return:
      type: System.Boolean
    content.vb: Protected Overridable Function CauseChainContainsRRADRE(exception As Exception) As Boolean
  overload: Steeltoe.Messaging.RabbitMQ.Listener.ConditionalRejectingErrorHandler.CauseChainContainsRRADRE*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
references:
- uid: Steeltoe.Messaging.RabbitMQ.Listener
  commentId: N:Steeltoe.Messaging.RabbitMQ.Listener
  name: Steeltoe.Messaging.RabbitMQ.Listener
  nameWithType: Steeltoe.Messaging.RabbitMQ.Listener
  fullName: Steeltoe.Messaging.RabbitMQ.Listener
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Steeltoe.Common.Util.IErrorHandler
  commentId: T:Steeltoe.Common.Util.IErrorHandler
  parent: Steeltoe.Common.Util
  name: IErrorHandler
  nameWithType: IErrorHandler
  fullName: Steeltoe.Common.Util.IErrorHandler
- uid: Steeltoe.Common.Services.IServiceNameAware
  commentId: T:Steeltoe.Common.Services.IServiceNameAware
  parent: Steeltoe.Common.Services
  name: IServiceNameAware
  nameWithType: IServiceNameAware
  fullName: Steeltoe.Common.Services.IServiceNameAware
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Steeltoe.Common.Util
  commentId: N:Steeltoe.Common.Util
  name: Steeltoe.Common.Util
  nameWithType: Steeltoe.Common.Util
  fullName: Steeltoe.Common.Util
- uid: Steeltoe.Common.Services
  commentId: N:Steeltoe.Common.Services
  name: Steeltoe.Common.Services
  nameWithType: Steeltoe.Common.Services
  fullName: Steeltoe.Common.Services
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Steeltoe.Messaging.RabbitMQ.Listener.ConditionalRejectingErrorHandler.#ctor*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Listener.ConditionalRejectingErrorHandler.#ctor
  name: ConditionalRejectingErrorHandler
  nameWithType: ConditionalRejectingErrorHandler.ConditionalRejectingErrorHandler
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.ConditionalRejectingErrorHandler.ConditionalRejectingErrorHandler
- uid: Microsoft.Extensions.Logging.ILogger
  commentId: T:Microsoft.Extensions.Logging.ILogger
  parent: Microsoft.Extensions.Logging
  isExternal: true
  name: ILogger
  nameWithType: ILogger
  fullName: Microsoft.Extensions.Logging.ILogger
- uid: Microsoft.Extensions.Logging
  commentId: N:Microsoft.Extensions.Logging
  isExternal: true
  name: Microsoft.Extensions.Logging
  nameWithType: Microsoft.Extensions.Logging
  fullName: Microsoft.Extensions.Logging
- uid: Steeltoe.Messaging.RabbitMQ.Listener.IFatalExceptionStrategy
  commentId: T:Steeltoe.Messaging.RabbitMQ.Listener.IFatalExceptionStrategy
  parent: Steeltoe.Messaging.RabbitMQ.Listener
  name: IFatalExceptionStrategy
  nameWithType: IFatalExceptionStrategy
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.IFatalExceptionStrategy
- uid: Steeltoe.Messaging.RabbitMQ.Listener.ConditionalRejectingErrorHandler.DiscardFatalsWithXDeath*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Listener.ConditionalRejectingErrorHandler.DiscardFatalsWithXDeath
  name: DiscardFatalsWithXDeath
  nameWithType: ConditionalRejectingErrorHandler.DiscardFatalsWithXDeath
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.ConditionalRejectingErrorHandler.DiscardFatalsWithXDeath
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Steeltoe.Messaging.RabbitMQ.Listener.ConditionalRejectingErrorHandler.RejectManual*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Listener.ConditionalRejectingErrorHandler.RejectManual
  name: RejectManual
  nameWithType: ConditionalRejectingErrorHandler.RejectManual
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.ConditionalRejectingErrorHandler.RejectManual
- uid: Steeltoe.Messaging.RabbitMQ.Listener.ConditionalRejectingErrorHandler.ServiceName*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Listener.ConditionalRejectingErrorHandler.ServiceName
  name: ServiceName
  nameWithType: ConditionalRejectingErrorHandler.ServiceName
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.ConditionalRejectingErrorHandler.ServiceName
- uid: Steeltoe.Common.Services.IServiceNameAware.ServiceName
  commentId: P:Steeltoe.Common.Services.IServiceNameAware.ServiceName
  parent: Steeltoe.Common.Services.IServiceNameAware
  name: ServiceName
  nameWithType: IServiceNameAware.ServiceName
  fullName: Steeltoe.Common.Services.IServiceNameAware.ServiceName
- uid: Steeltoe.Messaging.RabbitMQ.Listener.ConditionalRejectingErrorHandler.HandleError*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Listener.ConditionalRejectingErrorHandler.HandleError
  name: HandleError
  nameWithType: ConditionalRejectingErrorHandler.HandleError
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.ConditionalRejectingErrorHandler.HandleError
- uid: Steeltoe.Common.Util.IErrorHandler.HandleError(System.Exception)
  commentId: M:Steeltoe.Common.Util.IErrorHandler.HandleError(System.Exception)
  parent: Steeltoe.Common.Util.IErrorHandler
  isExternal: true
  name: HandleError(Exception)
  nameWithType: IErrorHandler.HandleError(Exception)
  fullName: Steeltoe.Common.Util.IErrorHandler.HandleError(System.Exception)
  spec.csharp:
  - uid: Steeltoe.Common.Util.IErrorHandler.HandleError(System.Exception)
    name: HandleError
    nameWithType: IErrorHandler.HandleError
    fullName: Steeltoe.Common.Util.IErrorHandler.HandleError
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Common.Util.IErrorHandler.HandleError(System.Exception)
    name: HandleError
    nameWithType: IErrorHandler.HandleError
    fullName: Steeltoe.Common.Util.IErrorHandler.HandleError
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Exception
  commentId: T:System.Exception
  parent: System
  isExternal: true
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: Steeltoe.Messaging.RabbitMQ.Listener.ConditionalRejectingErrorHandler.CauseChainContainsRRADRE*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Listener.ConditionalRejectingErrorHandler.CauseChainContainsRRADRE
  name: CauseChainContainsRRADRE
  nameWithType: ConditionalRejectingErrorHandler.CauseChainContainsRRADRE
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.ConditionalRejectingErrorHandler.CauseChainContainsRRADRE
