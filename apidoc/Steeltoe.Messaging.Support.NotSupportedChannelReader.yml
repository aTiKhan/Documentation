### YamlMime:ManagedReference
items:
- uid: Steeltoe.Messaging.Support.NotSupportedChannelReader
  commentId: T:Steeltoe.Messaging.Support.NotSupportedChannelReader
  id: NotSupportedChannelReader
  parent: Steeltoe.Messaging.Support
  children:
  - Steeltoe.Messaging.Support.NotSupportedChannelReader.Completion
  - Steeltoe.Messaging.Support.NotSupportedChannelReader.ReadAllAsync(System.Threading.CancellationToken)
  - Steeltoe.Messaging.Support.NotSupportedChannelReader.ReadAsync(System.Threading.CancellationToken)
  - Steeltoe.Messaging.Support.NotSupportedChannelReader.TryRead(Steeltoe.Messaging.IMessage@)
  - Steeltoe.Messaging.Support.NotSupportedChannelReader.WaitToReadAsync(System.Threading.CancellationToken)
  langs:
  - csharp
  - vb
  name: NotSupportedChannelReader
  nameWithType: NotSupportedChannelReader
  fullName: Steeltoe.Messaging.Support.NotSupportedChannelReader
  type: Class
  source:
    remote:
      path: src/Messaging/src/MessagingBase/Support/NotSupportedChannelReader.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: NotSupportedChannelReader
    path: ../Steeltoe/src/Messaging/src/MessagingBase/Support/NotSupportedChannelReader.cs
    startLine: 12
  assemblies:
  - Steeltoe.Messaging.MessagingBase
  namespace: Steeltoe.Messaging.Support
  syntax:
    content: 'public class NotSupportedChannelReader : ChannelReader<IMessage>'
    content.vb: >-
      Public Class NotSupportedChannelReader

          Inherits ChannelReader(Of IMessage)
  inheritance:
  - System.Object
  - System.Threading.Channels.ChannelReader{Steeltoe.Messaging.IMessage}
  inheritedMembers:
  - System.Threading.Channels.ChannelReader{Steeltoe.Messaging.IMessage}.CanCount
  - System.Threading.Channels.ChannelReader{Steeltoe.Messaging.IMessage}.Count
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Steeltoe.Messaging.Support.NotSupportedChannelReader.Completion
  commentId: P:Steeltoe.Messaging.Support.NotSupportedChannelReader.Completion
  id: Completion
  parent: Steeltoe.Messaging.Support.NotSupportedChannelReader
  langs:
  - csharp
  - vb
  name: Completion
  nameWithType: NotSupportedChannelReader.Completion
  fullName: Steeltoe.Messaging.Support.NotSupportedChannelReader.Completion
  type: Property
  source:
    remote:
      path: src/Messaging/src/MessagingBase/Support/NotSupportedChannelReader.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Completion
    path: ../Steeltoe/src/Messaging/src/MessagingBase/Support/NotSupportedChannelReader.cs
    startLine: 14
  assemblies:
  - Steeltoe.Messaging.MessagingBase
  namespace: Steeltoe.Messaging.Support
  syntax:
    content: public override Task Completion { get; }
    parameters: []
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Overrides ReadOnly Property Completion As Task
  overridden: System.Threading.Channels.ChannelReader{Steeltoe.Messaging.IMessage}.Completion
  overload: Steeltoe.Messaging.Support.NotSupportedChannelReader.Completion*
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: Steeltoe.Messaging.Support.NotSupportedChannelReader.ReadAllAsync(System.Threading.CancellationToken)
  commentId: M:Steeltoe.Messaging.Support.NotSupportedChannelReader.ReadAllAsync(System.Threading.CancellationToken)
  id: ReadAllAsync(System.Threading.CancellationToken)
  parent: Steeltoe.Messaging.Support.NotSupportedChannelReader
  langs:
  - csharp
  - vb
  name: ReadAllAsync(CancellationToken)
  nameWithType: NotSupportedChannelReader.ReadAllAsync(CancellationToken)
  fullName: Steeltoe.Messaging.Support.NotSupportedChannelReader.ReadAllAsync(System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Messaging/src/MessagingBase/Support/NotSupportedChannelReader.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: ReadAllAsync
    path: ../Steeltoe/src/Messaging/src/MessagingBase/Support/NotSupportedChannelReader.cs
    startLine: 16
  assemblies:
  - Steeltoe.Messaging.MessagingBase
  namespace: Steeltoe.Messaging.Support
  syntax:
    content: public override IAsyncEnumerable<IMessage> ReadAllAsync(CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Collections.Generic.IAsyncEnumerable{Steeltoe.Messaging.IMessage}
    content.vb: Public Overrides Function ReadAllAsync(cancellationToken As CancellationToken = Nothing) As IAsyncEnumerable(Of IMessage)
  overridden: System.Threading.Channels.ChannelReader{Steeltoe.Messaging.IMessage}.ReadAllAsync(System.Threading.CancellationToken)
  overload: Steeltoe.Messaging.Support.NotSupportedChannelReader.ReadAllAsync*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Steeltoe.Messaging.Support.NotSupportedChannelReader.ReadAsync(System.Threading.CancellationToken)
  commentId: M:Steeltoe.Messaging.Support.NotSupportedChannelReader.ReadAsync(System.Threading.CancellationToken)
  id: ReadAsync(System.Threading.CancellationToken)
  parent: Steeltoe.Messaging.Support.NotSupportedChannelReader
  langs:
  - csharp
  - vb
  name: ReadAsync(CancellationToken)
  nameWithType: NotSupportedChannelReader.ReadAsync(CancellationToken)
  fullName: Steeltoe.Messaging.Support.NotSupportedChannelReader.ReadAsync(System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Messaging/src/MessagingBase/Support/NotSupportedChannelReader.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: ReadAsync
    path: ../Steeltoe/src/Messaging/src/MessagingBase/Support/NotSupportedChannelReader.cs
    startLine: 21
  assemblies:
  - Steeltoe.Messaging.MessagingBase
  namespace: Steeltoe.Messaging.Support
  syntax:
    content: public override ValueTask<IMessage> ReadAsync(CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.ValueTask{Steeltoe.Messaging.IMessage}
    content.vb: Public Overrides Function ReadAsync(cancellationToken As CancellationToken = Nothing) As ValueTask(Of IMessage)
  overridden: System.Threading.Channels.ChannelReader{Steeltoe.Messaging.IMessage}.ReadAsync(System.Threading.CancellationToken)
  overload: Steeltoe.Messaging.Support.NotSupportedChannelReader.ReadAsync*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Steeltoe.Messaging.Support.NotSupportedChannelReader.TryRead(Steeltoe.Messaging.IMessage@)
  commentId: M:Steeltoe.Messaging.Support.NotSupportedChannelReader.TryRead(Steeltoe.Messaging.IMessage@)
  id: TryRead(Steeltoe.Messaging.IMessage@)
  parent: Steeltoe.Messaging.Support.NotSupportedChannelReader
  langs:
  - csharp
  - vb
  name: TryRead(out IMessage)
  nameWithType: NotSupportedChannelReader.TryRead(out IMessage)
  fullName: Steeltoe.Messaging.Support.NotSupportedChannelReader.TryRead(out Steeltoe.Messaging.IMessage)
  type: Method
  source:
    remote:
      path: src/Messaging/src/MessagingBase/Support/NotSupportedChannelReader.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: TryRead
    path: ../Steeltoe/src/Messaging/src/MessagingBase/Support/NotSupportedChannelReader.cs
    startLine: 26
  assemblies:
  - Steeltoe.Messaging.MessagingBase
  namespace: Steeltoe.Messaging.Support
  syntax:
    content: public override bool TryRead(out IMessage item)
    parameters:
    - id: item
      type: Steeltoe.Messaging.IMessage
    return:
      type: System.Boolean
    content.vb: Public Overrides Function TryRead(ByRef item As IMessage) As Boolean
  overridden: System.Threading.Channels.ChannelReader{Steeltoe.Messaging.IMessage}.TryRead(Steeltoe.Messaging.IMessage@)
  overload: Steeltoe.Messaging.Support.NotSupportedChannelReader.TryRead*
  nameWithType.vb: NotSupportedChannelReader.TryRead(ByRef IMessage)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: Steeltoe.Messaging.Support.NotSupportedChannelReader.TryRead(ByRef Steeltoe.Messaging.IMessage)
  name.vb: TryRead(ByRef IMessage)
- uid: Steeltoe.Messaging.Support.NotSupportedChannelReader.WaitToReadAsync(System.Threading.CancellationToken)
  commentId: M:Steeltoe.Messaging.Support.NotSupportedChannelReader.WaitToReadAsync(System.Threading.CancellationToken)
  id: WaitToReadAsync(System.Threading.CancellationToken)
  parent: Steeltoe.Messaging.Support.NotSupportedChannelReader
  langs:
  - csharp
  - vb
  name: WaitToReadAsync(CancellationToken)
  nameWithType: NotSupportedChannelReader.WaitToReadAsync(CancellationToken)
  fullName: Steeltoe.Messaging.Support.NotSupportedChannelReader.WaitToReadAsync(System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Messaging/src/MessagingBase/Support/NotSupportedChannelReader.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: WaitToReadAsync
    path: ../Steeltoe/src/Messaging/src/MessagingBase/Support/NotSupportedChannelReader.cs
    startLine: 31
  assemblies:
  - Steeltoe.Messaging.MessagingBase
  namespace: Steeltoe.Messaging.Support
  syntax:
    content: public override ValueTask<bool> WaitToReadAsync(CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.ValueTask{System.Boolean}
    content.vb: Public Overrides Function WaitToReadAsync(cancellationToken As CancellationToken = Nothing) As ValueTask(Of Boolean)
  overridden: System.Threading.Channels.ChannelReader{Steeltoe.Messaging.IMessage}.WaitToReadAsync(System.Threading.CancellationToken)
  overload: Steeltoe.Messaging.Support.NotSupportedChannelReader.WaitToReadAsync*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: Steeltoe.Messaging.Support
  commentId: N:Steeltoe.Messaging.Support
  name: Steeltoe.Messaging.Support
  nameWithType: Steeltoe.Messaging.Support
  fullName: Steeltoe.Messaging.Support
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Threading.Channels.ChannelReader{Steeltoe.Messaging.IMessage}
  commentId: T:System.Threading.Channels.ChannelReader{Steeltoe.Messaging.IMessage}
  parent: System.Threading.Channels
  definition: System.Threading.Channels.ChannelReader`1
  name: ChannelReader<IMessage>
  nameWithType: ChannelReader<IMessage>
  fullName: System.Threading.Channels.ChannelReader<Steeltoe.Messaging.IMessage>
  nameWithType.vb: ChannelReader(Of IMessage)
  fullName.vb: System.Threading.Channels.ChannelReader(Of Steeltoe.Messaging.IMessage)
  name.vb: ChannelReader(Of IMessage)
  spec.csharp:
  - uid: System.Threading.Channels.ChannelReader`1
    name: ChannelReader
    nameWithType: ChannelReader
    fullName: System.Threading.Channels.ChannelReader
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Channels.ChannelReader`1
    name: ChannelReader
    nameWithType: ChannelReader
    fullName: System.Threading.Channels.ChannelReader
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Channels.ChannelReader{Steeltoe.Messaging.IMessage}.CanCount
  commentId: P:System.Threading.Channels.ChannelReader{Steeltoe.Messaging.IMessage}.CanCount
  parent: System.Threading.Channels.ChannelReader{Steeltoe.Messaging.IMessage}
  definition: System.Threading.Channels.ChannelReader`1.CanCount
  name: CanCount
  nameWithType: ChannelReader<IMessage>.CanCount
  fullName: System.Threading.Channels.ChannelReader<Steeltoe.Messaging.IMessage>.CanCount
  nameWithType.vb: ChannelReader(Of IMessage).CanCount
  fullName.vb: System.Threading.Channels.ChannelReader(Of Steeltoe.Messaging.IMessage).CanCount
- uid: System.Threading.Channels.ChannelReader{Steeltoe.Messaging.IMessage}.Count
  commentId: P:System.Threading.Channels.ChannelReader{Steeltoe.Messaging.IMessage}.Count
  parent: System.Threading.Channels.ChannelReader{Steeltoe.Messaging.IMessage}
  definition: System.Threading.Channels.ChannelReader`1.Count
  name: Count
  nameWithType: ChannelReader<IMessage>.Count
  fullName: System.Threading.Channels.ChannelReader<Steeltoe.Messaging.IMessage>.Count
  nameWithType.vb: ChannelReader(Of IMessage).Count
  fullName.vb: System.Threading.Channels.ChannelReader(Of Steeltoe.Messaging.IMessage).Count
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Threading.Channels.ChannelReader`1
  commentId: T:System.Threading.Channels.ChannelReader`1
  isExternal: true
  name: ChannelReader<T>
  nameWithType: ChannelReader<T>
  fullName: System.Threading.Channels.ChannelReader<T>
  nameWithType.vb: ChannelReader(Of T)
  fullName.vb: System.Threading.Channels.ChannelReader(Of T)
  name.vb: ChannelReader(Of T)
  spec.csharp:
  - uid: System.Threading.Channels.ChannelReader`1
    name: ChannelReader
    nameWithType: ChannelReader
    fullName: System.Threading.Channels.ChannelReader
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Channels.ChannelReader`1
    name: ChannelReader
    nameWithType: ChannelReader
    fullName: System.Threading.Channels.ChannelReader
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Channels
  commentId: N:System.Threading.Channels
  isExternal: true
  name: System.Threading.Channels
  nameWithType: System.Threading.Channels
  fullName: System.Threading.Channels
- uid: System.Threading.Channels.ChannelReader`1.CanCount
  commentId: P:System.Threading.Channels.ChannelReader`1.CanCount
  isExternal: true
  name: CanCount
  nameWithType: ChannelReader<T>.CanCount
  fullName: System.Threading.Channels.ChannelReader<T>.CanCount
  nameWithType.vb: ChannelReader(Of T).CanCount
  fullName.vb: System.Threading.Channels.ChannelReader(Of T).CanCount
- uid: System.Threading.Channels.ChannelReader`1.Count
  commentId: P:System.Threading.Channels.ChannelReader`1.Count
  isExternal: true
  name: Count
  nameWithType: ChannelReader<T>.Count
  fullName: System.Threading.Channels.ChannelReader<T>.Count
  nameWithType.vb: ChannelReader(Of T).Count
  fullName.vb: System.Threading.Channels.ChannelReader(Of T).Count
- uid: System.Threading.Channels.ChannelReader{Steeltoe.Messaging.IMessage}.Completion
  commentId: P:System.Threading.Channels.ChannelReader{Steeltoe.Messaging.IMessage}.Completion
  parent: System.Threading.Channels.ChannelReader{Steeltoe.Messaging.IMessage}
  definition: System.Threading.Channels.ChannelReader`1.Completion
  name: Completion
  nameWithType: ChannelReader<IMessage>.Completion
  fullName: System.Threading.Channels.ChannelReader<Steeltoe.Messaging.IMessage>.Completion
  nameWithType.vb: ChannelReader(Of IMessage).Completion
  fullName.vb: System.Threading.Channels.ChannelReader(Of Steeltoe.Messaging.IMessage).Completion
- uid: Steeltoe.Messaging.Support.NotSupportedChannelReader.Completion*
  commentId: Overload:Steeltoe.Messaging.Support.NotSupportedChannelReader.Completion
  name: Completion
  nameWithType: NotSupportedChannelReader.Completion
  fullName: Steeltoe.Messaging.Support.NotSupportedChannelReader.Completion
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System.Threading.Channels.ChannelReader`1.Completion
  commentId: P:System.Threading.Channels.ChannelReader`1.Completion
  isExternal: true
  name: Completion
  nameWithType: ChannelReader<T>.Completion
  fullName: System.Threading.Channels.ChannelReader<T>.Completion
  nameWithType.vb: ChannelReader(Of T).Completion
  fullName.vb: System.Threading.Channels.ChannelReader(Of T).Completion
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: System.Threading.Channels.ChannelReader{Steeltoe.Messaging.IMessage}.ReadAllAsync(System.Threading.CancellationToken)
  commentId: M:System.Threading.Channels.ChannelReader{Steeltoe.Messaging.IMessage}.ReadAllAsync(System.Threading.CancellationToken)
  parent: System.Threading.Channels.ChannelReader{Steeltoe.Messaging.IMessage}
  definition: System.Threading.Channels.ChannelReader`1.ReadAllAsync(System.Threading.CancellationToken)
  name: ReadAllAsync(CancellationToken)
  nameWithType: ChannelReader<IMessage>.ReadAllAsync(CancellationToken)
  fullName: System.Threading.Channels.ChannelReader<Steeltoe.Messaging.IMessage>.ReadAllAsync(System.Threading.CancellationToken)
  nameWithType.vb: ChannelReader(Of IMessage).ReadAllAsync(CancellationToken)
  fullName.vb: System.Threading.Channels.ChannelReader(Of Steeltoe.Messaging.IMessage).ReadAllAsync(System.Threading.CancellationToken)
  spec.csharp:
  - uid: System.Threading.Channels.ChannelReader`1.ReadAllAsync(System.Threading.CancellationToken)
    name: ReadAllAsync
    nameWithType: ChannelReader<IMessage>.ReadAllAsync
    fullName: System.Threading.Channels.ChannelReader<Steeltoe.Messaging.IMessage>.ReadAllAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Threading.Channels.ChannelReader`1.ReadAllAsync(System.Threading.CancellationToken)
    name: ReadAllAsync
    nameWithType: ChannelReader(Of IMessage).ReadAllAsync
    fullName: System.Threading.Channels.ChannelReader(Of Steeltoe.Messaging.IMessage).ReadAllAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Support.NotSupportedChannelReader.ReadAllAsync*
  commentId: Overload:Steeltoe.Messaging.Support.NotSupportedChannelReader.ReadAllAsync
  name: ReadAllAsync
  nameWithType: NotSupportedChannelReader.ReadAllAsync
  fullName: Steeltoe.Messaging.Support.NotSupportedChannelReader.ReadAllAsync
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Collections.Generic.IAsyncEnumerable{Steeltoe.Messaging.IMessage}
  commentId: T:System.Collections.Generic.IAsyncEnumerable{Steeltoe.Messaging.IMessage}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IAsyncEnumerable`1
  name: IAsyncEnumerable<IMessage>
  nameWithType: IAsyncEnumerable<IMessage>
  fullName: System.Collections.Generic.IAsyncEnumerable<Steeltoe.Messaging.IMessage>
  nameWithType.vb: IAsyncEnumerable(Of IMessage)
  fullName.vb: System.Collections.Generic.IAsyncEnumerable(Of Steeltoe.Messaging.IMessage)
  name.vb: IAsyncEnumerable(Of IMessage)
  spec.csharp:
  - uid: System.Collections.Generic.IAsyncEnumerable`1
    name: IAsyncEnumerable
    nameWithType: IAsyncEnumerable
    fullName: System.Collections.Generic.IAsyncEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IAsyncEnumerable`1
    name: IAsyncEnumerable
    nameWithType: IAsyncEnumerable
    fullName: System.Collections.Generic.IAsyncEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Channels.ChannelReader`1.ReadAllAsync(System.Threading.CancellationToken)
  commentId: M:System.Threading.Channels.ChannelReader`1.ReadAllAsync(System.Threading.CancellationToken)
  isExternal: true
  name: ReadAllAsync(CancellationToken)
  nameWithType: ChannelReader<T>.ReadAllAsync(CancellationToken)
  fullName: System.Threading.Channels.ChannelReader<T>.ReadAllAsync(System.Threading.CancellationToken)
  nameWithType.vb: ChannelReader(Of T).ReadAllAsync(CancellationToken)
  fullName.vb: System.Threading.Channels.ChannelReader(Of T).ReadAllAsync(System.Threading.CancellationToken)
  spec.csharp:
  - uid: System.Threading.Channels.ChannelReader`1.ReadAllAsync(System.Threading.CancellationToken)
    name: ReadAllAsync
    nameWithType: ChannelReader<T>.ReadAllAsync
    fullName: System.Threading.Channels.ChannelReader<T>.ReadAllAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Threading.Channels.ChannelReader`1.ReadAllAsync(System.Threading.CancellationToken)
    name: ReadAllAsync
    nameWithType: ChannelReader(Of T).ReadAllAsync
    fullName: System.Threading.Channels.ChannelReader(Of T).ReadAllAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: true
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
- uid: System.Collections.Generic.IAsyncEnumerable`1
  commentId: T:System.Collections.Generic.IAsyncEnumerable`1
  isExternal: true
  name: IAsyncEnumerable<T>
  nameWithType: IAsyncEnumerable<T>
  fullName: System.Collections.Generic.IAsyncEnumerable<T>
  nameWithType.vb: IAsyncEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IAsyncEnumerable(Of T)
  name.vb: IAsyncEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IAsyncEnumerable`1
    name: IAsyncEnumerable
    nameWithType: IAsyncEnumerable
    fullName: System.Collections.Generic.IAsyncEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IAsyncEnumerable`1
    name: IAsyncEnumerable
    nameWithType: IAsyncEnumerable
    fullName: System.Collections.Generic.IAsyncEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Threading.Channels.ChannelReader{Steeltoe.Messaging.IMessage}.ReadAsync(System.Threading.CancellationToken)
  commentId: M:System.Threading.Channels.ChannelReader{Steeltoe.Messaging.IMessage}.ReadAsync(System.Threading.CancellationToken)
  parent: System.Threading.Channels.ChannelReader{Steeltoe.Messaging.IMessage}
  definition: System.Threading.Channels.ChannelReader`1.ReadAsync(System.Threading.CancellationToken)
  name: ReadAsync(CancellationToken)
  nameWithType: ChannelReader<IMessage>.ReadAsync(CancellationToken)
  fullName: System.Threading.Channels.ChannelReader<Steeltoe.Messaging.IMessage>.ReadAsync(System.Threading.CancellationToken)
  nameWithType.vb: ChannelReader(Of IMessage).ReadAsync(CancellationToken)
  fullName.vb: System.Threading.Channels.ChannelReader(Of Steeltoe.Messaging.IMessage).ReadAsync(System.Threading.CancellationToken)
  spec.csharp:
  - uid: System.Threading.Channels.ChannelReader`1.ReadAsync(System.Threading.CancellationToken)
    name: ReadAsync
    nameWithType: ChannelReader<IMessage>.ReadAsync
    fullName: System.Threading.Channels.ChannelReader<Steeltoe.Messaging.IMessage>.ReadAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Threading.Channels.ChannelReader`1.ReadAsync(System.Threading.CancellationToken)
    name: ReadAsync
    nameWithType: ChannelReader(Of IMessage).ReadAsync
    fullName: System.Threading.Channels.ChannelReader(Of Steeltoe.Messaging.IMessage).ReadAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Support.NotSupportedChannelReader.ReadAsync*
  commentId: Overload:Steeltoe.Messaging.Support.NotSupportedChannelReader.ReadAsync
  name: ReadAsync
  nameWithType: NotSupportedChannelReader.ReadAsync
  fullName: Steeltoe.Messaging.Support.NotSupportedChannelReader.ReadAsync
- uid: System.Threading.Tasks.ValueTask{Steeltoe.Messaging.IMessage}
  commentId: T:System.Threading.Tasks.ValueTask{Steeltoe.Messaging.IMessage}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.ValueTask`1
  name: ValueTask<IMessage>
  nameWithType: ValueTask<IMessage>
  fullName: System.Threading.Tasks.ValueTask<Steeltoe.Messaging.IMessage>
  nameWithType.vb: ValueTask(Of IMessage)
  fullName.vb: System.Threading.Tasks.ValueTask(Of Steeltoe.Messaging.IMessage)
  name.vb: ValueTask(Of IMessage)
  spec.csharp:
  - uid: System.Threading.Tasks.ValueTask`1
    name: ValueTask
    nameWithType: ValueTask
    fullName: System.Threading.Tasks.ValueTask
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.ValueTask`1
    name: ValueTask
    nameWithType: ValueTask
    fullName: System.Threading.Tasks.ValueTask
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Channels.ChannelReader`1.ReadAsync(System.Threading.CancellationToken)
  commentId: M:System.Threading.Channels.ChannelReader`1.ReadAsync(System.Threading.CancellationToken)
  isExternal: true
  name: ReadAsync(CancellationToken)
  nameWithType: ChannelReader<T>.ReadAsync(CancellationToken)
  fullName: System.Threading.Channels.ChannelReader<T>.ReadAsync(System.Threading.CancellationToken)
  nameWithType.vb: ChannelReader(Of T).ReadAsync(CancellationToken)
  fullName.vb: System.Threading.Channels.ChannelReader(Of T).ReadAsync(System.Threading.CancellationToken)
  spec.csharp:
  - uid: System.Threading.Channels.ChannelReader`1.ReadAsync(System.Threading.CancellationToken)
    name: ReadAsync
    nameWithType: ChannelReader<T>.ReadAsync
    fullName: System.Threading.Channels.ChannelReader<T>.ReadAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Threading.Channels.ChannelReader`1.ReadAsync(System.Threading.CancellationToken)
    name: ReadAsync
    nameWithType: ChannelReader(Of T).ReadAsync
    fullName: System.Threading.Channels.ChannelReader(Of T).ReadAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.ValueTask`1
  commentId: T:System.Threading.Tasks.ValueTask`1
  isExternal: true
  name: ValueTask<TResult>
  nameWithType: ValueTask<TResult>
  fullName: System.Threading.Tasks.ValueTask<TResult>
  nameWithType.vb: ValueTask(Of TResult)
  fullName.vb: System.Threading.Tasks.ValueTask(Of TResult)
  name.vb: ValueTask(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.ValueTask`1
    name: ValueTask
    nameWithType: ValueTask
    fullName: System.Threading.Tasks.ValueTask
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.ValueTask`1
    name: ValueTask
    nameWithType: ValueTask
    fullName: System.Threading.Tasks.ValueTask
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Channels.ChannelReader{Steeltoe.Messaging.IMessage}.TryRead(Steeltoe.Messaging.IMessage@)
  commentId: M:System.Threading.Channels.ChannelReader{Steeltoe.Messaging.IMessage}.TryRead(Steeltoe.Messaging.IMessage@)
  parent: System.Threading.Channels.ChannelReader{Steeltoe.Messaging.IMessage}
  definition: System.Threading.Channels.ChannelReader`1.TryRead(`0@)
  name: TryRead(IMessage)
  nameWithType: ChannelReader<IMessage>.TryRead(IMessage)
  fullName: System.Threading.Channels.ChannelReader<Steeltoe.Messaging.IMessage>.TryRead(Steeltoe.Messaging.IMessage)
  nameWithType.vb: ChannelReader(Of IMessage).TryRead(IMessage)
  fullName.vb: System.Threading.Channels.ChannelReader(Of Steeltoe.Messaging.IMessage).TryRead(Steeltoe.Messaging.IMessage)
  spec.csharp:
  - uid: System.Threading.Channels.ChannelReader`1.TryRead(`0@)
    name: TryRead
    nameWithType: ChannelReader<IMessage>.TryRead
    fullName: System.Threading.Channels.ChannelReader<Steeltoe.Messaging.IMessage>.TryRead
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Threading.Channels.ChannelReader`1.TryRead(`0@)
    name: TryRead
    nameWithType: ChannelReader(Of IMessage).TryRead
    fullName: System.Threading.Channels.ChannelReader(Of Steeltoe.Messaging.IMessage).TryRead
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Support.NotSupportedChannelReader.TryRead*
  commentId: Overload:Steeltoe.Messaging.Support.NotSupportedChannelReader.TryRead
  name: TryRead
  nameWithType: NotSupportedChannelReader.TryRead
  fullName: Steeltoe.Messaging.Support.NotSupportedChannelReader.TryRead
- uid: Steeltoe.Messaging.IMessage
  commentId: T:Steeltoe.Messaging.IMessage
  parent: Steeltoe.Messaging
  name: IMessage
  nameWithType: IMessage
  fullName: Steeltoe.Messaging.IMessage
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Threading.Channels.ChannelReader`1.TryRead(`0@)
  commentId: M:System.Threading.Channels.ChannelReader`1.TryRead(`0@)
  isExternal: true
  name: TryRead(T)
  nameWithType: ChannelReader<T>.TryRead(T)
  fullName: System.Threading.Channels.ChannelReader<T>.TryRead(T)
  nameWithType.vb: ChannelReader(Of T).TryRead(T)
  fullName.vb: System.Threading.Channels.ChannelReader(Of T).TryRead(T)
  spec.csharp:
  - uid: System.Threading.Channels.ChannelReader`1.TryRead(`0@)
    name: TryRead
    nameWithType: ChannelReader<T>.TryRead
    fullName: System.Threading.Channels.ChannelReader<T>.TryRead
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Threading.Channels.ChannelReader`1.TryRead(`0@)
    name: TryRead
    nameWithType: ChannelReader(Of T).TryRead
    fullName: System.Threading.Channels.ChannelReader(Of T).TryRead
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging
  commentId: N:Steeltoe.Messaging
  name: Steeltoe.Messaging
  nameWithType: Steeltoe.Messaging
  fullName: Steeltoe.Messaging
- uid: System.Threading.Channels.ChannelReader{Steeltoe.Messaging.IMessage}.WaitToReadAsync(System.Threading.CancellationToken)
  commentId: M:System.Threading.Channels.ChannelReader{Steeltoe.Messaging.IMessage}.WaitToReadAsync(System.Threading.CancellationToken)
  parent: System.Threading.Channels.ChannelReader{Steeltoe.Messaging.IMessage}
  definition: System.Threading.Channels.ChannelReader`1.WaitToReadAsync(System.Threading.CancellationToken)
  name: WaitToReadAsync(CancellationToken)
  nameWithType: ChannelReader<IMessage>.WaitToReadAsync(CancellationToken)
  fullName: System.Threading.Channels.ChannelReader<Steeltoe.Messaging.IMessage>.WaitToReadAsync(System.Threading.CancellationToken)
  nameWithType.vb: ChannelReader(Of IMessage).WaitToReadAsync(CancellationToken)
  fullName.vb: System.Threading.Channels.ChannelReader(Of Steeltoe.Messaging.IMessage).WaitToReadAsync(System.Threading.CancellationToken)
  spec.csharp:
  - uid: System.Threading.Channels.ChannelReader`1.WaitToReadAsync(System.Threading.CancellationToken)
    name: WaitToReadAsync
    nameWithType: ChannelReader<IMessage>.WaitToReadAsync
    fullName: System.Threading.Channels.ChannelReader<Steeltoe.Messaging.IMessage>.WaitToReadAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Threading.Channels.ChannelReader`1.WaitToReadAsync(System.Threading.CancellationToken)
    name: WaitToReadAsync
    nameWithType: ChannelReader(Of IMessage).WaitToReadAsync
    fullName: System.Threading.Channels.ChannelReader(Of Steeltoe.Messaging.IMessage).WaitToReadAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Support.NotSupportedChannelReader.WaitToReadAsync*
  commentId: Overload:Steeltoe.Messaging.Support.NotSupportedChannelReader.WaitToReadAsync
  name: WaitToReadAsync
  nameWithType: NotSupportedChannelReader.WaitToReadAsync
  fullName: Steeltoe.Messaging.Support.NotSupportedChannelReader.WaitToReadAsync
- uid: System.Threading.Tasks.ValueTask{System.Boolean}
  commentId: T:System.Threading.Tasks.ValueTask{System.Boolean}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.ValueTask`1
  name: ValueTask<Boolean>
  nameWithType: ValueTask<Boolean>
  fullName: System.Threading.Tasks.ValueTask<System.Boolean>
  nameWithType.vb: ValueTask(Of Boolean)
  fullName.vb: System.Threading.Tasks.ValueTask(Of System.Boolean)
  name.vb: ValueTask(Of Boolean)
  spec.csharp:
  - uid: System.Threading.Tasks.ValueTask`1
    name: ValueTask
    nameWithType: ValueTask
    fullName: System.Threading.Tasks.ValueTask
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.ValueTask`1
    name: ValueTask
    nameWithType: ValueTask
    fullName: System.Threading.Tasks.ValueTask
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Channels.ChannelReader`1.WaitToReadAsync(System.Threading.CancellationToken)
  commentId: M:System.Threading.Channels.ChannelReader`1.WaitToReadAsync(System.Threading.CancellationToken)
  isExternal: true
  name: WaitToReadAsync(CancellationToken)
  nameWithType: ChannelReader<T>.WaitToReadAsync(CancellationToken)
  fullName: System.Threading.Channels.ChannelReader<T>.WaitToReadAsync(System.Threading.CancellationToken)
  nameWithType.vb: ChannelReader(Of T).WaitToReadAsync(CancellationToken)
  fullName.vb: System.Threading.Channels.ChannelReader(Of T).WaitToReadAsync(System.Threading.CancellationToken)
  spec.csharp:
  - uid: System.Threading.Channels.ChannelReader`1.WaitToReadAsync(System.Threading.CancellationToken)
    name: WaitToReadAsync
    nameWithType: ChannelReader<T>.WaitToReadAsync
    fullName: System.Threading.Channels.ChannelReader<T>.WaitToReadAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Threading.Channels.ChannelReader`1.WaitToReadAsync(System.Threading.CancellationToken)
    name: WaitToReadAsync
    nameWithType: ChannelReader(Of T).WaitToReadAsync
    fullName: System.Threading.Channels.ChannelReader(Of T).WaitToReadAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
