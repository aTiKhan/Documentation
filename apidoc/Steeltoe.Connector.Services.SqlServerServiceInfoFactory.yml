### YamlMime:ManagedReference
items:
- uid: Steeltoe.Connector.Services.SqlServerServiceInfoFactory
  commentId: T:Steeltoe.Connector.Services.SqlServerServiceInfoFactory
  id: SqlServerServiceInfoFactory
  parent: Steeltoe.Connector.Services
  children:
  - Steeltoe.Connector.Services.SqlServerServiceInfoFactory.#ctor
  - Steeltoe.Connector.Services.SqlServerServiceInfoFactory.#ctor(Steeltoe.Connector.Services.Tags,System.String)
  - Steeltoe.Connector.Services.SqlServerServiceInfoFactory.#ctor(Steeltoe.Connector.Services.Tags,System.String[])
  - Steeltoe.Connector.Services.SqlServerServiceInfoFactory.Create(Service)
  - Steeltoe.Connector.Services.SqlServerServiceInfoFactory.Create(System.String,System.String,System.String,System.String)
  langs:
  - csharp
  - vb
  name: SqlServerServiceInfoFactory
  nameWithType: SqlServerServiceInfoFactory
  fullName: Steeltoe.Connector.Services.SqlServerServiceInfoFactory
  type: Class
  source:
    remote:
      path: src/Connectors/src/ConnectorBase/Services/SqlServerServiceInfoFactory.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: SqlServerServiceInfoFactory
    path: ../Steeltoe/src/Connectors/src/ConnectorBase/Services/SqlServerServiceInfoFactory.cs
    startLine: 8
  assemblies:
  - Steeltoe.Connector.ConnectorBase
  namespace: Steeltoe.Connector.Services
  syntax:
    content: 'public class SqlServerServiceInfoFactory : ServiceInfoFactory, IServiceInfoFactory'
    content.vb: >-
      Public Class SqlServerServiceInfoFactory

          Inherits ServiceInfoFactory

          Implements IServiceInfoFactory
  inheritance:
  - System.Object
  - Steeltoe.Connector.Services.ServiceInfoFactory
  implements:
  - Steeltoe.Connector.Services.IServiceInfoFactory
  inheritedMembers:
  - Steeltoe.Connector.Services.ServiceInfoFactory.DefaultUriScheme
  - Steeltoe.Connector.Services.ServiceInfoFactory.Accepts(Service)
  - Steeltoe.Connector.Services.ServiceInfoFactory.ServiceInfoTags
  - Steeltoe.Connector.Services.ServiceInfoFactory.UriKeys
  - Steeltoe.Connector.Services.ServiceInfoFactory.UriSchemes
  - Steeltoe.Connector.Services.ServiceInfoFactory.TagsMatch(Service)
  - Steeltoe.Connector.Services.ServiceInfoFactory.LabelStartsWithTag(Service)
  - Steeltoe.Connector.Services.ServiceInfoFactory.UriMatchesScheme(Service)
  - Steeltoe.Connector.Services.ServiceInfoFactory.UriKeyMatchesScheme(Service)
  - Steeltoe.Connector.Services.ServiceInfoFactory.GetUsernameFromCredentials(System.Collections.Generic.Dictionary{System.String,Credential})
  - Steeltoe.Connector.Services.ServiceInfoFactory.GetPasswordFromCredentials(System.Collections.Generic.Dictionary{System.String,Credential})
  - Steeltoe.Connector.Services.ServiceInfoFactory.GetPortFromCredentials(System.Collections.Generic.Dictionary{System.String,Credential})
  - Steeltoe.Connector.Services.ServiceInfoFactory.GetTlsPortFromCredentials(System.Collections.Generic.Dictionary{System.String,Credential})
  - Steeltoe.Connector.Services.ServiceInfoFactory.GetHostFromCredentials(System.Collections.Generic.Dictionary{System.String,Credential})
  - Steeltoe.Connector.Services.ServiceInfoFactory.GetUriFromCredentials(System.Collections.Generic.Dictionary{System.String,Credential})
  - Steeltoe.Connector.Services.ServiceInfoFactory.GetClientIdFromCredentials(System.Collections.Generic.Dictionary{System.String,Credential})
  - Steeltoe.Connector.Services.ServiceInfoFactory.GetClientSecretFromCredentials(System.Collections.Generic.Dictionary{System.String,Credential})
  - Steeltoe.Connector.Services.ServiceInfoFactory.GetAccessTokenUriFromCredentials(System.Collections.Generic.Dictionary{System.String,Credential})
  - Steeltoe.Connector.Services.ServiceInfoFactory.GetStringFromCredentials(System.Collections.Generic.Dictionary{System.String,Credential},System.String)
  - Steeltoe.Connector.Services.ServiceInfoFactory.GetStringFromCredentials(System.Collections.Generic.Dictionary{System.String,Credential},System.Collections.Generic.List{System.String})
  - Steeltoe.Connector.Services.ServiceInfoFactory.GetBoolFromCredentials(System.Collections.Generic.Dictionary{System.String,Credential},System.String)
  - Steeltoe.Connector.Services.ServiceInfoFactory.GetIntFromCredentials(System.Collections.Generic.Dictionary{System.String,Credential},System.String)
  - Steeltoe.Connector.Services.ServiceInfoFactory.GetIntFromCredentials(System.Collections.Generic.Dictionary{System.String,Credential},System.Collections.Generic.List{System.String})
  - Steeltoe.Connector.Services.ServiceInfoFactory.GetListFromCredentials(System.Collections.Generic.Dictionary{System.String,Credential},System.String)
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Steeltoe.Connector.Services.SqlServerServiceInfoFactory.#ctor
  commentId: M:Steeltoe.Connector.Services.SqlServerServiceInfoFactory.#ctor
  id: '#ctor'
  parent: Steeltoe.Connector.Services.SqlServerServiceInfoFactory
  langs:
  - csharp
  - vb
  name: SqlServerServiceInfoFactory()
  nameWithType: SqlServerServiceInfoFactory.SqlServerServiceInfoFactory()
  fullName: Steeltoe.Connector.Services.SqlServerServiceInfoFactory.SqlServerServiceInfoFactory()
  type: Constructor
  source:
    remote:
      path: src/Connectors/src/ConnectorBase/Services/SqlServerServiceInfoFactory.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: .ctor
    path: ../Steeltoe/src/Connectors/src/ConnectorBase/Services/SqlServerServiceInfoFactory.cs
    startLine: 10
  assemblies:
  - Steeltoe.Connector.ConnectorBase
  namespace: Steeltoe.Connector.Services
  syntax:
    content: public SqlServerServiceInfoFactory()
    content.vb: Public Sub New
  overload: Steeltoe.Connector.Services.SqlServerServiceInfoFactory.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Steeltoe.Connector.Services.SqlServerServiceInfoFactory.#ctor(Steeltoe.Connector.Services.Tags,System.String)
  commentId: M:Steeltoe.Connector.Services.SqlServerServiceInfoFactory.#ctor(Steeltoe.Connector.Services.Tags,System.String)
  id: '#ctor(Steeltoe.Connector.Services.Tags,System.String)'
  parent: Steeltoe.Connector.Services.SqlServerServiceInfoFactory
  langs:
  - csharp
  - vb
  name: SqlServerServiceInfoFactory(Tags, String)
  nameWithType: SqlServerServiceInfoFactory.SqlServerServiceInfoFactory(Tags, String)
  fullName: Steeltoe.Connector.Services.SqlServerServiceInfoFactory.SqlServerServiceInfoFactory(Steeltoe.Connector.Services.Tags, System.String)
  type: Constructor
  source:
    remote:
      path: src/Connectors/src/ConnectorBase/Services/SqlServerServiceInfoFactory.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: .ctor
    path: ../Steeltoe/src/Connectors/src/ConnectorBase/Services/SqlServerServiceInfoFactory.cs
    startLine: 15
  assemblies:
  - Steeltoe.Connector.ConnectorBase
  namespace: Steeltoe.Connector.Services
  syntax:
    content: public SqlServerServiceInfoFactory(Tags tags, string scheme)
    parameters:
    - id: tags
      type: Steeltoe.Connector.Services.Tags
    - id: scheme
      type: System.String
    content.vb: Public Sub New(tags As Tags, scheme As String)
  overload: Steeltoe.Connector.Services.SqlServerServiceInfoFactory.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Steeltoe.Connector.Services.SqlServerServiceInfoFactory.#ctor(Steeltoe.Connector.Services.Tags,System.String[])
  commentId: M:Steeltoe.Connector.Services.SqlServerServiceInfoFactory.#ctor(Steeltoe.Connector.Services.Tags,System.String[])
  id: '#ctor(Steeltoe.Connector.Services.Tags,System.String[])'
  parent: Steeltoe.Connector.Services.SqlServerServiceInfoFactory
  langs:
  - csharp
  - vb
  name: SqlServerServiceInfoFactory(Tags, String[])
  nameWithType: SqlServerServiceInfoFactory.SqlServerServiceInfoFactory(Tags, String[])
  fullName: Steeltoe.Connector.Services.SqlServerServiceInfoFactory.SqlServerServiceInfoFactory(Steeltoe.Connector.Services.Tags, System.String[])
  type: Constructor
  source:
    remote:
      path: src/Connectors/src/ConnectorBase/Services/SqlServerServiceInfoFactory.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: .ctor
    path: ../Steeltoe/src/Connectors/src/ConnectorBase/Services/SqlServerServiceInfoFactory.cs
    startLine: 20
  assemblies:
  - Steeltoe.Connector.ConnectorBase
  namespace: Steeltoe.Connector.Services
  syntax:
    content: public SqlServerServiceInfoFactory(Tags tags, string[] schemes)
    parameters:
    - id: tags
      type: Steeltoe.Connector.Services.Tags
    - id: schemes
      type: System.String[]
    content.vb: Public Sub New(tags As Tags, schemes As String())
  overload: Steeltoe.Connector.Services.SqlServerServiceInfoFactory.#ctor*
  nameWithType.vb: SqlServerServiceInfoFactory.SqlServerServiceInfoFactory(Tags, String())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Steeltoe.Connector.Services.SqlServerServiceInfoFactory.SqlServerServiceInfoFactory(Steeltoe.Connector.Services.Tags, System.String())
  name.vb: SqlServerServiceInfoFactory(Tags, String())
- uid: Steeltoe.Connector.Services.SqlServerServiceInfoFactory.Create(Service)
  commentId: M:Steeltoe.Connector.Services.SqlServerServiceInfoFactory.Create(Service)
  id: Create(Service)
  parent: Steeltoe.Connector.Services.SqlServerServiceInfoFactory
  langs:
  - csharp
  - vb
  name: Create(Service)
  nameWithType: SqlServerServiceInfoFactory.Create(Service)
  fullName: Steeltoe.Connector.Services.SqlServerServiceInfoFactory.Create(Service)
  type: Method
  source:
    remote:
      path: src/Connectors/src/ConnectorBase/Services/SqlServerServiceInfoFactory.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Create
    path: ../Steeltoe/src/Connectors/src/ConnectorBase/Services/SqlServerServiceInfoFactory.cs
    startLine: 25
  assemblies:
  - Steeltoe.Connector.ConnectorBase
  namespace: Steeltoe.Connector.Services
  syntax:
    content: public override IServiceInfo Create(Service binding)
    parameters:
    - id: binding
      type: Service
    return:
      type: Steeltoe.Connector.Services.IServiceInfo
    content.vb: Public Overrides Function Create(binding As Service) As IServiceInfo
  overridden: Steeltoe.Connector.Services.ServiceInfoFactory.Create(Service)
  overload: Steeltoe.Connector.Services.SqlServerServiceInfoFactory.Create*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Steeltoe.Connector.Services.SqlServerServiceInfoFactory.Create(System.String,System.String,System.String,System.String)
  commentId: M:Steeltoe.Connector.Services.SqlServerServiceInfoFactory.Create(System.String,System.String,System.String,System.String)
  id: Create(System.String,System.String,System.String,System.String)
  parent: Steeltoe.Connector.Services.SqlServerServiceInfoFactory
  langs:
  - csharp
  - vb
  name: Create(String, String, String, String)
  nameWithType: SqlServerServiceInfoFactory.Create(String, String, String, String)
  fullName: Steeltoe.Connector.Services.SqlServerServiceInfoFactory.Create(System.String, System.String, System.String, System.String)
  type: Method
  source:
    remote:
      path: src/Connectors/src/ConnectorBase/Services/SqlServerServiceInfoFactory.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Create
    path: ../Steeltoe/src/Connectors/src/ConnectorBase/Services/SqlServerServiceInfoFactory.cs
    startLine: 47
  assemblies:
  - Steeltoe.Connector.ConnectorBase
  namespace: Steeltoe.Connector.Services
  syntax:
    content: public IServiceInfo Create(string id, string url, string username, string password)
    parameters:
    - id: id
      type: System.String
    - id: url
      type: System.String
    - id: username
      type: System.String
    - id: password
      type: System.String
    return:
      type: Steeltoe.Connector.Services.IServiceInfo
    content.vb: Public Function Create(id As String, url As String, username As String, password As String) As IServiceInfo
  overload: Steeltoe.Connector.Services.SqlServerServiceInfoFactory.Create*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Steeltoe.Connector.Services
  commentId: N:Steeltoe.Connector.Services
  name: Steeltoe.Connector.Services
  nameWithType: Steeltoe.Connector.Services
  fullName: Steeltoe.Connector.Services
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Steeltoe.Connector.Services.ServiceInfoFactory
  commentId: T:Steeltoe.Connector.Services.ServiceInfoFactory
  parent: Steeltoe.Connector.Services
  name: ServiceInfoFactory
  nameWithType: ServiceInfoFactory
  fullName: Steeltoe.Connector.Services.ServiceInfoFactory
- uid: Steeltoe.Connector.Services.IServiceInfoFactory
  commentId: T:Steeltoe.Connector.Services.IServiceInfoFactory
  parent: Steeltoe.Connector.Services
  name: IServiceInfoFactory
  nameWithType: IServiceInfoFactory
  fullName: Steeltoe.Connector.Services.IServiceInfoFactory
- uid: Steeltoe.Connector.Services.ServiceInfoFactory.DefaultUriScheme
  commentId: P:Steeltoe.Connector.Services.ServiceInfoFactory.DefaultUriScheme
  parent: Steeltoe.Connector.Services.ServiceInfoFactory
  name: DefaultUriScheme
  nameWithType: ServiceInfoFactory.DefaultUriScheme
  fullName: Steeltoe.Connector.Services.ServiceInfoFactory.DefaultUriScheme
- uid: Steeltoe.Connector.Services.ServiceInfoFactory.Accepts(Service)
  commentId: M:Steeltoe.Connector.Services.ServiceInfoFactory.Accepts(Service)
  parent: Steeltoe.Connector.Services.ServiceInfoFactory
  isExternal: true
  name: Accepts(Service)
  nameWithType: ServiceInfoFactory.Accepts(Service)
  fullName: Steeltoe.Connector.Services.ServiceInfoFactory.Accepts(Service)
  spec.csharp:
  - uid: Steeltoe.Connector.Services.ServiceInfoFactory.Accepts(Service)
    name: Accepts
    nameWithType: ServiceInfoFactory.Accepts
    fullName: Steeltoe.Connector.Services.ServiceInfoFactory.Accepts
  - name: (
    nameWithType: (
    fullName: (
  - uid: Service
    name: Service
    nameWithType: Service
    fullName: Service
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Connector.Services.ServiceInfoFactory.Accepts(Service)
    name: Accepts
    nameWithType: ServiceInfoFactory.Accepts
    fullName: Steeltoe.Connector.Services.ServiceInfoFactory.Accepts
  - name: (
    nameWithType: (
    fullName: (
  - uid: Service
    name: Service
    nameWithType: Service
    fullName: Service
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Connector.Services.ServiceInfoFactory.ServiceInfoTags
  commentId: P:Steeltoe.Connector.Services.ServiceInfoFactory.ServiceInfoTags
  parent: Steeltoe.Connector.Services.ServiceInfoFactory
  name: ServiceInfoTags
  nameWithType: ServiceInfoFactory.ServiceInfoTags
  fullName: Steeltoe.Connector.Services.ServiceInfoFactory.ServiceInfoTags
- uid: Steeltoe.Connector.Services.ServiceInfoFactory.UriKeys
  commentId: P:Steeltoe.Connector.Services.ServiceInfoFactory.UriKeys
  parent: Steeltoe.Connector.Services.ServiceInfoFactory
  name: UriKeys
  nameWithType: ServiceInfoFactory.UriKeys
  fullName: Steeltoe.Connector.Services.ServiceInfoFactory.UriKeys
- uid: Steeltoe.Connector.Services.ServiceInfoFactory.UriSchemes
  commentId: P:Steeltoe.Connector.Services.ServiceInfoFactory.UriSchemes
  parent: Steeltoe.Connector.Services.ServiceInfoFactory
  name: UriSchemes
  nameWithType: ServiceInfoFactory.UriSchemes
  fullName: Steeltoe.Connector.Services.ServiceInfoFactory.UriSchemes
- uid: Steeltoe.Connector.Services.ServiceInfoFactory.TagsMatch(Service)
  commentId: M:Steeltoe.Connector.Services.ServiceInfoFactory.TagsMatch(Service)
  parent: Steeltoe.Connector.Services.ServiceInfoFactory
  isExternal: true
  name: TagsMatch(Service)
  nameWithType: ServiceInfoFactory.TagsMatch(Service)
  fullName: Steeltoe.Connector.Services.ServiceInfoFactory.TagsMatch(Service)
  spec.csharp:
  - uid: Steeltoe.Connector.Services.ServiceInfoFactory.TagsMatch(Service)
    name: TagsMatch
    nameWithType: ServiceInfoFactory.TagsMatch
    fullName: Steeltoe.Connector.Services.ServiceInfoFactory.TagsMatch
  - name: (
    nameWithType: (
    fullName: (
  - uid: Service
    name: Service
    nameWithType: Service
    fullName: Service
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Connector.Services.ServiceInfoFactory.TagsMatch(Service)
    name: TagsMatch
    nameWithType: ServiceInfoFactory.TagsMatch
    fullName: Steeltoe.Connector.Services.ServiceInfoFactory.TagsMatch
  - name: (
    nameWithType: (
    fullName: (
  - uid: Service
    name: Service
    nameWithType: Service
    fullName: Service
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Connector.Services.ServiceInfoFactory.LabelStartsWithTag(Service)
  commentId: M:Steeltoe.Connector.Services.ServiceInfoFactory.LabelStartsWithTag(Service)
  parent: Steeltoe.Connector.Services.ServiceInfoFactory
  isExternal: true
  name: LabelStartsWithTag(Service)
  nameWithType: ServiceInfoFactory.LabelStartsWithTag(Service)
  fullName: Steeltoe.Connector.Services.ServiceInfoFactory.LabelStartsWithTag(Service)
  spec.csharp:
  - uid: Steeltoe.Connector.Services.ServiceInfoFactory.LabelStartsWithTag(Service)
    name: LabelStartsWithTag
    nameWithType: ServiceInfoFactory.LabelStartsWithTag
    fullName: Steeltoe.Connector.Services.ServiceInfoFactory.LabelStartsWithTag
  - name: (
    nameWithType: (
    fullName: (
  - uid: Service
    name: Service
    nameWithType: Service
    fullName: Service
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Connector.Services.ServiceInfoFactory.LabelStartsWithTag(Service)
    name: LabelStartsWithTag
    nameWithType: ServiceInfoFactory.LabelStartsWithTag
    fullName: Steeltoe.Connector.Services.ServiceInfoFactory.LabelStartsWithTag
  - name: (
    nameWithType: (
    fullName: (
  - uid: Service
    name: Service
    nameWithType: Service
    fullName: Service
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Connector.Services.ServiceInfoFactory.UriMatchesScheme(Service)
  commentId: M:Steeltoe.Connector.Services.ServiceInfoFactory.UriMatchesScheme(Service)
  parent: Steeltoe.Connector.Services.ServiceInfoFactory
  isExternal: true
  name: UriMatchesScheme(Service)
  nameWithType: ServiceInfoFactory.UriMatchesScheme(Service)
  fullName: Steeltoe.Connector.Services.ServiceInfoFactory.UriMatchesScheme(Service)
  spec.csharp:
  - uid: Steeltoe.Connector.Services.ServiceInfoFactory.UriMatchesScheme(Service)
    name: UriMatchesScheme
    nameWithType: ServiceInfoFactory.UriMatchesScheme
    fullName: Steeltoe.Connector.Services.ServiceInfoFactory.UriMatchesScheme
  - name: (
    nameWithType: (
    fullName: (
  - uid: Service
    name: Service
    nameWithType: Service
    fullName: Service
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Connector.Services.ServiceInfoFactory.UriMatchesScheme(Service)
    name: UriMatchesScheme
    nameWithType: ServiceInfoFactory.UriMatchesScheme
    fullName: Steeltoe.Connector.Services.ServiceInfoFactory.UriMatchesScheme
  - name: (
    nameWithType: (
    fullName: (
  - uid: Service
    name: Service
    nameWithType: Service
    fullName: Service
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Connector.Services.ServiceInfoFactory.UriKeyMatchesScheme(Service)
  commentId: M:Steeltoe.Connector.Services.ServiceInfoFactory.UriKeyMatchesScheme(Service)
  parent: Steeltoe.Connector.Services.ServiceInfoFactory
  isExternal: true
  name: UriKeyMatchesScheme(Service)
  nameWithType: ServiceInfoFactory.UriKeyMatchesScheme(Service)
  fullName: Steeltoe.Connector.Services.ServiceInfoFactory.UriKeyMatchesScheme(Service)
  spec.csharp:
  - uid: Steeltoe.Connector.Services.ServiceInfoFactory.UriKeyMatchesScheme(Service)
    name: UriKeyMatchesScheme
    nameWithType: ServiceInfoFactory.UriKeyMatchesScheme
    fullName: Steeltoe.Connector.Services.ServiceInfoFactory.UriKeyMatchesScheme
  - name: (
    nameWithType: (
    fullName: (
  - uid: Service
    name: Service
    nameWithType: Service
    fullName: Service
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Connector.Services.ServiceInfoFactory.UriKeyMatchesScheme(Service)
    name: UriKeyMatchesScheme
    nameWithType: ServiceInfoFactory.UriKeyMatchesScheme
    fullName: Steeltoe.Connector.Services.ServiceInfoFactory.UriKeyMatchesScheme
  - name: (
    nameWithType: (
    fullName: (
  - uid: Service
    name: Service
    nameWithType: Service
    fullName: Service
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Connector.Services.ServiceInfoFactory.GetUsernameFromCredentials(System.Collections.Generic.Dictionary{System.String,Credential})
  commentId: M:Steeltoe.Connector.Services.ServiceInfoFactory.GetUsernameFromCredentials(System.Collections.Generic.Dictionary{System.String,Credential})
  parent: Steeltoe.Connector.Services.ServiceInfoFactory
  isExternal: true
  name: GetUsernameFromCredentials(Dictionary<String, Credential>)
  nameWithType: ServiceInfoFactory.GetUsernameFromCredentials(Dictionary<String, Credential>)
  fullName: Steeltoe.Connector.Services.ServiceInfoFactory.GetUsernameFromCredentials(System.Collections.Generic.Dictionary<System.String, Credential>)
  nameWithType.vb: ServiceInfoFactory.GetUsernameFromCredentials(Dictionary(Of String, Credential))
  fullName.vb: Steeltoe.Connector.Services.ServiceInfoFactory.GetUsernameFromCredentials(System.Collections.Generic.Dictionary(Of System.String, Credential))
  name.vb: GetUsernameFromCredentials(Dictionary(Of String, Credential))
  spec.csharp:
  - uid: Steeltoe.Connector.Services.ServiceInfoFactory.GetUsernameFromCredentials(System.Collections.Generic.Dictionary{System.String,Credential})
    name: GetUsernameFromCredentials
    nameWithType: ServiceInfoFactory.GetUsernameFromCredentials
    fullName: Steeltoe.Connector.Services.ServiceInfoFactory.GetUsernameFromCredentials
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Credential
    name: Credential
    nameWithType: Credential
    fullName: Credential
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Connector.Services.ServiceInfoFactory.GetUsernameFromCredentials(System.Collections.Generic.Dictionary{System.String,Credential})
    name: GetUsernameFromCredentials
    nameWithType: ServiceInfoFactory.GetUsernameFromCredentials
    fullName: Steeltoe.Connector.Services.ServiceInfoFactory.GetUsernameFromCredentials
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Credential
    name: Credential
    nameWithType: Credential
    fullName: Credential
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Connector.Services.ServiceInfoFactory.GetPasswordFromCredentials(System.Collections.Generic.Dictionary{System.String,Credential})
  commentId: M:Steeltoe.Connector.Services.ServiceInfoFactory.GetPasswordFromCredentials(System.Collections.Generic.Dictionary{System.String,Credential})
  parent: Steeltoe.Connector.Services.ServiceInfoFactory
  isExternal: true
  name: GetPasswordFromCredentials(Dictionary<String, Credential>)
  nameWithType: ServiceInfoFactory.GetPasswordFromCredentials(Dictionary<String, Credential>)
  fullName: Steeltoe.Connector.Services.ServiceInfoFactory.GetPasswordFromCredentials(System.Collections.Generic.Dictionary<System.String, Credential>)
  nameWithType.vb: ServiceInfoFactory.GetPasswordFromCredentials(Dictionary(Of String, Credential))
  fullName.vb: Steeltoe.Connector.Services.ServiceInfoFactory.GetPasswordFromCredentials(System.Collections.Generic.Dictionary(Of System.String, Credential))
  name.vb: GetPasswordFromCredentials(Dictionary(Of String, Credential))
  spec.csharp:
  - uid: Steeltoe.Connector.Services.ServiceInfoFactory.GetPasswordFromCredentials(System.Collections.Generic.Dictionary{System.String,Credential})
    name: GetPasswordFromCredentials
    nameWithType: ServiceInfoFactory.GetPasswordFromCredentials
    fullName: Steeltoe.Connector.Services.ServiceInfoFactory.GetPasswordFromCredentials
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Credential
    name: Credential
    nameWithType: Credential
    fullName: Credential
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Connector.Services.ServiceInfoFactory.GetPasswordFromCredentials(System.Collections.Generic.Dictionary{System.String,Credential})
    name: GetPasswordFromCredentials
    nameWithType: ServiceInfoFactory.GetPasswordFromCredentials
    fullName: Steeltoe.Connector.Services.ServiceInfoFactory.GetPasswordFromCredentials
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Credential
    name: Credential
    nameWithType: Credential
    fullName: Credential
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Connector.Services.ServiceInfoFactory.GetPortFromCredentials(System.Collections.Generic.Dictionary{System.String,Credential})
  commentId: M:Steeltoe.Connector.Services.ServiceInfoFactory.GetPortFromCredentials(System.Collections.Generic.Dictionary{System.String,Credential})
  parent: Steeltoe.Connector.Services.ServiceInfoFactory
  isExternal: true
  name: GetPortFromCredentials(Dictionary<String, Credential>)
  nameWithType: ServiceInfoFactory.GetPortFromCredentials(Dictionary<String, Credential>)
  fullName: Steeltoe.Connector.Services.ServiceInfoFactory.GetPortFromCredentials(System.Collections.Generic.Dictionary<System.String, Credential>)
  nameWithType.vb: ServiceInfoFactory.GetPortFromCredentials(Dictionary(Of String, Credential))
  fullName.vb: Steeltoe.Connector.Services.ServiceInfoFactory.GetPortFromCredentials(System.Collections.Generic.Dictionary(Of System.String, Credential))
  name.vb: GetPortFromCredentials(Dictionary(Of String, Credential))
  spec.csharp:
  - uid: Steeltoe.Connector.Services.ServiceInfoFactory.GetPortFromCredentials(System.Collections.Generic.Dictionary{System.String,Credential})
    name: GetPortFromCredentials
    nameWithType: ServiceInfoFactory.GetPortFromCredentials
    fullName: Steeltoe.Connector.Services.ServiceInfoFactory.GetPortFromCredentials
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Credential
    name: Credential
    nameWithType: Credential
    fullName: Credential
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Connector.Services.ServiceInfoFactory.GetPortFromCredentials(System.Collections.Generic.Dictionary{System.String,Credential})
    name: GetPortFromCredentials
    nameWithType: ServiceInfoFactory.GetPortFromCredentials
    fullName: Steeltoe.Connector.Services.ServiceInfoFactory.GetPortFromCredentials
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Credential
    name: Credential
    nameWithType: Credential
    fullName: Credential
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Connector.Services.ServiceInfoFactory.GetTlsPortFromCredentials(System.Collections.Generic.Dictionary{System.String,Credential})
  commentId: M:Steeltoe.Connector.Services.ServiceInfoFactory.GetTlsPortFromCredentials(System.Collections.Generic.Dictionary{System.String,Credential})
  parent: Steeltoe.Connector.Services.ServiceInfoFactory
  isExternal: true
  name: GetTlsPortFromCredentials(Dictionary<String, Credential>)
  nameWithType: ServiceInfoFactory.GetTlsPortFromCredentials(Dictionary<String, Credential>)
  fullName: Steeltoe.Connector.Services.ServiceInfoFactory.GetTlsPortFromCredentials(System.Collections.Generic.Dictionary<System.String, Credential>)
  nameWithType.vb: ServiceInfoFactory.GetTlsPortFromCredentials(Dictionary(Of String, Credential))
  fullName.vb: Steeltoe.Connector.Services.ServiceInfoFactory.GetTlsPortFromCredentials(System.Collections.Generic.Dictionary(Of System.String, Credential))
  name.vb: GetTlsPortFromCredentials(Dictionary(Of String, Credential))
  spec.csharp:
  - uid: Steeltoe.Connector.Services.ServiceInfoFactory.GetTlsPortFromCredentials(System.Collections.Generic.Dictionary{System.String,Credential})
    name: GetTlsPortFromCredentials
    nameWithType: ServiceInfoFactory.GetTlsPortFromCredentials
    fullName: Steeltoe.Connector.Services.ServiceInfoFactory.GetTlsPortFromCredentials
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Credential
    name: Credential
    nameWithType: Credential
    fullName: Credential
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Connector.Services.ServiceInfoFactory.GetTlsPortFromCredentials(System.Collections.Generic.Dictionary{System.String,Credential})
    name: GetTlsPortFromCredentials
    nameWithType: ServiceInfoFactory.GetTlsPortFromCredentials
    fullName: Steeltoe.Connector.Services.ServiceInfoFactory.GetTlsPortFromCredentials
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Credential
    name: Credential
    nameWithType: Credential
    fullName: Credential
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Connector.Services.ServiceInfoFactory.GetHostFromCredentials(System.Collections.Generic.Dictionary{System.String,Credential})
  commentId: M:Steeltoe.Connector.Services.ServiceInfoFactory.GetHostFromCredentials(System.Collections.Generic.Dictionary{System.String,Credential})
  parent: Steeltoe.Connector.Services.ServiceInfoFactory
  isExternal: true
  name: GetHostFromCredentials(Dictionary<String, Credential>)
  nameWithType: ServiceInfoFactory.GetHostFromCredentials(Dictionary<String, Credential>)
  fullName: Steeltoe.Connector.Services.ServiceInfoFactory.GetHostFromCredentials(System.Collections.Generic.Dictionary<System.String, Credential>)
  nameWithType.vb: ServiceInfoFactory.GetHostFromCredentials(Dictionary(Of String, Credential))
  fullName.vb: Steeltoe.Connector.Services.ServiceInfoFactory.GetHostFromCredentials(System.Collections.Generic.Dictionary(Of System.String, Credential))
  name.vb: GetHostFromCredentials(Dictionary(Of String, Credential))
  spec.csharp:
  - uid: Steeltoe.Connector.Services.ServiceInfoFactory.GetHostFromCredentials(System.Collections.Generic.Dictionary{System.String,Credential})
    name: GetHostFromCredentials
    nameWithType: ServiceInfoFactory.GetHostFromCredentials
    fullName: Steeltoe.Connector.Services.ServiceInfoFactory.GetHostFromCredentials
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Credential
    name: Credential
    nameWithType: Credential
    fullName: Credential
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Connector.Services.ServiceInfoFactory.GetHostFromCredentials(System.Collections.Generic.Dictionary{System.String,Credential})
    name: GetHostFromCredentials
    nameWithType: ServiceInfoFactory.GetHostFromCredentials
    fullName: Steeltoe.Connector.Services.ServiceInfoFactory.GetHostFromCredentials
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Credential
    name: Credential
    nameWithType: Credential
    fullName: Credential
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Connector.Services.ServiceInfoFactory.GetUriFromCredentials(System.Collections.Generic.Dictionary{System.String,Credential})
  commentId: M:Steeltoe.Connector.Services.ServiceInfoFactory.GetUriFromCredentials(System.Collections.Generic.Dictionary{System.String,Credential})
  parent: Steeltoe.Connector.Services.ServiceInfoFactory
  isExternal: true
  name: GetUriFromCredentials(Dictionary<String, Credential>)
  nameWithType: ServiceInfoFactory.GetUriFromCredentials(Dictionary<String, Credential>)
  fullName: Steeltoe.Connector.Services.ServiceInfoFactory.GetUriFromCredentials(System.Collections.Generic.Dictionary<System.String, Credential>)
  nameWithType.vb: ServiceInfoFactory.GetUriFromCredentials(Dictionary(Of String, Credential))
  fullName.vb: Steeltoe.Connector.Services.ServiceInfoFactory.GetUriFromCredentials(System.Collections.Generic.Dictionary(Of System.String, Credential))
  name.vb: GetUriFromCredentials(Dictionary(Of String, Credential))
  spec.csharp:
  - uid: Steeltoe.Connector.Services.ServiceInfoFactory.GetUriFromCredentials(System.Collections.Generic.Dictionary{System.String,Credential})
    name: GetUriFromCredentials
    nameWithType: ServiceInfoFactory.GetUriFromCredentials
    fullName: Steeltoe.Connector.Services.ServiceInfoFactory.GetUriFromCredentials
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Credential
    name: Credential
    nameWithType: Credential
    fullName: Credential
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Connector.Services.ServiceInfoFactory.GetUriFromCredentials(System.Collections.Generic.Dictionary{System.String,Credential})
    name: GetUriFromCredentials
    nameWithType: ServiceInfoFactory.GetUriFromCredentials
    fullName: Steeltoe.Connector.Services.ServiceInfoFactory.GetUriFromCredentials
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Credential
    name: Credential
    nameWithType: Credential
    fullName: Credential
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Connector.Services.ServiceInfoFactory.GetClientIdFromCredentials(System.Collections.Generic.Dictionary{System.String,Credential})
  commentId: M:Steeltoe.Connector.Services.ServiceInfoFactory.GetClientIdFromCredentials(System.Collections.Generic.Dictionary{System.String,Credential})
  parent: Steeltoe.Connector.Services.ServiceInfoFactory
  isExternal: true
  name: GetClientIdFromCredentials(Dictionary<String, Credential>)
  nameWithType: ServiceInfoFactory.GetClientIdFromCredentials(Dictionary<String, Credential>)
  fullName: Steeltoe.Connector.Services.ServiceInfoFactory.GetClientIdFromCredentials(System.Collections.Generic.Dictionary<System.String, Credential>)
  nameWithType.vb: ServiceInfoFactory.GetClientIdFromCredentials(Dictionary(Of String, Credential))
  fullName.vb: Steeltoe.Connector.Services.ServiceInfoFactory.GetClientIdFromCredentials(System.Collections.Generic.Dictionary(Of System.String, Credential))
  name.vb: GetClientIdFromCredentials(Dictionary(Of String, Credential))
  spec.csharp:
  - uid: Steeltoe.Connector.Services.ServiceInfoFactory.GetClientIdFromCredentials(System.Collections.Generic.Dictionary{System.String,Credential})
    name: GetClientIdFromCredentials
    nameWithType: ServiceInfoFactory.GetClientIdFromCredentials
    fullName: Steeltoe.Connector.Services.ServiceInfoFactory.GetClientIdFromCredentials
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Credential
    name: Credential
    nameWithType: Credential
    fullName: Credential
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Connector.Services.ServiceInfoFactory.GetClientIdFromCredentials(System.Collections.Generic.Dictionary{System.String,Credential})
    name: GetClientIdFromCredentials
    nameWithType: ServiceInfoFactory.GetClientIdFromCredentials
    fullName: Steeltoe.Connector.Services.ServiceInfoFactory.GetClientIdFromCredentials
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Credential
    name: Credential
    nameWithType: Credential
    fullName: Credential
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Connector.Services.ServiceInfoFactory.GetClientSecretFromCredentials(System.Collections.Generic.Dictionary{System.String,Credential})
  commentId: M:Steeltoe.Connector.Services.ServiceInfoFactory.GetClientSecretFromCredentials(System.Collections.Generic.Dictionary{System.String,Credential})
  parent: Steeltoe.Connector.Services.ServiceInfoFactory
  isExternal: true
  name: GetClientSecretFromCredentials(Dictionary<String, Credential>)
  nameWithType: ServiceInfoFactory.GetClientSecretFromCredentials(Dictionary<String, Credential>)
  fullName: Steeltoe.Connector.Services.ServiceInfoFactory.GetClientSecretFromCredentials(System.Collections.Generic.Dictionary<System.String, Credential>)
  nameWithType.vb: ServiceInfoFactory.GetClientSecretFromCredentials(Dictionary(Of String, Credential))
  fullName.vb: Steeltoe.Connector.Services.ServiceInfoFactory.GetClientSecretFromCredentials(System.Collections.Generic.Dictionary(Of System.String, Credential))
  name.vb: GetClientSecretFromCredentials(Dictionary(Of String, Credential))
  spec.csharp:
  - uid: Steeltoe.Connector.Services.ServiceInfoFactory.GetClientSecretFromCredentials(System.Collections.Generic.Dictionary{System.String,Credential})
    name: GetClientSecretFromCredentials
    nameWithType: ServiceInfoFactory.GetClientSecretFromCredentials
    fullName: Steeltoe.Connector.Services.ServiceInfoFactory.GetClientSecretFromCredentials
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Credential
    name: Credential
    nameWithType: Credential
    fullName: Credential
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Connector.Services.ServiceInfoFactory.GetClientSecretFromCredentials(System.Collections.Generic.Dictionary{System.String,Credential})
    name: GetClientSecretFromCredentials
    nameWithType: ServiceInfoFactory.GetClientSecretFromCredentials
    fullName: Steeltoe.Connector.Services.ServiceInfoFactory.GetClientSecretFromCredentials
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Credential
    name: Credential
    nameWithType: Credential
    fullName: Credential
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Connector.Services.ServiceInfoFactory.GetAccessTokenUriFromCredentials(System.Collections.Generic.Dictionary{System.String,Credential})
  commentId: M:Steeltoe.Connector.Services.ServiceInfoFactory.GetAccessTokenUriFromCredentials(System.Collections.Generic.Dictionary{System.String,Credential})
  parent: Steeltoe.Connector.Services.ServiceInfoFactory
  isExternal: true
  name: GetAccessTokenUriFromCredentials(Dictionary<String, Credential>)
  nameWithType: ServiceInfoFactory.GetAccessTokenUriFromCredentials(Dictionary<String, Credential>)
  fullName: Steeltoe.Connector.Services.ServiceInfoFactory.GetAccessTokenUriFromCredentials(System.Collections.Generic.Dictionary<System.String, Credential>)
  nameWithType.vb: ServiceInfoFactory.GetAccessTokenUriFromCredentials(Dictionary(Of String, Credential))
  fullName.vb: Steeltoe.Connector.Services.ServiceInfoFactory.GetAccessTokenUriFromCredentials(System.Collections.Generic.Dictionary(Of System.String, Credential))
  name.vb: GetAccessTokenUriFromCredentials(Dictionary(Of String, Credential))
  spec.csharp:
  - uid: Steeltoe.Connector.Services.ServiceInfoFactory.GetAccessTokenUriFromCredentials(System.Collections.Generic.Dictionary{System.String,Credential})
    name: GetAccessTokenUriFromCredentials
    nameWithType: ServiceInfoFactory.GetAccessTokenUriFromCredentials
    fullName: Steeltoe.Connector.Services.ServiceInfoFactory.GetAccessTokenUriFromCredentials
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Credential
    name: Credential
    nameWithType: Credential
    fullName: Credential
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Connector.Services.ServiceInfoFactory.GetAccessTokenUriFromCredentials(System.Collections.Generic.Dictionary{System.String,Credential})
    name: GetAccessTokenUriFromCredentials
    nameWithType: ServiceInfoFactory.GetAccessTokenUriFromCredentials
    fullName: Steeltoe.Connector.Services.ServiceInfoFactory.GetAccessTokenUriFromCredentials
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Credential
    name: Credential
    nameWithType: Credential
    fullName: Credential
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Connector.Services.ServiceInfoFactory.GetStringFromCredentials(System.Collections.Generic.Dictionary{System.String,Credential},System.String)
  commentId: M:Steeltoe.Connector.Services.ServiceInfoFactory.GetStringFromCredentials(System.Collections.Generic.Dictionary{System.String,Credential},System.String)
  parent: Steeltoe.Connector.Services.ServiceInfoFactory
  isExternal: true
  name: GetStringFromCredentials(Dictionary<String, Credential>, String)
  nameWithType: ServiceInfoFactory.GetStringFromCredentials(Dictionary<String, Credential>, String)
  fullName: Steeltoe.Connector.Services.ServiceInfoFactory.GetStringFromCredentials(System.Collections.Generic.Dictionary<System.String, Credential>, System.String)
  nameWithType.vb: ServiceInfoFactory.GetStringFromCredentials(Dictionary(Of String, Credential), String)
  fullName.vb: Steeltoe.Connector.Services.ServiceInfoFactory.GetStringFromCredentials(System.Collections.Generic.Dictionary(Of System.String, Credential), System.String)
  name.vb: GetStringFromCredentials(Dictionary(Of String, Credential), String)
  spec.csharp:
  - uid: Steeltoe.Connector.Services.ServiceInfoFactory.GetStringFromCredentials(System.Collections.Generic.Dictionary{System.String,Credential},System.String)
    name: GetStringFromCredentials
    nameWithType: ServiceInfoFactory.GetStringFromCredentials
    fullName: Steeltoe.Connector.Services.ServiceInfoFactory.GetStringFromCredentials
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Credential
    name: Credential
    nameWithType: Credential
    fullName: Credential
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Connector.Services.ServiceInfoFactory.GetStringFromCredentials(System.Collections.Generic.Dictionary{System.String,Credential},System.String)
    name: GetStringFromCredentials
    nameWithType: ServiceInfoFactory.GetStringFromCredentials
    fullName: Steeltoe.Connector.Services.ServiceInfoFactory.GetStringFromCredentials
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Credential
    name: Credential
    nameWithType: Credential
    fullName: Credential
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Connector.Services.ServiceInfoFactory.GetStringFromCredentials(System.Collections.Generic.Dictionary{System.String,Credential},System.Collections.Generic.List{System.String})
  commentId: M:Steeltoe.Connector.Services.ServiceInfoFactory.GetStringFromCredentials(System.Collections.Generic.Dictionary{System.String,Credential},System.Collections.Generic.List{System.String})
  parent: Steeltoe.Connector.Services.ServiceInfoFactory
  isExternal: true
  name: GetStringFromCredentials(Dictionary<String, Credential>, List<String>)
  nameWithType: ServiceInfoFactory.GetStringFromCredentials(Dictionary<String, Credential>, List<String>)
  fullName: Steeltoe.Connector.Services.ServiceInfoFactory.GetStringFromCredentials(System.Collections.Generic.Dictionary<System.String, Credential>, System.Collections.Generic.List<System.String>)
  nameWithType.vb: ServiceInfoFactory.GetStringFromCredentials(Dictionary(Of String, Credential), List(Of String))
  fullName.vb: Steeltoe.Connector.Services.ServiceInfoFactory.GetStringFromCredentials(System.Collections.Generic.Dictionary(Of System.String, Credential), System.Collections.Generic.List(Of System.String))
  name.vb: GetStringFromCredentials(Dictionary(Of String, Credential), List(Of String))
  spec.csharp:
  - uid: Steeltoe.Connector.Services.ServiceInfoFactory.GetStringFromCredentials(System.Collections.Generic.Dictionary{System.String,Credential},System.Collections.Generic.List{System.String})
    name: GetStringFromCredentials
    nameWithType: ServiceInfoFactory.GetStringFromCredentials
    fullName: Steeltoe.Connector.Services.ServiceInfoFactory.GetStringFromCredentials
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Credential
    name: Credential
    nameWithType: Credential
    fullName: Credential
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Connector.Services.ServiceInfoFactory.GetStringFromCredentials(System.Collections.Generic.Dictionary{System.String,Credential},System.Collections.Generic.List{System.String})
    name: GetStringFromCredentials
    nameWithType: ServiceInfoFactory.GetStringFromCredentials
    fullName: Steeltoe.Connector.Services.ServiceInfoFactory.GetStringFromCredentials
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Credential
    name: Credential
    nameWithType: Credential
    fullName: Credential
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Connector.Services.ServiceInfoFactory.GetBoolFromCredentials(System.Collections.Generic.Dictionary{System.String,Credential},System.String)
  commentId: M:Steeltoe.Connector.Services.ServiceInfoFactory.GetBoolFromCredentials(System.Collections.Generic.Dictionary{System.String,Credential},System.String)
  parent: Steeltoe.Connector.Services.ServiceInfoFactory
  isExternal: true
  name: GetBoolFromCredentials(Dictionary<String, Credential>, String)
  nameWithType: ServiceInfoFactory.GetBoolFromCredentials(Dictionary<String, Credential>, String)
  fullName: Steeltoe.Connector.Services.ServiceInfoFactory.GetBoolFromCredentials(System.Collections.Generic.Dictionary<System.String, Credential>, System.String)
  nameWithType.vb: ServiceInfoFactory.GetBoolFromCredentials(Dictionary(Of String, Credential), String)
  fullName.vb: Steeltoe.Connector.Services.ServiceInfoFactory.GetBoolFromCredentials(System.Collections.Generic.Dictionary(Of System.String, Credential), System.String)
  name.vb: GetBoolFromCredentials(Dictionary(Of String, Credential), String)
  spec.csharp:
  - uid: Steeltoe.Connector.Services.ServiceInfoFactory.GetBoolFromCredentials(System.Collections.Generic.Dictionary{System.String,Credential},System.String)
    name: GetBoolFromCredentials
    nameWithType: ServiceInfoFactory.GetBoolFromCredentials
    fullName: Steeltoe.Connector.Services.ServiceInfoFactory.GetBoolFromCredentials
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Credential
    name: Credential
    nameWithType: Credential
    fullName: Credential
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Connector.Services.ServiceInfoFactory.GetBoolFromCredentials(System.Collections.Generic.Dictionary{System.String,Credential},System.String)
    name: GetBoolFromCredentials
    nameWithType: ServiceInfoFactory.GetBoolFromCredentials
    fullName: Steeltoe.Connector.Services.ServiceInfoFactory.GetBoolFromCredentials
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Credential
    name: Credential
    nameWithType: Credential
    fullName: Credential
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Connector.Services.ServiceInfoFactory.GetIntFromCredentials(System.Collections.Generic.Dictionary{System.String,Credential},System.String)
  commentId: M:Steeltoe.Connector.Services.ServiceInfoFactory.GetIntFromCredentials(System.Collections.Generic.Dictionary{System.String,Credential},System.String)
  parent: Steeltoe.Connector.Services.ServiceInfoFactory
  isExternal: true
  name: GetIntFromCredentials(Dictionary<String, Credential>, String)
  nameWithType: ServiceInfoFactory.GetIntFromCredentials(Dictionary<String, Credential>, String)
  fullName: Steeltoe.Connector.Services.ServiceInfoFactory.GetIntFromCredentials(System.Collections.Generic.Dictionary<System.String, Credential>, System.String)
  nameWithType.vb: ServiceInfoFactory.GetIntFromCredentials(Dictionary(Of String, Credential), String)
  fullName.vb: Steeltoe.Connector.Services.ServiceInfoFactory.GetIntFromCredentials(System.Collections.Generic.Dictionary(Of System.String, Credential), System.String)
  name.vb: GetIntFromCredentials(Dictionary(Of String, Credential), String)
  spec.csharp:
  - uid: Steeltoe.Connector.Services.ServiceInfoFactory.GetIntFromCredentials(System.Collections.Generic.Dictionary{System.String,Credential},System.String)
    name: GetIntFromCredentials
    nameWithType: ServiceInfoFactory.GetIntFromCredentials
    fullName: Steeltoe.Connector.Services.ServiceInfoFactory.GetIntFromCredentials
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Credential
    name: Credential
    nameWithType: Credential
    fullName: Credential
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Connector.Services.ServiceInfoFactory.GetIntFromCredentials(System.Collections.Generic.Dictionary{System.String,Credential},System.String)
    name: GetIntFromCredentials
    nameWithType: ServiceInfoFactory.GetIntFromCredentials
    fullName: Steeltoe.Connector.Services.ServiceInfoFactory.GetIntFromCredentials
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Credential
    name: Credential
    nameWithType: Credential
    fullName: Credential
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Connector.Services.ServiceInfoFactory.GetIntFromCredentials(System.Collections.Generic.Dictionary{System.String,Credential},System.Collections.Generic.List{System.String})
  commentId: M:Steeltoe.Connector.Services.ServiceInfoFactory.GetIntFromCredentials(System.Collections.Generic.Dictionary{System.String,Credential},System.Collections.Generic.List{System.String})
  parent: Steeltoe.Connector.Services.ServiceInfoFactory
  isExternal: true
  name: GetIntFromCredentials(Dictionary<String, Credential>, List<String>)
  nameWithType: ServiceInfoFactory.GetIntFromCredentials(Dictionary<String, Credential>, List<String>)
  fullName: Steeltoe.Connector.Services.ServiceInfoFactory.GetIntFromCredentials(System.Collections.Generic.Dictionary<System.String, Credential>, System.Collections.Generic.List<System.String>)
  nameWithType.vb: ServiceInfoFactory.GetIntFromCredentials(Dictionary(Of String, Credential), List(Of String))
  fullName.vb: Steeltoe.Connector.Services.ServiceInfoFactory.GetIntFromCredentials(System.Collections.Generic.Dictionary(Of System.String, Credential), System.Collections.Generic.List(Of System.String))
  name.vb: GetIntFromCredentials(Dictionary(Of String, Credential), List(Of String))
  spec.csharp:
  - uid: Steeltoe.Connector.Services.ServiceInfoFactory.GetIntFromCredentials(System.Collections.Generic.Dictionary{System.String,Credential},System.Collections.Generic.List{System.String})
    name: GetIntFromCredentials
    nameWithType: ServiceInfoFactory.GetIntFromCredentials
    fullName: Steeltoe.Connector.Services.ServiceInfoFactory.GetIntFromCredentials
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Credential
    name: Credential
    nameWithType: Credential
    fullName: Credential
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Connector.Services.ServiceInfoFactory.GetIntFromCredentials(System.Collections.Generic.Dictionary{System.String,Credential},System.Collections.Generic.List{System.String})
    name: GetIntFromCredentials
    nameWithType: ServiceInfoFactory.GetIntFromCredentials
    fullName: Steeltoe.Connector.Services.ServiceInfoFactory.GetIntFromCredentials
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Credential
    name: Credential
    nameWithType: Credential
    fullName: Credential
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Connector.Services.ServiceInfoFactory.GetListFromCredentials(System.Collections.Generic.Dictionary{System.String,Credential},System.String)
  commentId: M:Steeltoe.Connector.Services.ServiceInfoFactory.GetListFromCredentials(System.Collections.Generic.Dictionary{System.String,Credential},System.String)
  parent: Steeltoe.Connector.Services.ServiceInfoFactory
  isExternal: true
  name: GetListFromCredentials(Dictionary<String, Credential>, String)
  nameWithType: ServiceInfoFactory.GetListFromCredentials(Dictionary<String, Credential>, String)
  fullName: Steeltoe.Connector.Services.ServiceInfoFactory.GetListFromCredentials(System.Collections.Generic.Dictionary<System.String, Credential>, System.String)
  nameWithType.vb: ServiceInfoFactory.GetListFromCredentials(Dictionary(Of String, Credential), String)
  fullName.vb: Steeltoe.Connector.Services.ServiceInfoFactory.GetListFromCredentials(System.Collections.Generic.Dictionary(Of System.String, Credential), System.String)
  name.vb: GetListFromCredentials(Dictionary(Of String, Credential), String)
  spec.csharp:
  - uid: Steeltoe.Connector.Services.ServiceInfoFactory.GetListFromCredentials(System.Collections.Generic.Dictionary{System.String,Credential},System.String)
    name: GetListFromCredentials
    nameWithType: ServiceInfoFactory.GetListFromCredentials
    fullName: Steeltoe.Connector.Services.ServiceInfoFactory.GetListFromCredentials
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Credential
    name: Credential
    nameWithType: Credential
    fullName: Credential
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Connector.Services.ServiceInfoFactory.GetListFromCredentials(System.Collections.Generic.Dictionary{System.String,Credential},System.String)
    name: GetListFromCredentials
    nameWithType: ServiceInfoFactory.GetListFromCredentials
    fullName: Steeltoe.Connector.Services.ServiceInfoFactory.GetListFromCredentials
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Credential
    name: Credential
    nameWithType: Credential
    fullName: Credential
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Steeltoe.Connector.Services.SqlServerServiceInfoFactory.#ctor*
  commentId: Overload:Steeltoe.Connector.Services.SqlServerServiceInfoFactory.#ctor
  name: SqlServerServiceInfoFactory
  nameWithType: SqlServerServiceInfoFactory.SqlServerServiceInfoFactory
  fullName: Steeltoe.Connector.Services.SqlServerServiceInfoFactory.SqlServerServiceInfoFactory
- uid: Steeltoe.Connector.Services.Tags
  commentId: T:Steeltoe.Connector.Services.Tags
  parent: Steeltoe.Connector.Services
  name: Tags
  nameWithType: Tags
  fullName: Steeltoe.Connector.Services.Tags
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.String[]
  isExternal: true
  name: String[]
  nameWithType: String[]
  fullName: System.String[]
  nameWithType.vb: String()
  fullName.vb: System.String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Steeltoe.Connector.Services.ServiceInfoFactory.Create(Service)
  commentId: M:Steeltoe.Connector.Services.ServiceInfoFactory.Create(Service)
  parent: Steeltoe.Connector.Services.ServiceInfoFactory
  isExternal: true
  name: Create(Service)
  nameWithType: ServiceInfoFactory.Create(Service)
  fullName: Steeltoe.Connector.Services.ServiceInfoFactory.Create(Service)
  spec.csharp:
  - uid: Steeltoe.Connector.Services.ServiceInfoFactory.Create(Service)
    name: Create
    nameWithType: ServiceInfoFactory.Create
    fullName: Steeltoe.Connector.Services.ServiceInfoFactory.Create
  - name: (
    nameWithType: (
    fullName: (
  - uid: Service
    name: Service
    nameWithType: Service
    fullName: Service
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Connector.Services.ServiceInfoFactory.Create(Service)
    name: Create
    nameWithType: ServiceInfoFactory.Create
    fullName: Steeltoe.Connector.Services.ServiceInfoFactory.Create
  - name: (
    nameWithType: (
    fullName: (
  - uid: Service
    name: Service
    nameWithType: Service
    fullName: Service
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Connector.Services.SqlServerServiceInfoFactory.Create*
  commentId: Overload:Steeltoe.Connector.Services.SqlServerServiceInfoFactory.Create
  name: Create
  nameWithType: SqlServerServiceInfoFactory.Create
  fullName: Steeltoe.Connector.Services.SqlServerServiceInfoFactory.Create
- uid: Service
  isExternal: true
  name: Service
  nameWithType: Service
  fullName: Service
- uid: Steeltoe.Connector.Services.IServiceInfo
  commentId: T:Steeltoe.Connector.Services.IServiceInfo
  parent: Steeltoe.Connector.Services
  name: IServiceInfo
  nameWithType: IServiceInfo
  fullName: Steeltoe.Connector.Services.IServiceInfo
