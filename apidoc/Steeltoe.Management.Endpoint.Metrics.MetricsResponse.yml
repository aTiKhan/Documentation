### YamlMime:ManagedReference
items:
- uid: Steeltoe.Management.Endpoint.Metrics.MetricsResponse
  commentId: T:Steeltoe.Management.Endpoint.Metrics.MetricsResponse
  id: MetricsResponse
  parent: Steeltoe.Management.Endpoint.Metrics
  children:
  - Steeltoe.Management.Endpoint.Metrics.MetricsResponse.#ctor(System.String,System.Collections.Generic.List{Steeltoe.Management.Endpoint.Metrics.MetricSample},System.Collections.Generic.List{Steeltoe.Management.Endpoint.Metrics.MetricTag})
  - Steeltoe.Management.Endpoint.Metrics.MetricsResponse.AvailableTags
  - Steeltoe.Management.Endpoint.Metrics.MetricsResponse.Measurements
  - Steeltoe.Management.Endpoint.Metrics.MetricsResponse.Name
  langs:
  - csharp
  - vb
  name: MetricsResponse
  nameWithType: MetricsResponse
  fullName: Steeltoe.Management.Endpoint.Metrics.MetricsResponse
  type: Class
  source:
    remote:
      path: src/Management/src/EndpointBase/Metrics/MetricsResponse.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: MetricsResponse
    path: ../Steeltoe/src/Management/src/EndpointBase/Metrics/MetricsResponse.cs
    startLine: 9
  assemblies:
  - Steeltoe.Management.EndpointBase
  namespace: Steeltoe.Management.Endpoint.Metrics
  syntax:
    content: 'public class MetricsResponse : IMetricsResponse'
    content.vb: >-
      Public Class MetricsResponse

          Implements IMetricsResponse
  inheritance:
  - System.Object
  implements:
  - Steeltoe.Management.Endpoint.Metrics.IMetricsResponse
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Steeltoe.Management.Endpoint.Metrics.MetricsResponse.Name
  commentId: P:Steeltoe.Management.Endpoint.Metrics.MetricsResponse.Name
  id: Name
  parent: Steeltoe.Management.Endpoint.Metrics.MetricsResponse
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: MetricsResponse.Name
  fullName: Steeltoe.Management.Endpoint.Metrics.MetricsResponse.Name
  type: Property
  source:
    remote:
      path: src/Management/src/EndpointBase/Metrics/MetricsResponse.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Name
    path: ../Steeltoe/src/Management/src/EndpointBase/Metrics/MetricsResponse.cs
    startLine: 11
  assemblies:
  - Steeltoe.Management.EndpointBase
  namespace: Steeltoe.Management.Endpoint.Metrics
  syntax:
    content: >-
      [JsonPropertyName("name")]

      public string Name { get; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonPropertyName("name")>

      Public ReadOnly Property Name As String
  overload: Steeltoe.Management.Endpoint.Metrics.MetricsResponse.Name*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: name
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Steeltoe.Management.Endpoint.Metrics.MetricsResponse.Measurements
  commentId: P:Steeltoe.Management.Endpoint.Metrics.MetricsResponse.Measurements
  id: Measurements
  parent: Steeltoe.Management.Endpoint.Metrics.MetricsResponse
  langs:
  - csharp
  - vb
  name: Measurements
  nameWithType: MetricsResponse.Measurements
  fullName: Steeltoe.Management.Endpoint.Metrics.MetricsResponse.Measurements
  type: Property
  source:
    remote:
      path: src/Management/src/EndpointBase/Metrics/MetricsResponse.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Measurements
    path: ../Steeltoe/src/Management/src/EndpointBase/Metrics/MetricsResponse.cs
    startLine: 14
  assemblies:
  - Steeltoe.Management.EndpointBase
  namespace: Steeltoe.Management.Endpoint.Metrics
  syntax:
    content: >-
      [JsonPropertyName("measurements")]

      public List<MetricSample> Measurements { get; }
    parameters: []
    return:
      type: System.Collections.Generic.List{Steeltoe.Management.Endpoint.Metrics.MetricSample}
    content.vb: >-
      <JsonPropertyName("measurements")>

      Public ReadOnly Property Measurements As List(Of MetricSample)
  overload: Steeltoe.Management.Endpoint.Metrics.MetricsResponse.Measurements*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: measurements
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Steeltoe.Management.Endpoint.Metrics.MetricsResponse.AvailableTags
  commentId: P:Steeltoe.Management.Endpoint.Metrics.MetricsResponse.AvailableTags
  id: AvailableTags
  parent: Steeltoe.Management.Endpoint.Metrics.MetricsResponse
  langs:
  - csharp
  - vb
  name: AvailableTags
  nameWithType: MetricsResponse.AvailableTags
  fullName: Steeltoe.Management.Endpoint.Metrics.MetricsResponse.AvailableTags
  type: Property
  source:
    remote:
      path: src/Management/src/EndpointBase/Metrics/MetricsResponse.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: AvailableTags
    path: ../Steeltoe/src/Management/src/EndpointBase/Metrics/MetricsResponse.cs
    startLine: 17
  assemblies:
  - Steeltoe.Management.EndpointBase
  namespace: Steeltoe.Management.Endpoint.Metrics
  syntax:
    content: >-
      [JsonPropertyName("availableTags")]

      public List<MetricTag> AvailableTags { get; }
    parameters: []
    return:
      type: System.Collections.Generic.List{Steeltoe.Management.Endpoint.Metrics.MetricTag}
    content.vb: >-
      <JsonPropertyName("availableTags")>

      Public ReadOnly Property AvailableTags As List(Of MetricTag)
  overload: Steeltoe.Management.Endpoint.Metrics.MetricsResponse.AvailableTags*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: availableTags
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Steeltoe.Management.Endpoint.Metrics.MetricsResponse.#ctor(System.String,System.Collections.Generic.List{Steeltoe.Management.Endpoint.Metrics.MetricSample},System.Collections.Generic.List{Steeltoe.Management.Endpoint.Metrics.MetricTag})
  commentId: M:Steeltoe.Management.Endpoint.Metrics.MetricsResponse.#ctor(System.String,System.Collections.Generic.List{Steeltoe.Management.Endpoint.Metrics.MetricSample},System.Collections.Generic.List{Steeltoe.Management.Endpoint.Metrics.MetricTag})
  id: '#ctor(System.String,System.Collections.Generic.List{Steeltoe.Management.Endpoint.Metrics.MetricSample},System.Collections.Generic.List{Steeltoe.Management.Endpoint.Metrics.MetricTag})'
  parent: Steeltoe.Management.Endpoint.Metrics.MetricsResponse
  langs:
  - csharp
  - vb
  name: MetricsResponse(String, List<MetricSample>, List<MetricTag>)
  nameWithType: MetricsResponse.MetricsResponse(String, List<MetricSample>, List<MetricTag>)
  fullName: Steeltoe.Management.Endpoint.Metrics.MetricsResponse.MetricsResponse(System.String, System.Collections.Generic.List<Steeltoe.Management.Endpoint.Metrics.MetricSample>, System.Collections.Generic.List<Steeltoe.Management.Endpoint.Metrics.MetricTag>)
  type: Constructor
  source:
    remote:
      path: src/Management/src/EndpointBase/Metrics/MetricsResponse.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: .ctor
    path: ../Steeltoe/src/Management/src/EndpointBase/Metrics/MetricsResponse.cs
    startLine: 20
  assemblies:
  - Steeltoe.Management.EndpointBase
  namespace: Steeltoe.Management.Endpoint.Metrics
  syntax:
    content: public MetricsResponse(string name, List<MetricSample> measurements, List<MetricTag> availableTags)
    parameters:
    - id: name
      type: System.String
    - id: measurements
      type: System.Collections.Generic.List{Steeltoe.Management.Endpoint.Metrics.MetricSample}
    - id: availableTags
      type: System.Collections.Generic.List{Steeltoe.Management.Endpoint.Metrics.MetricTag}
    content.vb: Public Sub New(name As String, measurements As List(Of MetricSample), availableTags As List(Of MetricTag))
  overload: Steeltoe.Management.Endpoint.Metrics.MetricsResponse.#ctor*
  nameWithType.vb: MetricsResponse.MetricsResponse(String, List(Of MetricSample), List(Of MetricTag))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Steeltoe.Management.Endpoint.Metrics.MetricsResponse.MetricsResponse(System.String, System.Collections.Generic.List(Of Steeltoe.Management.Endpoint.Metrics.MetricSample), System.Collections.Generic.List(Of Steeltoe.Management.Endpoint.Metrics.MetricTag))
  name.vb: MetricsResponse(String, List(Of MetricSample), List(Of MetricTag))
references:
- uid: Steeltoe.Management.Endpoint.Metrics
  commentId: N:Steeltoe.Management.Endpoint.Metrics
  name: Steeltoe.Management.Endpoint.Metrics
  nameWithType: Steeltoe.Management.Endpoint.Metrics
  fullName: Steeltoe.Management.Endpoint.Metrics
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Steeltoe.Management.Endpoint.Metrics.IMetricsResponse
  commentId: T:Steeltoe.Management.Endpoint.Metrics.IMetricsResponse
  parent: Steeltoe.Management.Endpoint.Metrics
  name: IMetricsResponse
  nameWithType: IMetricsResponse
  fullName: Steeltoe.Management.Endpoint.Metrics.IMetricsResponse
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Steeltoe.Management.Endpoint.Metrics.MetricsResponse.Name*
  commentId: Overload:Steeltoe.Management.Endpoint.Metrics.MetricsResponse.Name
  name: Name
  nameWithType: MetricsResponse.Name
  fullName: Steeltoe.Management.Endpoint.Metrics.MetricsResponse.Name
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Steeltoe.Management.Endpoint.Metrics.MetricsResponse.Measurements*
  commentId: Overload:Steeltoe.Management.Endpoint.Metrics.MetricsResponse.Measurements
  name: Measurements
  nameWithType: MetricsResponse.Measurements
  fullName: Steeltoe.Management.Endpoint.Metrics.MetricsResponse.Measurements
- uid: System.Collections.Generic.List{Steeltoe.Management.Endpoint.Metrics.MetricSample}
  commentId: T:System.Collections.Generic.List{Steeltoe.Management.Endpoint.Metrics.MetricSample}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<MetricSample>
  nameWithType: List<MetricSample>
  fullName: System.Collections.Generic.List<Steeltoe.Management.Endpoint.Metrics.MetricSample>
  nameWithType.vb: List(Of MetricSample)
  fullName.vb: System.Collections.Generic.List(Of Steeltoe.Management.Endpoint.Metrics.MetricSample)
  name.vb: List(Of MetricSample)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Steeltoe.Management.Endpoint.Metrics.MetricSample
    name: MetricSample
    nameWithType: MetricSample
    fullName: Steeltoe.Management.Endpoint.Metrics.MetricSample
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Steeltoe.Management.Endpoint.Metrics.MetricSample
    name: MetricSample
    nameWithType: MetricSample
    fullName: Steeltoe.Management.Endpoint.Metrics.MetricSample
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Steeltoe.Management.Endpoint.Metrics.MetricsResponse.AvailableTags*
  commentId: Overload:Steeltoe.Management.Endpoint.Metrics.MetricsResponse.AvailableTags
  name: AvailableTags
  nameWithType: MetricsResponse.AvailableTags
  fullName: Steeltoe.Management.Endpoint.Metrics.MetricsResponse.AvailableTags
- uid: System.Collections.Generic.List{Steeltoe.Management.Endpoint.Metrics.MetricTag}
  commentId: T:System.Collections.Generic.List{Steeltoe.Management.Endpoint.Metrics.MetricTag}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<MetricTag>
  nameWithType: List<MetricTag>
  fullName: System.Collections.Generic.List<Steeltoe.Management.Endpoint.Metrics.MetricTag>
  nameWithType.vb: List(Of MetricTag)
  fullName.vb: System.Collections.Generic.List(Of Steeltoe.Management.Endpoint.Metrics.MetricTag)
  name.vb: List(Of MetricTag)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Steeltoe.Management.Endpoint.Metrics.MetricTag
    name: MetricTag
    nameWithType: MetricTag
    fullName: Steeltoe.Management.Endpoint.Metrics.MetricTag
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Steeltoe.Management.Endpoint.Metrics.MetricTag
    name: MetricTag
    nameWithType: MetricTag
    fullName: Steeltoe.Management.Endpoint.Metrics.MetricTag
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Management.Endpoint.Metrics.MetricsResponse.#ctor*
  commentId: Overload:Steeltoe.Management.Endpoint.Metrics.MetricsResponse.#ctor
  name: MetricsResponse
  nameWithType: MetricsResponse.MetricsResponse
  fullName: Steeltoe.Management.Endpoint.Metrics.MetricsResponse.MetricsResponse
