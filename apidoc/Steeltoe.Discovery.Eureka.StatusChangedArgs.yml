### YamlMime:ManagedReference
items:
- uid: Steeltoe.Discovery.Eureka.StatusChangedArgs
  commentId: T:Steeltoe.Discovery.Eureka.StatusChangedArgs
  id: StatusChangedArgs
  parent: Steeltoe.Discovery.Eureka
  children:
  - Steeltoe.Discovery.Eureka.StatusChangedArgs.#ctor(Steeltoe.Discovery.Eureka.AppInfo.InstanceStatus,Steeltoe.Discovery.Eureka.AppInfo.InstanceStatus,System.String)
  - Steeltoe.Discovery.Eureka.StatusChangedArgs.Current
  - Steeltoe.Discovery.Eureka.StatusChangedArgs.InstanceId
  - Steeltoe.Discovery.Eureka.StatusChangedArgs.Previous
  langs:
  - csharp
  - vb
  name: StatusChangedArgs
  nameWithType: StatusChangedArgs
  fullName: Steeltoe.Discovery.Eureka.StatusChangedArgs
  type: Class
  source:
    remote:
      path: src/Discovery/src/Eureka/StatusChangedArgs.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: StatusChangedArgs
    path: ../Steeltoe/src/Discovery/src/Eureka/StatusChangedArgs.cs
    startLine: 9
  assemblies:
  - Steeltoe.Discovery.Eureka
  namespace: Steeltoe.Discovery.Eureka
  syntax:
    content: 'public class StatusChangedArgs : EventArgs'
    content.vb: >-
      Public Class StatusChangedArgs

          Inherits EventArgs
  inheritance:
  - System.Object
  - System.EventArgs
  inheritedMembers:
  - System.EventArgs.Empty
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Steeltoe.Discovery.Eureka.StatusChangedArgs.Previous
  commentId: P:Steeltoe.Discovery.Eureka.StatusChangedArgs.Previous
  id: Previous
  parent: Steeltoe.Discovery.Eureka.StatusChangedArgs
  langs:
  - csharp
  - vb
  name: Previous
  nameWithType: StatusChangedArgs.Previous
  fullName: Steeltoe.Discovery.Eureka.StatusChangedArgs.Previous
  type: Property
  source:
    remote:
      path: src/Discovery/src/Eureka/StatusChangedArgs.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Previous
    path: ../Steeltoe/src/Discovery/src/Eureka/StatusChangedArgs.cs
    startLine: 11
  assemblies:
  - Steeltoe.Discovery.Eureka
  namespace: Steeltoe.Discovery.Eureka
  syntax:
    content: public InstanceStatus Previous { get; }
    parameters: []
    return:
      type: Steeltoe.Discovery.Eureka.AppInfo.InstanceStatus
    content.vb: Public ReadOnly Property Previous As InstanceStatus
  overload: Steeltoe.Discovery.Eureka.StatusChangedArgs.Previous*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Steeltoe.Discovery.Eureka.StatusChangedArgs.Current
  commentId: P:Steeltoe.Discovery.Eureka.StatusChangedArgs.Current
  id: Current
  parent: Steeltoe.Discovery.Eureka.StatusChangedArgs
  langs:
  - csharp
  - vb
  name: Current
  nameWithType: StatusChangedArgs.Current
  fullName: Steeltoe.Discovery.Eureka.StatusChangedArgs.Current
  type: Property
  source:
    remote:
      path: src/Discovery/src/Eureka/StatusChangedArgs.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Current
    path: ../Steeltoe/src/Discovery/src/Eureka/StatusChangedArgs.cs
    startLine: 13
  assemblies:
  - Steeltoe.Discovery.Eureka
  namespace: Steeltoe.Discovery.Eureka
  syntax:
    content: public InstanceStatus Current { get; }
    parameters: []
    return:
      type: Steeltoe.Discovery.Eureka.AppInfo.InstanceStatus
    content.vb: Public ReadOnly Property Current As InstanceStatus
  overload: Steeltoe.Discovery.Eureka.StatusChangedArgs.Current*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Steeltoe.Discovery.Eureka.StatusChangedArgs.InstanceId
  commentId: P:Steeltoe.Discovery.Eureka.StatusChangedArgs.InstanceId
  id: InstanceId
  parent: Steeltoe.Discovery.Eureka.StatusChangedArgs
  langs:
  - csharp
  - vb
  name: InstanceId
  nameWithType: StatusChangedArgs.InstanceId
  fullName: Steeltoe.Discovery.Eureka.StatusChangedArgs.InstanceId
  type: Property
  source:
    remote:
      path: src/Discovery/src/Eureka/StatusChangedArgs.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: InstanceId
    path: ../Steeltoe/src/Discovery/src/Eureka/StatusChangedArgs.cs
    startLine: 15
  assemblies:
  - Steeltoe.Discovery.Eureka
  namespace: Steeltoe.Discovery.Eureka
  syntax:
    content: public string InstanceId { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property InstanceId As String
  overload: Steeltoe.Discovery.Eureka.StatusChangedArgs.InstanceId*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Steeltoe.Discovery.Eureka.StatusChangedArgs.#ctor(Steeltoe.Discovery.Eureka.AppInfo.InstanceStatus,Steeltoe.Discovery.Eureka.AppInfo.InstanceStatus,System.String)
  commentId: M:Steeltoe.Discovery.Eureka.StatusChangedArgs.#ctor(Steeltoe.Discovery.Eureka.AppInfo.InstanceStatus,Steeltoe.Discovery.Eureka.AppInfo.InstanceStatus,System.String)
  id: '#ctor(Steeltoe.Discovery.Eureka.AppInfo.InstanceStatus,Steeltoe.Discovery.Eureka.AppInfo.InstanceStatus,System.String)'
  parent: Steeltoe.Discovery.Eureka.StatusChangedArgs
  langs:
  - csharp
  - vb
  name: StatusChangedArgs(InstanceStatus, InstanceStatus, String)
  nameWithType: StatusChangedArgs.StatusChangedArgs(InstanceStatus, InstanceStatus, String)
  fullName: Steeltoe.Discovery.Eureka.StatusChangedArgs.StatusChangedArgs(Steeltoe.Discovery.Eureka.AppInfo.InstanceStatus, Steeltoe.Discovery.Eureka.AppInfo.InstanceStatus, System.String)
  type: Constructor
  source:
    remote:
      path: src/Discovery/src/Eureka/StatusChangedArgs.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: .ctor
    path: ../Steeltoe/src/Discovery/src/Eureka/StatusChangedArgs.cs
    startLine: 17
  assemblies:
  - Steeltoe.Discovery.Eureka
  namespace: Steeltoe.Discovery.Eureka
  syntax:
    content: public StatusChangedArgs(InstanceStatus prev, InstanceStatus current, string instanceId)
    parameters:
    - id: prev
      type: Steeltoe.Discovery.Eureka.AppInfo.InstanceStatus
    - id: current
      type: Steeltoe.Discovery.Eureka.AppInfo.InstanceStatus
    - id: instanceId
      type: System.String
    content.vb: Public Sub New(prev As InstanceStatus, current As InstanceStatus, instanceId As String)
  overload: Steeltoe.Discovery.Eureka.StatusChangedArgs.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Steeltoe.Discovery.Eureka
  commentId: N:Steeltoe.Discovery.Eureka
  name: Steeltoe.Discovery.Eureka
  nameWithType: Steeltoe.Discovery.Eureka
  fullName: Steeltoe.Discovery.Eureka
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.EventArgs
  commentId: T:System.EventArgs
  parent: System
  isExternal: true
  name: EventArgs
  nameWithType: EventArgs
  fullName: System.EventArgs
- uid: System.EventArgs.Empty
  commentId: F:System.EventArgs.Empty
  parent: System.EventArgs
  isExternal: true
  name: Empty
  nameWithType: EventArgs.Empty
  fullName: System.EventArgs.Empty
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Steeltoe.Discovery.Eureka.StatusChangedArgs.Previous*
  commentId: Overload:Steeltoe.Discovery.Eureka.StatusChangedArgs.Previous
  name: Previous
  nameWithType: StatusChangedArgs.Previous
  fullName: Steeltoe.Discovery.Eureka.StatusChangedArgs.Previous
- uid: Steeltoe.Discovery.Eureka.AppInfo.InstanceStatus
  commentId: T:Steeltoe.Discovery.Eureka.AppInfo.InstanceStatus
  parent: Steeltoe.Discovery.Eureka.AppInfo
  name: InstanceStatus
  nameWithType: InstanceStatus
  fullName: Steeltoe.Discovery.Eureka.AppInfo.InstanceStatus
- uid: Steeltoe.Discovery.Eureka.AppInfo
  commentId: N:Steeltoe.Discovery.Eureka.AppInfo
  name: Steeltoe.Discovery.Eureka.AppInfo
  nameWithType: Steeltoe.Discovery.Eureka.AppInfo
  fullName: Steeltoe.Discovery.Eureka.AppInfo
- uid: Steeltoe.Discovery.Eureka.StatusChangedArgs.Current*
  commentId: Overload:Steeltoe.Discovery.Eureka.StatusChangedArgs.Current
  name: Current
  nameWithType: StatusChangedArgs.Current
  fullName: Steeltoe.Discovery.Eureka.StatusChangedArgs.Current
- uid: Steeltoe.Discovery.Eureka.StatusChangedArgs.InstanceId*
  commentId: Overload:Steeltoe.Discovery.Eureka.StatusChangedArgs.InstanceId
  name: InstanceId
  nameWithType: StatusChangedArgs.InstanceId
  fullName: Steeltoe.Discovery.Eureka.StatusChangedArgs.InstanceId
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Steeltoe.Discovery.Eureka.StatusChangedArgs.#ctor*
  commentId: Overload:Steeltoe.Discovery.Eureka.StatusChangedArgs.#ctor
  name: StatusChangedArgs
  nameWithType: StatusChangedArgs.StatusChangedArgs
  fullName: Steeltoe.Discovery.Eureka.StatusChangedArgs.StatusChangedArgs
