### YamlMime:ManagedReference
items:
- uid: Steeltoe.Extensions.Configuration.AbstractServiceOptions
  commentId: T:Steeltoe.Extensions.Configuration.AbstractServiceOptions
  id: AbstractServiceOptions
  parent: Steeltoe.Extensions.Configuration
  children:
  - Steeltoe.Extensions.Configuration.AbstractServiceOptions.#ctor
  - Steeltoe.Extensions.Configuration.AbstractServiceOptions.#ctor(IConfiguration,System.String)
  - Steeltoe.Extensions.Configuration.AbstractServiceOptions.#ctor(IConfigurationRoot,System.String)
  - Steeltoe.Extensions.Configuration.AbstractServiceOptions.Bind(IConfiguration,System.String)
  - Steeltoe.Extensions.Configuration.AbstractServiceOptions.CONFIGURATION_PREFIX
  - Steeltoe.Extensions.Configuration.AbstractServiceOptions.GetInstancesOfType(System.String)
  - Steeltoe.Extensions.Configuration.AbstractServiceOptions.GetServicesList
  - Steeltoe.Extensions.Configuration.AbstractServiceOptions.Label
  - Steeltoe.Extensions.Configuration.AbstractServiceOptions.Name
  - Steeltoe.Extensions.Configuration.AbstractServiceOptions.Plan
  - Steeltoe.Extensions.Configuration.AbstractServiceOptions.Services
  - Steeltoe.Extensions.Configuration.AbstractServiceOptions.Tags
  langs:
  - csharp
  - vb
  name: AbstractServiceOptions
  nameWithType: AbstractServiceOptions
  fullName: Steeltoe.Extensions.Configuration.AbstractServiceOptions
  type: Class
  source:
    remote:
      path: src/Configuration/src/Abstractions/AbstractServiceOptions.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: AbstractServiceOptions
    path: ../Steeltoe/src/Configuration/src/Abstractions/AbstractServiceOptions.cs
    startLine: 11
  assemblies:
  - Steeltoe.Extensions.Configuration.Abstractions
  namespace: Steeltoe.Extensions.Configuration
  syntax:
    content: 'public abstract class AbstractServiceOptions : AbstractOptions, IServicesInfo'
    content.vb: >-
      Public MustInherit Class AbstractServiceOptions

          Inherits AbstractOptions

          Implements IServicesInfo
  inheritance:
  - System.Object
  - Steeltoe.Common.Options.AbstractOptions
  derivedClasses:
  - Steeltoe.Extensions.Configuration.Service
  - Steeltoe.Extensions.Configuration.ServicesOptions
  implements:
  - Steeltoe.Extensions.Configuration.IServicesInfo
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: Steeltoe.Extensions.Configuration.AbstractServiceOptions.CONFIGURATION_PREFIX
  commentId: P:Steeltoe.Extensions.Configuration.AbstractServiceOptions.CONFIGURATION_PREFIX
  id: CONFIGURATION_PREFIX
  parent: Steeltoe.Extensions.Configuration.AbstractServiceOptions
  langs:
  - csharp
  - vb
  name: CONFIGURATION_PREFIX
  nameWithType: AbstractServiceOptions.CONFIGURATION_PREFIX
  fullName: Steeltoe.Extensions.Configuration.AbstractServiceOptions.CONFIGURATION_PREFIX
  type: Property
  source:
    remote:
      path: src/Configuration/src/Abstractions/AbstractServiceOptions.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: CONFIGURATION_PREFIX
    path: ../Steeltoe/src/Configuration/src/Abstractions/AbstractServiceOptions.cs
    startLine: 13
  assemblies:
  - Steeltoe.Extensions.Configuration.Abstractions
  namespace: Steeltoe.Extensions.Configuration
  syntax:
    content: public virtual string CONFIGURATION_PREFIX { get; protected set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Overridable Property CONFIGURATION_PREFIX As String
  overload: Steeltoe.Extensions.Configuration.AbstractServiceOptions.CONFIGURATION_PREFIX*
  modifiers.csharp:
  - public
  - virtual
  - get
  - protected set
  modifiers.vb:
  - Public
  - Overridable
  - Get
  - Protected Set
- uid: Steeltoe.Extensions.Configuration.AbstractServiceOptions.#ctor
  commentId: M:Steeltoe.Extensions.Configuration.AbstractServiceOptions.#ctor
  id: '#ctor'
  parent: Steeltoe.Extensions.Configuration.AbstractServiceOptions
  langs:
  - csharp
  - vb
  name: AbstractServiceOptions()
  nameWithType: AbstractServiceOptions.AbstractServiceOptions()
  fullName: Steeltoe.Extensions.Configuration.AbstractServiceOptions.AbstractServiceOptions()
  type: Constructor
  source:
    remote:
      path: src/Configuration/src/Abstractions/AbstractServiceOptions.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: .ctor
    path: ../Steeltoe/src/Configuration/src/Abstractions/AbstractServiceOptions.cs
    startLine: 16
  assemblies:
  - Steeltoe.Extensions.Configuration.Abstractions
  namespace: Steeltoe.Extensions.Configuration
  syntax:
    content: protected AbstractServiceOptions()
    content.vb: Protected Sub New
  overload: Steeltoe.Extensions.Configuration.AbstractServiceOptions.#ctor*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Steeltoe.Extensions.Configuration.AbstractServiceOptions.#ctor(IConfigurationRoot,System.String)
  commentId: M:Steeltoe.Extensions.Configuration.AbstractServiceOptions.#ctor(IConfigurationRoot,System.String)
  id: '#ctor(IConfigurationRoot,System.String)'
  parent: Steeltoe.Extensions.Configuration.AbstractServiceOptions
  langs:
  - csharp
  - vb
  name: AbstractServiceOptions(IConfigurationRoot, String)
  nameWithType: AbstractServiceOptions.AbstractServiceOptions(IConfigurationRoot, String)
  fullName: Steeltoe.Extensions.Configuration.AbstractServiceOptions.AbstractServiceOptions(IConfigurationRoot, System.String)
  type: Constructor
  source:
    remote:
      path: src/Configuration/src/Abstractions/AbstractServiceOptions.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: .ctor
    path: ../Steeltoe/src/Configuration/src/Abstractions/AbstractServiceOptions.cs
    startLine: 20
  assemblies:
  - Steeltoe.Extensions.Configuration.Abstractions
  namespace: Steeltoe.Extensions.Configuration
  syntax:
    content: protected AbstractServiceOptions(IConfigurationRoot root, string sectionPrefix = "")
    parameters:
    - id: root
      type: IConfigurationRoot
    - id: sectionPrefix
      type: System.String
    content.vb: Protected Sub New(root As IConfigurationRoot, sectionPrefix As String = "")
  overload: Steeltoe.Extensions.Configuration.AbstractServiceOptions.#ctor*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Steeltoe.Extensions.Configuration.AbstractServiceOptions.#ctor(IConfiguration,System.String)
  commentId: M:Steeltoe.Extensions.Configuration.AbstractServiceOptions.#ctor(IConfiguration,System.String)
  id: '#ctor(IConfiguration,System.String)'
  parent: Steeltoe.Extensions.Configuration.AbstractServiceOptions
  langs:
  - csharp
  - vb
  name: AbstractServiceOptions(IConfiguration, String)
  nameWithType: AbstractServiceOptions.AbstractServiceOptions(IConfiguration, String)
  fullName: Steeltoe.Extensions.Configuration.AbstractServiceOptions.AbstractServiceOptions(IConfiguration, System.String)
  type: Constructor
  source:
    remote:
      path: src/Configuration/src/Abstractions/AbstractServiceOptions.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: .ctor
    path: ../Steeltoe/src/Configuration/src/Abstractions/AbstractServiceOptions.cs
    startLine: 25
  assemblies:
  - Steeltoe.Extensions.Configuration.Abstractions
  namespace: Steeltoe.Extensions.Configuration
  syntax:
    content: protected AbstractServiceOptions(IConfiguration config, string sectionPrefix = "")
    parameters:
    - id: config
      type: IConfiguration
    - id: sectionPrefix
      type: System.String
    content.vb: Protected Sub New(config As IConfiguration, sectionPrefix As String = "")
  overload: Steeltoe.Extensions.Configuration.AbstractServiceOptions.#ctor*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Steeltoe.Extensions.Configuration.AbstractServiceOptions.Name
  commentId: P:Steeltoe.Extensions.Configuration.AbstractServiceOptions.Name
  id: Name
  parent: Steeltoe.Extensions.Configuration.AbstractServiceOptions
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: AbstractServiceOptions.Name
  fullName: Steeltoe.Extensions.Configuration.AbstractServiceOptions.Name
  type: Property
  source:
    remote:
      path: src/Configuration/src/Abstractions/AbstractServiceOptions.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Name
    path: ../Steeltoe/src/Configuration/src/Abstractions/AbstractServiceOptions.cs
    startLine: 33
  assemblies:
  - Steeltoe.Extensions.Configuration.Abstractions
  namespace: Steeltoe.Extensions.Configuration
  summary: "\nGets or sets the name of the service instance\n"
  example: []
  syntax:
    content: public string Name { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Name As String
  overload: Steeltoe.Extensions.Configuration.AbstractServiceOptions.Name*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Steeltoe.Extensions.Configuration.AbstractServiceOptions.Label
  commentId: P:Steeltoe.Extensions.Configuration.AbstractServiceOptions.Label
  id: Label
  parent: Steeltoe.Extensions.Configuration.AbstractServiceOptions
  langs:
  - csharp
  - vb
  name: Label
  nameWithType: AbstractServiceOptions.Label
  fullName: Steeltoe.Extensions.Configuration.AbstractServiceOptions.Label
  type: Property
  source:
    remote:
      path: src/Configuration/src/Abstractions/AbstractServiceOptions.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Label
    path: ../Steeltoe/src/Configuration/src/Abstractions/AbstractServiceOptions.cs
    startLine: 38
  assemblies:
  - Steeltoe.Extensions.Configuration.Abstractions
  namespace: Steeltoe.Extensions.Configuration
  summary: "\nGets or sets a label describing the type of service\n"
  example: []
  syntax:
    content: public string Label { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Label As String
  overload: Steeltoe.Extensions.Configuration.AbstractServiceOptions.Label*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Steeltoe.Extensions.Configuration.AbstractServiceOptions.Tags
  commentId: P:Steeltoe.Extensions.Configuration.AbstractServiceOptions.Tags
  id: Tags
  parent: Steeltoe.Extensions.Configuration.AbstractServiceOptions
  langs:
  - csharp
  - vb
  name: Tags
  nameWithType: AbstractServiceOptions.Tags
  fullName: Steeltoe.Extensions.Configuration.AbstractServiceOptions.Tags
  type: Property
  source:
    remote:
      path: src/Configuration/src/Abstractions/AbstractServiceOptions.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Tags
    path: ../Steeltoe/src/Configuration/src/Abstractions/AbstractServiceOptions.cs
    startLine: 43
  assemblies:
  - Steeltoe.Extensions.Configuration.Abstractions
  namespace: Steeltoe.Extensions.Configuration
  summary: "\nGets or sets the plan level at which the service is provisoned\n"
  example: []
  syntax:
    content: public IEnumerable<string> Tags { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{System.String}
    content.vb: Public Property Tags As IEnumerable(Of String)
  overload: Steeltoe.Extensions.Configuration.AbstractServiceOptions.Tags*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Steeltoe.Extensions.Configuration.AbstractServiceOptions.Plan
  commentId: P:Steeltoe.Extensions.Configuration.AbstractServiceOptions.Plan
  id: Plan
  parent: Steeltoe.Extensions.Configuration.AbstractServiceOptions
  langs:
  - csharp
  - vb
  name: Plan
  nameWithType: AbstractServiceOptions.Plan
  fullName: Steeltoe.Extensions.Configuration.AbstractServiceOptions.Plan
  type: Property
  source:
    remote:
      path: src/Configuration/src/Abstractions/AbstractServiceOptions.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Plan
    path: ../Steeltoe/src/Configuration/src/Abstractions/AbstractServiceOptions.cs
    startLine: 48
  assemblies:
  - Steeltoe.Extensions.Configuration.Abstractions
  namespace: Steeltoe.Extensions.Configuration
  summary: "\nGets or sets a list of tags describing the service\n"
  example: []
  syntax:
    content: public string Plan { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Plan As String
  overload: Steeltoe.Extensions.Configuration.AbstractServiceOptions.Plan*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Steeltoe.Extensions.Configuration.AbstractServiceOptions.Services
  commentId: P:Steeltoe.Extensions.Configuration.AbstractServiceOptions.Services
  id: Services
  parent: Steeltoe.Extensions.Configuration.AbstractServiceOptions
  langs:
  - csharp
  - vb
  name: Services
  nameWithType: AbstractServiceOptions.Services
  fullName: Steeltoe.Extensions.Configuration.AbstractServiceOptions.Services
  type: Property
  source:
    remote:
      path: src/Configuration/src/Abstractions/AbstractServiceOptions.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Services
    path: ../Steeltoe/src/Configuration/src/Abstractions/AbstractServiceOptions.cs
    startLine: 50
  assemblies:
  - Steeltoe.Extensions.Configuration.Abstractions
  namespace: Steeltoe.Extensions.Configuration
  syntax:
    content: public Dictionary<string, IEnumerable<Service>> Services { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.IEnumerable{Steeltoe.Extensions.Configuration.Service}}
    content.vb: Public Property Services As Dictionary(Of String, IEnumerable(Of Service))
  overload: Steeltoe.Extensions.Configuration.AbstractServiceOptions.Services*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Steeltoe.Extensions.Configuration.AbstractServiceOptions.GetServicesList
  commentId: M:Steeltoe.Extensions.Configuration.AbstractServiceOptions.GetServicesList
  id: GetServicesList
  parent: Steeltoe.Extensions.Configuration.AbstractServiceOptions
  langs:
  - csharp
  - vb
  name: GetServicesList()
  nameWithType: AbstractServiceOptions.GetServicesList()
  fullName: Steeltoe.Extensions.Configuration.AbstractServiceOptions.GetServicesList()
  type: Method
  source:
    remote:
      path: src/Configuration/src/Abstractions/AbstractServiceOptions.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: GetServicesList
    path: ../Steeltoe/src/Configuration/src/Abstractions/AbstractServiceOptions.cs
    startLine: 52
  assemblies:
  - Steeltoe.Extensions.Configuration.Abstractions
  namespace: Steeltoe.Extensions.Configuration
  syntax:
    content: public IEnumerable<Service> GetServicesList()
    return:
      type: System.Collections.Generic.IEnumerable{Steeltoe.Extensions.Configuration.Service}
    content.vb: Public Function GetServicesList As IEnumerable(Of Service)
  overload: Steeltoe.Extensions.Configuration.AbstractServiceOptions.GetServicesList*
  implements:
  - Steeltoe.Extensions.Configuration.IServicesInfo.GetServicesList
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Steeltoe.Extensions.Configuration.AbstractServiceOptions.GetInstancesOfType(System.String)
  commentId: M:Steeltoe.Extensions.Configuration.AbstractServiceOptions.GetInstancesOfType(System.String)
  id: GetInstancesOfType(System.String)
  parent: Steeltoe.Extensions.Configuration.AbstractServiceOptions
  langs:
  - csharp
  - vb
  name: GetInstancesOfType(String)
  nameWithType: AbstractServiceOptions.GetInstancesOfType(String)
  fullName: Steeltoe.Extensions.Configuration.AbstractServiceOptions.GetInstancesOfType(System.String)
  type: Method
  source:
    remote:
      path: src/Configuration/src/Abstractions/AbstractServiceOptions.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: GetInstancesOfType
    path: ../Steeltoe/src/Configuration/src/Abstractions/AbstractServiceOptions.cs
    startLine: 66
  assemblies:
  - Steeltoe.Extensions.Configuration.Abstractions
  namespace: Steeltoe.Extensions.Configuration
  syntax:
    content: public IEnumerable<Service> GetInstancesOfType(string serviceType)
    parameters:
    - id: serviceType
      type: System.String
    return:
      type: System.Collections.Generic.IEnumerable{Steeltoe.Extensions.Configuration.Service}
    content.vb: Public Function GetInstancesOfType(serviceType As String) As IEnumerable(Of Service)
  overload: Steeltoe.Extensions.Configuration.AbstractServiceOptions.GetInstancesOfType*
  implements:
  - Steeltoe.Extensions.Configuration.IServicesInfo.GetInstancesOfType(System.String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Steeltoe.Extensions.Configuration.AbstractServiceOptions.Bind(IConfiguration,System.String)
  commentId: M:Steeltoe.Extensions.Configuration.AbstractServiceOptions.Bind(IConfiguration,System.String)
  id: Bind(IConfiguration,System.String)
  parent: Steeltoe.Extensions.Configuration.AbstractServiceOptions
  langs:
  - csharp
  - vb
  name: Bind(IConfiguration, String)
  nameWithType: AbstractServiceOptions.Bind(IConfiguration, String)
  fullName: Steeltoe.Extensions.Configuration.AbstractServiceOptions.Bind(IConfiguration, System.String)
  type: Method
  source:
    remote:
      path: src/Configuration/src/Abstractions/AbstractServiceOptions.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Bind
    path: ../Steeltoe/src/Configuration/src/Abstractions/AbstractServiceOptions.cs
    startLine: 72
  assemblies:
  - Steeltoe.Extensions.Configuration.Abstractions
  namespace: Steeltoe.Extensions.Configuration
  syntax:
    content: public void Bind(IConfiguration configuration, string serviceName)
    parameters:
    - id: configuration
      type: IConfiguration
    - id: serviceName
      type: System.String
    content.vb: Public Sub Bind(configuration As IConfiguration, serviceName As String)
  overload: Steeltoe.Extensions.Configuration.AbstractServiceOptions.Bind*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Steeltoe.Extensions.Configuration
  commentId: N:Steeltoe.Extensions.Configuration
  name: Steeltoe.Extensions.Configuration
  nameWithType: Steeltoe.Extensions.Configuration
  fullName: Steeltoe.Extensions.Configuration
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Steeltoe.Common.Options.AbstractOptions
  commentId: T:Steeltoe.Common.Options.AbstractOptions
  parent: Steeltoe.Common.Options
  name: AbstractOptions
  nameWithType: AbstractOptions
  fullName: Steeltoe.Common.Options.AbstractOptions
- uid: Steeltoe.Extensions.Configuration.IServicesInfo
  commentId: T:Steeltoe.Extensions.Configuration.IServicesInfo
  parent: Steeltoe.Extensions.Configuration
  name: IServicesInfo
  nameWithType: IServicesInfo
  fullName: Steeltoe.Extensions.Configuration.IServicesInfo
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Steeltoe.Common.Options
  commentId: N:Steeltoe.Common.Options
  name: Steeltoe.Common.Options
  nameWithType: Steeltoe.Common.Options
  fullName: Steeltoe.Common.Options
- uid: Steeltoe.Extensions.Configuration.AbstractServiceOptions.CONFIGURATION_PREFIX*
  commentId: Overload:Steeltoe.Extensions.Configuration.AbstractServiceOptions.CONFIGURATION_PREFIX
  name: CONFIGURATION_PREFIX
  nameWithType: AbstractServiceOptions.CONFIGURATION_PREFIX
  fullName: Steeltoe.Extensions.Configuration.AbstractServiceOptions.CONFIGURATION_PREFIX
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Steeltoe.Extensions.Configuration.AbstractServiceOptions.#ctor*
  commentId: Overload:Steeltoe.Extensions.Configuration.AbstractServiceOptions.#ctor
  name: AbstractServiceOptions
  nameWithType: AbstractServiceOptions.AbstractServiceOptions
  fullName: Steeltoe.Extensions.Configuration.AbstractServiceOptions.AbstractServiceOptions
- uid: IConfigurationRoot
  isExternal: true
  name: IConfigurationRoot
  nameWithType: IConfigurationRoot
  fullName: IConfigurationRoot
- uid: IConfiguration
  isExternal: true
  name: IConfiguration
  nameWithType: IConfiguration
  fullName: IConfiguration
- uid: Steeltoe.Extensions.Configuration.AbstractServiceOptions.Name*
  commentId: Overload:Steeltoe.Extensions.Configuration.AbstractServiceOptions.Name
  name: Name
  nameWithType: AbstractServiceOptions.Name
  fullName: Steeltoe.Extensions.Configuration.AbstractServiceOptions.Name
- uid: Steeltoe.Extensions.Configuration.AbstractServiceOptions.Label*
  commentId: Overload:Steeltoe.Extensions.Configuration.AbstractServiceOptions.Label
  name: Label
  nameWithType: AbstractServiceOptions.Label
  fullName: Steeltoe.Extensions.Configuration.AbstractServiceOptions.Label
- uid: Steeltoe.Extensions.Configuration.AbstractServiceOptions.Tags*
  commentId: Overload:Steeltoe.Extensions.Configuration.AbstractServiceOptions.Tags
  name: Tags
  nameWithType: AbstractServiceOptions.Tags
  fullName: Steeltoe.Extensions.Configuration.AbstractServiceOptions.Tags
- uid: System.Collections.Generic.IEnumerable{System.String}
  commentId: T:System.Collections.Generic.IEnumerable{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<String>
  nameWithType: IEnumerable<String>
  fullName: System.Collections.Generic.IEnumerable<System.String>
  nameWithType.vb: IEnumerable(Of String)
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.String)
  name.vb: IEnumerable(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Steeltoe.Extensions.Configuration.AbstractServiceOptions.Plan*
  commentId: Overload:Steeltoe.Extensions.Configuration.AbstractServiceOptions.Plan
  name: Plan
  nameWithType: AbstractServiceOptions.Plan
  fullName: Steeltoe.Extensions.Configuration.AbstractServiceOptions.Plan
- uid: Steeltoe.Extensions.Configuration.AbstractServiceOptions.Services*
  commentId: Overload:Steeltoe.Extensions.Configuration.AbstractServiceOptions.Services
  name: Services
  nameWithType: AbstractServiceOptions.Services
  fullName: Steeltoe.Extensions.Configuration.AbstractServiceOptions.Services
- uid: System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.IEnumerable{Steeltoe.Extensions.Configuration.Service}}
  commentId: T:System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.IEnumerable{Steeltoe.Extensions.Configuration.Service}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  name: Dictionary<String, IEnumerable<Service>>
  nameWithType: Dictionary<String, IEnumerable<Service>>
  fullName: System.Collections.Generic.Dictionary<System.String, System.Collections.Generic.IEnumerable<Steeltoe.Extensions.Configuration.Service>>
  nameWithType.vb: Dictionary(Of String, IEnumerable(Of Service))
  fullName.vb: System.Collections.Generic.Dictionary(Of System.String, System.Collections.Generic.IEnumerable(Of Steeltoe.Extensions.Configuration.Service))
  name.vb: Dictionary(Of String, IEnumerable(Of Service))
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Steeltoe.Extensions.Configuration.Service
    name: Service
    nameWithType: Service
    fullName: Steeltoe.Extensions.Configuration.Service
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Steeltoe.Extensions.Configuration.Service
    name: Service
    nameWithType: Service
    fullName: Steeltoe.Extensions.Configuration.Service
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Dictionary`2
  commentId: T:System.Collections.Generic.Dictionary`2
  isExternal: true
  name: Dictionary<TKey, TValue>
  nameWithType: Dictionary<TKey, TValue>
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>
  nameWithType.vb: Dictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue)
  name.vb: Dictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Extensions.Configuration.AbstractServiceOptions.GetServicesList*
  commentId: Overload:Steeltoe.Extensions.Configuration.AbstractServiceOptions.GetServicesList
  name: GetServicesList
  nameWithType: AbstractServiceOptions.GetServicesList
  fullName: Steeltoe.Extensions.Configuration.AbstractServiceOptions.GetServicesList
- uid: Steeltoe.Extensions.Configuration.IServicesInfo.GetServicesList
  commentId: M:Steeltoe.Extensions.Configuration.IServicesInfo.GetServicesList
  parent: Steeltoe.Extensions.Configuration.IServicesInfo
  name: GetServicesList()
  nameWithType: IServicesInfo.GetServicesList()
  fullName: Steeltoe.Extensions.Configuration.IServicesInfo.GetServicesList()
  spec.csharp:
  - uid: Steeltoe.Extensions.Configuration.IServicesInfo.GetServicesList
    name: GetServicesList
    nameWithType: IServicesInfo.GetServicesList
    fullName: Steeltoe.Extensions.Configuration.IServicesInfo.GetServicesList
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Extensions.Configuration.IServicesInfo.GetServicesList
    name: GetServicesList
    nameWithType: IServicesInfo.GetServicesList
    fullName: Steeltoe.Extensions.Configuration.IServicesInfo.GetServicesList
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{Steeltoe.Extensions.Configuration.Service}
  commentId: T:System.Collections.Generic.IEnumerable{Steeltoe.Extensions.Configuration.Service}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<Service>
  nameWithType: IEnumerable<Service>
  fullName: System.Collections.Generic.IEnumerable<Steeltoe.Extensions.Configuration.Service>
  nameWithType.vb: IEnumerable(Of Service)
  fullName.vb: System.Collections.Generic.IEnumerable(Of Steeltoe.Extensions.Configuration.Service)
  name.vb: IEnumerable(Of Service)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Steeltoe.Extensions.Configuration.Service
    name: Service
    nameWithType: Service
    fullName: Steeltoe.Extensions.Configuration.Service
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Steeltoe.Extensions.Configuration.Service
    name: Service
    nameWithType: Service
    fullName: Steeltoe.Extensions.Configuration.Service
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Extensions.Configuration.AbstractServiceOptions.GetInstancesOfType*
  commentId: Overload:Steeltoe.Extensions.Configuration.AbstractServiceOptions.GetInstancesOfType
  name: GetInstancesOfType
  nameWithType: AbstractServiceOptions.GetInstancesOfType
  fullName: Steeltoe.Extensions.Configuration.AbstractServiceOptions.GetInstancesOfType
- uid: Steeltoe.Extensions.Configuration.IServicesInfo.GetInstancesOfType(System.String)
  commentId: M:Steeltoe.Extensions.Configuration.IServicesInfo.GetInstancesOfType(System.String)
  parent: Steeltoe.Extensions.Configuration.IServicesInfo
  isExternal: true
  name: GetInstancesOfType(String)
  nameWithType: IServicesInfo.GetInstancesOfType(String)
  fullName: Steeltoe.Extensions.Configuration.IServicesInfo.GetInstancesOfType(System.String)
  spec.csharp:
  - uid: Steeltoe.Extensions.Configuration.IServicesInfo.GetInstancesOfType(System.String)
    name: GetInstancesOfType
    nameWithType: IServicesInfo.GetInstancesOfType
    fullName: Steeltoe.Extensions.Configuration.IServicesInfo.GetInstancesOfType
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Extensions.Configuration.IServicesInfo.GetInstancesOfType(System.String)
    name: GetInstancesOfType
    nameWithType: IServicesInfo.GetInstancesOfType
    fullName: Steeltoe.Extensions.Configuration.IServicesInfo.GetInstancesOfType
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Extensions.Configuration.AbstractServiceOptions.Bind*
  commentId: Overload:Steeltoe.Extensions.Configuration.AbstractServiceOptions.Bind
  name: Bind
  nameWithType: AbstractServiceOptions.Bind
  fullName: Steeltoe.Extensions.Configuration.AbstractServiceOptions.Bind
