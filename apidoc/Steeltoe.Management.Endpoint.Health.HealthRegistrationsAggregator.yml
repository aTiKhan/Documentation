### YamlMime:ManagedReference
items:
- uid: Steeltoe.Management.Endpoint.Health.HealthRegistrationsAggregator
  commentId: T:Steeltoe.Management.Endpoint.Health.HealthRegistrationsAggregator
  id: HealthRegistrationsAggregator
  parent: Steeltoe.Management.Endpoint.Health
  children:
  - Steeltoe.Management.Endpoint.Health.HealthRegistrationsAggregator.Aggregate(System.Collections.Generic.IList{Steeltoe.Common.HealthChecks.IHealthContributor},System.Collections.Generic.ICollection{Microsoft.Extensions.Diagnostics.HealthChecks.HealthCheckRegistration},System.IServiceProvider)
  langs:
  - csharp
  - vb
  name: HealthRegistrationsAggregator
  nameWithType: HealthRegistrationsAggregator
  fullName: Steeltoe.Management.Endpoint.Health.HealthRegistrationsAggregator
  type: Class
  source:
    remote:
      path: src/Management/src/EndpointCore/Health/HealthRegistrationsAggregator.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: HealthRegistrationsAggregator
    path: ../Steeltoe/src/Management/src/EndpointCore/Health/HealthRegistrationsAggregator.cs
    startLine: 15
  assemblies:
  - Steeltoe.Management.EndpointCore
  namespace: Steeltoe.Management.Endpoint.Health
  syntax:
    content: 'public class HealthRegistrationsAggregator : DefaultHealthAggregator, IHealthRegistrationsAggregator, IHealthAggregator'
    content.vb: >-
      Public Class HealthRegistrationsAggregator

          Inherits DefaultHealthAggregator

          Implements IHealthRegistrationsAggregator, IHealthAggregator
  inheritance:
  - System.Object
  - Steeltoe.Management.Endpoint.Health.DefaultHealthAggregator
  implements:
  - Steeltoe.Management.Endpoint.Health.IHealthRegistrationsAggregator
  - Steeltoe.Common.HealthChecks.IHealthAggregator
  inheritedMembers:
  - Steeltoe.Management.Endpoint.Health.DefaultHealthAggregator.Aggregate(System.Collections.Generic.IList{Steeltoe.Common.HealthChecks.IHealthContributor})
  - Steeltoe.Management.Endpoint.Health.DefaultHealthAggregator.GetKey(System.Collections.Concurrent.ConcurrentBag{System.String},System.String)
  - Steeltoe.Management.Endpoint.Health.DefaultHealthAggregator.AddChecksSetStatus(Steeltoe.Common.HealthChecks.HealthCheckResult,System.Collections.Concurrent.ConcurrentDictionary{System.String,Steeltoe.Common.HealthChecks.HealthCheckResult})
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Steeltoe.Management.Endpoint.Health.HealthRegistrationsAggregator.Aggregate(System.Collections.Generic.IList{Steeltoe.Common.HealthChecks.IHealthContributor},System.Collections.Generic.ICollection{Microsoft.Extensions.Diagnostics.HealthChecks.HealthCheckRegistration},System.IServiceProvider)
  commentId: M:Steeltoe.Management.Endpoint.Health.HealthRegistrationsAggregator.Aggregate(System.Collections.Generic.IList{Steeltoe.Common.HealthChecks.IHealthContributor},System.Collections.Generic.ICollection{Microsoft.Extensions.Diagnostics.HealthChecks.HealthCheckRegistration},System.IServiceProvider)
  id: Aggregate(System.Collections.Generic.IList{Steeltoe.Common.HealthChecks.IHealthContributor},System.Collections.Generic.ICollection{Microsoft.Extensions.Diagnostics.HealthChecks.HealthCheckRegistration},System.IServiceProvider)
  parent: Steeltoe.Management.Endpoint.Health.HealthRegistrationsAggregator
  langs:
  - csharp
  - vb
  name: Aggregate(IList<IHealthContributor>, ICollection<HealthCheckRegistration>, IServiceProvider)
  nameWithType: HealthRegistrationsAggregator.Aggregate(IList<IHealthContributor>, ICollection<HealthCheckRegistration>, IServiceProvider)
  fullName: Steeltoe.Management.Endpoint.Health.HealthRegistrationsAggregator.Aggregate(System.Collections.Generic.IList<Steeltoe.Common.HealthChecks.IHealthContributor>, System.Collections.Generic.ICollection<Microsoft.Extensions.Diagnostics.HealthChecks.HealthCheckRegistration>, System.IServiceProvider)
  type: Method
  source:
    remote:
      path: src/Management/src/EndpointCore/Health/HealthRegistrationsAggregator.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Aggregate
    path: ../Steeltoe/src/Management/src/EndpointCore/Health/HealthRegistrationsAggregator.cs
    startLine: 17
  assemblies:
  - Steeltoe.Management.EndpointCore
  namespace: Steeltoe.Management.Endpoint.Health
  syntax:
    content: public HealthCheckResult Aggregate(IList<IHealthContributor> contributors, ICollection<HealthCheckRegistration> healthCheckRegistrations, IServiceProvider serviceProvider)
    parameters:
    - id: contributors
      type: System.Collections.Generic.IList{Steeltoe.Common.HealthChecks.IHealthContributor}
    - id: healthCheckRegistrations
      type: System.Collections.Generic.ICollection{Microsoft.Extensions.Diagnostics.HealthChecks.HealthCheckRegistration}
    - id: serviceProvider
      type: System.IServiceProvider
    return:
      type: Steeltoe.Common.HealthChecks.HealthCheckResult
    content.vb: Public Function Aggregate(contributors As IList(Of IHealthContributor), healthCheckRegistrations As ICollection(Of HealthCheckRegistration), serviceProvider As IServiceProvider) As HealthCheckResult
  overload: Steeltoe.Management.Endpoint.Health.HealthRegistrationsAggregator.Aggregate*
  implements:
  - Steeltoe.Management.Endpoint.Health.IHealthRegistrationsAggregator.Aggregate(System.Collections.Generic.IList{Steeltoe.Common.HealthChecks.IHealthContributor},System.Collections.Generic.ICollection{Microsoft.Extensions.Diagnostics.HealthChecks.HealthCheckRegistration},System.IServiceProvider)
  nameWithType.vb: HealthRegistrationsAggregator.Aggregate(IList(Of IHealthContributor), ICollection(Of HealthCheckRegistration), IServiceProvider)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Steeltoe.Management.Endpoint.Health.HealthRegistrationsAggregator.Aggregate(System.Collections.Generic.IList(Of Steeltoe.Common.HealthChecks.IHealthContributor), System.Collections.Generic.ICollection(Of Microsoft.Extensions.Diagnostics.HealthChecks.HealthCheckRegistration), System.IServiceProvider)
  name.vb: Aggregate(IList(Of IHealthContributor), ICollection(Of HealthCheckRegistration), IServiceProvider)
references:
- uid: Steeltoe.Management.Endpoint.Health
  commentId: N:Steeltoe.Management.Endpoint.Health
  name: Steeltoe.Management.Endpoint.Health
  nameWithType: Steeltoe.Management.Endpoint.Health
  fullName: Steeltoe.Management.Endpoint.Health
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Steeltoe.Management.Endpoint.Health.DefaultHealthAggregator
  commentId: T:Steeltoe.Management.Endpoint.Health.DefaultHealthAggregator
  parent: Steeltoe.Management.Endpoint.Health
  name: DefaultHealthAggregator
  nameWithType: DefaultHealthAggregator
  fullName: Steeltoe.Management.Endpoint.Health.DefaultHealthAggregator
- uid: Steeltoe.Management.Endpoint.Health.IHealthRegistrationsAggregator
  commentId: T:Steeltoe.Management.Endpoint.Health.IHealthRegistrationsAggregator
  parent: Steeltoe.Management.Endpoint.Health
  name: IHealthRegistrationsAggregator
  nameWithType: IHealthRegistrationsAggregator
  fullName: Steeltoe.Management.Endpoint.Health.IHealthRegistrationsAggregator
- uid: Steeltoe.Common.HealthChecks.IHealthAggregator
  commentId: T:Steeltoe.Common.HealthChecks.IHealthAggregator
  parent: Steeltoe.Common.HealthChecks
  name: IHealthAggregator
  nameWithType: IHealthAggregator
  fullName: Steeltoe.Common.HealthChecks.IHealthAggregator
- uid: Steeltoe.Management.Endpoint.Health.DefaultHealthAggregator.Aggregate(System.Collections.Generic.IList{Steeltoe.Common.HealthChecks.IHealthContributor})
  commentId: M:Steeltoe.Management.Endpoint.Health.DefaultHealthAggregator.Aggregate(System.Collections.Generic.IList{Steeltoe.Common.HealthChecks.IHealthContributor})
  parent: Steeltoe.Management.Endpoint.Health.DefaultHealthAggregator
  isExternal: true
  name: Aggregate(IList<IHealthContributor>)
  nameWithType: DefaultHealthAggregator.Aggregate(IList<IHealthContributor>)
  fullName: Steeltoe.Management.Endpoint.Health.DefaultHealthAggregator.Aggregate(System.Collections.Generic.IList<Steeltoe.Common.HealthChecks.IHealthContributor>)
  nameWithType.vb: DefaultHealthAggregator.Aggregate(IList(Of IHealthContributor))
  fullName.vb: Steeltoe.Management.Endpoint.Health.DefaultHealthAggregator.Aggregate(System.Collections.Generic.IList(Of Steeltoe.Common.HealthChecks.IHealthContributor))
  name.vb: Aggregate(IList(Of IHealthContributor))
  spec.csharp:
  - uid: Steeltoe.Management.Endpoint.Health.DefaultHealthAggregator.Aggregate(System.Collections.Generic.IList{Steeltoe.Common.HealthChecks.IHealthContributor})
    name: Aggregate
    nameWithType: DefaultHealthAggregator.Aggregate
    fullName: Steeltoe.Management.Endpoint.Health.DefaultHealthAggregator.Aggregate
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Steeltoe.Common.HealthChecks.IHealthContributor
    name: IHealthContributor
    nameWithType: IHealthContributor
    fullName: Steeltoe.Common.HealthChecks.IHealthContributor
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Management.Endpoint.Health.DefaultHealthAggregator.Aggregate(System.Collections.Generic.IList{Steeltoe.Common.HealthChecks.IHealthContributor})
    name: Aggregate
    nameWithType: DefaultHealthAggregator.Aggregate
    fullName: Steeltoe.Management.Endpoint.Health.DefaultHealthAggregator.Aggregate
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Steeltoe.Common.HealthChecks.IHealthContributor
    name: IHealthContributor
    nameWithType: IHealthContributor
    fullName: Steeltoe.Common.HealthChecks.IHealthContributor
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Management.Endpoint.Health.DefaultHealthAggregator.GetKey(System.Collections.Concurrent.ConcurrentBag{System.String},System.String)
  commentId: M:Steeltoe.Management.Endpoint.Health.DefaultHealthAggregator.GetKey(System.Collections.Concurrent.ConcurrentBag{System.String},System.String)
  parent: Steeltoe.Management.Endpoint.Health.DefaultHealthAggregator
  isExternal: true
  name: GetKey(ConcurrentBag<String>, String)
  nameWithType: DefaultHealthAggregator.GetKey(ConcurrentBag<String>, String)
  fullName: Steeltoe.Management.Endpoint.Health.DefaultHealthAggregator.GetKey(System.Collections.Concurrent.ConcurrentBag<System.String>, System.String)
  nameWithType.vb: DefaultHealthAggregator.GetKey(ConcurrentBag(Of String), String)
  fullName.vb: Steeltoe.Management.Endpoint.Health.DefaultHealthAggregator.GetKey(System.Collections.Concurrent.ConcurrentBag(Of System.String), System.String)
  name.vb: GetKey(ConcurrentBag(Of String), String)
  spec.csharp:
  - uid: Steeltoe.Management.Endpoint.Health.DefaultHealthAggregator.GetKey(System.Collections.Concurrent.ConcurrentBag{System.String},System.String)
    name: GetKey
    nameWithType: DefaultHealthAggregator.GetKey
    fullName: Steeltoe.Management.Endpoint.Health.DefaultHealthAggregator.GetKey
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Concurrent.ConcurrentBag`1
    name: ConcurrentBag
    nameWithType: ConcurrentBag
    fullName: System.Collections.Concurrent.ConcurrentBag
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Management.Endpoint.Health.DefaultHealthAggregator.GetKey(System.Collections.Concurrent.ConcurrentBag{System.String},System.String)
    name: GetKey
    nameWithType: DefaultHealthAggregator.GetKey
    fullName: Steeltoe.Management.Endpoint.Health.DefaultHealthAggregator.GetKey
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Concurrent.ConcurrentBag`1
    name: ConcurrentBag
    nameWithType: ConcurrentBag
    fullName: System.Collections.Concurrent.ConcurrentBag
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Management.Endpoint.Health.DefaultHealthAggregator.AddChecksSetStatus(Steeltoe.Common.HealthChecks.HealthCheckResult,System.Collections.Concurrent.ConcurrentDictionary{System.String,Steeltoe.Common.HealthChecks.HealthCheckResult})
  commentId: M:Steeltoe.Management.Endpoint.Health.DefaultHealthAggregator.AddChecksSetStatus(Steeltoe.Common.HealthChecks.HealthCheckResult,System.Collections.Concurrent.ConcurrentDictionary{System.String,Steeltoe.Common.HealthChecks.HealthCheckResult})
  parent: Steeltoe.Management.Endpoint.Health.DefaultHealthAggregator
  isExternal: true
  name: AddChecksSetStatus(HealthCheckResult, ConcurrentDictionary<String, HealthCheckResult>)
  nameWithType: DefaultHealthAggregator.AddChecksSetStatus(HealthCheckResult, ConcurrentDictionary<String, HealthCheckResult>)
  fullName: Steeltoe.Management.Endpoint.Health.DefaultHealthAggregator.AddChecksSetStatus(Steeltoe.Common.HealthChecks.HealthCheckResult, System.Collections.Concurrent.ConcurrentDictionary<System.String, Steeltoe.Common.HealthChecks.HealthCheckResult>)
  nameWithType.vb: DefaultHealthAggregator.AddChecksSetStatus(HealthCheckResult, ConcurrentDictionary(Of String, HealthCheckResult))
  fullName.vb: Steeltoe.Management.Endpoint.Health.DefaultHealthAggregator.AddChecksSetStatus(Steeltoe.Common.HealthChecks.HealthCheckResult, System.Collections.Concurrent.ConcurrentDictionary(Of System.String, Steeltoe.Common.HealthChecks.HealthCheckResult))
  name.vb: AddChecksSetStatus(HealthCheckResult, ConcurrentDictionary(Of String, HealthCheckResult))
  spec.csharp:
  - uid: Steeltoe.Management.Endpoint.Health.DefaultHealthAggregator.AddChecksSetStatus(Steeltoe.Common.HealthChecks.HealthCheckResult,System.Collections.Concurrent.ConcurrentDictionary{System.String,Steeltoe.Common.HealthChecks.HealthCheckResult})
    name: AddChecksSetStatus
    nameWithType: DefaultHealthAggregator.AddChecksSetStatus
    fullName: Steeltoe.Management.Endpoint.Health.DefaultHealthAggregator.AddChecksSetStatus
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Common.HealthChecks.HealthCheckResult
    name: HealthCheckResult
    nameWithType: HealthCheckResult
    fullName: Steeltoe.Common.HealthChecks.HealthCheckResult
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Concurrent.ConcurrentDictionary`2
    name: ConcurrentDictionary
    nameWithType: ConcurrentDictionary
    fullName: System.Collections.Concurrent.ConcurrentDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Common.HealthChecks.HealthCheckResult
    name: HealthCheckResult
    nameWithType: HealthCheckResult
    fullName: Steeltoe.Common.HealthChecks.HealthCheckResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Management.Endpoint.Health.DefaultHealthAggregator.AddChecksSetStatus(Steeltoe.Common.HealthChecks.HealthCheckResult,System.Collections.Concurrent.ConcurrentDictionary{System.String,Steeltoe.Common.HealthChecks.HealthCheckResult})
    name: AddChecksSetStatus
    nameWithType: DefaultHealthAggregator.AddChecksSetStatus
    fullName: Steeltoe.Management.Endpoint.Health.DefaultHealthAggregator.AddChecksSetStatus
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Common.HealthChecks.HealthCheckResult
    name: HealthCheckResult
    nameWithType: HealthCheckResult
    fullName: Steeltoe.Common.HealthChecks.HealthCheckResult
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Concurrent.ConcurrentDictionary`2
    name: ConcurrentDictionary
    nameWithType: ConcurrentDictionary
    fullName: System.Collections.Concurrent.ConcurrentDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Common.HealthChecks.HealthCheckResult
    name: HealthCheckResult
    nameWithType: HealthCheckResult
    fullName: Steeltoe.Common.HealthChecks.HealthCheckResult
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Steeltoe.Common.HealthChecks
  commentId: N:Steeltoe.Common.HealthChecks
  name: Steeltoe.Common.HealthChecks
  nameWithType: Steeltoe.Common.HealthChecks
  fullName: Steeltoe.Common.HealthChecks
- uid: Steeltoe.Management.Endpoint.Health.HealthRegistrationsAggregator.Aggregate*
  commentId: Overload:Steeltoe.Management.Endpoint.Health.HealthRegistrationsAggregator.Aggregate
  name: Aggregate
  nameWithType: HealthRegistrationsAggregator.Aggregate
  fullName: Steeltoe.Management.Endpoint.Health.HealthRegistrationsAggregator.Aggregate
- uid: Steeltoe.Management.Endpoint.Health.IHealthRegistrationsAggregator.Aggregate(System.Collections.Generic.IList{Steeltoe.Common.HealthChecks.IHealthContributor},System.Collections.Generic.ICollection{Microsoft.Extensions.Diagnostics.HealthChecks.HealthCheckRegistration},System.IServiceProvider)
  commentId: M:Steeltoe.Management.Endpoint.Health.IHealthRegistrationsAggregator.Aggregate(System.Collections.Generic.IList{Steeltoe.Common.HealthChecks.IHealthContributor},System.Collections.Generic.ICollection{Microsoft.Extensions.Diagnostics.HealthChecks.HealthCheckRegistration},System.IServiceProvider)
  parent: Steeltoe.Management.Endpoint.Health.IHealthRegistrationsAggregator
  isExternal: true
  name: Aggregate(IList<IHealthContributor>, ICollection<HealthCheckRegistration>, IServiceProvider)
  nameWithType: IHealthRegistrationsAggregator.Aggregate(IList<IHealthContributor>, ICollection<HealthCheckRegistration>, IServiceProvider)
  fullName: Steeltoe.Management.Endpoint.Health.IHealthRegistrationsAggregator.Aggregate(System.Collections.Generic.IList<Steeltoe.Common.HealthChecks.IHealthContributor>, System.Collections.Generic.ICollection<Microsoft.Extensions.Diagnostics.HealthChecks.HealthCheckRegistration>, System.IServiceProvider)
  nameWithType.vb: IHealthRegistrationsAggregator.Aggregate(IList(Of IHealthContributor), ICollection(Of HealthCheckRegistration), IServiceProvider)
  fullName.vb: Steeltoe.Management.Endpoint.Health.IHealthRegistrationsAggregator.Aggregate(System.Collections.Generic.IList(Of Steeltoe.Common.HealthChecks.IHealthContributor), System.Collections.Generic.ICollection(Of Microsoft.Extensions.Diagnostics.HealthChecks.HealthCheckRegistration), System.IServiceProvider)
  name.vb: Aggregate(IList(Of IHealthContributor), ICollection(Of HealthCheckRegistration), IServiceProvider)
  spec.csharp:
  - uid: Steeltoe.Management.Endpoint.Health.IHealthRegistrationsAggregator.Aggregate(System.Collections.Generic.IList{Steeltoe.Common.HealthChecks.IHealthContributor},System.Collections.Generic.ICollection{Microsoft.Extensions.Diagnostics.HealthChecks.HealthCheckRegistration},System.IServiceProvider)
    name: Aggregate
    nameWithType: IHealthRegistrationsAggregator.Aggregate
    fullName: Steeltoe.Management.Endpoint.Health.IHealthRegistrationsAggregator.Aggregate
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Steeltoe.Common.HealthChecks.IHealthContributor
    name: IHealthContributor
    nameWithType: IHealthContributor
    fullName: Steeltoe.Common.HealthChecks.IHealthContributor
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Extensions.Diagnostics.HealthChecks.HealthCheckRegistration
    name: HealthCheckRegistration
    nameWithType: HealthCheckRegistration
    fullName: Microsoft.Extensions.Diagnostics.HealthChecks.HealthCheckRegistration
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.IServiceProvider
    name: IServiceProvider
    nameWithType: IServiceProvider
    fullName: System.IServiceProvider
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Management.Endpoint.Health.IHealthRegistrationsAggregator.Aggregate(System.Collections.Generic.IList{Steeltoe.Common.HealthChecks.IHealthContributor},System.Collections.Generic.ICollection{Microsoft.Extensions.Diagnostics.HealthChecks.HealthCheckRegistration},System.IServiceProvider)
    name: Aggregate
    nameWithType: IHealthRegistrationsAggregator.Aggregate
    fullName: Steeltoe.Management.Endpoint.Health.IHealthRegistrationsAggregator.Aggregate
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Steeltoe.Common.HealthChecks.IHealthContributor
    name: IHealthContributor
    nameWithType: IHealthContributor
    fullName: Steeltoe.Common.HealthChecks.IHealthContributor
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Extensions.Diagnostics.HealthChecks.HealthCheckRegistration
    name: HealthCheckRegistration
    nameWithType: HealthCheckRegistration
    fullName: Microsoft.Extensions.Diagnostics.HealthChecks.HealthCheckRegistration
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.IServiceProvider
    name: IServiceProvider
    nameWithType: IServiceProvider
    fullName: System.IServiceProvider
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList{Steeltoe.Common.HealthChecks.IHealthContributor}
  commentId: T:System.Collections.Generic.IList{Steeltoe.Common.HealthChecks.IHealthContributor}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<IHealthContributor>
  nameWithType: IList<IHealthContributor>
  fullName: System.Collections.Generic.IList<Steeltoe.Common.HealthChecks.IHealthContributor>
  nameWithType.vb: IList(Of IHealthContributor)
  fullName.vb: System.Collections.Generic.IList(Of Steeltoe.Common.HealthChecks.IHealthContributor)
  name.vb: IList(Of IHealthContributor)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Steeltoe.Common.HealthChecks.IHealthContributor
    name: IHealthContributor
    nameWithType: IHealthContributor
    fullName: Steeltoe.Common.HealthChecks.IHealthContributor
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Steeltoe.Common.HealthChecks.IHealthContributor
    name: IHealthContributor
    nameWithType: IHealthContributor
    fullName: Steeltoe.Common.HealthChecks.IHealthContributor
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.ICollection{Microsoft.Extensions.Diagnostics.HealthChecks.HealthCheckRegistration}
  commentId: T:System.Collections.Generic.ICollection{Microsoft.Extensions.Diagnostics.HealthChecks.HealthCheckRegistration}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.ICollection`1
  name: ICollection<HealthCheckRegistration>
  nameWithType: ICollection<HealthCheckRegistration>
  fullName: System.Collections.Generic.ICollection<Microsoft.Extensions.Diagnostics.HealthChecks.HealthCheckRegistration>
  nameWithType.vb: ICollection(Of HealthCheckRegistration)
  fullName.vb: System.Collections.Generic.ICollection(Of Microsoft.Extensions.Diagnostics.HealthChecks.HealthCheckRegistration)
  name.vb: ICollection(Of HealthCheckRegistration)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Extensions.Diagnostics.HealthChecks.HealthCheckRegistration
    name: HealthCheckRegistration
    nameWithType: HealthCheckRegistration
    fullName: Microsoft.Extensions.Diagnostics.HealthChecks.HealthCheckRegistration
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Extensions.Diagnostics.HealthChecks.HealthCheckRegistration
    name: HealthCheckRegistration
    nameWithType: HealthCheckRegistration
    fullName: Microsoft.Extensions.Diagnostics.HealthChecks.HealthCheckRegistration
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IServiceProvider
  commentId: T:System.IServiceProvider
  parent: System
  isExternal: true
  name: IServiceProvider
  nameWithType: IServiceProvider
  fullName: System.IServiceProvider
- uid: Steeltoe.Common.HealthChecks.HealthCheckResult
  commentId: T:Steeltoe.Common.HealthChecks.HealthCheckResult
  parent: Steeltoe.Common.HealthChecks
  name: HealthCheckResult
  nameWithType: HealthCheckResult
  fullName: Steeltoe.Common.HealthChecks.HealthCheckResult
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullName.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Collections.Generic.ICollection`1
  commentId: T:System.Collections.Generic.ICollection`1
  isExternal: true
  name: ICollection<T>
  nameWithType: ICollection<T>
  fullName: System.Collections.Generic.ICollection<T>
  nameWithType.vb: ICollection(Of T)
  fullName.vb: System.Collections.Generic.ICollection(Of T)
  name.vb: ICollection(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
