### YamlMime:ManagedReference
items:
- uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions
  commentId: T:Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions
  id: MessageBuilderExtensions
  parent: Steeltoe.Messaging.RabbitMQ.Extensions
  children:
  - Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetAppId(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.String)
  - Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetAppIdIfAbsent(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.String)
  - Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetClusterId(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.String)
  - Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetClusterIdIfAbsent(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.String)
  - Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetContentEncoding(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.String)
  - Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetContentEncodingIfAbsent(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.String)
  - Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetContentLength(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.Int64)
  - Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetContentLengthIfAbsent(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.Int64)
  - Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetContentType(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.String)
  - Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetContentTypeIfAbsent(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.String)
  - Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetCorrelationId(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.String)
  - Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetCorrelationIdIfAbsent(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.String)
  - Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetDeliveryMode(Steeltoe.Messaging.Support.AbstractMessageBuilder,Steeltoe.Messaging.RabbitMQ.Core.MessageDeliveryMode)
  - Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetDeliveryModeIfAbsent(Steeltoe.Messaging.Support.AbstractMessageBuilder,Steeltoe.Messaging.RabbitMQ.Core.MessageDeliveryMode)
  - Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetDeliveryTag(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.UInt64)
  - Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetDeliveryTagIfAbsent(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.UInt64)
  - Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetExpiration(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.String)
  - Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetExpirationIfAbsent(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.String)
  - Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetMessageCount(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.UInt32)
  - Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetMessageCountIfAbsent(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.UInt32)
  - Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetMessageId(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.String)
  - Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetMessageIdIfAbsent(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.String)
  - Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetPriority(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.Int32)
  - Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetPriorityIfAbsent(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.Int32)
  - Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetReceivedExchange(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.String)
  - Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetReceivedExchangeIfAbsent(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.String)
  - Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetReceivedRoutingKey(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.String)
  - Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetReceivedRoutingKeyIfAbsent(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.String)
  - Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetRedelivered(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.Boolean)
  - Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetRedeliveredIfAbsent(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.Boolean)
  - Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetReplyTo(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.String)
  - Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetReplyToAddress(Steeltoe.Messaging.Support.AbstractMessageBuilder,Steeltoe.Messaging.RabbitMQ.Core.Address)
  - Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetReplyToAddressIfAbsent(Steeltoe.Messaging.Support.AbstractMessageBuilder,Steeltoe.Messaging.RabbitMQ.Core.Address)
  - Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetReplyToIfAbsent(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.String)
  - Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetTimestamp(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.Int64)
  - Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetTimestampIfAbsent(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.Int64)
  - Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetType(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.String)
  - Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetTypeIfAbsent(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.String)
  - Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetUserId(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.String)
  - Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetUserIdIfAbsent(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.String)
  langs:
  - csharp
  - vb
  name: MessageBuilderExtensions
  nameWithType: MessageBuilderExtensions
  fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions
  type: Class
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Extensions/MessageBuilderExtensions.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: MessageBuilderExtensions
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Extensions/MessageBuilderExtensions.cs
    startLine: 13
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Extensions
  syntax:
    content: public static class MessageBuilderExtensions
    content.vb: Public Module MessageBuilderExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetTimestamp(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.Int64)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetTimestamp(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.Int64)
  id: SetTimestamp(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.Int64)
  isExtensionMethod: true
  parent: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions
  langs:
  - csharp
  - vb
  name: SetTimestamp(AbstractMessageBuilder, Int64)
  nameWithType: MessageBuilderExtensions.SetTimestamp(AbstractMessageBuilder, Int64)
  fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetTimestamp(Steeltoe.Messaging.Support.AbstractMessageBuilder, System.Int64)
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Extensions/MessageBuilderExtensions.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: SetTimestamp
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Extensions/MessageBuilderExtensions.cs
    startLine: 15
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Extensions
  syntax:
    content: public static AbstractMessageBuilder SetTimestamp(this AbstractMessageBuilder builder, long timestamp)
    parameters:
    - id: builder
      type: Steeltoe.Messaging.Support.AbstractMessageBuilder
    - id: timestamp
      type: System.Int64
    return:
      type: Steeltoe.Messaging.Support.AbstractMessageBuilder
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function SetTimestamp(builder As AbstractMessageBuilder, timestamp As Long) As AbstractMessageBuilder
  overload: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetTimestamp*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetMessageId(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.String)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetMessageId(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.String)
  id: SetMessageId(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.String)
  isExtensionMethod: true
  parent: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions
  langs:
  - csharp
  - vb
  name: SetMessageId(AbstractMessageBuilder, String)
  nameWithType: MessageBuilderExtensions.SetMessageId(AbstractMessageBuilder, String)
  fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetMessageId(Steeltoe.Messaging.Support.AbstractMessageBuilder, System.String)
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Extensions/MessageBuilderExtensions.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: SetMessageId
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Extensions/MessageBuilderExtensions.cs
    startLine: 21
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Extensions
  syntax:
    content: public static AbstractMessageBuilder SetMessageId(this AbstractMessageBuilder builder, string messageId)
    parameters:
    - id: builder
      type: Steeltoe.Messaging.Support.AbstractMessageBuilder
    - id: messageId
      type: System.String
    return:
      type: Steeltoe.Messaging.Support.AbstractMessageBuilder
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function SetMessageId(builder As AbstractMessageBuilder, messageId As String) As AbstractMessageBuilder
  overload: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetMessageId*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetUserId(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.String)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetUserId(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.String)
  id: SetUserId(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.String)
  isExtensionMethod: true
  parent: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions
  langs:
  - csharp
  - vb
  name: SetUserId(AbstractMessageBuilder, String)
  nameWithType: MessageBuilderExtensions.SetUserId(AbstractMessageBuilder, String)
  fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetUserId(Steeltoe.Messaging.Support.AbstractMessageBuilder, System.String)
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Extensions/MessageBuilderExtensions.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: SetUserId
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Extensions/MessageBuilderExtensions.cs
    startLine: 27
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Extensions
  syntax:
    content: public static AbstractMessageBuilder SetUserId(this AbstractMessageBuilder builder, string userId)
    parameters:
    - id: builder
      type: Steeltoe.Messaging.Support.AbstractMessageBuilder
    - id: userId
      type: System.String
    return:
      type: Steeltoe.Messaging.Support.AbstractMessageBuilder
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function SetUserId(builder As AbstractMessageBuilder, userId As String) As AbstractMessageBuilder
  overload: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetUserId*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetAppId(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.String)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetAppId(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.String)
  id: SetAppId(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.String)
  isExtensionMethod: true
  parent: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions
  langs:
  - csharp
  - vb
  name: SetAppId(AbstractMessageBuilder, String)
  nameWithType: MessageBuilderExtensions.SetAppId(AbstractMessageBuilder, String)
  fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetAppId(Steeltoe.Messaging.Support.AbstractMessageBuilder, System.String)
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Extensions/MessageBuilderExtensions.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: SetAppId
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Extensions/MessageBuilderExtensions.cs
    startLine: 33
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Extensions
  syntax:
    content: public static AbstractMessageBuilder SetAppId(this AbstractMessageBuilder builder, string appId)
    parameters:
    - id: builder
      type: Steeltoe.Messaging.Support.AbstractMessageBuilder
    - id: appId
      type: System.String
    return:
      type: Steeltoe.Messaging.Support.AbstractMessageBuilder
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function SetAppId(builder As AbstractMessageBuilder, appId As String) As AbstractMessageBuilder
  overload: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetAppId*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetClusterId(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.String)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetClusterId(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.String)
  id: SetClusterId(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.String)
  isExtensionMethod: true
  parent: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions
  langs:
  - csharp
  - vb
  name: SetClusterId(AbstractMessageBuilder, String)
  nameWithType: MessageBuilderExtensions.SetClusterId(AbstractMessageBuilder, String)
  fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetClusterId(Steeltoe.Messaging.Support.AbstractMessageBuilder, System.String)
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Extensions/MessageBuilderExtensions.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: SetClusterId
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Extensions/MessageBuilderExtensions.cs
    startLine: 39
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Extensions
  syntax:
    content: public static AbstractMessageBuilder SetClusterId(this AbstractMessageBuilder builder, string clusterId)
    parameters:
    - id: builder
      type: Steeltoe.Messaging.Support.AbstractMessageBuilder
    - id: clusterId
      type: System.String
    return:
      type: Steeltoe.Messaging.Support.AbstractMessageBuilder
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function SetClusterId(builder As AbstractMessageBuilder, clusterId As String) As AbstractMessageBuilder
  overload: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetClusterId*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetType(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.String)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetType(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.String)
  id: SetType(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.String)
  isExtensionMethod: true
  parent: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions
  langs:
  - csharp
  - vb
  name: SetType(AbstractMessageBuilder, String)
  nameWithType: MessageBuilderExtensions.SetType(AbstractMessageBuilder, String)
  fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetType(Steeltoe.Messaging.Support.AbstractMessageBuilder, System.String)
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Extensions/MessageBuilderExtensions.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: SetType
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Extensions/MessageBuilderExtensions.cs
    startLine: 45
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Extensions
  syntax:
    content: public static AbstractMessageBuilder SetType(this AbstractMessageBuilder builder, string type)
    parameters:
    - id: builder
      type: Steeltoe.Messaging.Support.AbstractMessageBuilder
    - id: type
      type: System.String
    return:
      type: Steeltoe.Messaging.Support.AbstractMessageBuilder
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function SetType(builder As AbstractMessageBuilder, type As String) As AbstractMessageBuilder
  overload: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetType*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetCorrelationId(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.String)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetCorrelationId(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.String)
  id: SetCorrelationId(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.String)
  isExtensionMethod: true
  parent: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions
  langs:
  - csharp
  - vb
  name: SetCorrelationId(AbstractMessageBuilder, String)
  nameWithType: MessageBuilderExtensions.SetCorrelationId(AbstractMessageBuilder, String)
  fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetCorrelationId(Steeltoe.Messaging.Support.AbstractMessageBuilder, System.String)
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Extensions/MessageBuilderExtensions.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: SetCorrelationId
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Extensions/MessageBuilderExtensions.cs
    startLine: 51
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Extensions
  syntax:
    content: public static AbstractMessageBuilder SetCorrelationId(this AbstractMessageBuilder builder, string correlationId)
    parameters:
    - id: builder
      type: Steeltoe.Messaging.Support.AbstractMessageBuilder
    - id: correlationId
      type: System.String
    return:
      type: Steeltoe.Messaging.Support.AbstractMessageBuilder
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function SetCorrelationId(builder As AbstractMessageBuilder, correlationId As String) As AbstractMessageBuilder
  overload: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetCorrelationId*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetReplyTo(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.String)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetReplyTo(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.String)
  id: SetReplyTo(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.String)
  isExtensionMethod: true
  parent: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions
  langs:
  - csharp
  - vb
  name: SetReplyTo(AbstractMessageBuilder, String)
  nameWithType: MessageBuilderExtensions.SetReplyTo(AbstractMessageBuilder, String)
  fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetReplyTo(Steeltoe.Messaging.Support.AbstractMessageBuilder, System.String)
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Extensions/MessageBuilderExtensions.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: SetReplyTo
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Extensions/MessageBuilderExtensions.cs
    startLine: 57
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Extensions
  syntax:
    content: public static AbstractMessageBuilder SetReplyTo(this AbstractMessageBuilder builder, string replyTo)
    parameters:
    - id: builder
      type: Steeltoe.Messaging.Support.AbstractMessageBuilder
    - id: replyTo
      type: System.String
    return:
      type: Steeltoe.Messaging.Support.AbstractMessageBuilder
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function SetReplyTo(builder As AbstractMessageBuilder, replyTo As String) As AbstractMessageBuilder
  overload: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetReplyTo*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetReplyToAddress(Steeltoe.Messaging.Support.AbstractMessageBuilder,Steeltoe.Messaging.RabbitMQ.Core.Address)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetReplyToAddress(Steeltoe.Messaging.Support.AbstractMessageBuilder,Steeltoe.Messaging.RabbitMQ.Core.Address)
  id: SetReplyToAddress(Steeltoe.Messaging.Support.AbstractMessageBuilder,Steeltoe.Messaging.RabbitMQ.Core.Address)
  isExtensionMethod: true
  parent: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions
  langs:
  - csharp
  - vb
  name: SetReplyToAddress(AbstractMessageBuilder, Address)
  nameWithType: MessageBuilderExtensions.SetReplyToAddress(AbstractMessageBuilder, Address)
  fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetReplyToAddress(Steeltoe.Messaging.Support.AbstractMessageBuilder, Steeltoe.Messaging.RabbitMQ.Core.Address)
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Extensions/MessageBuilderExtensions.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: SetReplyToAddress
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Extensions/MessageBuilderExtensions.cs
    startLine: 63
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Extensions
  syntax:
    content: public static AbstractMessageBuilder SetReplyToAddress(this AbstractMessageBuilder builder, Address replyTo)
    parameters:
    - id: builder
      type: Steeltoe.Messaging.Support.AbstractMessageBuilder
    - id: replyTo
      type: Steeltoe.Messaging.RabbitMQ.Core.Address
    return:
      type: Steeltoe.Messaging.Support.AbstractMessageBuilder
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function SetReplyToAddress(builder As AbstractMessageBuilder, replyTo As Address) As AbstractMessageBuilder
  overload: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetReplyToAddress*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetContentType(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.String)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetContentType(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.String)
  id: SetContentType(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.String)
  isExtensionMethod: true
  parent: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions
  langs:
  - csharp
  - vb
  name: SetContentType(AbstractMessageBuilder, String)
  nameWithType: MessageBuilderExtensions.SetContentType(AbstractMessageBuilder, String)
  fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetContentType(Steeltoe.Messaging.Support.AbstractMessageBuilder, System.String)
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Extensions/MessageBuilderExtensions.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: SetContentType
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Extensions/MessageBuilderExtensions.cs
    startLine: 69
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Extensions
  syntax:
    content: public static AbstractMessageBuilder SetContentType(this AbstractMessageBuilder builder, string contentType)
    parameters:
    - id: builder
      type: Steeltoe.Messaging.Support.AbstractMessageBuilder
    - id: contentType
      type: System.String
    return:
      type: Steeltoe.Messaging.Support.AbstractMessageBuilder
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function SetContentType(builder As AbstractMessageBuilder, contentType As String) As AbstractMessageBuilder
  overload: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetContentType*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetContentEncoding(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.String)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetContentEncoding(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.String)
  id: SetContentEncoding(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.String)
  isExtensionMethod: true
  parent: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions
  langs:
  - csharp
  - vb
  name: SetContentEncoding(AbstractMessageBuilder, String)
  nameWithType: MessageBuilderExtensions.SetContentEncoding(AbstractMessageBuilder, String)
  fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetContentEncoding(Steeltoe.Messaging.Support.AbstractMessageBuilder, System.String)
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Extensions/MessageBuilderExtensions.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: SetContentEncoding
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Extensions/MessageBuilderExtensions.cs
    startLine: 75
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Extensions
  syntax:
    content: public static AbstractMessageBuilder SetContentEncoding(this AbstractMessageBuilder builder, string contentEncoding)
    parameters:
    - id: builder
      type: Steeltoe.Messaging.Support.AbstractMessageBuilder
    - id: contentEncoding
      type: System.String
    return:
      type: Steeltoe.Messaging.Support.AbstractMessageBuilder
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function SetContentEncoding(builder As AbstractMessageBuilder, contentEncoding As String) As AbstractMessageBuilder
  overload: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetContentEncoding*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetContentLength(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.Int64)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetContentLength(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.Int64)
  id: SetContentLength(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.Int64)
  isExtensionMethod: true
  parent: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions
  langs:
  - csharp
  - vb
  name: SetContentLength(AbstractMessageBuilder, Int64)
  nameWithType: MessageBuilderExtensions.SetContentLength(AbstractMessageBuilder, Int64)
  fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetContentLength(Steeltoe.Messaging.Support.AbstractMessageBuilder, System.Int64)
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Extensions/MessageBuilderExtensions.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: SetContentLength
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Extensions/MessageBuilderExtensions.cs
    startLine: 81
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Extensions
  syntax:
    content: public static AbstractMessageBuilder SetContentLength(this AbstractMessageBuilder builder, long contentLength)
    parameters:
    - id: builder
      type: Steeltoe.Messaging.Support.AbstractMessageBuilder
    - id: contentLength
      type: System.Int64
    return:
      type: Steeltoe.Messaging.Support.AbstractMessageBuilder
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function SetContentLength(builder As AbstractMessageBuilder, contentLength As Long) As AbstractMessageBuilder
  overload: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetContentLength*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetDeliveryMode(Steeltoe.Messaging.Support.AbstractMessageBuilder,Steeltoe.Messaging.RabbitMQ.Core.MessageDeliveryMode)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetDeliveryMode(Steeltoe.Messaging.Support.AbstractMessageBuilder,Steeltoe.Messaging.RabbitMQ.Core.MessageDeliveryMode)
  id: SetDeliveryMode(Steeltoe.Messaging.Support.AbstractMessageBuilder,Steeltoe.Messaging.RabbitMQ.Core.MessageDeliveryMode)
  isExtensionMethod: true
  parent: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions
  langs:
  - csharp
  - vb
  name: SetDeliveryMode(AbstractMessageBuilder, MessageDeliveryMode)
  nameWithType: MessageBuilderExtensions.SetDeliveryMode(AbstractMessageBuilder, MessageDeliveryMode)
  fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetDeliveryMode(Steeltoe.Messaging.Support.AbstractMessageBuilder, Steeltoe.Messaging.RabbitMQ.Core.MessageDeliveryMode)
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Extensions/MessageBuilderExtensions.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: SetDeliveryMode
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Extensions/MessageBuilderExtensions.cs
    startLine: 87
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Extensions
  syntax:
    content: public static AbstractMessageBuilder SetDeliveryMode(this AbstractMessageBuilder builder, MessageDeliveryMode deliveryMode)
    parameters:
    - id: builder
      type: Steeltoe.Messaging.Support.AbstractMessageBuilder
    - id: deliveryMode
      type: Steeltoe.Messaging.RabbitMQ.Core.MessageDeliveryMode
    return:
      type: Steeltoe.Messaging.Support.AbstractMessageBuilder
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function SetDeliveryMode(builder As AbstractMessageBuilder, deliveryMode As MessageDeliveryMode) As AbstractMessageBuilder
  overload: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetDeliveryMode*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetExpiration(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.String)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetExpiration(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.String)
  id: SetExpiration(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.String)
  isExtensionMethod: true
  parent: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions
  langs:
  - csharp
  - vb
  name: SetExpiration(AbstractMessageBuilder, String)
  nameWithType: MessageBuilderExtensions.SetExpiration(AbstractMessageBuilder, String)
  fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetExpiration(Steeltoe.Messaging.Support.AbstractMessageBuilder, System.String)
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Extensions/MessageBuilderExtensions.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: SetExpiration
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Extensions/MessageBuilderExtensions.cs
    startLine: 93
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Extensions
  syntax:
    content: public static AbstractMessageBuilder SetExpiration(this AbstractMessageBuilder builder, string expiration)
    parameters:
    - id: builder
      type: Steeltoe.Messaging.Support.AbstractMessageBuilder
    - id: expiration
      type: System.String
    return:
      type: Steeltoe.Messaging.Support.AbstractMessageBuilder
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function SetExpiration(builder As AbstractMessageBuilder, expiration As String) As AbstractMessageBuilder
  overload: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetExpiration*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetPriority(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.Int32)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetPriority(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.Int32)
  id: SetPriority(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.Int32)
  isExtensionMethod: true
  parent: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions
  langs:
  - csharp
  - vb
  name: SetPriority(AbstractMessageBuilder, Int32)
  nameWithType: MessageBuilderExtensions.SetPriority(AbstractMessageBuilder, Int32)
  fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetPriority(Steeltoe.Messaging.Support.AbstractMessageBuilder, System.Int32)
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Extensions/MessageBuilderExtensions.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: SetPriority
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Extensions/MessageBuilderExtensions.cs
    startLine: 99
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Extensions
  syntax:
    content: public static AbstractMessageBuilder SetPriority(this AbstractMessageBuilder builder, int priority)
    parameters:
    - id: builder
      type: Steeltoe.Messaging.Support.AbstractMessageBuilder
    - id: priority
      type: System.Int32
    return:
      type: Steeltoe.Messaging.Support.AbstractMessageBuilder
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function SetPriority(builder As AbstractMessageBuilder, priority As Integer) As AbstractMessageBuilder
  overload: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetPriority*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetReceivedExchange(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.String)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetReceivedExchange(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.String)
  id: SetReceivedExchange(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.String)
  isExtensionMethod: true
  parent: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions
  langs:
  - csharp
  - vb
  name: SetReceivedExchange(AbstractMessageBuilder, String)
  nameWithType: MessageBuilderExtensions.SetReceivedExchange(AbstractMessageBuilder, String)
  fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetReceivedExchange(Steeltoe.Messaging.Support.AbstractMessageBuilder, System.String)
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Extensions/MessageBuilderExtensions.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: SetReceivedExchange
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Extensions/MessageBuilderExtensions.cs
    startLine: 105
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Extensions
  syntax:
    content: public static AbstractMessageBuilder SetReceivedExchange(this AbstractMessageBuilder builder, string receivedExchange)
    parameters:
    - id: builder
      type: Steeltoe.Messaging.Support.AbstractMessageBuilder
    - id: receivedExchange
      type: System.String
    return:
      type: Steeltoe.Messaging.Support.AbstractMessageBuilder
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function SetReceivedExchange(builder As AbstractMessageBuilder, receivedExchange As String) As AbstractMessageBuilder
  overload: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetReceivedExchange*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetReceivedRoutingKey(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.String)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetReceivedRoutingKey(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.String)
  id: SetReceivedRoutingKey(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.String)
  isExtensionMethod: true
  parent: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions
  langs:
  - csharp
  - vb
  name: SetReceivedRoutingKey(AbstractMessageBuilder, String)
  nameWithType: MessageBuilderExtensions.SetReceivedRoutingKey(AbstractMessageBuilder, String)
  fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetReceivedRoutingKey(Steeltoe.Messaging.Support.AbstractMessageBuilder, System.String)
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Extensions/MessageBuilderExtensions.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: SetReceivedRoutingKey
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Extensions/MessageBuilderExtensions.cs
    startLine: 111
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Extensions
  syntax:
    content: public static AbstractMessageBuilder SetReceivedRoutingKey(this AbstractMessageBuilder builder, string receivedRoutingKey)
    parameters:
    - id: builder
      type: Steeltoe.Messaging.Support.AbstractMessageBuilder
    - id: receivedRoutingKey
      type: System.String
    return:
      type: Steeltoe.Messaging.Support.AbstractMessageBuilder
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function SetReceivedRoutingKey(builder As AbstractMessageBuilder, receivedRoutingKey As String) As AbstractMessageBuilder
  overload: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetReceivedRoutingKey*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetRedelivered(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.Boolean)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetRedelivered(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.Boolean)
  id: SetRedelivered(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.Boolean)
  isExtensionMethod: true
  parent: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions
  langs:
  - csharp
  - vb
  name: SetRedelivered(AbstractMessageBuilder, Boolean)
  nameWithType: MessageBuilderExtensions.SetRedelivered(AbstractMessageBuilder, Boolean)
  fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetRedelivered(Steeltoe.Messaging.Support.AbstractMessageBuilder, System.Boolean)
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Extensions/MessageBuilderExtensions.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: SetRedelivered
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Extensions/MessageBuilderExtensions.cs
    startLine: 117
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Extensions
  syntax:
    content: public static AbstractMessageBuilder SetRedelivered(this AbstractMessageBuilder builder, bool redelivered)
    parameters:
    - id: builder
      type: Steeltoe.Messaging.Support.AbstractMessageBuilder
    - id: redelivered
      type: System.Boolean
    return:
      type: Steeltoe.Messaging.Support.AbstractMessageBuilder
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function SetRedelivered(builder As AbstractMessageBuilder, redelivered As Boolean) As AbstractMessageBuilder
  overload: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetRedelivered*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetDeliveryTag(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.UInt64)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetDeliveryTag(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.UInt64)
  id: SetDeliveryTag(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.UInt64)
  isExtensionMethod: true
  parent: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions
  langs:
  - csharp
  - vb
  name: SetDeliveryTag(AbstractMessageBuilder, UInt64)
  nameWithType: MessageBuilderExtensions.SetDeliveryTag(AbstractMessageBuilder, UInt64)
  fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetDeliveryTag(Steeltoe.Messaging.Support.AbstractMessageBuilder, System.UInt64)
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Extensions/MessageBuilderExtensions.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: SetDeliveryTag
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Extensions/MessageBuilderExtensions.cs
    startLine: 123
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Extensions
  syntax:
    content: public static AbstractMessageBuilder SetDeliveryTag(this AbstractMessageBuilder builder, ulong deliveryTag)
    parameters:
    - id: builder
      type: Steeltoe.Messaging.Support.AbstractMessageBuilder
    - id: deliveryTag
      type: System.UInt64
    return:
      type: Steeltoe.Messaging.Support.AbstractMessageBuilder
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function SetDeliveryTag(builder As AbstractMessageBuilder, deliveryTag As ULong) As AbstractMessageBuilder
  overload: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetDeliveryTag*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetMessageCount(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.UInt32)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetMessageCount(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.UInt32)
  id: SetMessageCount(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.UInt32)
  isExtensionMethod: true
  parent: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions
  langs:
  - csharp
  - vb
  name: SetMessageCount(AbstractMessageBuilder, UInt32)
  nameWithType: MessageBuilderExtensions.SetMessageCount(AbstractMessageBuilder, UInt32)
  fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetMessageCount(Steeltoe.Messaging.Support.AbstractMessageBuilder, System.UInt32)
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Extensions/MessageBuilderExtensions.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: SetMessageCount
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Extensions/MessageBuilderExtensions.cs
    startLine: 129
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Extensions
  syntax:
    content: public static AbstractMessageBuilder SetMessageCount(this AbstractMessageBuilder builder, uint messageCount)
    parameters:
    - id: builder
      type: Steeltoe.Messaging.Support.AbstractMessageBuilder
    - id: messageCount
      type: System.UInt32
    return:
      type: Steeltoe.Messaging.Support.AbstractMessageBuilder
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function SetMessageCount(builder As AbstractMessageBuilder, messageCount As UInteger) As AbstractMessageBuilder
  overload: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetMessageCount*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetTimestampIfAbsent(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.Int64)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetTimestampIfAbsent(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.Int64)
  id: SetTimestampIfAbsent(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.Int64)
  isExtensionMethod: true
  parent: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions
  langs:
  - csharp
  - vb
  name: SetTimestampIfAbsent(AbstractMessageBuilder, Int64)
  nameWithType: MessageBuilderExtensions.SetTimestampIfAbsent(AbstractMessageBuilder, Int64)
  fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetTimestampIfAbsent(Steeltoe.Messaging.Support.AbstractMessageBuilder, System.Int64)
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Extensions/MessageBuilderExtensions.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: SetTimestampIfAbsent
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Extensions/MessageBuilderExtensions.cs
    startLine: 135
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Extensions
  syntax:
    content: public static AbstractMessageBuilder SetTimestampIfAbsent(this AbstractMessageBuilder builder, long timestamp)
    parameters:
    - id: builder
      type: Steeltoe.Messaging.Support.AbstractMessageBuilder
    - id: timestamp
      type: System.Int64
    return:
      type: Steeltoe.Messaging.Support.AbstractMessageBuilder
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function SetTimestampIfAbsent(builder As AbstractMessageBuilder, timestamp As Long) As AbstractMessageBuilder
  overload: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetTimestampIfAbsent*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetMessageIdIfAbsent(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.String)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetMessageIdIfAbsent(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.String)
  id: SetMessageIdIfAbsent(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.String)
  isExtensionMethod: true
  parent: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions
  langs:
  - csharp
  - vb
  name: SetMessageIdIfAbsent(AbstractMessageBuilder, String)
  nameWithType: MessageBuilderExtensions.SetMessageIdIfAbsent(AbstractMessageBuilder, String)
  fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetMessageIdIfAbsent(Steeltoe.Messaging.Support.AbstractMessageBuilder, System.String)
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Extensions/MessageBuilderExtensions.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: SetMessageIdIfAbsent
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Extensions/MessageBuilderExtensions.cs
    startLine: 141
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Extensions
  syntax:
    content: public static AbstractMessageBuilder SetMessageIdIfAbsent(this AbstractMessageBuilder builder, string messageId)
    parameters:
    - id: builder
      type: Steeltoe.Messaging.Support.AbstractMessageBuilder
    - id: messageId
      type: System.String
    return:
      type: Steeltoe.Messaging.Support.AbstractMessageBuilder
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function SetMessageIdIfAbsent(builder As AbstractMessageBuilder, messageId As String) As AbstractMessageBuilder
  overload: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetMessageIdIfAbsent*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetUserIdIfAbsent(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.String)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetUserIdIfAbsent(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.String)
  id: SetUserIdIfAbsent(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.String)
  isExtensionMethod: true
  parent: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions
  langs:
  - csharp
  - vb
  name: SetUserIdIfAbsent(AbstractMessageBuilder, String)
  nameWithType: MessageBuilderExtensions.SetUserIdIfAbsent(AbstractMessageBuilder, String)
  fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetUserIdIfAbsent(Steeltoe.Messaging.Support.AbstractMessageBuilder, System.String)
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Extensions/MessageBuilderExtensions.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: SetUserIdIfAbsent
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Extensions/MessageBuilderExtensions.cs
    startLine: 147
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Extensions
  syntax:
    content: public static AbstractMessageBuilder SetUserIdIfAbsent(this AbstractMessageBuilder builder, string userId)
    parameters:
    - id: builder
      type: Steeltoe.Messaging.Support.AbstractMessageBuilder
    - id: userId
      type: System.String
    return:
      type: Steeltoe.Messaging.Support.AbstractMessageBuilder
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function SetUserIdIfAbsent(builder As AbstractMessageBuilder, userId As String) As AbstractMessageBuilder
  overload: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetUserIdIfAbsent*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetAppIdIfAbsent(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.String)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetAppIdIfAbsent(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.String)
  id: SetAppIdIfAbsent(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.String)
  isExtensionMethod: true
  parent: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions
  langs:
  - csharp
  - vb
  name: SetAppIdIfAbsent(AbstractMessageBuilder, String)
  nameWithType: MessageBuilderExtensions.SetAppIdIfAbsent(AbstractMessageBuilder, String)
  fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetAppIdIfAbsent(Steeltoe.Messaging.Support.AbstractMessageBuilder, System.String)
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Extensions/MessageBuilderExtensions.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: SetAppIdIfAbsent
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Extensions/MessageBuilderExtensions.cs
    startLine: 153
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Extensions
  syntax:
    content: public static AbstractMessageBuilder SetAppIdIfAbsent(this AbstractMessageBuilder builder, string appId)
    parameters:
    - id: builder
      type: Steeltoe.Messaging.Support.AbstractMessageBuilder
    - id: appId
      type: System.String
    return:
      type: Steeltoe.Messaging.Support.AbstractMessageBuilder
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function SetAppIdIfAbsent(builder As AbstractMessageBuilder, appId As String) As AbstractMessageBuilder
  overload: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetAppIdIfAbsent*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetClusterIdIfAbsent(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.String)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetClusterIdIfAbsent(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.String)
  id: SetClusterIdIfAbsent(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.String)
  isExtensionMethod: true
  parent: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions
  langs:
  - csharp
  - vb
  name: SetClusterIdIfAbsent(AbstractMessageBuilder, String)
  nameWithType: MessageBuilderExtensions.SetClusterIdIfAbsent(AbstractMessageBuilder, String)
  fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetClusterIdIfAbsent(Steeltoe.Messaging.Support.AbstractMessageBuilder, System.String)
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Extensions/MessageBuilderExtensions.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: SetClusterIdIfAbsent
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Extensions/MessageBuilderExtensions.cs
    startLine: 159
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Extensions
  syntax:
    content: public static AbstractMessageBuilder SetClusterIdIfAbsent(this AbstractMessageBuilder builder, string clusterId)
    parameters:
    - id: builder
      type: Steeltoe.Messaging.Support.AbstractMessageBuilder
    - id: clusterId
      type: System.String
    return:
      type: Steeltoe.Messaging.Support.AbstractMessageBuilder
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function SetClusterIdIfAbsent(builder As AbstractMessageBuilder, clusterId As String) As AbstractMessageBuilder
  overload: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetClusterIdIfAbsent*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetTypeIfAbsent(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.String)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetTypeIfAbsent(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.String)
  id: SetTypeIfAbsent(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.String)
  isExtensionMethod: true
  parent: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions
  langs:
  - csharp
  - vb
  name: SetTypeIfAbsent(AbstractMessageBuilder, String)
  nameWithType: MessageBuilderExtensions.SetTypeIfAbsent(AbstractMessageBuilder, String)
  fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetTypeIfAbsent(Steeltoe.Messaging.Support.AbstractMessageBuilder, System.String)
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Extensions/MessageBuilderExtensions.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: SetTypeIfAbsent
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Extensions/MessageBuilderExtensions.cs
    startLine: 165
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Extensions
  syntax:
    content: public static AbstractMessageBuilder SetTypeIfAbsent(this AbstractMessageBuilder builder, string type)
    parameters:
    - id: builder
      type: Steeltoe.Messaging.Support.AbstractMessageBuilder
    - id: type
      type: System.String
    return:
      type: Steeltoe.Messaging.Support.AbstractMessageBuilder
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function SetTypeIfAbsent(builder As AbstractMessageBuilder, type As String) As AbstractMessageBuilder
  overload: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetTypeIfAbsent*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetCorrelationIdIfAbsent(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.String)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetCorrelationIdIfAbsent(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.String)
  id: SetCorrelationIdIfAbsent(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.String)
  isExtensionMethod: true
  parent: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions
  langs:
  - csharp
  - vb
  name: SetCorrelationIdIfAbsent(AbstractMessageBuilder, String)
  nameWithType: MessageBuilderExtensions.SetCorrelationIdIfAbsent(AbstractMessageBuilder, String)
  fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetCorrelationIdIfAbsent(Steeltoe.Messaging.Support.AbstractMessageBuilder, System.String)
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Extensions/MessageBuilderExtensions.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: SetCorrelationIdIfAbsent
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Extensions/MessageBuilderExtensions.cs
    startLine: 171
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Extensions
  syntax:
    content: public static AbstractMessageBuilder SetCorrelationIdIfAbsent(this AbstractMessageBuilder builder, string correlationId)
    parameters:
    - id: builder
      type: Steeltoe.Messaging.Support.AbstractMessageBuilder
    - id: correlationId
      type: System.String
    return:
      type: Steeltoe.Messaging.Support.AbstractMessageBuilder
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function SetCorrelationIdIfAbsent(builder As AbstractMessageBuilder, correlationId As String) As AbstractMessageBuilder
  overload: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetCorrelationIdIfAbsent*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetReplyToIfAbsent(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.String)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetReplyToIfAbsent(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.String)
  id: SetReplyToIfAbsent(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.String)
  isExtensionMethod: true
  parent: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions
  langs:
  - csharp
  - vb
  name: SetReplyToIfAbsent(AbstractMessageBuilder, String)
  nameWithType: MessageBuilderExtensions.SetReplyToIfAbsent(AbstractMessageBuilder, String)
  fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetReplyToIfAbsent(Steeltoe.Messaging.Support.AbstractMessageBuilder, System.String)
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Extensions/MessageBuilderExtensions.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: SetReplyToIfAbsent
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Extensions/MessageBuilderExtensions.cs
    startLine: 177
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Extensions
  syntax:
    content: public static AbstractMessageBuilder SetReplyToIfAbsent(this AbstractMessageBuilder builder, string replyTo)
    parameters:
    - id: builder
      type: Steeltoe.Messaging.Support.AbstractMessageBuilder
    - id: replyTo
      type: System.String
    return:
      type: Steeltoe.Messaging.Support.AbstractMessageBuilder
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function SetReplyToIfAbsent(builder As AbstractMessageBuilder, replyTo As String) As AbstractMessageBuilder
  overload: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetReplyToIfAbsent*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetReplyToAddressIfAbsent(Steeltoe.Messaging.Support.AbstractMessageBuilder,Steeltoe.Messaging.RabbitMQ.Core.Address)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetReplyToAddressIfAbsent(Steeltoe.Messaging.Support.AbstractMessageBuilder,Steeltoe.Messaging.RabbitMQ.Core.Address)
  id: SetReplyToAddressIfAbsent(Steeltoe.Messaging.Support.AbstractMessageBuilder,Steeltoe.Messaging.RabbitMQ.Core.Address)
  isExtensionMethod: true
  parent: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions
  langs:
  - csharp
  - vb
  name: SetReplyToAddressIfAbsent(AbstractMessageBuilder, Address)
  nameWithType: MessageBuilderExtensions.SetReplyToAddressIfAbsent(AbstractMessageBuilder, Address)
  fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetReplyToAddressIfAbsent(Steeltoe.Messaging.Support.AbstractMessageBuilder, Steeltoe.Messaging.RabbitMQ.Core.Address)
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Extensions/MessageBuilderExtensions.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: SetReplyToAddressIfAbsent
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Extensions/MessageBuilderExtensions.cs
    startLine: 183
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Extensions
  syntax:
    content: public static AbstractMessageBuilder SetReplyToAddressIfAbsent(this AbstractMessageBuilder builder, Address replyTo)
    parameters:
    - id: builder
      type: Steeltoe.Messaging.Support.AbstractMessageBuilder
    - id: replyTo
      type: Steeltoe.Messaging.RabbitMQ.Core.Address
    return:
      type: Steeltoe.Messaging.Support.AbstractMessageBuilder
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function SetReplyToAddressIfAbsent(builder As AbstractMessageBuilder, replyTo As Address) As AbstractMessageBuilder
  overload: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetReplyToAddressIfAbsent*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetContentTypeIfAbsent(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.String)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetContentTypeIfAbsent(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.String)
  id: SetContentTypeIfAbsent(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.String)
  isExtensionMethod: true
  parent: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions
  langs:
  - csharp
  - vb
  name: SetContentTypeIfAbsent(AbstractMessageBuilder, String)
  nameWithType: MessageBuilderExtensions.SetContentTypeIfAbsent(AbstractMessageBuilder, String)
  fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetContentTypeIfAbsent(Steeltoe.Messaging.Support.AbstractMessageBuilder, System.String)
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Extensions/MessageBuilderExtensions.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: SetContentTypeIfAbsent
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Extensions/MessageBuilderExtensions.cs
    startLine: 189
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Extensions
  syntax:
    content: public static AbstractMessageBuilder SetContentTypeIfAbsent(this AbstractMessageBuilder builder, string contentType)
    parameters:
    - id: builder
      type: Steeltoe.Messaging.Support.AbstractMessageBuilder
    - id: contentType
      type: System.String
    return:
      type: Steeltoe.Messaging.Support.AbstractMessageBuilder
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function SetContentTypeIfAbsent(builder As AbstractMessageBuilder, contentType As String) As AbstractMessageBuilder
  overload: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetContentTypeIfAbsent*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetContentEncodingIfAbsent(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.String)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetContentEncodingIfAbsent(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.String)
  id: SetContentEncodingIfAbsent(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.String)
  isExtensionMethod: true
  parent: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions
  langs:
  - csharp
  - vb
  name: SetContentEncodingIfAbsent(AbstractMessageBuilder, String)
  nameWithType: MessageBuilderExtensions.SetContentEncodingIfAbsent(AbstractMessageBuilder, String)
  fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetContentEncodingIfAbsent(Steeltoe.Messaging.Support.AbstractMessageBuilder, System.String)
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Extensions/MessageBuilderExtensions.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: SetContentEncodingIfAbsent
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Extensions/MessageBuilderExtensions.cs
    startLine: 195
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Extensions
  syntax:
    content: public static AbstractMessageBuilder SetContentEncodingIfAbsent(this AbstractMessageBuilder builder, string contentEncoding)
    parameters:
    - id: builder
      type: Steeltoe.Messaging.Support.AbstractMessageBuilder
    - id: contentEncoding
      type: System.String
    return:
      type: Steeltoe.Messaging.Support.AbstractMessageBuilder
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function SetContentEncodingIfAbsent(builder As AbstractMessageBuilder, contentEncoding As String) As AbstractMessageBuilder
  overload: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetContentEncodingIfAbsent*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetContentLengthIfAbsent(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.Int64)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetContentLengthIfAbsent(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.Int64)
  id: SetContentLengthIfAbsent(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.Int64)
  isExtensionMethod: true
  parent: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions
  langs:
  - csharp
  - vb
  name: SetContentLengthIfAbsent(AbstractMessageBuilder, Int64)
  nameWithType: MessageBuilderExtensions.SetContentLengthIfAbsent(AbstractMessageBuilder, Int64)
  fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetContentLengthIfAbsent(Steeltoe.Messaging.Support.AbstractMessageBuilder, System.Int64)
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Extensions/MessageBuilderExtensions.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: SetContentLengthIfAbsent
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Extensions/MessageBuilderExtensions.cs
    startLine: 201
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Extensions
  syntax:
    content: public static AbstractMessageBuilder SetContentLengthIfAbsent(this AbstractMessageBuilder builder, long contentLength)
    parameters:
    - id: builder
      type: Steeltoe.Messaging.Support.AbstractMessageBuilder
    - id: contentLength
      type: System.Int64
    return:
      type: Steeltoe.Messaging.Support.AbstractMessageBuilder
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function SetContentLengthIfAbsent(builder As AbstractMessageBuilder, contentLength As Long) As AbstractMessageBuilder
  overload: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetContentLengthIfAbsent*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetDeliveryModeIfAbsent(Steeltoe.Messaging.Support.AbstractMessageBuilder,Steeltoe.Messaging.RabbitMQ.Core.MessageDeliveryMode)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetDeliveryModeIfAbsent(Steeltoe.Messaging.Support.AbstractMessageBuilder,Steeltoe.Messaging.RabbitMQ.Core.MessageDeliveryMode)
  id: SetDeliveryModeIfAbsent(Steeltoe.Messaging.Support.AbstractMessageBuilder,Steeltoe.Messaging.RabbitMQ.Core.MessageDeliveryMode)
  isExtensionMethod: true
  parent: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions
  langs:
  - csharp
  - vb
  name: SetDeliveryModeIfAbsent(AbstractMessageBuilder, MessageDeliveryMode)
  nameWithType: MessageBuilderExtensions.SetDeliveryModeIfAbsent(AbstractMessageBuilder, MessageDeliveryMode)
  fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetDeliveryModeIfAbsent(Steeltoe.Messaging.Support.AbstractMessageBuilder, Steeltoe.Messaging.RabbitMQ.Core.MessageDeliveryMode)
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Extensions/MessageBuilderExtensions.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: SetDeliveryModeIfAbsent
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Extensions/MessageBuilderExtensions.cs
    startLine: 207
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Extensions
  syntax:
    content: public static AbstractMessageBuilder SetDeliveryModeIfAbsent(this AbstractMessageBuilder builder, MessageDeliveryMode deliveryMode)
    parameters:
    - id: builder
      type: Steeltoe.Messaging.Support.AbstractMessageBuilder
    - id: deliveryMode
      type: Steeltoe.Messaging.RabbitMQ.Core.MessageDeliveryMode
    return:
      type: Steeltoe.Messaging.Support.AbstractMessageBuilder
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function SetDeliveryModeIfAbsent(builder As AbstractMessageBuilder, deliveryMode As MessageDeliveryMode) As AbstractMessageBuilder
  overload: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetDeliveryModeIfAbsent*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetExpirationIfAbsent(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.String)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetExpirationIfAbsent(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.String)
  id: SetExpirationIfAbsent(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.String)
  isExtensionMethod: true
  parent: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions
  langs:
  - csharp
  - vb
  name: SetExpirationIfAbsent(AbstractMessageBuilder, String)
  nameWithType: MessageBuilderExtensions.SetExpirationIfAbsent(AbstractMessageBuilder, String)
  fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetExpirationIfAbsent(Steeltoe.Messaging.Support.AbstractMessageBuilder, System.String)
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Extensions/MessageBuilderExtensions.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: SetExpirationIfAbsent
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Extensions/MessageBuilderExtensions.cs
    startLine: 213
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Extensions
  syntax:
    content: public static AbstractMessageBuilder SetExpirationIfAbsent(this AbstractMessageBuilder builder, string expiration)
    parameters:
    - id: builder
      type: Steeltoe.Messaging.Support.AbstractMessageBuilder
    - id: expiration
      type: System.String
    return:
      type: Steeltoe.Messaging.Support.AbstractMessageBuilder
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function SetExpirationIfAbsent(builder As AbstractMessageBuilder, expiration As String) As AbstractMessageBuilder
  overload: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetExpirationIfAbsent*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetPriorityIfAbsent(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.Int32)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetPriorityIfAbsent(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.Int32)
  id: SetPriorityIfAbsent(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.Int32)
  isExtensionMethod: true
  parent: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions
  langs:
  - csharp
  - vb
  name: SetPriorityIfAbsent(AbstractMessageBuilder, Int32)
  nameWithType: MessageBuilderExtensions.SetPriorityIfAbsent(AbstractMessageBuilder, Int32)
  fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetPriorityIfAbsent(Steeltoe.Messaging.Support.AbstractMessageBuilder, System.Int32)
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Extensions/MessageBuilderExtensions.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: SetPriorityIfAbsent
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Extensions/MessageBuilderExtensions.cs
    startLine: 219
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Extensions
  syntax:
    content: public static AbstractMessageBuilder SetPriorityIfAbsent(this AbstractMessageBuilder builder, int priority)
    parameters:
    - id: builder
      type: Steeltoe.Messaging.Support.AbstractMessageBuilder
    - id: priority
      type: System.Int32
    return:
      type: Steeltoe.Messaging.Support.AbstractMessageBuilder
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function SetPriorityIfAbsent(builder As AbstractMessageBuilder, priority As Integer) As AbstractMessageBuilder
  overload: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetPriorityIfAbsent*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetReceivedExchangeIfAbsent(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.String)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetReceivedExchangeIfAbsent(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.String)
  id: SetReceivedExchangeIfAbsent(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.String)
  isExtensionMethod: true
  parent: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions
  langs:
  - csharp
  - vb
  name: SetReceivedExchangeIfAbsent(AbstractMessageBuilder, String)
  nameWithType: MessageBuilderExtensions.SetReceivedExchangeIfAbsent(AbstractMessageBuilder, String)
  fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetReceivedExchangeIfAbsent(Steeltoe.Messaging.Support.AbstractMessageBuilder, System.String)
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Extensions/MessageBuilderExtensions.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: SetReceivedExchangeIfAbsent
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Extensions/MessageBuilderExtensions.cs
    startLine: 225
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Extensions
  syntax:
    content: public static AbstractMessageBuilder SetReceivedExchangeIfAbsent(this AbstractMessageBuilder builder, string receivedExchange)
    parameters:
    - id: builder
      type: Steeltoe.Messaging.Support.AbstractMessageBuilder
    - id: receivedExchange
      type: System.String
    return:
      type: Steeltoe.Messaging.Support.AbstractMessageBuilder
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function SetReceivedExchangeIfAbsent(builder As AbstractMessageBuilder, receivedExchange As String) As AbstractMessageBuilder
  overload: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetReceivedExchangeIfAbsent*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetReceivedRoutingKeyIfAbsent(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.String)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetReceivedRoutingKeyIfAbsent(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.String)
  id: SetReceivedRoutingKeyIfAbsent(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.String)
  isExtensionMethod: true
  parent: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions
  langs:
  - csharp
  - vb
  name: SetReceivedRoutingKeyIfAbsent(AbstractMessageBuilder, String)
  nameWithType: MessageBuilderExtensions.SetReceivedRoutingKeyIfAbsent(AbstractMessageBuilder, String)
  fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetReceivedRoutingKeyIfAbsent(Steeltoe.Messaging.Support.AbstractMessageBuilder, System.String)
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Extensions/MessageBuilderExtensions.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: SetReceivedRoutingKeyIfAbsent
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Extensions/MessageBuilderExtensions.cs
    startLine: 231
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Extensions
  syntax:
    content: public static AbstractMessageBuilder SetReceivedRoutingKeyIfAbsent(this AbstractMessageBuilder builder, string receivedRoutingKey)
    parameters:
    - id: builder
      type: Steeltoe.Messaging.Support.AbstractMessageBuilder
    - id: receivedRoutingKey
      type: System.String
    return:
      type: Steeltoe.Messaging.Support.AbstractMessageBuilder
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function SetReceivedRoutingKeyIfAbsent(builder As AbstractMessageBuilder, receivedRoutingKey As String) As AbstractMessageBuilder
  overload: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetReceivedRoutingKeyIfAbsent*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetRedeliveredIfAbsent(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.Boolean)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetRedeliveredIfAbsent(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.Boolean)
  id: SetRedeliveredIfAbsent(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.Boolean)
  isExtensionMethod: true
  parent: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions
  langs:
  - csharp
  - vb
  name: SetRedeliveredIfAbsent(AbstractMessageBuilder, Boolean)
  nameWithType: MessageBuilderExtensions.SetRedeliveredIfAbsent(AbstractMessageBuilder, Boolean)
  fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetRedeliveredIfAbsent(Steeltoe.Messaging.Support.AbstractMessageBuilder, System.Boolean)
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Extensions/MessageBuilderExtensions.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: SetRedeliveredIfAbsent
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Extensions/MessageBuilderExtensions.cs
    startLine: 237
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Extensions
  syntax:
    content: public static AbstractMessageBuilder SetRedeliveredIfAbsent(this AbstractMessageBuilder builder, bool redelivered)
    parameters:
    - id: builder
      type: Steeltoe.Messaging.Support.AbstractMessageBuilder
    - id: redelivered
      type: System.Boolean
    return:
      type: Steeltoe.Messaging.Support.AbstractMessageBuilder
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function SetRedeliveredIfAbsent(builder As AbstractMessageBuilder, redelivered As Boolean) As AbstractMessageBuilder
  overload: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetRedeliveredIfAbsent*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetDeliveryTagIfAbsent(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.UInt64)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetDeliveryTagIfAbsent(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.UInt64)
  id: SetDeliveryTagIfAbsent(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.UInt64)
  isExtensionMethod: true
  parent: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions
  langs:
  - csharp
  - vb
  name: SetDeliveryTagIfAbsent(AbstractMessageBuilder, UInt64)
  nameWithType: MessageBuilderExtensions.SetDeliveryTagIfAbsent(AbstractMessageBuilder, UInt64)
  fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetDeliveryTagIfAbsent(Steeltoe.Messaging.Support.AbstractMessageBuilder, System.UInt64)
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Extensions/MessageBuilderExtensions.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: SetDeliveryTagIfAbsent
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Extensions/MessageBuilderExtensions.cs
    startLine: 243
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Extensions
  syntax:
    content: public static AbstractMessageBuilder SetDeliveryTagIfAbsent(this AbstractMessageBuilder builder, ulong deliveryTag)
    parameters:
    - id: builder
      type: Steeltoe.Messaging.Support.AbstractMessageBuilder
    - id: deliveryTag
      type: System.UInt64
    return:
      type: Steeltoe.Messaging.Support.AbstractMessageBuilder
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function SetDeliveryTagIfAbsent(builder As AbstractMessageBuilder, deliveryTag As ULong) As AbstractMessageBuilder
  overload: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetDeliveryTagIfAbsent*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetMessageCountIfAbsent(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.UInt32)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetMessageCountIfAbsent(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.UInt32)
  id: SetMessageCountIfAbsent(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.UInt32)
  isExtensionMethod: true
  parent: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions
  langs:
  - csharp
  - vb
  name: SetMessageCountIfAbsent(AbstractMessageBuilder, UInt32)
  nameWithType: MessageBuilderExtensions.SetMessageCountIfAbsent(AbstractMessageBuilder, UInt32)
  fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetMessageCountIfAbsent(Steeltoe.Messaging.Support.AbstractMessageBuilder, System.UInt32)
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Extensions/MessageBuilderExtensions.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: SetMessageCountIfAbsent
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Extensions/MessageBuilderExtensions.cs
    startLine: 249
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Extensions
  syntax:
    content: public static AbstractMessageBuilder SetMessageCountIfAbsent(this AbstractMessageBuilder builder, uint messageCount)
    parameters:
    - id: builder
      type: Steeltoe.Messaging.Support.AbstractMessageBuilder
    - id: messageCount
      type: System.UInt32
    return:
      type: Steeltoe.Messaging.Support.AbstractMessageBuilder
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function SetMessageCountIfAbsent(builder As AbstractMessageBuilder, messageCount As UInteger) As AbstractMessageBuilder
  overload: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetMessageCountIfAbsent*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Steeltoe.Messaging.RabbitMQ.Extensions
  commentId: N:Steeltoe.Messaging.RabbitMQ.Extensions
  name: Steeltoe.Messaging.RabbitMQ.Extensions
  nameWithType: Steeltoe.Messaging.RabbitMQ.Extensions
  fullName: Steeltoe.Messaging.RabbitMQ.Extensions
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetTimestamp*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetTimestamp
  name: SetTimestamp
  nameWithType: MessageBuilderExtensions.SetTimestamp
  fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetTimestamp
- uid: Steeltoe.Messaging.Support.AbstractMessageBuilder
  commentId: T:Steeltoe.Messaging.Support.AbstractMessageBuilder
  parent: Steeltoe.Messaging.Support
  name: AbstractMessageBuilder
  nameWithType: AbstractMessageBuilder
  fullName: Steeltoe.Messaging.Support.AbstractMessageBuilder
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: Steeltoe.Messaging.Support
  commentId: N:Steeltoe.Messaging.Support
  name: Steeltoe.Messaging.Support
  nameWithType: Steeltoe.Messaging.Support
  fullName: Steeltoe.Messaging.Support
- uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetMessageId*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetMessageId
  name: SetMessageId
  nameWithType: MessageBuilderExtensions.SetMessageId
  fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetMessageId
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetUserId*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetUserId
  name: SetUserId
  nameWithType: MessageBuilderExtensions.SetUserId
  fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetUserId
- uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetAppId*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetAppId
  name: SetAppId
  nameWithType: MessageBuilderExtensions.SetAppId
  fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetAppId
- uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetClusterId*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetClusterId
  name: SetClusterId
  nameWithType: MessageBuilderExtensions.SetClusterId
  fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetClusterId
- uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetType*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetType
  name: SetType
  nameWithType: MessageBuilderExtensions.SetType
  fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetType
- uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetCorrelationId*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetCorrelationId
  name: SetCorrelationId
  nameWithType: MessageBuilderExtensions.SetCorrelationId
  fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetCorrelationId
- uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetReplyTo*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetReplyTo
  name: SetReplyTo
  nameWithType: MessageBuilderExtensions.SetReplyTo
  fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetReplyTo
- uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetReplyToAddress*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetReplyToAddress
  name: SetReplyToAddress
  nameWithType: MessageBuilderExtensions.SetReplyToAddress
  fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetReplyToAddress
- uid: Steeltoe.Messaging.RabbitMQ.Core.Address
  commentId: T:Steeltoe.Messaging.RabbitMQ.Core.Address
  parent: Steeltoe.Messaging.RabbitMQ.Core
  name: Address
  nameWithType: Address
  fullName: Steeltoe.Messaging.RabbitMQ.Core.Address
- uid: Steeltoe.Messaging.RabbitMQ.Core
  commentId: N:Steeltoe.Messaging.RabbitMQ.Core
  name: Steeltoe.Messaging.RabbitMQ.Core
  nameWithType: Steeltoe.Messaging.RabbitMQ.Core
  fullName: Steeltoe.Messaging.RabbitMQ.Core
- uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetContentType*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetContentType
  name: SetContentType
  nameWithType: MessageBuilderExtensions.SetContentType
  fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetContentType
- uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetContentEncoding*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetContentEncoding
  name: SetContentEncoding
  nameWithType: MessageBuilderExtensions.SetContentEncoding
  fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetContentEncoding
- uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetContentLength*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetContentLength
  name: SetContentLength
  nameWithType: MessageBuilderExtensions.SetContentLength
  fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetContentLength
- uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetDeliveryMode*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetDeliveryMode
  name: SetDeliveryMode
  nameWithType: MessageBuilderExtensions.SetDeliveryMode
  fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetDeliveryMode
- uid: Steeltoe.Messaging.RabbitMQ.Core.MessageDeliveryMode
  commentId: T:Steeltoe.Messaging.RabbitMQ.Core.MessageDeliveryMode
  parent: Steeltoe.Messaging.RabbitMQ.Core
  name: MessageDeliveryMode
  nameWithType: MessageDeliveryMode
  fullName: Steeltoe.Messaging.RabbitMQ.Core.MessageDeliveryMode
- uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetExpiration*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetExpiration
  name: SetExpiration
  nameWithType: MessageBuilderExtensions.SetExpiration
  fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetExpiration
- uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetPriority*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetPriority
  name: SetPriority
  nameWithType: MessageBuilderExtensions.SetPriority
  fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetPriority
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetReceivedExchange*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetReceivedExchange
  name: SetReceivedExchange
  nameWithType: MessageBuilderExtensions.SetReceivedExchange
  fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetReceivedExchange
- uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetReceivedRoutingKey*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetReceivedRoutingKey
  name: SetReceivedRoutingKey
  nameWithType: MessageBuilderExtensions.SetReceivedRoutingKey
  fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetReceivedRoutingKey
- uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetRedelivered*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetRedelivered
  name: SetRedelivered
  nameWithType: MessageBuilderExtensions.SetRedelivered
  fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetRedelivered
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetDeliveryTag*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetDeliveryTag
  name: SetDeliveryTag
  nameWithType: MessageBuilderExtensions.SetDeliveryTag
  fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetDeliveryTag
- uid: System.UInt64
  commentId: T:System.UInt64
  parent: System
  isExternal: true
  name: UInt64
  nameWithType: UInt64
  fullName: System.UInt64
- uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetMessageCount*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetMessageCount
  name: SetMessageCount
  nameWithType: MessageBuilderExtensions.SetMessageCount
  fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetMessageCount
- uid: System.UInt32
  commentId: T:System.UInt32
  parent: System
  isExternal: true
  name: UInt32
  nameWithType: UInt32
  fullName: System.UInt32
- uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetTimestampIfAbsent*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetTimestampIfAbsent
  name: SetTimestampIfAbsent
  nameWithType: MessageBuilderExtensions.SetTimestampIfAbsent
  fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetTimestampIfAbsent
- uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetMessageIdIfAbsent*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetMessageIdIfAbsent
  name: SetMessageIdIfAbsent
  nameWithType: MessageBuilderExtensions.SetMessageIdIfAbsent
  fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetMessageIdIfAbsent
- uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetUserIdIfAbsent*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetUserIdIfAbsent
  name: SetUserIdIfAbsent
  nameWithType: MessageBuilderExtensions.SetUserIdIfAbsent
  fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetUserIdIfAbsent
- uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetAppIdIfAbsent*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetAppIdIfAbsent
  name: SetAppIdIfAbsent
  nameWithType: MessageBuilderExtensions.SetAppIdIfAbsent
  fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetAppIdIfAbsent
- uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetClusterIdIfAbsent*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetClusterIdIfAbsent
  name: SetClusterIdIfAbsent
  nameWithType: MessageBuilderExtensions.SetClusterIdIfAbsent
  fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetClusterIdIfAbsent
- uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetTypeIfAbsent*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetTypeIfAbsent
  name: SetTypeIfAbsent
  nameWithType: MessageBuilderExtensions.SetTypeIfAbsent
  fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetTypeIfAbsent
- uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetCorrelationIdIfAbsent*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetCorrelationIdIfAbsent
  name: SetCorrelationIdIfAbsent
  nameWithType: MessageBuilderExtensions.SetCorrelationIdIfAbsent
  fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetCorrelationIdIfAbsent
- uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetReplyToIfAbsent*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetReplyToIfAbsent
  name: SetReplyToIfAbsent
  nameWithType: MessageBuilderExtensions.SetReplyToIfAbsent
  fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetReplyToIfAbsent
- uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetReplyToAddressIfAbsent*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetReplyToAddressIfAbsent
  name: SetReplyToAddressIfAbsent
  nameWithType: MessageBuilderExtensions.SetReplyToAddressIfAbsent
  fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetReplyToAddressIfAbsent
- uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetContentTypeIfAbsent*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetContentTypeIfAbsent
  name: SetContentTypeIfAbsent
  nameWithType: MessageBuilderExtensions.SetContentTypeIfAbsent
  fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetContentTypeIfAbsent
- uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetContentEncodingIfAbsent*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetContentEncodingIfAbsent
  name: SetContentEncodingIfAbsent
  nameWithType: MessageBuilderExtensions.SetContentEncodingIfAbsent
  fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetContentEncodingIfAbsent
- uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetContentLengthIfAbsent*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetContentLengthIfAbsent
  name: SetContentLengthIfAbsent
  nameWithType: MessageBuilderExtensions.SetContentLengthIfAbsent
  fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetContentLengthIfAbsent
- uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetDeliveryModeIfAbsent*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetDeliveryModeIfAbsent
  name: SetDeliveryModeIfAbsent
  nameWithType: MessageBuilderExtensions.SetDeliveryModeIfAbsent
  fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetDeliveryModeIfAbsent
- uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetExpirationIfAbsent*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetExpirationIfAbsent
  name: SetExpirationIfAbsent
  nameWithType: MessageBuilderExtensions.SetExpirationIfAbsent
  fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetExpirationIfAbsent
- uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetPriorityIfAbsent*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetPriorityIfAbsent
  name: SetPriorityIfAbsent
  nameWithType: MessageBuilderExtensions.SetPriorityIfAbsent
  fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetPriorityIfAbsent
- uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetReceivedExchangeIfAbsent*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetReceivedExchangeIfAbsent
  name: SetReceivedExchangeIfAbsent
  nameWithType: MessageBuilderExtensions.SetReceivedExchangeIfAbsent
  fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetReceivedExchangeIfAbsent
- uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetReceivedRoutingKeyIfAbsent*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetReceivedRoutingKeyIfAbsent
  name: SetReceivedRoutingKeyIfAbsent
  nameWithType: MessageBuilderExtensions.SetReceivedRoutingKeyIfAbsent
  fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetReceivedRoutingKeyIfAbsent
- uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetRedeliveredIfAbsent*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetRedeliveredIfAbsent
  name: SetRedeliveredIfAbsent
  nameWithType: MessageBuilderExtensions.SetRedeliveredIfAbsent
  fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetRedeliveredIfAbsent
- uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetDeliveryTagIfAbsent*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetDeliveryTagIfAbsent
  name: SetDeliveryTagIfAbsent
  nameWithType: MessageBuilderExtensions.SetDeliveryTagIfAbsent
  fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetDeliveryTagIfAbsent
- uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetMessageCountIfAbsent*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetMessageCountIfAbsent
  name: SetMessageCountIfAbsent
  nameWithType: MessageBuilderExtensions.SetMessageCountIfAbsent
  fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetMessageCountIfAbsent
