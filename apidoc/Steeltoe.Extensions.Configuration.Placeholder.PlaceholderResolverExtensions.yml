### YamlMime:ManagedReference
items:
- uid: Steeltoe.Extensions.Configuration.Placeholder.PlaceholderResolverExtensions
  commentId: T:Steeltoe.Extensions.Configuration.Placeholder.PlaceholderResolverExtensions
  id: PlaceholderResolverExtensions
  parent: Steeltoe.Extensions.Configuration.Placeholder
  children:
  - Steeltoe.Extensions.Configuration.Placeholder.PlaceholderResolverExtensions.AddPlaceholderResolver(Microsoft.AspNetCore.Hosting.IWebHostBuilder,Microsoft.Extensions.Logging.ILoggerFactory)
  - Steeltoe.Extensions.Configuration.Placeholder.PlaceholderResolverExtensions.AddPlaceholderResolver(Microsoft.Extensions.Hosting.IHostBuilder,Microsoft.Extensions.Logging.ILoggerFactory)
  - Steeltoe.Extensions.Configuration.Placeholder.PlaceholderResolverExtensions.ConfigurePlaceholderResolver(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.Extensions.Configuration.IConfiguration,Microsoft.Extensions.Logging.ILoggerFactory)
  langs:
  - csharp
  - vb
  name: PlaceholderResolverExtensions
  nameWithType: PlaceholderResolverExtensions
  fullName: Steeltoe.Extensions.Configuration.Placeholder.PlaceholderResolverExtensions
  type: Class
  source:
    remote:
      path: src/Configuration/src/PlaceholderCore/PlaceholderResolverExtensions.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: PlaceholderResolverExtensions
    path: ../Steeltoe/src/Configuration/src/PlaceholderCore/PlaceholderResolverExtensions.cs
    startLine: 14
  assemblies:
  - Steeltoe.Extensions.Configuration.PlaceholderCore
  namespace: Steeltoe.Extensions.Configuration.Placeholder
  syntax:
    content: public static class PlaceholderResolverExtensions
    content.vb: Public Module PlaceholderResolverExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Steeltoe.Extensions.Configuration.Placeholder.PlaceholderResolverExtensions.ConfigurePlaceholderResolver(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.Extensions.Configuration.IConfiguration,Microsoft.Extensions.Logging.ILoggerFactory)
  commentId: M:Steeltoe.Extensions.Configuration.Placeholder.PlaceholderResolverExtensions.ConfigurePlaceholderResolver(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.Extensions.Configuration.IConfiguration,Microsoft.Extensions.Logging.ILoggerFactory)
  id: ConfigurePlaceholderResolver(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.Extensions.Configuration.IConfiguration,Microsoft.Extensions.Logging.ILoggerFactory)
  isExtensionMethod: true
  parent: Steeltoe.Extensions.Configuration.Placeholder.PlaceholderResolverExtensions
  langs:
  - csharp
  - vb
  name: ConfigurePlaceholderResolver(IServiceCollection, IConfiguration, ILoggerFactory)
  nameWithType: PlaceholderResolverExtensions.ConfigurePlaceholderResolver(IServiceCollection, IConfiguration, ILoggerFactory)
  fullName: Steeltoe.Extensions.Configuration.Placeholder.PlaceholderResolverExtensions.ConfigurePlaceholderResolver(Microsoft.Extensions.DependencyInjection.IServiceCollection, Microsoft.Extensions.Configuration.IConfiguration, Microsoft.Extensions.Logging.ILoggerFactory)
  type: Method
  source:
    remote:
      path: src/Configuration/src/PlaceholderCore/PlaceholderResolverExtensions.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: ConfigurePlaceholderResolver
    path: ../Steeltoe/src/Configuration/src/PlaceholderCore/PlaceholderResolverExtensions.cs
    startLine: 25
  assemblies:
  - Steeltoe.Extensions.Configuration.PlaceholderCore
  namespace: Steeltoe.Extensions.Configuration.Placeholder
  summary: "\nCreate a new <xref href=\"Microsoft.Extensions.Configuration.IConfiguration\" data-throw-if-not-resolved=\"false\"></xref> using a <xref href=\"Steeltoe.Extensions.Configuration.Placeholder.PlaceholderResolverProvider\" data-throw-if-not-resolved=\"false\"></xref> which wraps the provided <xref href=\"Microsoft.Extensions.Configuration.IConfiguration\" data-throw-if-not-resolved=\"false\"></xref>.\nThe new configuration will then be used to replace the current <xref href=\"Microsoft.Extensions.Configuration.IConfiguration\" data-throw-if-not-resolved=\"false\"></xref> in the service container. All subsequent requests for a\n<xref href=\"Microsoft.Extensions.Configuration.IConfiguration\" data-throw-if-not-resolved=\"false\"></xref> will return the newly created one providing placeholder resolution.\n"
  example: []
  syntax:
    content: public static IConfiguration ConfigurePlaceholderResolver(this IServiceCollection services, IConfiguration configuration, ILoggerFactory loggerFactory = null)
    parameters:
    - id: services
      type: Microsoft.Extensions.DependencyInjection.IServiceCollection
      description: the current service container
    - id: configuration
      type: Microsoft.Extensions.Configuration.IConfiguration
      description: the configuration the placeholder resolver will wrap
    - id: loggerFactory
      type: Microsoft.Extensions.Logging.ILoggerFactory
      description: the log factory to use
    return:
      type: Microsoft.Extensions.Configuration.IConfiguration
      description: the new configuration
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ConfigurePlaceholderResolver(services As IServiceCollection, configuration As IConfiguration, loggerFactory As ILoggerFactory = Nothing) As IConfiguration
  overload: Steeltoe.Extensions.Configuration.Placeholder.PlaceholderResolverExtensions.ConfigurePlaceholderResolver*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Steeltoe.Extensions.Configuration.Placeholder.PlaceholderResolverExtensions.AddPlaceholderResolver(Microsoft.AspNetCore.Hosting.IWebHostBuilder,Microsoft.Extensions.Logging.ILoggerFactory)
  commentId: M:Steeltoe.Extensions.Configuration.Placeholder.PlaceholderResolverExtensions.AddPlaceholderResolver(Microsoft.AspNetCore.Hosting.IWebHostBuilder,Microsoft.Extensions.Logging.ILoggerFactory)
  id: AddPlaceholderResolver(Microsoft.AspNetCore.Hosting.IWebHostBuilder,Microsoft.Extensions.Logging.ILoggerFactory)
  isExtensionMethod: true
  parent: Steeltoe.Extensions.Configuration.Placeholder.PlaceholderResolverExtensions
  langs:
  - csharp
  - vb
  name: AddPlaceholderResolver(IWebHostBuilder, ILoggerFactory)
  nameWithType: PlaceholderResolverExtensions.AddPlaceholderResolver(IWebHostBuilder, ILoggerFactory)
  fullName: Steeltoe.Extensions.Configuration.Placeholder.PlaceholderResolverExtensions.AddPlaceholderResolver(Microsoft.AspNetCore.Hosting.IWebHostBuilder, Microsoft.Extensions.Logging.ILoggerFactory)
  type: Method
  source:
    remote:
      path: src/Configuration/src/PlaceholderCore/PlaceholderResolverExtensions.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: AddPlaceholderResolver
    path: ../Steeltoe/src/Configuration/src/PlaceholderCore/PlaceholderResolverExtensions.cs
    startLine: 48
  assemblies:
  - Steeltoe.Extensions.Configuration.PlaceholderCore
  namespace: Steeltoe.Extensions.Configuration.Placeholder
  summary: "\nAdd a placeholder resolver configuration source to the <xref href=\"Microsoft.Extensions.Configuration.ConfigurationBuilder\" data-throw-if-not-resolved=\"false\"></xref>. The placeholder resolver source will capture and wrap all\nthe existing sources <xref href=\"Microsoft.Extensions.Configuration.IConfigurationSource\" data-throw-if-not-resolved=\"false\"></xref> contained in the builder.  The newly created source will then replace the existing sources\nand provide placeholder resolution for the configuration. Typically you will want to add this configuration source as the last one so that you wrap all\nof the applications configuration sources with place holder resolution.\n"
  example: []
  syntax:
    content: public static IWebHostBuilder AddPlaceholderResolver(this IWebHostBuilder hostBuilder, ILoggerFactory loggerFactory = null)
    parameters:
    - id: hostBuilder
      type: Microsoft.AspNetCore.Hosting.IWebHostBuilder
      description: the host builder
    - id: loggerFactory
      type: Microsoft.Extensions.Logging.ILoggerFactory
      description: the log factory to use
    return:
      type: Microsoft.AspNetCore.Hosting.IWebHostBuilder
      description: provided host builder
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function AddPlaceholderResolver(hostBuilder As IWebHostBuilder, loggerFactory As ILoggerFactory = Nothing) As IWebHostBuilder
  overload: Steeltoe.Extensions.Configuration.Placeholder.PlaceholderResolverExtensions.AddPlaceholderResolver*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Steeltoe.Extensions.Configuration.Placeholder.PlaceholderResolverExtensions.AddPlaceholderResolver(Microsoft.Extensions.Hosting.IHostBuilder,Microsoft.Extensions.Logging.ILoggerFactory)
  commentId: M:Steeltoe.Extensions.Configuration.Placeholder.PlaceholderResolverExtensions.AddPlaceholderResolver(Microsoft.Extensions.Hosting.IHostBuilder,Microsoft.Extensions.Logging.ILoggerFactory)
  id: AddPlaceholderResolver(Microsoft.Extensions.Hosting.IHostBuilder,Microsoft.Extensions.Logging.ILoggerFactory)
  isExtensionMethod: true
  parent: Steeltoe.Extensions.Configuration.Placeholder.PlaceholderResolverExtensions
  langs:
  - csharp
  - vb
  name: AddPlaceholderResolver(IHostBuilder, ILoggerFactory)
  nameWithType: PlaceholderResolverExtensions.AddPlaceholderResolver(IHostBuilder, ILoggerFactory)
  fullName: Steeltoe.Extensions.Configuration.Placeholder.PlaceholderResolverExtensions.AddPlaceholderResolver(Microsoft.Extensions.Hosting.IHostBuilder, Microsoft.Extensions.Logging.ILoggerFactory)
  type: Method
  source:
    remote:
      path: src/Configuration/src/PlaceholderCore/PlaceholderResolverExtensions.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: AddPlaceholderResolver
    path: ../Steeltoe/src/Configuration/src/PlaceholderCore/PlaceholderResolverExtensions.cs
    startLine: 66
  assemblies:
  - Steeltoe.Extensions.Configuration.PlaceholderCore
  namespace: Steeltoe.Extensions.Configuration.Placeholder
  summary: "\nAdd a placeholder resolver configuration source to the <xref href=\"Microsoft.Extensions.Configuration.ConfigurationBuilder\" data-throw-if-not-resolved=\"false\"></xref>. The placeholder resolver source will capture and wrap all\nthe existing sources <xref href=\"Microsoft.Extensions.Configuration.IConfigurationSource\" data-throw-if-not-resolved=\"false\"></xref> contained in the builder.  The newly created source will then replace the existing sources\nand provide placeholder resolution for the configuration. Typically you will want to add this configuration source as the last one so that you wrap all\nof the applications configuration sources with place holder resolution.\n"
  example: []
  syntax:
    content: public static IHostBuilder AddPlaceholderResolver(this IHostBuilder hostBuilder, ILoggerFactory loggerFactory = null)
    parameters:
    - id: hostBuilder
      type: Microsoft.Extensions.Hosting.IHostBuilder
      description: the host builder
    - id: loggerFactory
      type: Microsoft.Extensions.Logging.ILoggerFactory
      description: the log factory to use
    return:
      type: Microsoft.Extensions.Hosting.IHostBuilder
      description: provided host builder
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function AddPlaceholderResolver(hostBuilder As IHostBuilder, loggerFactory As ILoggerFactory = Nothing) As IHostBuilder
  overload: Steeltoe.Extensions.Configuration.Placeholder.PlaceholderResolverExtensions.AddPlaceholderResolver*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Steeltoe.Extensions.Configuration.Placeholder
  commentId: N:Steeltoe.Extensions.Configuration.Placeholder
  name: Steeltoe.Extensions.Configuration.Placeholder
  nameWithType: Steeltoe.Extensions.Configuration.Placeholder
  fullName: Steeltoe.Extensions.Configuration.Placeholder
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Extensions.Configuration.IConfiguration
  commentId: T:Microsoft.Extensions.Configuration.IConfiguration
  parent: Microsoft.Extensions.Configuration
  isExternal: true
  name: IConfiguration
  nameWithType: IConfiguration
  fullName: Microsoft.Extensions.Configuration.IConfiguration
- uid: Steeltoe.Extensions.Configuration.Placeholder.PlaceholderResolverProvider
  commentId: T:Steeltoe.Extensions.Configuration.Placeholder.PlaceholderResolverProvider
  name: PlaceholderResolverProvider
  nameWithType: PlaceholderResolverProvider
  fullName: Steeltoe.Extensions.Configuration.Placeholder.PlaceholderResolverProvider
- uid: Steeltoe.Extensions.Configuration.Placeholder.PlaceholderResolverExtensions.ConfigurePlaceholderResolver*
  commentId: Overload:Steeltoe.Extensions.Configuration.Placeholder.PlaceholderResolverExtensions.ConfigurePlaceholderResolver
  name: ConfigurePlaceholderResolver
  nameWithType: PlaceholderResolverExtensions.ConfigurePlaceholderResolver
  fullName: Steeltoe.Extensions.Configuration.Placeholder.PlaceholderResolverExtensions.ConfigurePlaceholderResolver
- uid: Microsoft.Extensions.DependencyInjection.IServiceCollection
  commentId: T:Microsoft.Extensions.DependencyInjection.IServiceCollection
  parent: Microsoft.Extensions.DependencyInjection
  isExternal: true
  name: IServiceCollection
  nameWithType: IServiceCollection
  fullName: Microsoft.Extensions.DependencyInjection.IServiceCollection
- uid: Microsoft.Extensions.Logging.ILoggerFactory
  commentId: T:Microsoft.Extensions.Logging.ILoggerFactory
  parent: Microsoft.Extensions.Logging
  isExternal: true
  name: ILoggerFactory
  nameWithType: ILoggerFactory
  fullName: Microsoft.Extensions.Logging.ILoggerFactory
- uid: Microsoft.Extensions.Configuration
  commentId: N:Microsoft.Extensions.Configuration
  isExternal: true
  name: Microsoft.Extensions.Configuration
  nameWithType: Microsoft.Extensions.Configuration
  fullName: Microsoft.Extensions.Configuration
- uid: Microsoft.Extensions.DependencyInjection
  commentId: N:Microsoft.Extensions.DependencyInjection
  name: Microsoft.Extensions.DependencyInjection
  nameWithType: Microsoft.Extensions.DependencyInjection
  fullName: Microsoft.Extensions.DependencyInjection
- uid: Microsoft.Extensions.Logging
  commentId: N:Microsoft.Extensions.Logging
  isExternal: true
  name: Microsoft.Extensions.Logging
  nameWithType: Microsoft.Extensions.Logging
  fullName: Microsoft.Extensions.Logging
- uid: Microsoft.Extensions.Configuration.ConfigurationBuilder
  commentId: T:Microsoft.Extensions.Configuration.ConfigurationBuilder
  isExternal: true
- uid: Microsoft.Extensions.Configuration.IConfigurationSource
  commentId: T:Microsoft.Extensions.Configuration.IConfigurationSource
  isExternal: true
- uid: Steeltoe.Extensions.Configuration.Placeholder.PlaceholderResolverExtensions.AddPlaceholderResolver*
  commentId: Overload:Steeltoe.Extensions.Configuration.Placeholder.PlaceholderResolverExtensions.AddPlaceholderResolver
  name: AddPlaceholderResolver
  nameWithType: PlaceholderResolverExtensions.AddPlaceholderResolver
  fullName: Steeltoe.Extensions.Configuration.Placeholder.PlaceholderResolverExtensions.AddPlaceholderResolver
- uid: Microsoft.AspNetCore.Hosting.IWebHostBuilder
  commentId: T:Microsoft.AspNetCore.Hosting.IWebHostBuilder
  parent: Microsoft.AspNetCore.Hosting
  isExternal: true
  name: IWebHostBuilder
  nameWithType: IWebHostBuilder
  fullName: Microsoft.AspNetCore.Hosting.IWebHostBuilder
- uid: Microsoft.AspNetCore.Hosting
  commentId: N:Microsoft.AspNetCore.Hosting
  isExternal: true
  name: Microsoft.AspNetCore.Hosting
  nameWithType: Microsoft.AspNetCore.Hosting
  fullName: Microsoft.AspNetCore.Hosting
- uid: Microsoft.Extensions.Hosting.IHostBuilder
  commentId: T:Microsoft.Extensions.Hosting.IHostBuilder
  parent: Microsoft.Extensions.Hosting
  isExternal: true
  name: IHostBuilder
  nameWithType: IHostBuilder
  fullName: Microsoft.Extensions.Hosting.IHostBuilder
- uid: Microsoft.Extensions.Hosting
  commentId: N:Microsoft.Extensions.Hosting
  isExternal: true
  name: Microsoft.Extensions.Hosting
  nameWithType: Microsoft.Extensions.Hosting
  fullName: Microsoft.Extensions.Hosting
