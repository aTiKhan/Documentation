### YamlMime:ManagedReference
items:
- uid: Steeltoe.Messaging.RabbitMQ.Config.QueueBuilder
  commentId: T:Steeltoe.Messaging.RabbitMQ.Config.QueueBuilder
  id: QueueBuilder
  parent: Steeltoe.Messaging.RabbitMQ.Config
  children:
  - Steeltoe.Messaging.RabbitMQ.Config.QueueBuilder.AutoDelete
  - Steeltoe.Messaging.RabbitMQ.Config.QueueBuilder.Build
  - Steeltoe.Messaging.RabbitMQ.Config.QueueBuilder.DeadLetterExchange(System.String)
  - Steeltoe.Messaging.RabbitMQ.Config.QueueBuilder.DeadLetterRoutingKey(System.String)
  - Steeltoe.Messaging.RabbitMQ.Config.QueueBuilder.DeliveryLimit(System.Int32)
  - Steeltoe.Messaging.RabbitMQ.Config.QueueBuilder.Durable
  - Steeltoe.Messaging.RabbitMQ.Config.QueueBuilder.Durable(System.String)
  - Steeltoe.Messaging.RabbitMQ.Config.QueueBuilder.Exclusive
  - Steeltoe.Messaging.RabbitMQ.Config.QueueBuilder.Expires(System.Int32)
  - Steeltoe.Messaging.RabbitMQ.Config.QueueBuilder.Lazy
  - Steeltoe.Messaging.RabbitMQ.Config.QueueBuilder.Masterlocator(Steeltoe.Messaging.RabbitMQ.Config.QueueBuilder.MasterLocator)
  - Steeltoe.Messaging.RabbitMQ.Config.QueueBuilder.MaxLength(System.Int32)
  - Steeltoe.Messaging.RabbitMQ.Config.QueueBuilder.MaxLengthBytes(System.Int32)
  - Steeltoe.Messaging.RabbitMQ.Config.QueueBuilder.MaxPriority(System.Int32)
  - Steeltoe.Messaging.RabbitMQ.Config.QueueBuilder.NonDurable
  - Steeltoe.Messaging.RabbitMQ.Config.QueueBuilder.NonDurable(System.String)
  - Steeltoe.Messaging.RabbitMQ.Config.QueueBuilder.Overflow(Steeltoe.Messaging.RabbitMQ.Config.QueueBuilder.OverFlow)
  - Steeltoe.Messaging.RabbitMQ.Config.QueueBuilder.Quorum
  - Steeltoe.Messaging.RabbitMQ.Config.QueueBuilder.SingleActiveConsumer
  - Steeltoe.Messaging.RabbitMQ.Config.QueueBuilder.TTL(System.Int32)
  - Steeltoe.Messaging.RabbitMQ.Config.QueueBuilder.WithArgument(System.String,System.Object)
  - Steeltoe.Messaging.RabbitMQ.Config.QueueBuilder.WithArguments(System.Collections.Generic.Dictionary{System.String,System.Object})
  langs:
  - csharp
  - vb
  name: QueueBuilder
  nameWithType: QueueBuilder
  fullName: Steeltoe.Messaging.RabbitMQ.Config.QueueBuilder
  type: Class
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Config/QueueBuilder.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: QueueBuilder
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Config/QueueBuilder.cs
    startLine: 9
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Config
  syntax:
    content: 'public class QueueBuilder : AbstractBuilder'
    content.vb: >-
      Public Class QueueBuilder

          Inherits AbstractBuilder
  inheritance:
  - System.Object
  - Steeltoe.Messaging.RabbitMQ.Config.AbstractBuilder
  inheritedMembers:
  - Steeltoe.Messaging.RabbitMQ.Config.AbstractBuilder.GetOrCreateArguments
  - Steeltoe.Messaging.RabbitMQ.Config.AbstractBuilder.Arguments
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Steeltoe.Messaging.RabbitMQ.Config.QueueBuilder.Durable
  commentId: M:Steeltoe.Messaging.RabbitMQ.Config.QueueBuilder.Durable
  id: Durable
  parent: Steeltoe.Messaging.RabbitMQ.Config.QueueBuilder
  langs:
  - csharp
  - vb
  name: Durable()
  nameWithType: QueueBuilder.Durable()
  fullName: Steeltoe.Messaging.RabbitMQ.Config.QueueBuilder.Durable()
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Config/QueueBuilder.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Durable
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Config/QueueBuilder.cs
    startLine: 47
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Config
  syntax:
    content: public static QueueBuilder Durable()
    return:
      type: Steeltoe.Messaging.RabbitMQ.Config.QueueBuilder
    content.vb: Public Shared Function Durable As QueueBuilder
  overload: Steeltoe.Messaging.RabbitMQ.Config.QueueBuilder.Durable*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Steeltoe.Messaging.RabbitMQ.Config.QueueBuilder.Durable(System.String)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Config.QueueBuilder.Durable(System.String)
  id: Durable(System.String)
  parent: Steeltoe.Messaging.RabbitMQ.Config.QueueBuilder
  langs:
  - csharp
  - vb
  name: Durable(String)
  nameWithType: QueueBuilder.Durable(String)
  fullName: Steeltoe.Messaging.RabbitMQ.Config.QueueBuilder.Durable(System.String)
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Config/QueueBuilder.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Durable
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Config/QueueBuilder.cs
    startLine: 52
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Config
  syntax:
    content: public static QueueBuilder Durable(string name)
    parameters:
    - id: name
      type: System.String
    return:
      type: Steeltoe.Messaging.RabbitMQ.Config.QueueBuilder
    content.vb: Public Shared Function Durable(name As String) As QueueBuilder
  overload: Steeltoe.Messaging.RabbitMQ.Config.QueueBuilder.Durable*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Steeltoe.Messaging.RabbitMQ.Config.QueueBuilder.NonDurable
  commentId: M:Steeltoe.Messaging.RabbitMQ.Config.QueueBuilder.NonDurable
  id: NonDurable
  parent: Steeltoe.Messaging.RabbitMQ.Config.QueueBuilder
  langs:
  - csharp
  - vb
  name: NonDurable()
  nameWithType: QueueBuilder.NonDurable()
  fullName: Steeltoe.Messaging.RabbitMQ.Config.QueueBuilder.NonDurable()
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Config/QueueBuilder.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: NonDurable
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Config/QueueBuilder.cs
    startLine: 59
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Config
  syntax:
    content: public static QueueBuilder NonDurable()
    return:
      type: Steeltoe.Messaging.RabbitMQ.Config.QueueBuilder
    content.vb: Public Shared Function NonDurable As QueueBuilder
  overload: Steeltoe.Messaging.RabbitMQ.Config.QueueBuilder.NonDurable*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Steeltoe.Messaging.RabbitMQ.Config.QueueBuilder.NonDurable(System.String)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Config.QueueBuilder.NonDurable(System.String)
  id: NonDurable(System.String)
  parent: Steeltoe.Messaging.RabbitMQ.Config.QueueBuilder
  langs:
  - csharp
  - vb
  name: NonDurable(String)
  nameWithType: QueueBuilder.NonDurable(String)
  fullName: Steeltoe.Messaging.RabbitMQ.Config.QueueBuilder.NonDurable(System.String)
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Config/QueueBuilder.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: NonDurable
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Config/QueueBuilder.cs
    startLine: 64
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Config
  syntax:
    content: public static QueueBuilder NonDurable(string name)
    parameters:
    - id: name
      type: System.String
    return:
      type: Steeltoe.Messaging.RabbitMQ.Config.QueueBuilder
    content.vb: Public Shared Function NonDurable(name As String) As QueueBuilder
  overload: Steeltoe.Messaging.RabbitMQ.Config.QueueBuilder.NonDurable*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Steeltoe.Messaging.RabbitMQ.Config.QueueBuilder.Exclusive
  commentId: M:Steeltoe.Messaging.RabbitMQ.Config.QueueBuilder.Exclusive
  id: Exclusive
  parent: Steeltoe.Messaging.RabbitMQ.Config.QueueBuilder
  langs:
  - csharp
  - vb
  name: Exclusive()
  nameWithType: QueueBuilder.Exclusive()
  fullName: Steeltoe.Messaging.RabbitMQ.Config.QueueBuilder.Exclusive()
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Config/QueueBuilder.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Exclusive
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Config/QueueBuilder.cs
    startLine: 74
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Config
  syntax:
    content: public QueueBuilder Exclusive()
    return:
      type: Steeltoe.Messaging.RabbitMQ.Config.QueueBuilder
    content.vb: Public Function Exclusive As QueueBuilder
  overload: Steeltoe.Messaging.RabbitMQ.Config.QueueBuilder.Exclusive*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Steeltoe.Messaging.RabbitMQ.Config.QueueBuilder.AutoDelete
  commentId: M:Steeltoe.Messaging.RabbitMQ.Config.QueueBuilder.AutoDelete
  id: AutoDelete
  parent: Steeltoe.Messaging.RabbitMQ.Config.QueueBuilder
  langs:
  - csharp
  - vb
  name: AutoDelete()
  nameWithType: QueueBuilder.AutoDelete()
  fullName: Steeltoe.Messaging.RabbitMQ.Config.QueueBuilder.AutoDelete()
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Config/QueueBuilder.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: AutoDelete
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Config/QueueBuilder.cs
    startLine: 80
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Config
  syntax:
    content: public QueueBuilder AutoDelete()
    return:
      type: Steeltoe.Messaging.RabbitMQ.Config.QueueBuilder
    content.vb: Public Function AutoDelete As QueueBuilder
  overload: Steeltoe.Messaging.RabbitMQ.Config.QueueBuilder.AutoDelete*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Steeltoe.Messaging.RabbitMQ.Config.QueueBuilder.WithArgument(System.String,System.Object)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Config.QueueBuilder.WithArgument(System.String,System.Object)
  id: WithArgument(System.String,System.Object)
  parent: Steeltoe.Messaging.RabbitMQ.Config.QueueBuilder
  langs:
  - csharp
  - vb
  name: WithArgument(String, Object)
  nameWithType: QueueBuilder.WithArgument(String, Object)
  fullName: Steeltoe.Messaging.RabbitMQ.Config.QueueBuilder.WithArgument(System.String, System.Object)
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Config/QueueBuilder.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: WithArgument
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Config/QueueBuilder.cs
    startLine: 86
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Config
  syntax:
    content: public QueueBuilder WithArgument(string key, object value)
    parameters:
    - id: key
      type: System.String
    - id: value
      type: System.Object
    return:
      type: Steeltoe.Messaging.RabbitMQ.Config.QueueBuilder
    content.vb: Public Function WithArgument(key As String, value As Object) As QueueBuilder
  overload: Steeltoe.Messaging.RabbitMQ.Config.QueueBuilder.WithArgument*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Steeltoe.Messaging.RabbitMQ.Config.QueueBuilder.WithArguments(System.Collections.Generic.Dictionary{System.String,System.Object})
  commentId: M:Steeltoe.Messaging.RabbitMQ.Config.QueueBuilder.WithArguments(System.Collections.Generic.Dictionary{System.String,System.Object})
  id: WithArguments(System.Collections.Generic.Dictionary{System.String,System.Object})
  parent: Steeltoe.Messaging.RabbitMQ.Config.QueueBuilder
  langs:
  - csharp
  - vb
  name: WithArguments(Dictionary<String, Object>)
  nameWithType: QueueBuilder.WithArguments(Dictionary<String, Object>)
  fullName: Steeltoe.Messaging.RabbitMQ.Config.QueueBuilder.WithArguments(System.Collections.Generic.Dictionary<System.String, System.Object>)
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Config/QueueBuilder.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: WithArguments
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Config/QueueBuilder.cs
    startLine: 92
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Config
  syntax:
    content: public QueueBuilder WithArguments(Dictionary<string, object> arguments)
    parameters:
    - id: arguments
      type: System.Collections.Generic.Dictionary{System.String,System.Object}
    return:
      type: Steeltoe.Messaging.RabbitMQ.Config.QueueBuilder
    content.vb: Public Function WithArguments(arguments As Dictionary(Of String, Object)) As QueueBuilder
  overload: Steeltoe.Messaging.RabbitMQ.Config.QueueBuilder.WithArguments*
  nameWithType.vb: QueueBuilder.WithArguments(Dictionary(Of String, Object))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Steeltoe.Messaging.RabbitMQ.Config.QueueBuilder.WithArguments(System.Collections.Generic.Dictionary(Of System.String, System.Object))
  name.vb: WithArguments(Dictionary(Of String, Object))
- uid: Steeltoe.Messaging.RabbitMQ.Config.QueueBuilder.TTL(System.Int32)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Config.QueueBuilder.TTL(System.Int32)
  id: TTL(System.Int32)
  parent: Steeltoe.Messaging.RabbitMQ.Config.QueueBuilder
  langs:
  - csharp
  - vb
  name: TTL(Int32)
  nameWithType: QueueBuilder.TTL(Int32)
  fullName: Steeltoe.Messaging.RabbitMQ.Config.QueueBuilder.TTL(System.Int32)
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Config/QueueBuilder.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: TTL
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Config/QueueBuilder.cs
    startLine: 103
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Config
  syntax:
    content: public QueueBuilder TTL(int ttl)
    parameters:
    - id: ttl
      type: System.Int32
    return:
      type: Steeltoe.Messaging.RabbitMQ.Config.QueueBuilder
    content.vb: Public Function TTL(ttl As Integer) As QueueBuilder
  overload: Steeltoe.Messaging.RabbitMQ.Config.QueueBuilder.TTL*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Steeltoe.Messaging.RabbitMQ.Config.QueueBuilder.Expires(System.Int32)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Config.QueueBuilder.Expires(System.Int32)
  id: Expires(System.Int32)
  parent: Steeltoe.Messaging.RabbitMQ.Config.QueueBuilder
  langs:
  - csharp
  - vb
  name: Expires(Int32)
  nameWithType: QueueBuilder.Expires(Int32)
  fullName: Steeltoe.Messaging.RabbitMQ.Config.QueueBuilder.Expires(System.Int32)
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Config/QueueBuilder.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Expires
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Config/QueueBuilder.cs
    startLine: 108
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Config
  syntax:
    content: public QueueBuilder Expires(int expires)
    parameters:
    - id: expires
      type: System.Int32
    return:
      type: Steeltoe.Messaging.RabbitMQ.Config.QueueBuilder
    content.vb: Public Function Expires(expires As Integer) As QueueBuilder
  overload: Steeltoe.Messaging.RabbitMQ.Config.QueueBuilder.Expires*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Steeltoe.Messaging.RabbitMQ.Config.QueueBuilder.MaxLength(System.Int32)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Config.QueueBuilder.MaxLength(System.Int32)
  id: MaxLength(System.Int32)
  parent: Steeltoe.Messaging.RabbitMQ.Config.QueueBuilder
  langs:
  - csharp
  - vb
  name: MaxLength(Int32)
  nameWithType: QueueBuilder.MaxLength(Int32)
  fullName: Steeltoe.Messaging.RabbitMQ.Config.QueueBuilder.MaxLength(System.Int32)
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Config/QueueBuilder.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: MaxLength
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Config/QueueBuilder.cs
    startLine: 113
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Config
  syntax:
    content: public QueueBuilder MaxLength(int count)
    parameters:
    - id: count
      type: System.Int32
    return:
      type: Steeltoe.Messaging.RabbitMQ.Config.QueueBuilder
    content.vb: Public Function MaxLength(count As Integer) As QueueBuilder
  overload: Steeltoe.Messaging.RabbitMQ.Config.QueueBuilder.MaxLength*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Steeltoe.Messaging.RabbitMQ.Config.QueueBuilder.MaxLengthBytes(System.Int32)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Config.QueueBuilder.MaxLengthBytes(System.Int32)
  id: MaxLengthBytes(System.Int32)
  parent: Steeltoe.Messaging.RabbitMQ.Config.QueueBuilder
  langs:
  - csharp
  - vb
  name: MaxLengthBytes(Int32)
  nameWithType: QueueBuilder.MaxLengthBytes(Int32)
  fullName: Steeltoe.Messaging.RabbitMQ.Config.QueueBuilder.MaxLengthBytes(System.Int32)
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Config/QueueBuilder.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: MaxLengthBytes
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Config/QueueBuilder.cs
    startLine: 118
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Config
  syntax:
    content: public QueueBuilder MaxLengthBytes(int bytes)
    parameters:
    - id: bytes
      type: System.Int32
    return:
      type: Steeltoe.Messaging.RabbitMQ.Config.QueueBuilder
    content.vb: Public Function MaxLengthBytes(bytes As Integer) As QueueBuilder
  overload: Steeltoe.Messaging.RabbitMQ.Config.QueueBuilder.MaxLengthBytes*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Steeltoe.Messaging.RabbitMQ.Config.QueueBuilder.Overflow(Steeltoe.Messaging.RabbitMQ.Config.QueueBuilder.OverFlow)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Config.QueueBuilder.Overflow(Steeltoe.Messaging.RabbitMQ.Config.QueueBuilder.OverFlow)
  id: Overflow(Steeltoe.Messaging.RabbitMQ.Config.QueueBuilder.OverFlow)
  parent: Steeltoe.Messaging.RabbitMQ.Config.QueueBuilder
  langs:
  - csharp
  - vb
  name: Overflow(QueueBuilder.OverFlow)
  nameWithType: QueueBuilder.Overflow(QueueBuilder.OverFlow)
  fullName: Steeltoe.Messaging.RabbitMQ.Config.QueueBuilder.Overflow(Steeltoe.Messaging.RabbitMQ.Config.QueueBuilder.OverFlow)
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Config/QueueBuilder.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Overflow
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Config/QueueBuilder.cs
    startLine: 123
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Config
  syntax:
    content: public QueueBuilder Overflow(QueueBuilder.OverFlow overflow)
    parameters:
    - id: overflow
      type: Steeltoe.Messaging.RabbitMQ.Config.QueueBuilder.OverFlow
    return:
      type: Steeltoe.Messaging.RabbitMQ.Config.QueueBuilder
    content.vb: Public Function Overflow(overflow As QueueBuilder.OverFlow) As QueueBuilder
  overload: Steeltoe.Messaging.RabbitMQ.Config.QueueBuilder.Overflow*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Steeltoe.Messaging.RabbitMQ.Config.QueueBuilder.DeadLetterExchange(System.String)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Config.QueueBuilder.DeadLetterExchange(System.String)
  id: DeadLetterExchange(System.String)
  parent: Steeltoe.Messaging.RabbitMQ.Config.QueueBuilder
  langs:
  - csharp
  - vb
  name: DeadLetterExchange(String)
  nameWithType: QueueBuilder.DeadLetterExchange(String)
  fullName: Steeltoe.Messaging.RabbitMQ.Config.QueueBuilder.DeadLetterExchange(System.String)
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Config/QueueBuilder.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: DeadLetterExchange
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Config/QueueBuilder.cs
    startLine: 128
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Config
  syntax:
    content: public QueueBuilder DeadLetterExchange(string dlx)
    parameters:
    - id: dlx
      type: System.String
    return:
      type: Steeltoe.Messaging.RabbitMQ.Config.QueueBuilder
    content.vb: Public Function DeadLetterExchange(dlx As String) As QueueBuilder
  overload: Steeltoe.Messaging.RabbitMQ.Config.QueueBuilder.DeadLetterExchange*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Steeltoe.Messaging.RabbitMQ.Config.QueueBuilder.DeadLetterRoutingKey(System.String)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Config.QueueBuilder.DeadLetterRoutingKey(System.String)
  id: DeadLetterRoutingKey(System.String)
  parent: Steeltoe.Messaging.RabbitMQ.Config.QueueBuilder
  langs:
  - csharp
  - vb
  name: DeadLetterRoutingKey(String)
  nameWithType: QueueBuilder.DeadLetterRoutingKey(String)
  fullName: Steeltoe.Messaging.RabbitMQ.Config.QueueBuilder.DeadLetterRoutingKey(System.String)
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Config/QueueBuilder.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: DeadLetterRoutingKey
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Config/QueueBuilder.cs
    startLine: 133
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Config
  syntax:
    content: public QueueBuilder DeadLetterRoutingKey(string dlrk)
    parameters:
    - id: dlrk
      type: System.String
    return:
      type: Steeltoe.Messaging.RabbitMQ.Config.QueueBuilder
    content.vb: Public Function DeadLetterRoutingKey(dlrk As String) As QueueBuilder
  overload: Steeltoe.Messaging.RabbitMQ.Config.QueueBuilder.DeadLetterRoutingKey*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Steeltoe.Messaging.RabbitMQ.Config.QueueBuilder.MaxPriority(System.Int32)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Config.QueueBuilder.MaxPriority(System.Int32)
  id: MaxPriority(System.Int32)
  parent: Steeltoe.Messaging.RabbitMQ.Config.QueueBuilder
  langs:
  - csharp
  - vb
  name: MaxPriority(Int32)
  nameWithType: QueueBuilder.MaxPriority(Int32)
  fullName: Steeltoe.Messaging.RabbitMQ.Config.QueueBuilder.MaxPriority(System.Int32)
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Config/QueueBuilder.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: MaxPriority
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Config/QueueBuilder.cs
    startLine: 138
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Config
  syntax:
    content: public QueueBuilder MaxPriority(int maxPriority)
    parameters:
    - id: maxPriority
      type: System.Int32
    return:
      type: Steeltoe.Messaging.RabbitMQ.Config.QueueBuilder
    content.vb: Public Function MaxPriority(maxPriority As Integer) As QueueBuilder
  overload: Steeltoe.Messaging.RabbitMQ.Config.QueueBuilder.MaxPriority*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Steeltoe.Messaging.RabbitMQ.Config.QueueBuilder.Lazy
  commentId: M:Steeltoe.Messaging.RabbitMQ.Config.QueueBuilder.Lazy
  id: Lazy
  parent: Steeltoe.Messaging.RabbitMQ.Config.QueueBuilder
  langs:
  - csharp
  - vb
  name: Lazy()
  nameWithType: QueueBuilder.Lazy()
  fullName: Steeltoe.Messaging.RabbitMQ.Config.QueueBuilder.Lazy()
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Config/QueueBuilder.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Lazy
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Config/QueueBuilder.cs
    startLine: 143
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Config
  syntax:
    content: public QueueBuilder Lazy()
    return:
      type: Steeltoe.Messaging.RabbitMQ.Config.QueueBuilder
    content.vb: Public Function Lazy As QueueBuilder
  overload: Steeltoe.Messaging.RabbitMQ.Config.QueueBuilder.Lazy*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Steeltoe.Messaging.RabbitMQ.Config.QueueBuilder.Masterlocator(Steeltoe.Messaging.RabbitMQ.Config.QueueBuilder.MasterLocator)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Config.QueueBuilder.Masterlocator(Steeltoe.Messaging.RabbitMQ.Config.QueueBuilder.MasterLocator)
  id: Masterlocator(Steeltoe.Messaging.RabbitMQ.Config.QueueBuilder.MasterLocator)
  parent: Steeltoe.Messaging.RabbitMQ.Config.QueueBuilder
  langs:
  - csharp
  - vb
  name: Masterlocator(QueueBuilder.MasterLocator)
  nameWithType: QueueBuilder.Masterlocator(QueueBuilder.MasterLocator)
  fullName: Steeltoe.Messaging.RabbitMQ.Config.QueueBuilder.Masterlocator(Steeltoe.Messaging.RabbitMQ.Config.QueueBuilder.MasterLocator)
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Config/QueueBuilder.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Masterlocator
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Config/QueueBuilder.cs
    startLine: 148
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Config
  syntax:
    content: public QueueBuilder Masterlocator(QueueBuilder.MasterLocator locator)
    parameters:
    - id: locator
      type: Steeltoe.Messaging.RabbitMQ.Config.QueueBuilder.MasterLocator
    return:
      type: Steeltoe.Messaging.RabbitMQ.Config.QueueBuilder
    content.vb: Public Function Masterlocator(locator As QueueBuilder.MasterLocator) As QueueBuilder
  overload: Steeltoe.Messaging.RabbitMQ.Config.QueueBuilder.Masterlocator*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Steeltoe.Messaging.RabbitMQ.Config.QueueBuilder.SingleActiveConsumer
  commentId: M:Steeltoe.Messaging.RabbitMQ.Config.QueueBuilder.SingleActiveConsumer
  id: SingleActiveConsumer
  parent: Steeltoe.Messaging.RabbitMQ.Config.QueueBuilder
  langs:
  - csharp
  - vb
  name: SingleActiveConsumer()
  nameWithType: QueueBuilder.SingleActiveConsumer()
  fullName: Steeltoe.Messaging.RabbitMQ.Config.QueueBuilder.SingleActiveConsumer()
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Config/QueueBuilder.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: SingleActiveConsumer
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Config/QueueBuilder.cs
    startLine: 153
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Config
  syntax:
    content: public QueueBuilder SingleActiveConsumer()
    return:
      type: Steeltoe.Messaging.RabbitMQ.Config.QueueBuilder
    content.vb: Public Function SingleActiveConsumer As QueueBuilder
  overload: Steeltoe.Messaging.RabbitMQ.Config.QueueBuilder.SingleActiveConsumer*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Steeltoe.Messaging.RabbitMQ.Config.QueueBuilder.Quorum
  commentId: M:Steeltoe.Messaging.RabbitMQ.Config.QueueBuilder.Quorum
  id: Quorum
  parent: Steeltoe.Messaging.RabbitMQ.Config.QueueBuilder
  langs:
  - csharp
  - vb
  name: Quorum()
  nameWithType: QueueBuilder.Quorum()
  fullName: Steeltoe.Messaging.RabbitMQ.Config.QueueBuilder.Quorum()
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Config/QueueBuilder.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Quorum
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Config/QueueBuilder.cs
    startLine: 158
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Config
  syntax:
    content: public QueueBuilder Quorum()
    return:
      type: Steeltoe.Messaging.RabbitMQ.Config.QueueBuilder
    content.vb: Public Function Quorum As QueueBuilder
  overload: Steeltoe.Messaging.RabbitMQ.Config.QueueBuilder.Quorum*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Steeltoe.Messaging.RabbitMQ.Config.QueueBuilder.DeliveryLimit(System.Int32)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Config.QueueBuilder.DeliveryLimit(System.Int32)
  id: DeliveryLimit(System.Int32)
  parent: Steeltoe.Messaging.RabbitMQ.Config.QueueBuilder
  langs:
  - csharp
  - vb
  name: DeliveryLimit(Int32)
  nameWithType: QueueBuilder.DeliveryLimit(Int32)
  fullName: Steeltoe.Messaging.RabbitMQ.Config.QueueBuilder.DeliveryLimit(System.Int32)
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Config/QueueBuilder.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: DeliveryLimit
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Config/QueueBuilder.cs
    startLine: 163
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Config
  syntax:
    content: public QueueBuilder DeliveryLimit(int limit)
    parameters:
    - id: limit
      type: System.Int32
    return:
      type: Steeltoe.Messaging.RabbitMQ.Config.QueueBuilder
    content.vb: Public Function DeliveryLimit(limit As Integer) As QueueBuilder
  overload: Steeltoe.Messaging.RabbitMQ.Config.QueueBuilder.DeliveryLimit*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Steeltoe.Messaging.RabbitMQ.Config.QueueBuilder.Build
  commentId: M:Steeltoe.Messaging.RabbitMQ.Config.QueueBuilder.Build
  id: Build
  parent: Steeltoe.Messaging.RabbitMQ.Config.QueueBuilder
  langs:
  - csharp
  - vb
  name: Build()
  nameWithType: QueueBuilder.Build()
  fullName: Steeltoe.Messaging.RabbitMQ.Config.QueueBuilder.Build()
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Config/QueueBuilder.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Build
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Config/QueueBuilder.cs
    startLine: 168
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Config
  syntax:
    content: public IQueue Build()
    return:
      type: Steeltoe.Messaging.RabbitMQ.Config.IQueue
    content.vb: Public Function Build As IQueue
  overload: Steeltoe.Messaging.RabbitMQ.Config.QueueBuilder.Build*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Steeltoe.Messaging.RabbitMQ.Config
  commentId: N:Steeltoe.Messaging.RabbitMQ.Config
  name: Steeltoe.Messaging.RabbitMQ.Config
  nameWithType: Steeltoe.Messaging.RabbitMQ.Config
  fullName: Steeltoe.Messaging.RabbitMQ.Config
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Steeltoe.Messaging.RabbitMQ.Config.AbstractBuilder
  commentId: T:Steeltoe.Messaging.RabbitMQ.Config.AbstractBuilder
  parent: Steeltoe.Messaging.RabbitMQ.Config
  name: AbstractBuilder
  nameWithType: AbstractBuilder
  fullName: Steeltoe.Messaging.RabbitMQ.Config.AbstractBuilder
- uid: Steeltoe.Messaging.RabbitMQ.Config.AbstractBuilder.GetOrCreateArguments
  commentId: M:Steeltoe.Messaging.RabbitMQ.Config.AbstractBuilder.GetOrCreateArguments
  parent: Steeltoe.Messaging.RabbitMQ.Config.AbstractBuilder
  name: GetOrCreateArguments()
  nameWithType: AbstractBuilder.GetOrCreateArguments()
  fullName: Steeltoe.Messaging.RabbitMQ.Config.AbstractBuilder.GetOrCreateArguments()
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Config.AbstractBuilder.GetOrCreateArguments
    name: GetOrCreateArguments
    nameWithType: AbstractBuilder.GetOrCreateArguments
    fullName: Steeltoe.Messaging.RabbitMQ.Config.AbstractBuilder.GetOrCreateArguments
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Config.AbstractBuilder.GetOrCreateArguments
    name: GetOrCreateArguments
    nameWithType: AbstractBuilder.GetOrCreateArguments
    fullName: Steeltoe.Messaging.RabbitMQ.Config.AbstractBuilder.GetOrCreateArguments
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Config.AbstractBuilder.Arguments
  commentId: P:Steeltoe.Messaging.RabbitMQ.Config.AbstractBuilder.Arguments
  parent: Steeltoe.Messaging.RabbitMQ.Config.AbstractBuilder
  name: Arguments
  nameWithType: AbstractBuilder.Arguments
  fullName: Steeltoe.Messaging.RabbitMQ.Config.AbstractBuilder.Arguments
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Steeltoe.Messaging.RabbitMQ.Config.QueueBuilder.Durable*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Config.QueueBuilder.Durable
  name: Durable
  nameWithType: QueueBuilder.Durable
  fullName: Steeltoe.Messaging.RabbitMQ.Config.QueueBuilder.Durable
- uid: Steeltoe.Messaging.RabbitMQ.Config.QueueBuilder
  commentId: T:Steeltoe.Messaging.RabbitMQ.Config.QueueBuilder
  parent: Steeltoe.Messaging.RabbitMQ.Config
  name: QueueBuilder
  nameWithType: QueueBuilder
  fullName: Steeltoe.Messaging.RabbitMQ.Config.QueueBuilder
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Steeltoe.Messaging.RabbitMQ.Config.QueueBuilder.NonDurable*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Config.QueueBuilder.NonDurable
  name: NonDurable
  nameWithType: QueueBuilder.NonDurable
  fullName: Steeltoe.Messaging.RabbitMQ.Config.QueueBuilder.NonDurable
- uid: Steeltoe.Messaging.RabbitMQ.Config.QueueBuilder.Exclusive*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Config.QueueBuilder.Exclusive
  name: Exclusive
  nameWithType: QueueBuilder.Exclusive
  fullName: Steeltoe.Messaging.RabbitMQ.Config.QueueBuilder.Exclusive
- uid: Steeltoe.Messaging.RabbitMQ.Config.QueueBuilder.AutoDelete*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Config.QueueBuilder.AutoDelete
  name: AutoDelete
  nameWithType: QueueBuilder.AutoDelete
  fullName: Steeltoe.Messaging.RabbitMQ.Config.QueueBuilder.AutoDelete
- uid: Steeltoe.Messaging.RabbitMQ.Config.QueueBuilder.WithArgument*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Config.QueueBuilder.WithArgument
  name: WithArgument
  nameWithType: QueueBuilder.WithArgument
  fullName: Steeltoe.Messaging.RabbitMQ.Config.QueueBuilder.WithArgument
- uid: Steeltoe.Messaging.RabbitMQ.Config.QueueBuilder.WithArguments*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Config.QueueBuilder.WithArguments
  name: WithArguments
  nameWithType: QueueBuilder.WithArguments
  fullName: Steeltoe.Messaging.RabbitMQ.Config.QueueBuilder.WithArguments
- uid: System.Collections.Generic.Dictionary{System.String,System.Object}
  commentId: T:System.Collections.Generic.Dictionary{System.String,System.Object}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  name: Dictionary<String, Object>
  nameWithType: Dictionary<String, Object>
  fullName: System.Collections.Generic.Dictionary<System.String, System.Object>
  nameWithType.vb: Dictionary(Of String, Object)
  fullName.vb: System.Collections.Generic.Dictionary(Of System.String, System.Object)
  name.vb: Dictionary(Of String, Object)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Dictionary`2
  commentId: T:System.Collections.Generic.Dictionary`2
  isExternal: true
  name: Dictionary<TKey, TValue>
  nameWithType: Dictionary<TKey, TValue>
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>
  nameWithType.vb: Dictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue)
  name.vb: Dictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Steeltoe.Messaging.RabbitMQ.Config.QueueBuilder.TTL*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Config.QueueBuilder.TTL
  name: TTL
  nameWithType: QueueBuilder.TTL
  fullName: Steeltoe.Messaging.RabbitMQ.Config.QueueBuilder.TTL
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Steeltoe.Messaging.RabbitMQ.Config.QueueBuilder.Expires*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Config.QueueBuilder.Expires
  name: Expires
  nameWithType: QueueBuilder.Expires
  fullName: Steeltoe.Messaging.RabbitMQ.Config.QueueBuilder.Expires
- uid: Steeltoe.Messaging.RabbitMQ.Config.QueueBuilder.MaxLength*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Config.QueueBuilder.MaxLength
  name: MaxLength
  nameWithType: QueueBuilder.MaxLength
  fullName: Steeltoe.Messaging.RabbitMQ.Config.QueueBuilder.MaxLength
- uid: Steeltoe.Messaging.RabbitMQ.Config.QueueBuilder.MaxLengthBytes*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Config.QueueBuilder.MaxLengthBytes
  name: MaxLengthBytes
  nameWithType: QueueBuilder.MaxLengthBytes
  fullName: Steeltoe.Messaging.RabbitMQ.Config.QueueBuilder.MaxLengthBytes
- uid: Steeltoe.Messaging.RabbitMQ.Config.QueueBuilder.Overflow*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Config.QueueBuilder.Overflow
  name: Overflow
  nameWithType: QueueBuilder.Overflow
  fullName: Steeltoe.Messaging.RabbitMQ.Config.QueueBuilder.Overflow
- uid: Steeltoe.Messaging.RabbitMQ.Config.QueueBuilder.OverFlow
  commentId: T:Steeltoe.Messaging.RabbitMQ.Config.QueueBuilder.OverFlow
  parent: Steeltoe.Messaging.RabbitMQ.Config
  name: QueueBuilder.OverFlow
  nameWithType: QueueBuilder.OverFlow
  fullName: Steeltoe.Messaging.RabbitMQ.Config.QueueBuilder.OverFlow
- uid: Steeltoe.Messaging.RabbitMQ.Config.QueueBuilder.DeadLetterExchange*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Config.QueueBuilder.DeadLetterExchange
  name: DeadLetterExchange
  nameWithType: QueueBuilder.DeadLetterExchange
  fullName: Steeltoe.Messaging.RabbitMQ.Config.QueueBuilder.DeadLetterExchange
- uid: Steeltoe.Messaging.RabbitMQ.Config.QueueBuilder.DeadLetterRoutingKey*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Config.QueueBuilder.DeadLetterRoutingKey
  name: DeadLetterRoutingKey
  nameWithType: QueueBuilder.DeadLetterRoutingKey
  fullName: Steeltoe.Messaging.RabbitMQ.Config.QueueBuilder.DeadLetterRoutingKey
- uid: Steeltoe.Messaging.RabbitMQ.Config.QueueBuilder.MaxPriority*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Config.QueueBuilder.MaxPriority
  name: MaxPriority
  nameWithType: QueueBuilder.MaxPriority
  fullName: Steeltoe.Messaging.RabbitMQ.Config.QueueBuilder.MaxPriority
- uid: Steeltoe.Messaging.RabbitMQ.Config.QueueBuilder.Lazy*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Config.QueueBuilder.Lazy
  name: Lazy
  nameWithType: QueueBuilder.Lazy
  fullName: Steeltoe.Messaging.RabbitMQ.Config.QueueBuilder.Lazy
- uid: Steeltoe.Messaging.RabbitMQ.Config.QueueBuilder.Masterlocator*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Config.QueueBuilder.Masterlocator
  name: Masterlocator
  nameWithType: QueueBuilder.Masterlocator
  fullName: Steeltoe.Messaging.RabbitMQ.Config.QueueBuilder.Masterlocator
- uid: Steeltoe.Messaging.RabbitMQ.Config.QueueBuilder.MasterLocator
  commentId: T:Steeltoe.Messaging.RabbitMQ.Config.QueueBuilder.MasterLocator
  parent: Steeltoe.Messaging.RabbitMQ.Config
  name: QueueBuilder.MasterLocator
  nameWithType: QueueBuilder.MasterLocator
  fullName: Steeltoe.Messaging.RabbitMQ.Config.QueueBuilder.MasterLocator
- uid: Steeltoe.Messaging.RabbitMQ.Config.QueueBuilder.SingleActiveConsumer*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Config.QueueBuilder.SingleActiveConsumer
  name: SingleActiveConsumer
  nameWithType: QueueBuilder.SingleActiveConsumer
  fullName: Steeltoe.Messaging.RabbitMQ.Config.QueueBuilder.SingleActiveConsumer
- uid: Steeltoe.Messaging.RabbitMQ.Config.QueueBuilder.Quorum*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Config.QueueBuilder.Quorum
  name: Quorum
  nameWithType: QueueBuilder.Quorum
  fullName: Steeltoe.Messaging.RabbitMQ.Config.QueueBuilder.Quorum
- uid: Steeltoe.Messaging.RabbitMQ.Config.QueueBuilder.DeliveryLimit*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Config.QueueBuilder.DeliveryLimit
  name: DeliveryLimit
  nameWithType: QueueBuilder.DeliveryLimit
  fullName: Steeltoe.Messaging.RabbitMQ.Config.QueueBuilder.DeliveryLimit
- uid: Steeltoe.Messaging.RabbitMQ.Config.QueueBuilder.Build*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Config.QueueBuilder.Build
  name: Build
  nameWithType: QueueBuilder.Build
  fullName: Steeltoe.Messaging.RabbitMQ.Config.QueueBuilder.Build
- uid: Steeltoe.Messaging.RabbitMQ.Config.IQueue
  commentId: T:Steeltoe.Messaging.RabbitMQ.Config.IQueue
  parent: Steeltoe.Messaging.RabbitMQ.Config
  name: IQueue
  nameWithType: IQueue
  fullName: Steeltoe.Messaging.RabbitMQ.Config.IQueue
