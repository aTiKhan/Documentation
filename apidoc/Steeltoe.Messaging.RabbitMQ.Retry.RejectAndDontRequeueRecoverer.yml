### YamlMime:ManagedReference
items:
- uid: Steeltoe.Messaging.RabbitMQ.Retry.RejectAndDontRequeueRecoverer
  commentId: T:Steeltoe.Messaging.RabbitMQ.Retry.RejectAndDontRequeueRecoverer
  id: RejectAndDontRequeueRecoverer
  parent: Steeltoe.Messaging.RabbitMQ.Retry
  children:
  - Steeltoe.Messaging.RabbitMQ.Retry.RejectAndDontRequeueRecoverer.Recover(Steeltoe.Messaging.IMessage,System.Exception)
  langs:
  - csharp
  - vb
  name: RejectAndDontRequeueRecoverer
  nameWithType: RejectAndDontRequeueRecoverer
  fullName: Steeltoe.Messaging.RabbitMQ.Retry.RejectAndDontRequeueRecoverer
  type: Class
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Retry/RejectAndDontRequeueRecoverer.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: RejectAndDontRequeueRecoverer
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Retry/RejectAndDontRequeueRecoverer.cs
    startLine: 10
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Retry
  syntax:
    content: 'public class RejectAndDontRequeueRecoverer : IMessageRecoverer'
    content.vb: >-
      Public Class RejectAndDontRequeueRecoverer

          Implements IMessageRecoverer
  inheritance:
  - System.Object
  implements:
  - Steeltoe.Messaging.RabbitMQ.Retry.IMessageRecoverer
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Steeltoe.Messaging.RabbitMQ.Retry.RejectAndDontRequeueRecoverer.Recover(Steeltoe.Messaging.IMessage,System.Exception)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Retry.RejectAndDontRequeueRecoverer.Recover(Steeltoe.Messaging.IMessage,System.Exception)
  id: Recover(Steeltoe.Messaging.IMessage,System.Exception)
  parent: Steeltoe.Messaging.RabbitMQ.Retry.RejectAndDontRequeueRecoverer
  langs:
  - csharp
  - vb
  name: Recover(IMessage, Exception)
  nameWithType: RejectAndDontRequeueRecoverer.Recover(IMessage, Exception)
  fullName: Steeltoe.Messaging.RabbitMQ.Retry.RejectAndDontRequeueRecoverer.Recover(Steeltoe.Messaging.IMessage, System.Exception)
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Retry/RejectAndDontRequeueRecoverer.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Recover
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Retry/RejectAndDontRequeueRecoverer.cs
    startLine: 12
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Retry
  syntax:
    content: public void Recover(IMessage message, Exception exception)
    parameters:
    - id: message
      type: Steeltoe.Messaging.IMessage
    - id: exception
      type: System.Exception
    content.vb: Public Sub Recover(message As IMessage, exception As Exception)
  overload: Steeltoe.Messaging.RabbitMQ.Retry.RejectAndDontRequeueRecoverer.Recover*
  implements:
  - Steeltoe.Messaging.RabbitMQ.Retry.IMessageRecoverer.Recover(Steeltoe.Messaging.IMessage,System.Exception)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Steeltoe.Messaging.RabbitMQ.Retry
  commentId: N:Steeltoe.Messaging.RabbitMQ.Retry
  name: Steeltoe.Messaging.RabbitMQ.Retry
  nameWithType: Steeltoe.Messaging.RabbitMQ.Retry
  fullName: Steeltoe.Messaging.RabbitMQ.Retry
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Steeltoe.Messaging.RabbitMQ.Retry.IMessageRecoverer
  commentId: T:Steeltoe.Messaging.RabbitMQ.Retry.IMessageRecoverer
  parent: Steeltoe.Messaging.RabbitMQ.Retry
  name: IMessageRecoverer
  nameWithType: IMessageRecoverer
  fullName: Steeltoe.Messaging.RabbitMQ.Retry.IMessageRecoverer
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Steeltoe.Messaging.RabbitMQ.Retry.RejectAndDontRequeueRecoverer.Recover*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Retry.RejectAndDontRequeueRecoverer.Recover
  name: Recover
  nameWithType: RejectAndDontRequeueRecoverer.Recover
  fullName: Steeltoe.Messaging.RabbitMQ.Retry.RejectAndDontRequeueRecoverer.Recover
- uid: Steeltoe.Messaging.RabbitMQ.Retry.IMessageRecoverer.Recover(Steeltoe.Messaging.IMessage,System.Exception)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Retry.IMessageRecoverer.Recover(Steeltoe.Messaging.IMessage,System.Exception)
  parent: Steeltoe.Messaging.RabbitMQ.Retry.IMessageRecoverer
  isExternal: true
  name: Recover(IMessage, Exception)
  nameWithType: IMessageRecoverer.Recover(IMessage, Exception)
  fullName: Steeltoe.Messaging.RabbitMQ.Retry.IMessageRecoverer.Recover(Steeltoe.Messaging.IMessage, System.Exception)
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Retry.IMessageRecoverer.Recover(Steeltoe.Messaging.IMessage,System.Exception)
    name: Recover
    nameWithType: IMessageRecoverer.Recover
    fullName: Steeltoe.Messaging.RabbitMQ.Retry.IMessageRecoverer.Recover
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Retry.IMessageRecoverer.Recover(Steeltoe.Messaging.IMessage,System.Exception)
    name: Recover
    nameWithType: IMessageRecoverer.Recover
    fullName: Steeltoe.Messaging.RabbitMQ.Retry.IMessageRecoverer.Recover
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.IMessage
  commentId: T:Steeltoe.Messaging.IMessage
  parent: Steeltoe.Messaging
  name: IMessage
  nameWithType: IMessage
  fullName: Steeltoe.Messaging.IMessage
- uid: System.Exception
  commentId: T:System.Exception
  parent: System
  isExternal: true
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: Steeltoe.Messaging
  commentId: N:Steeltoe.Messaging
  name: Steeltoe.Messaging
  nameWithType: Steeltoe.Messaging
  fullName: Steeltoe.Messaging
