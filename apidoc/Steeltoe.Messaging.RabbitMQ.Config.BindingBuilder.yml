### YamlMime:ManagedReference
items:
- uid: Steeltoe.Messaging.RabbitMQ.Config.BindingBuilder
  commentId: T:Steeltoe.Messaging.RabbitMQ.Config.BindingBuilder
  id: BindingBuilder
  parent: Steeltoe.Messaging.RabbitMQ.Config
  children:
  - Steeltoe.Messaging.RabbitMQ.Config.BindingBuilder.Bind(Steeltoe.Messaging.RabbitMQ.Config.IExchange)
  - Steeltoe.Messaging.RabbitMQ.Config.BindingBuilder.Bind(Steeltoe.Messaging.RabbitMQ.Config.IQueue)
  - Steeltoe.Messaging.RabbitMQ.Config.BindingBuilder.Create(System.String,Steeltoe.Messaging.RabbitMQ.Config.Binding.DestinationType)
  langs:
  - csharp
  - vb
  name: BindingBuilder
  nameWithType: BindingBuilder
  fullName: Steeltoe.Messaging.RabbitMQ.Config.BindingBuilder
  type: Class
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Config/BindingBuilder.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: BindingBuilder
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Config/BindingBuilder.cs
    startLine: 10
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Config
  syntax:
    content: public class BindingBuilder
    content.vb: Public Class BindingBuilder
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Steeltoe.Messaging.RabbitMQ.Config.BindingBuilder.Bind(Steeltoe.Messaging.RabbitMQ.Config.IQueue)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Config.BindingBuilder.Bind(Steeltoe.Messaging.RabbitMQ.Config.IQueue)
  id: Bind(Steeltoe.Messaging.RabbitMQ.Config.IQueue)
  parent: Steeltoe.Messaging.RabbitMQ.Config.BindingBuilder
  langs:
  - csharp
  - vb
  name: Bind(IQueue)
  nameWithType: BindingBuilder.Bind(IQueue)
  fullName: Steeltoe.Messaging.RabbitMQ.Config.BindingBuilder.Bind(Steeltoe.Messaging.RabbitMQ.Config.IQueue)
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Config/BindingBuilder.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Bind
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Config/BindingBuilder.cs
    startLine: 12
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Config
  syntax:
    content: public static BindingBuilder.DestinationConfigurer Bind(IQueue queue)
    parameters:
    - id: queue
      type: Steeltoe.Messaging.RabbitMQ.Config.IQueue
    return:
      type: Steeltoe.Messaging.RabbitMQ.Config.BindingBuilder.DestinationConfigurer
    content.vb: Public Shared Function Bind(queue As IQueue) As BindingBuilder.DestinationConfigurer
  overload: Steeltoe.Messaging.RabbitMQ.Config.BindingBuilder.Bind*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Steeltoe.Messaging.RabbitMQ.Config.BindingBuilder.Bind(Steeltoe.Messaging.RabbitMQ.Config.IExchange)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Config.BindingBuilder.Bind(Steeltoe.Messaging.RabbitMQ.Config.IExchange)
  id: Bind(Steeltoe.Messaging.RabbitMQ.Config.IExchange)
  parent: Steeltoe.Messaging.RabbitMQ.Config.BindingBuilder
  langs:
  - csharp
  - vb
  name: Bind(IExchange)
  nameWithType: BindingBuilder.Bind(IExchange)
  fullName: Steeltoe.Messaging.RabbitMQ.Config.BindingBuilder.Bind(Steeltoe.Messaging.RabbitMQ.Config.IExchange)
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Config/BindingBuilder.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Bind
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Config/BindingBuilder.cs
    startLine: 17
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Config
  syntax:
    content: public static BindingBuilder.DestinationConfigurer Bind(IExchange exchange)
    parameters:
    - id: exchange
      type: Steeltoe.Messaging.RabbitMQ.Config.IExchange
    return:
      type: Steeltoe.Messaging.RabbitMQ.Config.BindingBuilder.DestinationConfigurer
    content.vb: Public Shared Function Bind(exchange As IExchange) As BindingBuilder.DestinationConfigurer
  overload: Steeltoe.Messaging.RabbitMQ.Config.BindingBuilder.Bind*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Steeltoe.Messaging.RabbitMQ.Config.BindingBuilder.Create(System.String,Steeltoe.Messaging.RabbitMQ.Config.Binding.DestinationType)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Config.BindingBuilder.Create(System.String,Steeltoe.Messaging.RabbitMQ.Config.Binding.DestinationType)
  id: Create(System.String,Steeltoe.Messaging.RabbitMQ.Config.Binding.DestinationType)
  parent: Steeltoe.Messaging.RabbitMQ.Config.BindingBuilder
  langs:
  - csharp
  - vb
  name: Create(String, Binding.DestinationType)
  nameWithType: BindingBuilder.Create(String, Binding.DestinationType)
  fullName: Steeltoe.Messaging.RabbitMQ.Config.BindingBuilder.Create(System.String, Steeltoe.Messaging.RabbitMQ.Config.Binding.DestinationType)
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Config/BindingBuilder.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Create
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Config/BindingBuilder.cs
    startLine: 315
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Config
  syntax:
    content: public static IBinding Create(string bindingName, Binding.DestinationType type)
    parameters:
    - id: bindingName
      type: System.String
    - id: type
      type: Steeltoe.Messaging.RabbitMQ.Config.Binding.DestinationType
    return:
      type: Steeltoe.Messaging.RabbitMQ.Config.IBinding
    content.vb: Public Shared Function Create(bindingName As String, type As Binding.DestinationType) As IBinding
  overload: Steeltoe.Messaging.RabbitMQ.Config.BindingBuilder.Create*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Steeltoe.Messaging.RabbitMQ.Config
  commentId: N:Steeltoe.Messaging.RabbitMQ.Config
  name: Steeltoe.Messaging.RabbitMQ.Config
  nameWithType: Steeltoe.Messaging.RabbitMQ.Config
  fullName: Steeltoe.Messaging.RabbitMQ.Config
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Steeltoe.Messaging.RabbitMQ.Config.BindingBuilder.Bind*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Config.BindingBuilder.Bind
  name: Bind
  nameWithType: BindingBuilder.Bind
  fullName: Steeltoe.Messaging.RabbitMQ.Config.BindingBuilder.Bind
- uid: Steeltoe.Messaging.RabbitMQ.Config.IQueue
  commentId: T:Steeltoe.Messaging.RabbitMQ.Config.IQueue
  parent: Steeltoe.Messaging.RabbitMQ.Config
  name: IQueue
  nameWithType: IQueue
  fullName: Steeltoe.Messaging.RabbitMQ.Config.IQueue
- uid: Steeltoe.Messaging.RabbitMQ.Config.BindingBuilder.DestinationConfigurer
  commentId: T:Steeltoe.Messaging.RabbitMQ.Config.BindingBuilder.DestinationConfigurer
  parent: Steeltoe.Messaging.RabbitMQ.Config
  name: BindingBuilder.DestinationConfigurer
  nameWithType: BindingBuilder.DestinationConfigurer
  fullName: Steeltoe.Messaging.RabbitMQ.Config.BindingBuilder.DestinationConfigurer
- uid: Steeltoe.Messaging.RabbitMQ.Config.IExchange
  commentId: T:Steeltoe.Messaging.RabbitMQ.Config.IExchange
  parent: Steeltoe.Messaging.RabbitMQ.Config
  name: IExchange
  nameWithType: IExchange
  fullName: Steeltoe.Messaging.RabbitMQ.Config.IExchange
- uid: Steeltoe.Messaging.RabbitMQ.Config.BindingBuilder.Create*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Config.BindingBuilder.Create
  name: Create
  nameWithType: BindingBuilder.Create
  fullName: Steeltoe.Messaging.RabbitMQ.Config.BindingBuilder.Create
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Steeltoe.Messaging.RabbitMQ.Config.Binding.DestinationType
  commentId: T:Steeltoe.Messaging.RabbitMQ.Config.Binding.DestinationType
  parent: Steeltoe.Messaging.RabbitMQ.Config
  name: Binding.DestinationType
  nameWithType: Binding.DestinationType
  fullName: Steeltoe.Messaging.RabbitMQ.Config.Binding.DestinationType
- uid: Steeltoe.Messaging.RabbitMQ.Config.IBinding
  commentId: T:Steeltoe.Messaging.RabbitMQ.Config.IBinding
  parent: Steeltoe.Messaging.RabbitMQ.Config
  name: IBinding
  nameWithType: IBinding
  fullName: Steeltoe.Messaging.RabbitMQ.Config.IBinding
