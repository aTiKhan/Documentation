### YamlMime:ManagedReference
items:
- uid: Steeltoe.Discovery.Eureka.EurekaClientOptions.EurekaServerConfig
  commentId: T:Steeltoe.Discovery.Eureka.EurekaClientOptions.EurekaServerConfig
  id: EurekaClientOptions.EurekaServerConfig
  parent: Steeltoe.Discovery.Eureka
  children:
  - Steeltoe.Discovery.Eureka.EurekaClientOptions.EurekaServerConfig.#ctor(Steeltoe.Discovery.Eureka.EurekaClientOptions)
  - Steeltoe.Discovery.Eureka.EurekaClientOptions.EurekaServerConfig.ConnectTimeoutSeconds
  - Steeltoe.Discovery.Eureka.EurekaClientOptions.EurekaServerConfig.ProxyHost
  - Steeltoe.Discovery.Eureka.EurekaClientOptions.EurekaServerConfig.ProxyPassword
  - Steeltoe.Discovery.Eureka.EurekaClientOptions.EurekaServerConfig.ProxyPort
  - Steeltoe.Discovery.Eureka.EurekaClientOptions.EurekaServerConfig.ProxyUserName
  - Steeltoe.Discovery.Eureka.EurekaClientOptions.EurekaServerConfig.RetryCount
  - Steeltoe.Discovery.Eureka.EurekaClientOptions.EurekaServerConfig.ShouldGZipContent
  langs:
  - csharp
  - vb
  name: EurekaClientOptions.EurekaServerConfig
  nameWithType: EurekaClientOptions.EurekaServerConfig
  fullName: Steeltoe.Discovery.Eureka.EurekaClientOptions.EurekaServerConfig
  type: Class
  source:
    remote:
      path: src/Discovery/src/Eureka/EurekaClientOptions.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: EurekaServerConfig
    path: ../Steeltoe/src/Discovery/src/Eureka/EurekaClientOptions.cs
    startLine: 89
  assemblies:
  - Steeltoe.Discovery.Eureka
  namespace: Steeltoe.Discovery.Eureka
  syntax:
    content: public class EurekaServerConfig
    content.vb: Public Class EurekaServerConfig
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Steeltoe.Discovery.Eureka.EurekaClientOptions.EurekaServerConfig.#ctor(Steeltoe.Discovery.Eureka.EurekaClientOptions)
  commentId: M:Steeltoe.Discovery.Eureka.EurekaClientOptions.EurekaServerConfig.#ctor(Steeltoe.Discovery.Eureka.EurekaClientOptions)
  id: '#ctor(Steeltoe.Discovery.Eureka.EurekaClientOptions)'
  parent: Steeltoe.Discovery.Eureka.EurekaClientOptions.EurekaServerConfig
  langs:
  - csharp
  - vb
  name: EurekaServerConfig(EurekaClientOptions)
  nameWithType: EurekaClientOptions.EurekaServerConfig.EurekaServerConfig(EurekaClientOptions)
  fullName: Steeltoe.Discovery.Eureka.EurekaClientOptions.EurekaServerConfig.EurekaServerConfig(Steeltoe.Discovery.Eureka.EurekaClientOptions)
  type: Constructor
  source:
    remote:
      path: src/Discovery/src/Eureka/EurekaClientOptions.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: .ctor
    path: ../Steeltoe/src/Discovery/src/Eureka/EurekaClientOptions.cs
    startLine: 93
  assemblies:
  - Steeltoe.Discovery.Eureka
  namespace: Steeltoe.Discovery.Eureka
  syntax:
    content: public EurekaServerConfig(EurekaClientOptions options)
    parameters:
    - id: options
      type: Steeltoe.Discovery.Eureka.EurekaClientOptions
    content.vb: Public Sub New(options As EurekaClientOptions)
  overload: Steeltoe.Discovery.Eureka.EurekaClientOptions.EurekaServerConfig.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Steeltoe.Discovery.Eureka.EurekaClientOptions.EurekaServerConfig.ProxyHost
  commentId: P:Steeltoe.Discovery.Eureka.EurekaClientOptions.EurekaServerConfig.ProxyHost
  id: ProxyHost
  parent: Steeltoe.Discovery.Eureka.EurekaClientOptions.EurekaServerConfig
  langs:
  - csharp
  - vb
  name: ProxyHost
  nameWithType: EurekaClientOptions.EurekaServerConfig.ProxyHost
  fullName: Steeltoe.Discovery.Eureka.EurekaClientOptions.EurekaServerConfig.ProxyHost
  type: Property
  source:
    remote:
      path: src/Discovery/src/Eureka/EurekaClientOptions.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: ProxyHost
    path: ../Steeltoe/src/Discovery/src/Eureka/EurekaClientOptions.cs
    startLine: 101
  assemblies:
  - Steeltoe.Discovery.Eureka
  namespace: Steeltoe.Discovery.Eureka
  summary: "\nGets or sets configuration property: eureka:client:eurekaServer:proxyHost\n"
  example: []
  syntax:
    content: public string ProxyHost { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property ProxyHost As String
  overload: Steeltoe.Discovery.Eureka.EurekaClientOptions.EurekaServerConfig.ProxyHost*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Steeltoe.Discovery.Eureka.EurekaClientOptions.EurekaServerConfig.ProxyPort
  commentId: P:Steeltoe.Discovery.Eureka.EurekaClientOptions.EurekaServerConfig.ProxyPort
  id: ProxyPort
  parent: Steeltoe.Discovery.Eureka.EurekaClientOptions.EurekaServerConfig
  langs:
  - csharp
  - vb
  name: ProxyPort
  nameWithType: EurekaClientOptions.EurekaServerConfig.ProxyPort
  fullName: Steeltoe.Discovery.Eureka.EurekaClientOptions.EurekaServerConfig.ProxyPort
  type: Property
  source:
    remote:
      path: src/Discovery/src/Eureka/EurekaClientOptions.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: ProxyPort
    path: ../Steeltoe/src/Discovery/src/Eureka/EurekaClientOptions.cs
    startLine: 111
  assemblies:
  - Steeltoe.Discovery.Eureka
  namespace: Steeltoe.Discovery.Eureka
  summary: "\nGets or sets configuration property: eureka:client:eurekaServer:proxyPort\n"
  example: []
  syntax:
    content: public int ProxyPort { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property ProxyPort As Integer
  overload: Steeltoe.Discovery.Eureka.EurekaClientOptions.EurekaServerConfig.ProxyPort*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Steeltoe.Discovery.Eureka.EurekaClientOptions.EurekaServerConfig.ProxyUserName
  commentId: P:Steeltoe.Discovery.Eureka.EurekaClientOptions.EurekaServerConfig.ProxyUserName
  id: ProxyUserName
  parent: Steeltoe.Discovery.Eureka.EurekaClientOptions.EurekaServerConfig
  langs:
  - csharp
  - vb
  name: ProxyUserName
  nameWithType: EurekaClientOptions.EurekaServerConfig.ProxyUserName
  fullName: Steeltoe.Discovery.Eureka.EurekaClientOptions.EurekaServerConfig.ProxyUserName
  type: Property
  source:
    remote:
      path: src/Discovery/src/Eureka/EurekaClientOptions.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: ProxyUserName
    path: ../Steeltoe/src/Discovery/src/Eureka/EurekaClientOptions.cs
    startLine: 121
  assemblies:
  - Steeltoe.Discovery.Eureka
  namespace: Steeltoe.Discovery.Eureka
  summary: "\nGets or sets configuration property: eureka:client:eurekaServer:proxyUserName\n"
  example: []
  syntax:
    content: public string ProxyUserName { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property ProxyUserName As String
  overload: Steeltoe.Discovery.Eureka.EurekaClientOptions.EurekaServerConfig.ProxyUserName*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Steeltoe.Discovery.Eureka.EurekaClientOptions.EurekaServerConfig.ProxyPassword
  commentId: P:Steeltoe.Discovery.Eureka.EurekaClientOptions.EurekaServerConfig.ProxyPassword
  id: ProxyPassword
  parent: Steeltoe.Discovery.Eureka.EurekaClientOptions.EurekaServerConfig
  langs:
  - csharp
  - vb
  name: ProxyPassword
  nameWithType: EurekaClientOptions.EurekaServerConfig.ProxyPassword
  fullName: Steeltoe.Discovery.Eureka.EurekaClientOptions.EurekaServerConfig.ProxyPassword
  type: Property
  source:
    remote:
      path: src/Discovery/src/Eureka/EurekaClientOptions.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: ProxyPassword
    path: ../Steeltoe/src/Discovery/src/Eureka/EurekaClientOptions.cs
    startLine: 131
  assemblies:
  - Steeltoe.Discovery.Eureka
  namespace: Steeltoe.Discovery.Eureka
  summary: "\nGets or sets configuration property: eureka:client:eurekaServer:proxyPassword\n"
  example: []
  syntax:
    content: public string ProxyPassword { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property ProxyPassword As String
  overload: Steeltoe.Discovery.Eureka.EurekaClientOptions.EurekaServerConfig.ProxyPassword*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Steeltoe.Discovery.Eureka.EurekaClientOptions.EurekaServerConfig.ShouldGZipContent
  commentId: P:Steeltoe.Discovery.Eureka.EurekaClientOptions.EurekaServerConfig.ShouldGZipContent
  id: ShouldGZipContent
  parent: Steeltoe.Discovery.Eureka.EurekaClientOptions.EurekaServerConfig
  langs:
  - csharp
  - vb
  name: ShouldGZipContent
  nameWithType: EurekaClientOptions.EurekaServerConfig.ShouldGZipContent
  fullName: Steeltoe.Discovery.Eureka.EurekaClientOptions.EurekaServerConfig.ShouldGZipContent
  type: Property
  source:
    remote:
      path: src/Discovery/src/Eureka/EurekaClientOptions.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: ShouldGZipContent
    path: ../Steeltoe/src/Discovery/src/Eureka/EurekaClientOptions.cs
    startLine: 141
  assemblies:
  - Steeltoe.Discovery.Eureka
  namespace: Steeltoe.Discovery.Eureka
  summary: "\nGets or sets a value indicating whether configuration property: eureka:client:eurekaServer:shouldGZipContent\n"
  example: []
  syntax:
    content: public bool ShouldGZipContent { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property ShouldGZipContent As Boolean
  overload: Steeltoe.Discovery.Eureka.EurekaClientOptions.EurekaServerConfig.ShouldGZipContent*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Steeltoe.Discovery.Eureka.EurekaClientOptions.EurekaServerConfig.ConnectTimeoutSeconds
  commentId: P:Steeltoe.Discovery.Eureka.EurekaClientOptions.EurekaServerConfig.ConnectTimeoutSeconds
  id: ConnectTimeoutSeconds
  parent: Steeltoe.Discovery.Eureka.EurekaClientOptions.EurekaServerConfig
  langs:
  - csharp
  - vb
  name: ConnectTimeoutSeconds
  nameWithType: EurekaClientOptions.EurekaServerConfig.ConnectTimeoutSeconds
  fullName: Steeltoe.Discovery.Eureka.EurekaClientOptions.EurekaServerConfig.ConnectTimeoutSeconds
  type: Property
  source:
    remote:
      path: src/Discovery/src/Eureka/EurekaClientOptions.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: ConnectTimeoutSeconds
    path: ../Steeltoe/src/Discovery/src/Eureka/EurekaClientOptions.cs
    startLine: 151
  assemblies:
  - Steeltoe.Discovery.Eureka
  namespace: Steeltoe.Discovery.Eureka
  summary: "\nGets or sets configuration property: eureka:client:eurekaServer:connectTimeoutSeconds\n"
  example: []
  syntax:
    content: public int ConnectTimeoutSeconds { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property ConnectTimeoutSeconds As Integer
  overload: Steeltoe.Discovery.Eureka.EurekaClientOptions.EurekaServerConfig.ConnectTimeoutSeconds*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Steeltoe.Discovery.Eureka.EurekaClientOptions.EurekaServerConfig.RetryCount
  commentId: P:Steeltoe.Discovery.Eureka.EurekaClientOptions.EurekaServerConfig.RetryCount
  id: RetryCount
  parent: Steeltoe.Discovery.Eureka.EurekaClientOptions.EurekaServerConfig
  langs:
  - csharp
  - vb
  name: RetryCount
  nameWithType: EurekaClientOptions.EurekaServerConfig.RetryCount
  fullName: Steeltoe.Discovery.Eureka.EurekaClientOptions.EurekaServerConfig.RetryCount
  type: Property
  source:
    remote:
      path: src/Discovery/src/Eureka/EurekaClientOptions.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: RetryCount
    path: ../Steeltoe/src/Discovery/src/Eureka/EurekaClientOptions.cs
    startLine: 161
  assemblies:
  - Steeltoe.Discovery.Eureka
  namespace: Steeltoe.Discovery.Eureka
  summary: "\nGets or sets configuration property: eureka:client:eurekaServer:retryCount\n"
  example: []
  syntax:
    content: public int RetryCount { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property RetryCount As Integer
  overload: Steeltoe.Discovery.Eureka.EurekaClientOptions.EurekaServerConfig.RetryCount*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Steeltoe.Discovery.Eureka
  commentId: N:Steeltoe.Discovery.Eureka
  name: Steeltoe.Discovery.Eureka
  nameWithType: Steeltoe.Discovery.Eureka
  fullName: Steeltoe.Discovery.Eureka
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Steeltoe.Discovery.Eureka.EurekaClientOptions.EurekaServerConfig.#ctor*
  commentId: Overload:Steeltoe.Discovery.Eureka.EurekaClientOptions.EurekaServerConfig.#ctor
  name: EurekaServerConfig
  nameWithType: EurekaClientOptions.EurekaServerConfig.EurekaServerConfig
  fullName: Steeltoe.Discovery.Eureka.EurekaClientOptions.EurekaServerConfig.EurekaServerConfig
- uid: Steeltoe.Discovery.Eureka.EurekaClientOptions
  commentId: T:Steeltoe.Discovery.Eureka.EurekaClientOptions
  parent: Steeltoe.Discovery.Eureka
  name: EurekaClientOptions
  nameWithType: EurekaClientOptions
  fullName: Steeltoe.Discovery.Eureka.EurekaClientOptions
- uid: Steeltoe.Discovery.Eureka.EurekaClientOptions.EurekaServerConfig.ProxyHost*
  commentId: Overload:Steeltoe.Discovery.Eureka.EurekaClientOptions.EurekaServerConfig.ProxyHost
  name: ProxyHost
  nameWithType: EurekaClientOptions.EurekaServerConfig.ProxyHost
  fullName: Steeltoe.Discovery.Eureka.EurekaClientOptions.EurekaServerConfig.ProxyHost
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Steeltoe.Discovery.Eureka.EurekaClientOptions.EurekaServerConfig.ProxyPort*
  commentId: Overload:Steeltoe.Discovery.Eureka.EurekaClientOptions.EurekaServerConfig.ProxyPort
  name: ProxyPort
  nameWithType: EurekaClientOptions.EurekaServerConfig.ProxyPort
  fullName: Steeltoe.Discovery.Eureka.EurekaClientOptions.EurekaServerConfig.ProxyPort
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Steeltoe.Discovery.Eureka.EurekaClientOptions.EurekaServerConfig.ProxyUserName*
  commentId: Overload:Steeltoe.Discovery.Eureka.EurekaClientOptions.EurekaServerConfig.ProxyUserName
  name: ProxyUserName
  nameWithType: EurekaClientOptions.EurekaServerConfig.ProxyUserName
  fullName: Steeltoe.Discovery.Eureka.EurekaClientOptions.EurekaServerConfig.ProxyUserName
- uid: Steeltoe.Discovery.Eureka.EurekaClientOptions.EurekaServerConfig.ProxyPassword*
  commentId: Overload:Steeltoe.Discovery.Eureka.EurekaClientOptions.EurekaServerConfig.ProxyPassword
  name: ProxyPassword
  nameWithType: EurekaClientOptions.EurekaServerConfig.ProxyPassword
  fullName: Steeltoe.Discovery.Eureka.EurekaClientOptions.EurekaServerConfig.ProxyPassword
- uid: Steeltoe.Discovery.Eureka.EurekaClientOptions.EurekaServerConfig.ShouldGZipContent*
  commentId: Overload:Steeltoe.Discovery.Eureka.EurekaClientOptions.EurekaServerConfig.ShouldGZipContent
  name: ShouldGZipContent
  nameWithType: EurekaClientOptions.EurekaServerConfig.ShouldGZipContent
  fullName: Steeltoe.Discovery.Eureka.EurekaClientOptions.EurekaServerConfig.ShouldGZipContent
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Steeltoe.Discovery.Eureka.EurekaClientOptions.EurekaServerConfig.ConnectTimeoutSeconds*
  commentId: Overload:Steeltoe.Discovery.Eureka.EurekaClientOptions.EurekaServerConfig.ConnectTimeoutSeconds
  name: ConnectTimeoutSeconds
  nameWithType: EurekaClientOptions.EurekaServerConfig.ConnectTimeoutSeconds
  fullName: Steeltoe.Discovery.Eureka.EurekaClientOptions.EurekaServerConfig.ConnectTimeoutSeconds
- uid: Steeltoe.Discovery.Eureka.EurekaClientOptions.EurekaServerConfig.RetryCount*
  commentId: Overload:Steeltoe.Discovery.Eureka.EurekaClientOptions.EurekaServerConfig.RetryCount
  name: RetryCount
  nameWithType: EurekaClientOptions.EurekaServerConfig.RetryCount
  fullName: Steeltoe.Discovery.Eureka.EurekaClientOptions.EurekaServerConfig.RetryCount
