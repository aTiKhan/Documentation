### YamlMime:ManagedReference
items:
- uid: Steeltoe.Common.Diagnostics.DiagnosticsManager
  commentId: T:Steeltoe.Common.Diagnostics.DiagnosticsManager
  id: DiagnosticsManager
  parent: Steeltoe.Common.Diagnostics
  children:
  - Steeltoe.Common.Diagnostics.DiagnosticsManager.#ctor(System.Collections.Generic.IEnumerable{Steeltoe.Common.Diagnostics.IPolledDiagnosticSource},System.Collections.Generic.IEnumerable{Steeltoe.Common.Diagnostics.IDiagnosticObserver},System.Collections.Generic.IEnumerable{System.Diagnostics.Tracing.EventListener},ILogger{Steeltoe.Common.Diagnostics.DiagnosticsManager})
  - Steeltoe.Common.Diagnostics.DiagnosticsManager.Dispose
  - Steeltoe.Common.Diagnostics.DiagnosticsManager.Dispose(System.Boolean)
  - Steeltoe.Common.Diagnostics.DiagnosticsManager.Finalize
  - Steeltoe.Common.Diagnostics.DiagnosticsManager.Instance
  - Steeltoe.Common.Diagnostics.DiagnosticsManager.Observers
  - Steeltoe.Common.Diagnostics.DiagnosticsManager.OnCompleted
  - Steeltoe.Common.Diagnostics.DiagnosticsManager.OnError(System.Exception)
  - Steeltoe.Common.Diagnostics.DiagnosticsManager.OnNext(System.Diagnostics.DiagnosticListener)
  - Steeltoe.Common.Diagnostics.DiagnosticsManager.Sources
  - Steeltoe.Common.Diagnostics.DiagnosticsManager.Start
  - Steeltoe.Common.Diagnostics.DiagnosticsManager.Stop
  langs:
  - csharp
  - vb
  name: DiagnosticsManager
  nameWithType: DiagnosticsManager
  fullName: Steeltoe.Common.Diagnostics.DiagnosticsManager
  type: Class
  source:
    remote:
      path: src/Management/src/Abstractions/Diagnostics/DiagnosticsManager.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: DiagnosticsManager
    path: ../Steeltoe/src/Management/src/Abstractions/Diagnostics/DiagnosticsManager.cs
    startLine: 14
  assemblies:
  - Steeltoe.Management.Abstractions
  namespace: Steeltoe.Common.Diagnostics
  syntax:
    content: 'public class DiagnosticsManager : IObserver<DiagnosticListener>, IDisposable, IDiagnosticsManager'
    content.vb: >-
      Public Class DiagnosticsManager

          Implements IObserver(Of DiagnosticListener), IDisposable, IDiagnosticsManager
  inheritance:
  - System.Object
  implements:
  - System.IObserver{System.Diagnostics.DiagnosticListener}
  - System.IDisposable
  - Steeltoe.Common.Diagnostics.IDiagnosticsManager
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Steeltoe.Common.Diagnostics.DiagnosticsManager.Instance
  commentId: P:Steeltoe.Common.Diagnostics.DiagnosticsManager.Instance
  id: Instance
  parent: Steeltoe.Common.Diagnostics.DiagnosticsManager
  langs:
  - csharp
  - vb
  name: Instance
  nameWithType: DiagnosticsManager.Instance
  fullName: Steeltoe.Common.Diagnostics.DiagnosticsManager.Instance
  type: Property
  source:
    remote:
      path: src/Management/src/Abstractions/Diagnostics/DiagnosticsManager.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Instance
    path: ../Steeltoe/src/Management/src/Abstractions/Diagnostics/DiagnosticsManager.cs
    startLine: 30
  assemblies:
  - Steeltoe.Management.Abstractions
  namespace: Steeltoe.Common.Diagnostics
  syntax:
    content: public static DiagnosticsManager Instance { get; }
    parameters: []
    return:
      type: Steeltoe.Common.Diagnostics.DiagnosticsManager
    content.vb: Public Shared ReadOnly Property Instance As DiagnosticsManager
  overload: Steeltoe.Common.Diagnostics.DiagnosticsManager.Instance*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Steeltoe.Common.Diagnostics.DiagnosticsManager.#ctor(System.Collections.Generic.IEnumerable{Steeltoe.Common.Diagnostics.IPolledDiagnosticSource},System.Collections.Generic.IEnumerable{Steeltoe.Common.Diagnostics.IDiagnosticObserver},System.Collections.Generic.IEnumerable{System.Diagnostics.Tracing.EventListener},ILogger{Steeltoe.Common.Diagnostics.DiagnosticsManager})
  commentId: M:Steeltoe.Common.Diagnostics.DiagnosticsManager.#ctor(System.Collections.Generic.IEnumerable{Steeltoe.Common.Diagnostics.IPolledDiagnosticSource},System.Collections.Generic.IEnumerable{Steeltoe.Common.Diagnostics.IDiagnosticObserver},System.Collections.Generic.IEnumerable{System.Diagnostics.Tracing.EventListener},ILogger{Steeltoe.Common.Diagnostics.DiagnosticsManager})
  id: '#ctor(System.Collections.Generic.IEnumerable{Steeltoe.Common.Diagnostics.IPolledDiagnosticSource},System.Collections.Generic.IEnumerable{Steeltoe.Common.Diagnostics.IDiagnosticObserver},System.Collections.Generic.IEnumerable{System.Diagnostics.Tracing.EventListener},ILogger{Steeltoe.Common.Diagnostics.DiagnosticsManager})'
  parent: Steeltoe.Common.Diagnostics.DiagnosticsManager
  langs:
  - csharp
  - vb
  name: DiagnosticsManager(IEnumerable<IPolledDiagnosticSource>, IEnumerable<IDiagnosticObserver>, IEnumerable<EventListener>, ILogger<DiagnosticsManager>)
  nameWithType: DiagnosticsManager.DiagnosticsManager(IEnumerable<IPolledDiagnosticSource>, IEnumerable<IDiagnosticObserver>, IEnumerable<EventListener>, ILogger<DiagnosticsManager>)
  fullName: Steeltoe.Common.Diagnostics.DiagnosticsManager.DiagnosticsManager(System.Collections.Generic.IEnumerable<Steeltoe.Common.Diagnostics.IPolledDiagnosticSource>, System.Collections.Generic.IEnumerable<Steeltoe.Common.Diagnostics.IDiagnosticObserver>, System.Collections.Generic.IEnumerable<System.Diagnostics.Tracing.EventListener>, ILogger<Steeltoe.Common.Diagnostics.DiagnosticsManager>)
  type: Constructor
  source:
    remote:
      path: src/Management/src/Abstractions/Diagnostics/DiagnosticsManager.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: .ctor
    path: ../Steeltoe/src/Management/src/Abstractions/Diagnostics/DiagnosticsManager.cs
    startLine: 32
  assemblies:
  - Steeltoe.Management.Abstractions
  namespace: Steeltoe.Common.Diagnostics
  syntax:
    content: public DiagnosticsManager(IEnumerable<IPolledDiagnosticSource> polledSources, IEnumerable<IDiagnosticObserver> observers, IEnumerable<EventListener> eventListeners, ILogger<DiagnosticsManager> logger = null)
    parameters:
    - id: polledSources
      type: System.Collections.Generic.IEnumerable{Steeltoe.Common.Diagnostics.IPolledDiagnosticSource}
    - id: observers
      type: System.Collections.Generic.IEnumerable{Steeltoe.Common.Diagnostics.IDiagnosticObserver}
    - id: eventListeners
      type: System.Collections.Generic.IEnumerable{System.Diagnostics.Tracing.EventListener}
    - id: logger
      type: ILogger{Steeltoe.Common.Diagnostics.DiagnosticsManager}
    content.vb: Public Sub New(polledSources As IEnumerable(Of IPolledDiagnosticSource), observers As IEnumerable(Of IDiagnosticObserver), eventListeners As IEnumerable(Of EventListener), logger As ILogger(Of DiagnosticsManager) = Nothing)
  overload: Steeltoe.Common.Diagnostics.DiagnosticsManager.#ctor*
  nameWithType.vb: DiagnosticsManager.DiagnosticsManager(IEnumerable(Of IPolledDiagnosticSource), IEnumerable(Of IDiagnosticObserver), IEnumerable(Of EventListener), ILogger(Of DiagnosticsManager))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Steeltoe.Common.Diagnostics.DiagnosticsManager.DiagnosticsManager(System.Collections.Generic.IEnumerable(Of Steeltoe.Common.Diagnostics.IPolledDiagnosticSource), System.Collections.Generic.IEnumerable(Of Steeltoe.Common.Diagnostics.IDiagnosticObserver), System.Collections.Generic.IEnumerable(Of System.Diagnostics.Tracing.EventListener), ILogger(Of Steeltoe.Common.Diagnostics.DiagnosticsManager))
  name.vb: DiagnosticsManager(IEnumerable(Of IPolledDiagnosticSource), IEnumerable(Of IDiagnosticObserver), IEnumerable(Of EventListener), ILogger(Of DiagnosticsManager))
- uid: Steeltoe.Common.Diagnostics.DiagnosticsManager.Observers
  commentId: P:Steeltoe.Common.Diagnostics.DiagnosticsManager.Observers
  id: Observers
  parent: Steeltoe.Common.Diagnostics.DiagnosticsManager
  langs:
  - csharp
  - vb
  name: Observers
  nameWithType: DiagnosticsManager.Observers
  fullName: Steeltoe.Common.Diagnostics.DiagnosticsManager.Observers
  type: Property
  source:
    remote:
      path: src/Management/src/Abstractions/Diagnostics/DiagnosticsManager.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Observers
    path: ../Steeltoe/src/Management/src/Abstractions/Diagnostics/DiagnosticsManager.cs
    startLine: 61
  assemblies:
  - Steeltoe.Management.Abstractions
  namespace: Steeltoe.Common.Diagnostics
  syntax:
    content: public IList<IDiagnosticObserver> Observers { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IList{Steeltoe.Common.Diagnostics.IDiagnosticObserver}
    content.vb: Public ReadOnly Property Observers As IList(Of IDiagnosticObserver)
  overload: Steeltoe.Common.Diagnostics.DiagnosticsManager.Observers*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Steeltoe.Common.Diagnostics.DiagnosticsManager.Sources
  commentId: P:Steeltoe.Common.Diagnostics.DiagnosticsManager.Sources
  id: Sources
  parent: Steeltoe.Common.Diagnostics.DiagnosticsManager
  langs:
  - csharp
  - vb
  name: Sources
  nameWithType: DiagnosticsManager.Sources
  fullName: Steeltoe.Common.Diagnostics.DiagnosticsManager.Sources
  type: Property
  source:
    remote:
      path: src/Management/src/Abstractions/Diagnostics/DiagnosticsManager.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Sources
    path: ../Steeltoe/src/Management/src/Abstractions/Diagnostics/DiagnosticsManager.cs
    startLine: 63
  assemblies:
  - Steeltoe.Management.Abstractions
  namespace: Steeltoe.Common.Diagnostics
  syntax:
    content: public IList<IPolledDiagnosticSource> Sources { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IList{Steeltoe.Common.Diagnostics.IPolledDiagnosticSource}
    content.vb: Public ReadOnly Property Sources As IList(Of IPolledDiagnosticSource)
  overload: Steeltoe.Common.Diagnostics.DiagnosticsManager.Sources*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Steeltoe.Common.Diagnostics.DiagnosticsManager.OnCompleted
  commentId: M:Steeltoe.Common.Diagnostics.DiagnosticsManager.OnCompleted
  id: OnCompleted
  parent: Steeltoe.Common.Diagnostics.DiagnosticsManager
  langs:
  - csharp
  - vb
  name: OnCompleted()
  nameWithType: DiagnosticsManager.OnCompleted()
  fullName: Steeltoe.Common.Diagnostics.DiagnosticsManager.OnCompleted()
  type: Method
  source:
    remote:
      path: src/Management/src/Abstractions/Diagnostics/DiagnosticsManager.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: OnCompleted
    path: ../Steeltoe/src/Management/src/Abstractions/Diagnostics/DiagnosticsManager.cs
    startLine: 65
  assemblies:
  - Steeltoe.Management.Abstractions
  namespace: Steeltoe.Common.Diagnostics
  syntax:
    content: public void OnCompleted()
    content.vb: Public Sub OnCompleted
  overload: Steeltoe.Common.Diagnostics.DiagnosticsManager.OnCompleted*
  implements:
  - System.IObserver{System.Diagnostics.DiagnosticListener}.OnCompleted
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Steeltoe.Common.Diagnostics.DiagnosticsManager.OnError(System.Exception)
  commentId: M:Steeltoe.Common.Diagnostics.DiagnosticsManager.OnError(System.Exception)
  id: OnError(System.Exception)
  parent: Steeltoe.Common.Diagnostics.DiagnosticsManager
  langs:
  - csharp
  - vb
  name: OnError(Exception)
  nameWithType: DiagnosticsManager.OnError(Exception)
  fullName: Steeltoe.Common.Diagnostics.DiagnosticsManager.OnError(System.Exception)
  type: Method
  source:
    remote:
      path: src/Management/src/Abstractions/Diagnostics/DiagnosticsManager.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: OnError
    path: ../Steeltoe/src/Management/src/Abstractions/Diagnostics/DiagnosticsManager.cs
    startLine: 70
  assemblies:
  - Steeltoe.Management.Abstractions
  namespace: Steeltoe.Common.Diagnostics
  syntax:
    content: public void OnError(Exception error)
    parameters:
    - id: error
      type: System.Exception
    content.vb: Public Sub OnError(error As Exception)
  overload: Steeltoe.Common.Diagnostics.DiagnosticsManager.OnError*
  implements:
  - System.IObserver{System.Diagnostics.DiagnosticListener}.OnError(System.Exception)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Steeltoe.Common.Diagnostics.DiagnosticsManager.OnNext(System.Diagnostics.DiagnosticListener)
  commentId: M:Steeltoe.Common.Diagnostics.DiagnosticsManager.OnNext(System.Diagnostics.DiagnosticListener)
  id: OnNext(System.Diagnostics.DiagnosticListener)
  parent: Steeltoe.Common.Diagnostics.DiagnosticsManager
  langs:
  - csharp
  - vb
  name: OnNext(DiagnosticListener)
  nameWithType: DiagnosticsManager.OnNext(DiagnosticListener)
  fullName: Steeltoe.Common.Diagnostics.DiagnosticsManager.OnNext(System.Diagnostics.DiagnosticListener)
  type: Method
  source:
    remote:
      path: src/Management/src/Abstractions/Diagnostics/DiagnosticsManager.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: OnNext
    path: ../Steeltoe/src/Management/src/Abstractions/Diagnostics/DiagnosticsManager.cs
    startLine: 75
  assemblies:
  - Steeltoe.Management.Abstractions
  namespace: Steeltoe.Common.Diagnostics
  syntax:
    content: public void OnNext(DiagnosticListener value)
    parameters:
    - id: value
      type: System.Diagnostics.DiagnosticListener
    content.vb: Public Sub OnNext(value As DiagnosticListener)
  overload: Steeltoe.Common.Diagnostics.DiagnosticsManager.OnNext*
  implements:
  - System.IObserver{System.Diagnostics.DiagnosticListener}.OnNext(System.Diagnostics.DiagnosticListener)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Steeltoe.Common.Diagnostics.DiagnosticsManager.Start
  commentId: M:Steeltoe.Common.Diagnostics.DiagnosticsManager.Start
  id: Start
  parent: Steeltoe.Common.Diagnostics.DiagnosticsManager
  langs:
  - csharp
  - vb
  name: Start()
  nameWithType: DiagnosticsManager.Start()
  fullName: Steeltoe.Common.Diagnostics.DiagnosticsManager.Start()
  type: Method
  source:
    remote:
      path: src/Management/src/Abstractions/Diagnostics/DiagnosticsManager.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Start
    path: ../Steeltoe/src/Management/src/Abstractions/Diagnostics/DiagnosticsManager.cs
    startLine: 83
  assemblies:
  - Steeltoe.Management.Abstractions
  namespace: Steeltoe.Common.Diagnostics
  syntax:
    content: public void Start()
    content.vb: Public Sub Start
  overload: Steeltoe.Common.Diagnostics.DiagnosticsManager.Start*
  implements:
  - Steeltoe.Common.Diagnostics.IDiagnosticsManager.Start
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Steeltoe.Common.Diagnostics.DiagnosticsManager.Stop
  commentId: M:Steeltoe.Common.Diagnostics.DiagnosticsManager.Stop
  id: Stop
  parent: Steeltoe.Common.Diagnostics.DiagnosticsManager
  langs:
  - csharp
  - vb
  name: Stop()
  nameWithType: DiagnosticsManager.Stop()
  fullName: Steeltoe.Common.Diagnostics.DiagnosticsManager.Stop()
  type: Method
  source:
    remote:
      path: src/Management/src/Abstractions/Diagnostics/DiagnosticsManager.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Stop
    path: ../Steeltoe/src/Management/src/Abstractions/Diagnostics/DiagnosticsManager.cs
    startLine: 98
  assemblies:
  - Steeltoe.Management.Abstractions
  namespace: Steeltoe.Common.Diagnostics
  syntax:
    content: public void Stop()
    content.vb: Public Sub Stop
  overload: Steeltoe.Common.Diagnostics.DiagnosticsManager.Stop*
  implements:
  - Steeltoe.Common.Diagnostics.IDiagnosticsManager.Stop
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Steeltoe.Common.Diagnostics.DiagnosticsManager.Dispose
  commentId: M:Steeltoe.Common.Diagnostics.DiagnosticsManager.Dispose
  id: Dispose
  parent: Steeltoe.Common.Diagnostics.DiagnosticsManager
  langs:
  - csharp
  - vb
  name: Dispose()
  nameWithType: DiagnosticsManager.Dispose()
  fullName: Steeltoe.Common.Diagnostics.DiagnosticsManager.Dispose()
  type: Method
  source:
    remote:
      path: src/Management/src/Abstractions/Diagnostics/DiagnosticsManager.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Dispose
    path: ../Steeltoe/src/Management/src/Abstractions/Diagnostics/DiagnosticsManager.cs
    startLine: 113
  assemblies:
  - Steeltoe.Management.Abstractions
  namespace: Steeltoe.Common.Diagnostics
  syntax:
    content: public void Dispose()
    content.vb: Public Sub Dispose
  overload: Steeltoe.Common.Diagnostics.DiagnosticsManager.Dispose*
  implements:
  - System.IDisposable.Dispose
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Steeltoe.Common.Diagnostics.DiagnosticsManager.Dispose(System.Boolean)
  commentId: M:Steeltoe.Common.Diagnostics.DiagnosticsManager.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: Steeltoe.Common.Diagnostics.DiagnosticsManager
  langs:
  - csharp
  - vb
  name: Dispose(Boolean)
  nameWithType: DiagnosticsManager.Dispose(Boolean)
  fullName: Steeltoe.Common.Diagnostics.DiagnosticsManager.Dispose(System.Boolean)
  type: Method
  source:
    remote:
      path: src/Management/src/Abstractions/Diagnostics/DiagnosticsManager.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Dispose
    path: ../Steeltoe/src/Management/src/Abstractions/Diagnostics/DiagnosticsManager.cs
    startLine: 119
  assemblies:
  - Steeltoe.Management.Abstractions
  namespace: Steeltoe.Common.Diagnostics
  syntax:
    content: protected virtual void Dispose(bool disposing)
    parameters:
    - id: disposing
      type: System.Boolean
    content.vb: Protected Overridable Sub Dispose(disposing As Boolean)
  overload: Steeltoe.Common.Diagnostics.DiagnosticsManager.Dispose*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: Steeltoe.Common.Diagnostics.DiagnosticsManager.Finalize
  commentId: M:Steeltoe.Common.Diagnostics.DiagnosticsManager.Finalize
  id: Finalize
  parent: Steeltoe.Common.Diagnostics.DiagnosticsManager
  langs:
  - csharp
  - vb
  name: Finalize()
  nameWithType: DiagnosticsManager.Finalize()
  fullName: Steeltoe.Common.Diagnostics.DiagnosticsManager.Finalize()
  type: Method
  source:
    remote:
      path: src/Management/src/Abstractions/Diagnostics/DiagnosticsManager.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Finalize
    path: ../Steeltoe/src/Management/src/Abstractions/Diagnostics/DiagnosticsManager.cs
    startLine: 145
  assemblies:
  - Steeltoe.Management.Abstractions
  namespace: Steeltoe.Common.Diagnostics
  syntax:
    content: protected void Finalize()
    content.vb: Protected Sub Finalize
  overload: Steeltoe.Common.Diagnostics.DiagnosticsManager.Finalize*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
references:
- uid: Steeltoe.Common.Diagnostics
  commentId: N:Steeltoe.Common.Diagnostics
  name: Steeltoe.Common.Diagnostics
  nameWithType: Steeltoe.Common.Diagnostics
  fullName: Steeltoe.Common.Diagnostics
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.IObserver{System.Diagnostics.DiagnosticListener}
  commentId: T:System.IObserver{System.Diagnostics.DiagnosticListener}
  parent: System
  definition: System.IObserver`1
  name: IObserver<DiagnosticListener>
  nameWithType: IObserver<DiagnosticListener>
  fullName: System.IObserver<System.Diagnostics.DiagnosticListener>
  nameWithType.vb: IObserver(Of DiagnosticListener)
  fullName.vb: System.IObserver(Of System.Diagnostics.DiagnosticListener)
  name.vb: IObserver(Of DiagnosticListener)
  spec.csharp:
  - uid: System.IObserver`1
    name: IObserver
    nameWithType: IObserver
    fullName: System.IObserver
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Diagnostics.DiagnosticListener
    name: DiagnosticListener
    nameWithType: DiagnosticListener
    fullName: System.Diagnostics.DiagnosticListener
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IObserver`1
    name: IObserver
    nameWithType: IObserver
    fullName: System.IObserver
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Diagnostics.DiagnosticListener
    name: DiagnosticListener
    nameWithType: DiagnosticListener
    fullName: System.Diagnostics.DiagnosticListener
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: Steeltoe.Common.Diagnostics.IDiagnosticsManager
  commentId: T:Steeltoe.Common.Diagnostics.IDiagnosticsManager
  parent: Steeltoe.Common.Diagnostics
  name: IDiagnosticsManager
  nameWithType: IDiagnosticsManager
  fullName: Steeltoe.Common.Diagnostics.IDiagnosticsManager
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.IObserver`1
  commentId: T:System.IObserver`1
  isExternal: true
  name: IObserver<T>
  nameWithType: IObserver<T>
  fullName: System.IObserver<T>
  nameWithType.vb: IObserver(Of T)
  fullName.vb: System.IObserver(Of T)
  name.vb: IObserver(Of T)
  spec.csharp:
  - uid: System.IObserver`1
    name: IObserver
    nameWithType: IObserver
    fullName: System.IObserver
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IObserver`1
    name: IObserver
    nameWithType: IObserver
    fullName: System.IObserver
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Common.Diagnostics.DiagnosticsManager.Instance*
  commentId: Overload:Steeltoe.Common.Diagnostics.DiagnosticsManager.Instance
  name: Instance
  nameWithType: DiagnosticsManager.Instance
  fullName: Steeltoe.Common.Diagnostics.DiagnosticsManager.Instance
- uid: Steeltoe.Common.Diagnostics.DiagnosticsManager
  commentId: T:Steeltoe.Common.Diagnostics.DiagnosticsManager
  parent: Steeltoe.Common.Diagnostics
  name: DiagnosticsManager
  nameWithType: DiagnosticsManager
  fullName: Steeltoe.Common.Diagnostics.DiagnosticsManager
- uid: Steeltoe.Common.Diagnostics.DiagnosticsManager.#ctor*
  commentId: Overload:Steeltoe.Common.Diagnostics.DiagnosticsManager.#ctor
  name: DiagnosticsManager
  nameWithType: DiagnosticsManager.DiagnosticsManager
  fullName: Steeltoe.Common.Diagnostics.DiagnosticsManager.DiagnosticsManager
- uid: System.Collections.Generic.IEnumerable{Steeltoe.Common.Diagnostics.IPolledDiagnosticSource}
  commentId: T:System.Collections.Generic.IEnumerable{Steeltoe.Common.Diagnostics.IPolledDiagnosticSource}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<IPolledDiagnosticSource>
  nameWithType: IEnumerable<IPolledDiagnosticSource>
  fullName: System.Collections.Generic.IEnumerable<Steeltoe.Common.Diagnostics.IPolledDiagnosticSource>
  nameWithType.vb: IEnumerable(Of IPolledDiagnosticSource)
  fullName.vb: System.Collections.Generic.IEnumerable(Of Steeltoe.Common.Diagnostics.IPolledDiagnosticSource)
  name.vb: IEnumerable(Of IPolledDiagnosticSource)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Steeltoe.Common.Diagnostics.IPolledDiagnosticSource
    name: IPolledDiagnosticSource
    nameWithType: IPolledDiagnosticSource
    fullName: Steeltoe.Common.Diagnostics.IPolledDiagnosticSource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Steeltoe.Common.Diagnostics.IPolledDiagnosticSource
    name: IPolledDiagnosticSource
    nameWithType: IPolledDiagnosticSource
    fullName: Steeltoe.Common.Diagnostics.IPolledDiagnosticSource
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{Steeltoe.Common.Diagnostics.IDiagnosticObserver}
  commentId: T:System.Collections.Generic.IEnumerable{Steeltoe.Common.Diagnostics.IDiagnosticObserver}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<IDiagnosticObserver>
  nameWithType: IEnumerable<IDiagnosticObserver>
  fullName: System.Collections.Generic.IEnumerable<Steeltoe.Common.Diagnostics.IDiagnosticObserver>
  nameWithType.vb: IEnumerable(Of IDiagnosticObserver)
  fullName.vb: System.Collections.Generic.IEnumerable(Of Steeltoe.Common.Diagnostics.IDiagnosticObserver)
  name.vb: IEnumerable(Of IDiagnosticObserver)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Steeltoe.Common.Diagnostics.IDiagnosticObserver
    name: IDiagnosticObserver
    nameWithType: IDiagnosticObserver
    fullName: Steeltoe.Common.Diagnostics.IDiagnosticObserver
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Steeltoe.Common.Diagnostics.IDiagnosticObserver
    name: IDiagnosticObserver
    nameWithType: IDiagnosticObserver
    fullName: Steeltoe.Common.Diagnostics.IDiagnosticObserver
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{System.Diagnostics.Tracing.EventListener}
  commentId: T:System.Collections.Generic.IEnumerable{System.Diagnostics.Tracing.EventListener}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<EventListener>
  nameWithType: IEnumerable<EventListener>
  fullName: System.Collections.Generic.IEnumerable<System.Diagnostics.Tracing.EventListener>
  nameWithType.vb: IEnumerable(Of EventListener)
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.Diagnostics.Tracing.EventListener)
  name.vb: IEnumerable(Of EventListener)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Diagnostics.Tracing.EventListener
    name: EventListener
    nameWithType: EventListener
    fullName: System.Diagnostics.Tracing.EventListener
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Diagnostics.Tracing.EventListener
    name: EventListener
    nameWithType: EventListener
    fullName: System.Diagnostics.Tracing.EventListener
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: ILogger{Steeltoe.Common.Diagnostics.DiagnosticsManager}
  commentId: '!:ILogger{Steeltoe.Common.Diagnostics.DiagnosticsManager}'
  definition: ILogger`1
  name: ILogger<DiagnosticsManager>
  nameWithType: ILogger<DiagnosticsManager>
  fullName: ILogger<Steeltoe.Common.Diagnostics.DiagnosticsManager>
  nameWithType.vb: ILogger(Of DiagnosticsManager)
  fullName.vb: ILogger(Of Steeltoe.Common.Diagnostics.DiagnosticsManager)
  name.vb: ILogger(Of DiagnosticsManager)
  spec.csharp:
  - uid: ILogger`1
    name: ILogger
    nameWithType: ILogger
    fullName: ILogger
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Steeltoe.Common.Diagnostics.DiagnosticsManager
    name: DiagnosticsManager
    nameWithType: DiagnosticsManager
    fullName: Steeltoe.Common.Diagnostics.DiagnosticsManager
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: ILogger`1
    name: ILogger
    nameWithType: ILogger
    fullName: ILogger
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Steeltoe.Common.Diagnostics.DiagnosticsManager
    name: DiagnosticsManager
    nameWithType: DiagnosticsManager
    fullName: Steeltoe.Common.Diagnostics.DiagnosticsManager
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: ILogger`1
  isExternal: true
  name: ILogger<>
  nameWithType: ILogger<>
  fullName: ILogger<>
  nameWithType.vb: ILogger(Of )
  fullName.vb: ILogger(Of )
  name.vb: ILogger(Of )
  spec.csharp:
  - uid: ILogger`1
    name: ILogger
    nameWithType: ILogger
    fullName: ILogger
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: ILogger`1
    name: ILogger
    nameWithType: ILogger
    fullName: ILogger
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Common.Diagnostics.DiagnosticsManager.Observers*
  commentId: Overload:Steeltoe.Common.Diagnostics.DiagnosticsManager.Observers
  name: Observers
  nameWithType: DiagnosticsManager.Observers
  fullName: Steeltoe.Common.Diagnostics.DiagnosticsManager.Observers
- uid: System.Collections.Generic.IList{Steeltoe.Common.Diagnostics.IDiagnosticObserver}
  commentId: T:System.Collections.Generic.IList{Steeltoe.Common.Diagnostics.IDiagnosticObserver}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<IDiagnosticObserver>
  nameWithType: IList<IDiagnosticObserver>
  fullName: System.Collections.Generic.IList<Steeltoe.Common.Diagnostics.IDiagnosticObserver>
  nameWithType.vb: IList(Of IDiagnosticObserver)
  fullName.vb: System.Collections.Generic.IList(Of Steeltoe.Common.Diagnostics.IDiagnosticObserver)
  name.vb: IList(Of IDiagnosticObserver)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Steeltoe.Common.Diagnostics.IDiagnosticObserver
    name: IDiagnosticObserver
    nameWithType: IDiagnosticObserver
    fullName: Steeltoe.Common.Diagnostics.IDiagnosticObserver
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Steeltoe.Common.Diagnostics.IDiagnosticObserver
    name: IDiagnosticObserver
    nameWithType: IDiagnosticObserver
    fullName: Steeltoe.Common.Diagnostics.IDiagnosticObserver
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullName.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Common.Diagnostics.DiagnosticsManager.Sources*
  commentId: Overload:Steeltoe.Common.Diagnostics.DiagnosticsManager.Sources
  name: Sources
  nameWithType: DiagnosticsManager.Sources
  fullName: Steeltoe.Common.Diagnostics.DiagnosticsManager.Sources
- uid: System.Collections.Generic.IList{Steeltoe.Common.Diagnostics.IPolledDiagnosticSource}
  commentId: T:System.Collections.Generic.IList{Steeltoe.Common.Diagnostics.IPolledDiagnosticSource}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<IPolledDiagnosticSource>
  nameWithType: IList<IPolledDiagnosticSource>
  fullName: System.Collections.Generic.IList<Steeltoe.Common.Diagnostics.IPolledDiagnosticSource>
  nameWithType.vb: IList(Of IPolledDiagnosticSource)
  fullName.vb: System.Collections.Generic.IList(Of Steeltoe.Common.Diagnostics.IPolledDiagnosticSource)
  name.vb: IList(Of IPolledDiagnosticSource)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Steeltoe.Common.Diagnostics.IPolledDiagnosticSource
    name: IPolledDiagnosticSource
    nameWithType: IPolledDiagnosticSource
    fullName: Steeltoe.Common.Diagnostics.IPolledDiagnosticSource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Steeltoe.Common.Diagnostics.IPolledDiagnosticSource
    name: IPolledDiagnosticSource
    nameWithType: IPolledDiagnosticSource
    fullName: Steeltoe.Common.Diagnostics.IPolledDiagnosticSource
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Common.Diagnostics.DiagnosticsManager.OnCompleted*
  commentId: Overload:Steeltoe.Common.Diagnostics.DiagnosticsManager.OnCompleted
  name: OnCompleted
  nameWithType: DiagnosticsManager.OnCompleted
  fullName: Steeltoe.Common.Diagnostics.DiagnosticsManager.OnCompleted
- uid: System.IObserver{System.Diagnostics.DiagnosticListener}.OnCompleted
  commentId: M:System.IObserver{System.Diagnostics.DiagnosticListener}.OnCompleted
  parent: System.IObserver{System.Diagnostics.DiagnosticListener}
  definition: System.IObserver`1.OnCompleted
  name: OnCompleted()
  nameWithType: IObserver<DiagnosticListener>.OnCompleted()
  fullName: System.IObserver<System.Diagnostics.DiagnosticListener>.OnCompleted()
  nameWithType.vb: IObserver(Of DiagnosticListener).OnCompleted()
  fullName.vb: System.IObserver(Of System.Diagnostics.DiagnosticListener).OnCompleted()
  spec.csharp:
  - uid: System.IObserver`1.OnCompleted
    name: OnCompleted
    nameWithType: IObserver<DiagnosticListener>.OnCompleted
    fullName: System.IObserver<System.Diagnostics.DiagnosticListener>.OnCompleted
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IObserver`1.OnCompleted
    name: OnCompleted
    nameWithType: IObserver(Of DiagnosticListener).OnCompleted
    fullName: System.IObserver(Of System.Diagnostics.DiagnosticListener).OnCompleted
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IObserver`1.OnCompleted
  commentId: M:System.IObserver`1.OnCompleted
  isExternal: true
  name: OnCompleted()
  nameWithType: IObserver<T>.OnCompleted()
  fullName: System.IObserver<T>.OnCompleted()
  nameWithType.vb: IObserver(Of T).OnCompleted()
  fullName.vb: System.IObserver(Of T).OnCompleted()
  spec.csharp:
  - uid: System.IObserver`1.OnCompleted
    name: OnCompleted
    nameWithType: IObserver<T>.OnCompleted
    fullName: System.IObserver<T>.OnCompleted
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IObserver`1.OnCompleted
    name: OnCompleted
    nameWithType: IObserver(Of T).OnCompleted
    fullName: System.IObserver(Of T).OnCompleted
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Common.Diagnostics.DiagnosticsManager.OnError*
  commentId: Overload:Steeltoe.Common.Diagnostics.DiagnosticsManager.OnError
  name: OnError
  nameWithType: DiagnosticsManager.OnError
  fullName: Steeltoe.Common.Diagnostics.DiagnosticsManager.OnError
- uid: System.IObserver{System.Diagnostics.DiagnosticListener}.OnError(System.Exception)
  commentId: M:System.IObserver{System.Diagnostics.DiagnosticListener}.OnError(System.Exception)
  parent: System.IObserver{System.Diagnostics.DiagnosticListener}
  definition: System.IObserver`1.OnError(System.Exception)
  name: OnError(Exception)
  nameWithType: IObserver<DiagnosticListener>.OnError(Exception)
  fullName: System.IObserver<System.Diagnostics.DiagnosticListener>.OnError(System.Exception)
  nameWithType.vb: IObserver(Of DiagnosticListener).OnError(Exception)
  fullName.vb: System.IObserver(Of System.Diagnostics.DiagnosticListener).OnError(System.Exception)
  spec.csharp:
  - uid: System.IObserver`1.OnError(System.Exception)
    name: OnError
    nameWithType: IObserver<DiagnosticListener>.OnError
    fullName: System.IObserver<System.Diagnostics.DiagnosticListener>.OnError
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IObserver`1.OnError(System.Exception)
    name: OnError
    nameWithType: IObserver(Of DiagnosticListener).OnError
    fullName: System.IObserver(Of System.Diagnostics.DiagnosticListener).OnError
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Exception
  commentId: T:System.Exception
  parent: System
  isExternal: true
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: System.IObserver`1.OnError(System.Exception)
  commentId: M:System.IObserver`1.OnError(System.Exception)
  isExternal: true
  name: OnError(Exception)
  nameWithType: IObserver<T>.OnError(Exception)
  fullName: System.IObserver<T>.OnError(System.Exception)
  nameWithType.vb: IObserver(Of T).OnError(Exception)
  fullName.vb: System.IObserver(Of T).OnError(System.Exception)
  spec.csharp:
  - uid: System.IObserver`1.OnError(System.Exception)
    name: OnError
    nameWithType: IObserver<T>.OnError
    fullName: System.IObserver<T>.OnError
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IObserver`1.OnError(System.Exception)
    name: OnError
    nameWithType: IObserver(Of T).OnError
    fullName: System.IObserver(Of T).OnError
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Common.Diagnostics.DiagnosticsManager.OnNext*
  commentId: Overload:Steeltoe.Common.Diagnostics.DiagnosticsManager.OnNext
  name: OnNext
  nameWithType: DiagnosticsManager.OnNext
  fullName: Steeltoe.Common.Diagnostics.DiagnosticsManager.OnNext
- uid: System.IObserver{System.Diagnostics.DiagnosticListener}.OnNext(System.Diagnostics.DiagnosticListener)
  commentId: M:System.IObserver{System.Diagnostics.DiagnosticListener}.OnNext(System.Diagnostics.DiagnosticListener)
  parent: System.IObserver{System.Diagnostics.DiagnosticListener}
  definition: System.IObserver`1.OnNext(`0)
  name: OnNext(DiagnosticListener)
  nameWithType: IObserver<DiagnosticListener>.OnNext(DiagnosticListener)
  fullName: System.IObserver<System.Diagnostics.DiagnosticListener>.OnNext(System.Diagnostics.DiagnosticListener)
  nameWithType.vb: IObserver(Of DiagnosticListener).OnNext(DiagnosticListener)
  fullName.vb: System.IObserver(Of System.Diagnostics.DiagnosticListener).OnNext(System.Diagnostics.DiagnosticListener)
  spec.csharp:
  - uid: System.IObserver`1.OnNext(`0)
    name: OnNext
    nameWithType: IObserver<DiagnosticListener>.OnNext
    fullName: System.IObserver<System.Diagnostics.DiagnosticListener>.OnNext
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Diagnostics.DiagnosticListener
    name: DiagnosticListener
    nameWithType: DiagnosticListener
    fullName: System.Diagnostics.DiagnosticListener
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IObserver`1.OnNext(`0)
    name: OnNext
    nameWithType: IObserver(Of DiagnosticListener).OnNext
    fullName: System.IObserver(Of System.Diagnostics.DiagnosticListener).OnNext
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Diagnostics.DiagnosticListener
    name: DiagnosticListener
    nameWithType: DiagnosticListener
    fullName: System.Diagnostics.DiagnosticListener
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Diagnostics.DiagnosticListener
  commentId: T:System.Diagnostics.DiagnosticListener
  parent: System.Diagnostics
  isExternal: true
  name: DiagnosticListener
  nameWithType: DiagnosticListener
  fullName: System.Diagnostics.DiagnosticListener
- uid: System.IObserver`1.OnNext(`0)
  commentId: M:System.IObserver`1.OnNext(`0)
  isExternal: true
  name: OnNext(T)
  nameWithType: IObserver<T>.OnNext(T)
  fullName: System.IObserver<T>.OnNext(T)
  nameWithType.vb: IObserver(Of T).OnNext(T)
  fullName.vb: System.IObserver(Of T).OnNext(T)
  spec.csharp:
  - uid: System.IObserver`1.OnNext(`0)
    name: OnNext
    nameWithType: IObserver<T>.OnNext
    fullName: System.IObserver<T>.OnNext
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IObserver`1.OnNext(`0)
    name: OnNext
    nameWithType: IObserver(Of T).OnNext
    fullName: System.IObserver(Of T).OnNext
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Diagnostics
  commentId: N:System.Diagnostics
  isExternal: true
  name: System.Diagnostics
  nameWithType: System.Diagnostics
  fullName: System.Diagnostics
- uid: Steeltoe.Common.Diagnostics.DiagnosticsManager.Start*
  commentId: Overload:Steeltoe.Common.Diagnostics.DiagnosticsManager.Start
  name: Start
  nameWithType: DiagnosticsManager.Start
  fullName: Steeltoe.Common.Diagnostics.DiagnosticsManager.Start
- uid: Steeltoe.Common.Diagnostics.IDiagnosticsManager.Start
  commentId: M:Steeltoe.Common.Diagnostics.IDiagnosticsManager.Start
  parent: Steeltoe.Common.Diagnostics.IDiagnosticsManager
  name: Start()
  nameWithType: IDiagnosticsManager.Start()
  fullName: Steeltoe.Common.Diagnostics.IDiagnosticsManager.Start()
  spec.csharp:
  - uid: Steeltoe.Common.Diagnostics.IDiagnosticsManager.Start
    name: Start
    nameWithType: IDiagnosticsManager.Start
    fullName: Steeltoe.Common.Diagnostics.IDiagnosticsManager.Start
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Common.Diagnostics.IDiagnosticsManager.Start
    name: Start
    nameWithType: IDiagnosticsManager.Start
    fullName: Steeltoe.Common.Diagnostics.IDiagnosticsManager.Start
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Common.Diagnostics.DiagnosticsManager.Stop*
  commentId: Overload:Steeltoe.Common.Diagnostics.DiagnosticsManager.Stop
  name: Stop
  nameWithType: DiagnosticsManager.Stop
  fullName: Steeltoe.Common.Diagnostics.DiagnosticsManager.Stop
- uid: Steeltoe.Common.Diagnostics.IDiagnosticsManager.Stop
  commentId: M:Steeltoe.Common.Diagnostics.IDiagnosticsManager.Stop
  parent: Steeltoe.Common.Diagnostics.IDiagnosticsManager
  name: Stop()
  nameWithType: IDiagnosticsManager.Stop()
  fullName: Steeltoe.Common.Diagnostics.IDiagnosticsManager.Stop()
  spec.csharp:
  - uid: Steeltoe.Common.Diagnostics.IDiagnosticsManager.Stop
    name: Stop
    nameWithType: IDiagnosticsManager.Stop
    fullName: Steeltoe.Common.Diagnostics.IDiagnosticsManager.Stop
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Common.Diagnostics.IDiagnosticsManager.Stop
    name: Stop
    nameWithType: IDiagnosticsManager.Stop
    fullName: Steeltoe.Common.Diagnostics.IDiagnosticsManager.Stop
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Common.Diagnostics.DiagnosticsManager.Dispose*
  commentId: Overload:Steeltoe.Common.Diagnostics.DiagnosticsManager.Dispose
  name: Dispose
  nameWithType: DiagnosticsManager.Dispose
  fullName: Steeltoe.Common.Diagnostics.DiagnosticsManager.Dispose
- uid: System.IDisposable.Dispose
  commentId: M:System.IDisposable.Dispose
  parent: System.IDisposable
  isExternal: true
  name: Dispose()
  nameWithType: IDisposable.Dispose()
  fullName: System.IDisposable.Dispose()
  spec.csharp:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Steeltoe.Common.Diagnostics.DiagnosticsManager.Finalize*
  commentId: Overload:Steeltoe.Common.Diagnostics.DiagnosticsManager.Finalize
  name: Finalize
  nameWithType: DiagnosticsManager.Finalize
  fullName: Steeltoe.Common.Diagnostics.DiagnosticsManager.Finalize
