### YamlMime:ManagedReference
items:
- uid: Steeltoe.Common.Util.MimeTypeUtils
  commentId: T:Steeltoe.Common.Util.MimeTypeUtils
  id: MimeTypeUtils
  parent: Steeltoe.Common.Util
  children:
  - Steeltoe.Common.Util.MimeTypeUtils.ALL
  - Steeltoe.Common.Util.MimeTypeUtils.ALL_VALUE
  - Steeltoe.Common.Util.MimeTypeUtils.APPLICATION_JSON
  - Steeltoe.Common.Util.MimeTypeUtils.APPLICATION_JSON_VALUE
  - Steeltoe.Common.Util.MimeTypeUtils.APPLICATION_OCTET_STREAM
  - Steeltoe.Common.Util.MimeTypeUtils.APPLICATION_OCTET_STREAM_VALUE
  - Steeltoe.Common.Util.MimeTypeUtils.APPLICATION_XML
  - Steeltoe.Common.Util.MimeTypeUtils.APPLICATION_XML_VALUE
  - Steeltoe.Common.Util.MimeTypeUtils.GenerateMultipartBoundary
  - Steeltoe.Common.Util.MimeTypeUtils.GenerateMultipartBoundaryString
  - Steeltoe.Common.Util.MimeTypeUtils.IMAGE_GIF
  - Steeltoe.Common.Util.MimeTypeUtils.IMAGE_GIF_VALUE
  - Steeltoe.Common.Util.MimeTypeUtils.IMAGE_JPEG
  - Steeltoe.Common.Util.MimeTypeUtils.IMAGE_JPEG_VALUE
  - Steeltoe.Common.Util.MimeTypeUtils.IMAGE_PNG
  - Steeltoe.Common.Util.MimeTypeUtils.IMAGE_PNG_VALUE
  - Steeltoe.Common.Util.MimeTypeUtils.ParseMimeType(System.String)
  - Steeltoe.Common.Util.MimeTypeUtils.ParseMimeTypes(System.String)
  - Steeltoe.Common.Util.MimeTypeUtils.SortBySpecificity(System.Collections.Generic.List{Steeltoe.Common.Util.MimeType})
  - Steeltoe.Common.Util.MimeTypeUtils.SPECIFICITY_COMPARATOR
  - Steeltoe.Common.Util.MimeTypeUtils.TEXT_HTML
  - Steeltoe.Common.Util.MimeTypeUtils.TEXT_HTML_VALUE
  - Steeltoe.Common.Util.MimeTypeUtils.TEXT_PLAIN
  - Steeltoe.Common.Util.MimeTypeUtils.TEXT_PLAIN_VALUE
  - Steeltoe.Common.Util.MimeTypeUtils.TEXT_XML
  - Steeltoe.Common.Util.MimeTypeUtils.TEXT_XML_VALUE
  - Steeltoe.Common.Util.MimeTypeUtils.Tokenize(System.String)
  - Steeltoe.Common.Util.MimeTypeUtils.Tostring(System.Collections.Generic.ICollection{Steeltoe.Common.Util.MimeType})
  langs:
  - csharp
  - vb
  name: MimeTypeUtils
  nameWithType: MimeTypeUtils
  fullName: Steeltoe.Common.Util.MimeTypeUtils
  type: Class
  source:
    remote:
      path: src/Common/src/Common/Util/MimeTypeUtils.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: MimeTypeUtils
    path: ../Steeltoe/src/Common/src/Common/Util/MimeTypeUtils.cs
    startLine: 11
  assemblies:
  - Steeltoe.Common
  namespace: Steeltoe.Common.Util
  syntax:
    content: public static class MimeTypeUtils
    content.vb: Public Module MimeTypeUtils
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Steeltoe.Common.Util.MimeTypeUtils.SPECIFICITY_COMPARATOR
  commentId: F:Steeltoe.Common.Util.MimeTypeUtils.SPECIFICITY_COMPARATOR
  id: SPECIFICITY_COMPARATOR
  parent: Steeltoe.Common.Util.MimeTypeUtils
  langs:
  - csharp
  - vb
  name: SPECIFICITY_COMPARATOR
  nameWithType: MimeTypeUtils.SPECIFICITY_COMPARATOR
  fullName: Steeltoe.Common.Util.MimeTypeUtils.SPECIFICITY_COMPARATOR
  type: Field
  source:
    remote:
      path: src/Common/src/Common/Util/MimeTypeUtils.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: SPECIFICITY_COMPARATOR
    path: ../Steeltoe/src/Common/src/Common/Util/MimeTypeUtils.cs
    startLine: 13
  assemblies:
  - Steeltoe.Common
  namespace: Steeltoe.Common.Util
  syntax:
    content: public static readonly IComparer<MimeType> SPECIFICITY_COMPARATOR
    return:
      type: System.Collections.Generic.IComparer{Steeltoe.Common.Util.MimeType}
    content.vb: Public Shared ReadOnly SPECIFICITY_COMPARATOR As IComparer(Of MimeType)
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Steeltoe.Common.Util.MimeTypeUtils.ALL
  commentId: F:Steeltoe.Common.Util.MimeTypeUtils.ALL
  id: ALL
  parent: Steeltoe.Common.Util.MimeTypeUtils
  langs:
  - csharp
  - vb
  name: ALL
  nameWithType: MimeTypeUtils.ALL
  fullName: Steeltoe.Common.Util.MimeTypeUtils.ALL
  type: Field
  source:
    remote:
      path: src/Common/src/Common/Util/MimeTypeUtils.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: ALL
    path: ../Steeltoe/src/Common/src/Common/Util/MimeTypeUtils.cs
    startLine: 14
  assemblies:
  - Steeltoe.Common
  namespace: Steeltoe.Common.Util
  syntax:
    content: public static readonly MimeType ALL
    return:
      type: Steeltoe.Common.Util.MimeType
    content.vb: Public Shared ReadOnly ALL As MimeType
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Steeltoe.Common.Util.MimeTypeUtils.ALL_VALUE
  commentId: F:Steeltoe.Common.Util.MimeTypeUtils.ALL_VALUE
  id: ALL_VALUE
  parent: Steeltoe.Common.Util.MimeTypeUtils
  langs:
  - csharp
  - vb
  name: ALL_VALUE
  nameWithType: MimeTypeUtils.ALL_VALUE
  fullName: Steeltoe.Common.Util.MimeTypeUtils.ALL_VALUE
  type: Field
  source:
    remote:
      path: src/Common/src/Common/Util/MimeTypeUtils.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: ALL_VALUE
    path: ../Steeltoe/src/Common/src/Common/Util/MimeTypeUtils.cs
    startLine: 15
  assemblies:
  - Steeltoe.Common
  namespace: Steeltoe.Common.Util
  syntax:
    content: public static readonly string ALL_VALUE
    return:
      type: System.String
    content.vb: Public Shared ReadOnly ALL_VALUE As String
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Steeltoe.Common.Util.MimeTypeUtils.APPLICATION_JSON
  commentId: F:Steeltoe.Common.Util.MimeTypeUtils.APPLICATION_JSON
  id: APPLICATION_JSON
  parent: Steeltoe.Common.Util.MimeTypeUtils
  langs:
  - csharp
  - vb
  name: APPLICATION_JSON
  nameWithType: MimeTypeUtils.APPLICATION_JSON
  fullName: Steeltoe.Common.Util.MimeTypeUtils.APPLICATION_JSON
  type: Field
  source:
    remote:
      path: src/Common/src/Common/Util/MimeTypeUtils.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: APPLICATION_JSON
    path: ../Steeltoe/src/Common/src/Common/Util/MimeTypeUtils.cs
    startLine: 16
  assemblies:
  - Steeltoe.Common
  namespace: Steeltoe.Common.Util
  syntax:
    content: public static readonly MimeType APPLICATION_JSON
    return:
      type: Steeltoe.Common.Util.MimeType
    content.vb: Public Shared ReadOnly APPLICATION_JSON As MimeType
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Steeltoe.Common.Util.MimeTypeUtils.APPLICATION_JSON_VALUE
  commentId: F:Steeltoe.Common.Util.MimeTypeUtils.APPLICATION_JSON_VALUE
  id: APPLICATION_JSON_VALUE
  parent: Steeltoe.Common.Util.MimeTypeUtils
  langs:
  - csharp
  - vb
  name: APPLICATION_JSON_VALUE
  nameWithType: MimeTypeUtils.APPLICATION_JSON_VALUE
  fullName: Steeltoe.Common.Util.MimeTypeUtils.APPLICATION_JSON_VALUE
  type: Field
  source:
    remote:
      path: src/Common/src/Common/Util/MimeTypeUtils.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: APPLICATION_JSON_VALUE
    path: ../Steeltoe/src/Common/src/Common/Util/MimeTypeUtils.cs
    startLine: 17
  assemblies:
  - Steeltoe.Common
  namespace: Steeltoe.Common.Util
  syntax:
    content: public static readonly string APPLICATION_JSON_VALUE
    return:
      type: System.String
    content.vb: Public Shared ReadOnly APPLICATION_JSON_VALUE As String
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Steeltoe.Common.Util.MimeTypeUtils.APPLICATION_OCTET_STREAM
  commentId: F:Steeltoe.Common.Util.MimeTypeUtils.APPLICATION_OCTET_STREAM
  id: APPLICATION_OCTET_STREAM
  parent: Steeltoe.Common.Util.MimeTypeUtils
  langs:
  - csharp
  - vb
  name: APPLICATION_OCTET_STREAM
  nameWithType: MimeTypeUtils.APPLICATION_OCTET_STREAM
  fullName: Steeltoe.Common.Util.MimeTypeUtils.APPLICATION_OCTET_STREAM
  type: Field
  source:
    remote:
      path: src/Common/src/Common/Util/MimeTypeUtils.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: APPLICATION_OCTET_STREAM
    path: ../Steeltoe/src/Common/src/Common/Util/MimeTypeUtils.cs
    startLine: 18
  assemblies:
  - Steeltoe.Common
  namespace: Steeltoe.Common.Util
  syntax:
    content: public static readonly MimeType APPLICATION_OCTET_STREAM
    return:
      type: Steeltoe.Common.Util.MimeType
    content.vb: Public Shared ReadOnly APPLICATION_OCTET_STREAM As MimeType
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Steeltoe.Common.Util.MimeTypeUtils.APPLICATION_OCTET_STREAM_VALUE
  commentId: F:Steeltoe.Common.Util.MimeTypeUtils.APPLICATION_OCTET_STREAM_VALUE
  id: APPLICATION_OCTET_STREAM_VALUE
  parent: Steeltoe.Common.Util.MimeTypeUtils
  langs:
  - csharp
  - vb
  name: APPLICATION_OCTET_STREAM_VALUE
  nameWithType: MimeTypeUtils.APPLICATION_OCTET_STREAM_VALUE
  fullName: Steeltoe.Common.Util.MimeTypeUtils.APPLICATION_OCTET_STREAM_VALUE
  type: Field
  source:
    remote:
      path: src/Common/src/Common/Util/MimeTypeUtils.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: APPLICATION_OCTET_STREAM_VALUE
    path: ../Steeltoe/src/Common/src/Common/Util/MimeTypeUtils.cs
    startLine: 19
  assemblies:
  - Steeltoe.Common
  namespace: Steeltoe.Common.Util
  syntax:
    content: public static readonly string APPLICATION_OCTET_STREAM_VALUE
    return:
      type: System.String
    content.vb: Public Shared ReadOnly APPLICATION_OCTET_STREAM_VALUE As String
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Steeltoe.Common.Util.MimeTypeUtils.APPLICATION_XML
  commentId: F:Steeltoe.Common.Util.MimeTypeUtils.APPLICATION_XML
  id: APPLICATION_XML
  parent: Steeltoe.Common.Util.MimeTypeUtils
  langs:
  - csharp
  - vb
  name: APPLICATION_XML
  nameWithType: MimeTypeUtils.APPLICATION_XML
  fullName: Steeltoe.Common.Util.MimeTypeUtils.APPLICATION_XML
  type: Field
  source:
    remote:
      path: src/Common/src/Common/Util/MimeTypeUtils.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: APPLICATION_XML
    path: ../Steeltoe/src/Common/src/Common/Util/MimeTypeUtils.cs
    startLine: 20
  assemblies:
  - Steeltoe.Common
  namespace: Steeltoe.Common.Util
  syntax:
    content: public static readonly MimeType APPLICATION_XML
    return:
      type: Steeltoe.Common.Util.MimeType
    content.vb: Public Shared ReadOnly APPLICATION_XML As MimeType
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Steeltoe.Common.Util.MimeTypeUtils.APPLICATION_XML_VALUE
  commentId: F:Steeltoe.Common.Util.MimeTypeUtils.APPLICATION_XML_VALUE
  id: APPLICATION_XML_VALUE
  parent: Steeltoe.Common.Util.MimeTypeUtils
  langs:
  - csharp
  - vb
  name: APPLICATION_XML_VALUE
  nameWithType: MimeTypeUtils.APPLICATION_XML_VALUE
  fullName: Steeltoe.Common.Util.MimeTypeUtils.APPLICATION_XML_VALUE
  type: Field
  source:
    remote:
      path: src/Common/src/Common/Util/MimeTypeUtils.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: APPLICATION_XML_VALUE
    path: ../Steeltoe/src/Common/src/Common/Util/MimeTypeUtils.cs
    startLine: 21
  assemblies:
  - Steeltoe.Common
  namespace: Steeltoe.Common.Util
  syntax:
    content: public static readonly string APPLICATION_XML_VALUE
    return:
      type: System.String
    content.vb: Public Shared ReadOnly APPLICATION_XML_VALUE As String
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Steeltoe.Common.Util.MimeTypeUtils.IMAGE_GIF
  commentId: F:Steeltoe.Common.Util.MimeTypeUtils.IMAGE_GIF
  id: IMAGE_GIF
  parent: Steeltoe.Common.Util.MimeTypeUtils
  langs:
  - csharp
  - vb
  name: IMAGE_GIF
  nameWithType: MimeTypeUtils.IMAGE_GIF
  fullName: Steeltoe.Common.Util.MimeTypeUtils.IMAGE_GIF
  type: Field
  source:
    remote:
      path: src/Common/src/Common/Util/MimeTypeUtils.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: IMAGE_GIF
    path: ../Steeltoe/src/Common/src/Common/Util/MimeTypeUtils.cs
    startLine: 22
  assemblies:
  - Steeltoe.Common
  namespace: Steeltoe.Common.Util
  syntax:
    content: public static readonly MimeType IMAGE_GIF
    return:
      type: Steeltoe.Common.Util.MimeType
    content.vb: Public Shared ReadOnly IMAGE_GIF As MimeType
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Steeltoe.Common.Util.MimeTypeUtils.IMAGE_GIF_VALUE
  commentId: F:Steeltoe.Common.Util.MimeTypeUtils.IMAGE_GIF_VALUE
  id: IMAGE_GIF_VALUE
  parent: Steeltoe.Common.Util.MimeTypeUtils
  langs:
  - csharp
  - vb
  name: IMAGE_GIF_VALUE
  nameWithType: MimeTypeUtils.IMAGE_GIF_VALUE
  fullName: Steeltoe.Common.Util.MimeTypeUtils.IMAGE_GIF_VALUE
  type: Field
  source:
    remote:
      path: src/Common/src/Common/Util/MimeTypeUtils.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: IMAGE_GIF_VALUE
    path: ../Steeltoe/src/Common/src/Common/Util/MimeTypeUtils.cs
    startLine: 23
  assemblies:
  - Steeltoe.Common
  namespace: Steeltoe.Common.Util
  syntax:
    content: public static readonly string IMAGE_GIF_VALUE
    return:
      type: System.String
    content.vb: Public Shared ReadOnly IMAGE_GIF_VALUE As String
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Steeltoe.Common.Util.MimeTypeUtils.IMAGE_JPEG
  commentId: F:Steeltoe.Common.Util.MimeTypeUtils.IMAGE_JPEG
  id: IMAGE_JPEG
  parent: Steeltoe.Common.Util.MimeTypeUtils
  langs:
  - csharp
  - vb
  name: IMAGE_JPEG
  nameWithType: MimeTypeUtils.IMAGE_JPEG
  fullName: Steeltoe.Common.Util.MimeTypeUtils.IMAGE_JPEG
  type: Field
  source:
    remote:
      path: src/Common/src/Common/Util/MimeTypeUtils.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: IMAGE_JPEG
    path: ../Steeltoe/src/Common/src/Common/Util/MimeTypeUtils.cs
    startLine: 24
  assemblies:
  - Steeltoe.Common
  namespace: Steeltoe.Common.Util
  syntax:
    content: public static readonly MimeType IMAGE_JPEG
    return:
      type: Steeltoe.Common.Util.MimeType
    content.vb: Public Shared ReadOnly IMAGE_JPEG As MimeType
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Steeltoe.Common.Util.MimeTypeUtils.IMAGE_JPEG_VALUE
  commentId: F:Steeltoe.Common.Util.MimeTypeUtils.IMAGE_JPEG_VALUE
  id: IMAGE_JPEG_VALUE
  parent: Steeltoe.Common.Util.MimeTypeUtils
  langs:
  - csharp
  - vb
  name: IMAGE_JPEG_VALUE
  nameWithType: MimeTypeUtils.IMAGE_JPEG_VALUE
  fullName: Steeltoe.Common.Util.MimeTypeUtils.IMAGE_JPEG_VALUE
  type: Field
  source:
    remote:
      path: src/Common/src/Common/Util/MimeTypeUtils.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: IMAGE_JPEG_VALUE
    path: ../Steeltoe/src/Common/src/Common/Util/MimeTypeUtils.cs
    startLine: 25
  assemblies:
  - Steeltoe.Common
  namespace: Steeltoe.Common.Util
  syntax:
    content: public static readonly string IMAGE_JPEG_VALUE
    return:
      type: System.String
    content.vb: Public Shared ReadOnly IMAGE_JPEG_VALUE As String
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Steeltoe.Common.Util.MimeTypeUtils.IMAGE_PNG
  commentId: F:Steeltoe.Common.Util.MimeTypeUtils.IMAGE_PNG
  id: IMAGE_PNG
  parent: Steeltoe.Common.Util.MimeTypeUtils
  langs:
  - csharp
  - vb
  name: IMAGE_PNG
  nameWithType: MimeTypeUtils.IMAGE_PNG
  fullName: Steeltoe.Common.Util.MimeTypeUtils.IMAGE_PNG
  type: Field
  source:
    remote:
      path: src/Common/src/Common/Util/MimeTypeUtils.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: IMAGE_PNG
    path: ../Steeltoe/src/Common/src/Common/Util/MimeTypeUtils.cs
    startLine: 26
  assemblies:
  - Steeltoe.Common
  namespace: Steeltoe.Common.Util
  syntax:
    content: public static readonly MimeType IMAGE_PNG
    return:
      type: Steeltoe.Common.Util.MimeType
    content.vb: Public Shared ReadOnly IMAGE_PNG As MimeType
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Steeltoe.Common.Util.MimeTypeUtils.IMAGE_PNG_VALUE
  commentId: F:Steeltoe.Common.Util.MimeTypeUtils.IMAGE_PNG_VALUE
  id: IMAGE_PNG_VALUE
  parent: Steeltoe.Common.Util.MimeTypeUtils
  langs:
  - csharp
  - vb
  name: IMAGE_PNG_VALUE
  nameWithType: MimeTypeUtils.IMAGE_PNG_VALUE
  fullName: Steeltoe.Common.Util.MimeTypeUtils.IMAGE_PNG_VALUE
  type: Field
  source:
    remote:
      path: src/Common/src/Common/Util/MimeTypeUtils.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: IMAGE_PNG_VALUE
    path: ../Steeltoe/src/Common/src/Common/Util/MimeTypeUtils.cs
    startLine: 27
  assemblies:
  - Steeltoe.Common
  namespace: Steeltoe.Common.Util
  syntax:
    content: public static readonly string IMAGE_PNG_VALUE
    return:
      type: System.String
    content.vb: Public Shared ReadOnly IMAGE_PNG_VALUE As String
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Steeltoe.Common.Util.MimeTypeUtils.TEXT_HTML
  commentId: F:Steeltoe.Common.Util.MimeTypeUtils.TEXT_HTML
  id: TEXT_HTML
  parent: Steeltoe.Common.Util.MimeTypeUtils
  langs:
  - csharp
  - vb
  name: TEXT_HTML
  nameWithType: MimeTypeUtils.TEXT_HTML
  fullName: Steeltoe.Common.Util.MimeTypeUtils.TEXT_HTML
  type: Field
  source:
    remote:
      path: src/Common/src/Common/Util/MimeTypeUtils.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: TEXT_HTML
    path: ../Steeltoe/src/Common/src/Common/Util/MimeTypeUtils.cs
    startLine: 28
  assemblies:
  - Steeltoe.Common
  namespace: Steeltoe.Common.Util
  syntax:
    content: public static readonly MimeType TEXT_HTML
    return:
      type: Steeltoe.Common.Util.MimeType
    content.vb: Public Shared ReadOnly TEXT_HTML As MimeType
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Steeltoe.Common.Util.MimeTypeUtils.TEXT_HTML_VALUE
  commentId: F:Steeltoe.Common.Util.MimeTypeUtils.TEXT_HTML_VALUE
  id: TEXT_HTML_VALUE
  parent: Steeltoe.Common.Util.MimeTypeUtils
  langs:
  - csharp
  - vb
  name: TEXT_HTML_VALUE
  nameWithType: MimeTypeUtils.TEXT_HTML_VALUE
  fullName: Steeltoe.Common.Util.MimeTypeUtils.TEXT_HTML_VALUE
  type: Field
  source:
    remote:
      path: src/Common/src/Common/Util/MimeTypeUtils.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: TEXT_HTML_VALUE
    path: ../Steeltoe/src/Common/src/Common/Util/MimeTypeUtils.cs
    startLine: 29
  assemblies:
  - Steeltoe.Common
  namespace: Steeltoe.Common.Util
  syntax:
    content: public static readonly string TEXT_HTML_VALUE
    return:
      type: System.String
    content.vb: Public Shared ReadOnly TEXT_HTML_VALUE As String
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Steeltoe.Common.Util.MimeTypeUtils.TEXT_PLAIN
  commentId: F:Steeltoe.Common.Util.MimeTypeUtils.TEXT_PLAIN
  id: TEXT_PLAIN
  parent: Steeltoe.Common.Util.MimeTypeUtils
  langs:
  - csharp
  - vb
  name: TEXT_PLAIN
  nameWithType: MimeTypeUtils.TEXT_PLAIN
  fullName: Steeltoe.Common.Util.MimeTypeUtils.TEXT_PLAIN
  type: Field
  source:
    remote:
      path: src/Common/src/Common/Util/MimeTypeUtils.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: TEXT_PLAIN
    path: ../Steeltoe/src/Common/src/Common/Util/MimeTypeUtils.cs
    startLine: 30
  assemblies:
  - Steeltoe.Common
  namespace: Steeltoe.Common.Util
  syntax:
    content: public static readonly MimeType TEXT_PLAIN
    return:
      type: Steeltoe.Common.Util.MimeType
    content.vb: Public Shared ReadOnly TEXT_PLAIN As MimeType
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Steeltoe.Common.Util.MimeTypeUtils.TEXT_PLAIN_VALUE
  commentId: F:Steeltoe.Common.Util.MimeTypeUtils.TEXT_PLAIN_VALUE
  id: TEXT_PLAIN_VALUE
  parent: Steeltoe.Common.Util.MimeTypeUtils
  langs:
  - csharp
  - vb
  name: TEXT_PLAIN_VALUE
  nameWithType: MimeTypeUtils.TEXT_PLAIN_VALUE
  fullName: Steeltoe.Common.Util.MimeTypeUtils.TEXT_PLAIN_VALUE
  type: Field
  source:
    remote:
      path: src/Common/src/Common/Util/MimeTypeUtils.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: TEXT_PLAIN_VALUE
    path: ../Steeltoe/src/Common/src/Common/Util/MimeTypeUtils.cs
    startLine: 31
  assemblies:
  - Steeltoe.Common
  namespace: Steeltoe.Common.Util
  syntax:
    content: public static readonly string TEXT_PLAIN_VALUE
    return:
      type: System.String
    content.vb: Public Shared ReadOnly TEXT_PLAIN_VALUE As String
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Steeltoe.Common.Util.MimeTypeUtils.TEXT_XML
  commentId: F:Steeltoe.Common.Util.MimeTypeUtils.TEXT_XML
  id: TEXT_XML
  parent: Steeltoe.Common.Util.MimeTypeUtils
  langs:
  - csharp
  - vb
  name: TEXT_XML
  nameWithType: MimeTypeUtils.TEXT_XML
  fullName: Steeltoe.Common.Util.MimeTypeUtils.TEXT_XML
  type: Field
  source:
    remote:
      path: src/Common/src/Common/Util/MimeTypeUtils.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: TEXT_XML
    path: ../Steeltoe/src/Common/src/Common/Util/MimeTypeUtils.cs
    startLine: 32
  assemblies:
  - Steeltoe.Common
  namespace: Steeltoe.Common.Util
  syntax:
    content: public static readonly MimeType TEXT_XML
    return:
      type: Steeltoe.Common.Util.MimeType
    content.vb: Public Shared ReadOnly TEXT_XML As MimeType
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Steeltoe.Common.Util.MimeTypeUtils.TEXT_XML_VALUE
  commentId: F:Steeltoe.Common.Util.MimeTypeUtils.TEXT_XML_VALUE
  id: TEXT_XML_VALUE
  parent: Steeltoe.Common.Util.MimeTypeUtils
  langs:
  - csharp
  - vb
  name: TEXT_XML_VALUE
  nameWithType: MimeTypeUtils.TEXT_XML_VALUE
  fullName: Steeltoe.Common.Util.MimeTypeUtils.TEXT_XML_VALUE
  type: Field
  source:
    remote:
      path: src/Common/src/Common/Util/MimeTypeUtils.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: TEXT_XML_VALUE
    path: ../Steeltoe/src/Common/src/Common/Util/MimeTypeUtils.cs
    startLine: 33
  assemblies:
  - Steeltoe.Common
  namespace: Steeltoe.Common.Util
  syntax:
    content: public static readonly string TEXT_XML_VALUE
    return:
      type: System.String
    content.vb: Public Shared ReadOnly TEXT_XML_VALUE As String
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Steeltoe.Common.Util.MimeTypeUtils.ParseMimeType(System.String)
  commentId: M:Steeltoe.Common.Util.MimeTypeUtils.ParseMimeType(System.String)
  id: ParseMimeType(System.String)
  parent: Steeltoe.Common.Util.MimeTypeUtils
  langs:
  - csharp
  - vb
  name: ParseMimeType(String)
  nameWithType: MimeTypeUtils.ParseMimeType(String)
  fullName: Steeltoe.Common.Util.MimeTypeUtils.ParseMimeType(System.String)
  type: Method
  source:
    remote:
      path: src/Common/src/Common/Util/MimeTypeUtils.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: ParseMimeType
    path: ../Steeltoe/src/Common/src/Common/Util/MimeTypeUtils.cs
    startLine: 48
  assemblies:
  - Steeltoe.Common
  namespace: Steeltoe.Common.Util
  syntax:
    content: public static MimeType ParseMimeType(string mimeType)
    parameters:
    - id: mimeType
      type: System.String
    return:
      type: Steeltoe.Common.Util.MimeType
    content.vb: Public Shared Function ParseMimeType(mimeType As String) As MimeType
  overload: Steeltoe.Common.Util.MimeTypeUtils.ParseMimeType*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Steeltoe.Common.Util.MimeTypeUtils.ParseMimeTypes(System.String)
  commentId: M:Steeltoe.Common.Util.MimeTypeUtils.ParseMimeTypes(System.String)
  id: ParseMimeTypes(System.String)
  parent: Steeltoe.Common.Util.MimeTypeUtils
  langs:
  - csharp
  - vb
  name: ParseMimeTypes(String)
  nameWithType: MimeTypeUtils.ParseMimeTypes(String)
  fullName: Steeltoe.Common.Util.MimeTypeUtils.ParseMimeTypes(System.String)
  type: Method
  source:
    remote:
      path: src/Common/src/Common/Util/MimeTypeUtils.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: ParseMimeTypes
    path: ../Steeltoe/src/Common/src/Common/Util/MimeTypeUtils.cs
    startLine: 53
  assemblies:
  - Steeltoe.Common
  namespace: Steeltoe.Common.Util
  syntax:
    content: public static List<MimeType> ParseMimeTypes(string mimeTypes)
    parameters:
    - id: mimeTypes
      type: System.String
    return:
      type: System.Collections.Generic.List{Steeltoe.Common.Util.MimeType}
    content.vb: Public Shared Function ParseMimeTypes(mimeTypes As String) As List(Of MimeType)
  overload: Steeltoe.Common.Util.MimeTypeUtils.ParseMimeTypes*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Steeltoe.Common.Util.MimeTypeUtils.Tokenize(System.String)
  commentId: M:Steeltoe.Common.Util.MimeTypeUtils.Tokenize(System.String)
  id: Tokenize(System.String)
  parent: Steeltoe.Common.Util.MimeTypeUtils
  langs:
  - csharp
  - vb
  name: Tokenize(String)
  nameWithType: MimeTypeUtils.Tokenize(String)
  fullName: Steeltoe.Common.Util.MimeTypeUtils.Tokenize(System.String)
  type: Method
  source:
    remote:
      path: src/Common/src/Common/Util/MimeTypeUtils.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Tokenize
    path: ../Steeltoe/src/Common/src/Common/Util/MimeTypeUtils.cs
    startLine: 70
  assemblies:
  - Steeltoe.Common
  namespace: Steeltoe.Common.Util
  syntax:
    content: public static List<string> Tokenize(string mimeTypes)
    parameters:
    - id: mimeTypes
      type: System.String
    return:
      type: System.Collections.Generic.List{System.String}
    content.vb: Public Shared Function Tokenize(mimeTypes As String) As List(Of String)
  overload: Steeltoe.Common.Util.MimeTypeUtils.Tokenize*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Steeltoe.Common.Util.MimeTypeUtils.Tostring(System.Collections.Generic.ICollection{Steeltoe.Common.Util.MimeType})
  commentId: M:Steeltoe.Common.Util.MimeTypeUtils.Tostring(System.Collections.Generic.ICollection{Steeltoe.Common.Util.MimeType})
  id: Tostring(System.Collections.Generic.ICollection{Steeltoe.Common.Util.MimeType})
  parent: Steeltoe.Common.Util.MimeTypeUtils
  langs:
  - csharp
  - vb
  name: Tostring(ICollection<MimeType>)
  nameWithType: MimeTypeUtils.Tostring(ICollection<MimeType>)
  fullName: Steeltoe.Common.Util.MimeTypeUtils.Tostring(System.Collections.Generic.ICollection<Steeltoe.Common.Util.MimeType>)
  type: Method
  source:
    remote:
      path: src/Common/src/Common/Util/MimeTypeUtils.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Tostring
    path: ../Steeltoe/src/Common/src/Common/Util/MimeTypeUtils.cs
    startLine: 108
  assemblies:
  - Steeltoe.Common
  namespace: Steeltoe.Common.Util
  syntax:
    content: public static string Tostring(ICollection<MimeType> mimeTypes)
    parameters:
    - id: mimeTypes
      type: System.Collections.Generic.ICollection{Steeltoe.Common.Util.MimeType}
    return:
      type: System.String
    content.vb: Public Shared Function Tostring(mimeTypes As ICollection(Of MimeType)) As String
  overload: Steeltoe.Common.Util.MimeTypeUtils.Tostring*
  nameWithType.vb: MimeTypeUtils.Tostring(ICollection(Of MimeType))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Steeltoe.Common.Util.MimeTypeUtils.Tostring(System.Collections.Generic.ICollection(Of Steeltoe.Common.Util.MimeType))
  name.vb: Tostring(ICollection(Of MimeType))
- uid: Steeltoe.Common.Util.MimeTypeUtils.SortBySpecificity(System.Collections.Generic.List{Steeltoe.Common.Util.MimeType})
  commentId: M:Steeltoe.Common.Util.MimeTypeUtils.SortBySpecificity(System.Collections.Generic.List{Steeltoe.Common.Util.MimeType})
  id: SortBySpecificity(System.Collections.Generic.List{Steeltoe.Common.Util.MimeType})
  parent: Steeltoe.Common.Util.MimeTypeUtils
  langs:
  - csharp
  - vb
  name: SortBySpecificity(List<MimeType>)
  nameWithType: MimeTypeUtils.SortBySpecificity(List<MimeType>)
  fullName: Steeltoe.Common.Util.MimeTypeUtils.SortBySpecificity(System.Collections.Generic.List<Steeltoe.Common.Util.MimeType>)
  type: Method
  source:
    remote:
      path: src/Common/src/Common/Util/MimeTypeUtils.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: SortBySpecificity
    path: ../Steeltoe/src/Common/src/Common/Util/MimeTypeUtils.cs
    startLine: 126
  assemblies:
  - Steeltoe.Common
  namespace: Steeltoe.Common.Util
  syntax:
    content: public static void SortBySpecificity(List<MimeType> mimeTypes)
    parameters:
    - id: mimeTypes
      type: System.Collections.Generic.List{Steeltoe.Common.Util.MimeType}
    content.vb: Public Shared Sub SortBySpecificity(mimeTypes As List(Of MimeType))
  overload: Steeltoe.Common.Util.MimeTypeUtils.SortBySpecificity*
  nameWithType.vb: MimeTypeUtils.SortBySpecificity(List(Of MimeType))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Steeltoe.Common.Util.MimeTypeUtils.SortBySpecificity(System.Collections.Generic.List(Of Steeltoe.Common.Util.MimeType))
  name.vb: SortBySpecificity(List(Of MimeType))
- uid: Steeltoe.Common.Util.MimeTypeUtils.GenerateMultipartBoundary
  commentId: M:Steeltoe.Common.Util.MimeTypeUtils.GenerateMultipartBoundary
  id: GenerateMultipartBoundary
  parent: Steeltoe.Common.Util.MimeTypeUtils
  langs:
  - csharp
  - vb
  name: GenerateMultipartBoundary()
  nameWithType: MimeTypeUtils.GenerateMultipartBoundary()
  fullName: Steeltoe.Common.Util.MimeTypeUtils.GenerateMultipartBoundary()
  type: Method
  source:
    remote:
      path: src/Common/src/Common/Util/MimeTypeUtils.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: GenerateMultipartBoundary
    path: ../Steeltoe/src/Common/src/Common/Util/MimeTypeUtils.cs
    startLine: 139
  assemblies:
  - Steeltoe.Common
  namespace: Steeltoe.Common.Util
  syntax:
    content: public static char[] GenerateMultipartBoundary()
    return:
      type: System.Char[]
    content.vb: Public Shared Function GenerateMultipartBoundary As Char()
  overload: Steeltoe.Common.Util.MimeTypeUtils.GenerateMultipartBoundary*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Steeltoe.Common.Util.MimeTypeUtils.GenerateMultipartBoundaryString
  commentId: M:Steeltoe.Common.Util.MimeTypeUtils.GenerateMultipartBoundaryString
  id: GenerateMultipartBoundaryString
  parent: Steeltoe.Common.Util.MimeTypeUtils
  langs:
  - csharp
  - vb
  name: GenerateMultipartBoundaryString()
  nameWithType: MimeTypeUtils.GenerateMultipartBoundaryString()
  fullName: Steeltoe.Common.Util.MimeTypeUtils.GenerateMultipartBoundaryString()
  type: Method
  source:
    remote:
      path: src/Common/src/Common/Util/MimeTypeUtils.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: GenerateMultipartBoundaryString
    path: ../Steeltoe/src/Common/src/Common/Util/MimeTypeUtils.cs
    startLine: 152
  assemblies:
  - Steeltoe.Common
  namespace: Steeltoe.Common.Util
  syntax:
    content: public static string GenerateMultipartBoundaryString()
    return:
      type: System.String
    content.vb: Public Shared Function GenerateMultipartBoundaryString As String
  overload: Steeltoe.Common.Util.MimeTypeUtils.GenerateMultipartBoundaryString*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Steeltoe.Common.Util
  commentId: N:Steeltoe.Common.Util
  name: Steeltoe.Common.Util
  nameWithType: Steeltoe.Common.Util
  fullName: Steeltoe.Common.Util
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Collections.Generic.IComparer{Steeltoe.Common.Util.MimeType}
  commentId: T:System.Collections.Generic.IComparer{Steeltoe.Common.Util.MimeType}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IComparer`1
  name: IComparer<MimeType>
  nameWithType: IComparer<MimeType>
  fullName: System.Collections.Generic.IComparer<Steeltoe.Common.Util.MimeType>
  nameWithType.vb: IComparer(Of MimeType)
  fullName.vb: System.Collections.Generic.IComparer(Of Steeltoe.Common.Util.MimeType)
  name.vb: IComparer(Of MimeType)
  spec.csharp:
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    nameWithType: IComparer
    fullName: System.Collections.Generic.IComparer
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Steeltoe.Common.Util.MimeType
    name: MimeType
    nameWithType: MimeType
    fullName: Steeltoe.Common.Util.MimeType
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    nameWithType: IComparer
    fullName: System.Collections.Generic.IComparer
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Steeltoe.Common.Util.MimeType
    name: MimeType
    nameWithType: MimeType
    fullName: Steeltoe.Common.Util.MimeType
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IComparer`1
  commentId: T:System.Collections.Generic.IComparer`1
  isExternal: true
  name: IComparer<T>
  nameWithType: IComparer<T>
  fullName: System.Collections.Generic.IComparer<T>
  nameWithType.vb: IComparer(Of T)
  fullName.vb: System.Collections.Generic.IComparer(Of T)
  name.vb: IComparer(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    nameWithType: IComparer
    fullName: System.Collections.Generic.IComparer
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    nameWithType: IComparer
    fullName: System.Collections.Generic.IComparer
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Steeltoe.Common.Util.MimeType
  commentId: T:Steeltoe.Common.Util.MimeType
  parent: Steeltoe.Common.Util
  name: MimeType
  nameWithType: MimeType
  fullName: Steeltoe.Common.Util.MimeType
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Steeltoe.Common.Util.MimeTypeUtils.ParseMimeType*
  commentId: Overload:Steeltoe.Common.Util.MimeTypeUtils.ParseMimeType
  name: ParseMimeType
  nameWithType: MimeTypeUtils.ParseMimeType
  fullName: Steeltoe.Common.Util.MimeTypeUtils.ParseMimeType
- uid: Steeltoe.Common.Util.MimeTypeUtils.ParseMimeTypes*
  commentId: Overload:Steeltoe.Common.Util.MimeTypeUtils.ParseMimeTypes
  name: ParseMimeTypes
  nameWithType: MimeTypeUtils.ParseMimeTypes
  fullName: Steeltoe.Common.Util.MimeTypeUtils.ParseMimeTypes
- uid: System.Collections.Generic.List{Steeltoe.Common.Util.MimeType}
  commentId: T:System.Collections.Generic.List{Steeltoe.Common.Util.MimeType}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<MimeType>
  nameWithType: List<MimeType>
  fullName: System.Collections.Generic.List<Steeltoe.Common.Util.MimeType>
  nameWithType.vb: List(Of MimeType)
  fullName.vb: System.Collections.Generic.List(Of Steeltoe.Common.Util.MimeType)
  name.vb: List(Of MimeType)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Steeltoe.Common.Util.MimeType
    name: MimeType
    nameWithType: MimeType
    fullName: Steeltoe.Common.Util.MimeType
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Steeltoe.Common.Util.MimeType
    name: MimeType
    nameWithType: MimeType
    fullName: Steeltoe.Common.Util.MimeType
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Common.Util.MimeTypeUtils.Tokenize*
  commentId: Overload:Steeltoe.Common.Util.MimeTypeUtils.Tokenize
  name: Tokenize
  nameWithType: MimeTypeUtils.Tokenize
  fullName: Steeltoe.Common.Util.MimeTypeUtils.Tokenize
- uid: System.Collections.Generic.List{System.String}
  commentId: T:System.Collections.Generic.List{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<String>
  nameWithType: List<String>
  fullName: System.Collections.Generic.List<System.String>
  nameWithType.vb: List(Of String)
  fullName.vb: System.Collections.Generic.List(Of System.String)
  name.vb: List(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Common.Util.MimeTypeUtils.Tostring*
  commentId: Overload:Steeltoe.Common.Util.MimeTypeUtils.Tostring
  name: Tostring
  nameWithType: MimeTypeUtils.Tostring
  fullName: Steeltoe.Common.Util.MimeTypeUtils.Tostring
- uid: System.Collections.Generic.ICollection{Steeltoe.Common.Util.MimeType}
  commentId: T:System.Collections.Generic.ICollection{Steeltoe.Common.Util.MimeType}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.ICollection`1
  name: ICollection<MimeType>
  nameWithType: ICollection<MimeType>
  fullName: System.Collections.Generic.ICollection<Steeltoe.Common.Util.MimeType>
  nameWithType.vb: ICollection(Of MimeType)
  fullName.vb: System.Collections.Generic.ICollection(Of Steeltoe.Common.Util.MimeType)
  name.vb: ICollection(Of MimeType)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Steeltoe.Common.Util.MimeType
    name: MimeType
    nameWithType: MimeType
    fullName: Steeltoe.Common.Util.MimeType
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Steeltoe.Common.Util.MimeType
    name: MimeType
    nameWithType: MimeType
    fullName: Steeltoe.Common.Util.MimeType
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.ICollection`1
  commentId: T:System.Collections.Generic.ICollection`1
  isExternal: true
  name: ICollection<T>
  nameWithType: ICollection<T>
  fullName: System.Collections.Generic.ICollection<T>
  nameWithType.vb: ICollection(Of T)
  fullName.vb: System.Collections.Generic.ICollection(Of T)
  name.vb: ICollection(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Common.Util.MimeTypeUtils.SortBySpecificity*
  commentId: Overload:Steeltoe.Common.Util.MimeTypeUtils.SortBySpecificity
  name: SortBySpecificity
  nameWithType: MimeTypeUtils.SortBySpecificity
  fullName: Steeltoe.Common.Util.MimeTypeUtils.SortBySpecificity
- uid: Steeltoe.Common.Util.MimeTypeUtils.GenerateMultipartBoundary*
  commentId: Overload:Steeltoe.Common.Util.MimeTypeUtils.GenerateMultipartBoundary
  name: GenerateMultipartBoundary
  nameWithType: MimeTypeUtils.GenerateMultipartBoundary
  fullName: Steeltoe.Common.Util.MimeTypeUtils.GenerateMultipartBoundary
- uid: System.Char[]
  isExternal: true
  name: Char[]
  nameWithType: Char[]
  fullName: System.Char[]
  nameWithType.vb: Char()
  fullName.vb: System.Char()
  name.vb: Char()
  spec.csharp:
  - uid: System.Char
    name: Char
    nameWithType: Char
    fullName: System.Char
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Char
    name: Char
    nameWithType: Char
    fullName: System.Char
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Steeltoe.Common.Util.MimeTypeUtils.GenerateMultipartBoundaryString*
  commentId: Overload:Steeltoe.Common.Util.MimeTypeUtils.GenerateMultipartBoundaryString
  name: GenerateMultipartBoundaryString
  nameWithType: MimeTypeUtils.GenerateMultipartBoundaryString
  fullName: Steeltoe.Common.Util.MimeTypeUtils.GenerateMultipartBoundaryString
