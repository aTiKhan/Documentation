### YamlMime:ManagedReference
items:
- uid: Steeltoe.Messaging.Support.IMessageHeaderAccessor
  commentId: T:Steeltoe.Messaging.Support.IMessageHeaderAccessor
  id: IMessageHeaderAccessor
  parent: Steeltoe.Messaging.Support
  children:
  - Steeltoe.Messaging.Support.IMessageHeaderAccessor.ContentType
  - Steeltoe.Messaging.Support.IMessageHeaderAccessor.CopyHeaders(System.Collections.Generic.IDictionary{System.String,System.Object})
  - Steeltoe.Messaging.Support.IMessageHeaderAccessor.CopyHeadersIfAbsent(System.Collections.Generic.IDictionary{System.String,System.Object})
  - Steeltoe.Messaging.Support.IMessageHeaderAccessor.EnableTimestamp
  - Steeltoe.Messaging.Support.IMessageHeaderAccessor.ErrorChannel
  - Steeltoe.Messaging.Support.IMessageHeaderAccessor.ErrorChannelName
  - Steeltoe.Messaging.Support.IMessageHeaderAccessor.GetHeader(System.String)
  - Steeltoe.Messaging.Support.IMessageHeaderAccessor.Id
  - Steeltoe.Messaging.Support.IMessageHeaderAccessor.IdGenerator
  - Steeltoe.Messaging.Support.IMessageHeaderAccessor.IsModified
  - Steeltoe.Messaging.Support.IMessageHeaderAccessor.IsMutable
  - Steeltoe.Messaging.Support.IMessageHeaderAccessor.LeaveMutable
  - Steeltoe.Messaging.Support.IMessageHeaderAccessor.MessageHeaders
  - Steeltoe.Messaging.Support.IMessageHeaderAccessor.RemoveHeader(System.String)
  - Steeltoe.Messaging.Support.IMessageHeaderAccessor.RemoveHeaders(System.String[])
  - Steeltoe.Messaging.Support.IMessageHeaderAccessor.ReplyChannel
  - Steeltoe.Messaging.Support.IMessageHeaderAccessor.ReplyChannelName
  - Steeltoe.Messaging.Support.IMessageHeaderAccessor.SetHeader(System.String,System.Object)
  - Steeltoe.Messaging.Support.IMessageHeaderAccessor.SetHeaderIfAbsent(System.String,System.Object)
  - Steeltoe.Messaging.Support.IMessageHeaderAccessor.SetImmutable
  - Steeltoe.Messaging.Support.IMessageHeaderAccessor.Timestamp
  - Steeltoe.Messaging.Support.IMessageHeaderAccessor.ToDictionary
  - Steeltoe.Messaging.Support.IMessageHeaderAccessor.ToMessageHeaders
  langs:
  - csharp
  - vb
  name: IMessageHeaderAccessor
  nameWithType: IMessageHeaderAccessor
  fullName: Steeltoe.Messaging.Support.IMessageHeaderAccessor
  type: Interface
  source:
    remote:
      path: src/Messaging/src/Abstractions/Support/IMessageHeaderAccessor.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: IMessageHeaderAccessor
    path: ../Steeltoe/src/Messaging/src/Abstractions/Support/IMessageHeaderAccessor.cs
    startLine: 10
  assemblies:
  - Steeltoe.Messaging.Abstractions
  namespace: Steeltoe.Messaging.Support
  syntax:
    content: public interface IMessageHeaderAccessor
    content.vb: Public Interface IMessageHeaderAccessor
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Steeltoe.Messaging.Support.IMessageHeaderAccessor.Id
  commentId: P:Steeltoe.Messaging.Support.IMessageHeaderAccessor.Id
  id: Id
  parent: Steeltoe.Messaging.Support.IMessageHeaderAccessor
  langs:
  - csharp
  - vb
  name: Id
  nameWithType: IMessageHeaderAccessor.Id
  fullName: Steeltoe.Messaging.Support.IMessageHeaderAccessor.Id
  type: Property
  source:
    remote:
      path: src/Messaging/src/Abstractions/Support/IMessageHeaderAccessor.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Id
    path: ../Steeltoe/src/Messaging/src/Abstractions/Support/IMessageHeaderAccessor.cs
    startLine: 12
  assemblies:
  - Steeltoe.Messaging.Abstractions
  namespace: Steeltoe.Messaging.Support
  syntax:
    content: string Id { get; }
    parameters: []
    return:
      type: System.String
    content.vb: ReadOnly Property Id As String
  overload: Steeltoe.Messaging.Support.IMessageHeaderAccessor.Id*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Steeltoe.Messaging.Support.IMessageHeaderAccessor.Timestamp
  commentId: P:Steeltoe.Messaging.Support.IMessageHeaderAccessor.Timestamp
  id: Timestamp
  parent: Steeltoe.Messaging.Support.IMessageHeaderAccessor
  langs:
  - csharp
  - vb
  name: Timestamp
  nameWithType: IMessageHeaderAccessor.Timestamp
  fullName: Steeltoe.Messaging.Support.IMessageHeaderAccessor.Timestamp
  type: Property
  source:
    remote:
      path: src/Messaging/src/Abstractions/Support/IMessageHeaderAccessor.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Timestamp
    path: ../Steeltoe/src/Messaging/src/Abstractions/Support/IMessageHeaderAccessor.cs
    startLine: 14
  assemblies:
  - Steeltoe.Messaging.Abstractions
  namespace: Steeltoe.Messaging.Support
  syntax:
    content: long? Timestamp { get; }
    parameters: []
    return:
      type: System.Nullable{System.Int64}
    content.vb: ReadOnly Property Timestamp As Long?
  overload: Steeltoe.Messaging.Support.IMessageHeaderAccessor.Timestamp*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Steeltoe.Messaging.Support.IMessageHeaderAccessor.ContentType
  commentId: P:Steeltoe.Messaging.Support.IMessageHeaderAccessor.ContentType
  id: ContentType
  parent: Steeltoe.Messaging.Support.IMessageHeaderAccessor
  langs:
  - csharp
  - vb
  name: ContentType
  nameWithType: IMessageHeaderAccessor.ContentType
  fullName: Steeltoe.Messaging.Support.IMessageHeaderAccessor.ContentType
  type: Property
  source:
    remote:
      path: src/Messaging/src/Abstractions/Support/IMessageHeaderAccessor.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: ContentType
    path: ../Steeltoe/src/Messaging/src/Abstractions/Support/IMessageHeaderAccessor.cs
    startLine: 16
  assemblies:
  - Steeltoe.Messaging.Abstractions
  namespace: Steeltoe.Messaging.Support
  syntax:
    content: string ContentType { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Property ContentType As String
  overload: Steeltoe.Messaging.Support.IMessageHeaderAccessor.ContentType*
  modifiers.csharp:
  - get
  - set
- uid: Steeltoe.Messaging.Support.IMessageHeaderAccessor.LeaveMutable
  commentId: P:Steeltoe.Messaging.Support.IMessageHeaderAccessor.LeaveMutable
  id: LeaveMutable
  parent: Steeltoe.Messaging.Support.IMessageHeaderAccessor
  langs:
  - csharp
  - vb
  name: LeaveMutable
  nameWithType: IMessageHeaderAccessor.LeaveMutable
  fullName: Steeltoe.Messaging.Support.IMessageHeaderAccessor.LeaveMutable
  type: Property
  source:
    remote:
      path: src/Messaging/src/Abstractions/Support/IMessageHeaderAccessor.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: LeaveMutable
    path: ../Steeltoe/src/Messaging/src/Abstractions/Support/IMessageHeaderAccessor.cs
    startLine: 18
  assemblies:
  - Steeltoe.Messaging.Abstractions
  namespace: Steeltoe.Messaging.Support
  syntax:
    content: bool LeaveMutable { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Property LeaveMutable As Boolean
  overload: Steeltoe.Messaging.Support.IMessageHeaderAccessor.LeaveMutable*
  modifiers.csharp:
  - get
  - set
- uid: Steeltoe.Messaging.Support.IMessageHeaderAccessor.IsMutable
  commentId: P:Steeltoe.Messaging.Support.IMessageHeaderAccessor.IsMutable
  id: IsMutable
  parent: Steeltoe.Messaging.Support.IMessageHeaderAccessor
  langs:
  - csharp
  - vb
  name: IsMutable
  nameWithType: IMessageHeaderAccessor.IsMutable
  fullName: Steeltoe.Messaging.Support.IMessageHeaderAccessor.IsMutable
  type: Property
  source:
    remote:
      path: src/Messaging/src/Abstractions/Support/IMessageHeaderAccessor.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: IsMutable
    path: ../Steeltoe/src/Messaging/src/Abstractions/Support/IMessageHeaderAccessor.cs
    startLine: 20
  assemblies:
  - Steeltoe.Messaging.Abstractions
  namespace: Steeltoe.Messaging.Support
  syntax:
    content: bool IsMutable { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: ReadOnly Property IsMutable As Boolean
  overload: Steeltoe.Messaging.Support.IMessageHeaderAccessor.IsMutable*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Steeltoe.Messaging.Support.IMessageHeaderAccessor.IsModified
  commentId: P:Steeltoe.Messaging.Support.IMessageHeaderAccessor.IsModified
  id: IsModified
  parent: Steeltoe.Messaging.Support.IMessageHeaderAccessor
  langs:
  - csharp
  - vb
  name: IsModified
  nameWithType: IMessageHeaderAccessor.IsModified
  fullName: Steeltoe.Messaging.Support.IMessageHeaderAccessor.IsModified
  type: Property
  source:
    remote:
      path: src/Messaging/src/Abstractions/Support/IMessageHeaderAccessor.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: IsModified
    path: ../Steeltoe/src/Messaging/src/Abstractions/Support/IMessageHeaderAccessor.cs
    startLine: 22
  assemblies:
  - Steeltoe.Messaging.Abstractions
  namespace: Steeltoe.Messaging.Support
  syntax:
    content: bool IsModified { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Property IsModified As Boolean
  overload: Steeltoe.Messaging.Support.IMessageHeaderAccessor.IsModified*
  modifiers.csharp:
  - get
  - set
- uid: Steeltoe.Messaging.Support.IMessageHeaderAccessor.MessageHeaders
  commentId: P:Steeltoe.Messaging.Support.IMessageHeaderAccessor.MessageHeaders
  id: MessageHeaders
  parent: Steeltoe.Messaging.Support.IMessageHeaderAccessor
  langs:
  - csharp
  - vb
  name: MessageHeaders
  nameWithType: IMessageHeaderAccessor.MessageHeaders
  fullName: Steeltoe.Messaging.Support.IMessageHeaderAccessor.MessageHeaders
  type: Property
  source:
    remote:
      path: src/Messaging/src/Abstractions/Support/IMessageHeaderAccessor.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: MessageHeaders
    path: ../Steeltoe/src/Messaging/src/Abstractions/Support/IMessageHeaderAccessor.cs
    startLine: 24
  assemblies:
  - Steeltoe.Messaging.Abstractions
  namespace: Steeltoe.Messaging.Support
  syntax:
    content: IMessageHeaders MessageHeaders { get; }
    parameters: []
    return:
      type: Steeltoe.Messaging.IMessageHeaders
    content.vb: ReadOnly Property MessageHeaders As IMessageHeaders
  overload: Steeltoe.Messaging.Support.IMessageHeaderAccessor.MessageHeaders*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Steeltoe.Messaging.Support.IMessageHeaderAccessor.ReplyChannelName
  commentId: P:Steeltoe.Messaging.Support.IMessageHeaderAccessor.ReplyChannelName
  id: ReplyChannelName
  parent: Steeltoe.Messaging.Support.IMessageHeaderAccessor
  langs:
  - csharp
  - vb
  name: ReplyChannelName
  nameWithType: IMessageHeaderAccessor.ReplyChannelName
  fullName: Steeltoe.Messaging.Support.IMessageHeaderAccessor.ReplyChannelName
  type: Property
  source:
    remote:
      path: src/Messaging/src/Abstractions/Support/IMessageHeaderAccessor.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: ReplyChannelName
    path: ../Steeltoe/src/Messaging/src/Abstractions/Support/IMessageHeaderAccessor.cs
    startLine: 26
  assemblies:
  - Steeltoe.Messaging.Abstractions
  namespace: Steeltoe.Messaging.Support
  syntax:
    content: string ReplyChannelName { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Property ReplyChannelName As String
  overload: Steeltoe.Messaging.Support.IMessageHeaderAccessor.ReplyChannelName*
  modifiers.csharp:
  - get
  - set
- uid: Steeltoe.Messaging.Support.IMessageHeaderAccessor.ReplyChannel
  commentId: P:Steeltoe.Messaging.Support.IMessageHeaderAccessor.ReplyChannel
  id: ReplyChannel
  parent: Steeltoe.Messaging.Support.IMessageHeaderAccessor
  langs:
  - csharp
  - vb
  name: ReplyChannel
  nameWithType: IMessageHeaderAccessor.ReplyChannel
  fullName: Steeltoe.Messaging.Support.IMessageHeaderAccessor.ReplyChannel
  type: Property
  source:
    remote:
      path: src/Messaging/src/Abstractions/Support/IMessageHeaderAccessor.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: ReplyChannel
    path: ../Steeltoe/src/Messaging/src/Abstractions/Support/IMessageHeaderAccessor.cs
    startLine: 28
  assemblies:
  - Steeltoe.Messaging.Abstractions
  namespace: Steeltoe.Messaging.Support
  syntax:
    content: object ReplyChannel { get; set; }
    parameters: []
    return:
      type: System.Object
    content.vb: Property ReplyChannel As Object
  overload: Steeltoe.Messaging.Support.IMessageHeaderAccessor.ReplyChannel*
  modifiers.csharp:
  - get
  - set
- uid: Steeltoe.Messaging.Support.IMessageHeaderAccessor.ErrorChannelName
  commentId: P:Steeltoe.Messaging.Support.IMessageHeaderAccessor.ErrorChannelName
  id: ErrorChannelName
  parent: Steeltoe.Messaging.Support.IMessageHeaderAccessor
  langs:
  - csharp
  - vb
  name: ErrorChannelName
  nameWithType: IMessageHeaderAccessor.ErrorChannelName
  fullName: Steeltoe.Messaging.Support.IMessageHeaderAccessor.ErrorChannelName
  type: Property
  source:
    remote:
      path: src/Messaging/src/Abstractions/Support/IMessageHeaderAccessor.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: ErrorChannelName
    path: ../Steeltoe/src/Messaging/src/Abstractions/Support/IMessageHeaderAccessor.cs
    startLine: 30
  assemblies:
  - Steeltoe.Messaging.Abstractions
  namespace: Steeltoe.Messaging.Support
  syntax:
    content: string ErrorChannelName { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Property ErrorChannelName As String
  overload: Steeltoe.Messaging.Support.IMessageHeaderAccessor.ErrorChannelName*
  modifiers.csharp:
  - get
  - set
- uid: Steeltoe.Messaging.Support.IMessageHeaderAccessor.ErrorChannel
  commentId: P:Steeltoe.Messaging.Support.IMessageHeaderAccessor.ErrorChannel
  id: ErrorChannel
  parent: Steeltoe.Messaging.Support.IMessageHeaderAccessor
  langs:
  - csharp
  - vb
  name: ErrorChannel
  nameWithType: IMessageHeaderAccessor.ErrorChannel
  fullName: Steeltoe.Messaging.Support.IMessageHeaderAccessor.ErrorChannel
  type: Property
  source:
    remote:
      path: src/Messaging/src/Abstractions/Support/IMessageHeaderAccessor.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: ErrorChannel
    path: ../Steeltoe/src/Messaging/src/Abstractions/Support/IMessageHeaderAccessor.cs
    startLine: 32
  assemblies:
  - Steeltoe.Messaging.Abstractions
  namespace: Steeltoe.Messaging.Support
  syntax:
    content: object ErrorChannel { get; set; }
    parameters: []
    return:
      type: System.Object
    content.vb: Property ErrorChannel As Object
  overload: Steeltoe.Messaging.Support.IMessageHeaderAccessor.ErrorChannel*
  modifiers.csharp:
  - get
  - set
- uid: Steeltoe.Messaging.Support.IMessageHeaderAccessor.EnableTimestamp
  commentId: P:Steeltoe.Messaging.Support.IMessageHeaderAccessor.EnableTimestamp
  id: EnableTimestamp
  parent: Steeltoe.Messaging.Support.IMessageHeaderAccessor
  langs:
  - csharp
  - vb
  name: EnableTimestamp
  nameWithType: IMessageHeaderAccessor.EnableTimestamp
  fullName: Steeltoe.Messaging.Support.IMessageHeaderAccessor.EnableTimestamp
  type: Property
  source:
    remote:
      path: src/Messaging/src/Abstractions/Support/IMessageHeaderAccessor.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: EnableTimestamp
    path: ../Steeltoe/src/Messaging/src/Abstractions/Support/IMessageHeaderAccessor.cs
    startLine: 34
  assemblies:
  - Steeltoe.Messaging.Abstractions
  namespace: Steeltoe.Messaging.Support
  syntax:
    content: bool EnableTimestamp { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Property EnableTimestamp As Boolean
  overload: Steeltoe.Messaging.Support.IMessageHeaderAccessor.EnableTimestamp*
  modifiers.csharp:
  - get
  - set
- uid: Steeltoe.Messaging.Support.IMessageHeaderAccessor.IdGenerator
  commentId: P:Steeltoe.Messaging.Support.IMessageHeaderAccessor.IdGenerator
  id: IdGenerator
  parent: Steeltoe.Messaging.Support.IMessageHeaderAccessor
  langs:
  - csharp
  - vb
  name: IdGenerator
  nameWithType: IMessageHeaderAccessor.IdGenerator
  fullName: Steeltoe.Messaging.Support.IMessageHeaderAccessor.IdGenerator
  type: Property
  source:
    remote:
      path: src/Messaging/src/Abstractions/Support/IMessageHeaderAccessor.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: IdGenerator
    path: ../Steeltoe/src/Messaging/src/Abstractions/Support/IMessageHeaderAccessor.cs
    startLine: 36
  assemblies:
  - Steeltoe.Messaging.Abstractions
  namespace: Steeltoe.Messaging.Support
  syntax:
    content: IIDGenerator IdGenerator { get; set; }
    parameters: []
    return:
      type: IIDGenerator
    content.vb: Property IdGenerator As IIDGenerator
  overload: Steeltoe.Messaging.Support.IMessageHeaderAccessor.IdGenerator*
  modifiers.csharp:
  - get
  - set
- uid: Steeltoe.Messaging.Support.IMessageHeaderAccessor.SetImmutable
  commentId: M:Steeltoe.Messaging.Support.IMessageHeaderAccessor.SetImmutable
  id: SetImmutable
  parent: Steeltoe.Messaging.Support.IMessageHeaderAccessor
  langs:
  - csharp
  - vb
  name: SetImmutable()
  nameWithType: IMessageHeaderAccessor.SetImmutable()
  fullName: Steeltoe.Messaging.Support.IMessageHeaderAccessor.SetImmutable()
  type: Method
  source:
    remote:
      path: src/Messaging/src/Abstractions/Support/IMessageHeaderAccessor.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: SetImmutable
    path: ../Steeltoe/src/Messaging/src/Abstractions/Support/IMessageHeaderAccessor.cs
    startLine: 38
  assemblies:
  - Steeltoe.Messaging.Abstractions
  namespace: Steeltoe.Messaging.Support
  syntax:
    content: void SetImmutable()
    content.vb: Sub SetImmutable
  overload: Steeltoe.Messaging.Support.IMessageHeaderAccessor.SetImmutable*
- uid: Steeltoe.Messaging.Support.IMessageHeaderAccessor.ToMessageHeaders
  commentId: M:Steeltoe.Messaging.Support.IMessageHeaderAccessor.ToMessageHeaders
  id: ToMessageHeaders
  parent: Steeltoe.Messaging.Support.IMessageHeaderAccessor
  langs:
  - csharp
  - vb
  name: ToMessageHeaders()
  nameWithType: IMessageHeaderAccessor.ToMessageHeaders()
  fullName: Steeltoe.Messaging.Support.IMessageHeaderAccessor.ToMessageHeaders()
  type: Method
  source:
    remote:
      path: src/Messaging/src/Abstractions/Support/IMessageHeaderAccessor.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: ToMessageHeaders
    path: ../Steeltoe/src/Messaging/src/Abstractions/Support/IMessageHeaderAccessor.cs
    startLine: 40
  assemblies:
  - Steeltoe.Messaging.Abstractions
  namespace: Steeltoe.Messaging.Support
  syntax:
    content: IMessageHeaders ToMessageHeaders()
    return:
      type: Steeltoe.Messaging.IMessageHeaders
    content.vb: Function ToMessageHeaders As IMessageHeaders
  overload: Steeltoe.Messaging.Support.IMessageHeaderAccessor.ToMessageHeaders*
- uid: Steeltoe.Messaging.Support.IMessageHeaderAccessor.ToDictionary
  commentId: M:Steeltoe.Messaging.Support.IMessageHeaderAccessor.ToDictionary
  id: ToDictionary
  parent: Steeltoe.Messaging.Support.IMessageHeaderAccessor
  langs:
  - csharp
  - vb
  name: ToDictionary()
  nameWithType: IMessageHeaderAccessor.ToDictionary()
  fullName: Steeltoe.Messaging.Support.IMessageHeaderAccessor.ToDictionary()
  type: Method
  source:
    remote:
      path: src/Messaging/src/Abstractions/Support/IMessageHeaderAccessor.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: ToDictionary
    path: ../Steeltoe/src/Messaging/src/Abstractions/Support/IMessageHeaderAccessor.cs
    startLine: 42
  assemblies:
  - Steeltoe.Messaging.Abstractions
  namespace: Steeltoe.Messaging.Support
  syntax:
    content: IDictionary<string, object> ToDictionary()
    return:
      type: System.Collections.Generic.IDictionary{System.String,System.Object}
    content.vb: Function ToDictionary As IDictionary(Of String, Object)
  overload: Steeltoe.Messaging.Support.IMessageHeaderAccessor.ToDictionary*
- uid: Steeltoe.Messaging.Support.IMessageHeaderAccessor.GetHeader(System.String)
  commentId: M:Steeltoe.Messaging.Support.IMessageHeaderAccessor.GetHeader(System.String)
  id: GetHeader(System.String)
  parent: Steeltoe.Messaging.Support.IMessageHeaderAccessor
  langs:
  - csharp
  - vb
  name: GetHeader(String)
  nameWithType: IMessageHeaderAccessor.GetHeader(String)
  fullName: Steeltoe.Messaging.Support.IMessageHeaderAccessor.GetHeader(System.String)
  type: Method
  source:
    remote:
      path: src/Messaging/src/Abstractions/Support/IMessageHeaderAccessor.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: GetHeader
    path: ../Steeltoe/src/Messaging/src/Abstractions/Support/IMessageHeaderAccessor.cs
    startLine: 44
  assemblies:
  - Steeltoe.Messaging.Abstractions
  namespace: Steeltoe.Messaging.Support
  syntax:
    content: object GetHeader(string headerName)
    parameters:
    - id: headerName
      type: System.String
    return:
      type: System.Object
    content.vb: Function GetHeader(headerName As String) As Object
  overload: Steeltoe.Messaging.Support.IMessageHeaderAccessor.GetHeader*
- uid: Steeltoe.Messaging.Support.IMessageHeaderAccessor.SetHeader(System.String,System.Object)
  commentId: M:Steeltoe.Messaging.Support.IMessageHeaderAccessor.SetHeader(System.String,System.Object)
  id: SetHeader(System.String,System.Object)
  parent: Steeltoe.Messaging.Support.IMessageHeaderAccessor
  langs:
  - csharp
  - vb
  name: SetHeader(String, Object)
  nameWithType: IMessageHeaderAccessor.SetHeader(String, Object)
  fullName: Steeltoe.Messaging.Support.IMessageHeaderAccessor.SetHeader(System.String, System.Object)
  type: Method
  source:
    remote:
      path: src/Messaging/src/Abstractions/Support/IMessageHeaderAccessor.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: SetHeader
    path: ../Steeltoe/src/Messaging/src/Abstractions/Support/IMessageHeaderAccessor.cs
    startLine: 46
  assemblies:
  - Steeltoe.Messaging.Abstractions
  namespace: Steeltoe.Messaging.Support
  syntax:
    content: void SetHeader(string name, object value)
    parameters:
    - id: name
      type: System.String
    - id: value
      type: System.Object
    content.vb: Sub SetHeader(name As String, value As Object)
  overload: Steeltoe.Messaging.Support.IMessageHeaderAccessor.SetHeader*
- uid: Steeltoe.Messaging.Support.IMessageHeaderAccessor.SetHeaderIfAbsent(System.String,System.Object)
  commentId: M:Steeltoe.Messaging.Support.IMessageHeaderAccessor.SetHeaderIfAbsent(System.String,System.Object)
  id: SetHeaderIfAbsent(System.String,System.Object)
  parent: Steeltoe.Messaging.Support.IMessageHeaderAccessor
  langs:
  - csharp
  - vb
  name: SetHeaderIfAbsent(String, Object)
  nameWithType: IMessageHeaderAccessor.SetHeaderIfAbsent(String, Object)
  fullName: Steeltoe.Messaging.Support.IMessageHeaderAccessor.SetHeaderIfAbsent(System.String, System.Object)
  type: Method
  source:
    remote:
      path: src/Messaging/src/Abstractions/Support/IMessageHeaderAccessor.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: SetHeaderIfAbsent
    path: ../Steeltoe/src/Messaging/src/Abstractions/Support/IMessageHeaderAccessor.cs
    startLine: 48
  assemblies:
  - Steeltoe.Messaging.Abstractions
  namespace: Steeltoe.Messaging.Support
  syntax:
    content: void SetHeaderIfAbsent(string name, object value)
    parameters:
    - id: name
      type: System.String
    - id: value
      type: System.Object
    content.vb: Sub SetHeaderIfAbsent(name As String, value As Object)
  overload: Steeltoe.Messaging.Support.IMessageHeaderAccessor.SetHeaderIfAbsent*
- uid: Steeltoe.Messaging.Support.IMessageHeaderAccessor.RemoveHeader(System.String)
  commentId: M:Steeltoe.Messaging.Support.IMessageHeaderAccessor.RemoveHeader(System.String)
  id: RemoveHeader(System.String)
  parent: Steeltoe.Messaging.Support.IMessageHeaderAccessor
  langs:
  - csharp
  - vb
  name: RemoveHeader(String)
  nameWithType: IMessageHeaderAccessor.RemoveHeader(String)
  fullName: Steeltoe.Messaging.Support.IMessageHeaderAccessor.RemoveHeader(System.String)
  type: Method
  source:
    remote:
      path: src/Messaging/src/Abstractions/Support/IMessageHeaderAccessor.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: RemoveHeader
    path: ../Steeltoe/src/Messaging/src/Abstractions/Support/IMessageHeaderAccessor.cs
    startLine: 50
  assemblies:
  - Steeltoe.Messaging.Abstractions
  namespace: Steeltoe.Messaging.Support
  syntax:
    content: void RemoveHeader(string headerName)
    parameters:
    - id: headerName
      type: System.String
    content.vb: Sub RemoveHeader(headerName As String)
  overload: Steeltoe.Messaging.Support.IMessageHeaderAccessor.RemoveHeader*
- uid: Steeltoe.Messaging.Support.IMessageHeaderAccessor.RemoveHeaders(System.String[])
  commentId: M:Steeltoe.Messaging.Support.IMessageHeaderAccessor.RemoveHeaders(System.String[])
  id: RemoveHeaders(System.String[])
  parent: Steeltoe.Messaging.Support.IMessageHeaderAccessor
  langs:
  - csharp
  - vb
  name: RemoveHeaders(String[])
  nameWithType: IMessageHeaderAccessor.RemoveHeaders(String[])
  fullName: Steeltoe.Messaging.Support.IMessageHeaderAccessor.RemoveHeaders(System.String[])
  type: Method
  source:
    remote:
      path: src/Messaging/src/Abstractions/Support/IMessageHeaderAccessor.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: RemoveHeaders
    path: ../Steeltoe/src/Messaging/src/Abstractions/Support/IMessageHeaderAccessor.cs
    startLine: 52
  assemblies:
  - Steeltoe.Messaging.Abstractions
  namespace: Steeltoe.Messaging.Support
  syntax:
    content: void RemoveHeaders(params string[] headerPatterns)
    parameters:
    - id: headerPatterns
      type: System.String[]
    content.vb: Sub RemoveHeaders(ParamArray headerPatterns As String())
  overload: Steeltoe.Messaging.Support.IMessageHeaderAccessor.RemoveHeaders*
  nameWithType.vb: IMessageHeaderAccessor.RemoveHeaders(String())
  fullName.vb: Steeltoe.Messaging.Support.IMessageHeaderAccessor.RemoveHeaders(System.String())
  name.vb: RemoveHeaders(String())
- uid: Steeltoe.Messaging.Support.IMessageHeaderAccessor.CopyHeaders(System.Collections.Generic.IDictionary{System.String,System.Object})
  commentId: M:Steeltoe.Messaging.Support.IMessageHeaderAccessor.CopyHeaders(System.Collections.Generic.IDictionary{System.String,System.Object})
  id: CopyHeaders(System.Collections.Generic.IDictionary{System.String,System.Object})
  parent: Steeltoe.Messaging.Support.IMessageHeaderAccessor
  langs:
  - csharp
  - vb
  name: CopyHeaders(IDictionary<String, Object>)
  nameWithType: IMessageHeaderAccessor.CopyHeaders(IDictionary<String, Object>)
  fullName: Steeltoe.Messaging.Support.IMessageHeaderAccessor.CopyHeaders(System.Collections.Generic.IDictionary<System.String, System.Object>)
  type: Method
  source:
    remote:
      path: src/Messaging/src/Abstractions/Support/IMessageHeaderAccessor.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: CopyHeaders
    path: ../Steeltoe/src/Messaging/src/Abstractions/Support/IMessageHeaderAccessor.cs
    startLine: 54
  assemblies:
  - Steeltoe.Messaging.Abstractions
  namespace: Steeltoe.Messaging.Support
  syntax:
    content: void CopyHeaders(IDictionary<string, object> headersToCopy)
    parameters:
    - id: headersToCopy
      type: System.Collections.Generic.IDictionary{System.String,System.Object}
    content.vb: Sub CopyHeaders(headersToCopy As IDictionary(Of String, Object))
  overload: Steeltoe.Messaging.Support.IMessageHeaderAccessor.CopyHeaders*
  nameWithType.vb: IMessageHeaderAccessor.CopyHeaders(IDictionary(Of String, Object))
  fullName.vb: Steeltoe.Messaging.Support.IMessageHeaderAccessor.CopyHeaders(System.Collections.Generic.IDictionary(Of System.String, System.Object))
  name.vb: CopyHeaders(IDictionary(Of String, Object))
- uid: Steeltoe.Messaging.Support.IMessageHeaderAccessor.CopyHeadersIfAbsent(System.Collections.Generic.IDictionary{System.String,System.Object})
  commentId: M:Steeltoe.Messaging.Support.IMessageHeaderAccessor.CopyHeadersIfAbsent(System.Collections.Generic.IDictionary{System.String,System.Object})
  id: CopyHeadersIfAbsent(System.Collections.Generic.IDictionary{System.String,System.Object})
  parent: Steeltoe.Messaging.Support.IMessageHeaderAccessor
  langs:
  - csharp
  - vb
  name: CopyHeadersIfAbsent(IDictionary<String, Object>)
  nameWithType: IMessageHeaderAccessor.CopyHeadersIfAbsent(IDictionary<String, Object>)
  fullName: Steeltoe.Messaging.Support.IMessageHeaderAccessor.CopyHeadersIfAbsent(System.Collections.Generic.IDictionary<System.String, System.Object>)
  type: Method
  source:
    remote:
      path: src/Messaging/src/Abstractions/Support/IMessageHeaderAccessor.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: CopyHeadersIfAbsent
    path: ../Steeltoe/src/Messaging/src/Abstractions/Support/IMessageHeaderAccessor.cs
    startLine: 56
  assemblies:
  - Steeltoe.Messaging.Abstractions
  namespace: Steeltoe.Messaging.Support
  syntax:
    content: void CopyHeadersIfAbsent(IDictionary<string, object> headersToCopy)
    parameters:
    - id: headersToCopy
      type: System.Collections.Generic.IDictionary{System.String,System.Object}
    content.vb: Sub CopyHeadersIfAbsent(headersToCopy As IDictionary(Of String, Object))
  overload: Steeltoe.Messaging.Support.IMessageHeaderAccessor.CopyHeadersIfAbsent*
  nameWithType.vb: IMessageHeaderAccessor.CopyHeadersIfAbsent(IDictionary(Of String, Object))
  fullName.vb: Steeltoe.Messaging.Support.IMessageHeaderAccessor.CopyHeadersIfAbsent(System.Collections.Generic.IDictionary(Of System.String, System.Object))
  name.vb: CopyHeadersIfAbsent(IDictionary(Of String, Object))
references:
- uid: Steeltoe.Messaging.Support
  commentId: N:Steeltoe.Messaging.Support
  name: Steeltoe.Messaging.Support
  nameWithType: Steeltoe.Messaging.Support
  fullName: Steeltoe.Messaging.Support
- uid: Steeltoe.Messaging.Support.IMessageHeaderAccessor.Id*
  commentId: Overload:Steeltoe.Messaging.Support.IMessageHeaderAccessor.Id
  name: Id
  nameWithType: IMessageHeaderAccessor.Id
  fullName: Steeltoe.Messaging.Support.IMessageHeaderAccessor.Id
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Steeltoe.Messaging.Support.IMessageHeaderAccessor.Timestamp*
  commentId: Overload:Steeltoe.Messaging.Support.IMessageHeaderAccessor.Timestamp
  name: Timestamp
  nameWithType: IMessageHeaderAccessor.Timestamp
  fullName: Steeltoe.Messaging.Support.IMessageHeaderAccessor.Timestamp
- uid: System.Nullable{System.Int64}
  commentId: T:System.Nullable{System.Int64}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Int64>
  nameWithType: Nullable<Int64>
  fullName: System.Nullable<System.Int64>
  nameWithType.vb: Nullable(Of Int64)
  fullName.vb: System.Nullable(Of System.Int64)
  name.vb: Nullable(Of Int64)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Support.IMessageHeaderAccessor.ContentType*
  commentId: Overload:Steeltoe.Messaging.Support.IMessageHeaderAccessor.ContentType
  name: ContentType
  nameWithType: IMessageHeaderAccessor.ContentType
  fullName: Steeltoe.Messaging.Support.IMessageHeaderAccessor.ContentType
- uid: Steeltoe.Messaging.Support.IMessageHeaderAccessor.LeaveMutable*
  commentId: Overload:Steeltoe.Messaging.Support.IMessageHeaderAccessor.LeaveMutable
  name: LeaveMutable
  nameWithType: IMessageHeaderAccessor.LeaveMutable
  fullName: Steeltoe.Messaging.Support.IMessageHeaderAccessor.LeaveMutable
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Steeltoe.Messaging.Support.IMessageHeaderAccessor.IsMutable*
  commentId: Overload:Steeltoe.Messaging.Support.IMessageHeaderAccessor.IsMutable
  name: IsMutable
  nameWithType: IMessageHeaderAccessor.IsMutable
  fullName: Steeltoe.Messaging.Support.IMessageHeaderAccessor.IsMutable
- uid: Steeltoe.Messaging.Support.IMessageHeaderAccessor.IsModified*
  commentId: Overload:Steeltoe.Messaging.Support.IMessageHeaderAccessor.IsModified
  name: IsModified
  nameWithType: IMessageHeaderAccessor.IsModified
  fullName: Steeltoe.Messaging.Support.IMessageHeaderAccessor.IsModified
- uid: Steeltoe.Messaging.Support.IMessageHeaderAccessor.MessageHeaders*
  commentId: Overload:Steeltoe.Messaging.Support.IMessageHeaderAccessor.MessageHeaders
  name: MessageHeaders
  nameWithType: IMessageHeaderAccessor.MessageHeaders
  fullName: Steeltoe.Messaging.Support.IMessageHeaderAccessor.MessageHeaders
- uid: Steeltoe.Messaging.IMessageHeaders
  commentId: T:Steeltoe.Messaging.IMessageHeaders
  parent: Steeltoe.Messaging
  name: IMessageHeaders
  nameWithType: IMessageHeaders
  fullName: Steeltoe.Messaging.IMessageHeaders
- uid: Steeltoe.Messaging
  commentId: N:Steeltoe.Messaging
  name: Steeltoe.Messaging
  nameWithType: Steeltoe.Messaging
  fullName: Steeltoe.Messaging
- uid: Steeltoe.Messaging.Support.IMessageHeaderAccessor.ReplyChannelName*
  commentId: Overload:Steeltoe.Messaging.Support.IMessageHeaderAccessor.ReplyChannelName
  name: ReplyChannelName
  nameWithType: IMessageHeaderAccessor.ReplyChannelName
  fullName: Steeltoe.Messaging.Support.IMessageHeaderAccessor.ReplyChannelName
- uid: Steeltoe.Messaging.Support.IMessageHeaderAccessor.ReplyChannel*
  commentId: Overload:Steeltoe.Messaging.Support.IMessageHeaderAccessor.ReplyChannel
  name: ReplyChannel
  nameWithType: IMessageHeaderAccessor.ReplyChannel
  fullName: Steeltoe.Messaging.Support.IMessageHeaderAccessor.ReplyChannel
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Steeltoe.Messaging.Support.IMessageHeaderAccessor.ErrorChannelName*
  commentId: Overload:Steeltoe.Messaging.Support.IMessageHeaderAccessor.ErrorChannelName
  name: ErrorChannelName
  nameWithType: IMessageHeaderAccessor.ErrorChannelName
  fullName: Steeltoe.Messaging.Support.IMessageHeaderAccessor.ErrorChannelName
- uid: Steeltoe.Messaging.Support.IMessageHeaderAccessor.ErrorChannel*
  commentId: Overload:Steeltoe.Messaging.Support.IMessageHeaderAccessor.ErrorChannel
  name: ErrorChannel
  nameWithType: IMessageHeaderAccessor.ErrorChannel
  fullName: Steeltoe.Messaging.Support.IMessageHeaderAccessor.ErrorChannel
- uid: Steeltoe.Messaging.Support.IMessageHeaderAccessor.EnableTimestamp*
  commentId: Overload:Steeltoe.Messaging.Support.IMessageHeaderAccessor.EnableTimestamp
  name: EnableTimestamp
  nameWithType: IMessageHeaderAccessor.EnableTimestamp
  fullName: Steeltoe.Messaging.Support.IMessageHeaderAccessor.EnableTimestamp
- uid: Steeltoe.Messaging.Support.IMessageHeaderAccessor.IdGenerator*
  commentId: Overload:Steeltoe.Messaging.Support.IMessageHeaderAccessor.IdGenerator
  name: IdGenerator
  nameWithType: IMessageHeaderAccessor.IdGenerator
  fullName: Steeltoe.Messaging.Support.IMessageHeaderAccessor.IdGenerator
- uid: IIDGenerator
  commentId: '!:IIDGenerator'
  isExternal: true
  name: IIDGenerator
  nameWithType: IIDGenerator
  fullName: IIDGenerator
- uid: Steeltoe.Messaging.Support.IMessageHeaderAccessor.SetImmutable*
  commentId: Overload:Steeltoe.Messaging.Support.IMessageHeaderAccessor.SetImmutable
  name: SetImmutable
  nameWithType: IMessageHeaderAccessor.SetImmutable
  fullName: Steeltoe.Messaging.Support.IMessageHeaderAccessor.SetImmutable
- uid: Steeltoe.Messaging.Support.IMessageHeaderAccessor.ToMessageHeaders*
  commentId: Overload:Steeltoe.Messaging.Support.IMessageHeaderAccessor.ToMessageHeaders
  name: ToMessageHeaders
  nameWithType: IMessageHeaderAccessor.ToMessageHeaders
  fullName: Steeltoe.Messaging.Support.IMessageHeaderAccessor.ToMessageHeaders
- uid: Steeltoe.Messaging.Support.IMessageHeaderAccessor.ToDictionary*
  commentId: Overload:Steeltoe.Messaging.Support.IMessageHeaderAccessor.ToDictionary
  name: ToDictionary
  nameWithType: IMessageHeaderAccessor.ToDictionary
  fullName: Steeltoe.Messaging.Support.IMessageHeaderAccessor.ToDictionary
- uid: System.Collections.Generic.IDictionary{System.String,System.Object}
  commentId: T:System.Collections.Generic.IDictionary{System.String,System.Object}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IDictionary`2
  name: IDictionary<String, Object>
  nameWithType: IDictionary<String, Object>
  fullName: System.Collections.Generic.IDictionary<System.String, System.Object>
  nameWithType.vb: IDictionary(Of String, Object)
  fullName.vb: System.Collections.Generic.IDictionary(Of System.String, System.Object)
  name.vb: IDictionary(Of String, Object)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IDictionary`2
  commentId: T:System.Collections.Generic.IDictionary`2
  isExternal: true
  name: IDictionary<TKey, TValue>
  nameWithType: IDictionary<TKey, TValue>
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>
  nameWithType.vb: IDictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.IDictionary(Of TKey, TValue)
  name.vb: IDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Steeltoe.Messaging.Support.IMessageHeaderAccessor.GetHeader*
  commentId: Overload:Steeltoe.Messaging.Support.IMessageHeaderAccessor.GetHeader
  name: GetHeader
  nameWithType: IMessageHeaderAccessor.GetHeader
  fullName: Steeltoe.Messaging.Support.IMessageHeaderAccessor.GetHeader
- uid: Steeltoe.Messaging.Support.IMessageHeaderAccessor.SetHeader*
  commentId: Overload:Steeltoe.Messaging.Support.IMessageHeaderAccessor.SetHeader
  name: SetHeader
  nameWithType: IMessageHeaderAccessor.SetHeader
  fullName: Steeltoe.Messaging.Support.IMessageHeaderAccessor.SetHeader
- uid: Steeltoe.Messaging.Support.IMessageHeaderAccessor.SetHeaderIfAbsent*
  commentId: Overload:Steeltoe.Messaging.Support.IMessageHeaderAccessor.SetHeaderIfAbsent
  name: SetHeaderIfAbsent
  nameWithType: IMessageHeaderAccessor.SetHeaderIfAbsent
  fullName: Steeltoe.Messaging.Support.IMessageHeaderAccessor.SetHeaderIfAbsent
- uid: Steeltoe.Messaging.Support.IMessageHeaderAccessor.RemoveHeader*
  commentId: Overload:Steeltoe.Messaging.Support.IMessageHeaderAccessor.RemoveHeader
  name: RemoveHeader
  nameWithType: IMessageHeaderAccessor.RemoveHeader
  fullName: Steeltoe.Messaging.Support.IMessageHeaderAccessor.RemoveHeader
- uid: Steeltoe.Messaging.Support.IMessageHeaderAccessor.RemoveHeaders*
  commentId: Overload:Steeltoe.Messaging.Support.IMessageHeaderAccessor.RemoveHeaders
  name: RemoveHeaders
  nameWithType: IMessageHeaderAccessor.RemoveHeaders
  fullName: Steeltoe.Messaging.Support.IMessageHeaderAccessor.RemoveHeaders
- uid: System.String[]
  isExternal: true
  name: String[]
  nameWithType: String[]
  fullName: System.String[]
  nameWithType.vb: String()
  fullName.vb: System.String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Steeltoe.Messaging.Support.IMessageHeaderAccessor.CopyHeaders*
  commentId: Overload:Steeltoe.Messaging.Support.IMessageHeaderAccessor.CopyHeaders
  name: CopyHeaders
  nameWithType: IMessageHeaderAccessor.CopyHeaders
  fullName: Steeltoe.Messaging.Support.IMessageHeaderAccessor.CopyHeaders
- uid: Steeltoe.Messaging.Support.IMessageHeaderAccessor.CopyHeadersIfAbsent*
  commentId: Overload:Steeltoe.Messaging.Support.IMessageHeaderAccessor.CopyHeadersIfAbsent
  name: CopyHeadersIfAbsent
  nameWithType: IMessageHeaderAccessor.CopyHeadersIfAbsent
  fullName: Steeltoe.Messaging.Support.IMessageHeaderAccessor.CopyHeadersIfAbsent
