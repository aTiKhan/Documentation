### YamlMime:ManagedReference
items:
- uid: Steeltoe.Management.Endpoint.Info.Contributor.GitInfoContributor
  commentId: T:Steeltoe.Management.Endpoint.Info.Contributor.GitInfoContributor
  id: GitInfoContributor
  parent: Steeltoe.Management.Endpoint.Info.Contributor
  children:
  - Steeltoe.Management.Endpoint.Info.Contributor.GitInfoContributor.#ctor(ILogger{Steeltoe.Management.Endpoint.Info.Contributor.GitInfoContributor})
  - Steeltoe.Management.Endpoint.Info.Contributor.GitInfoContributor.#ctor(System.String,ILogger{Steeltoe.Management.Endpoint.Info.Contributor.GitInfoContributor})
  - Steeltoe.Management.Endpoint.Info.Contributor.GitInfoContributor.AddKeyValue(System.Collections.Generic.Dictionary{System.String,System.Object},System.String,System.String)
  - Steeltoe.Management.Endpoint.Info.Contributor.GitInfoContributor.Contribute(Steeltoe.Management.Info.IInfoBuilder)
  - Steeltoe.Management.Endpoint.Info.Contributor.GitInfoContributor.ReadGitProperties(System.String)
  langs:
  - csharp
  - vb
  name: GitInfoContributor
  nameWithType: GitInfoContributor
  fullName: Steeltoe.Management.Endpoint.Info.Contributor.GitInfoContributor
  type: Class
  source:
    remote:
      path: src/Management/src/EndpointBase/Info/Contributor/GitInfoContributor.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: GitInfoContributor
    path: ../Steeltoe/src/Management/src/EndpointBase/Info/Contributor/GitInfoContributor.cs
    startLine: 13
  assemblies:
  - Steeltoe.Management.EndpointBase
  namespace: Steeltoe.Management.Endpoint.Info.Contributor
  syntax:
    content: 'public class GitInfoContributor : AbstractConfigurationContributor, IInfoContributor'
    content.vb: >-
      Public Class GitInfoContributor

          Inherits AbstractConfigurationContributor

          Implements IInfoContributor
  inheritance:
  - System.Object
  - Steeltoe.Management.Info.AbstractConfigurationContributor
  implements:
  - Steeltoe.Management.Info.IInfoContributor
  inheritedMembers:
  - Steeltoe.Management.Info.AbstractConfigurationContributor._config
  - Steeltoe.Management.Info.AbstractConfigurationContributor.Contribute(Steeltoe.Management.Info.IInfoBuilder,System.String,System.Boolean)
  - Steeltoe.Management.Info.AbstractConfigurationContributor.CreateDictionary(System.String,System.Boolean)
  - Steeltoe.Management.Info.AbstractConfigurationContributor.AddChildren(System.Collections.Generic.Dictionary{System.String,System.Object},System.Collections.Generic.IEnumerable{IConfigurationSection})
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Steeltoe.Management.Endpoint.Info.Contributor.GitInfoContributor.#ctor(ILogger{Steeltoe.Management.Endpoint.Info.Contributor.GitInfoContributor})
  commentId: M:Steeltoe.Management.Endpoint.Info.Contributor.GitInfoContributor.#ctor(ILogger{Steeltoe.Management.Endpoint.Info.Contributor.GitInfoContributor})
  id: '#ctor(ILogger{Steeltoe.Management.Endpoint.Info.Contributor.GitInfoContributor})'
  parent: Steeltoe.Management.Endpoint.Info.Contributor.GitInfoContributor
  langs:
  - csharp
  - vb
  name: GitInfoContributor(ILogger<GitInfoContributor>)
  nameWithType: GitInfoContributor.GitInfoContributor(ILogger<GitInfoContributor>)
  fullName: Steeltoe.Management.Endpoint.Info.Contributor.GitInfoContributor.GitInfoContributor(ILogger<Steeltoe.Management.Endpoint.Info.Contributor.GitInfoContributor>)
  type: Constructor
  source:
    remote:
      path: src/Management/src/EndpointBase/Info/Contributor/GitInfoContributor.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: .ctor
    path: ../Steeltoe/src/Management/src/EndpointBase/Info/Contributor/GitInfoContributor.cs
    startLine: 23
  assemblies:
  - Steeltoe.Management.EndpointBase
  namespace: Steeltoe.Management.Endpoint.Info.Contributor
  syntax:
    content: public GitInfoContributor(ILogger<GitInfoContributor> logger = null)
    parameters:
    - id: logger
      type: ILogger{Steeltoe.Management.Endpoint.Info.Contributor.GitInfoContributor}
    content.vb: Public Sub New(logger As ILogger(Of GitInfoContributor) = Nothing)
  overload: Steeltoe.Management.Endpoint.Info.Contributor.GitInfoContributor.#ctor*
  nameWithType.vb: GitInfoContributor.GitInfoContributor(ILogger(Of GitInfoContributor))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Steeltoe.Management.Endpoint.Info.Contributor.GitInfoContributor.GitInfoContributor(ILogger(Of Steeltoe.Management.Endpoint.Info.Contributor.GitInfoContributor))
  name.vb: GitInfoContributor(ILogger(Of GitInfoContributor))
- uid: Steeltoe.Management.Endpoint.Info.Contributor.GitInfoContributor.#ctor(System.String,ILogger{Steeltoe.Management.Endpoint.Info.Contributor.GitInfoContributor})
  commentId: M:Steeltoe.Management.Endpoint.Info.Contributor.GitInfoContributor.#ctor(System.String,ILogger{Steeltoe.Management.Endpoint.Info.Contributor.GitInfoContributor})
  id: '#ctor(System.String,ILogger{Steeltoe.Management.Endpoint.Info.Contributor.GitInfoContributor})'
  parent: Steeltoe.Management.Endpoint.Info.Contributor.GitInfoContributor
  langs:
  - csharp
  - vb
  name: GitInfoContributor(String, ILogger<GitInfoContributor>)
  nameWithType: GitInfoContributor.GitInfoContributor(String, ILogger<GitInfoContributor>)
  fullName: Steeltoe.Management.Endpoint.Info.Contributor.GitInfoContributor.GitInfoContributor(System.String, ILogger<Steeltoe.Management.Endpoint.Info.Contributor.GitInfoContributor>)
  type: Constructor
  source:
    remote:
      path: src/Management/src/EndpointBase/Info/Contributor/GitInfoContributor.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: .ctor
    path: ../Steeltoe/src/Management/src/EndpointBase/Info/Contributor/GitInfoContributor.cs
    startLine: 29
  assemblies:
  - Steeltoe.Management.EndpointBase
  namespace: Steeltoe.Management.Endpoint.Info.Contributor
  syntax:
    content: public GitInfoContributor(string propFile, ILogger<GitInfoContributor> logger = null)
    parameters:
    - id: propFile
      type: System.String
    - id: logger
      type: ILogger{Steeltoe.Management.Endpoint.Info.Contributor.GitInfoContributor}
    content.vb: Public Sub New(propFile As String, logger As ILogger(Of GitInfoContributor) = Nothing)
  overload: Steeltoe.Management.Endpoint.Info.Contributor.GitInfoContributor.#ctor*
  nameWithType.vb: GitInfoContributor.GitInfoContributor(String, ILogger(Of GitInfoContributor))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Steeltoe.Management.Endpoint.Info.Contributor.GitInfoContributor.GitInfoContributor(System.String, ILogger(Of Steeltoe.Management.Endpoint.Info.Contributor.GitInfoContributor))
  name.vb: GitInfoContributor(String, ILogger(Of GitInfoContributor))
- uid: Steeltoe.Management.Endpoint.Info.Contributor.GitInfoContributor.Contribute(Steeltoe.Management.Info.IInfoBuilder)
  commentId: M:Steeltoe.Management.Endpoint.Info.Contributor.GitInfoContributor.Contribute(Steeltoe.Management.Info.IInfoBuilder)
  id: Contribute(Steeltoe.Management.Info.IInfoBuilder)
  parent: Steeltoe.Management.Endpoint.Info.Contributor.GitInfoContributor
  langs:
  - csharp
  - vb
  name: Contribute(IInfoBuilder)
  nameWithType: GitInfoContributor.Contribute(IInfoBuilder)
  fullName: Steeltoe.Management.Endpoint.Info.Contributor.GitInfoContributor.Contribute(Steeltoe.Management.Info.IInfoBuilder)
  type: Method
  source:
    remote:
      path: src/Management/src/EndpointBase/Info/Contributor/GitInfoContributor.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Contribute
    path: ../Steeltoe/src/Management/src/EndpointBase/Info/Contributor/GitInfoContributor.cs
    startLine: 36
  assemblies:
  - Steeltoe.Management.EndpointBase
  namespace: Steeltoe.Management.Endpoint.Info.Contributor
  syntax:
    content: public virtual void Contribute(IInfoBuilder builder)
    parameters:
    - id: builder
      type: Steeltoe.Management.Info.IInfoBuilder
    content.vb: Public Overridable Sub Contribute(builder As IInfoBuilder)
  overload: Steeltoe.Management.Endpoint.Info.Contributor.GitInfoContributor.Contribute*
  implements:
  - Steeltoe.Management.Info.IInfoContributor.Contribute(Steeltoe.Management.Info.IInfoBuilder)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Steeltoe.Management.Endpoint.Info.Contributor.GitInfoContributor.ReadGitProperties(System.String)
  commentId: M:Steeltoe.Management.Endpoint.Info.Contributor.GitInfoContributor.ReadGitProperties(System.String)
  id: ReadGitProperties(System.String)
  parent: Steeltoe.Management.Endpoint.Info.Contributor.GitInfoContributor
  langs:
  - csharp
  - vb
  name: ReadGitProperties(String)
  nameWithType: GitInfoContributor.ReadGitProperties(String)
  fullName: Steeltoe.Management.Endpoint.Info.Contributor.GitInfoContributor.ReadGitProperties(System.String)
  type: Method
  source:
    remote:
      path: src/Management/src/EndpointBase/Info/Contributor/GitInfoContributor.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: ReadGitProperties
    path: ../Steeltoe/src/Management/src/EndpointBase/Info/Contributor/GitInfoContributor.cs
    startLine: 42
  assemblies:
  - Steeltoe.Management.EndpointBase
  namespace: Steeltoe.Management.Endpoint.Info.Contributor
  syntax:
    content: public virtual IConfiguration ReadGitProperties(string propFile)
    parameters:
    - id: propFile
      type: System.String
    return:
      type: IConfiguration
    content.vb: Public Overridable Function ReadGitProperties(propFile As String) As IConfiguration
  overload: Steeltoe.Management.Endpoint.Info.Contributor.GitInfoContributor.ReadGitProperties*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Steeltoe.Management.Endpoint.Info.Contributor.GitInfoContributor.AddKeyValue(System.Collections.Generic.Dictionary{System.String,System.Object},System.String,System.String)
  commentId: M:Steeltoe.Management.Endpoint.Info.Contributor.GitInfoContributor.AddKeyValue(System.Collections.Generic.Dictionary{System.String,System.Object},System.String,System.String)
  id: AddKeyValue(System.Collections.Generic.Dictionary{System.String,System.Object},System.String,System.String)
  parent: Steeltoe.Management.Endpoint.Info.Contributor.GitInfoContributor
  langs:
  - csharp
  - vb
  name: AddKeyValue(Dictionary<String, Object>, String, String)
  nameWithType: GitInfoContributor.AddKeyValue(Dictionary<String, Object>, String, String)
  fullName: Steeltoe.Management.Endpoint.Info.Contributor.GitInfoContributor.AddKeyValue(System.Collections.Generic.Dictionary<System.String, System.Object>, System.String, System.String)
  type: Method
  source:
    remote:
      path: src/Management/src/EndpointBase/Info/Contributor/GitInfoContributor.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: AddKeyValue
    path: ../Steeltoe/src/Management/src/EndpointBase/Info/Contributor/GitInfoContributor.cs
    startLine: 83
  assemblies:
  - Steeltoe.Management.EndpointBase
  namespace: Steeltoe.Management.Endpoint.Info.Contributor
  syntax:
    content: protected override void AddKeyValue(Dictionary<string, object> dict, string key, string value)
    parameters:
    - id: dict
      type: System.Collections.Generic.Dictionary{System.String,System.Object}
    - id: key
      type: System.String
    - id: value
      type: System.String
    content.vb: Protected Overrides Sub AddKeyValue(dict As Dictionary(Of String, Object), key As String, value As String)
  overridden: Steeltoe.Management.Info.AbstractConfigurationContributor.AddKeyValue(System.Collections.Generic.Dictionary{System.String,System.Object},System.String,System.String)
  overload: Steeltoe.Management.Endpoint.Info.Contributor.GitInfoContributor.AddKeyValue*
  nameWithType.vb: GitInfoContributor.AddKeyValue(Dictionary(Of String, Object), String, String)
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
  fullName.vb: Steeltoe.Management.Endpoint.Info.Contributor.GitInfoContributor.AddKeyValue(System.Collections.Generic.Dictionary(Of System.String, System.Object), System.String, System.String)
  name.vb: AddKeyValue(Dictionary(Of String, Object), String, String)
references:
- uid: Steeltoe.Management.Endpoint.Info.Contributor
  commentId: N:Steeltoe.Management.Endpoint.Info.Contributor
  name: Steeltoe.Management.Endpoint.Info.Contributor
  nameWithType: Steeltoe.Management.Endpoint.Info.Contributor
  fullName: Steeltoe.Management.Endpoint.Info.Contributor
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Steeltoe.Management.Info.AbstractConfigurationContributor
  commentId: T:Steeltoe.Management.Info.AbstractConfigurationContributor
  parent: Steeltoe.Management.Info
  name: AbstractConfigurationContributor
  nameWithType: AbstractConfigurationContributor
  fullName: Steeltoe.Management.Info.AbstractConfigurationContributor
- uid: Steeltoe.Management.Info.IInfoContributor
  commentId: T:Steeltoe.Management.Info.IInfoContributor
  parent: Steeltoe.Management.Info
  name: IInfoContributor
  nameWithType: IInfoContributor
  fullName: Steeltoe.Management.Info.IInfoContributor
- uid: Steeltoe.Management.Info.AbstractConfigurationContributor._config
  commentId: F:Steeltoe.Management.Info.AbstractConfigurationContributor._config
  parent: Steeltoe.Management.Info.AbstractConfigurationContributor
  name: _config
  nameWithType: AbstractConfigurationContributor._config
  fullName: Steeltoe.Management.Info.AbstractConfigurationContributor._config
- uid: Steeltoe.Management.Info.AbstractConfigurationContributor.Contribute(Steeltoe.Management.Info.IInfoBuilder,System.String,System.Boolean)
  commentId: M:Steeltoe.Management.Info.AbstractConfigurationContributor.Contribute(Steeltoe.Management.Info.IInfoBuilder,System.String,System.Boolean)
  parent: Steeltoe.Management.Info.AbstractConfigurationContributor
  isExternal: true
  name: Contribute(IInfoBuilder, String, Boolean)
  nameWithType: AbstractConfigurationContributor.Contribute(IInfoBuilder, String, Boolean)
  fullName: Steeltoe.Management.Info.AbstractConfigurationContributor.Contribute(Steeltoe.Management.Info.IInfoBuilder, System.String, System.Boolean)
  spec.csharp:
  - uid: Steeltoe.Management.Info.AbstractConfigurationContributor.Contribute(Steeltoe.Management.Info.IInfoBuilder,System.String,System.Boolean)
    name: Contribute
    nameWithType: AbstractConfigurationContributor.Contribute
    fullName: Steeltoe.Management.Info.AbstractConfigurationContributor.Contribute
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Management.Info.IInfoBuilder
    name: IInfoBuilder
    nameWithType: IInfoBuilder
    fullName: Steeltoe.Management.Info.IInfoBuilder
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Management.Info.AbstractConfigurationContributor.Contribute(Steeltoe.Management.Info.IInfoBuilder,System.String,System.Boolean)
    name: Contribute
    nameWithType: AbstractConfigurationContributor.Contribute
    fullName: Steeltoe.Management.Info.AbstractConfigurationContributor.Contribute
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Management.Info.IInfoBuilder
    name: IInfoBuilder
    nameWithType: IInfoBuilder
    fullName: Steeltoe.Management.Info.IInfoBuilder
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Management.Info.AbstractConfigurationContributor.CreateDictionary(System.String,System.Boolean)
  commentId: M:Steeltoe.Management.Info.AbstractConfigurationContributor.CreateDictionary(System.String,System.Boolean)
  parent: Steeltoe.Management.Info.AbstractConfigurationContributor
  isExternal: true
  name: CreateDictionary(String, Boolean)
  nameWithType: AbstractConfigurationContributor.CreateDictionary(String, Boolean)
  fullName: Steeltoe.Management.Info.AbstractConfigurationContributor.CreateDictionary(System.String, System.Boolean)
  spec.csharp:
  - uid: Steeltoe.Management.Info.AbstractConfigurationContributor.CreateDictionary(System.String,System.Boolean)
    name: CreateDictionary
    nameWithType: AbstractConfigurationContributor.CreateDictionary
    fullName: Steeltoe.Management.Info.AbstractConfigurationContributor.CreateDictionary
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Management.Info.AbstractConfigurationContributor.CreateDictionary(System.String,System.Boolean)
    name: CreateDictionary
    nameWithType: AbstractConfigurationContributor.CreateDictionary
    fullName: Steeltoe.Management.Info.AbstractConfigurationContributor.CreateDictionary
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Management.Info.AbstractConfigurationContributor.AddChildren(System.Collections.Generic.Dictionary{System.String,System.Object},System.Collections.Generic.IEnumerable{IConfigurationSection})
  commentId: M:Steeltoe.Management.Info.AbstractConfigurationContributor.AddChildren(System.Collections.Generic.Dictionary{System.String,System.Object},System.Collections.Generic.IEnumerable{IConfigurationSection})
  parent: Steeltoe.Management.Info.AbstractConfigurationContributor
  isExternal: true
  name: AddChildren(Dictionary<String, Object>, IEnumerable<IConfigurationSection>)
  nameWithType: AbstractConfigurationContributor.AddChildren(Dictionary<String, Object>, IEnumerable<IConfigurationSection>)
  fullName: Steeltoe.Management.Info.AbstractConfigurationContributor.AddChildren(System.Collections.Generic.Dictionary<System.String, System.Object>, System.Collections.Generic.IEnumerable<IConfigurationSection>)
  nameWithType.vb: AbstractConfigurationContributor.AddChildren(Dictionary(Of String, Object), IEnumerable(Of IConfigurationSection))
  fullName.vb: Steeltoe.Management.Info.AbstractConfigurationContributor.AddChildren(System.Collections.Generic.Dictionary(Of System.String, System.Object), System.Collections.Generic.IEnumerable(Of IConfigurationSection))
  name.vb: AddChildren(Dictionary(Of String, Object), IEnumerable(Of IConfigurationSection))
  spec.csharp:
  - uid: Steeltoe.Management.Info.AbstractConfigurationContributor.AddChildren(System.Collections.Generic.Dictionary{System.String,System.Object},System.Collections.Generic.IEnumerable{IConfigurationSection})
    name: AddChildren
    nameWithType: AbstractConfigurationContributor.AddChildren
    fullName: Steeltoe.Management.Info.AbstractConfigurationContributor.AddChildren
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: IConfigurationSection
    name: IConfigurationSection
    nameWithType: IConfigurationSection
    fullName: IConfigurationSection
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Management.Info.AbstractConfigurationContributor.AddChildren(System.Collections.Generic.Dictionary{System.String,System.Object},System.Collections.Generic.IEnumerable{IConfigurationSection})
    name: AddChildren
    nameWithType: AbstractConfigurationContributor.AddChildren
    fullName: Steeltoe.Management.Info.AbstractConfigurationContributor.AddChildren
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: IConfigurationSection
    name: IConfigurationSection
    nameWithType: IConfigurationSection
    fullName: IConfigurationSection
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Steeltoe.Management.Info
  commentId: N:Steeltoe.Management.Info
  name: Steeltoe.Management.Info
  nameWithType: Steeltoe.Management.Info
  fullName: Steeltoe.Management.Info
- uid: Steeltoe.Management.Endpoint.Info.Contributor.GitInfoContributor.#ctor*
  commentId: Overload:Steeltoe.Management.Endpoint.Info.Contributor.GitInfoContributor.#ctor
  name: GitInfoContributor
  nameWithType: GitInfoContributor.GitInfoContributor
  fullName: Steeltoe.Management.Endpoint.Info.Contributor.GitInfoContributor.GitInfoContributor
- uid: ILogger{Steeltoe.Management.Endpoint.Info.Contributor.GitInfoContributor}
  commentId: '!:ILogger{Steeltoe.Management.Endpoint.Info.Contributor.GitInfoContributor}'
  definition: ILogger`1
  name: ILogger<GitInfoContributor>
  nameWithType: ILogger<GitInfoContributor>
  fullName: ILogger<Steeltoe.Management.Endpoint.Info.Contributor.GitInfoContributor>
  nameWithType.vb: ILogger(Of GitInfoContributor)
  fullName.vb: ILogger(Of Steeltoe.Management.Endpoint.Info.Contributor.GitInfoContributor)
  name.vb: ILogger(Of GitInfoContributor)
  spec.csharp:
  - uid: ILogger`1
    name: ILogger
    nameWithType: ILogger
    fullName: ILogger
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Steeltoe.Management.Endpoint.Info.Contributor.GitInfoContributor
    name: GitInfoContributor
    nameWithType: GitInfoContributor
    fullName: Steeltoe.Management.Endpoint.Info.Contributor.GitInfoContributor
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: ILogger`1
    name: ILogger
    nameWithType: ILogger
    fullName: ILogger
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Steeltoe.Management.Endpoint.Info.Contributor.GitInfoContributor
    name: GitInfoContributor
    nameWithType: GitInfoContributor
    fullName: Steeltoe.Management.Endpoint.Info.Contributor.GitInfoContributor
  - name: )
    nameWithType: )
    fullName: )
- uid: ILogger`1
  isExternal: true
  name: ILogger<>
  nameWithType: ILogger<>
  fullName: ILogger<>
  nameWithType.vb: ILogger(Of )
  fullName.vb: ILogger(Of )
  name.vb: ILogger(Of )
  spec.csharp:
  - uid: ILogger`1
    name: ILogger
    nameWithType: ILogger
    fullName: ILogger
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: ILogger`1
    name: ILogger
    nameWithType: ILogger
    fullName: ILogger
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Steeltoe.Management.Endpoint.Info.Contributor.GitInfoContributor.Contribute*
  commentId: Overload:Steeltoe.Management.Endpoint.Info.Contributor.GitInfoContributor.Contribute
  name: Contribute
  nameWithType: GitInfoContributor.Contribute
  fullName: Steeltoe.Management.Endpoint.Info.Contributor.GitInfoContributor.Contribute
- uid: Steeltoe.Management.Info.IInfoContributor.Contribute(Steeltoe.Management.Info.IInfoBuilder)
  commentId: M:Steeltoe.Management.Info.IInfoContributor.Contribute(Steeltoe.Management.Info.IInfoBuilder)
  parent: Steeltoe.Management.Info.IInfoContributor
  name: Contribute(IInfoBuilder)
  nameWithType: IInfoContributor.Contribute(IInfoBuilder)
  fullName: Steeltoe.Management.Info.IInfoContributor.Contribute(Steeltoe.Management.Info.IInfoBuilder)
  spec.csharp:
  - uid: Steeltoe.Management.Info.IInfoContributor.Contribute(Steeltoe.Management.Info.IInfoBuilder)
    name: Contribute
    nameWithType: IInfoContributor.Contribute
    fullName: Steeltoe.Management.Info.IInfoContributor.Contribute
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Management.Info.IInfoBuilder
    name: IInfoBuilder
    nameWithType: IInfoBuilder
    fullName: Steeltoe.Management.Info.IInfoBuilder
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Management.Info.IInfoContributor.Contribute(Steeltoe.Management.Info.IInfoBuilder)
    name: Contribute
    nameWithType: IInfoContributor.Contribute
    fullName: Steeltoe.Management.Info.IInfoContributor.Contribute
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Management.Info.IInfoBuilder
    name: IInfoBuilder
    nameWithType: IInfoBuilder
    fullName: Steeltoe.Management.Info.IInfoBuilder
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Management.Info.IInfoBuilder
  commentId: T:Steeltoe.Management.Info.IInfoBuilder
  parent: Steeltoe.Management.Info
  name: IInfoBuilder
  nameWithType: IInfoBuilder
  fullName: Steeltoe.Management.Info.IInfoBuilder
- uid: Steeltoe.Management.Endpoint.Info.Contributor.GitInfoContributor.ReadGitProperties*
  commentId: Overload:Steeltoe.Management.Endpoint.Info.Contributor.GitInfoContributor.ReadGitProperties
  name: ReadGitProperties
  nameWithType: GitInfoContributor.ReadGitProperties
  fullName: Steeltoe.Management.Endpoint.Info.Contributor.GitInfoContributor.ReadGitProperties
- uid: IConfiguration
  isExternal: true
  name: IConfiguration
  nameWithType: IConfiguration
  fullName: IConfiguration
- uid: Steeltoe.Management.Info.AbstractConfigurationContributor.AddKeyValue(System.Collections.Generic.Dictionary{System.String,System.Object},System.String,System.String)
  commentId: M:Steeltoe.Management.Info.AbstractConfigurationContributor.AddKeyValue(System.Collections.Generic.Dictionary{System.String,System.Object},System.String,System.String)
  parent: Steeltoe.Management.Info.AbstractConfigurationContributor
  isExternal: true
  name: AddKeyValue(Dictionary<String, Object>, String, String)
  nameWithType: AbstractConfigurationContributor.AddKeyValue(Dictionary<String, Object>, String, String)
  fullName: Steeltoe.Management.Info.AbstractConfigurationContributor.AddKeyValue(System.Collections.Generic.Dictionary<System.String, System.Object>, System.String, System.String)
  nameWithType.vb: AbstractConfigurationContributor.AddKeyValue(Dictionary(Of String, Object), String, String)
  fullName.vb: Steeltoe.Management.Info.AbstractConfigurationContributor.AddKeyValue(System.Collections.Generic.Dictionary(Of System.String, System.Object), System.String, System.String)
  name.vb: AddKeyValue(Dictionary(Of String, Object), String, String)
  spec.csharp:
  - uid: Steeltoe.Management.Info.AbstractConfigurationContributor.AddKeyValue(System.Collections.Generic.Dictionary{System.String,System.Object},System.String,System.String)
    name: AddKeyValue
    nameWithType: AbstractConfigurationContributor.AddKeyValue
    fullName: Steeltoe.Management.Info.AbstractConfigurationContributor.AddKeyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Management.Info.AbstractConfigurationContributor.AddKeyValue(System.Collections.Generic.Dictionary{System.String,System.Object},System.String,System.String)
    name: AddKeyValue
    nameWithType: AbstractConfigurationContributor.AddKeyValue
    fullName: Steeltoe.Management.Info.AbstractConfigurationContributor.AddKeyValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Management.Endpoint.Info.Contributor.GitInfoContributor.AddKeyValue*
  commentId: Overload:Steeltoe.Management.Endpoint.Info.Contributor.GitInfoContributor.AddKeyValue
  name: AddKeyValue
  nameWithType: GitInfoContributor.AddKeyValue
  fullName: Steeltoe.Management.Endpoint.Info.Contributor.GitInfoContributor.AddKeyValue
- uid: System.Collections.Generic.Dictionary{System.String,System.Object}
  commentId: T:System.Collections.Generic.Dictionary{System.String,System.Object}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  name: Dictionary<String, Object>
  nameWithType: Dictionary<String, Object>
  fullName: System.Collections.Generic.Dictionary<System.String, System.Object>
  nameWithType.vb: Dictionary(Of String, Object)
  fullName.vb: System.Collections.Generic.Dictionary(Of System.String, System.Object)
  name.vb: Dictionary(Of String, Object)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Dictionary`2
  commentId: T:System.Collections.Generic.Dictionary`2
  isExternal: true
  name: Dictionary<TKey, TValue>
  nameWithType: Dictionary<TKey, TValue>
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>
  nameWithType.vb: Dictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue)
  name.vb: Dictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
