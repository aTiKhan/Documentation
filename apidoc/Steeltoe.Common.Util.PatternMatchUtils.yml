### YamlMime:ManagedReference
items:
- uid: Steeltoe.Common.Util.PatternMatchUtils
  commentId: T:Steeltoe.Common.Util.PatternMatchUtils
  id: PatternMatchUtils
  parent: Steeltoe.Common.Util
  children:
  - Steeltoe.Common.Util.PatternMatchUtils.SimpleMatch(System.String,System.String)
  - Steeltoe.Common.Util.PatternMatchUtils.SimpleMatch(System.String[],System.String)
  langs:
  - csharp
  - vb
  name: PatternMatchUtils
  nameWithType: PatternMatchUtils
  fullName: Steeltoe.Common.Util.PatternMatchUtils
  type: Class
  source:
    remote:
      path: src/Common/src/Common/Util/PatternMatchUtils.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: PatternMatchUtils
    path: ../Steeltoe/src/Common/src/Common/Util/PatternMatchUtils.cs
    startLine: 6
  assemblies:
  - Steeltoe.Common
  namespace: Steeltoe.Common.Util
  syntax:
    content: public static class PatternMatchUtils
    content.vb: Public Module PatternMatchUtils
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Steeltoe.Common.Util.PatternMatchUtils.SimpleMatch(System.String,System.String)
  commentId: M:Steeltoe.Common.Util.PatternMatchUtils.SimpleMatch(System.String,System.String)
  id: SimpleMatch(System.String,System.String)
  parent: Steeltoe.Common.Util.PatternMatchUtils
  langs:
  - csharp
  - vb
  name: SimpleMatch(String, String)
  nameWithType: PatternMatchUtils.SimpleMatch(String, String)
  fullName: Steeltoe.Common.Util.PatternMatchUtils.SimpleMatch(System.String, System.String)
  type: Method
  source:
    remote:
      path: src/Common/src/Common/Util/PatternMatchUtils.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: SimpleMatch
    path: ../Steeltoe/src/Common/src/Common/Util/PatternMatchUtils.cs
    startLine: 8
  assemblies:
  - Steeltoe.Common
  namespace: Steeltoe.Common.Util
  syntax:
    content: public static bool SimpleMatch(string pattern, string str)
    parameters:
    - id: pattern
      type: System.String
    - id: str
      type: System.String
    return:
      type: System.Boolean
    content.vb: Public Shared Function SimpleMatch(pattern As String, str As String) As Boolean
  overload: Steeltoe.Common.Util.PatternMatchUtils.SimpleMatch*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Steeltoe.Common.Util.PatternMatchUtils.SimpleMatch(System.String[],System.String)
  commentId: M:Steeltoe.Common.Util.PatternMatchUtils.SimpleMatch(System.String[],System.String)
  id: SimpleMatch(System.String[],System.String)
  parent: Steeltoe.Common.Util.PatternMatchUtils
  langs:
  - csharp
  - vb
  name: SimpleMatch(String[], String)
  nameWithType: PatternMatchUtils.SimpleMatch(String[], String)
  fullName: Steeltoe.Common.Util.PatternMatchUtils.SimpleMatch(System.String[], System.String)
  type: Method
  source:
    remote:
      path: src/Common/src/Common/Util/PatternMatchUtils.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: SimpleMatch
    path: ../Steeltoe/src/Common/src/Common/Util/PatternMatchUtils.cs
    startLine: 59
  assemblies:
  - Steeltoe.Common
  namespace: Steeltoe.Common.Util
  syntax:
    content: public static bool SimpleMatch(string[] patterns, string str)
    parameters:
    - id: patterns
      type: System.String[]
    - id: str
      type: System.String
    return:
      type: System.Boolean
    content.vb: Public Shared Function SimpleMatch(patterns As String(), str As String) As Boolean
  overload: Steeltoe.Common.Util.PatternMatchUtils.SimpleMatch*
  nameWithType.vb: PatternMatchUtils.SimpleMatch(String(), String)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Steeltoe.Common.Util.PatternMatchUtils.SimpleMatch(System.String(), System.String)
  name.vb: SimpleMatch(String(), String)
references:
- uid: Steeltoe.Common.Util
  commentId: N:Steeltoe.Common.Util
  name: Steeltoe.Common.Util
  nameWithType: Steeltoe.Common.Util
  fullName: Steeltoe.Common.Util
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Steeltoe.Common.Util.PatternMatchUtils.SimpleMatch*
  commentId: Overload:Steeltoe.Common.Util.PatternMatchUtils.SimpleMatch
  name: SimpleMatch
  nameWithType: PatternMatchUtils.SimpleMatch
  fullName: Steeltoe.Common.Util.PatternMatchUtils.SimpleMatch
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.String[]
  isExternal: true
  name: String[]
  nameWithType: String[]
  fullName: System.String[]
  nameWithType.vb: String()
  fullName.vb: System.String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
