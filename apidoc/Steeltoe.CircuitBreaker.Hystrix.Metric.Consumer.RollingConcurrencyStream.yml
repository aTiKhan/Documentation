### YamlMime:ManagedReference
items:
- uid: Steeltoe.CircuitBreaker.Hystrix.Metric.Consumer.RollingConcurrencyStream
  commentId: T:Steeltoe.CircuitBreaker.Hystrix.Metric.Consumer.RollingConcurrencyStream
  id: RollingConcurrencyStream
  parent: Steeltoe.CircuitBreaker.Hystrix.Metric.Consumer
  children:
  - Steeltoe.CircuitBreaker.Hystrix.Metric.Consumer.RollingConcurrencyStream.#ctor(Steeltoe.CircuitBreaker.Hystrix.Metric.IHystrixEventStream{Steeltoe.CircuitBreaker.Hystrix.Metric.HystrixCommandExecutionStarted},System.Int32,System.Int32)
  - Steeltoe.CircuitBreaker.Hystrix.Metric.Consumer.RollingConcurrencyStream.LatestRollingMax
  - Steeltoe.CircuitBreaker.Hystrix.Metric.Consumer.RollingConcurrencyStream.Observe
  - Steeltoe.CircuitBreaker.Hystrix.Metric.Consumer.RollingConcurrencyStream.StartCachingStreamValuesIfUnstarted
  - Steeltoe.CircuitBreaker.Hystrix.Metric.Consumer.RollingConcurrencyStream.Unsubscribe
  langs:
  - csharp
  - vb
  name: RollingConcurrencyStream
  nameWithType: RollingConcurrencyStream
  fullName: Steeltoe.CircuitBreaker.Hystrix.Metric.Consumer.RollingConcurrencyStream
  type: Class
  source:
    remote:
      path: src/CircuitBreaker/src/HystrixBase/Metric/Consumer/RollingConcurrencyStream.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: RollingConcurrencyStream
    path: ../Steeltoe/src/CircuitBreaker/src/HystrixBase/Metric/Consumer/RollingConcurrencyStream.cs
    startLine: 15
  assemblies:
  - Steeltoe.CircuitBreaker.HystrixBase
  namespace: Steeltoe.CircuitBreaker.Hystrix.Metric.Consumer
  syntax:
    content: public abstract class RollingConcurrencyStream
    content.vb: Public MustInherit Class RollingConcurrencyStream
  inheritance:
  - System.Object
  derivedClasses:
  - Steeltoe.CircuitBreaker.Hystrix.Metric.Consumer.RollingCommandMaxConcurrencyStream
  - Steeltoe.CircuitBreaker.Hystrix.Metric.Consumer.RollingThreadPoolMaxConcurrencyStream
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: Steeltoe.CircuitBreaker.Hystrix.Metric.Consumer.RollingConcurrencyStream.#ctor(Steeltoe.CircuitBreaker.Hystrix.Metric.IHystrixEventStream{Steeltoe.CircuitBreaker.Hystrix.Metric.HystrixCommandExecutionStarted},System.Int32,System.Int32)
  commentId: M:Steeltoe.CircuitBreaker.Hystrix.Metric.Consumer.RollingConcurrencyStream.#ctor(Steeltoe.CircuitBreaker.Hystrix.Metric.IHystrixEventStream{Steeltoe.CircuitBreaker.Hystrix.Metric.HystrixCommandExecutionStarted},System.Int32,System.Int32)
  id: '#ctor(Steeltoe.CircuitBreaker.Hystrix.Metric.IHystrixEventStream{Steeltoe.CircuitBreaker.Hystrix.Metric.HystrixCommandExecutionStarted},System.Int32,System.Int32)'
  parent: Steeltoe.CircuitBreaker.Hystrix.Metric.Consumer.RollingConcurrencyStream
  langs:
  - csharp
  - vb
  name: RollingConcurrencyStream(IHystrixEventStream<HystrixCommandExecutionStarted>, Int32, Int32)
  nameWithType: RollingConcurrencyStream.RollingConcurrencyStream(IHystrixEventStream<HystrixCommandExecutionStarted>, Int32, Int32)
  fullName: Steeltoe.CircuitBreaker.Hystrix.Metric.Consumer.RollingConcurrencyStream.RollingConcurrencyStream(Steeltoe.CircuitBreaker.Hystrix.Metric.IHystrixEventStream<Steeltoe.CircuitBreaker.Hystrix.Metric.HystrixCommandExecutionStarted>, System.Int32, System.Int32)
  type: Constructor
  source:
    remote:
      path: src/CircuitBreaker/src/HystrixBase/Metric/Consumer/RollingConcurrencyStream.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: .ctor
    path: ../Steeltoe/src/CircuitBreaker/src/HystrixBase/Metric/Consumer/RollingConcurrencyStream.cs
    startLine: 36
  assemblies:
  - Steeltoe.CircuitBreaker.HystrixBase
  namespace: Steeltoe.CircuitBreaker.Hystrix.Metric.Consumer
  syntax:
    content: protected RollingConcurrencyStream(IHystrixEventStream<HystrixCommandExecutionStarted> inputEventStream, int numBuckets, int bucketSizeInMs)
    parameters:
    - id: inputEventStream
      type: Steeltoe.CircuitBreaker.Hystrix.Metric.IHystrixEventStream{Steeltoe.CircuitBreaker.Hystrix.Metric.HystrixCommandExecutionStarted}
    - id: numBuckets
      type: System.Int32
    - id: bucketSizeInMs
      type: System.Int32
    content.vb: Protected Sub New(inputEventStream As IHystrixEventStream(Of HystrixCommandExecutionStarted), numBuckets As Integer, bucketSizeInMs As Integer)
  overload: Steeltoe.CircuitBreaker.Hystrix.Metric.Consumer.RollingConcurrencyStream.#ctor*
  nameWithType.vb: RollingConcurrencyStream.RollingConcurrencyStream(IHystrixEventStream(Of HystrixCommandExecutionStarted), Int32, Int32)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: Steeltoe.CircuitBreaker.Hystrix.Metric.Consumer.RollingConcurrencyStream.RollingConcurrencyStream(Steeltoe.CircuitBreaker.Hystrix.Metric.IHystrixEventStream(Of Steeltoe.CircuitBreaker.Hystrix.Metric.HystrixCommandExecutionStarted), System.Int32, System.Int32)
  name.vb: RollingConcurrencyStream(IHystrixEventStream(Of HystrixCommandExecutionStarted), Int32, Int32)
- uid: Steeltoe.CircuitBreaker.Hystrix.Metric.Consumer.RollingConcurrencyStream.StartCachingStreamValuesIfUnstarted
  commentId: M:Steeltoe.CircuitBreaker.Hystrix.Metric.Consumer.RollingConcurrencyStream.StartCachingStreamValuesIfUnstarted
  id: StartCachingStreamValuesIfUnstarted
  parent: Steeltoe.CircuitBreaker.Hystrix.Metric.Consumer.RollingConcurrencyStream
  langs:
  - csharp
  - vb
  name: StartCachingStreamValuesIfUnstarted()
  nameWithType: RollingConcurrencyStream.StartCachingStreamValuesIfUnstarted()
  fullName: Steeltoe.CircuitBreaker.Hystrix.Metric.Consumer.RollingConcurrencyStream.StartCachingStreamValuesIfUnstarted()
  type: Method
  source:
    remote:
      path: src/CircuitBreaker/src/HystrixBase/Metric/Consumer/RollingConcurrencyStream.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: StartCachingStreamValuesIfUnstarted
    path: ../Steeltoe/src/CircuitBreaker/src/HystrixBase/Metric/Consumer/RollingConcurrencyStream.cs
    startLine: 55
  assemblies:
  - Steeltoe.CircuitBreaker.HystrixBase
  namespace: Steeltoe.CircuitBreaker.Hystrix.Metric.Consumer
  syntax:
    content: public void StartCachingStreamValuesIfUnstarted()
    content.vb: Public Sub StartCachingStreamValuesIfUnstarted
  overload: Steeltoe.CircuitBreaker.Hystrix.Metric.Consumer.RollingConcurrencyStream.StartCachingStreamValuesIfUnstarted*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Steeltoe.CircuitBreaker.Hystrix.Metric.Consumer.RollingConcurrencyStream.LatestRollingMax
  commentId: P:Steeltoe.CircuitBreaker.Hystrix.Metric.Consumer.RollingConcurrencyStream.LatestRollingMax
  id: LatestRollingMax
  parent: Steeltoe.CircuitBreaker.Hystrix.Metric.Consumer.RollingConcurrencyStream
  langs:
  - csharp
  - vb
  name: LatestRollingMax
  nameWithType: RollingConcurrencyStream.LatestRollingMax
  fullName: Steeltoe.CircuitBreaker.Hystrix.Metric.Consumer.RollingConcurrencyStream.LatestRollingMax
  type: Property
  source:
    remote:
      path: src/CircuitBreaker/src/HystrixBase/Metric/Consumer/RollingConcurrencyStream.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: LatestRollingMax
    path: ../Steeltoe/src/CircuitBreaker/src/HystrixBase/Metric/Consumer/RollingConcurrencyStream.cs
    startLine: 73
  assemblies:
  - Steeltoe.CircuitBreaker.HystrixBase
  namespace: Steeltoe.CircuitBreaker.Hystrix.Metric.Consumer
  syntax:
    content: public long LatestRollingMax { get; }
    parameters: []
    return:
      type: System.Int64
    content.vb: Public ReadOnly Property LatestRollingMax As Long
  overload: Steeltoe.CircuitBreaker.Hystrix.Metric.Consumer.RollingConcurrencyStream.LatestRollingMax*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Steeltoe.CircuitBreaker.Hystrix.Metric.Consumer.RollingConcurrencyStream.Observe
  commentId: M:Steeltoe.CircuitBreaker.Hystrix.Metric.Consumer.RollingConcurrencyStream.Observe
  id: Observe
  parent: Steeltoe.CircuitBreaker.Hystrix.Metric.Consumer.RollingConcurrencyStream
  langs:
  - csharp
  - vb
  name: Observe()
  nameWithType: RollingConcurrencyStream.Observe()
  fullName: Steeltoe.CircuitBreaker.Hystrix.Metric.Consumer.RollingConcurrencyStream.Observe()
  type: Method
  source:
    remote:
      path: src/CircuitBreaker/src/HystrixBase/Metric/Consumer/RollingConcurrencyStream.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Observe
    path: ../Steeltoe/src/CircuitBreaker/src/HystrixBase/Metric/Consumer/RollingConcurrencyStream.cs
    startLine: 82
  assemblies:
  - Steeltoe.CircuitBreaker.HystrixBase
  namespace: Steeltoe.CircuitBreaker.Hystrix.Metric.Consumer
  syntax:
    content: public IObservable<int> Observe()
    return:
      type: System.IObservable{System.Int32}
    content.vb: Public Function Observe As IObservable(Of Integer)
  overload: Steeltoe.CircuitBreaker.Hystrix.Metric.Consumer.RollingConcurrencyStream.Observe*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Steeltoe.CircuitBreaker.Hystrix.Metric.Consumer.RollingConcurrencyStream.Unsubscribe
  commentId: M:Steeltoe.CircuitBreaker.Hystrix.Metric.Consumer.RollingConcurrencyStream.Unsubscribe
  id: Unsubscribe
  parent: Steeltoe.CircuitBreaker.Hystrix.Metric.Consumer.RollingConcurrencyStream
  langs:
  - csharp
  - vb
  name: Unsubscribe()
  nameWithType: RollingConcurrencyStream.Unsubscribe()
  fullName: Steeltoe.CircuitBreaker.Hystrix.Metric.Consumer.RollingConcurrencyStream.Unsubscribe()
  type: Method
  source:
    remote:
      path: src/CircuitBreaker/src/HystrixBase/Metric/Consumer/RollingConcurrencyStream.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Unsubscribe
    path: ../Steeltoe/src/CircuitBreaker/src/HystrixBase/Metric/Consumer/RollingConcurrencyStream.cs
    startLine: 87
  assemblies:
  - Steeltoe.CircuitBreaker.HystrixBase
  namespace: Steeltoe.CircuitBreaker.Hystrix.Metric.Consumer
  syntax:
    content: public void Unsubscribe()
    content.vb: Public Sub Unsubscribe
  overload: Steeltoe.CircuitBreaker.Hystrix.Metric.Consumer.RollingConcurrencyStream.Unsubscribe*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Steeltoe.CircuitBreaker.Hystrix.Metric.Consumer
  commentId: N:Steeltoe.CircuitBreaker.Hystrix.Metric.Consumer
  name: Steeltoe.CircuitBreaker.Hystrix.Metric.Consumer
  nameWithType: Steeltoe.CircuitBreaker.Hystrix.Metric.Consumer
  fullName: Steeltoe.CircuitBreaker.Hystrix.Metric.Consumer
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Steeltoe.CircuitBreaker.Hystrix.Metric.Consumer.RollingConcurrencyStream.#ctor*
  commentId: Overload:Steeltoe.CircuitBreaker.Hystrix.Metric.Consumer.RollingConcurrencyStream.#ctor
  name: RollingConcurrencyStream
  nameWithType: RollingConcurrencyStream.RollingConcurrencyStream
  fullName: Steeltoe.CircuitBreaker.Hystrix.Metric.Consumer.RollingConcurrencyStream.RollingConcurrencyStream
- uid: Steeltoe.CircuitBreaker.Hystrix.Metric.IHystrixEventStream{Steeltoe.CircuitBreaker.Hystrix.Metric.HystrixCommandExecutionStarted}
  commentId: T:Steeltoe.CircuitBreaker.Hystrix.Metric.IHystrixEventStream{Steeltoe.CircuitBreaker.Hystrix.Metric.HystrixCommandExecutionStarted}
  parent: Steeltoe.CircuitBreaker.Hystrix.Metric
  definition: Steeltoe.CircuitBreaker.Hystrix.Metric.IHystrixEventStream`1
  name: IHystrixEventStream<HystrixCommandExecutionStarted>
  nameWithType: IHystrixEventStream<HystrixCommandExecutionStarted>
  fullName: Steeltoe.CircuitBreaker.Hystrix.Metric.IHystrixEventStream<Steeltoe.CircuitBreaker.Hystrix.Metric.HystrixCommandExecutionStarted>
  nameWithType.vb: IHystrixEventStream(Of HystrixCommandExecutionStarted)
  fullName.vb: Steeltoe.CircuitBreaker.Hystrix.Metric.IHystrixEventStream(Of Steeltoe.CircuitBreaker.Hystrix.Metric.HystrixCommandExecutionStarted)
  name.vb: IHystrixEventStream(Of HystrixCommandExecutionStarted)
  spec.csharp:
  - uid: Steeltoe.CircuitBreaker.Hystrix.Metric.IHystrixEventStream`1
    name: IHystrixEventStream
    nameWithType: IHystrixEventStream
    fullName: Steeltoe.CircuitBreaker.Hystrix.Metric.IHystrixEventStream
  - name: <
    nameWithType: <
    fullName: <
  - uid: Steeltoe.CircuitBreaker.Hystrix.Metric.HystrixCommandExecutionStarted
    name: HystrixCommandExecutionStarted
    nameWithType: HystrixCommandExecutionStarted
    fullName: Steeltoe.CircuitBreaker.Hystrix.Metric.HystrixCommandExecutionStarted
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Steeltoe.CircuitBreaker.Hystrix.Metric.IHystrixEventStream`1
    name: IHystrixEventStream
    nameWithType: IHystrixEventStream
    fullName: Steeltoe.CircuitBreaker.Hystrix.Metric.IHystrixEventStream
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Steeltoe.CircuitBreaker.Hystrix.Metric.HystrixCommandExecutionStarted
    name: HystrixCommandExecutionStarted
    nameWithType: HystrixCommandExecutionStarted
    fullName: Steeltoe.CircuitBreaker.Hystrix.Metric.HystrixCommandExecutionStarted
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Steeltoe.CircuitBreaker.Hystrix.Metric.IHystrixEventStream`1
  commentId: T:Steeltoe.CircuitBreaker.Hystrix.Metric.IHystrixEventStream`1
  name: IHystrixEventStream<E>
  nameWithType: IHystrixEventStream<E>
  fullName: Steeltoe.CircuitBreaker.Hystrix.Metric.IHystrixEventStream<E>
  nameWithType.vb: IHystrixEventStream(Of E)
  fullName.vb: Steeltoe.CircuitBreaker.Hystrix.Metric.IHystrixEventStream(Of E)
  name.vb: IHystrixEventStream(Of E)
  spec.csharp:
  - uid: Steeltoe.CircuitBreaker.Hystrix.Metric.IHystrixEventStream`1
    name: IHystrixEventStream
    nameWithType: IHystrixEventStream
    fullName: Steeltoe.CircuitBreaker.Hystrix.Metric.IHystrixEventStream
  - name: <
    nameWithType: <
    fullName: <
  - name: E
    nameWithType: E
    fullName: E
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Steeltoe.CircuitBreaker.Hystrix.Metric.IHystrixEventStream`1
    name: IHystrixEventStream
    nameWithType: IHystrixEventStream
    fullName: Steeltoe.CircuitBreaker.Hystrix.Metric.IHystrixEventStream
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: E
    nameWithType: E
    fullName: E
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.CircuitBreaker.Hystrix.Metric
  commentId: N:Steeltoe.CircuitBreaker.Hystrix.Metric
  name: Steeltoe.CircuitBreaker.Hystrix.Metric
  nameWithType: Steeltoe.CircuitBreaker.Hystrix.Metric
  fullName: Steeltoe.CircuitBreaker.Hystrix.Metric
- uid: Steeltoe.CircuitBreaker.Hystrix.Metric.Consumer.RollingConcurrencyStream.StartCachingStreamValuesIfUnstarted*
  commentId: Overload:Steeltoe.CircuitBreaker.Hystrix.Metric.Consumer.RollingConcurrencyStream.StartCachingStreamValuesIfUnstarted
  name: StartCachingStreamValuesIfUnstarted
  nameWithType: RollingConcurrencyStream.StartCachingStreamValuesIfUnstarted
  fullName: Steeltoe.CircuitBreaker.Hystrix.Metric.Consumer.RollingConcurrencyStream.StartCachingStreamValuesIfUnstarted
- uid: Steeltoe.CircuitBreaker.Hystrix.Metric.Consumer.RollingConcurrencyStream.LatestRollingMax*
  commentId: Overload:Steeltoe.CircuitBreaker.Hystrix.Metric.Consumer.RollingConcurrencyStream.LatestRollingMax
  name: LatestRollingMax
  nameWithType: RollingConcurrencyStream.LatestRollingMax
  fullName: Steeltoe.CircuitBreaker.Hystrix.Metric.Consumer.RollingConcurrencyStream.LatestRollingMax
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: Steeltoe.CircuitBreaker.Hystrix.Metric.Consumer.RollingConcurrencyStream.Observe*
  commentId: Overload:Steeltoe.CircuitBreaker.Hystrix.Metric.Consumer.RollingConcurrencyStream.Observe
  name: Observe
  nameWithType: RollingConcurrencyStream.Observe
  fullName: Steeltoe.CircuitBreaker.Hystrix.Metric.Consumer.RollingConcurrencyStream.Observe
- uid: System.IObservable{System.Int32}
  commentId: T:System.IObservable{System.Int32}
  parent: System
  definition: System.IObservable`1
  name: IObservable<Int32>
  nameWithType: IObservable<Int32>
  fullName: System.IObservable<System.Int32>
  nameWithType.vb: IObservable(Of Int32)
  fullName.vb: System.IObservable(Of System.Int32)
  name.vb: IObservable(Of Int32)
  spec.csharp:
  - uid: System.IObservable`1
    name: IObservable
    nameWithType: IObservable
    fullName: System.IObservable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IObservable`1
    name: IObservable
    nameWithType: IObservable
    fullName: System.IObservable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IObservable`1
  commentId: T:System.IObservable`1
  isExternal: true
  name: IObservable<T>
  nameWithType: IObservable<T>
  fullName: System.IObservable<T>
  nameWithType.vb: IObservable(Of T)
  fullName.vb: System.IObservable(Of T)
  name.vb: IObservable(Of T)
  spec.csharp:
  - uid: System.IObservable`1
    name: IObservable
    nameWithType: IObservable
    fullName: System.IObservable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IObservable`1
    name: IObservable
    nameWithType: IObservable
    fullName: System.IObservable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.CircuitBreaker.Hystrix.Metric.Consumer.RollingConcurrencyStream.Unsubscribe*
  commentId: Overload:Steeltoe.CircuitBreaker.Hystrix.Metric.Consumer.RollingConcurrencyStream.Unsubscribe
  name: Unsubscribe
  nameWithType: RollingConcurrencyStream.Unsubscribe
  fullName: Steeltoe.CircuitBreaker.Hystrix.Metric.Consumer.RollingConcurrencyStream.Unsubscribe
