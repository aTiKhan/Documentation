### YamlMime:ManagedReference
items:
- uid: Steeltoe.Common.Expression.IExpression
  commentId: T:Steeltoe.Common.Expression.IExpression
  id: IExpression
  parent: Steeltoe.Common.Expression
  children:
  - Steeltoe.Common.Expression.IExpression.ExpressionString
  - Steeltoe.Common.Expression.IExpression.GetValue
  - Steeltoe.Common.Expression.IExpression.GetValue(Steeltoe.Common.Expression.IEvaluationContext)
  - Steeltoe.Common.Expression.IExpression.GetValue(Steeltoe.Common.Expression.IEvaluationContext,System.Object)
  - Steeltoe.Common.Expression.IExpression.GetValue(Steeltoe.Common.Expression.IEvaluationContext,System.Object,System.Type)
  - Steeltoe.Common.Expression.IExpression.GetValue(Steeltoe.Common.Expression.IEvaluationContext,System.Type)
  - Steeltoe.Common.Expression.IExpression.GetValue(System.Object)
  - Steeltoe.Common.Expression.IExpression.GetValue(System.Object,System.Type)
  - Steeltoe.Common.Expression.IExpression.GetValue(System.Type)
  - Steeltoe.Common.Expression.IExpression.GetValue``1
  - Steeltoe.Common.Expression.IExpression.GetValue``1(Steeltoe.Common.Expression.IEvaluationContext)
  - Steeltoe.Common.Expression.IExpression.GetValue``1(Steeltoe.Common.Expression.IEvaluationContext,System.Object)
  - Steeltoe.Common.Expression.IExpression.GetValue``1(System.Object)
  - Steeltoe.Common.Expression.IExpression.GetValueType
  - Steeltoe.Common.Expression.IExpression.GetValueType(Steeltoe.Common.Expression.IEvaluationContext)
  - Steeltoe.Common.Expression.IExpression.GetValueType(Steeltoe.Common.Expression.IEvaluationContext,System.Object)
  - Steeltoe.Common.Expression.IExpression.GetValueType(System.Object)
  - Steeltoe.Common.Expression.IExpression.IsWritable(Steeltoe.Common.Expression.IEvaluationContext)
  - Steeltoe.Common.Expression.IExpression.IsWritable(Steeltoe.Common.Expression.IEvaluationContext,System.Object)
  - Steeltoe.Common.Expression.IExpression.IsWritable(System.Object)
  - Steeltoe.Common.Expression.IExpression.SetValue(Steeltoe.Common.Expression.IEvaluationContext,System.Object)
  - Steeltoe.Common.Expression.IExpression.SetValue(Steeltoe.Common.Expression.IEvaluationContext,System.Object,System.Object)
  - Steeltoe.Common.Expression.IExpression.SetValue(System.Object,System.Object)
  langs:
  - csharp
  - vb
  name: IExpression
  nameWithType: IExpression
  fullName: Steeltoe.Common.Expression.IExpression
  type: Interface
  source:
    remote:
      path: src/Common/src/Abstractions/Expression/IExpression.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: IExpression
    path: ../Steeltoe/src/Common/src/Abstractions/Expression/IExpression.cs
    startLine: 14
  assemblies:
  - Steeltoe.Common.Abstractions
  namespace: Steeltoe.Common.Expression
  summary: "\nAn expression capable of evaluating itself against context objects.\nEncapsulates the details of a previously parsed expression string.\nProvides a common abstraction for expression evaluation.\nTODO:  This interface is not complete\n"
  example: []
  syntax:
    content: public interface IExpression
    content.vb: Public Interface IExpression
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Steeltoe.Common.Expression.IExpression.ExpressionString
  commentId: P:Steeltoe.Common.Expression.IExpression.ExpressionString
  id: ExpressionString
  parent: Steeltoe.Common.Expression.IExpression
  langs:
  - csharp
  - vb
  name: ExpressionString
  nameWithType: IExpression.ExpressionString
  fullName: Steeltoe.Common.Expression.IExpression.ExpressionString
  type: Property
  source:
    remote:
      path: src/Common/src/Abstractions/Expression/IExpression.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: ExpressionString
    path: ../Steeltoe/src/Common/src/Abstractions/Expression/IExpression.cs
    startLine: 16
  assemblies:
  - Steeltoe.Common.Abstractions
  namespace: Steeltoe.Common.Expression
  syntax:
    content: string ExpressionString { get; }
    parameters: []
    return:
      type: System.String
    content.vb: ReadOnly Property ExpressionString As String
  overload: Steeltoe.Common.Expression.IExpression.ExpressionString*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Steeltoe.Common.Expression.IExpression.GetValue
  commentId: M:Steeltoe.Common.Expression.IExpression.GetValue
  id: GetValue
  parent: Steeltoe.Common.Expression.IExpression
  langs:
  - csharp
  - vb
  name: GetValue()
  nameWithType: IExpression.GetValue()
  fullName: Steeltoe.Common.Expression.IExpression.GetValue()
  type: Method
  source:
    remote:
      path: src/Common/src/Abstractions/Expression/IExpression.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: GetValue
    path: ../Steeltoe/src/Common/src/Abstractions/Expression/IExpression.cs
    startLine: 18
  assemblies:
  - Steeltoe.Common.Abstractions
  namespace: Steeltoe.Common.Expression
  syntax:
    content: object GetValue()
    return:
      type: System.Object
    content.vb: Function GetValue As Object
  overload: Steeltoe.Common.Expression.IExpression.GetValue*
- uid: Steeltoe.Common.Expression.IExpression.GetValue(System.Type)
  commentId: M:Steeltoe.Common.Expression.IExpression.GetValue(System.Type)
  id: GetValue(System.Type)
  parent: Steeltoe.Common.Expression.IExpression
  langs:
  - csharp
  - vb
  name: GetValue(Type)
  nameWithType: IExpression.GetValue(Type)
  fullName: Steeltoe.Common.Expression.IExpression.GetValue(System.Type)
  type: Method
  source:
    remote:
      path: src/Common/src/Abstractions/Expression/IExpression.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: GetValue
    path: ../Steeltoe/src/Common/src/Abstractions/Expression/IExpression.cs
    startLine: 20
  assemblies:
  - Steeltoe.Common.Abstractions
  namespace: Steeltoe.Common.Expression
  syntax:
    content: object GetValue(Type desiredResultType)
    parameters:
    - id: desiredResultType
      type: System.Type
    return:
      type: System.Object
    content.vb: Function GetValue(desiredResultType As Type) As Object
  overload: Steeltoe.Common.Expression.IExpression.GetValue*
- uid: Steeltoe.Common.Expression.IExpression.GetValue``1
  commentId: M:Steeltoe.Common.Expression.IExpression.GetValue``1
  id: GetValue``1
  parent: Steeltoe.Common.Expression.IExpression
  langs:
  - csharp
  - vb
  name: GetValue<T>()
  nameWithType: IExpression.GetValue<T>()
  fullName: Steeltoe.Common.Expression.IExpression.GetValue<T>()
  type: Method
  source:
    remote:
      path: src/Common/src/Abstractions/Expression/IExpression.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: GetValue
    path: ../Steeltoe/src/Common/src/Abstractions/Expression/IExpression.cs
    startLine: 22
  assemblies:
  - Steeltoe.Common.Abstractions
  namespace: Steeltoe.Common.Expression
  syntax:
    content: T GetValue<T>()
    typeParameters:
    - id: T
    return:
      type: '{T}'
    content.vb: Function GetValue(Of T) As T
  overload: Steeltoe.Common.Expression.IExpression.GetValue*
  nameWithType.vb: IExpression.GetValue(Of T)()
  fullName.vb: Steeltoe.Common.Expression.IExpression.GetValue(Of T)()
  name.vb: GetValue(Of T)()
- uid: Steeltoe.Common.Expression.IExpression.GetValue(System.Object)
  commentId: M:Steeltoe.Common.Expression.IExpression.GetValue(System.Object)
  id: GetValue(System.Object)
  parent: Steeltoe.Common.Expression.IExpression
  langs:
  - csharp
  - vb
  name: GetValue(Object)
  nameWithType: IExpression.GetValue(Object)
  fullName: Steeltoe.Common.Expression.IExpression.GetValue(System.Object)
  type: Method
  source:
    remote:
      path: src/Common/src/Abstractions/Expression/IExpression.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: GetValue
    path: ../Steeltoe/src/Common/src/Abstractions/Expression/IExpression.cs
    startLine: 24
  assemblies:
  - Steeltoe.Common.Abstractions
  namespace: Steeltoe.Common.Expression
  syntax:
    content: object GetValue(object rootObject)
    parameters:
    - id: rootObject
      type: System.Object
    return:
      type: System.Object
    content.vb: Function GetValue(rootObject As Object) As Object
  overload: Steeltoe.Common.Expression.IExpression.GetValue*
- uid: Steeltoe.Common.Expression.IExpression.GetValue(System.Object,System.Type)
  commentId: M:Steeltoe.Common.Expression.IExpression.GetValue(System.Object,System.Type)
  id: GetValue(System.Object,System.Type)
  parent: Steeltoe.Common.Expression.IExpression
  langs:
  - csharp
  - vb
  name: GetValue(Object, Type)
  nameWithType: IExpression.GetValue(Object, Type)
  fullName: Steeltoe.Common.Expression.IExpression.GetValue(System.Object, System.Type)
  type: Method
  source:
    remote:
      path: src/Common/src/Abstractions/Expression/IExpression.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: GetValue
    path: ../Steeltoe/src/Common/src/Abstractions/Expression/IExpression.cs
    startLine: 26
  assemblies:
  - Steeltoe.Common.Abstractions
  namespace: Steeltoe.Common.Expression
  syntax:
    content: object GetValue(object rootObject, Type desiredResultType)
    parameters:
    - id: rootObject
      type: System.Object
    - id: desiredResultType
      type: System.Type
    return:
      type: System.Object
    content.vb: Function GetValue(rootObject As Object, desiredResultType As Type) As Object
  overload: Steeltoe.Common.Expression.IExpression.GetValue*
- uid: Steeltoe.Common.Expression.IExpression.GetValue``1(System.Object)
  commentId: M:Steeltoe.Common.Expression.IExpression.GetValue``1(System.Object)
  id: GetValue``1(System.Object)
  parent: Steeltoe.Common.Expression.IExpression
  langs:
  - csharp
  - vb
  name: GetValue<T>(Object)
  nameWithType: IExpression.GetValue<T>(Object)
  fullName: Steeltoe.Common.Expression.IExpression.GetValue<T>(System.Object)
  type: Method
  source:
    remote:
      path: src/Common/src/Abstractions/Expression/IExpression.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: GetValue
    path: ../Steeltoe/src/Common/src/Abstractions/Expression/IExpression.cs
    startLine: 28
  assemblies:
  - Steeltoe.Common.Abstractions
  namespace: Steeltoe.Common.Expression
  syntax:
    content: T GetValue<T>(object rootObject)
    parameters:
    - id: rootObject
      type: System.Object
    typeParameters:
    - id: T
    return:
      type: '{T}'
    content.vb: Function GetValue(Of T)(rootObject As Object) As T
  overload: Steeltoe.Common.Expression.IExpression.GetValue*
  nameWithType.vb: IExpression.GetValue(Of T)(Object)
  fullName.vb: Steeltoe.Common.Expression.IExpression.GetValue(Of T)(System.Object)
  name.vb: GetValue(Of T)(Object)
- uid: Steeltoe.Common.Expression.IExpression.GetValue(Steeltoe.Common.Expression.IEvaluationContext)
  commentId: M:Steeltoe.Common.Expression.IExpression.GetValue(Steeltoe.Common.Expression.IEvaluationContext)
  id: GetValue(Steeltoe.Common.Expression.IEvaluationContext)
  parent: Steeltoe.Common.Expression.IExpression
  langs:
  - csharp
  - vb
  name: GetValue(IEvaluationContext)
  nameWithType: IExpression.GetValue(IEvaluationContext)
  fullName: Steeltoe.Common.Expression.IExpression.GetValue(Steeltoe.Common.Expression.IEvaluationContext)
  type: Method
  source:
    remote:
      path: src/Common/src/Abstractions/Expression/IExpression.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: GetValue
    path: ../Steeltoe/src/Common/src/Abstractions/Expression/IExpression.cs
    startLine: 30
  assemblies:
  - Steeltoe.Common.Abstractions
  namespace: Steeltoe.Common.Expression
  syntax:
    content: object GetValue(IEvaluationContext context)
    parameters:
    - id: context
      type: Steeltoe.Common.Expression.IEvaluationContext
    return:
      type: System.Object
    content.vb: Function GetValue(context As IEvaluationContext) As Object
  overload: Steeltoe.Common.Expression.IExpression.GetValue*
- uid: Steeltoe.Common.Expression.IExpression.GetValue(Steeltoe.Common.Expression.IEvaluationContext,System.Object)
  commentId: M:Steeltoe.Common.Expression.IExpression.GetValue(Steeltoe.Common.Expression.IEvaluationContext,System.Object)
  id: GetValue(Steeltoe.Common.Expression.IEvaluationContext,System.Object)
  parent: Steeltoe.Common.Expression.IExpression
  langs:
  - csharp
  - vb
  name: GetValue(IEvaluationContext, Object)
  nameWithType: IExpression.GetValue(IEvaluationContext, Object)
  fullName: Steeltoe.Common.Expression.IExpression.GetValue(Steeltoe.Common.Expression.IEvaluationContext, System.Object)
  type: Method
  source:
    remote:
      path: src/Common/src/Abstractions/Expression/IExpression.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: GetValue
    path: ../Steeltoe/src/Common/src/Abstractions/Expression/IExpression.cs
    startLine: 32
  assemblies:
  - Steeltoe.Common.Abstractions
  namespace: Steeltoe.Common.Expression
  syntax:
    content: object GetValue(IEvaluationContext context, object rootObject)
    parameters:
    - id: context
      type: Steeltoe.Common.Expression.IEvaluationContext
    - id: rootObject
      type: System.Object
    return:
      type: System.Object
    content.vb: Function GetValue(context As IEvaluationContext, rootObject As Object) As Object
  overload: Steeltoe.Common.Expression.IExpression.GetValue*
- uid: Steeltoe.Common.Expression.IExpression.GetValue(Steeltoe.Common.Expression.IEvaluationContext,System.Type)
  commentId: M:Steeltoe.Common.Expression.IExpression.GetValue(Steeltoe.Common.Expression.IEvaluationContext,System.Type)
  id: GetValue(Steeltoe.Common.Expression.IEvaluationContext,System.Type)
  parent: Steeltoe.Common.Expression.IExpression
  langs:
  - csharp
  - vb
  name: GetValue(IEvaluationContext, Type)
  nameWithType: IExpression.GetValue(IEvaluationContext, Type)
  fullName: Steeltoe.Common.Expression.IExpression.GetValue(Steeltoe.Common.Expression.IEvaluationContext, System.Type)
  type: Method
  source:
    remote:
      path: src/Common/src/Abstractions/Expression/IExpression.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: GetValue
    path: ../Steeltoe/src/Common/src/Abstractions/Expression/IExpression.cs
    startLine: 34
  assemblies:
  - Steeltoe.Common.Abstractions
  namespace: Steeltoe.Common.Expression
  syntax:
    content: object GetValue(IEvaluationContext context, Type desiredResultType)
    parameters:
    - id: context
      type: Steeltoe.Common.Expression.IEvaluationContext
    - id: desiredResultType
      type: System.Type
    return:
      type: System.Object
    content.vb: Function GetValue(context As IEvaluationContext, desiredResultType As Type) As Object
  overload: Steeltoe.Common.Expression.IExpression.GetValue*
- uid: Steeltoe.Common.Expression.IExpression.GetValue(Steeltoe.Common.Expression.IEvaluationContext,System.Object,System.Type)
  commentId: M:Steeltoe.Common.Expression.IExpression.GetValue(Steeltoe.Common.Expression.IEvaluationContext,System.Object,System.Type)
  id: GetValue(Steeltoe.Common.Expression.IEvaluationContext,System.Object,System.Type)
  parent: Steeltoe.Common.Expression.IExpression
  langs:
  - csharp
  - vb
  name: GetValue(IEvaluationContext, Object, Type)
  nameWithType: IExpression.GetValue(IEvaluationContext, Object, Type)
  fullName: Steeltoe.Common.Expression.IExpression.GetValue(Steeltoe.Common.Expression.IEvaluationContext, System.Object, System.Type)
  type: Method
  source:
    remote:
      path: src/Common/src/Abstractions/Expression/IExpression.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: GetValue
    path: ../Steeltoe/src/Common/src/Abstractions/Expression/IExpression.cs
    startLine: 36
  assemblies:
  - Steeltoe.Common.Abstractions
  namespace: Steeltoe.Common.Expression
  syntax:
    content: object GetValue(IEvaluationContext context, object rootObject, Type desiredResultType)
    parameters:
    - id: context
      type: Steeltoe.Common.Expression.IEvaluationContext
    - id: rootObject
      type: System.Object
    - id: desiredResultType
      type: System.Type
    return:
      type: System.Object
    content.vb: Function GetValue(context As IEvaluationContext, rootObject As Object, desiredResultType As Type) As Object
  overload: Steeltoe.Common.Expression.IExpression.GetValue*
- uid: Steeltoe.Common.Expression.IExpression.GetValue``1(Steeltoe.Common.Expression.IEvaluationContext)
  commentId: M:Steeltoe.Common.Expression.IExpression.GetValue``1(Steeltoe.Common.Expression.IEvaluationContext)
  id: GetValue``1(Steeltoe.Common.Expression.IEvaluationContext)
  parent: Steeltoe.Common.Expression.IExpression
  langs:
  - csharp
  - vb
  name: GetValue<T>(IEvaluationContext)
  nameWithType: IExpression.GetValue<T>(IEvaluationContext)
  fullName: Steeltoe.Common.Expression.IExpression.GetValue<T>(Steeltoe.Common.Expression.IEvaluationContext)
  type: Method
  source:
    remote:
      path: src/Common/src/Abstractions/Expression/IExpression.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: GetValue
    path: ../Steeltoe/src/Common/src/Abstractions/Expression/IExpression.cs
    startLine: 38
  assemblies:
  - Steeltoe.Common.Abstractions
  namespace: Steeltoe.Common.Expression
  syntax:
    content: T GetValue<T>(IEvaluationContext context)
    parameters:
    - id: context
      type: Steeltoe.Common.Expression.IEvaluationContext
    typeParameters:
    - id: T
    return:
      type: '{T}'
    content.vb: Function GetValue(Of T)(context As IEvaluationContext) As T
  overload: Steeltoe.Common.Expression.IExpression.GetValue*
  nameWithType.vb: IExpression.GetValue(Of T)(IEvaluationContext)
  fullName.vb: Steeltoe.Common.Expression.IExpression.GetValue(Of T)(Steeltoe.Common.Expression.IEvaluationContext)
  name.vb: GetValue(Of T)(IEvaluationContext)
- uid: Steeltoe.Common.Expression.IExpression.GetValue``1(Steeltoe.Common.Expression.IEvaluationContext,System.Object)
  commentId: M:Steeltoe.Common.Expression.IExpression.GetValue``1(Steeltoe.Common.Expression.IEvaluationContext,System.Object)
  id: GetValue``1(Steeltoe.Common.Expression.IEvaluationContext,System.Object)
  parent: Steeltoe.Common.Expression.IExpression
  langs:
  - csharp
  - vb
  name: GetValue<T>(IEvaluationContext, Object)
  nameWithType: IExpression.GetValue<T>(IEvaluationContext, Object)
  fullName: Steeltoe.Common.Expression.IExpression.GetValue<T>(Steeltoe.Common.Expression.IEvaluationContext, System.Object)
  type: Method
  source:
    remote:
      path: src/Common/src/Abstractions/Expression/IExpression.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: GetValue
    path: ../Steeltoe/src/Common/src/Abstractions/Expression/IExpression.cs
    startLine: 40
  assemblies:
  - Steeltoe.Common.Abstractions
  namespace: Steeltoe.Common.Expression
  syntax:
    content: T GetValue<T>(IEvaluationContext context, object rootObject)
    parameters:
    - id: context
      type: Steeltoe.Common.Expression.IEvaluationContext
    - id: rootObject
      type: System.Object
    typeParameters:
    - id: T
    return:
      type: '{T}'
    content.vb: Function GetValue(Of T)(context As IEvaluationContext, rootObject As Object) As T
  overload: Steeltoe.Common.Expression.IExpression.GetValue*
  nameWithType.vb: IExpression.GetValue(Of T)(IEvaluationContext, Object)
  fullName.vb: Steeltoe.Common.Expression.IExpression.GetValue(Of T)(Steeltoe.Common.Expression.IEvaluationContext, System.Object)
  name.vb: GetValue(Of T)(IEvaluationContext, Object)
- uid: Steeltoe.Common.Expression.IExpression.GetValueType
  commentId: M:Steeltoe.Common.Expression.IExpression.GetValueType
  id: GetValueType
  parent: Steeltoe.Common.Expression.IExpression
  langs:
  - csharp
  - vb
  name: GetValueType()
  nameWithType: IExpression.GetValueType()
  fullName: Steeltoe.Common.Expression.IExpression.GetValueType()
  type: Method
  source:
    remote:
      path: src/Common/src/Abstractions/Expression/IExpression.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: GetValueType
    path: ../Steeltoe/src/Common/src/Abstractions/Expression/IExpression.cs
    startLine: 42
  assemblies:
  - Steeltoe.Common.Abstractions
  namespace: Steeltoe.Common.Expression
  syntax:
    content: Type GetValueType()
    return:
      type: System.Type
    content.vb: Function GetValueType As Type
  overload: Steeltoe.Common.Expression.IExpression.GetValueType*
- uid: Steeltoe.Common.Expression.IExpression.GetValueType(System.Object)
  commentId: M:Steeltoe.Common.Expression.IExpression.GetValueType(System.Object)
  id: GetValueType(System.Object)
  parent: Steeltoe.Common.Expression.IExpression
  langs:
  - csharp
  - vb
  name: GetValueType(Object)
  nameWithType: IExpression.GetValueType(Object)
  fullName: Steeltoe.Common.Expression.IExpression.GetValueType(System.Object)
  type: Method
  source:
    remote:
      path: src/Common/src/Abstractions/Expression/IExpression.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: GetValueType
    path: ../Steeltoe/src/Common/src/Abstractions/Expression/IExpression.cs
    startLine: 44
  assemblies:
  - Steeltoe.Common.Abstractions
  namespace: Steeltoe.Common.Expression
  syntax:
    content: Type GetValueType(object rootObject)
    parameters:
    - id: rootObject
      type: System.Object
    return:
      type: System.Type
    content.vb: Function GetValueType(rootObject As Object) As Type
  overload: Steeltoe.Common.Expression.IExpression.GetValueType*
- uid: Steeltoe.Common.Expression.IExpression.GetValueType(Steeltoe.Common.Expression.IEvaluationContext)
  commentId: M:Steeltoe.Common.Expression.IExpression.GetValueType(Steeltoe.Common.Expression.IEvaluationContext)
  id: GetValueType(Steeltoe.Common.Expression.IEvaluationContext)
  parent: Steeltoe.Common.Expression.IExpression
  langs:
  - csharp
  - vb
  name: GetValueType(IEvaluationContext)
  nameWithType: IExpression.GetValueType(IEvaluationContext)
  fullName: Steeltoe.Common.Expression.IExpression.GetValueType(Steeltoe.Common.Expression.IEvaluationContext)
  type: Method
  source:
    remote:
      path: src/Common/src/Abstractions/Expression/IExpression.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: GetValueType
    path: ../Steeltoe/src/Common/src/Abstractions/Expression/IExpression.cs
    startLine: 46
  assemblies:
  - Steeltoe.Common.Abstractions
  namespace: Steeltoe.Common.Expression
  syntax:
    content: Type GetValueType(IEvaluationContext context)
    parameters:
    - id: context
      type: Steeltoe.Common.Expression.IEvaluationContext
    return:
      type: System.Type
    content.vb: Function GetValueType(context As IEvaluationContext) As Type
  overload: Steeltoe.Common.Expression.IExpression.GetValueType*
- uid: Steeltoe.Common.Expression.IExpression.GetValueType(Steeltoe.Common.Expression.IEvaluationContext,System.Object)
  commentId: M:Steeltoe.Common.Expression.IExpression.GetValueType(Steeltoe.Common.Expression.IEvaluationContext,System.Object)
  id: GetValueType(Steeltoe.Common.Expression.IEvaluationContext,System.Object)
  parent: Steeltoe.Common.Expression.IExpression
  langs:
  - csharp
  - vb
  name: GetValueType(IEvaluationContext, Object)
  nameWithType: IExpression.GetValueType(IEvaluationContext, Object)
  fullName: Steeltoe.Common.Expression.IExpression.GetValueType(Steeltoe.Common.Expression.IEvaluationContext, System.Object)
  type: Method
  source:
    remote:
      path: src/Common/src/Abstractions/Expression/IExpression.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: GetValueType
    path: ../Steeltoe/src/Common/src/Abstractions/Expression/IExpression.cs
    startLine: 48
  assemblies:
  - Steeltoe.Common.Abstractions
  namespace: Steeltoe.Common.Expression
  syntax:
    content: Type GetValueType(IEvaluationContext context, object rootObject)
    parameters:
    - id: context
      type: Steeltoe.Common.Expression.IEvaluationContext
    - id: rootObject
      type: System.Object
    return:
      type: System.Type
    content.vb: Function GetValueType(context As IEvaluationContext, rootObject As Object) As Type
  overload: Steeltoe.Common.Expression.IExpression.GetValueType*
- uid: Steeltoe.Common.Expression.IExpression.IsWritable(System.Object)
  commentId: M:Steeltoe.Common.Expression.IExpression.IsWritable(System.Object)
  id: IsWritable(System.Object)
  parent: Steeltoe.Common.Expression.IExpression
  langs:
  - csharp
  - vb
  name: IsWritable(Object)
  nameWithType: IExpression.IsWritable(Object)
  fullName: Steeltoe.Common.Expression.IExpression.IsWritable(System.Object)
  type: Method
  source:
    remote:
      path: src/Common/src/Abstractions/Expression/IExpression.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: IsWritable
    path: ../Steeltoe/src/Common/src/Abstractions/Expression/IExpression.cs
    startLine: 50
  assemblies:
  - Steeltoe.Common.Abstractions
  namespace: Steeltoe.Common.Expression
  syntax:
    content: bool IsWritable(object rootObject)
    parameters:
    - id: rootObject
      type: System.Object
    return:
      type: System.Boolean
    content.vb: Function IsWritable(rootObject As Object) As Boolean
  overload: Steeltoe.Common.Expression.IExpression.IsWritable*
- uid: Steeltoe.Common.Expression.IExpression.IsWritable(Steeltoe.Common.Expression.IEvaluationContext)
  commentId: M:Steeltoe.Common.Expression.IExpression.IsWritable(Steeltoe.Common.Expression.IEvaluationContext)
  id: IsWritable(Steeltoe.Common.Expression.IEvaluationContext)
  parent: Steeltoe.Common.Expression.IExpression
  langs:
  - csharp
  - vb
  name: IsWritable(IEvaluationContext)
  nameWithType: IExpression.IsWritable(IEvaluationContext)
  fullName: Steeltoe.Common.Expression.IExpression.IsWritable(Steeltoe.Common.Expression.IEvaluationContext)
  type: Method
  source:
    remote:
      path: src/Common/src/Abstractions/Expression/IExpression.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: IsWritable
    path: ../Steeltoe/src/Common/src/Abstractions/Expression/IExpression.cs
    startLine: 52
  assemblies:
  - Steeltoe.Common.Abstractions
  namespace: Steeltoe.Common.Expression
  syntax:
    content: bool IsWritable(IEvaluationContext context)
    parameters:
    - id: context
      type: Steeltoe.Common.Expression.IEvaluationContext
    return:
      type: System.Boolean
    content.vb: Function IsWritable(context As IEvaluationContext) As Boolean
  overload: Steeltoe.Common.Expression.IExpression.IsWritable*
- uid: Steeltoe.Common.Expression.IExpression.IsWritable(Steeltoe.Common.Expression.IEvaluationContext,System.Object)
  commentId: M:Steeltoe.Common.Expression.IExpression.IsWritable(Steeltoe.Common.Expression.IEvaluationContext,System.Object)
  id: IsWritable(Steeltoe.Common.Expression.IEvaluationContext,System.Object)
  parent: Steeltoe.Common.Expression.IExpression
  langs:
  - csharp
  - vb
  name: IsWritable(IEvaluationContext, Object)
  nameWithType: IExpression.IsWritable(IEvaluationContext, Object)
  fullName: Steeltoe.Common.Expression.IExpression.IsWritable(Steeltoe.Common.Expression.IEvaluationContext, System.Object)
  type: Method
  source:
    remote:
      path: src/Common/src/Abstractions/Expression/IExpression.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: IsWritable
    path: ../Steeltoe/src/Common/src/Abstractions/Expression/IExpression.cs
    startLine: 54
  assemblies:
  - Steeltoe.Common.Abstractions
  namespace: Steeltoe.Common.Expression
  syntax:
    content: bool IsWritable(IEvaluationContext context, object rootObject)
    parameters:
    - id: context
      type: Steeltoe.Common.Expression.IEvaluationContext
    - id: rootObject
      type: System.Object
    return:
      type: System.Boolean
    content.vb: Function IsWritable(context As IEvaluationContext, rootObject As Object) As Boolean
  overload: Steeltoe.Common.Expression.IExpression.IsWritable*
- uid: Steeltoe.Common.Expression.IExpression.SetValue(System.Object,System.Object)
  commentId: M:Steeltoe.Common.Expression.IExpression.SetValue(System.Object,System.Object)
  id: SetValue(System.Object,System.Object)
  parent: Steeltoe.Common.Expression.IExpression
  langs:
  - csharp
  - vb
  name: SetValue(Object, Object)
  nameWithType: IExpression.SetValue(Object, Object)
  fullName: Steeltoe.Common.Expression.IExpression.SetValue(System.Object, System.Object)
  type: Method
  source:
    remote:
      path: src/Common/src/Abstractions/Expression/IExpression.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: SetValue
    path: ../Steeltoe/src/Common/src/Abstractions/Expression/IExpression.cs
    startLine: 56
  assemblies:
  - Steeltoe.Common.Abstractions
  namespace: Steeltoe.Common.Expression
  syntax:
    content: bool SetValue(object rootObject, object value)
    parameters:
    - id: rootObject
      type: System.Object
    - id: value
      type: System.Object
    return:
      type: System.Boolean
    content.vb: Function SetValue(rootObject As Object, value As Object) As Boolean
  overload: Steeltoe.Common.Expression.IExpression.SetValue*
- uid: Steeltoe.Common.Expression.IExpression.SetValue(Steeltoe.Common.Expression.IEvaluationContext,System.Object)
  commentId: M:Steeltoe.Common.Expression.IExpression.SetValue(Steeltoe.Common.Expression.IEvaluationContext,System.Object)
  id: SetValue(Steeltoe.Common.Expression.IEvaluationContext,System.Object)
  parent: Steeltoe.Common.Expression.IExpression
  langs:
  - csharp
  - vb
  name: SetValue(IEvaluationContext, Object)
  nameWithType: IExpression.SetValue(IEvaluationContext, Object)
  fullName: Steeltoe.Common.Expression.IExpression.SetValue(Steeltoe.Common.Expression.IEvaluationContext, System.Object)
  type: Method
  source:
    remote:
      path: src/Common/src/Abstractions/Expression/IExpression.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: SetValue
    path: ../Steeltoe/src/Common/src/Abstractions/Expression/IExpression.cs
    startLine: 58
  assemblies:
  - Steeltoe.Common.Abstractions
  namespace: Steeltoe.Common.Expression
  syntax:
    content: bool SetValue(IEvaluationContext context, object value)
    parameters:
    - id: context
      type: Steeltoe.Common.Expression.IEvaluationContext
    - id: value
      type: System.Object
    return:
      type: System.Boolean
    content.vb: Function SetValue(context As IEvaluationContext, value As Object) As Boolean
  overload: Steeltoe.Common.Expression.IExpression.SetValue*
- uid: Steeltoe.Common.Expression.IExpression.SetValue(Steeltoe.Common.Expression.IEvaluationContext,System.Object,System.Object)
  commentId: M:Steeltoe.Common.Expression.IExpression.SetValue(Steeltoe.Common.Expression.IEvaluationContext,System.Object,System.Object)
  id: SetValue(Steeltoe.Common.Expression.IEvaluationContext,System.Object,System.Object)
  parent: Steeltoe.Common.Expression.IExpression
  langs:
  - csharp
  - vb
  name: SetValue(IEvaluationContext, Object, Object)
  nameWithType: IExpression.SetValue(IEvaluationContext, Object, Object)
  fullName: Steeltoe.Common.Expression.IExpression.SetValue(Steeltoe.Common.Expression.IEvaluationContext, System.Object, System.Object)
  type: Method
  source:
    remote:
      path: src/Common/src/Abstractions/Expression/IExpression.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: SetValue
    path: ../Steeltoe/src/Common/src/Abstractions/Expression/IExpression.cs
    startLine: 60
  assemblies:
  - Steeltoe.Common.Abstractions
  namespace: Steeltoe.Common.Expression
  syntax:
    content: bool SetValue(IEvaluationContext context, object rootObject, object value)
    parameters:
    - id: context
      type: Steeltoe.Common.Expression.IEvaluationContext
    - id: rootObject
      type: System.Object
    - id: value
      type: System.Object
    return:
      type: System.Boolean
    content.vb: Function SetValue(context As IEvaluationContext, rootObject As Object, value As Object) As Boolean
  overload: Steeltoe.Common.Expression.IExpression.SetValue*
references:
- uid: Steeltoe.Common.Expression
  commentId: N:Steeltoe.Common.Expression
  name: Steeltoe.Common.Expression
  nameWithType: Steeltoe.Common.Expression
  fullName: Steeltoe.Common.Expression
- uid: Steeltoe.Common.Expression.IExpression.ExpressionString*
  commentId: Overload:Steeltoe.Common.Expression.IExpression.ExpressionString
  name: ExpressionString
  nameWithType: IExpression.ExpressionString
  fullName: Steeltoe.Common.Expression.IExpression.ExpressionString
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Steeltoe.Common.Expression.IExpression.GetValue*
  commentId: Overload:Steeltoe.Common.Expression.IExpression.GetValue
  name: GetValue
  nameWithType: IExpression.GetValue
  fullName: Steeltoe.Common.Expression.IExpression.GetValue
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: Steeltoe.Common.Expression.IEvaluationContext
  commentId: T:Steeltoe.Common.Expression.IEvaluationContext
  parent: Steeltoe.Common.Expression
  name: IEvaluationContext
  nameWithType: IEvaluationContext
  fullName: Steeltoe.Common.Expression.IEvaluationContext
- uid: Steeltoe.Common.Expression.IExpression.GetValueType*
  commentId: Overload:Steeltoe.Common.Expression.IExpression.GetValueType
  name: GetValueType
  nameWithType: IExpression.GetValueType
  fullName: Steeltoe.Common.Expression.IExpression.GetValueType
- uid: Steeltoe.Common.Expression.IExpression.IsWritable*
  commentId: Overload:Steeltoe.Common.Expression.IExpression.IsWritable
  name: IsWritable
  nameWithType: IExpression.IsWritable
  fullName: Steeltoe.Common.Expression.IExpression.IsWritable
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Steeltoe.Common.Expression.IExpression.SetValue*
  commentId: Overload:Steeltoe.Common.Expression.IExpression.SetValue
  name: SetValue
  nameWithType: IExpression.SetValue
  fullName: Steeltoe.Common.Expression.IExpression.SetValue
