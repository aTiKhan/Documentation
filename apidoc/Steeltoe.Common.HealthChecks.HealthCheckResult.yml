### YamlMime:ManagedReference
items:
- uid: Steeltoe.Common.HealthChecks.HealthCheckResult
  commentId: T:Steeltoe.Common.HealthChecks.HealthCheckResult
  id: HealthCheckResult
  parent: Steeltoe.Common.HealthChecks
  children:
  - Steeltoe.Common.HealthChecks.HealthCheckResult.Description
  - Steeltoe.Common.HealthChecks.HealthCheckResult.Details
  - Steeltoe.Common.HealthChecks.HealthCheckResult.Status
  langs:
  - csharp
  - vb
  name: HealthCheckResult
  nameWithType: HealthCheckResult
  fullName: Steeltoe.Common.HealthChecks.HealthCheckResult
  type: Class
  source:
    remote:
      path: src/Common/src/Abstractions/HealthChecks/HealthCheckResult.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: HealthCheckResult
    path: ../Steeltoe/src/Common/src/Abstractions/HealthChecks/HealthCheckResult.cs
    startLine: 11
  assemblies:
  - Steeltoe.Common.Abstractions
  namespace: Steeltoe.Common.HealthChecks
  summary: "\nThe result of a health check\n"
  example: []
  syntax:
    content: public class HealthCheckResult
    content.vb: Public Class HealthCheckResult
  inheritance:
  - System.Object
  derivedClasses:
  - Steeltoe.Management.Endpoint.Health.HealthEndpointResponse
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Steeltoe.Common.HealthChecks.HealthCheckResult.Status
  commentId: P:Steeltoe.Common.HealthChecks.HealthCheckResult.Status
  id: Status
  parent: Steeltoe.Common.HealthChecks.HealthCheckResult
  langs:
  - csharp
  - vb
  name: Status
  nameWithType: HealthCheckResult.Status
  fullName: Steeltoe.Common.HealthChecks.HealthCheckResult.Status
  type: Property
  source:
    remote:
      path: src/Common/src/Abstractions/HealthChecks/HealthCheckResult.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Status
    path: ../Steeltoe/src/Common/src/Abstractions/HealthChecks/HealthCheckResult.cs
    startLine: 17
  assemblies:
  - Steeltoe.Common.Abstractions
  namespace: Steeltoe.Common.HealthChecks
  summary: "\nGets or sets the status of the check\n"
  remarks: Used by HealthMiddleware to determine HTTP Status code
  example: []
  syntax:
    content: public HealthStatus Status { get; set; }
    parameters: []
    return:
      type: Steeltoe.Common.HealthChecks.HealthStatus
    content.vb: Public Property Status As HealthStatus
  overload: Steeltoe.Common.HealthChecks.HealthCheckResult.Status*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Steeltoe.Common.HealthChecks.HealthCheckResult.Description
  commentId: P:Steeltoe.Common.HealthChecks.HealthCheckResult.Description
  id: Description
  parent: Steeltoe.Common.HealthChecks.HealthCheckResult
  langs:
  - csharp
  - vb
  name: Description
  nameWithType: HealthCheckResult.Description
  fullName: Steeltoe.Common.HealthChecks.HealthCheckResult.Description
  type: Property
  source:
    remote:
      path: src/Common/src/Abstractions/HealthChecks/HealthCheckResult.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Description
    path: ../Steeltoe/src/Common/src/Abstractions/HealthChecks/HealthCheckResult.cs
    startLine: 23
  assemblies:
  - Steeltoe.Common.Abstractions
  namespace: Steeltoe.Common.HealthChecks
  summary: "\nGets or sets a description of the health check result\n"
  remarks: Currently only used on check failures
  example: []
  syntax:
    content: public string Description { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Description As String
  overload: Steeltoe.Common.HealthChecks.HealthCheckResult.Description*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Steeltoe.Common.HealthChecks.HealthCheckResult.Details
  commentId: P:Steeltoe.Common.HealthChecks.HealthCheckResult.Details
  id: Details
  parent: Steeltoe.Common.HealthChecks.HealthCheckResult
  langs:
  - csharp
  - vb
  name: Details
  nameWithType: HealthCheckResult.Details
  fullName: Steeltoe.Common.HealthChecks.HealthCheckResult.Details
  type: Property
  source:
    remote:
      path: src/Common/src/Abstractions/HealthChecks/HealthCheckResult.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Details
    path: ../Steeltoe/src/Common/src/Abstractions/HealthChecks/HealthCheckResult.cs
    startLine: 29
  assemblies:
  - Steeltoe.Common.Abstractions
  namespace: Steeltoe.Common.HealthChecks
  summary: "\nGets or sets details of the checked item\n"
  remarks: For parity with Spring Boot, repeat status [with a call to .ToString()] here
  example: []
  syntax:
    content: public Dictionary<string, object> Details { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.Dictionary{System.String,System.Object}
    content.vb: Public Property Details As Dictionary(Of String, Object)
  overload: Steeltoe.Common.HealthChecks.HealthCheckResult.Details*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Steeltoe.Common.HealthChecks
  commentId: N:Steeltoe.Common.HealthChecks
  name: Steeltoe.Common.HealthChecks
  nameWithType: Steeltoe.Common.HealthChecks
  fullName: Steeltoe.Common.HealthChecks
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Steeltoe.Common.HealthChecks.HealthCheckResult.Status*
  commentId: Overload:Steeltoe.Common.HealthChecks.HealthCheckResult.Status
  name: Status
  nameWithType: HealthCheckResult.Status
  fullName: Steeltoe.Common.HealthChecks.HealthCheckResult.Status
- uid: Steeltoe.Common.HealthChecks.HealthStatus
  commentId: T:Steeltoe.Common.HealthChecks.HealthStatus
  parent: Steeltoe.Common.HealthChecks
  name: HealthStatus
  nameWithType: HealthStatus
  fullName: Steeltoe.Common.HealthChecks.HealthStatus
- uid: Steeltoe.Common.HealthChecks.HealthCheckResult.Description*
  commentId: Overload:Steeltoe.Common.HealthChecks.HealthCheckResult.Description
  name: Description
  nameWithType: HealthCheckResult.Description
  fullName: Steeltoe.Common.HealthChecks.HealthCheckResult.Description
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Steeltoe.Common.HealthChecks.HealthCheckResult.Details*
  commentId: Overload:Steeltoe.Common.HealthChecks.HealthCheckResult.Details
  name: Details
  nameWithType: HealthCheckResult.Details
  fullName: Steeltoe.Common.HealthChecks.HealthCheckResult.Details
- uid: System.Collections.Generic.Dictionary{System.String,System.Object}
  commentId: T:System.Collections.Generic.Dictionary{System.String,System.Object}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  name: Dictionary<String, Object>
  nameWithType: Dictionary<String, Object>
  fullName: System.Collections.Generic.Dictionary<System.String, System.Object>
  nameWithType.vb: Dictionary(Of String, Object)
  fullName.vb: System.Collections.Generic.Dictionary(Of System.String, System.Object)
  name.vb: Dictionary(Of String, Object)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Dictionary`2
  commentId: T:System.Collections.Generic.Dictionary`2
  isExternal: true
  name: Dictionary<TKey, TValue>
  nameWithType: Dictionary<TKey, TValue>
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>
  nameWithType.vb: Dictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue)
  name.vb: Dictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
