### YamlMime:ManagedReference
items:
- uid: Steeltoe.Connector.Redis.RedisServiceConnectorFactory
  commentId: T:Steeltoe.Connector.Redis.RedisServiceConnectorFactory
  id: RedisServiceConnectorFactory
  parent: Steeltoe.Connector.Redis
  children:
  - Steeltoe.Connector.Redis.RedisServiceConnectorFactory.#ctor(Steeltoe.Connector.Services.RedisServiceInfo,Steeltoe.Connector.Redis.RedisCacheConnectorOptions,System.Type,System.Type,System.Reflection.MethodInfo)
  - Steeltoe.Connector.Redis.RedisServiceConnectorFactory.ConnectorType
  - Steeltoe.Connector.Redis.RedisServiceConnectorFactory.Create(System.IServiceProvider)
  - Steeltoe.Connector.Redis.RedisServiceConnectorFactory.GetConnectionString
  - Steeltoe.Connector.Redis.RedisServiceConnectorFactory.Initializer
  - Steeltoe.Connector.Redis.RedisServiceConnectorFactory.OptionsType
  langs:
  - csharp
  - vb
  name: RedisServiceConnectorFactory
  nameWithType: RedisServiceConnectorFactory
  fullName: Steeltoe.Connector.Redis.RedisServiceConnectorFactory
  type: Class
  source:
    remote:
      path: src/Connectors/src/ConnectorBase/Redis/RedisServiceConnectorFactory.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: RedisServiceConnectorFactory
    path: ../Steeltoe/src/Connectors/src/ConnectorBase/Redis/RedisServiceConnectorFactory.cs
    startLine: 11
  assemblies:
  - Steeltoe.Connector.ConnectorBase
  namespace: Steeltoe.Connector.Redis
  syntax:
    content: public class RedisServiceConnectorFactory
    content.vb: Public Class RedisServiceConnectorFactory
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Steeltoe.Connector.Redis.RedisServiceConnectorFactory.#ctor(Steeltoe.Connector.Services.RedisServiceInfo,Steeltoe.Connector.Redis.RedisCacheConnectorOptions,System.Type,System.Type,System.Reflection.MethodInfo)
  commentId: M:Steeltoe.Connector.Redis.RedisServiceConnectorFactory.#ctor(Steeltoe.Connector.Services.RedisServiceInfo,Steeltoe.Connector.Redis.RedisCacheConnectorOptions,System.Type,System.Type,System.Reflection.MethodInfo)
  id: '#ctor(Steeltoe.Connector.Services.RedisServiceInfo,Steeltoe.Connector.Redis.RedisCacheConnectorOptions,System.Type,System.Type,System.Reflection.MethodInfo)'
  parent: Steeltoe.Connector.Redis.RedisServiceConnectorFactory
  langs:
  - csharp
  - vb
  name: RedisServiceConnectorFactory(RedisServiceInfo, RedisCacheConnectorOptions, Type, Type, MethodInfo)
  nameWithType: RedisServiceConnectorFactory.RedisServiceConnectorFactory(RedisServiceInfo, RedisCacheConnectorOptions, Type, Type, MethodInfo)
  fullName: Steeltoe.Connector.Redis.RedisServiceConnectorFactory.RedisServiceConnectorFactory(Steeltoe.Connector.Services.RedisServiceInfo, Steeltoe.Connector.Redis.RedisCacheConnectorOptions, System.Type, System.Type, System.Reflection.MethodInfo)
  type: Constructor
  source:
    remote:
      path: src/Connectors/src/ConnectorBase/Redis/RedisServiceConnectorFactory.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: .ctor
    path: ../Steeltoe/src/Connectors/src/ConnectorBase/Redis/RedisServiceConnectorFactory.cs
    startLine: 26
  assemblies:
  - Steeltoe.Connector.ConnectorBase
  namespace: Steeltoe.Connector.Redis
  summary: "\nInitializes a new instance of the <xref href=\"Steeltoe.Connector.Redis.RedisServiceConnectorFactory\" data-throw-if-not-resolved=\"false\"></xref> class.\nFactory for creating Redis connections with either Microsoft.Extensions.Caching.Redis or StackExchange.Redis\n"
  example: []
  syntax:
    content: public RedisServiceConnectorFactory(RedisServiceInfo sinfo, RedisCacheConnectorOptions config, Type connectionType, Type optionsType, MethodInfo initalizer)
    parameters:
    - id: sinfo
      type: Steeltoe.Connector.Services.RedisServiceInfo
      description: Service Info
    - id: config
      type: Steeltoe.Connector.Redis.RedisCacheConnectorOptions
      description: Service Configuration
    - id: connectionType
      type: System.Type
      description: Redis connection Type
    - id: optionsType
      type: System.Type
      description: Options Type used to establish connection
    - id: initalizer
      type: System.Reflection.MethodInfo
      description: Method used to open connection
    content.vb: Public Sub New(sinfo As RedisServiceInfo, config As RedisCacheConnectorOptions, connectionType As Type, optionsType As Type, initalizer As MethodInfo)
  overload: Steeltoe.Connector.Redis.RedisServiceConnectorFactory.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Steeltoe.Connector.Redis.RedisServiceConnectorFactory.GetConnectionString
  commentId: M:Steeltoe.Connector.Redis.RedisServiceConnectorFactory.GetConnectionString
  id: GetConnectionString
  parent: Steeltoe.Connector.Redis.RedisServiceConnectorFactory
  langs:
  - csharp
  - vb
  name: GetConnectionString()
  nameWithType: RedisServiceConnectorFactory.GetConnectionString()
  fullName: Steeltoe.Connector.Redis.RedisServiceConnectorFactory.GetConnectionString()
  type: Method
  source:
    remote:
      path: src/Connectors/src/ConnectorBase/Redis/RedisServiceConnectorFactory.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: GetConnectionString
    path: ../Steeltoe/src/Connectors/src/ConnectorBase/Redis/RedisServiceConnectorFactory.cs
    startLine: 39
  assemblies:
  - Steeltoe.Connector.ConnectorBase
  namespace: Steeltoe.Connector.Redis
  summary: "\nGet the connection string from Configuration sources\n"
  example: []
  syntax:
    content: public string GetConnectionString()
    return:
      type: System.String
      description: Connection String
    content.vb: Public Function GetConnectionString As String
  overload: Steeltoe.Connector.Redis.RedisServiceConnectorFactory.GetConnectionString*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Steeltoe.Connector.Redis.RedisServiceConnectorFactory.ConnectorType
  commentId: P:Steeltoe.Connector.Redis.RedisServiceConnectorFactory.ConnectorType
  id: ConnectorType
  parent: Steeltoe.Connector.Redis.RedisServiceConnectorFactory
  langs:
  - csharp
  - vb
  name: ConnectorType
  nameWithType: RedisServiceConnectorFactory.ConnectorType
  fullName: Steeltoe.Connector.Redis.RedisServiceConnectorFactory.ConnectorType
  type: Property
  source:
    remote:
      path: src/Connectors/src/ConnectorBase/Redis/RedisServiceConnectorFactory.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: ConnectorType
    path: ../Steeltoe/src/Connectors/src/ConnectorBase/Redis/RedisServiceConnectorFactory.cs
    startLine: 45
  assemblies:
  - Steeltoe.Connector.ConnectorBase
  namespace: Steeltoe.Connector.Redis
  syntax:
    content: protected Type ConnectorType { get; set; }
    parameters: []
    return:
      type: System.Type
    content.vb: Protected Property ConnectorType As Type
  overload: Steeltoe.Connector.Redis.RedisServiceConnectorFactory.ConnectorType*
  modifiers.csharp:
  - protected
  - get
  - set
  modifiers.vb:
  - Protected
- uid: Steeltoe.Connector.Redis.RedisServiceConnectorFactory.OptionsType
  commentId: P:Steeltoe.Connector.Redis.RedisServiceConnectorFactory.OptionsType
  id: OptionsType
  parent: Steeltoe.Connector.Redis.RedisServiceConnectorFactory
  langs:
  - csharp
  - vb
  name: OptionsType
  nameWithType: RedisServiceConnectorFactory.OptionsType
  fullName: Steeltoe.Connector.Redis.RedisServiceConnectorFactory.OptionsType
  type: Property
  source:
    remote:
      path: src/Connectors/src/ConnectorBase/Redis/RedisServiceConnectorFactory.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: OptionsType
    path: ../Steeltoe/src/Connectors/src/ConnectorBase/Redis/RedisServiceConnectorFactory.cs
    startLine: 47
  assemblies:
  - Steeltoe.Connector.ConnectorBase
  namespace: Steeltoe.Connector.Redis
  syntax:
    content: protected Type OptionsType { get; set; }
    parameters: []
    return:
      type: System.Type
    content.vb: Protected Property OptionsType As Type
  overload: Steeltoe.Connector.Redis.RedisServiceConnectorFactory.OptionsType*
  modifiers.csharp:
  - protected
  - get
  - set
  modifiers.vb:
  - Protected
- uid: Steeltoe.Connector.Redis.RedisServiceConnectorFactory.Initializer
  commentId: P:Steeltoe.Connector.Redis.RedisServiceConnectorFactory.Initializer
  id: Initializer
  parent: Steeltoe.Connector.Redis.RedisServiceConnectorFactory
  langs:
  - csharp
  - vb
  name: Initializer
  nameWithType: RedisServiceConnectorFactory.Initializer
  fullName: Steeltoe.Connector.Redis.RedisServiceConnectorFactory.Initializer
  type: Property
  source:
    remote:
      path: src/Connectors/src/ConnectorBase/Redis/RedisServiceConnectorFactory.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Initializer
    path: ../Steeltoe/src/Connectors/src/ConnectorBase/Redis/RedisServiceConnectorFactory.cs
    startLine: 49
  assemblies:
  - Steeltoe.Connector.ConnectorBase
  namespace: Steeltoe.Connector.Redis
  syntax:
    content: protected MethodInfo Initializer { get; set; }
    parameters: []
    return:
      type: System.Reflection.MethodInfo
    content.vb: Protected Property Initializer As MethodInfo
  overload: Steeltoe.Connector.Redis.RedisServiceConnectorFactory.Initializer*
  modifiers.csharp:
  - protected
  - get
  - set
  modifiers.vb:
  - Protected
- uid: Steeltoe.Connector.Redis.RedisServiceConnectorFactory.Create(System.IServiceProvider)
  commentId: M:Steeltoe.Connector.Redis.RedisServiceConnectorFactory.Create(System.IServiceProvider)
  id: Create(System.IServiceProvider)
  parent: Steeltoe.Connector.Redis.RedisServiceConnectorFactory
  langs:
  - csharp
  - vb
  name: Create(IServiceProvider)
  nameWithType: RedisServiceConnectorFactory.Create(IServiceProvider)
  fullName: Steeltoe.Connector.Redis.RedisServiceConnectorFactory.Create(System.IServiceProvider)
  type: Method
  source:
    remote:
      path: src/Connectors/src/ConnectorBase/Redis/RedisServiceConnectorFactory.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Create
    path: ../Steeltoe/src/Connectors/src/ConnectorBase/Redis/RedisServiceConnectorFactory.cs
    startLine: 56
  assemblies:
  - Steeltoe.Connector.ConnectorBase
  namespace: Steeltoe.Connector.Redis
  summary: "\nOpen the Redis connection\n"
  example: []
  syntax:
    content: public virtual object Create(IServiceProvider provider)
    parameters:
    - id: provider
      type: System.IServiceProvider
      description: IServiceProvider
    return:
      type: System.Object
      description: Initialized Redis connection
    content.vb: Public Overridable Function Create(provider As IServiceProvider) As Object
  overload: Steeltoe.Connector.Redis.RedisServiceConnectorFactory.Create*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
references:
- uid: Steeltoe.Connector.Redis
  commentId: N:Steeltoe.Connector.Redis
  name: Steeltoe.Connector.Redis
  nameWithType: Steeltoe.Connector.Redis
  fullName: Steeltoe.Connector.Redis
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Steeltoe.Connector.Redis.RedisServiceConnectorFactory
  commentId: T:Steeltoe.Connector.Redis.RedisServiceConnectorFactory
  parent: Steeltoe.Connector.Redis
  name: RedisServiceConnectorFactory
  nameWithType: RedisServiceConnectorFactory
  fullName: Steeltoe.Connector.Redis.RedisServiceConnectorFactory
- uid: Steeltoe.Connector.Redis.RedisServiceConnectorFactory.#ctor*
  commentId: Overload:Steeltoe.Connector.Redis.RedisServiceConnectorFactory.#ctor
  name: RedisServiceConnectorFactory
  nameWithType: RedisServiceConnectorFactory.RedisServiceConnectorFactory
  fullName: Steeltoe.Connector.Redis.RedisServiceConnectorFactory.RedisServiceConnectorFactory
- uid: Steeltoe.Connector.Services.RedisServiceInfo
  commentId: T:Steeltoe.Connector.Services.RedisServiceInfo
  parent: Steeltoe.Connector.Services
  name: RedisServiceInfo
  nameWithType: RedisServiceInfo
  fullName: Steeltoe.Connector.Services.RedisServiceInfo
- uid: Steeltoe.Connector.Redis.RedisCacheConnectorOptions
  commentId: T:Steeltoe.Connector.Redis.RedisCacheConnectorOptions
  parent: Steeltoe.Connector.Redis
  name: RedisCacheConnectorOptions
  nameWithType: RedisCacheConnectorOptions
  fullName: Steeltoe.Connector.Redis.RedisCacheConnectorOptions
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Reflection.MethodInfo
  commentId: T:System.Reflection.MethodInfo
  parent: System.Reflection
  isExternal: true
  name: MethodInfo
  nameWithType: MethodInfo
  fullName: System.Reflection.MethodInfo
- uid: Steeltoe.Connector.Services
  commentId: N:Steeltoe.Connector.Services
  name: Steeltoe.Connector.Services
  nameWithType: Steeltoe.Connector.Services
  fullName: Steeltoe.Connector.Services
- uid: System.Reflection
  commentId: N:System.Reflection
  isExternal: true
  name: System.Reflection
  nameWithType: System.Reflection
  fullName: System.Reflection
- uid: Steeltoe.Connector.Redis.RedisServiceConnectorFactory.GetConnectionString*
  commentId: Overload:Steeltoe.Connector.Redis.RedisServiceConnectorFactory.GetConnectionString
  name: GetConnectionString
  nameWithType: RedisServiceConnectorFactory.GetConnectionString
  fullName: Steeltoe.Connector.Redis.RedisServiceConnectorFactory.GetConnectionString
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Steeltoe.Connector.Redis.RedisServiceConnectorFactory.ConnectorType*
  commentId: Overload:Steeltoe.Connector.Redis.RedisServiceConnectorFactory.ConnectorType
  name: ConnectorType
  nameWithType: RedisServiceConnectorFactory.ConnectorType
  fullName: Steeltoe.Connector.Redis.RedisServiceConnectorFactory.ConnectorType
- uid: Steeltoe.Connector.Redis.RedisServiceConnectorFactory.OptionsType*
  commentId: Overload:Steeltoe.Connector.Redis.RedisServiceConnectorFactory.OptionsType
  name: OptionsType
  nameWithType: RedisServiceConnectorFactory.OptionsType
  fullName: Steeltoe.Connector.Redis.RedisServiceConnectorFactory.OptionsType
- uid: Steeltoe.Connector.Redis.RedisServiceConnectorFactory.Initializer*
  commentId: Overload:Steeltoe.Connector.Redis.RedisServiceConnectorFactory.Initializer
  name: Initializer
  nameWithType: RedisServiceConnectorFactory.Initializer
  fullName: Steeltoe.Connector.Redis.RedisServiceConnectorFactory.Initializer
- uid: Steeltoe.Connector.Redis.RedisServiceConnectorFactory.Create*
  commentId: Overload:Steeltoe.Connector.Redis.RedisServiceConnectorFactory.Create
  name: Create
  nameWithType: RedisServiceConnectorFactory.Create
  fullName: Steeltoe.Connector.Redis.RedisServiceConnectorFactory.Create
- uid: System.IServiceProvider
  commentId: T:System.IServiceProvider
  parent: System
  isExternal: true
  name: IServiceProvider
  nameWithType: IServiceProvider
  fullName: System.IServiceProvider
