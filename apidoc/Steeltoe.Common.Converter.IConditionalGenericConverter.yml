### YamlMime:ManagedReference
items:
- uid: Steeltoe.Common.Converter.IConditionalGenericConverter
  commentId: T:Steeltoe.Common.Converter.IConditionalGenericConverter
  id: IConditionalGenericConverter
  parent: Steeltoe.Common.Converter
  children: []
  langs:
  - csharp
  - vb
  name: IConditionalGenericConverter
  nameWithType: IConditionalGenericConverter
  fullName: Steeltoe.Common.Converter.IConditionalGenericConverter
  type: Interface
  source:
    remote:
      path: src/Common/src/Abstractions/Converter/IConditionalGenericConverter.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: IConditionalGenericConverter
    path: ../Steeltoe/src/Common/src/Abstractions/Converter/IConditionalGenericConverter.cs
    startLine: 10
  assemblies:
  - Steeltoe.Common.Abstractions
  namespace: Steeltoe.Common.Converter
  summary: "\nA generic converter that may conditionally execute based on the source type and\ntarget types.\n"
  example: []
  syntax:
    content: 'public interface IConditionalGenericConverter : IConditionalConverter, IGenericConverter'
    content.vb: >-
      Public Interface IConditionalGenericConverter

          Inherits IConditionalConverter, IGenericConverter
  inheritedMembers:
  - Steeltoe.Common.Converter.IConditionalConverter.Matches(System.Type,System.Type)
  - Steeltoe.Common.Converter.IGenericConverter.ConvertibleTypes
  - Steeltoe.Common.Converter.IGenericConverter.Convert(System.Object,System.Type,System.Type)
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
references:
- uid: Steeltoe.Common.Converter
  commentId: N:Steeltoe.Common.Converter
  name: Steeltoe.Common.Converter
  nameWithType: Steeltoe.Common.Converter
  fullName: Steeltoe.Common.Converter
- uid: Steeltoe.Common.Converter.IConditionalConverter.Matches(System.Type,System.Type)
  commentId: M:Steeltoe.Common.Converter.IConditionalConverter.Matches(System.Type,System.Type)
  parent: Steeltoe.Common.Converter.IConditionalConverter
  isExternal: true
  name: Matches(Type, Type)
  nameWithType: IConditionalConverter.Matches(Type, Type)
  fullName: Steeltoe.Common.Converter.IConditionalConverter.Matches(System.Type, System.Type)
  spec.csharp:
  - uid: Steeltoe.Common.Converter.IConditionalConverter.Matches(System.Type,System.Type)
    name: Matches
    nameWithType: IConditionalConverter.Matches
    fullName: Steeltoe.Common.Converter.IConditionalConverter.Matches
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Common.Converter.IConditionalConverter.Matches(System.Type,System.Type)
    name: Matches
    nameWithType: IConditionalConverter.Matches
    fullName: Steeltoe.Common.Converter.IConditionalConverter.Matches
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Common.Converter.IGenericConverter.ConvertibleTypes
  commentId: P:Steeltoe.Common.Converter.IGenericConverter.ConvertibleTypes
  parent: Steeltoe.Common.Converter.IGenericConverter
  name: ConvertibleTypes
  nameWithType: IGenericConverter.ConvertibleTypes
  fullName: Steeltoe.Common.Converter.IGenericConverter.ConvertibleTypes
- uid: Steeltoe.Common.Converter.IGenericConverter.Convert(System.Object,System.Type,System.Type)
  commentId: M:Steeltoe.Common.Converter.IGenericConverter.Convert(System.Object,System.Type,System.Type)
  parent: Steeltoe.Common.Converter.IGenericConverter
  isExternal: true
  name: Convert(Object, Type, Type)
  nameWithType: IGenericConverter.Convert(Object, Type, Type)
  fullName: Steeltoe.Common.Converter.IGenericConverter.Convert(System.Object, System.Type, System.Type)
  spec.csharp:
  - uid: Steeltoe.Common.Converter.IGenericConverter.Convert(System.Object,System.Type,System.Type)
    name: Convert
    nameWithType: IGenericConverter.Convert
    fullName: Steeltoe.Common.Converter.IGenericConverter.Convert
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Common.Converter.IGenericConverter.Convert(System.Object,System.Type,System.Type)
    name: Convert
    nameWithType: IGenericConverter.Convert
    fullName: Steeltoe.Common.Converter.IGenericConverter.Convert
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Common.Converter.IConditionalConverter
  commentId: T:Steeltoe.Common.Converter.IConditionalConverter
  parent: Steeltoe.Common.Converter
  name: IConditionalConverter
  nameWithType: IConditionalConverter
  fullName: Steeltoe.Common.Converter.IConditionalConverter
- uid: Steeltoe.Common.Converter.IGenericConverter
  commentId: T:Steeltoe.Common.Converter.IGenericConverter
  parent: Steeltoe.Common.Converter
  name: IGenericConverter
  nameWithType: IGenericConverter
  fullName: Steeltoe.Common.Converter.IGenericConverter
