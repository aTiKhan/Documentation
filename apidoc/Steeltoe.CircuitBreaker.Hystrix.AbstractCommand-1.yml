### YamlMime:ManagedReference
items:
- uid: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1
  commentId: T:Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1
  id: AbstractCommand`1
  parent: Steeltoe.CircuitBreaker.Hystrix
  children:
  - Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.#ctor(Steeltoe.CircuitBreaker.Hystrix.IHystrixCommandGroupKey,Steeltoe.CircuitBreaker.Hystrix.IHystrixCommandKey,Steeltoe.CircuitBreaker.Hystrix.IHystrixThreadPoolKey,Steeltoe.CircuitBreaker.ICircuitBreaker,Steeltoe.CircuitBreaker.Hystrix.IHystrixThreadPool,Steeltoe.CircuitBreaker.Hystrix.IHystrixCommandOptions,Steeltoe.CircuitBreaker.Hystrix.IHystrixThreadPoolOptions,Steeltoe.CircuitBreaker.Hystrix.HystrixCommandMetrics,System.Threading.SemaphoreSlim,System.Threading.SemaphoreSlim,Steeltoe.CircuitBreaker.Hystrix.Strategy.Options.HystrixOptionsStrategy,Steeltoe.CircuitBreaker.Hystrix.Strategy.ExecutionHook.HystrixCommandExecutionHook,ILogger)
  - Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1._circuitBreaker
  - Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1._commandStartTimestamp
  - Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1._concurrencyStrategy
  - Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1._currentRequestLog
  - Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1._eventNotifier
  - Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1._execThreadTask
  - Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1._executionHook
  - Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1._executionResult
  - Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1._executionResultAtTimeOfCancellation
  - Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1._executionSemaphoreOverride
  - Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1._fallbackSemaphoreOverride
  - Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1._isFallbackUserDefined
  - Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1._isResponseFromCache
  - Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1._metrics
  - Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1._requestCache
  - Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1._threadPool
  - Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1._threadStartTimestamp
  - Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1._timeoutTcs
  - Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1._token
  - Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1._usersToken
  - Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.ApplyHystrixSemantics
  - Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.CacheKey
  - Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.commandGroup
  - Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.CommandGroup
  - Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.CommandIsScalar
  - Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.commandKey
  - Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.CommandKey
  - Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.CommandOptions
  - Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.CommandResult
  - Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.CommandRunStartTimeInNanos
  - Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.commandState
  - Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.DecomposeException(System.Exception)
  - Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.DoFallback
  - Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.DoRun
  - Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.EventCounts
  - Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.ExecutionEvents
  - Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.ExecutionException
  - Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.ExecutionTimeInMilliseconds
  - Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.FailedExecutionException
  - Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.GetExecutionSemaphore
  - Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.GetFallbackSemaphore
  - Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.HandleCleanUpAfterResponseFromCache(System.Boolean)
  - Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.HandleCommandEnd(System.Boolean)
  - Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.HandleThreadEnd
  - Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.InitCircuitBreaker(System.Boolean,Steeltoe.CircuitBreaker.ICircuitBreaker,Steeltoe.CircuitBreaker.Hystrix.IHystrixCommandGroupKey,Steeltoe.CircuitBreaker.Hystrix.IHystrixCommandKey,Steeltoe.CircuitBreaker.Hystrix.IHystrixCommandOptions,Steeltoe.CircuitBreaker.Hystrix.HystrixCommandMetrics)
  - Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.InitCommandKey(Steeltoe.CircuitBreaker.Hystrix.IHystrixCommandKey,System.Type)
  - Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.InitCommandOptions(Steeltoe.CircuitBreaker.Hystrix.IHystrixCommandKey,Steeltoe.CircuitBreaker.Hystrix.Strategy.Options.HystrixOptionsStrategy,Steeltoe.CircuitBreaker.Hystrix.IHystrixCommandOptions)
  - Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.InitExecutionHook(Steeltoe.CircuitBreaker.Hystrix.Strategy.ExecutionHook.HystrixCommandExecutionHook)
  - Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.InitGroupKey(Steeltoe.CircuitBreaker.Hystrix.IHystrixCommandGroupKey)
  - Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.InitMetrics(Steeltoe.CircuitBreaker.Hystrix.HystrixCommandMetrics,Steeltoe.CircuitBreaker.Hystrix.IHystrixCommandGroupKey,Steeltoe.CircuitBreaker.Hystrix.IHystrixThreadPoolKey,Steeltoe.CircuitBreaker.Hystrix.IHystrixCommandKey,Steeltoe.CircuitBreaker.Hystrix.IHystrixCommandOptions)
  - Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.InitRequestLog(System.Boolean)
  - Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.InitThreadPool(Steeltoe.CircuitBreaker.Hystrix.IHystrixThreadPool,Steeltoe.CircuitBreaker.Hystrix.IHystrixThreadPoolKey,Steeltoe.CircuitBreaker.Hystrix.IHystrixThreadPoolOptions)
  - Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.InitThreadPoolKey(Steeltoe.CircuitBreaker.Hystrix.IHystrixThreadPoolKey,Steeltoe.CircuitBreaker.Hystrix.IHystrixCommandGroupKey,System.String)
  - Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.IsCircuitBreakerOpen
  - Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.isCommandTimedOut
  - Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.IsExecutedInThread
  - Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.IsExecutionComplete
  - Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.IsFailedExecution
  - Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.IsFallbackUserDefined
  - Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.IsRequestCachingEnabled
  - Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.IsResponseFromCache
  - Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.IsResponseFromFallback
  - Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.IsResponseRejected
  - Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.IsResponseSemaphoreRejected
  - Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.IsResponseShortCircuited
  - Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.IsResponseThreadPoolRejected
  - Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.IsResponseTimedOut
  - Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.IsSuccessfulExecution
  - Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.LogMessagePrefix
  - Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.Metrics
  - Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.NumberCollapsed
  - Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.NumberEmissions
  - Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.NumberFallbackEmissions
  - Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.options
  - Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.OriginatingCollapserKey
  - Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.PublicCacheKey
  - Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.PutInCacheIfAbsent(System.Threading.Tasks.Task{`0},System.Threading.Tasks.Task{`0}@)
  - Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.Setup
  - Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.ShouldOutputOnNextEvents
  - Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.StartCommand
  - Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.tcs
  - Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.threadPoolKey
  - Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.ThreadPoolKey
  - Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.threadState
  langs:
  - csharp
  - vb
  name: AbstractCommand<TResult>
  nameWithType: AbstractCommand<TResult>
  fullName: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand<TResult>
  type: Class
  source:
    remote:
      path: src/CircuitBreaker/src/HystrixBase/AbstractCommand.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: AbstractCommand
    path: ../Steeltoe/src/CircuitBreaker/src/HystrixBase/AbstractCommand.cs
    startLine: 25
  assemblies:
  - Steeltoe.CircuitBreaker.HystrixBase
  namespace: Steeltoe.CircuitBreaker.Hystrix
  syntax:
    content: 'public abstract class AbstractCommand<TResult> : AbstractCommandBase, IHystrixInvokableInfo, IHystrixInvokable'
    typeParameters:
    - id: TResult
    content.vb: >-
      Public MustInherit Class AbstractCommand(Of TResult)

          Inherits AbstractCommandBase

          Implements IHystrixInvokableInfo, IHystrixInvokable
  inheritance:
  - System.Object
  - Steeltoe.CircuitBreaker.Hystrix.AbstractCommandBase
  derivedClasses:
  - Steeltoe.CircuitBreaker.Hystrix.HystrixCommand`1
  implements:
  - Steeltoe.CircuitBreaker.Hystrix.IHystrixInvokableInfo
  - Steeltoe.CircuitBreaker.Hystrix.IHystrixInvokable
  inheritedMembers:
  - Steeltoe.CircuitBreaker.Hystrix.AbstractCommandBase._executionSemaphorePerCircuit
  - Steeltoe.CircuitBreaker.Hystrix.AbstractCommandBase._fallbackSemaphorePerCircuit
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  nameWithType.vb: AbstractCommand(Of TResult)
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
  fullName.vb: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand(Of TResult)
  name.vb: AbstractCommand(Of TResult)
- uid: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1._currentRequestLog
  commentId: F:Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1._currentRequestLog
  id: _currentRequestLog
  parent: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1
  langs:
  - csharp
  - vb
  name: _currentRequestLog
  nameWithType: AbstractCommand<TResult>._currentRequestLog
  fullName: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand<TResult>._currentRequestLog
  type: Field
  source:
    remote:
      path: src/CircuitBreaker/src/HystrixBase/AbstractCommand.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: _currentRequestLog
    path: ../Steeltoe/src/CircuitBreaker/src/HystrixBase/AbstractCommand.cs
    startLine: 187
  assemblies:
  - Steeltoe.CircuitBreaker.HystrixBase
  namespace: Steeltoe.CircuitBreaker.Hystrix
  syntax:
    content: protected readonly HystrixRequestLog _currentRequestLog
    return:
      type: Steeltoe.CircuitBreaker.Hystrix.HystrixRequestLog
    content.vb: Protected ReadOnly _currentRequestLog As HystrixRequestLog
  nameWithType.vb: AbstractCommand(Of TResult)._currentRequestLog
  modifiers.csharp:
  - protected
  - readonly
  modifiers.vb:
  - Protected
  - ReadOnly
  fullName.vb: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand(Of TResult)._currentRequestLog
- uid: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1._requestCache
  commentId: F:Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1._requestCache
  id: _requestCache
  parent: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1
  langs:
  - csharp
  - vb
  name: _requestCache
  nameWithType: AbstractCommand<TResult>._requestCache
  fullName: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand<TResult>._requestCache
  type: Field
  source:
    remote:
      path: src/CircuitBreaker/src/HystrixBase/AbstractCommand.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: _requestCache
    path: ../Steeltoe/src/CircuitBreaker/src/HystrixBase/AbstractCommand.cs
    startLine: 188
  assemblies:
  - Steeltoe.CircuitBreaker.HystrixBase
  namespace: Steeltoe.CircuitBreaker.Hystrix
  syntax:
    content: protected readonly HystrixRequestCache _requestCache
    return:
      type: Steeltoe.CircuitBreaker.Hystrix.HystrixRequestCache
    content.vb: Protected ReadOnly _requestCache As HystrixRequestCache
  nameWithType.vb: AbstractCommand(Of TResult)._requestCache
  modifiers.csharp:
  - protected
  - readonly
  modifiers.vb:
  - Protected
  - ReadOnly
  fullName.vb: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand(Of TResult)._requestCache
- uid: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1._executionHook
  commentId: F:Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1._executionHook
  id: _executionHook
  parent: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1
  langs:
  - csharp
  - vb
  name: _executionHook
  nameWithType: AbstractCommand<TResult>._executionHook
  fullName: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand<TResult>._executionHook
  type: Field
  source:
    remote:
      path: src/CircuitBreaker/src/HystrixBase/AbstractCommand.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: _executionHook
    path: ../Steeltoe/src/CircuitBreaker/src/HystrixBase/AbstractCommand.cs
    startLine: 189
  assemblies:
  - Steeltoe.CircuitBreaker.HystrixBase
  namespace: Steeltoe.CircuitBreaker.Hystrix
  syntax:
    content: protected readonly HystrixCommandExecutionHook _executionHook
    return:
      type: Steeltoe.CircuitBreaker.Hystrix.Strategy.ExecutionHook.HystrixCommandExecutionHook
    content.vb: Protected ReadOnly _executionHook As HystrixCommandExecutionHook
  nameWithType.vb: AbstractCommand(Of TResult)._executionHook
  modifiers.csharp:
  - protected
  - readonly
  modifiers.vb:
  - Protected
  - ReadOnly
  fullName.vb: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand(Of TResult)._executionHook
- uid: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1._metrics
  commentId: F:Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1._metrics
  id: _metrics
  parent: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1
  langs:
  - csharp
  - vb
  name: _metrics
  nameWithType: AbstractCommand<TResult>._metrics
  fullName: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand<TResult>._metrics
  type: Field
  source:
    remote:
      path: src/CircuitBreaker/src/HystrixBase/AbstractCommand.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: _metrics
    path: ../Steeltoe/src/CircuitBreaker/src/HystrixBase/AbstractCommand.cs
    startLine: 190
  assemblies:
  - Steeltoe.CircuitBreaker.HystrixBase
  namespace: Steeltoe.CircuitBreaker.Hystrix
  syntax:
    content: protected readonly HystrixCommandMetrics _metrics
    return:
      type: Steeltoe.CircuitBreaker.Hystrix.HystrixCommandMetrics
    content.vb: Protected ReadOnly _metrics As HystrixCommandMetrics
  nameWithType.vb: AbstractCommand(Of TResult)._metrics
  modifiers.csharp:
  - protected
  - readonly
  modifiers.vb:
  - Protected
  - ReadOnly
  fullName.vb: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand(Of TResult)._metrics
- uid: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1._eventNotifier
  commentId: F:Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1._eventNotifier
  id: _eventNotifier
  parent: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1
  langs:
  - csharp
  - vb
  name: _eventNotifier
  nameWithType: AbstractCommand<TResult>._eventNotifier
  fullName: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand<TResult>._eventNotifier
  type: Field
  source:
    remote:
      path: src/CircuitBreaker/src/HystrixBase/AbstractCommand.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: _eventNotifier
    path: ../Steeltoe/src/CircuitBreaker/src/HystrixBase/AbstractCommand.cs
    startLine: 191
  assemblies:
  - Steeltoe.CircuitBreaker.HystrixBase
  namespace: Steeltoe.CircuitBreaker.Hystrix
  syntax:
    content: protected readonly HystrixEventNotifier _eventNotifier
    return:
      type: Steeltoe.CircuitBreaker.Hystrix.Strategy.EventNotifier.HystrixEventNotifier
    content.vb: Protected ReadOnly _eventNotifier As HystrixEventNotifier
  nameWithType.vb: AbstractCommand(Of TResult)._eventNotifier
  modifiers.csharp:
  - protected
  - readonly
  modifiers.vb:
  - Protected
  - ReadOnly
  fullName.vb: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand(Of TResult)._eventNotifier
- uid: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1._circuitBreaker
  commentId: F:Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1._circuitBreaker
  id: _circuitBreaker
  parent: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1
  langs:
  - csharp
  - vb
  name: _circuitBreaker
  nameWithType: AbstractCommand<TResult>._circuitBreaker
  fullName: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand<TResult>._circuitBreaker
  type: Field
  source:
    remote:
      path: src/CircuitBreaker/src/HystrixBase/AbstractCommand.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: _circuitBreaker
    path: ../Steeltoe/src/CircuitBreaker/src/HystrixBase/AbstractCommand.cs
    startLine: 192
  assemblies:
  - Steeltoe.CircuitBreaker.HystrixBase
  namespace: Steeltoe.CircuitBreaker.Hystrix
  syntax:
    content: protected readonly ICircuitBreaker _circuitBreaker
    return:
      type: Steeltoe.CircuitBreaker.ICircuitBreaker
    content.vb: Protected ReadOnly _circuitBreaker As ICircuitBreaker
  nameWithType.vb: AbstractCommand(Of TResult)._circuitBreaker
  modifiers.csharp:
  - protected
  - readonly
  modifiers.vb:
  - Protected
  - ReadOnly
  fullName.vb: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand(Of TResult)._circuitBreaker
- uid: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1._threadPool
  commentId: F:Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1._threadPool
  id: _threadPool
  parent: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1
  langs:
  - csharp
  - vb
  name: _threadPool
  nameWithType: AbstractCommand<TResult>._threadPool
  fullName: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand<TResult>._threadPool
  type: Field
  source:
    remote:
      path: src/CircuitBreaker/src/HystrixBase/AbstractCommand.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: _threadPool
    path: ../Steeltoe/src/CircuitBreaker/src/HystrixBase/AbstractCommand.cs
    startLine: 193
  assemblies:
  - Steeltoe.CircuitBreaker.HystrixBase
  namespace: Steeltoe.CircuitBreaker.Hystrix
  syntax:
    content: protected readonly IHystrixThreadPool _threadPool
    return:
      type: Steeltoe.CircuitBreaker.Hystrix.IHystrixThreadPool
    content.vb: Protected ReadOnly _threadPool As IHystrixThreadPool
  nameWithType.vb: AbstractCommand(Of TResult)._threadPool
  modifiers.csharp:
  - protected
  - readonly
  modifiers.vb:
  - Protected
  - ReadOnly
  fullName.vb: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand(Of TResult)._threadPool
- uid: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1._fallbackSemaphoreOverride
  commentId: F:Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1._fallbackSemaphoreOverride
  id: _fallbackSemaphoreOverride
  parent: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1
  langs:
  - csharp
  - vb
  name: _fallbackSemaphoreOverride
  nameWithType: AbstractCommand<TResult>._fallbackSemaphoreOverride
  fullName: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand<TResult>._fallbackSemaphoreOverride
  type: Field
  source:
    remote:
      path: src/CircuitBreaker/src/HystrixBase/AbstractCommand.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: _fallbackSemaphoreOverride
    path: ../Steeltoe/src/CircuitBreaker/src/HystrixBase/AbstractCommand.cs
    startLine: 194
  assemblies:
  - Steeltoe.CircuitBreaker.HystrixBase
  namespace: Steeltoe.CircuitBreaker.Hystrix
  syntax:
    content: protected readonly SemaphoreSlim _fallbackSemaphoreOverride
    return:
      type: System.Threading.SemaphoreSlim
    content.vb: Protected ReadOnly _fallbackSemaphoreOverride As SemaphoreSlim
  nameWithType.vb: AbstractCommand(Of TResult)._fallbackSemaphoreOverride
  modifiers.csharp:
  - protected
  - readonly
  modifiers.vb:
  - Protected
  - ReadOnly
  fullName.vb: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand(Of TResult)._fallbackSemaphoreOverride
- uid: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1._executionSemaphoreOverride
  commentId: F:Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1._executionSemaphoreOverride
  id: _executionSemaphoreOverride
  parent: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1
  langs:
  - csharp
  - vb
  name: _executionSemaphoreOverride
  nameWithType: AbstractCommand<TResult>._executionSemaphoreOverride
  fullName: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand<TResult>._executionSemaphoreOverride
  type: Field
  source:
    remote:
      path: src/CircuitBreaker/src/HystrixBase/AbstractCommand.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: _executionSemaphoreOverride
    path: ../Steeltoe/src/CircuitBreaker/src/HystrixBase/AbstractCommand.cs
    startLine: 195
  assemblies:
  - Steeltoe.CircuitBreaker.HystrixBase
  namespace: Steeltoe.CircuitBreaker.Hystrix
  syntax:
    content: protected readonly SemaphoreSlim _executionSemaphoreOverride
    return:
      type: System.Threading.SemaphoreSlim
    content.vb: Protected ReadOnly _executionSemaphoreOverride As SemaphoreSlim
  nameWithType.vb: AbstractCommand(Of TResult)._executionSemaphoreOverride
  modifiers.csharp:
  - protected
  - readonly
  modifiers.vb:
  - Protected
  - ReadOnly
  fullName.vb: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand(Of TResult)._executionSemaphoreOverride
- uid: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1._concurrencyStrategy
  commentId: F:Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1._concurrencyStrategy
  id: _concurrencyStrategy
  parent: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1
  langs:
  - csharp
  - vb
  name: _concurrencyStrategy
  nameWithType: AbstractCommand<TResult>._concurrencyStrategy
  fullName: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand<TResult>._concurrencyStrategy
  type: Field
  source:
    remote:
      path: src/CircuitBreaker/src/HystrixBase/AbstractCommand.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: _concurrencyStrategy
    path: ../Steeltoe/src/CircuitBreaker/src/HystrixBase/AbstractCommand.cs
    startLine: 196
  assemblies:
  - Steeltoe.CircuitBreaker.HystrixBase
  namespace: Steeltoe.CircuitBreaker.Hystrix
  syntax:
    content: protected readonly HystrixConcurrencyStrategy _concurrencyStrategy
    return:
      type: Steeltoe.CircuitBreaker.Hystrix.Strategy.Concurrency.HystrixConcurrencyStrategy
    content.vb: Protected ReadOnly _concurrencyStrategy As HystrixConcurrencyStrategy
  nameWithType.vb: AbstractCommand(Of TResult)._concurrencyStrategy
  modifiers.csharp:
  - protected
  - readonly
  modifiers.vb:
  - Protected
  - ReadOnly
  fullName.vb: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand(Of TResult)._concurrencyStrategy
- uid: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1._commandStartTimestamp
  commentId: F:Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1._commandStartTimestamp
  id: _commandStartTimestamp
  parent: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1
  langs:
  - csharp
  - vb
  name: _commandStartTimestamp
  nameWithType: AbstractCommand<TResult>._commandStartTimestamp
  fullName: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand<TResult>._commandStartTimestamp
  type: Field
  source:
    remote:
      path: src/CircuitBreaker/src/HystrixBase/AbstractCommand.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: _commandStartTimestamp
    path: ../Steeltoe/src/CircuitBreaker/src/HystrixBase/AbstractCommand.cs
    startLine: 197
  assemblies:
  - Steeltoe.CircuitBreaker.HystrixBase
  namespace: Steeltoe.CircuitBreaker.Hystrix
  syntax:
    content: protected long _commandStartTimestamp
    return:
      type: System.Int64
    content.vb: Protected _commandStartTimestamp As Long
  nameWithType.vb: AbstractCommand(Of TResult)._commandStartTimestamp
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand(Of TResult)._commandStartTimestamp
- uid: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1._threadStartTimestamp
  commentId: F:Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1._threadStartTimestamp
  id: _threadStartTimestamp
  parent: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1
  langs:
  - csharp
  - vb
  name: _threadStartTimestamp
  nameWithType: AbstractCommand<TResult>._threadStartTimestamp
  fullName: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand<TResult>._threadStartTimestamp
  type: Field
  source:
    remote:
      path: src/CircuitBreaker/src/HystrixBase/AbstractCommand.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: _threadStartTimestamp
    path: ../Steeltoe/src/CircuitBreaker/src/HystrixBase/AbstractCommand.cs
    startLine: 198
  assemblies:
  - Steeltoe.CircuitBreaker.HystrixBase
  namespace: Steeltoe.CircuitBreaker.Hystrix
  syntax:
    content: protected long _threadStartTimestamp
    return:
      type: System.Int64
    content.vb: Protected _threadStartTimestamp As Long
  nameWithType.vb: AbstractCommand(Of TResult)._threadStartTimestamp
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand(Of TResult)._threadStartTimestamp
- uid: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1._isResponseFromCache
  commentId: F:Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1._isResponseFromCache
  id: _isResponseFromCache
  parent: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1
  langs:
  - csharp
  - vb
  name: _isResponseFromCache
  nameWithType: AbstractCommand<TResult>._isResponseFromCache
  fullName: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand<TResult>._isResponseFromCache
  type: Field
  source:
    remote:
      path: src/CircuitBreaker/src/HystrixBase/AbstractCommand.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: _isResponseFromCache
    path: ../Steeltoe/src/CircuitBreaker/src/HystrixBase/AbstractCommand.cs
    startLine: 199
  assemblies:
  - Steeltoe.CircuitBreaker.HystrixBase
  namespace: Steeltoe.CircuitBreaker.Hystrix
  syntax:
    content: protected volatile bool _isResponseFromCache
    return:
      type: System.Boolean
    content.vb: Protected _isResponseFromCache As Boolean
  nameWithType.vb: AbstractCommand(Of TResult)._isResponseFromCache
  modifiers.csharp:
  - protected
  - volatile
  modifiers.vb:
  - Protected
  fullName.vb: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand(Of TResult)._isResponseFromCache
- uid: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1._execThreadTask
  commentId: F:Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1._execThreadTask
  id: _execThreadTask
  parent: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1
  langs:
  - csharp
  - vb
  name: _execThreadTask
  nameWithType: AbstractCommand<TResult>._execThreadTask
  fullName: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand<TResult>._execThreadTask
  type: Field
  source:
    remote:
      path: src/CircuitBreaker/src/HystrixBase/AbstractCommand.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: _execThreadTask
    path: ../Steeltoe/src/CircuitBreaker/src/HystrixBase/AbstractCommand.cs
    startLine: 200
  assemblies:
  - Steeltoe.CircuitBreaker.HystrixBase
  namespace: Steeltoe.CircuitBreaker.Hystrix
  syntax:
    content: protected Task _execThreadTask
    return:
      type: System.Threading.Tasks.Task
    content.vb: Protected _execThreadTask As Task
  nameWithType.vb: AbstractCommand(Of TResult)._execThreadTask
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand(Of TResult)._execThreadTask
- uid: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1._timeoutTcs
  commentId: F:Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1._timeoutTcs
  id: _timeoutTcs
  parent: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1
  langs:
  - csharp
  - vb
  name: _timeoutTcs
  nameWithType: AbstractCommand<TResult>._timeoutTcs
  fullName: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand<TResult>._timeoutTcs
  type: Field
  source:
    remote:
      path: src/CircuitBreaker/src/HystrixBase/AbstractCommand.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: _timeoutTcs
    path: ../Steeltoe/src/CircuitBreaker/src/HystrixBase/AbstractCommand.cs
    startLine: 201
  assemblies:
  - Steeltoe.CircuitBreaker.HystrixBase
  namespace: Steeltoe.CircuitBreaker.Hystrix
  syntax:
    content: protected CancellationTokenSource _timeoutTcs
    return:
      type: System.Threading.CancellationTokenSource
    content.vb: Protected _timeoutTcs As CancellationTokenSource
  nameWithType.vb: AbstractCommand(Of TResult)._timeoutTcs
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand(Of TResult)._timeoutTcs
- uid: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1._token
  commentId: F:Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1._token
  id: _token
  parent: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1
  langs:
  - csharp
  - vb
  name: _token
  nameWithType: AbstractCommand<TResult>._token
  fullName: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand<TResult>._token
  type: Field
  source:
    remote:
      path: src/CircuitBreaker/src/HystrixBase/AbstractCommand.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: _token
    path: ../Steeltoe/src/CircuitBreaker/src/HystrixBase/AbstractCommand.cs
    startLine: 202
  assemblies:
  - Steeltoe.CircuitBreaker.HystrixBase
  namespace: Steeltoe.CircuitBreaker.Hystrix
  syntax:
    content: protected CancellationToken _token
    return:
      type: System.Threading.CancellationToken
    content.vb: Protected _token As CancellationToken
  nameWithType.vb: AbstractCommand(Of TResult)._token
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand(Of TResult)._token
- uid: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1._usersToken
  commentId: F:Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1._usersToken
  id: _usersToken
  parent: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1
  langs:
  - csharp
  - vb
  name: _usersToken
  nameWithType: AbstractCommand<TResult>._usersToken
  fullName: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand<TResult>._usersToken
  type: Field
  source:
    remote:
      path: src/CircuitBreaker/src/HystrixBase/AbstractCommand.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: _usersToken
    path: ../Steeltoe/src/CircuitBreaker/src/HystrixBase/AbstractCommand.cs
    startLine: 203
  assemblies:
  - Steeltoe.CircuitBreaker.HystrixBase
  namespace: Steeltoe.CircuitBreaker.Hystrix
  syntax:
    content: protected CancellationToken _usersToken
    return:
      type: System.Threading.CancellationToken
    content.vb: Protected _usersToken As CancellationToken
  nameWithType.vb: AbstractCommand(Of TResult)._usersToken
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand(Of TResult)._usersToken
- uid: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1._executionResult
  commentId: F:Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1._executionResult
  id: _executionResult
  parent: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1
  langs:
  - csharp
  - vb
  name: _executionResult
  nameWithType: AbstractCommand<TResult>._executionResult
  fullName: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand<TResult>._executionResult
  type: Field
  source:
    remote:
      path: src/CircuitBreaker/src/HystrixBase/AbstractCommand.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: _executionResult
    path: ../Steeltoe/src/CircuitBreaker/src/HystrixBase/AbstractCommand.cs
    startLine: 204
  assemblies:
  - Steeltoe.CircuitBreaker.HystrixBase
  namespace: Steeltoe.CircuitBreaker.Hystrix
  syntax:
    content: protected volatile ExecutionResult _executionResult
    return:
      type: Steeltoe.CircuitBreaker.Hystrix.ExecutionResult
    content.vb: Protected _executionResult As ExecutionResult
  nameWithType.vb: AbstractCommand(Of TResult)._executionResult
  modifiers.csharp:
  - protected
  - volatile
  modifiers.vb:
  - Protected
  fullName.vb: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand(Of TResult)._executionResult
- uid: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1._executionResultAtTimeOfCancellation
  commentId: F:Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1._executionResultAtTimeOfCancellation
  id: _executionResultAtTimeOfCancellation
  parent: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1
  langs:
  - csharp
  - vb
  name: _executionResultAtTimeOfCancellation
  nameWithType: AbstractCommand<TResult>._executionResultAtTimeOfCancellation
  fullName: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand<TResult>._executionResultAtTimeOfCancellation
  type: Field
  source:
    remote:
      path: src/CircuitBreaker/src/HystrixBase/AbstractCommand.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: _executionResultAtTimeOfCancellation
    path: ../Steeltoe/src/CircuitBreaker/src/HystrixBase/AbstractCommand.cs
    startLine: 205
  assemblies:
  - Steeltoe.CircuitBreaker.HystrixBase
  namespace: Steeltoe.CircuitBreaker.Hystrix
  syntax:
    content: protected volatile ExecutionResult _executionResultAtTimeOfCancellation
    return:
      type: Steeltoe.CircuitBreaker.Hystrix.ExecutionResult
    content.vb: Protected _executionResultAtTimeOfCancellation As ExecutionResult
  nameWithType.vb: AbstractCommand(Of TResult)._executionResultAtTimeOfCancellation
  modifiers.csharp:
  - protected
  - volatile
  modifiers.vb:
  - Protected
  fullName.vb: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand(Of TResult)._executionResultAtTimeOfCancellation
- uid: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.commandState
  commentId: F:Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.commandState
  id: commandState
  parent: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1
  langs:
  - csharp
  - vb
  name: commandState
  nameWithType: AbstractCommand<TResult>.commandState
  fullName: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand<TResult>.commandState
  type: Field
  source:
    remote:
      path: src/CircuitBreaker/src/HystrixBase/AbstractCommand.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: commandState
    path: ../Steeltoe/src/CircuitBreaker/src/HystrixBase/AbstractCommand.cs
    startLine: 207
  assemblies:
  - Steeltoe.CircuitBreaker.HystrixBase
  namespace: Steeltoe.CircuitBreaker.Hystrix
  syntax:
    content: protected readonly AbstractCommand<TResult>.AtomicCommandState commandState
    return:
      type: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.AtomicCommandState
    content.vb: Protected ReadOnly commandState As AbstractCommand(Of TResult).AtomicCommandState
  nameWithType.vb: AbstractCommand(Of TResult).commandState
  modifiers.csharp:
  - protected
  - readonly
  modifiers.vb:
  - Protected
  - ReadOnly
  fullName.vb: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand(Of TResult).commandState
- uid: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.threadState
  commentId: F:Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.threadState
  id: threadState
  parent: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1
  langs:
  - csharp
  - vb
  name: threadState
  nameWithType: AbstractCommand<TResult>.threadState
  fullName: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand<TResult>.threadState
  type: Field
  source:
    remote:
      path: src/CircuitBreaker/src/HystrixBase/AbstractCommand.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: threadState
    path: ../Steeltoe/src/CircuitBreaker/src/HystrixBase/AbstractCommand.cs
    startLine: 208
  assemblies:
  - Steeltoe.CircuitBreaker.HystrixBase
  namespace: Steeltoe.CircuitBreaker.Hystrix
  syntax:
    content: protected readonly AbstractCommand<TResult>.AtomicThreadState threadState
    return:
      type: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.AtomicThreadState
    content.vb: Protected ReadOnly threadState As AbstractCommand(Of TResult).AtomicThreadState
  nameWithType.vb: AbstractCommand(Of TResult).threadState
  modifiers.csharp:
  - protected
  - readonly
  modifiers.vb:
  - Protected
  - ReadOnly
  fullName.vb: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand(Of TResult).threadState
- uid: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.isCommandTimedOut
  commentId: F:Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.isCommandTimedOut
  id: isCommandTimedOut
  parent: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1
  langs:
  - csharp
  - vb
  name: isCommandTimedOut
  nameWithType: AbstractCommand<TResult>.isCommandTimedOut
  fullName: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand<TResult>.isCommandTimedOut
  type: Field
  source:
    remote:
      path: src/CircuitBreaker/src/HystrixBase/AbstractCommand.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: isCommandTimedOut
    path: ../Steeltoe/src/CircuitBreaker/src/HystrixBase/AbstractCommand.cs
    startLine: 209
  assemblies:
  - Steeltoe.CircuitBreaker.HystrixBase
  namespace: Steeltoe.CircuitBreaker.Hystrix
  syntax:
    content: protected readonly AbstractCommand<TResult>.AtomicTimedOutStatus isCommandTimedOut
    return:
      type: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.AtomicTimedOutStatus
    content.vb: Protected ReadOnly isCommandTimedOut As AbstractCommand(Of TResult).AtomicTimedOutStatus
  nameWithType.vb: AbstractCommand(Of TResult).isCommandTimedOut
  modifiers.csharp:
  - protected
  - readonly
  modifiers.vb:
  - Protected
  - ReadOnly
  fullName.vb: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand(Of TResult).isCommandTimedOut
- uid: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.commandGroup
  commentId: F:Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.commandGroup
  id: commandGroup
  parent: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1
  langs:
  - csharp
  - vb
  name: commandGroup
  nameWithType: AbstractCommand<TResult>.commandGroup
  fullName: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand<TResult>.commandGroup
  type: Field
  source:
    remote:
      path: src/CircuitBreaker/src/HystrixBase/AbstractCommand.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: commandGroup
    path: ../Steeltoe/src/CircuitBreaker/src/HystrixBase/AbstractCommand.cs
    startLine: 210
  assemblies:
  - Steeltoe.CircuitBreaker.HystrixBase
  namespace: Steeltoe.CircuitBreaker.Hystrix
  syntax:
    content: protected readonly IHystrixCommandGroupKey commandGroup
    return:
      type: Steeltoe.CircuitBreaker.Hystrix.IHystrixCommandGroupKey
    content.vb: Protected ReadOnly commandGroup As IHystrixCommandGroupKey
  nameWithType.vb: AbstractCommand(Of TResult).commandGroup
  modifiers.csharp:
  - protected
  - readonly
  modifiers.vb:
  - Protected
  - ReadOnly
  fullName.vb: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand(Of TResult).commandGroup
- uid: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.tcs
  commentId: F:Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.tcs
  id: tcs
  parent: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1
  langs:
  - csharp
  - vb
  name: tcs
  nameWithType: AbstractCommand<TResult>.tcs
  fullName: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand<TResult>.tcs
  type: Field
  source:
    remote:
      path: src/CircuitBreaker/src/HystrixBase/AbstractCommand.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: tcs
    path: ../Steeltoe/src/CircuitBreaker/src/HystrixBase/AbstractCommand.cs
    startLine: 212
  assemblies:
  - Steeltoe.CircuitBreaker.HystrixBase
  namespace: Steeltoe.CircuitBreaker.Hystrix
  syntax:
    content: protected AbstractCommand<TResult>.HystrixCompletionSource tcs
    return:
      type: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.HystrixCompletionSource
    content.vb: Protected tcs As AbstractCommand(Of TResult).HystrixCompletionSource
  nameWithType.vb: AbstractCommand(Of TResult).tcs
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand(Of TResult).tcs
- uid: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.#ctor(Steeltoe.CircuitBreaker.Hystrix.IHystrixCommandGroupKey,Steeltoe.CircuitBreaker.Hystrix.IHystrixCommandKey,Steeltoe.CircuitBreaker.Hystrix.IHystrixThreadPoolKey,Steeltoe.CircuitBreaker.ICircuitBreaker,Steeltoe.CircuitBreaker.Hystrix.IHystrixThreadPool,Steeltoe.CircuitBreaker.Hystrix.IHystrixCommandOptions,Steeltoe.CircuitBreaker.Hystrix.IHystrixThreadPoolOptions,Steeltoe.CircuitBreaker.Hystrix.HystrixCommandMetrics,System.Threading.SemaphoreSlim,System.Threading.SemaphoreSlim,Steeltoe.CircuitBreaker.Hystrix.Strategy.Options.HystrixOptionsStrategy,Steeltoe.CircuitBreaker.Hystrix.Strategy.ExecutionHook.HystrixCommandExecutionHook,ILogger)
  commentId: M:Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.#ctor(Steeltoe.CircuitBreaker.Hystrix.IHystrixCommandGroupKey,Steeltoe.CircuitBreaker.Hystrix.IHystrixCommandKey,Steeltoe.CircuitBreaker.Hystrix.IHystrixThreadPoolKey,Steeltoe.CircuitBreaker.ICircuitBreaker,Steeltoe.CircuitBreaker.Hystrix.IHystrixThreadPool,Steeltoe.CircuitBreaker.Hystrix.IHystrixCommandOptions,Steeltoe.CircuitBreaker.Hystrix.IHystrixThreadPoolOptions,Steeltoe.CircuitBreaker.Hystrix.HystrixCommandMetrics,System.Threading.SemaphoreSlim,System.Threading.SemaphoreSlim,Steeltoe.CircuitBreaker.Hystrix.Strategy.Options.HystrixOptionsStrategy,Steeltoe.CircuitBreaker.Hystrix.Strategy.ExecutionHook.HystrixCommandExecutionHook,ILogger)
  id: '#ctor(Steeltoe.CircuitBreaker.Hystrix.IHystrixCommandGroupKey,Steeltoe.CircuitBreaker.Hystrix.IHystrixCommandKey,Steeltoe.CircuitBreaker.Hystrix.IHystrixThreadPoolKey,Steeltoe.CircuitBreaker.ICircuitBreaker,Steeltoe.CircuitBreaker.Hystrix.IHystrixThreadPool,Steeltoe.CircuitBreaker.Hystrix.IHystrixCommandOptions,Steeltoe.CircuitBreaker.Hystrix.IHystrixThreadPoolOptions,Steeltoe.CircuitBreaker.Hystrix.HystrixCommandMetrics,System.Threading.SemaphoreSlim,System.Threading.SemaphoreSlim,Steeltoe.CircuitBreaker.Hystrix.Strategy.Options.HystrixOptionsStrategy,Steeltoe.CircuitBreaker.Hystrix.Strategy.ExecutionHook.HystrixCommandExecutionHook,ILogger)'
  parent: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1
  langs:
  - csharp
  - vb
  name: AbstractCommand(IHystrixCommandGroupKey, IHystrixCommandKey, IHystrixThreadPoolKey, ICircuitBreaker, IHystrixThreadPool, IHystrixCommandOptions, IHystrixThreadPoolOptions, HystrixCommandMetrics, SemaphoreSlim, SemaphoreSlim, HystrixOptionsStrategy, HystrixCommandExecutionHook, ILogger)
  nameWithType: AbstractCommand<TResult>.AbstractCommand(IHystrixCommandGroupKey, IHystrixCommandKey, IHystrixThreadPoolKey, ICircuitBreaker, IHystrixThreadPool, IHystrixCommandOptions, IHystrixThreadPoolOptions, HystrixCommandMetrics, SemaphoreSlim, SemaphoreSlim, HystrixOptionsStrategy, HystrixCommandExecutionHook, ILogger)
  fullName: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand<TResult>.AbstractCommand(Steeltoe.CircuitBreaker.Hystrix.IHystrixCommandGroupKey, Steeltoe.CircuitBreaker.Hystrix.IHystrixCommandKey, Steeltoe.CircuitBreaker.Hystrix.IHystrixThreadPoolKey, Steeltoe.CircuitBreaker.ICircuitBreaker, Steeltoe.CircuitBreaker.Hystrix.IHystrixThreadPool, Steeltoe.CircuitBreaker.Hystrix.IHystrixCommandOptions, Steeltoe.CircuitBreaker.Hystrix.IHystrixThreadPoolOptions, Steeltoe.CircuitBreaker.Hystrix.HystrixCommandMetrics, System.Threading.SemaphoreSlim, System.Threading.SemaphoreSlim, Steeltoe.CircuitBreaker.Hystrix.Strategy.Options.HystrixOptionsStrategy, Steeltoe.CircuitBreaker.Hystrix.Strategy.ExecutionHook.HystrixCommandExecutionHook, ILogger)
  type: Constructor
  source:
    remote:
      path: src/CircuitBreaker/src/HystrixBase/AbstractCommand.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: .ctor
    path: ../Steeltoe/src/CircuitBreaker/src/HystrixBase/AbstractCommand.cs
    startLine: 218
  assemblies:
  - Steeltoe.CircuitBreaker.HystrixBase
  namespace: Steeltoe.CircuitBreaker.Hystrix
  syntax:
    content: protected AbstractCommand(IHystrixCommandGroupKey group, IHystrixCommandKey key, IHystrixThreadPoolKey threadPoolKey, ICircuitBreaker circuitBreaker, IHystrixThreadPool threadPool, IHystrixCommandOptions commandOptionsDefaults, IHystrixThreadPoolOptions threadPoolOptionsDefaults, HystrixCommandMetrics metrics, SemaphoreSlim fallbackSemaphore, SemaphoreSlim executionSemaphore, HystrixOptionsStrategy optionsStrategy, HystrixCommandExecutionHook executionHook, ILogger logger = null)
    parameters:
    - id: group
      type: Steeltoe.CircuitBreaker.Hystrix.IHystrixCommandGroupKey
    - id: key
      type: Steeltoe.CircuitBreaker.Hystrix.IHystrixCommandKey
    - id: threadPoolKey
      type: Steeltoe.CircuitBreaker.Hystrix.IHystrixThreadPoolKey
    - id: circuitBreaker
      type: Steeltoe.CircuitBreaker.ICircuitBreaker
    - id: threadPool
      type: Steeltoe.CircuitBreaker.Hystrix.IHystrixThreadPool
    - id: commandOptionsDefaults
      type: Steeltoe.CircuitBreaker.Hystrix.IHystrixCommandOptions
    - id: threadPoolOptionsDefaults
      type: Steeltoe.CircuitBreaker.Hystrix.IHystrixThreadPoolOptions
    - id: metrics
      type: Steeltoe.CircuitBreaker.Hystrix.HystrixCommandMetrics
    - id: fallbackSemaphore
      type: System.Threading.SemaphoreSlim
    - id: executionSemaphore
      type: System.Threading.SemaphoreSlim
    - id: optionsStrategy
      type: Steeltoe.CircuitBreaker.Hystrix.Strategy.Options.HystrixOptionsStrategy
    - id: executionHook
      type: Steeltoe.CircuitBreaker.Hystrix.Strategy.ExecutionHook.HystrixCommandExecutionHook
    - id: logger
      type: ILogger
    content.vb: Protected Sub New(group As IHystrixCommandGroupKey, key As IHystrixCommandKey, threadPoolKey As IHystrixThreadPoolKey, circuitBreaker As ICircuitBreaker, threadPool As IHystrixThreadPool, commandOptionsDefaults As IHystrixCommandOptions, threadPoolOptionsDefaults As IHystrixThreadPoolOptions, metrics As HystrixCommandMetrics, fallbackSemaphore As SemaphoreSlim, executionSemaphore As SemaphoreSlim, optionsStrategy As HystrixOptionsStrategy, executionHook As HystrixCommandExecutionHook, logger As ILogger = Nothing)
  overload: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.#ctor*
  nameWithType.vb: AbstractCommand(Of TResult).AbstractCommand(IHystrixCommandGroupKey, IHystrixCommandKey, IHystrixThreadPoolKey, ICircuitBreaker, IHystrixThreadPool, IHystrixCommandOptions, IHystrixThreadPoolOptions, HystrixCommandMetrics, SemaphoreSlim, SemaphoreSlim, HystrixOptionsStrategy, HystrixCommandExecutionHook, ILogger)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand(Of TResult).AbstractCommand(Steeltoe.CircuitBreaker.Hystrix.IHystrixCommandGroupKey, Steeltoe.CircuitBreaker.Hystrix.IHystrixCommandKey, Steeltoe.CircuitBreaker.Hystrix.IHystrixThreadPoolKey, Steeltoe.CircuitBreaker.ICircuitBreaker, Steeltoe.CircuitBreaker.Hystrix.IHystrixThreadPool, Steeltoe.CircuitBreaker.Hystrix.IHystrixCommandOptions, Steeltoe.CircuitBreaker.Hystrix.IHystrixThreadPoolOptions, Steeltoe.CircuitBreaker.Hystrix.HystrixCommandMetrics, System.Threading.SemaphoreSlim, System.Threading.SemaphoreSlim, Steeltoe.CircuitBreaker.Hystrix.Strategy.Options.HystrixOptionsStrategy, Steeltoe.CircuitBreaker.Hystrix.Strategy.ExecutionHook.HystrixCommandExecutionHook, ILogger)
- uid: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.GetExecutionSemaphore
  commentId: M:Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.GetExecutionSemaphore
  id: GetExecutionSemaphore
  parent: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1
  langs:
  - csharp
  - vb
  name: GetExecutionSemaphore()
  nameWithType: AbstractCommand<TResult>.GetExecutionSemaphore()
  fullName: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand<TResult>.GetExecutionSemaphore()
  type: Method
  source:
    remote:
      path: src/CircuitBreaker/src/HystrixBase/AbstractCommand.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: GetExecutionSemaphore
    path: ../Steeltoe/src/CircuitBreaker/src/HystrixBase/AbstractCommand.cs
    startLine: 266
  assemblies:
  - Steeltoe.CircuitBreaker.HystrixBase
  namespace: Steeltoe.CircuitBreaker.Hystrix
  syntax:
    content: protected SemaphoreSlim GetExecutionSemaphore()
    return:
      type: System.Threading.SemaphoreSlim
    content.vb: Protected Function GetExecutionSemaphore As SemaphoreSlim
  overload: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.GetExecutionSemaphore*
  nameWithType.vb: AbstractCommand(Of TResult).GetExecutionSemaphore()
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand(Of TResult).GetExecutionSemaphore()
- uid: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.GetFallbackSemaphore
  commentId: M:Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.GetFallbackSemaphore
  id: GetFallbackSemaphore
  parent: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1
  langs:
  - csharp
  - vb
  name: GetFallbackSemaphore()
  nameWithType: AbstractCommand<TResult>.GetFallbackSemaphore()
  fullName: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand<TResult>.GetFallbackSemaphore()
  type: Method
  source:
    remote:
      path: src/CircuitBreaker/src/HystrixBase/AbstractCommand.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: GetFallbackSemaphore
    path: ../Steeltoe/src/CircuitBreaker/src/HystrixBase/AbstractCommand.cs
    startLine: 286
  assemblies:
  - Steeltoe.CircuitBreaker.HystrixBase
  namespace: Steeltoe.CircuitBreaker.Hystrix
  syntax:
    content: protected SemaphoreSlim GetFallbackSemaphore()
    return:
      type: System.Threading.SemaphoreSlim
    content.vb: Protected Function GetFallbackSemaphore As SemaphoreSlim
  overload: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.GetFallbackSemaphore*
  nameWithType.vb: AbstractCommand(Of TResult).GetFallbackSemaphore()
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand(Of TResult).GetFallbackSemaphore()
- uid: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.InitGroupKey(Steeltoe.CircuitBreaker.Hystrix.IHystrixCommandGroupKey)
  commentId: M:Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.InitGroupKey(Steeltoe.CircuitBreaker.Hystrix.IHystrixCommandGroupKey)
  id: InitGroupKey(Steeltoe.CircuitBreaker.Hystrix.IHystrixCommandGroupKey)
  parent: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1
  langs:
  - csharp
  - vb
  name: InitGroupKey(IHystrixCommandGroupKey)
  nameWithType: AbstractCommand<TResult>.InitGroupKey(IHystrixCommandGroupKey)
  fullName: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand<TResult>.InitGroupKey(Steeltoe.CircuitBreaker.Hystrix.IHystrixCommandGroupKey)
  type: Method
  source:
    remote:
      path: src/CircuitBreaker/src/HystrixBase/AbstractCommand.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: InitGroupKey
    path: ../Steeltoe/src/CircuitBreaker/src/HystrixBase/AbstractCommand.cs
    startLine: 299
  assemblies:
  - Steeltoe.CircuitBreaker.HystrixBase
  namespace: Steeltoe.CircuitBreaker.Hystrix
  syntax:
    content: protected static IHystrixCommandGroupKey InitGroupKey(IHystrixCommandGroupKey fromConstructor)
    parameters:
    - id: fromConstructor
      type: Steeltoe.CircuitBreaker.Hystrix.IHystrixCommandGroupKey
    return:
      type: Steeltoe.CircuitBreaker.Hystrix.IHystrixCommandGroupKey
    content.vb: Protected Shared Function InitGroupKey(fromConstructor As IHystrixCommandGroupKey) As IHystrixCommandGroupKey
  overload: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.InitGroupKey*
  nameWithType.vb: AbstractCommand(Of TResult).InitGroupKey(IHystrixCommandGroupKey)
  modifiers.csharp:
  - protected
  - static
  modifiers.vb:
  - Protected
  - Shared
  fullName.vb: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand(Of TResult).InitGroupKey(Steeltoe.CircuitBreaker.Hystrix.IHystrixCommandGroupKey)
- uid: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.InitCommandKey(Steeltoe.CircuitBreaker.Hystrix.IHystrixCommandKey,System.Type)
  commentId: M:Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.InitCommandKey(Steeltoe.CircuitBreaker.Hystrix.IHystrixCommandKey,System.Type)
  id: InitCommandKey(Steeltoe.CircuitBreaker.Hystrix.IHystrixCommandKey,System.Type)
  parent: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1
  langs:
  - csharp
  - vb
  name: InitCommandKey(IHystrixCommandKey, Type)
  nameWithType: AbstractCommand<TResult>.InitCommandKey(IHystrixCommandKey, Type)
  fullName: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand<TResult>.InitCommandKey(Steeltoe.CircuitBreaker.Hystrix.IHystrixCommandKey, System.Type)
  type: Method
  source:
    remote:
      path: src/CircuitBreaker/src/HystrixBase/AbstractCommand.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: InitCommandKey
    path: ../Steeltoe/src/CircuitBreaker/src/HystrixBase/AbstractCommand.cs
    startLine: 311
  assemblies:
  - Steeltoe.CircuitBreaker.HystrixBase
  namespace: Steeltoe.CircuitBreaker.Hystrix
  syntax:
    content: protected static IHystrixCommandKey InitCommandKey(IHystrixCommandKey fromConstructor, Type clazz)
    parameters:
    - id: fromConstructor
      type: Steeltoe.CircuitBreaker.Hystrix.IHystrixCommandKey
    - id: clazz
      type: System.Type
    return:
      type: Steeltoe.CircuitBreaker.Hystrix.IHystrixCommandKey
    content.vb: Protected Shared Function InitCommandKey(fromConstructor As IHystrixCommandKey, clazz As Type) As IHystrixCommandKey
  overload: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.InitCommandKey*
  nameWithType.vb: AbstractCommand(Of TResult).InitCommandKey(IHystrixCommandKey, Type)
  modifiers.csharp:
  - protected
  - static
  modifiers.vb:
  - Protected
  - Shared
  fullName.vb: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand(Of TResult).InitCommandKey(Steeltoe.CircuitBreaker.Hystrix.IHystrixCommandKey, System.Type)
- uid: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.InitCommandOptions(Steeltoe.CircuitBreaker.Hystrix.IHystrixCommandKey,Steeltoe.CircuitBreaker.Hystrix.Strategy.Options.HystrixOptionsStrategy,Steeltoe.CircuitBreaker.Hystrix.IHystrixCommandOptions)
  commentId: M:Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.InitCommandOptions(Steeltoe.CircuitBreaker.Hystrix.IHystrixCommandKey,Steeltoe.CircuitBreaker.Hystrix.Strategy.Options.HystrixOptionsStrategy,Steeltoe.CircuitBreaker.Hystrix.IHystrixCommandOptions)
  id: InitCommandOptions(Steeltoe.CircuitBreaker.Hystrix.IHystrixCommandKey,Steeltoe.CircuitBreaker.Hystrix.Strategy.Options.HystrixOptionsStrategy,Steeltoe.CircuitBreaker.Hystrix.IHystrixCommandOptions)
  parent: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1
  langs:
  - csharp
  - vb
  name: InitCommandOptions(IHystrixCommandKey, HystrixOptionsStrategy, IHystrixCommandOptions)
  nameWithType: AbstractCommand<TResult>.InitCommandOptions(IHystrixCommandKey, HystrixOptionsStrategy, IHystrixCommandOptions)
  fullName: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand<TResult>.InitCommandOptions(Steeltoe.CircuitBreaker.Hystrix.IHystrixCommandKey, Steeltoe.CircuitBreaker.Hystrix.Strategy.Options.HystrixOptionsStrategy, Steeltoe.CircuitBreaker.Hystrix.IHystrixCommandOptions)
  type: Method
  source:
    remote:
      path: src/CircuitBreaker/src/HystrixBase/AbstractCommand.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: InitCommandOptions
    path: ../Steeltoe/src/CircuitBreaker/src/HystrixBase/AbstractCommand.cs
    startLine: 324
  assemblies:
  - Steeltoe.CircuitBreaker.HystrixBase
  namespace: Steeltoe.CircuitBreaker.Hystrix
  syntax:
    content: protected static IHystrixCommandOptions InitCommandOptions(IHystrixCommandKey commandKey, HystrixOptionsStrategy optionsStrategy, IHystrixCommandOptions commandOptionsDefault)
    parameters:
    - id: commandKey
      type: Steeltoe.CircuitBreaker.Hystrix.IHystrixCommandKey
    - id: optionsStrategy
      type: Steeltoe.CircuitBreaker.Hystrix.Strategy.Options.HystrixOptionsStrategy
    - id: commandOptionsDefault
      type: Steeltoe.CircuitBreaker.Hystrix.IHystrixCommandOptions
    return:
      type: Steeltoe.CircuitBreaker.Hystrix.IHystrixCommandOptions
    content.vb: Protected Shared Function InitCommandOptions(commandKey As IHystrixCommandKey, optionsStrategy As HystrixOptionsStrategy, commandOptionsDefault As IHystrixCommandOptions) As IHystrixCommandOptions
  overload: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.InitCommandOptions*
  nameWithType.vb: AbstractCommand(Of TResult).InitCommandOptions(IHystrixCommandKey, HystrixOptionsStrategy, IHystrixCommandOptions)
  modifiers.csharp:
  - protected
  - static
  modifiers.vb:
  - Protected
  - Shared
  fullName.vb: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand(Of TResult).InitCommandOptions(Steeltoe.CircuitBreaker.Hystrix.IHystrixCommandKey, Steeltoe.CircuitBreaker.Hystrix.Strategy.Options.HystrixOptionsStrategy, Steeltoe.CircuitBreaker.Hystrix.IHystrixCommandOptions)
- uid: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.InitThreadPoolKey(Steeltoe.CircuitBreaker.Hystrix.IHystrixThreadPoolKey,Steeltoe.CircuitBreaker.Hystrix.IHystrixCommandGroupKey,System.String)
  commentId: M:Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.InitThreadPoolKey(Steeltoe.CircuitBreaker.Hystrix.IHystrixThreadPoolKey,Steeltoe.CircuitBreaker.Hystrix.IHystrixCommandGroupKey,System.String)
  id: InitThreadPoolKey(Steeltoe.CircuitBreaker.Hystrix.IHystrixThreadPoolKey,Steeltoe.CircuitBreaker.Hystrix.IHystrixCommandGroupKey,System.String)
  parent: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1
  langs:
  - csharp
  - vb
  name: InitThreadPoolKey(IHystrixThreadPoolKey, IHystrixCommandGroupKey, String)
  nameWithType: AbstractCommand<TResult>.InitThreadPoolKey(IHystrixThreadPoolKey, IHystrixCommandGroupKey, String)
  fullName: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand<TResult>.InitThreadPoolKey(Steeltoe.CircuitBreaker.Hystrix.IHystrixThreadPoolKey, Steeltoe.CircuitBreaker.Hystrix.IHystrixCommandGroupKey, System.String)
  type: Method
  source:
    remote:
      path: src/CircuitBreaker/src/HystrixBase/AbstractCommand.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: InitThreadPoolKey
    path: ../Steeltoe/src/CircuitBreaker/src/HystrixBase/AbstractCommand.cs
    startLine: 340
  assemblies:
  - Steeltoe.CircuitBreaker.HystrixBase
  namespace: Steeltoe.CircuitBreaker.Hystrix
  syntax:
    content: protected static IHystrixThreadPoolKey InitThreadPoolKey(IHystrixThreadPoolKey threadPoolKey, IHystrixCommandGroupKey groupKey, string threadPoolKeyOverride)
    parameters:
    - id: threadPoolKey
      type: Steeltoe.CircuitBreaker.Hystrix.IHystrixThreadPoolKey
    - id: groupKey
      type: Steeltoe.CircuitBreaker.Hystrix.IHystrixCommandGroupKey
    - id: threadPoolKeyOverride
      type: System.String
    return:
      type: Steeltoe.CircuitBreaker.Hystrix.IHystrixThreadPoolKey
    content.vb: Protected Shared Function InitThreadPoolKey(threadPoolKey As IHystrixThreadPoolKey, groupKey As IHystrixCommandGroupKey, threadPoolKeyOverride As String) As IHystrixThreadPoolKey
  overload: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.InitThreadPoolKey*
  nameWithType.vb: AbstractCommand(Of TResult).InitThreadPoolKey(IHystrixThreadPoolKey, IHystrixCommandGroupKey, String)
  modifiers.csharp:
  - protected
  - static
  modifiers.vb:
  - Protected
  - Shared
  fullName.vb: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand(Of TResult).InitThreadPoolKey(Steeltoe.CircuitBreaker.Hystrix.IHystrixThreadPoolKey, Steeltoe.CircuitBreaker.Hystrix.IHystrixCommandGroupKey, System.String)
- uid: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.InitMetrics(Steeltoe.CircuitBreaker.Hystrix.HystrixCommandMetrics,Steeltoe.CircuitBreaker.Hystrix.IHystrixCommandGroupKey,Steeltoe.CircuitBreaker.Hystrix.IHystrixThreadPoolKey,Steeltoe.CircuitBreaker.Hystrix.IHystrixCommandKey,Steeltoe.CircuitBreaker.Hystrix.IHystrixCommandOptions)
  commentId: M:Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.InitMetrics(Steeltoe.CircuitBreaker.Hystrix.HystrixCommandMetrics,Steeltoe.CircuitBreaker.Hystrix.IHystrixCommandGroupKey,Steeltoe.CircuitBreaker.Hystrix.IHystrixThreadPoolKey,Steeltoe.CircuitBreaker.Hystrix.IHystrixCommandKey,Steeltoe.CircuitBreaker.Hystrix.IHystrixCommandOptions)
  id: InitMetrics(Steeltoe.CircuitBreaker.Hystrix.HystrixCommandMetrics,Steeltoe.CircuitBreaker.Hystrix.IHystrixCommandGroupKey,Steeltoe.CircuitBreaker.Hystrix.IHystrixThreadPoolKey,Steeltoe.CircuitBreaker.Hystrix.IHystrixCommandKey,Steeltoe.CircuitBreaker.Hystrix.IHystrixCommandOptions)
  parent: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1
  langs:
  - csharp
  - vb
  name: InitMetrics(HystrixCommandMetrics, IHystrixCommandGroupKey, IHystrixThreadPoolKey, IHystrixCommandKey, IHystrixCommandOptions)
  nameWithType: AbstractCommand<TResult>.InitMetrics(HystrixCommandMetrics, IHystrixCommandGroupKey, IHystrixThreadPoolKey, IHystrixCommandKey, IHystrixCommandOptions)
  fullName: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand<TResult>.InitMetrics(Steeltoe.CircuitBreaker.Hystrix.HystrixCommandMetrics, Steeltoe.CircuitBreaker.Hystrix.IHystrixCommandGroupKey, Steeltoe.CircuitBreaker.Hystrix.IHystrixThreadPoolKey, Steeltoe.CircuitBreaker.Hystrix.IHystrixCommandKey, Steeltoe.CircuitBreaker.Hystrix.IHystrixCommandOptions)
  type: Method
  source:
    remote:
      path: src/CircuitBreaker/src/HystrixBase/AbstractCommand.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: InitMetrics
    path: ../Steeltoe/src/CircuitBreaker/src/HystrixBase/AbstractCommand.cs
    startLine: 365
  assemblies:
  - Steeltoe.CircuitBreaker.HystrixBase
  namespace: Steeltoe.CircuitBreaker.Hystrix
  syntax:
    content: protected static HystrixCommandMetrics InitMetrics(HystrixCommandMetrics fromConstructor, IHystrixCommandGroupKey groupKey, IHystrixThreadPoolKey threadPoolKey, IHystrixCommandKey commandKey, IHystrixCommandOptions properties)
    parameters:
    - id: fromConstructor
      type: Steeltoe.CircuitBreaker.Hystrix.HystrixCommandMetrics
    - id: groupKey
      type: Steeltoe.CircuitBreaker.Hystrix.IHystrixCommandGroupKey
    - id: threadPoolKey
      type: Steeltoe.CircuitBreaker.Hystrix.IHystrixThreadPoolKey
    - id: commandKey
      type: Steeltoe.CircuitBreaker.Hystrix.IHystrixCommandKey
    - id: properties
      type: Steeltoe.CircuitBreaker.Hystrix.IHystrixCommandOptions
    return:
      type: Steeltoe.CircuitBreaker.Hystrix.HystrixCommandMetrics
    content.vb: Protected Shared Function InitMetrics(fromConstructor As HystrixCommandMetrics, groupKey As IHystrixCommandGroupKey, threadPoolKey As IHystrixThreadPoolKey, commandKey As IHystrixCommandKey, properties As IHystrixCommandOptions) As HystrixCommandMetrics
  overload: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.InitMetrics*
  nameWithType.vb: AbstractCommand(Of TResult).InitMetrics(HystrixCommandMetrics, IHystrixCommandGroupKey, IHystrixThreadPoolKey, IHystrixCommandKey, IHystrixCommandOptions)
  modifiers.csharp:
  - protected
  - static
  modifiers.vb:
  - Protected
  - Shared
  fullName.vb: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand(Of TResult).InitMetrics(Steeltoe.CircuitBreaker.Hystrix.HystrixCommandMetrics, Steeltoe.CircuitBreaker.Hystrix.IHystrixCommandGroupKey, Steeltoe.CircuitBreaker.Hystrix.IHystrixThreadPoolKey, Steeltoe.CircuitBreaker.Hystrix.IHystrixCommandKey, Steeltoe.CircuitBreaker.Hystrix.IHystrixCommandOptions)
- uid: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.InitCircuitBreaker(System.Boolean,Steeltoe.CircuitBreaker.ICircuitBreaker,Steeltoe.CircuitBreaker.Hystrix.IHystrixCommandGroupKey,Steeltoe.CircuitBreaker.Hystrix.IHystrixCommandKey,Steeltoe.CircuitBreaker.Hystrix.IHystrixCommandOptions,Steeltoe.CircuitBreaker.Hystrix.HystrixCommandMetrics)
  commentId: M:Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.InitCircuitBreaker(System.Boolean,Steeltoe.CircuitBreaker.ICircuitBreaker,Steeltoe.CircuitBreaker.Hystrix.IHystrixCommandGroupKey,Steeltoe.CircuitBreaker.Hystrix.IHystrixCommandKey,Steeltoe.CircuitBreaker.Hystrix.IHystrixCommandOptions,Steeltoe.CircuitBreaker.Hystrix.HystrixCommandMetrics)
  id: InitCircuitBreaker(System.Boolean,Steeltoe.CircuitBreaker.ICircuitBreaker,Steeltoe.CircuitBreaker.Hystrix.IHystrixCommandGroupKey,Steeltoe.CircuitBreaker.Hystrix.IHystrixCommandKey,Steeltoe.CircuitBreaker.Hystrix.IHystrixCommandOptions,Steeltoe.CircuitBreaker.Hystrix.HystrixCommandMetrics)
  parent: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1
  langs:
  - csharp
  - vb
  name: InitCircuitBreaker(Boolean, ICircuitBreaker, IHystrixCommandGroupKey, IHystrixCommandKey, IHystrixCommandOptions, HystrixCommandMetrics)
  nameWithType: AbstractCommand<TResult>.InitCircuitBreaker(Boolean, ICircuitBreaker, IHystrixCommandGroupKey, IHystrixCommandKey, IHystrixCommandOptions, HystrixCommandMetrics)
  fullName: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand<TResult>.InitCircuitBreaker(System.Boolean, Steeltoe.CircuitBreaker.ICircuitBreaker, Steeltoe.CircuitBreaker.Hystrix.IHystrixCommandGroupKey, Steeltoe.CircuitBreaker.Hystrix.IHystrixCommandKey, Steeltoe.CircuitBreaker.Hystrix.IHystrixCommandOptions, Steeltoe.CircuitBreaker.Hystrix.HystrixCommandMetrics)
  type: Method
  source:
    remote:
      path: src/CircuitBreaker/src/HystrixBase/AbstractCommand.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: InitCircuitBreaker
    path: ../Steeltoe/src/CircuitBreaker/src/HystrixBase/AbstractCommand.cs
    startLine: 382
  assemblies:
  - Steeltoe.CircuitBreaker.HystrixBase
  namespace: Steeltoe.CircuitBreaker.Hystrix
  syntax:
    content: protected static ICircuitBreaker InitCircuitBreaker(bool enabled, ICircuitBreaker fromConstructor, IHystrixCommandGroupKey groupKey, IHystrixCommandKey commandKey, IHystrixCommandOptions properties, HystrixCommandMetrics metrics)
    parameters:
    - id: enabled
      type: System.Boolean
    - id: fromConstructor
      type: Steeltoe.CircuitBreaker.ICircuitBreaker
    - id: groupKey
      type: Steeltoe.CircuitBreaker.Hystrix.IHystrixCommandGroupKey
    - id: commandKey
      type: Steeltoe.CircuitBreaker.Hystrix.IHystrixCommandKey
    - id: properties
      type: Steeltoe.CircuitBreaker.Hystrix.IHystrixCommandOptions
    - id: metrics
      type: Steeltoe.CircuitBreaker.Hystrix.HystrixCommandMetrics
    return:
      type: Steeltoe.CircuitBreaker.ICircuitBreaker
    content.vb: Protected Shared Function InitCircuitBreaker(enabled As Boolean, fromConstructor As ICircuitBreaker, groupKey As IHystrixCommandGroupKey, commandKey As IHystrixCommandKey, properties As IHystrixCommandOptions, metrics As HystrixCommandMetrics) As ICircuitBreaker
  overload: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.InitCircuitBreaker*
  nameWithType.vb: AbstractCommand(Of TResult).InitCircuitBreaker(Boolean, ICircuitBreaker, IHystrixCommandGroupKey, IHystrixCommandKey, IHystrixCommandOptions, HystrixCommandMetrics)
  modifiers.csharp:
  - protected
  - static
  modifiers.vb:
  - Protected
  - Shared
  fullName.vb: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand(Of TResult).InitCircuitBreaker(System.Boolean, Steeltoe.CircuitBreaker.ICircuitBreaker, Steeltoe.CircuitBreaker.Hystrix.IHystrixCommandGroupKey, Steeltoe.CircuitBreaker.Hystrix.IHystrixCommandKey, Steeltoe.CircuitBreaker.Hystrix.IHystrixCommandOptions, Steeltoe.CircuitBreaker.Hystrix.HystrixCommandMetrics)
- uid: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.InitExecutionHook(Steeltoe.CircuitBreaker.Hystrix.Strategy.ExecutionHook.HystrixCommandExecutionHook)
  commentId: M:Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.InitExecutionHook(Steeltoe.CircuitBreaker.Hystrix.Strategy.ExecutionHook.HystrixCommandExecutionHook)
  id: InitExecutionHook(Steeltoe.CircuitBreaker.Hystrix.Strategy.ExecutionHook.HystrixCommandExecutionHook)
  parent: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1
  langs:
  - csharp
  - vb
  name: InitExecutionHook(HystrixCommandExecutionHook)
  nameWithType: AbstractCommand<TResult>.InitExecutionHook(HystrixCommandExecutionHook)
  fullName: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand<TResult>.InitExecutionHook(Steeltoe.CircuitBreaker.Hystrix.Strategy.ExecutionHook.HystrixCommandExecutionHook)
  type: Method
  source:
    remote:
      path: src/CircuitBreaker/src/HystrixBase/AbstractCommand.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: InitExecutionHook
    path: ../Steeltoe/src/CircuitBreaker/src/HystrixBase/AbstractCommand.cs
    startLine: 408
  assemblies:
  - Steeltoe.CircuitBreaker.HystrixBase
  namespace: Steeltoe.CircuitBreaker.Hystrix
  syntax:
    content: protected static HystrixCommandExecutionHook InitExecutionHook(HystrixCommandExecutionHook fromConstructor)
    parameters:
    - id: fromConstructor
      type: Steeltoe.CircuitBreaker.Hystrix.Strategy.ExecutionHook.HystrixCommandExecutionHook
    return:
      type: Steeltoe.CircuitBreaker.Hystrix.Strategy.ExecutionHook.HystrixCommandExecutionHook
    content.vb: Protected Shared Function InitExecutionHook(fromConstructor As HystrixCommandExecutionHook) As HystrixCommandExecutionHook
  overload: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.InitExecutionHook*
  nameWithType.vb: AbstractCommand(Of TResult).InitExecutionHook(HystrixCommandExecutionHook)
  modifiers.csharp:
  - protected
  - static
  modifiers.vb:
  - Protected
  - Shared
  fullName.vb: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand(Of TResult).InitExecutionHook(Steeltoe.CircuitBreaker.Hystrix.Strategy.ExecutionHook.HystrixCommandExecutionHook)
- uid: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.InitThreadPool(Steeltoe.CircuitBreaker.Hystrix.IHystrixThreadPool,Steeltoe.CircuitBreaker.Hystrix.IHystrixThreadPoolKey,Steeltoe.CircuitBreaker.Hystrix.IHystrixThreadPoolOptions)
  commentId: M:Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.InitThreadPool(Steeltoe.CircuitBreaker.Hystrix.IHystrixThreadPool,Steeltoe.CircuitBreaker.Hystrix.IHystrixThreadPoolKey,Steeltoe.CircuitBreaker.Hystrix.IHystrixThreadPoolOptions)
  id: InitThreadPool(Steeltoe.CircuitBreaker.Hystrix.IHystrixThreadPool,Steeltoe.CircuitBreaker.Hystrix.IHystrixThreadPoolKey,Steeltoe.CircuitBreaker.Hystrix.IHystrixThreadPoolOptions)
  parent: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1
  langs:
  - csharp
  - vb
  name: InitThreadPool(IHystrixThreadPool, IHystrixThreadPoolKey, IHystrixThreadPoolOptions)
  nameWithType: AbstractCommand<TResult>.InitThreadPool(IHystrixThreadPool, IHystrixThreadPoolKey, IHystrixThreadPoolOptions)
  fullName: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand<TResult>.InitThreadPool(Steeltoe.CircuitBreaker.Hystrix.IHystrixThreadPool, Steeltoe.CircuitBreaker.Hystrix.IHystrixThreadPoolKey, Steeltoe.CircuitBreaker.Hystrix.IHystrixThreadPoolOptions)
  type: Method
  source:
    remote:
      path: src/CircuitBreaker/src/HystrixBase/AbstractCommand.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: InitThreadPool
    path: ../Steeltoe/src/CircuitBreaker/src/HystrixBase/AbstractCommand.cs
    startLine: 418
  assemblies:
  - Steeltoe.CircuitBreaker.HystrixBase
  namespace: Steeltoe.CircuitBreaker.Hystrix
  syntax:
    content: protected static IHystrixThreadPool InitThreadPool(IHystrixThreadPool fromConstructor, IHystrixThreadPoolKey threadPoolKey, IHystrixThreadPoolOptions threadPoolPropertiesDefaults)
    parameters:
    - id: fromConstructor
      type: Steeltoe.CircuitBreaker.Hystrix.IHystrixThreadPool
    - id: threadPoolKey
      type: Steeltoe.CircuitBreaker.Hystrix.IHystrixThreadPoolKey
    - id: threadPoolPropertiesDefaults
      type: Steeltoe.CircuitBreaker.Hystrix.IHystrixThreadPoolOptions
    return:
      type: Steeltoe.CircuitBreaker.Hystrix.IHystrixThreadPool
    content.vb: Protected Shared Function InitThreadPool(fromConstructor As IHystrixThreadPool, threadPoolKey As IHystrixThreadPoolKey, threadPoolPropertiesDefaults As IHystrixThreadPoolOptions) As IHystrixThreadPool
  overload: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.InitThreadPool*
  nameWithType.vb: AbstractCommand(Of TResult).InitThreadPool(IHystrixThreadPool, IHystrixThreadPoolKey, IHystrixThreadPoolOptions)
  modifiers.csharp:
  - protected
  - static
  modifiers.vb:
  - Protected
  - Shared
  fullName.vb: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand(Of TResult).InitThreadPool(Steeltoe.CircuitBreaker.Hystrix.IHystrixThreadPool, Steeltoe.CircuitBreaker.Hystrix.IHystrixThreadPoolKey, Steeltoe.CircuitBreaker.Hystrix.IHystrixThreadPoolOptions)
- uid: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.InitRequestLog(System.Boolean)
  commentId: M:Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.InitRequestLog(System.Boolean)
  id: InitRequestLog(System.Boolean)
  parent: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1
  langs:
  - csharp
  - vb
  name: InitRequestLog(Boolean)
  nameWithType: AbstractCommand<TResult>.InitRequestLog(Boolean)
  fullName: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand<TResult>.InitRequestLog(System.Boolean)
  type: Method
  source:
    remote:
      path: src/CircuitBreaker/src/HystrixBase/AbstractCommand.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: InitRequestLog
    path: ../Steeltoe/src/CircuitBreaker/src/HystrixBase/AbstractCommand.cs
    startLine: 434
  assemblies:
  - Steeltoe.CircuitBreaker.HystrixBase
  namespace: Steeltoe.CircuitBreaker.Hystrix
  syntax:
    content: protected static HystrixRequestLog InitRequestLog(bool enabled)
    parameters:
    - id: enabled
      type: System.Boolean
    return:
      type: Steeltoe.CircuitBreaker.Hystrix.HystrixRequestLog
    content.vb: Protected Shared Function InitRequestLog(enabled As Boolean) As HystrixRequestLog
  overload: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.InitRequestLog*
  nameWithType.vb: AbstractCommand(Of TResult).InitRequestLog(Boolean)
  modifiers.csharp:
  - protected
  - static
  modifiers.vb:
  - Protected
  - Shared
  fullName.vb: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand(Of TResult).InitRequestLog(System.Boolean)
- uid: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.Setup
  commentId: M:Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.Setup
  id: Setup
  parent: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1
  langs:
  - csharp
  - vb
  name: Setup()
  nameWithType: AbstractCommand<TResult>.Setup()
  fullName: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand<TResult>.Setup()
  type: Method
  source:
    remote:
      path: src/CircuitBreaker/src/HystrixBase/AbstractCommand.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Setup
    path: ../Steeltoe/src/CircuitBreaker/src/HystrixBase/AbstractCommand.cs
    startLine: 448
  assemblies:
  - Steeltoe.CircuitBreaker.HystrixBase
  namespace: Steeltoe.CircuitBreaker.Hystrix
  syntax:
    content: protected void Setup()
    content.vb: Protected Sub Setup
  overload: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.Setup*
  nameWithType.vb: AbstractCommand(Of TResult).Setup()
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand(Of TResult).Setup()
- uid: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.PutInCacheIfAbsent(System.Threading.Tasks.Task{`0},System.Threading.Tasks.Task{`0}@)
  commentId: M:Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.PutInCacheIfAbsent(System.Threading.Tasks.Task{`0},System.Threading.Tasks.Task{`0}@)
  id: PutInCacheIfAbsent(System.Threading.Tasks.Task{`0},System.Threading.Tasks.Task{`0}@)
  parent: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1
  langs:
  - csharp
  - vb
  name: PutInCacheIfAbsent(Task<TResult>, out Task<TResult>)
  nameWithType: AbstractCommand<TResult>.PutInCacheIfAbsent(Task<TResult>, out Task<TResult>)
  fullName: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand<TResult>.PutInCacheIfAbsent(System.Threading.Tasks.Task<TResult>, out System.Threading.Tasks.Task<TResult>)
  type: Method
  source:
    remote:
      path: src/CircuitBreaker/src/HystrixBase/AbstractCommand.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: PutInCacheIfAbsent
    path: ../Steeltoe/src/CircuitBreaker/src/HystrixBase/AbstractCommand.cs
    startLine: 475
  assemblies:
  - Steeltoe.CircuitBreaker.HystrixBase
  namespace: Steeltoe.CircuitBreaker.Hystrix
  syntax:
    content: protected bool PutInCacheIfAbsent(Task<TResult> hystrixTask, out Task<TResult> fromCache)
    parameters:
    - id: hystrixTask
      type: System.Threading.Tasks.Task{{TResult}}
    - id: fromCache
      type: System.Threading.Tasks.Task{{TResult}}
    return:
      type: System.Boolean
    content.vb: Protected Function PutInCacheIfAbsent(hystrixTask As Task(Of TResult), ByRef fromCache As Task(Of TResult)) As Boolean
  overload: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.PutInCacheIfAbsent*
  nameWithType.vb: AbstractCommand(Of TResult).PutInCacheIfAbsent(Task(Of TResult), ByRef Task(Of TResult))
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand(Of TResult).PutInCacheIfAbsent(System.Threading.Tasks.Task(Of TResult), ByRef System.Threading.Tasks.Task(Of TResult))
  name.vb: PutInCacheIfAbsent(Task(Of TResult), ByRef Task(Of TResult))
- uid: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.ApplyHystrixSemantics
  commentId: M:Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.ApplyHystrixSemantics
  id: ApplyHystrixSemantics
  parent: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1
  langs:
  - csharp
  - vb
  name: ApplyHystrixSemantics()
  nameWithType: AbstractCommand<TResult>.ApplyHystrixSemantics()
  fullName: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand<TResult>.ApplyHystrixSemantics()
  type: Method
  source:
    remote:
      path: src/CircuitBreaker/src/HystrixBase/AbstractCommand.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: ApplyHystrixSemantics
    path: ../Steeltoe/src/CircuitBreaker/src/HystrixBase/AbstractCommand.cs
    startLine: 494
  assemblies:
  - Steeltoe.CircuitBreaker.HystrixBase
  namespace: Steeltoe.CircuitBreaker.Hystrix
  syntax:
    content: protected void ApplyHystrixSemantics()
    content.vb: Protected Sub ApplyHystrixSemantics
  overload: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.ApplyHystrixSemantics*
  nameWithType.vb: AbstractCommand(Of TResult).ApplyHystrixSemantics()
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand(Of TResult).ApplyHystrixSemantics()
- uid: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.StartCommand
  commentId: M:Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.StartCommand
  id: StartCommand
  parent: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1
  langs:
  - csharp
  - vb
  name: StartCommand()
  nameWithType: AbstractCommand<TResult>.StartCommand()
  fullName: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand<TResult>.StartCommand()
  type: Method
  source:
    remote:
      path: src/CircuitBreaker/src/HystrixBase/AbstractCommand.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: StartCommand
    path: ../Steeltoe/src/CircuitBreaker/src/HystrixBase/AbstractCommand.cs
    startLine: 555
  assemblies:
  - Steeltoe.CircuitBreaker.HystrixBase
  namespace: Steeltoe.CircuitBreaker.Hystrix
  syntax:
    content: protected void StartCommand()
    content.vb: Protected Sub StartCommand
  overload: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.StartCommand*
  nameWithType.vb: AbstractCommand(Of TResult).StartCommand()
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand(Of TResult).StartCommand()
- uid: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.DecomposeException(System.Exception)
  commentId: M:Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.DecomposeException(System.Exception)
  id: DecomposeException(System.Exception)
  parent: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1
  langs:
  - csharp
  - vb
  name: DecomposeException(Exception)
  nameWithType: AbstractCommand<TResult>.DecomposeException(Exception)
  fullName: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand<TResult>.DecomposeException(System.Exception)
  type: Method
  source:
    remote:
      path: src/CircuitBreaker/src/HystrixBase/AbstractCommand.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: DecomposeException
    path: ../Steeltoe/src/CircuitBreaker/src/HystrixBase/AbstractCommand.cs
    startLine: 575
  assemblies:
  - Steeltoe.CircuitBreaker.HystrixBase
  namespace: Steeltoe.CircuitBreaker.Hystrix
  syntax:
    content: protected Exception DecomposeException(Exception e)
    parameters:
    - id: e
      type: System.Exception
    return:
      type: System.Exception
    content.vb: Protected Function DecomposeException(e As Exception) As Exception
  overload: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.DecomposeException*
  nameWithType.vb: AbstractCommand(Of TResult).DecomposeException(Exception)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand(Of TResult).DecomposeException(System.Exception)
- uid: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.DoRun
  commentId: M:Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.DoRun
  id: DoRun
  parent: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1
  langs:
  - csharp
  - vb
  name: DoRun()
  nameWithType: AbstractCommand<TResult>.DoRun()
  fullName: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand<TResult>.DoRun()
  type: Method
  source:
    remote:
      path: src/CircuitBreaker/src/HystrixBase/AbstractCommand.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: DoRun
    path: ../Steeltoe/src/CircuitBreaker/src/HystrixBase/AbstractCommand.cs
    startLine: 604
  assemblies:
  - Steeltoe.CircuitBreaker.HystrixBase
  namespace: Steeltoe.CircuitBreaker.Hystrix
  syntax:
    content: protected abstract TResult DoRun()
    return:
      type: '{TResult}'
    content.vb: Protected MustOverride Function DoRun As TResult
  overload: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.DoRun*
  nameWithType.vb: AbstractCommand(Of TResult).DoRun()
  modifiers.csharp:
  - protected
  - abstract
  modifiers.vb:
  - Protected
  - MustOverride
  fullName.vb: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand(Of TResult).DoRun()
- uid: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.DoFallback
  commentId: M:Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.DoFallback
  id: DoFallback
  parent: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1
  langs:
  - csharp
  - vb
  name: DoFallback()
  nameWithType: AbstractCommand<TResult>.DoFallback()
  fullName: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand<TResult>.DoFallback()
  type: Method
  source:
    remote:
      path: src/CircuitBreaker/src/HystrixBase/AbstractCommand.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: DoFallback
    path: ../Steeltoe/src/CircuitBreaker/src/HystrixBase/AbstractCommand.cs
    startLine: 606
  assemblies:
  - Steeltoe.CircuitBreaker.HystrixBase
  namespace: Steeltoe.CircuitBreaker.Hystrix
  syntax:
    content: protected abstract TResult DoFallback()
    return:
      type: '{TResult}'
    content.vb: Protected MustOverride Function DoFallback As TResult
  overload: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.DoFallback*
  nameWithType.vb: AbstractCommand(Of TResult).DoFallback()
  modifiers.csharp:
  - protected
  - abstract
  modifiers.vb:
  - Protected
  - MustOverride
  fullName.vb: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand(Of TResult).DoFallback()
- uid: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.HandleCleanUpAfterResponseFromCache(System.Boolean)
  commentId: M:Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.HandleCleanUpAfterResponseFromCache(System.Boolean)
  id: HandleCleanUpAfterResponseFromCache(System.Boolean)
  parent: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1
  langs:
  - csharp
  - vb
  name: HandleCleanUpAfterResponseFromCache(Boolean)
  nameWithType: AbstractCommand<TResult>.HandleCleanUpAfterResponseFromCache(Boolean)
  fullName: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand<TResult>.HandleCleanUpAfterResponseFromCache(System.Boolean)
  type: Method
  source:
    remote:
      path: src/CircuitBreaker/src/HystrixBase/AbstractCommand.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: HandleCleanUpAfterResponseFromCache
    path: ../Steeltoe/src/CircuitBreaker/src/HystrixBase/AbstractCommand.cs
    startLine: 609
  assemblies:
  - Steeltoe.CircuitBreaker.HystrixBase
  namespace: Steeltoe.CircuitBreaker.Hystrix
  syntax:
    content: protected virtual void HandleCleanUpAfterResponseFromCache(bool commandExecutionStarted)
    parameters:
    - id: commandExecutionStarted
      type: System.Boolean
    content.vb: Protected Overridable Sub HandleCleanUpAfterResponseFromCache(commandExecutionStarted As Boolean)
  overload: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.HandleCleanUpAfterResponseFromCache*
  nameWithType.vb: AbstractCommand(Of TResult).HandleCleanUpAfterResponseFromCache(Boolean)
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
  fullName.vb: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand(Of TResult).HandleCleanUpAfterResponseFromCache(System.Boolean)
- uid: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.HandleCommandEnd(System.Boolean)
  commentId: M:Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.HandleCommandEnd(System.Boolean)
  id: HandleCommandEnd(System.Boolean)
  parent: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1
  langs:
  - csharp
  - vb
  name: HandleCommandEnd(Boolean)
  nameWithType: AbstractCommand<TResult>.HandleCommandEnd(Boolean)
  fullName: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand<TResult>.HandleCommandEnd(System.Boolean)
  type: Method
  source:
    remote:
      path: src/CircuitBreaker/src/HystrixBase/AbstractCommand.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: HandleCommandEnd
    path: ../Steeltoe/src/CircuitBreaker/src/HystrixBase/AbstractCommand.cs
    startLine: 621
  assemblies:
  - Steeltoe.CircuitBreaker.HystrixBase
  namespace: Steeltoe.CircuitBreaker.Hystrix
  syntax:
    content: protected virtual void HandleCommandEnd(bool commandExecutionStarted)
    parameters:
    - id: commandExecutionStarted
      type: System.Boolean
    content.vb: Protected Overridable Sub HandleCommandEnd(commandExecutionStarted As Boolean)
  overload: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.HandleCommandEnd*
  nameWithType.vb: AbstractCommand(Of TResult).HandleCommandEnd(Boolean)
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
  fullName.vb: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand(Of TResult).HandleCommandEnd(System.Boolean)
- uid: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.HandleThreadEnd
  commentId: M:Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.HandleThreadEnd
  id: HandleThreadEnd
  parent: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1
  langs:
  - csharp
  - vb
  name: HandleThreadEnd()
  nameWithType: AbstractCommand<TResult>.HandleThreadEnd()
  fullName: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand<TResult>.HandleThreadEnd()
  type: Method
  source:
    remote:
      path: src/CircuitBreaker/src/HystrixBase/AbstractCommand.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: HandleThreadEnd
    path: ../Steeltoe/src/CircuitBreaker/src/HystrixBase/AbstractCommand.cs
    startLine: 635
  assemblies:
  - Steeltoe.CircuitBreaker.HystrixBase
  namespace: Steeltoe.CircuitBreaker.Hystrix
  syntax:
    content: protected virtual void HandleThreadEnd()
    content.vb: Protected Overridable Sub HandleThreadEnd
  overload: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.HandleThreadEnd*
  nameWithType.vb: AbstractCommand(Of TResult).HandleThreadEnd()
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
  fullName.vb: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand(Of TResult).HandleThreadEnd()
- uid: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.CommandGroup
  commentId: P:Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.CommandGroup
  id: CommandGroup
  parent: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1
  langs:
  - csharp
  - vb
  name: CommandGroup
  nameWithType: AbstractCommand<TResult>.CommandGroup
  fullName: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand<TResult>.CommandGroup
  type: Property
  source:
    remote:
      path: src/CircuitBreaker/src/HystrixBase/AbstractCommand.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: CommandGroup
    path: ../Steeltoe/src/CircuitBreaker/src/HystrixBase/AbstractCommand.cs
    startLine: 1531
  assemblies:
  - Steeltoe.CircuitBreaker.HystrixBase
  namespace: Steeltoe.CircuitBreaker.Hystrix
  syntax:
    content: public IHystrixCommandGroupKey CommandGroup { get; }
    parameters: []
    return:
      type: Steeltoe.CircuitBreaker.Hystrix.IHystrixCommandGroupKey
    content.vb: Public ReadOnly Property CommandGroup As IHystrixCommandGroupKey
  overload: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.CommandGroup*
  implements:
  - Steeltoe.CircuitBreaker.Hystrix.IHystrixInvokableInfo.CommandGroup
  nameWithType.vb: AbstractCommand(Of TResult).CommandGroup
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand(Of TResult).CommandGroup
- uid: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.commandKey
  commentId: F:Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.commandKey
  id: commandKey
  parent: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1
  langs:
  - csharp
  - vb
  name: commandKey
  nameWithType: AbstractCommand<TResult>.commandKey
  fullName: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand<TResult>.commandKey
  type: Field
  source:
    remote:
      path: src/CircuitBreaker/src/HystrixBase/AbstractCommand.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: commandKey
    path: ../Steeltoe/src/CircuitBreaker/src/HystrixBase/AbstractCommand.cs
    startLine: 1533
  assemblies:
  - Steeltoe.CircuitBreaker.HystrixBase
  namespace: Steeltoe.CircuitBreaker.Hystrix
  syntax:
    content: protected readonly IHystrixCommandKey commandKey
    return:
      type: Steeltoe.CircuitBreaker.Hystrix.IHystrixCommandKey
    content.vb: Protected ReadOnly commandKey As IHystrixCommandKey
  nameWithType.vb: AbstractCommand(Of TResult).commandKey
  modifiers.csharp:
  - protected
  - readonly
  modifiers.vb:
  - Protected
  - ReadOnly
  fullName.vb: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand(Of TResult).commandKey
- uid: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.CommandKey
  commentId: P:Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.CommandKey
  id: CommandKey
  parent: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1
  langs:
  - csharp
  - vb
  name: CommandKey
  nameWithType: AbstractCommand<TResult>.CommandKey
  fullName: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand<TResult>.CommandKey
  type: Property
  source:
    remote:
      path: src/CircuitBreaker/src/HystrixBase/AbstractCommand.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: CommandKey
    path: ../Steeltoe/src/CircuitBreaker/src/HystrixBase/AbstractCommand.cs
    startLine: 1535
  assemblies:
  - Steeltoe.CircuitBreaker.HystrixBase
  namespace: Steeltoe.CircuitBreaker.Hystrix
  syntax:
    content: public IHystrixCommandKey CommandKey { get; }
    parameters: []
    return:
      type: Steeltoe.CircuitBreaker.Hystrix.IHystrixCommandKey
    content.vb: Public ReadOnly Property CommandKey As IHystrixCommandKey
  overload: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.CommandKey*
  implements:
  - Steeltoe.CircuitBreaker.Hystrix.IHystrixInvokableInfo.CommandKey
  nameWithType.vb: AbstractCommand(Of TResult).CommandKey
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand(Of TResult).CommandKey
- uid: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.threadPoolKey
  commentId: F:Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.threadPoolKey
  id: threadPoolKey
  parent: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1
  langs:
  - csharp
  - vb
  name: threadPoolKey
  nameWithType: AbstractCommand<TResult>.threadPoolKey
  fullName: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand<TResult>.threadPoolKey
  type: Field
  source:
    remote:
      path: src/CircuitBreaker/src/HystrixBase/AbstractCommand.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: threadPoolKey
    path: ../Steeltoe/src/CircuitBreaker/src/HystrixBase/AbstractCommand.cs
    startLine: 1537
  assemblies:
  - Steeltoe.CircuitBreaker.HystrixBase
  namespace: Steeltoe.CircuitBreaker.Hystrix
  syntax:
    content: protected readonly IHystrixThreadPoolKey threadPoolKey
    return:
      type: Steeltoe.CircuitBreaker.Hystrix.IHystrixThreadPoolKey
    content.vb: Protected ReadOnly threadPoolKey As IHystrixThreadPoolKey
  nameWithType.vb: AbstractCommand(Of TResult).threadPoolKey
  modifiers.csharp:
  - protected
  - readonly
  modifiers.vb:
  - Protected
  - ReadOnly
  fullName.vb: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand(Of TResult).threadPoolKey
- uid: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.ThreadPoolKey
  commentId: P:Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.ThreadPoolKey
  id: ThreadPoolKey
  parent: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1
  langs:
  - csharp
  - vb
  name: ThreadPoolKey
  nameWithType: AbstractCommand<TResult>.ThreadPoolKey
  fullName: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand<TResult>.ThreadPoolKey
  type: Property
  source:
    remote:
      path: src/CircuitBreaker/src/HystrixBase/AbstractCommand.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: ThreadPoolKey
    path: ../Steeltoe/src/CircuitBreaker/src/HystrixBase/AbstractCommand.cs
    startLine: 1539
  assemblies:
  - Steeltoe.CircuitBreaker.HystrixBase
  namespace: Steeltoe.CircuitBreaker.Hystrix
  syntax:
    content: public IHystrixThreadPoolKey ThreadPoolKey { get; }
    parameters: []
    return:
      type: Steeltoe.CircuitBreaker.Hystrix.IHystrixThreadPoolKey
    content.vb: Public ReadOnly Property ThreadPoolKey As IHystrixThreadPoolKey
  overload: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.ThreadPoolKey*
  implements:
  - Steeltoe.CircuitBreaker.Hystrix.IHystrixInvokableInfo.ThreadPoolKey
  nameWithType.vb: AbstractCommand(Of TResult).ThreadPoolKey
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand(Of TResult).ThreadPoolKey
- uid: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.options
  commentId: F:Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.options
  id: options
  parent: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1
  langs:
  - csharp
  - vb
  name: options
  nameWithType: AbstractCommand<TResult>.options
  fullName: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand<TResult>.options
  type: Field
  source:
    remote:
      path: src/CircuitBreaker/src/HystrixBase/AbstractCommand.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: options
    path: ../Steeltoe/src/CircuitBreaker/src/HystrixBase/AbstractCommand.cs
    startLine: 1541
  assemblies:
  - Steeltoe.CircuitBreaker.HystrixBase
  namespace: Steeltoe.CircuitBreaker.Hystrix
  syntax:
    content: protected readonly IHystrixCommandOptions options
    return:
      type: Steeltoe.CircuitBreaker.Hystrix.IHystrixCommandOptions
    content.vb: Protected ReadOnly options As IHystrixCommandOptions
  nameWithType.vb: AbstractCommand(Of TResult).options
  modifiers.csharp:
  - protected
  - readonly
  modifiers.vb:
  - Protected
  - ReadOnly
  fullName.vb: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand(Of TResult).options
- uid: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.CommandOptions
  commentId: P:Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.CommandOptions
  id: CommandOptions
  parent: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1
  langs:
  - csharp
  - vb
  name: CommandOptions
  nameWithType: AbstractCommand<TResult>.CommandOptions
  fullName: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand<TResult>.CommandOptions
  type: Property
  source:
    remote:
      path: src/CircuitBreaker/src/HystrixBase/AbstractCommand.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: CommandOptions
    path: ../Steeltoe/src/CircuitBreaker/src/HystrixBase/AbstractCommand.cs
    startLine: 1543
  assemblies:
  - Steeltoe.CircuitBreaker.HystrixBase
  namespace: Steeltoe.CircuitBreaker.Hystrix
  syntax:
    content: public IHystrixCommandOptions CommandOptions { get; }
    parameters: []
    return:
      type: Steeltoe.CircuitBreaker.Hystrix.IHystrixCommandOptions
    content.vb: Public ReadOnly Property CommandOptions As IHystrixCommandOptions
  overload: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.CommandOptions*
  implements:
  - Steeltoe.CircuitBreaker.Hystrix.IHystrixInvokableInfo.CommandOptions
  nameWithType.vb: AbstractCommand(Of TResult).CommandOptions
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand(Of TResult).CommandOptions
- uid: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.CommandRunStartTimeInNanos
  commentId: P:Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.CommandRunStartTimeInNanos
  id: CommandRunStartTimeInNanos
  parent: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1
  langs:
  - csharp
  - vb
  name: CommandRunStartTimeInNanos
  nameWithType: AbstractCommand<TResult>.CommandRunStartTimeInNanos
  fullName: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand<TResult>.CommandRunStartTimeInNanos
  type: Property
  source:
    remote:
      path: src/CircuitBreaker/src/HystrixBase/AbstractCommand.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: CommandRunStartTimeInNanos
    path: ../Steeltoe/src/CircuitBreaker/src/HystrixBase/AbstractCommand.cs
    startLine: 1545
  assemblies:
  - Steeltoe.CircuitBreaker.HystrixBase
  namespace: Steeltoe.CircuitBreaker.Hystrix
  syntax:
    content: public long CommandRunStartTimeInNanos { get; }
    parameters: []
    return:
      type: System.Int64
    content.vb: Public ReadOnly Property CommandRunStartTimeInNanos As Long
  overload: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.CommandRunStartTimeInNanos*
  implements:
  - Steeltoe.CircuitBreaker.Hystrix.IHystrixInvokableInfo.CommandRunStartTimeInNanos
  nameWithType.vb: AbstractCommand(Of TResult).CommandRunStartTimeInNanos
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand(Of TResult).CommandRunStartTimeInNanos
- uid: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.EventCounts
  commentId: P:Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.EventCounts
  id: EventCounts
  parent: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1
  langs:
  - csharp
  - vb
  name: EventCounts
  nameWithType: AbstractCommand<TResult>.EventCounts
  fullName: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand<TResult>.EventCounts
  type: Property
  source:
    remote:
      path: src/CircuitBreaker/src/HystrixBase/AbstractCommand.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: EventCounts
    path: ../Steeltoe/src/CircuitBreaker/src/HystrixBase/AbstractCommand.cs
    startLine: 1547
  assemblies:
  - Steeltoe.CircuitBreaker.HystrixBase
  namespace: Steeltoe.CircuitBreaker.Hystrix
  syntax:
    content: public ExecutionResult.EventCounts EventCounts { get; }
    parameters: []
    return:
      type: Steeltoe.CircuitBreaker.Hystrix.ExecutionResult.EventCounts
    content.vb: Public ReadOnly Property EventCounts As ExecutionResult.EventCounts
  overload: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.EventCounts*
  implements:
  - Steeltoe.CircuitBreaker.Hystrix.IHystrixInvokableInfo.EventCounts
  nameWithType.vb: AbstractCommand(Of TResult).EventCounts
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand(Of TResult).EventCounts
- uid: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.ExecutionEvents
  commentId: P:Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.ExecutionEvents
  id: ExecutionEvents
  parent: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1
  langs:
  - csharp
  - vb
  name: ExecutionEvents
  nameWithType: AbstractCommand<TResult>.ExecutionEvents
  fullName: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand<TResult>.ExecutionEvents
  type: Property
  source:
    remote:
      path: src/CircuitBreaker/src/HystrixBase/AbstractCommand.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: ExecutionEvents
    path: ../Steeltoe/src/CircuitBreaker/src/HystrixBase/AbstractCommand.cs
    startLine: 1549
  assemblies:
  - Steeltoe.CircuitBreaker.HystrixBase
  namespace: Steeltoe.CircuitBreaker.Hystrix
  syntax:
    content: public List<HystrixEventType> ExecutionEvents { get; }
    parameters: []
    return:
      type: System.Collections.Generic.List{Steeltoe.CircuitBreaker.Hystrix.HystrixEventType}
    content.vb: Public ReadOnly Property ExecutionEvents As List(Of HystrixEventType)
  overload: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.ExecutionEvents*
  implements:
  - Steeltoe.CircuitBreaker.Hystrix.IHystrixInvokableInfo.ExecutionEvents
  nameWithType.vb: AbstractCommand(Of TResult).ExecutionEvents
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand(Of TResult).ExecutionEvents
- uid: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.ExecutionTimeInMilliseconds
  commentId: P:Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.ExecutionTimeInMilliseconds
  id: ExecutionTimeInMilliseconds
  parent: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1
  langs:
  - csharp
  - vb
  name: ExecutionTimeInMilliseconds
  nameWithType: AbstractCommand<TResult>.ExecutionTimeInMilliseconds
  fullName: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand<TResult>.ExecutionTimeInMilliseconds
  type: Property
  source:
    remote:
      path: src/CircuitBreaker/src/HystrixBase/AbstractCommand.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: ExecutionTimeInMilliseconds
    path: ../Steeltoe/src/CircuitBreaker/src/HystrixBase/AbstractCommand.cs
    startLine: 1551
  assemblies:
  - Steeltoe.CircuitBreaker.HystrixBase
  namespace: Steeltoe.CircuitBreaker.Hystrix
  syntax:
    content: public int ExecutionTimeInMilliseconds { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property ExecutionTimeInMilliseconds As Integer
  overload: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.ExecutionTimeInMilliseconds*
  implements:
  - Steeltoe.CircuitBreaker.Hystrix.IHystrixInvokableInfo.ExecutionTimeInMilliseconds
  nameWithType.vb: AbstractCommand(Of TResult).ExecutionTimeInMilliseconds
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand(Of TResult).ExecutionTimeInMilliseconds
- uid: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.FailedExecutionException
  commentId: P:Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.FailedExecutionException
  id: FailedExecutionException
  parent: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1
  langs:
  - csharp
  - vb
  name: FailedExecutionException
  nameWithType: AbstractCommand<TResult>.FailedExecutionException
  fullName: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand<TResult>.FailedExecutionException
  type: Property
  source:
    remote:
      path: src/CircuitBreaker/src/HystrixBase/AbstractCommand.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: FailedExecutionException
    path: ../Steeltoe/src/CircuitBreaker/src/HystrixBase/AbstractCommand.cs
    startLine: 1553
  assemblies:
  - Steeltoe.CircuitBreaker.HystrixBase
  namespace: Steeltoe.CircuitBreaker.Hystrix
  syntax:
    content: public Exception FailedExecutionException { get; }
    parameters: []
    return:
      type: System.Exception
    content.vb: Public ReadOnly Property FailedExecutionException As Exception
  overload: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.FailedExecutionException*
  implements:
  - Steeltoe.CircuitBreaker.Hystrix.IHystrixInvokableInfo.FailedExecutionException
  nameWithType.vb: AbstractCommand(Of TResult).FailedExecutionException
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand(Of TResult).FailedExecutionException
- uid: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.IsCircuitBreakerOpen
  commentId: P:Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.IsCircuitBreakerOpen
  id: IsCircuitBreakerOpen
  parent: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1
  langs:
  - csharp
  - vb
  name: IsCircuitBreakerOpen
  nameWithType: AbstractCommand<TResult>.IsCircuitBreakerOpen
  fullName: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand<TResult>.IsCircuitBreakerOpen
  type: Property
  source:
    remote:
      path: src/CircuitBreaker/src/HystrixBase/AbstractCommand.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: IsCircuitBreakerOpen
    path: ../Steeltoe/src/CircuitBreaker/src/HystrixBase/AbstractCommand.cs
    startLine: 1555
  assemblies:
  - Steeltoe.CircuitBreaker.HystrixBase
  namespace: Steeltoe.CircuitBreaker.Hystrix
  syntax:
    content: public bool IsCircuitBreakerOpen { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsCircuitBreakerOpen As Boolean
  overload: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.IsCircuitBreakerOpen*
  implements:
  - Steeltoe.CircuitBreaker.Hystrix.IHystrixInvokableInfo.IsCircuitBreakerOpen
  nameWithType.vb: AbstractCommand(Of TResult).IsCircuitBreakerOpen
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand(Of TResult).IsCircuitBreakerOpen
- uid: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.IsExecutedInThread
  commentId: P:Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.IsExecutedInThread
  id: IsExecutedInThread
  parent: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1
  langs:
  - csharp
  - vb
  name: IsExecutedInThread
  nameWithType: AbstractCommand<TResult>.IsExecutedInThread
  fullName: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand<TResult>.IsExecutedInThread
  type: Property
  source:
    remote:
      path: src/CircuitBreaker/src/HystrixBase/AbstractCommand.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: IsExecutedInThread
    path: ../Steeltoe/src/CircuitBreaker/src/HystrixBase/AbstractCommand.cs
    startLine: 1557
  assemblies:
  - Steeltoe.CircuitBreaker.HystrixBase
  namespace: Steeltoe.CircuitBreaker.Hystrix
  syntax:
    content: public bool IsExecutedInThread { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsExecutedInThread As Boolean
  overload: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.IsExecutedInThread*
  implements:
  - Steeltoe.CircuitBreaker.Hystrix.IHystrixInvokableInfo.IsExecutedInThread
  nameWithType.vb: AbstractCommand(Of TResult).IsExecutedInThread
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand(Of TResult).IsExecutedInThread
- uid: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.IsExecutionComplete
  commentId: P:Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.IsExecutionComplete
  id: IsExecutionComplete
  parent: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1
  langs:
  - csharp
  - vb
  name: IsExecutionComplete
  nameWithType: AbstractCommand<TResult>.IsExecutionComplete
  fullName: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand<TResult>.IsExecutionComplete
  type: Property
  source:
    remote:
      path: src/CircuitBreaker/src/HystrixBase/AbstractCommand.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: IsExecutionComplete
    path: ../Steeltoe/src/CircuitBreaker/src/HystrixBase/AbstractCommand.cs
    startLine: 1559
  assemblies:
  - Steeltoe.CircuitBreaker.HystrixBase
  namespace: Steeltoe.CircuitBreaker.Hystrix
  syntax:
    content: public bool IsExecutionComplete { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsExecutionComplete As Boolean
  overload: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.IsExecutionComplete*
  implements:
  - Steeltoe.CircuitBreaker.Hystrix.IHystrixInvokableInfo.IsExecutionComplete
  nameWithType.vb: AbstractCommand(Of TResult).IsExecutionComplete
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand(Of TResult).IsExecutionComplete
- uid: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.IsFailedExecution
  commentId: P:Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.IsFailedExecution
  id: IsFailedExecution
  parent: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1
  langs:
  - csharp
  - vb
  name: IsFailedExecution
  nameWithType: AbstractCommand<TResult>.IsFailedExecution
  fullName: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand<TResult>.IsFailedExecution
  type: Property
  source:
    remote:
      path: src/CircuitBreaker/src/HystrixBase/AbstractCommand.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: IsFailedExecution
    path: ../Steeltoe/src/CircuitBreaker/src/HystrixBase/AbstractCommand.cs
    startLine: 1561
  assemblies:
  - Steeltoe.CircuitBreaker.HystrixBase
  namespace: Steeltoe.CircuitBreaker.Hystrix
  syntax:
    content: public bool IsFailedExecution { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsFailedExecution As Boolean
  overload: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.IsFailedExecution*
  implements:
  - Steeltoe.CircuitBreaker.Hystrix.IHystrixInvokableInfo.IsFailedExecution
  nameWithType.vb: AbstractCommand(Of TResult).IsFailedExecution
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand(Of TResult).IsFailedExecution
- uid: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.IsResponseFromCache
  commentId: P:Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.IsResponseFromCache
  id: IsResponseFromCache
  parent: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1
  langs:
  - csharp
  - vb
  name: IsResponseFromCache
  nameWithType: AbstractCommand<TResult>.IsResponseFromCache
  fullName: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand<TResult>.IsResponseFromCache
  type: Property
  source:
    remote:
      path: src/CircuitBreaker/src/HystrixBase/AbstractCommand.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: IsResponseFromCache
    path: ../Steeltoe/src/CircuitBreaker/src/HystrixBase/AbstractCommand.cs
    startLine: 1563
  assemblies:
  - Steeltoe.CircuitBreaker.HystrixBase
  namespace: Steeltoe.CircuitBreaker.Hystrix
  syntax:
    content: public bool IsResponseFromCache { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsResponseFromCache As Boolean
  overload: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.IsResponseFromCache*
  implements:
  - Steeltoe.CircuitBreaker.Hystrix.IHystrixInvokableInfo.IsResponseFromCache
  nameWithType.vb: AbstractCommand(Of TResult).IsResponseFromCache
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand(Of TResult).IsResponseFromCache
- uid: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.IsResponseFromFallback
  commentId: P:Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.IsResponseFromFallback
  id: IsResponseFromFallback
  parent: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1
  langs:
  - csharp
  - vb
  name: IsResponseFromFallback
  nameWithType: AbstractCommand<TResult>.IsResponseFromFallback
  fullName: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand<TResult>.IsResponseFromFallback
  type: Property
  source:
    remote:
      path: src/CircuitBreaker/src/HystrixBase/AbstractCommand.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: IsResponseFromFallback
    path: ../Steeltoe/src/CircuitBreaker/src/HystrixBase/AbstractCommand.cs
    startLine: 1565
  assemblies:
  - Steeltoe.CircuitBreaker.HystrixBase
  namespace: Steeltoe.CircuitBreaker.Hystrix
  syntax:
    content: public bool IsResponseFromFallback { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsResponseFromFallback As Boolean
  overload: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.IsResponseFromFallback*
  implements:
  - Steeltoe.CircuitBreaker.Hystrix.IHystrixInvokableInfo.IsResponseFromFallback
  nameWithType.vb: AbstractCommand(Of TResult).IsResponseFromFallback
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand(Of TResult).IsResponseFromFallback
- uid: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.IsResponseRejected
  commentId: P:Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.IsResponseRejected
  id: IsResponseRejected
  parent: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1
  langs:
  - csharp
  - vb
  name: IsResponseRejected
  nameWithType: AbstractCommand<TResult>.IsResponseRejected
  fullName: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand<TResult>.IsResponseRejected
  type: Property
  source:
    remote:
      path: src/CircuitBreaker/src/HystrixBase/AbstractCommand.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: IsResponseRejected
    path: ../Steeltoe/src/CircuitBreaker/src/HystrixBase/AbstractCommand.cs
    startLine: 1567
  assemblies:
  - Steeltoe.CircuitBreaker.HystrixBase
  namespace: Steeltoe.CircuitBreaker.Hystrix
  syntax:
    content: public bool IsResponseRejected { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsResponseRejected As Boolean
  overload: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.IsResponseRejected*
  implements:
  - Steeltoe.CircuitBreaker.Hystrix.IHystrixInvokableInfo.IsResponseRejected
  nameWithType.vb: AbstractCommand(Of TResult).IsResponseRejected
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand(Of TResult).IsResponseRejected
- uid: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.IsResponseSemaphoreRejected
  commentId: P:Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.IsResponseSemaphoreRejected
  id: IsResponseSemaphoreRejected
  parent: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1
  langs:
  - csharp
  - vb
  name: IsResponseSemaphoreRejected
  nameWithType: AbstractCommand<TResult>.IsResponseSemaphoreRejected
  fullName: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand<TResult>.IsResponseSemaphoreRejected
  type: Property
  source:
    remote:
      path: src/CircuitBreaker/src/HystrixBase/AbstractCommand.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: IsResponseSemaphoreRejected
    path: ../Steeltoe/src/CircuitBreaker/src/HystrixBase/AbstractCommand.cs
    startLine: 1569
  assemblies:
  - Steeltoe.CircuitBreaker.HystrixBase
  namespace: Steeltoe.CircuitBreaker.Hystrix
  syntax:
    content: public bool IsResponseSemaphoreRejected { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsResponseSemaphoreRejected As Boolean
  overload: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.IsResponseSemaphoreRejected*
  implements:
  - Steeltoe.CircuitBreaker.Hystrix.IHystrixInvokableInfo.IsResponseSemaphoreRejected
  nameWithType.vb: AbstractCommand(Of TResult).IsResponseSemaphoreRejected
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand(Of TResult).IsResponseSemaphoreRejected
- uid: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.IsResponseShortCircuited
  commentId: P:Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.IsResponseShortCircuited
  id: IsResponseShortCircuited
  parent: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1
  langs:
  - csharp
  - vb
  name: IsResponseShortCircuited
  nameWithType: AbstractCommand<TResult>.IsResponseShortCircuited
  fullName: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand<TResult>.IsResponseShortCircuited
  type: Property
  source:
    remote:
      path: src/CircuitBreaker/src/HystrixBase/AbstractCommand.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: IsResponseShortCircuited
    path: ../Steeltoe/src/CircuitBreaker/src/HystrixBase/AbstractCommand.cs
    startLine: 1571
  assemblies:
  - Steeltoe.CircuitBreaker.HystrixBase
  namespace: Steeltoe.CircuitBreaker.Hystrix
  syntax:
    content: public bool IsResponseShortCircuited { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsResponseShortCircuited As Boolean
  overload: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.IsResponseShortCircuited*
  implements:
  - Steeltoe.CircuitBreaker.Hystrix.IHystrixInvokableInfo.IsResponseShortCircuited
  nameWithType.vb: AbstractCommand(Of TResult).IsResponseShortCircuited
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand(Of TResult).IsResponseShortCircuited
- uid: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.IsResponseThreadPoolRejected
  commentId: P:Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.IsResponseThreadPoolRejected
  id: IsResponseThreadPoolRejected
  parent: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1
  langs:
  - csharp
  - vb
  name: IsResponseThreadPoolRejected
  nameWithType: AbstractCommand<TResult>.IsResponseThreadPoolRejected
  fullName: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand<TResult>.IsResponseThreadPoolRejected
  type: Property
  source:
    remote:
      path: src/CircuitBreaker/src/HystrixBase/AbstractCommand.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: IsResponseThreadPoolRejected
    path: ../Steeltoe/src/CircuitBreaker/src/HystrixBase/AbstractCommand.cs
    startLine: 1573
  assemblies:
  - Steeltoe.CircuitBreaker.HystrixBase
  namespace: Steeltoe.CircuitBreaker.Hystrix
  syntax:
    content: public bool IsResponseThreadPoolRejected { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsResponseThreadPoolRejected As Boolean
  overload: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.IsResponseThreadPoolRejected*
  implements:
  - Steeltoe.CircuitBreaker.Hystrix.IHystrixInvokableInfo.IsResponseThreadPoolRejected
  nameWithType.vb: AbstractCommand(Of TResult).IsResponseThreadPoolRejected
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand(Of TResult).IsResponseThreadPoolRejected
- uid: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.IsResponseTimedOut
  commentId: P:Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.IsResponseTimedOut
  id: IsResponseTimedOut
  parent: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1
  langs:
  - csharp
  - vb
  name: IsResponseTimedOut
  nameWithType: AbstractCommand<TResult>.IsResponseTimedOut
  fullName: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand<TResult>.IsResponseTimedOut
  type: Property
  source:
    remote:
      path: src/CircuitBreaker/src/HystrixBase/AbstractCommand.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: IsResponseTimedOut
    path: ../Steeltoe/src/CircuitBreaker/src/HystrixBase/AbstractCommand.cs
    startLine: 1575
  assemblies:
  - Steeltoe.CircuitBreaker.HystrixBase
  namespace: Steeltoe.CircuitBreaker.Hystrix
  syntax:
    content: public bool IsResponseTimedOut { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsResponseTimedOut As Boolean
  overload: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.IsResponseTimedOut*
  implements:
  - Steeltoe.CircuitBreaker.Hystrix.IHystrixInvokableInfo.IsResponseTimedOut
  nameWithType.vb: AbstractCommand(Of TResult).IsResponseTimedOut
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand(Of TResult).IsResponseTimedOut
- uid: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.IsSuccessfulExecution
  commentId: P:Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.IsSuccessfulExecution
  id: IsSuccessfulExecution
  parent: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1
  langs:
  - csharp
  - vb
  name: IsSuccessfulExecution
  nameWithType: AbstractCommand<TResult>.IsSuccessfulExecution
  fullName: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand<TResult>.IsSuccessfulExecution
  type: Property
  source:
    remote:
      path: src/CircuitBreaker/src/HystrixBase/AbstractCommand.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: IsSuccessfulExecution
    path: ../Steeltoe/src/CircuitBreaker/src/HystrixBase/AbstractCommand.cs
    startLine: 1577
  assemblies:
  - Steeltoe.CircuitBreaker.HystrixBase
  namespace: Steeltoe.CircuitBreaker.Hystrix
  syntax:
    content: public bool IsSuccessfulExecution { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsSuccessfulExecution As Boolean
  overload: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.IsSuccessfulExecution*
  implements:
  - Steeltoe.CircuitBreaker.Hystrix.IHystrixInvokableInfo.IsSuccessfulExecution
  nameWithType.vb: AbstractCommand(Of TResult).IsSuccessfulExecution
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand(Of TResult).IsSuccessfulExecution
- uid: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.Metrics
  commentId: P:Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.Metrics
  id: Metrics
  parent: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1
  langs:
  - csharp
  - vb
  name: Metrics
  nameWithType: AbstractCommand<TResult>.Metrics
  fullName: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand<TResult>.Metrics
  type: Property
  source:
    remote:
      path: src/CircuitBreaker/src/HystrixBase/AbstractCommand.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Metrics
    path: ../Steeltoe/src/CircuitBreaker/src/HystrixBase/AbstractCommand.cs
    startLine: 1579
  assemblies:
  - Steeltoe.CircuitBreaker.HystrixBase
  namespace: Steeltoe.CircuitBreaker.Hystrix
  syntax:
    content: public HystrixCommandMetrics Metrics { get; }
    parameters: []
    return:
      type: Steeltoe.CircuitBreaker.Hystrix.HystrixCommandMetrics
    content.vb: Public ReadOnly Property Metrics As HystrixCommandMetrics
  overload: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.Metrics*
  implements:
  - Steeltoe.CircuitBreaker.Hystrix.IHystrixInvokableInfo.Metrics
  nameWithType.vb: AbstractCommand(Of TResult).Metrics
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand(Of TResult).Metrics
- uid: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.NumberCollapsed
  commentId: P:Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.NumberCollapsed
  id: NumberCollapsed
  parent: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1
  langs:
  - csharp
  - vb
  name: NumberCollapsed
  nameWithType: AbstractCommand<TResult>.NumberCollapsed
  fullName: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand<TResult>.NumberCollapsed
  type: Property
  source:
    remote:
      path: src/CircuitBreaker/src/HystrixBase/AbstractCommand.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: NumberCollapsed
    path: ../Steeltoe/src/CircuitBreaker/src/HystrixBase/AbstractCommand.cs
    startLine: 1581
  assemblies:
  - Steeltoe.CircuitBreaker.HystrixBase
  namespace: Steeltoe.CircuitBreaker.Hystrix
  syntax:
    content: public int NumberCollapsed { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property NumberCollapsed As Integer
  overload: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.NumberCollapsed*
  implements:
  - Steeltoe.CircuitBreaker.Hystrix.IHystrixInvokableInfo.NumberCollapsed
  nameWithType.vb: AbstractCommand(Of TResult).NumberCollapsed
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand(Of TResult).NumberCollapsed
- uid: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.NumberEmissions
  commentId: P:Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.NumberEmissions
  id: NumberEmissions
  parent: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1
  langs:
  - csharp
  - vb
  name: NumberEmissions
  nameWithType: AbstractCommand<TResult>.NumberEmissions
  fullName: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand<TResult>.NumberEmissions
  type: Property
  source:
    remote:
      path: src/CircuitBreaker/src/HystrixBase/AbstractCommand.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: NumberEmissions
    path: ../Steeltoe/src/CircuitBreaker/src/HystrixBase/AbstractCommand.cs
    startLine: 1583
  assemblies:
  - Steeltoe.CircuitBreaker.HystrixBase
  namespace: Steeltoe.CircuitBreaker.Hystrix
  syntax:
    content: public int NumberEmissions { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property NumberEmissions As Integer
  overload: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.NumberEmissions*
  implements:
  - Steeltoe.CircuitBreaker.Hystrix.IHystrixInvokableInfo.NumberEmissions
  nameWithType.vb: AbstractCommand(Of TResult).NumberEmissions
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand(Of TResult).NumberEmissions
- uid: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.NumberFallbackEmissions
  commentId: P:Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.NumberFallbackEmissions
  id: NumberFallbackEmissions
  parent: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1
  langs:
  - csharp
  - vb
  name: NumberFallbackEmissions
  nameWithType: AbstractCommand<TResult>.NumberFallbackEmissions
  fullName: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand<TResult>.NumberFallbackEmissions
  type: Property
  source:
    remote:
      path: src/CircuitBreaker/src/HystrixBase/AbstractCommand.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: NumberFallbackEmissions
    path: ../Steeltoe/src/CircuitBreaker/src/HystrixBase/AbstractCommand.cs
    startLine: 1585
  assemblies:
  - Steeltoe.CircuitBreaker.HystrixBase
  namespace: Steeltoe.CircuitBreaker.Hystrix
  syntax:
    content: public int NumberFallbackEmissions { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property NumberFallbackEmissions As Integer
  overload: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.NumberFallbackEmissions*
  implements:
  - Steeltoe.CircuitBreaker.Hystrix.IHystrixInvokableInfo.NumberFallbackEmissions
  nameWithType.vb: AbstractCommand(Of TResult).NumberFallbackEmissions
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand(Of TResult).NumberFallbackEmissions
- uid: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.OriginatingCollapserKey
  commentId: P:Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.OriginatingCollapserKey
  id: OriginatingCollapserKey
  parent: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1
  langs:
  - csharp
  - vb
  name: OriginatingCollapserKey
  nameWithType: AbstractCommand<TResult>.OriginatingCollapserKey
  fullName: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand<TResult>.OriginatingCollapserKey
  type: Property
  source:
    remote:
      path: src/CircuitBreaker/src/HystrixBase/AbstractCommand.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: OriginatingCollapserKey
    path: ../Steeltoe/src/CircuitBreaker/src/HystrixBase/AbstractCommand.cs
    startLine: 1587
  assemblies:
  - Steeltoe.CircuitBreaker.HystrixBase
  namespace: Steeltoe.CircuitBreaker.Hystrix
  syntax:
    content: public IHystrixCollapserKey OriginatingCollapserKey { get; }
    parameters: []
    return:
      type: Steeltoe.CircuitBreaker.Hystrix.IHystrixCollapserKey
    content.vb: Public ReadOnly Property OriginatingCollapserKey As IHystrixCollapserKey
  overload: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.OriginatingCollapserKey*
  implements:
  - Steeltoe.CircuitBreaker.Hystrix.IHystrixInvokableInfo.OriginatingCollapserKey
  nameWithType.vb: AbstractCommand(Of TResult).OriginatingCollapserKey
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand(Of TResult).OriginatingCollapserKey
- uid: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.PublicCacheKey
  commentId: P:Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.PublicCacheKey
  id: PublicCacheKey
  parent: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1
  langs:
  - csharp
  - vb
  name: PublicCacheKey
  nameWithType: AbstractCommand<TResult>.PublicCacheKey
  fullName: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand<TResult>.PublicCacheKey
  type: Property
  source:
    remote:
      path: src/CircuitBreaker/src/HystrixBase/AbstractCommand.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: PublicCacheKey
    path: ../Steeltoe/src/CircuitBreaker/src/HystrixBase/AbstractCommand.cs
    startLine: 1589
  assemblies:
  - Steeltoe.CircuitBreaker.HystrixBase
  namespace: Steeltoe.CircuitBreaker.Hystrix
  syntax:
    content: public string PublicCacheKey { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property PublicCacheKey As String
  overload: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.PublicCacheKey*
  implements:
  - Steeltoe.CircuitBreaker.Hystrix.IHystrixInvokableInfo.PublicCacheKey
  nameWithType.vb: AbstractCommand(Of TResult).PublicCacheKey
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand(Of TResult).PublicCacheKey
- uid: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1._isFallbackUserDefined
  commentId: F:Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1._isFallbackUserDefined
  id: _isFallbackUserDefined
  parent: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1
  langs:
  - csharp
  - vb
  name: _isFallbackUserDefined
  nameWithType: AbstractCommand<TResult>._isFallbackUserDefined
  fullName: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand<TResult>._isFallbackUserDefined
  type: Field
  source:
    remote:
      path: src/CircuitBreaker/src/HystrixBase/AbstractCommand.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: _isFallbackUserDefined
    path: ../Steeltoe/src/CircuitBreaker/src/HystrixBase/AbstractCommand.cs
    startLine: 1595
  assemblies:
  - Steeltoe.CircuitBreaker.HystrixBase
  namespace: Steeltoe.CircuitBreaker.Hystrix
  syntax:
    content: protected bool _isFallbackUserDefined
    return:
      type: System.Boolean
    content.vb: Protected _isFallbackUserDefined As Boolean
  nameWithType.vb: AbstractCommand(Of TResult)._isFallbackUserDefined
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand(Of TResult)._isFallbackUserDefined
- uid: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.IsFallbackUserDefined
  commentId: P:Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.IsFallbackUserDefined
  id: IsFallbackUserDefined
  parent: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1
  langs:
  - csharp
  - vb
  name: IsFallbackUserDefined
  nameWithType: AbstractCommand<TResult>.IsFallbackUserDefined
  fullName: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand<TResult>.IsFallbackUserDefined
  type: Property
  source:
    remote:
      path: src/CircuitBreaker/src/HystrixBase/AbstractCommand.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: IsFallbackUserDefined
    path: ../Steeltoe/src/CircuitBreaker/src/HystrixBase/AbstractCommand.cs
    startLine: 1597
  assemblies:
  - Steeltoe.CircuitBreaker.HystrixBase
  namespace: Steeltoe.CircuitBreaker.Hystrix
  syntax:
    content: public virtual bool IsFallbackUserDefined { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Overridable Property IsFallbackUserDefined As Boolean
  overload: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.IsFallbackUserDefined*
  nameWithType.vb: AbstractCommand(Of TResult).IsFallbackUserDefined
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand(Of TResult).IsFallbackUserDefined
- uid: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.ExecutionException
  commentId: P:Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.ExecutionException
  id: ExecutionException
  parent: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1
  langs:
  - csharp
  - vb
  name: ExecutionException
  nameWithType: AbstractCommand<TResult>.ExecutionException
  fullName: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand<TResult>.ExecutionException
  type: Property
  source:
    remote:
      path: src/CircuitBreaker/src/HystrixBase/AbstractCommand.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: ExecutionException
    path: ../Steeltoe/src/CircuitBreaker/src/HystrixBase/AbstractCommand.cs
    startLine: 1604
  assemblies:
  - Steeltoe.CircuitBreaker.HystrixBase
  namespace: Steeltoe.CircuitBreaker.Hystrix
  syntax:
    content: public Exception ExecutionException { get; }
    parameters: []
    return:
      type: System.Exception
    content.vb: Public ReadOnly Property ExecutionException As Exception
  overload: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.ExecutionException*
  nameWithType.vb: AbstractCommand(Of TResult).ExecutionException
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand(Of TResult).ExecutionException
- uid: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.CacheKey
  commentId: P:Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.CacheKey
  id: CacheKey
  parent: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1
  langs:
  - csharp
  - vb
  name: CacheKey
  nameWithType: AbstractCommand<TResult>.CacheKey
  fullName: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand<TResult>.CacheKey
  type: Property
  source:
    remote:
      path: src/CircuitBreaker/src/HystrixBase/AbstractCommand.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: CacheKey
    path: ../Steeltoe/src/CircuitBreaker/src/HystrixBase/AbstractCommand.cs
    startLine: 1608
  assemblies:
  - Steeltoe.CircuitBreaker.HystrixBase
  namespace: Steeltoe.CircuitBreaker.Hystrix
  syntax:
    content: protected virtual string CacheKey { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Protected Overridable ReadOnly Property CacheKey As String
  overload: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.CacheKey*
  nameWithType.vb: AbstractCommand(Of TResult).CacheKey
  modifiers.csharp:
  - protected
  - virtual
  - get
  modifiers.vb:
  - Protected
  - Overridable
  - ReadOnly
  fullName.vb: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand(Of TResult).CacheKey
- uid: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.IsRequestCachingEnabled
  commentId: P:Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.IsRequestCachingEnabled
  id: IsRequestCachingEnabled
  parent: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1
  langs:
  - csharp
  - vb
  name: IsRequestCachingEnabled
  nameWithType: AbstractCommand<TResult>.IsRequestCachingEnabled
  fullName: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand<TResult>.IsRequestCachingEnabled
  type: Property
  source:
    remote:
      path: src/CircuitBreaker/src/HystrixBase/AbstractCommand.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: IsRequestCachingEnabled
    path: ../Steeltoe/src/CircuitBreaker/src/HystrixBase/AbstractCommand.cs
    startLine: 1610
  assemblies:
  - Steeltoe.CircuitBreaker.HystrixBase
  namespace: Steeltoe.CircuitBreaker.Hystrix
  syntax:
    content: protected virtual bool IsRequestCachingEnabled { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Protected Overridable ReadOnly Property IsRequestCachingEnabled As Boolean
  overload: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.IsRequestCachingEnabled*
  nameWithType.vb: AbstractCommand(Of TResult).IsRequestCachingEnabled
  modifiers.csharp:
  - protected
  - virtual
  - get
  modifiers.vb:
  - Protected
  - Overridable
  - ReadOnly
  fullName.vb: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand(Of TResult).IsRequestCachingEnabled
- uid: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.LogMessagePrefix
  commentId: P:Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.LogMessagePrefix
  id: LogMessagePrefix
  parent: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1
  langs:
  - csharp
  - vb
  name: LogMessagePrefix
  nameWithType: AbstractCommand<TResult>.LogMessagePrefix
  fullName: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand<TResult>.LogMessagePrefix
  type: Property
  source:
    remote:
      path: src/CircuitBreaker/src/HystrixBase/AbstractCommand.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: LogMessagePrefix
    path: ../Steeltoe/src/CircuitBreaker/src/HystrixBase/AbstractCommand.cs
    startLine: 1612
  assemblies:
  - Steeltoe.CircuitBreaker.HystrixBase
  namespace: Steeltoe.CircuitBreaker.Hystrix
  syntax:
    content: protected virtual string LogMessagePrefix { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Protected Overridable ReadOnly Property LogMessagePrefix As String
  overload: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.LogMessagePrefix*
  nameWithType.vb: AbstractCommand(Of TResult).LogMessagePrefix
  modifiers.csharp:
  - protected
  - virtual
  - get
  modifiers.vb:
  - Protected
  - Overridable
  - ReadOnly
  fullName.vb: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand(Of TResult).LogMessagePrefix
- uid: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.CommandResult
  commentId: P:Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.CommandResult
  id: CommandResult
  parent: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1
  langs:
  - csharp
  - vb
  name: CommandResult
  nameWithType: AbstractCommand<TResult>.CommandResult
  fullName: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand<TResult>.CommandResult
  type: Property
  source:
    remote:
      path: src/CircuitBreaker/src/HystrixBase/AbstractCommand.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: CommandResult
    path: ../Steeltoe/src/CircuitBreaker/src/HystrixBase/AbstractCommand.cs
    startLine: 1614
  assemblies:
  - Steeltoe.CircuitBreaker.HystrixBase
  namespace: Steeltoe.CircuitBreaker.Hystrix
  syntax:
    content: protected virtual ExecutionResult CommandResult { get; }
    parameters: []
    return:
      type: Steeltoe.CircuitBreaker.Hystrix.ExecutionResult
    content.vb: Protected Overridable ReadOnly Property CommandResult As ExecutionResult
  overload: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.CommandResult*
  nameWithType.vb: AbstractCommand(Of TResult).CommandResult
  modifiers.csharp:
  - protected
  - virtual
  - get
  modifiers.vb:
  - Protected
  - Overridable
  - ReadOnly
  fullName.vb: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand(Of TResult).CommandResult
- uid: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.ShouldOutputOnNextEvents
  commentId: P:Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.ShouldOutputOnNextEvents
  id: ShouldOutputOnNextEvents
  parent: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1
  langs:
  - csharp
  - vb
  name: ShouldOutputOnNextEvents
  nameWithType: AbstractCommand<TResult>.ShouldOutputOnNextEvents
  fullName: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand<TResult>.ShouldOutputOnNextEvents
  type: Property
  source:
    remote:
      path: src/CircuitBreaker/src/HystrixBase/AbstractCommand.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: ShouldOutputOnNextEvents
    path: ../Steeltoe/src/CircuitBreaker/src/HystrixBase/AbstractCommand.cs
    startLine: 1637
  assemblies:
  - Steeltoe.CircuitBreaker.HystrixBase
  namespace: Steeltoe.CircuitBreaker.Hystrix
  syntax:
    content: protected virtual bool ShouldOutputOnNextEvents { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Protected Overridable ReadOnly Property ShouldOutputOnNextEvents As Boolean
  overload: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.ShouldOutputOnNextEvents*
  nameWithType.vb: AbstractCommand(Of TResult).ShouldOutputOnNextEvents
  modifiers.csharp:
  - protected
  - virtual
  - get
  modifiers.vb:
  - Protected
  - Overridable
  - ReadOnly
  fullName.vb: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand(Of TResult).ShouldOutputOnNextEvents
- uid: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.CommandIsScalar
  commentId: P:Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.CommandIsScalar
  id: CommandIsScalar
  parent: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1
  langs:
  - csharp
  - vb
  name: CommandIsScalar
  nameWithType: AbstractCommand<TResult>.CommandIsScalar
  fullName: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand<TResult>.CommandIsScalar
  type: Property
  source:
    remote:
      path: src/CircuitBreaker/src/HystrixBase/AbstractCommand.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: CommandIsScalar
    path: ../Steeltoe/src/CircuitBreaker/src/HystrixBase/AbstractCommand.cs
    startLine: 1639
  assemblies:
  - Steeltoe.CircuitBreaker.HystrixBase
  namespace: Steeltoe.CircuitBreaker.Hystrix
  syntax:
    content: protected virtual bool CommandIsScalar { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Protected Overridable ReadOnly Property CommandIsScalar As Boolean
  overload: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.CommandIsScalar*
  nameWithType.vb: AbstractCommand(Of TResult).CommandIsScalar
  modifiers.csharp:
  - protected
  - virtual
  - get
  modifiers.vb:
  - Protected
  - Overridable
  - ReadOnly
  fullName.vb: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand(Of TResult).CommandIsScalar
references:
- uid: Steeltoe.CircuitBreaker.Hystrix
  commentId: N:Steeltoe.CircuitBreaker.Hystrix
  name: Steeltoe.CircuitBreaker.Hystrix
  nameWithType: Steeltoe.CircuitBreaker.Hystrix
  fullName: Steeltoe.CircuitBreaker.Hystrix
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Steeltoe.CircuitBreaker.Hystrix.AbstractCommandBase
  commentId: T:Steeltoe.CircuitBreaker.Hystrix.AbstractCommandBase
  parent: Steeltoe.CircuitBreaker.Hystrix
  name: AbstractCommandBase
  nameWithType: AbstractCommandBase
  fullName: Steeltoe.CircuitBreaker.Hystrix.AbstractCommandBase
- uid: Steeltoe.CircuitBreaker.Hystrix.IHystrixInvokableInfo
  commentId: T:Steeltoe.CircuitBreaker.Hystrix.IHystrixInvokableInfo
  parent: Steeltoe.CircuitBreaker.Hystrix
  name: IHystrixInvokableInfo
  nameWithType: IHystrixInvokableInfo
  fullName: Steeltoe.CircuitBreaker.Hystrix.IHystrixInvokableInfo
- uid: Steeltoe.CircuitBreaker.Hystrix.IHystrixInvokable
  commentId: T:Steeltoe.CircuitBreaker.Hystrix.IHystrixInvokable
  parent: Steeltoe.CircuitBreaker.Hystrix
  name: IHystrixInvokable
  nameWithType: IHystrixInvokable
  fullName: Steeltoe.CircuitBreaker.Hystrix.IHystrixInvokable
- uid: Steeltoe.CircuitBreaker.Hystrix.AbstractCommandBase._executionSemaphorePerCircuit
  commentId: F:Steeltoe.CircuitBreaker.Hystrix.AbstractCommandBase._executionSemaphorePerCircuit
  parent: Steeltoe.CircuitBreaker.Hystrix.AbstractCommandBase
  name: _executionSemaphorePerCircuit
  nameWithType: AbstractCommandBase._executionSemaphorePerCircuit
  fullName: Steeltoe.CircuitBreaker.Hystrix.AbstractCommandBase._executionSemaphorePerCircuit
- uid: Steeltoe.CircuitBreaker.Hystrix.AbstractCommandBase._fallbackSemaphorePerCircuit
  commentId: F:Steeltoe.CircuitBreaker.Hystrix.AbstractCommandBase._fallbackSemaphorePerCircuit
  parent: Steeltoe.CircuitBreaker.Hystrix.AbstractCommandBase
  name: _fallbackSemaphorePerCircuit
  nameWithType: AbstractCommandBase._fallbackSemaphorePerCircuit
  fullName: Steeltoe.CircuitBreaker.Hystrix.AbstractCommandBase._fallbackSemaphorePerCircuit
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Steeltoe.CircuitBreaker.Hystrix.HystrixRequestLog
  commentId: T:Steeltoe.CircuitBreaker.Hystrix.HystrixRequestLog
  parent: Steeltoe.CircuitBreaker.Hystrix
  name: HystrixRequestLog
  nameWithType: HystrixRequestLog
  fullName: Steeltoe.CircuitBreaker.Hystrix.HystrixRequestLog
- uid: Steeltoe.CircuitBreaker.Hystrix.HystrixRequestCache
  commentId: T:Steeltoe.CircuitBreaker.Hystrix.HystrixRequestCache
  parent: Steeltoe.CircuitBreaker.Hystrix
  name: HystrixRequestCache
  nameWithType: HystrixRequestCache
  fullName: Steeltoe.CircuitBreaker.Hystrix.HystrixRequestCache
- uid: Steeltoe.CircuitBreaker.Hystrix.Strategy.ExecutionHook.HystrixCommandExecutionHook
  commentId: T:Steeltoe.CircuitBreaker.Hystrix.Strategy.ExecutionHook.HystrixCommandExecutionHook
  parent: Steeltoe.CircuitBreaker.Hystrix.Strategy.ExecutionHook
  name: HystrixCommandExecutionHook
  nameWithType: HystrixCommandExecutionHook
  fullName: Steeltoe.CircuitBreaker.Hystrix.Strategy.ExecutionHook.HystrixCommandExecutionHook
- uid: Steeltoe.CircuitBreaker.Hystrix.Strategy.ExecutionHook
  commentId: N:Steeltoe.CircuitBreaker.Hystrix.Strategy.ExecutionHook
  name: Steeltoe.CircuitBreaker.Hystrix.Strategy.ExecutionHook
  nameWithType: Steeltoe.CircuitBreaker.Hystrix.Strategy.ExecutionHook
  fullName: Steeltoe.CircuitBreaker.Hystrix.Strategy.ExecutionHook
- uid: Steeltoe.CircuitBreaker.Hystrix.HystrixCommandMetrics
  commentId: T:Steeltoe.CircuitBreaker.Hystrix.HystrixCommandMetrics
  parent: Steeltoe.CircuitBreaker.Hystrix
  name: HystrixCommandMetrics
  nameWithType: HystrixCommandMetrics
  fullName: Steeltoe.CircuitBreaker.Hystrix.HystrixCommandMetrics
- uid: Steeltoe.CircuitBreaker.Hystrix.Strategy.EventNotifier.HystrixEventNotifier
  commentId: T:Steeltoe.CircuitBreaker.Hystrix.Strategy.EventNotifier.HystrixEventNotifier
  parent: Steeltoe.CircuitBreaker.Hystrix.Strategy.EventNotifier
  name: HystrixEventNotifier
  nameWithType: HystrixEventNotifier
  fullName: Steeltoe.CircuitBreaker.Hystrix.Strategy.EventNotifier.HystrixEventNotifier
- uid: Steeltoe.CircuitBreaker.Hystrix.Strategy.EventNotifier
  commentId: N:Steeltoe.CircuitBreaker.Hystrix.Strategy.EventNotifier
  name: Steeltoe.CircuitBreaker.Hystrix.Strategy.EventNotifier
  nameWithType: Steeltoe.CircuitBreaker.Hystrix.Strategy.EventNotifier
  fullName: Steeltoe.CircuitBreaker.Hystrix.Strategy.EventNotifier
- uid: Steeltoe.CircuitBreaker.ICircuitBreaker
  commentId: T:Steeltoe.CircuitBreaker.ICircuitBreaker
  parent: Steeltoe.CircuitBreaker
  name: ICircuitBreaker
  nameWithType: ICircuitBreaker
  fullName: Steeltoe.CircuitBreaker.ICircuitBreaker
- uid: Steeltoe.CircuitBreaker
  commentId: N:Steeltoe.CircuitBreaker
  name: Steeltoe.CircuitBreaker
  nameWithType: Steeltoe.CircuitBreaker
  fullName: Steeltoe.CircuitBreaker
- uid: Steeltoe.CircuitBreaker.Hystrix.IHystrixThreadPool
  commentId: T:Steeltoe.CircuitBreaker.Hystrix.IHystrixThreadPool
  parent: Steeltoe.CircuitBreaker.Hystrix
  name: IHystrixThreadPool
  nameWithType: IHystrixThreadPool
  fullName: Steeltoe.CircuitBreaker.Hystrix.IHystrixThreadPool
- uid: System.Threading.SemaphoreSlim
  commentId: T:System.Threading.SemaphoreSlim
  parent: System.Threading
  isExternal: true
  name: SemaphoreSlim
  nameWithType: SemaphoreSlim
  fullName: System.Threading.SemaphoreSlim
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: true
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
- uid: Steeltoe.CircuitBreaker.Hystrix.Strategy.Concurrency.HystrixConcurrencyStrategy
  commentId: T:Steeltoe.CircuitBreaker.Hystrix.Strategy.Concurrency.HystrixConcurrencyStrategy
  parent: Steeltoe.CircuitBreaker.Hystrix.Strategy.Concurrency
  name: HystrixConcurrencyStrategy
  nameWithType: HystrixConcurrencyStrategy
  fullName: Steeltoe.CircuitBreaker.Hystrix.Strategy.Concurrency.HystrixConcurrencyStrategy
- uid: Steeltoe.CircuitBreaker.Hystrix.Strategy.Concurrency
  commentId: N:Steeltoe.CircuitBreaker.Hystrix.Strategy.Concurrency
  name: Steeltoe.CircuitBreaker.Hystrix.Strategy.Concurrency
  nameWithType: Steeltoe.CircuitBreaker.Hystrix.Strategy.Concurrency
  fullName: Steeltoe.CircuitBreaker.Hystrix.Strategy.Concurrency
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: System.Threading.CancellationTokenSource
  commentId: T:System.Threading.CancellationTokenSource
  parent: System.Threading
  isExternal: true
  name: CancellationTokenSource
  nameWithType: CancellationTokenSource
  fullName: System.Threading.CancellationTokenSource
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: Steeltoe.CircuitBreaker.Hystrix.ExecutionResult
  commentId: T:Steeltoe.CircuitBreaker.Hystrix.ExecutionResult
  parent: Steeltoe.CircuitBreaker.Hystrix
  name: ExecutionResult
  nameWithType: ExecutionResult
  fullName: Steeltoe.CircuitBreaker.Hystrix.ExecutionResult
- uid: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.AtomicCommandState
  commentId: T:Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.AtomicCommandState
  parent: Steeltoe.CircuitBreaker.Hystrix
  name: AbstractCommand.AtomicCommandState<>
  nameWithType: AbstractCommand.AtomicCommandState<>
  fullName: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand.AtomicCommandState<>
  nameWithType.vb: AbstractCommand.AtomicCommandState(Of )
  fullName.vb: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand.AtomicCommandState(Of )
  name.vb: AbstractCommand.AtomicCommandState(Of )
  spec.csharp:
  - uid: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.AtomicCommandState
    name: AbstractCommand.AtomicCommandState
    nameWithType: AbstractCommand.AtomicCommandState
    fullName: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand.AtomicCommandState
  - name: <
    nameWithType: <
    fullName: <
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.AtomicCommandState
    name: AbstractCommand.AtomicCommandState
    nameWithType: AbstractCommand.AtomicCommandState
    fullName: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand.AtomicCommandState
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.AtomicThreadState
  commentId: T:Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.AtomicThreadState
  parent: Steeltoe.CircuitBreaker.Hystrix
  name: AbstractCommand.AtomicThreadState<>
  nameWithType: AbstractCommand.AtomicThreadState<>
  fullName: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand.AtomicThreadState<>
  nameWithType.vb: AbstractCommand.AtomicThreadState(Of )
  fullName.vb: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand.AtomicThreadState(Of )
  name.vb: AbstractCommand.AtomicThreadState(Of )
  spec.csharp:
  - uid: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.AtomicThreadState
    name: AbstractCommand.AtomicThreadState
    nameWithType: AbstractCommand.AtomicThreadState
    fullName: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand.AtomicThreadState
  - name: <
    nameWithType: <
    fullName: <
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.AtomicThreadState
    name: AbstractCommand.AtomicThreadState
    nameWithType: AbstractCommand.AtomicThreadState
    fullName: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand.AtomicThreadState
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.AtomicTimedOutStatus
  commentId: T:Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.AtomicTimedOutStatus
  parent: Steeltoe.CircuitBreaker.Hystrix
  name: AbstractCommand.AtomicTimedOutStatus<>
  nameWithType: AbstractCommand.AtomicTimedOutStatus<>
  fullName: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand.AtomicTimedOutStatus<>
  nameWithType.vb: AbstractCommand.AtomicTimedOutStatus(Of )
  fullName.vb: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand.AtomicTimedOutStatus(Of )
  name.vb: AbstractCommand.AtomicTimedOutStatus(Of )
  spec.csharp:
  - uid: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.AtomicTimedOutStatus
    name: AbstractCommand.AtomicTimedOutStatus
    nameWithType: AbstractCommand.AtomicTimedOutStatus
    fullName: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand.AtomicTimedOutStatus
  - name: <
    nameWithType: <
    fullName: <
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.AtomicTimedOutStatus
    name: AbstractCommand.AtomicTimedOutStatus
    nameWithType: AbstractCommand.AtomicTimedOutStatus
    fullName: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand.AtomicTimedOutStatus
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.CircuitBreaker.Hystrix.IHystrixCommandGroupKey
  commentId: T:Steeltoe.CircuitBreaker.Hystrix.IHystrixCommandGroupKey
  parent: Steeltoe.CircuitBreaker.Hystrix
  name: IHystrixCommandGroupKey
  nameWithType: IHystrixCommandGroupKey
  fullName: Steeltoe.CircuitBreaker.Hystrix.IHystrixCommandGroupKey
- uid: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.HystrixCompletionSource
  commentId: T:Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.HystrixCompletionSource
  parent: Steeltoe.CircuitBreaker.Hystrix
  name: AbstractCommand.HystrixCompletionSource<>
  nameWithType: AbstractCommand.HystrixCompletionSource<>
  fullName: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand.HystrixCompletionSource<>
  nameWithType.vb: AbstractCommand.HystrixCompletionSource(Of )
  fullName.vb: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand.HystrixCompletionSource(Of )
  name.vb: AbstractCommand.HystrixCompletionSource(Of )
  spec.csharp:
  - uid: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.HystrixCompletionSource
    name: AbstractCommand.HystrixCompletionSource
    nameWithType: AbstractCommand.HystrixCompletionSource
    fullName: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand.HystrixCompletionSource
  - name: <
    nameWithType: <
    fullName: <
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.HystrixCompletionSource
    name: AbstractCommand.HystrixCompletionSource
    nameWithType: AbstractCommand.HystrixCompletionSource
    fullName: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand.HystrixCompletionSource
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.#ctor*
  commentId: Overload:Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.#ctor
  name: AbstractCommand
  nameWithType: AbstractCommand<TResult>.AbstractCommand
  fullName: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand<TResult>.AbstractCommand
  nameWithType.vb: AbstractCommand(Of TResult).AbstractCommand
  fullName.vb: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand(Of TResult).AbstractCommand
- uid: Steeltoe.CircuitBreaker.Hystrix.IHystrixCommandKey
  commentId: T:Steeltoe.CircuitBreaker.Hystrix.IHystrixCommandKey
  parent: Steeltoe.CircuitBreaker.Hystrix
  name: IHystrixCommandKey
  nameWithType: IHystrixCommandKey
  fullName: Steeltoe.CircuitBreaker.Hystrix.IHystrixCommandKey
- uid: Steeltoe.CircuitBreaker.Hystrix.IHystrixThreadPoolKey
  commentId: T:Steeltoe.CircuitBreaker.Hystrix.IHystrixThreadPoolKey
  parent: Steeltoe.CircuitBreaker.Hystrix
  name: IHystrixThreadPoolKey
  nameWithType: IHystrixThreadPoolKey
  fullName: Steeltoe.CircuitBreaker.Hystrix.IHystrixThreadPoolKey
- uid: Steeltoe.CircuitBreaker.Hystrix.IHystrixCommandOptions
  commentId: T:Steeltoe.CircuitBreaker.Hystrix.IHystrixCommandOptions
  parent: Steeltoe.CircuitBreaker.Hystrix
  name: IHystrixCommandOptions
  nameWithType: IHystrixCommandOptions
  fullName: Steeltoe.CircuitBreaker.Hystrix.IHystrixCommandOptions
- uid: Steeltoe.CircuitBreaker.Hystrix.IHystrixThreadPoolOptions
  commentId: T:Steeltoe.CircuitBreaker.Hystrix.IHystrixThreadPoolOptions
  parent: Steeltoe.CircuitBreaker.Hystrix
  name: IHystrixThreadPoolOptions
  nameWithType: IHystrixThreadPoolOptions
  fullName: Steeltoe.CircuitBreaker.Hystrix.IHystrixThreadPoolOptions
- uid: Steeltoe.CircuitBreaker.Hystrix.Strategy.Options.HystrixOptionsStrategy
  commentId: T:Steeltoe.CircuitBreaker.Hystrix.Strategy.Options.HystrixOptionsStrategy
  parent: Steeltoe.CircuitBreaker.Hystrix.Strategy.Options
  name: HystrixOptionsStrategy
  nameWithType: HystrixOptionsStrategy
  fullName: Steeltoe.CircuitBreaker.Hystrix.Strategy.Options.HystrixOptionsStrategy
- uid: ILogger
  isExternal: true
  name: ILogger
  nameWithType: ILogger
  fullName: ILogger
- uid: Steeltoe.CircuitBreaker.Hystrix.Strategy.Options
  commentId: N:Steeltoe.CircuitBreaker.Hystrix.Strategy.Options
  name: Steeltoe.CircuitBreaker.Hystrix.Strategy.Options
  nameWithType: Steeltoe.CircuitBreaker.Hystrix.Strategy.Options
  fullName: Steeltoe.CircuitBreaker.Hystrix.Strategy.Options
- uid: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.GetExecutionSemaphore*
  commentId: Overload:Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.GetExecutionSemaphore
  name: GetExecutionSemaphore
  nameWithType: AbstractCommand<TResult>.GetExecutionSemaphore
  fullName: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand<TResult>.GetExecutionSemaphore
  nameWithType.vb: AbstractCommand(Of TResult).GetExecutionSemaphore
  fullName.vb: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand(Of TResult).GetExecutionSemaphore
- uid: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.GetFallbackSemaphore*
  commentId: Overload:Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.GetFallbackSemaphore
  name: GetFallbackSemaphore
  nameWithType: AbstractCommand<TResult>.GetFallbackSemaphore
  fullName: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand<TResult>.GetFallbackSemaphore
  nameWithType.vb: AbstractCommand(Of TResult).GetFallbackSemaphore
  fullName.vb: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand(Of TResult).GetFallbackSemaphore
- uid: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.InitGroupKey*
  commentId: Overload:Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.InitGroupKey
  name: InitGroupKey
  nameWithType: AbstractCommand<TResult>.InitGroupKey
  fullName: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand<TResult>.InitGroupKey
  nameWithType.vb: AbstractCommand(Of TResult).InitGroupKey
  fullName.vb: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand(Of TResult).InitGroupKey
- uid: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.InitCommandKey*
  commentId: Overload:Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.InitCommandKey
  name: InitCommandKey
  nameWithType: AbstractCommand<TResult>.InitCommandKey
  fullName: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand<TResult>.InitCommandKey
  nameWithType.vb: AbstractCommand(Of TResult).InitCommandKey
  fullName.vb: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand(Of TResult).InitCommandKey
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.InitCommandOptions*
  commentId: Overload:Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.InitCommandOptions
  name: InitCommandOptions
  nameWithType: AbstractCommand<TResult>.InitCommandOptions
  fullName: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand<TResult>.InitCommandOptions
  nameWithType.vb: AbstractCommand(Of TResult).InitCommandOptions
  fullName.vb: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand(Of TResult).InitCommandOptions
- uid: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.InitThreadPoolKey*
  commentId: Overload:Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.InitThreadPoolKey
  name: InitThreadPoolKey
  nameWithType: AbstractCommand<TResult>.InitThreadPoolKey
  fullName: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand<TResult>.InitThreadPoolKey
  nameWithType.vb: AbstractCommand(Of TResult).InitThreadPoolKey
  fullName.vb: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand(Of TResult).InitThreadPoolKey
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.InitMetrics*
  commentId: Overload:Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.InitMetrics
  name: InitMetrics
  nameWithType: AbstractCommand<TResult>.InitMetrics
  fullName: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand<TResult>.InitMetrics
  nameWithType.vb: AbstractCommand(Of TResult).InitMetrics
  fullName.vb: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand(Of TResult).InitMetrics
- uid: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.InitCircuitBreaker*
  commentId: Overload:Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.InitCircuitBreaker
  name: InitCircuitBreaker
  nameWithType: AbstractCommand<TResult>.InitCircuitBreaker
  fullName: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand<TResult>.InitCircuitBreaker
  nameWithType.vb: AbstractCommand(Of TResult).InitCircuitBreaker
  fullName.vb: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand(Of TResult).InitCircuitBreaker
- uid: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.InitExecutionHook*
  commentId: Overload:Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.InitExecutionHook
  name: InitExecutionHook
  nameWithType: AbstractCommand<TResult>.InitExecutionHook
  fullName: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand<TResult>.InitExecutionHook
  nameWithType.vb: AbstractCommand(Of TResult).InitExecutionHook
  fullName.vb: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand(Of TResult).InitExecutionHook
- uid: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.InitThreadPool*
  commentId: Overload:Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.InitThreadPool
  name: InitThreadPool
  nameWithType: AbstractCommand<TResult>.InitThreadPool
  fullName: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand<TResult>.InitThreadPool
  nameWithType.vb: AbstractCommand(Of TResult).InitThreadPool
  fullName.vb: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand(Of TResult).InitThreadPool
- uid: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.InitRequestLog*
  commentId: Overload:Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.InitRequestLog
  name: InitRequestLog
  nameWithType: AbstractCommand<TResult>.InitRequestLog
  fullName: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand<TResult>.InitRequestLog
  nameWithType.vb: AbstractCommand(Of TResult).InitRequestLog
  fullName.vb: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand(Of TResult).InitRequestLog
- uid: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.Setup*
  commentId: Overload:Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.Setup
  name: Setup
  nameWithType: AbstractCommand<TResult>.Setup
  fullName: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand<TResult>.Setup
  nameWithType.vb: AbstractCommand(Of TResult).Setup
  fullName.vb: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand(Of TResult).Setup
- uid: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.PutInCacheIfAbsent*
  commentId: Overload:Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.PutInCacheIfAbsent
  name: PutInCacheIfAbsent
  nameWithType: AbstractCommand<TResult>.PutInCacheIfAbsent
  fullName: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand<TResult>.PutInCacheIfAbsent
  nameWithType.vb: AbstractCommand(Of TResult).PutInCacheIfAbsent
  fullName.vb: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand(Of TResult).PutInCacheIfAbsent
- uid: System.Threading.Tasks.Task{{TResult}}
  commentId: T:System.Threading.Tasks.Task{`0}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.ApplyHystrixSemantics*
  commentId: Overload:Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.ApplyHystrixSemantics
  name: ApplyHystrixSemantics
  nameWithType: AbstractCommand<TResult>.ApplyHystrixSemantics
  fullName: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand<TResult>.ApplyHystrixSemantics
  nameWithType.vb: AbstractCommand(Of TResult).ApplyHystrixSemantics
  fullName.vb: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand(Of TResult).ApplyHystrixSemantics
- uid: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.StartCommand*
  commentId: Overload:Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.StartCommand
  name: StartCommand
  nameWithType: AbstractCommand<TResult>.StartCommand
  fullName: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand<TResult>.StartCommand
  nameWithType.vb: AbstractCommand(Of TResult).StartCommand
  fullName.vb: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand(Of TResult).StartCommand
- uid: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.DecomposeException*
  commentId: Overload:Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.DecomposeException
  name: DecomposeException
  nameWithType: AbstractCommand<TResult>.DecomposeException
  fullName: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand<TResult>.DecomposeException
  nameWithType.vb: AbstractCommand(Of TResult).DecomposeException
  fullName.vb: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand(Of TResult).DecomposeException
- uid: System.Exception
  commentId: T:System.Exception
  parent: System
  isExternal: true
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.DoRun*
  commentId: Overload:Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.DoRun
  name: DoRun
  nameWithType: AbstractCommand<TResult>.DoRun
  fullName: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand<TResult>.DoRun
  nameWithType.vb: AbstractCommand(Of TResult).DoRun
  fullName.vb: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand(Of TResult).DoRun
- uid: '{TResult}'
  commentId: '!:TResult'
  definition: TResult
  name: TResult
  nameWithType: TResult
  fullName: TResult
- uid: TResult
  name: TResult
  nameWithType: TResult
  fullName: TResult
- uid: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.DoFallback*
  commentId: Overload:Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.DoFallback
  name: DoFallback
  nameWithType: AbstractCommand<TResult>.DoFallback
  fullName: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand<TResult>.DoFallback
  nameWithType.vb: AbstractCommand(Of TResult).DoFallback
  fullName.vb: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand(Of TResult).DoFallback
- uid: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.HandleCleanUpAfterResponseFromCache*
  commentId: Overload:Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.HandleCleanUpAfterResponseFromCache
  name: HandleCleanUpAfterResponseFromCache
  nameWithType: AbstractCommand<TResult>.HandleCleanUpAfterResponseFromCache
  fullName: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand<TResult>.HandleCleanUpAfterResponseFromCache
  nameWithType.vb: AbstractCommand(Of TResult).HandleCleanUpAfterResponseFromCache
  fullName.vb: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand(Of TResult).HandleCleanUpAfterResponseFromCache
- uid: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.HandleCommandEnd*
  commentId: Overload:Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.HandleCommandEnd
  name: HandleCommandEnd
  nameWithType: AbstractCommand<TResult>.HandleCommandEnd
  fullName: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand<TResult>.HandleCommandEnd
  nameWithType.vb: AbstractCommand(Of TResult).HandleCommandEnd
  fullName.vb: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand(Of TResult).HandleCommandEnd
- uid: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.HandleThreadEnd*
  commentId: Overload:Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.HandleThreadEnd
  name: HandleThreadEnd
  nameWithType: AbstractCommand<TResult>.HandleThreadEnd
  fullName: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand<TResult>.HandleThreadEnd
  nameWithType.vb: AbstractCommand(Of TResult).HandleThreadEnd
  fullName.vb: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand(Of TResult).HandleThreadEnd
- uid: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.CommandGroup*
  commentId: Overload:Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.CommandGroup
  name: CommandGroup
  nameWithType: AbstractCommand<TResult>.CommandGroup
  fullName: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand<TResult>.CommandGroup
  nameWithType.vb: AbstractCommand(Of TResult).CommandGroup
  fullName.vb: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand(Of TResult).CommandGroup
- uid: Steeltoe.CircuitBreaker.Hystrix.IHystrixInvokableInfo.CommandGroup
  commentId: P:Steeltoe.CircuitBreaker.Hystrix.IHystrixInvokableInfo.CommandGroup
  parent: Steeltoe.CircuitBreaker.Hystrix.IHystrixInvokableInfo
  name: CommandGroup
  nameWithType: IHystrixInvokableInfo.CommandGroup
  fullName: Steeltoe.CircuitBreaker.Hystrix.IHystrixInvokableInfo.CommandGroup
- uid: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.CommandKey*
  commentId: Overload:Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.CommandKey
  name: CommandKey
  nameWithType: AbstractCommand<TResult>.CommandKey
  fullName: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand<TResult>.CommandKey
  nameWithType.vb: AbstractCommand(Of TResult).CommandKey
  fullName.vb: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand(Of TResult).CommandKey
- uid: Steeltoe.CircuitBreaker.Hystrix.IHystrixInvokableInfo.CommandKey
  commentId: P:Steeltoe.CircuitBreaker.Hystrix.IHystrixInvokableInfo.CommandKey
  parent: Steeltoe.CircuitBreaker.Hystrix.IHystrixInvokableInfo
  name: CommandKey
  nameWithType: IHystrixInvokableInfo.CommandKey
  fullName: Steeltoe.CircuitBreaker.Hystrix.IHystrixInvokableInfo.CommandKey
- uid: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.ThreadPoolKey*
  commentId: Overload:Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.ThreadPoolKey
  name: ThreadPoolKey
  nameWithType: AbstractCommand<TResult>.ThreadPoolKey
  fullName: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand<TResult>.ThreadPoolKey
  nameWithType.vb: AbstractCommand(Of TResult).ThreadPoolKey
  fullName.vb: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand(Of TResult).ThreadPoolKey
- uid: Steeltoe.CircuitBreaker.Hystrix.IHystrixInvokableInfo.ThreadPoolKey
  commentId: P:Steeltoe.CircuitBreaker.Hystrix.IHystrixInvokableInfo.ThreadPoolKey
  parent: Steeltoe.CircuitBreaker.Hystrix.IHystrixInvokableInfo
  name: ThreadPoolKey
  nameWithType: IHystrixInvokableInfo.ThreadPoolKey
  fullName: Steeltoe.CircuitBreaker.Hystrix.IHystrixInvokableInfo.ThreadPoolKey
- uid: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.CommandOptions*
  commentId: Overload:Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.CommandOptions
  name: CommandOptions
  nameWithType: AbstractCommand<TResult>.CommandOptions
  fullName: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand<TResult>.CommandOptions
  nameWithType.vb: AbstractCommand(Of TResult).CommandOptions
  fullName.vb: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand(Of TResult).CommandOptions
- uid: Steeltoe.CircuitBreaker.Hystrix.IHystrixInvokableInfo.CommandOptions
  commentId: P:Steeltoe.CircuitBreaker.Hystrix.IHystrixInvokableInfo.CommandOptions
  parent: Steeltoe.CircuitBreaker.Hystrix.IHystrixInvokableInfo
  name: CommandOptions
  nameWithType: IHystrixInvokableInfo.CommandOptions
  fullName: Steeltoe.CircuitBreaker.Hystrix.IHystrixInvokableInfo.CommandOptions
- uid: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.CommandRunStartTimeInNanos*
  commentId: Overload:Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.CommandRunStartTimeInNanos
  name: CommandRunStartTimeInNanos
  nameWithType: AbstractCommand<TResult>.CommandRunStartTimeInNanos
  fullName: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand<TResult>.CommandRunStartTimeInNanos
  nameWithType.vb: AbstractCommand(Of TResult).CommandRunStartTimeInNanos
  fullName.vb: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand(Of TResult).CommandRunStartTimeInNanos
- uid: Steeltoe.CircuitBreaker.Hystrix.IHystrixInvokableInfo.CommandRunStartTimeInNanos
  commentId: P:Steeltoe.CircuitBreaker.Hystrix.IHystrixInvokableInfo.CommandRunStartTimeInNanos
  parent: Steeltoe.CircuitBreaker.Hystrix.IHystrixInvokableInfo
  name: CommandRunStartTimeInNanos
  nameWithType: IHystrixInvokableInfo.CommandRunStartTimeInNanos
  fullName: Steeltoe.CircuitBreaker.Hystrix.IHystrixInvokableInfo.CommandRunStartTimeInNanos
- uid: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.EventCounts*
  commentId: Overload:Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.EventCounts
  name: EventCounts
  nameWithType: AbstractCommand<TResult>.EventCounts
  fullName: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand<TResult>.EventCounts
  nameWithType.vb: AbstractCommand(Of TResult).EventCounts
  fullName.vb: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand(Of TResult).EventCounts
- uid: Steeltoe.CircuitBreaker.Hystrix.IHystrixInvokableInfo.EventCounts
  commentId: P:Steeltoe.CircuitBreaker.Hystrix.IHystrixInvokableInfo.EventCounts
  parent: Steeltoe.CircuitBreaker.Hystrix.IHystrixInvokableInfo
  name: EventCounts
  nameWithType: IHystrixInvokableInfo.EventCounts
  fullName: Steeltoe.CircuitBreaker.Hystrix.IHystrixInvokableInfo.EventCounts
- uid: Steeltoe.CircuitBreaker.Hystrix.ExecutionResult.EventCounts
  commentId: T:Steeltoe.CircuitBreaker.Hystrix.ExecutionResult.EventCounts
  parent: Steeltoe.CircuitBreaker.Hystrix
  name: ExecutionResult.EventCounts
  nameWithType: ExecutionResult.EventCounts
  fullName: Steeltoe.CircuitBreaker.Hystrix.ExecutionResult.EventCounts
- uid: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.ExecutionEvents*
  commentId: Overload:Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.ExecutionEvents
  name: ExecutionEvents
  nameWithType: AbstractCommand<TResult>.ExecutionEvents
  fullName: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand<TResult>.ExecutionEvents
  nameWithType.vb: AbstractCommand(Of TResult).ExecutionEvents
  fullName.vb: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand(Of TResult).ExecutionEvents
- uid: Steeltoe.CircuitBreaker.Hystrix.IHystrixInvokableInfo.ExecutionEvents
  commentId: P:Steeltoe.CircuitBreaker.Hystrix.IHystrixInvokableInfo.ExecutionEvents
  parent: Steeltoe.CircuitBreaker.Hystrix.IHystrixInvokableInfo
  name: ExecutionEvents
  nameWithType: IHystrixInvokableInfo.ExecutionEvents
  fullName: Steeltoe.CircuitBreaker.Hystrix.IHystrixInvokableInfo.ExecutionEvents
- uid: System.Collections.Generic.List{Steeltoe.CircuitBreaker.Hystrix.HystrixEventType}
  commentId: T:System.Collections.Generic.List{Steeltoe.CircuitBreaker.Hystrix.HystrixEventType}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<HystrixEventType>
  nameWithType: List<HystrixEventType>
  fullName: System.Collections.Generic.List<Steeltoe.CircuitBreaker.Hystrix.HystrixEventType>
  nameWithType.vb: List(Of HystrixEventType)
  fullName.vb: System.Collections.Generic.List(Of Steeltoe.CircuitBreaker.Hystrix.HystrixEventType)
  name.vb: List(Of HystrixEventType)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Steeltoe.CircuitBreaker.Hystrix.HystrixEventType
    name: HystrixEventType
    nameWithType: HystrixEventType
    fullName: Steeltoe.CircuitBreaker.Hystrix.HystrixEventType
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Steeltoe.CircuitBreaker.Hystrix.HystrixEventType
    name: HystrixEventType
    nameWithType: HystrixEventType
    fullName: Steeltoe.CircuitBreaker.Hystrix.HystrixEventType
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.ExecutionTimeInMilliseconds*
  commentId: Overload:Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.ExecutionTimeInMilliseconds
  name: ExecutionTimeInMilliseconds
  nameWithType: AbstractCommand<TResult>.ExecutionTimeInMilliseconds
  fullName: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand<TResult>.ExecutionTimeInMilliseconds
  nameWithType.vb: AbstractCommand(Of TResult).ExecutionTimeInMilliseconds
  fullName.vb: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand(Of TResult).ExecutionTimeInMilliseconds
- uid: Steeltoe.CircuitBreaker.Hystrix.IHystrixInvokableInfo.ExecutionTimeInMilliseconds
  commentId: P:Steeltoe.CircuitBreaker.Hystrix.IHystrixInvokableInfo.ExecutionTimeInMilliseconds
  parent: Steeltoe.CircuitBreaker.Hystrix.IHystrixInvokableInfo
  name: ExecutionTimeInMilliseconds
  nameWithType: IHystrixInvokableInfo.ExecutionTimeInMilliseconds
  fullName: Steeltoe.CircuitBreaker.Hystrix.IHystrixInvokableInfo.ExecutionTimeInMilliseconds
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.FailedExecutionException*
  commentId: Overload:Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.FailedExecutionException
  name: FailedExecutionException
  nameWithType: AbstractCommand<TResult>.FailedExecutionException
  fullName: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand<TResult>.FailedExecutionException
  nameWithType.vb: AbstractCommand(Of TResult).FailedExecutionException
  fullName.vb: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand(Of TResult).FailedExecutionException
- uid: Steeltoe.CircuitBreaker.Hystrix.IHystrixInvokableInfo.FailedExecutionException
  commentId: P:Steeltoe.CircuitBreaker.Hystrix.IHystrixInvokableInfo.FailedExecutionException
  parent: Steeltoe.CircuitBreaker.Hystrix.IHystrixInvokableInfo
  name: FailedExecutionException
  nameWithType: IHystrixInvokableInfo.FailedExecutionException
  fullName: Steeltoe.CircuitBreaker.Hystrix.IHystrixInvokableInfo.FailedExecutionException
- uid: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.IsCircuitBreakerOpen*
  commentId: Overload:Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.IsCircuitBreakerOpen
  name: IsCircuitBreakerOpen
  nameWithType: AbstractCommand<TResult>.IsCircuitBreakerOpen
  fullName: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand<TResult>.IsCircuitBreakerOpen
  nameWithType.vb: AbstractCommand(Of TResult).IsCircuitBreakerOpen
  fullName.vb: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand(Of TResult).IsCircuitBreakerOpen
- uid: Steeltoe.CircuitBreaker.Hystrix.IHystrixInvokableInfo.IsCircuitBreakerOpen
  commentId: P:Steeltoe.CircuitBreaker.Hystrix.IHystrixInvokableInfo.IsCircuitBreakerOpen
  parent: Steeltoe.CircuitBreaker.Hystrix.IHystrixInvokableInfo
  name: IsCircuitBreakerOpen
  nameWithType: IHystrixInvokableInfo.IsCircuitBreakerOpen
  fullName: Steeltoe.CircuitBreaker.Hystrix.IHystrixInvokableInfo.IsCircuitBreakerOpen
- uid: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.IsExecutedInThread*
  commentId: Overload:Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.IsExecutedInThread
  name: IsExecutedInThread
  nameWithType: AbstractCommand<TResult>.IsExecutedInThread
  fullName: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand<TResult>.IsExecutedInThread
  nameWithType.vb: AbstractCommand(Of TResult).IsExecutedInThread
  fullName.vb: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand(Of TResult).IsExecutedInThread
- uid: Steeltoe.CircuitBreaker.Hystrix.IHystrixInvokableInfo.IsExecutedInThread
  commentId: P:Steeltoe.CircuitBreaker.Hystrix.IHystrixInvokableInfo.IsExecutedInThread
  parent: Steeltoe.CircuitBreaker.Hystrix.IHystrixInvokableInfo
  name: IsExecutedInThread
  nameWithType: IHystrixInvokableInfo.IsExecutedInThread
  fullName: Steeltoe.CircuitBreaker.Hystrix.IHystrixInvokableInfo.IsExecutedInThread
- uid: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.IsExecutionComplete*
  commentId: Overload:Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.IsExecutionComplete
  name: IsExecutionComplete
  nameWithType: AbstractCommand<TResult>.IsExecutionComplete
  fullName: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand<TResult>.IsExecutionComplete
  nameWithType.vb: AbstractCommand(Of TResult).IsExecutionComplete
  fullName.vb: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand(Of TResult).IsExecutionComplete
- uid: Steeltoe.CircuitBreaker.Hystrix.IHystrixInvokableInfo.IsExecutionComplete
  commentId: P:Steeltoe.CircuitBreaker.Hystrix.IHystrixInvokableInfo.IsExecutionComplete
  parent: Steeltoe.CircuitBreaker.Hystrix.IHystrixInvokableInfo
  name: IsExecutionComplete
  nameWithType: IHystrixInvokableInfo.IsExecutionComplete
  fullName: Steeltoe.CircuitBreaker.Hystrix.IHystrixInvokableInfo.IsExecutionComplete
- uid: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.IsFailedExecution*
  commentId: Overload:Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.IsFailedExecution
  name: IsFailedExecution
  nameWithType: AbstractCommand<TResult>.IsFailedExecution
  fullName: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand<TResult>.IsFailedExecution
  nameWithType.vb: AbstractCommand(Of TResult).IsFailedExecution
  fullName.vb: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand(Of TResult).IsFailedExecution
- uid: Steeltoe.CircuitBreaker.Hystrix.IHystrixInvokableInfo.IsFailedExecution
  commentId: P:Steeltoe.CircuitBreaker.Hystrix.IHystrixInvokableInfo.IsFailedExecution
  parent: Steeltoe.CircuitBreaker.Hystrix.IHystrixInvokableInfo
  name: IsFailedExecution
  nameWithType: IHystrixInvokableInfo.IsFailedExecution
  fullName: Steeltoe.CircuitBreaker.Hystrix.IHystrixInvokableInfo.IsFailedExecution
- uid: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.IsResponseFromCache*
  commentId: Overload:Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.IsResponseFromCache
  name: IsResponseFromCache
  nameWithType: AbstractCommand<TResult>.IsResponseFromCache
  fullName: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand<TResult>.IsResponseFromCache
  nameWithType.vb: AbstractCommand(Of TResult).IsResponseFromCache
  fullName.vb: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand(Of TResult).IsResponseFromCache
- uid: Steeltoe.CircuitBreaker.Hystrix.IHystrixInvokableInfo.IsResponseFromCache
  commentId: P:Steeltoe.CircuitBreaker.Hystrix.IHystrixInvokableInfo.IsResponseFromCache
  parent: Steeltoe.CircuitBreaker.Hystrix.IHystrixInvokableInfo
  name: IsResponseFromCache
  nameWithType: IHystrixInvokableInfo.IsResponseFromCache
  fullName: Steeltoe.CircuitBreaker.Hystrix.IHystrixInvokableInfo.IsResponseFromCache
- uid: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.IsResponseFromFallback*
  commentId: Overload:Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.IsResponseFromFallback
  name: IsResponseFromFallback
  nameWithType: AbstractCommand<TResult>.IsResponseFromFallback
  fullName: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand<TResult>.IsResponseFromFallback
  nameWithType.vb: AbstractCommand(Of TResult).IsResponseFromFallback
  fullName.vb: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand(Of TResult).IsResponseFromFallback
- uid: Steeltoe.CircuitBreaker.Hystrix.IHystrixInvokableInfo.IsResponseFromFallback
  commentId: P:Steeltoe.CircuitBreaker.Hystrix.IHystrixInvokableInfo.IsResponseFromFallback
  parent: Steeltoe.CircuitBreaker.Hystrix.IHystrixInvokableInfo
  name: IsResponseFromFallback
  nameWithType: IHystrixInvokableInfo.IsResponseFromFallback
  fullName: Steeltoe.CircuitBreaker.Hystrix.IHystrixInvokableInfo.IsResponseFromFallback
- uid: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.IsResponseRejected*
  commentId: Overload:Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.IsResponseRejected
  name: IsResponseRejected
  nameWithType: AbstractCommand<TResult>.IsResponseRejected
  fullName: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand<TResult>.IsResponseRejected
  nameWithType.vb: AbstractCommand(Of TResult).IsResponseRejected
  fullName.vb: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand(Of TResult).IsResponseRejected
- uid: Steeltoe.CircuitBreaker.Hystrix.IHystrixInvokableInfo.IsResponseRejected
  commentId: P:Steeltoe.CircuitBreaker.Hystrix.IHystrixInvokableInfo.IsResponseRejected
  parent: Steeltoe.CircuitBreaker.Hystrix.IHystrixInvokableInfo
  name: IsResponseRejected
  nameWithType: IHystrixInvokableInfo.IsResponseRejected
  fullName: Steeltoe.CircuitBreaker.Hystrix.IHystrixInvokableInfo.IsResponseRejected
- uid: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.IsResponseSemaphoreRejected*
  commentId: Overload:Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.IsResponseSemaphoreRejected
  name: IsResponseSemaphoreRejected
  nameWithType: AbstractCommand<TResult>.IsResponseSemaphoreRejected
  fullName: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand<TResult>.IsResponseSemaphoreRejected
  nameWithType.vb: AbstractCommand(Of TResult).IsResponseSemaphoreRejected
  fullName.vb: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand(Of TResult).IsResponseSemaphoreRejected
- uid: Steeltoe.CircuitBreaker.Hystrix.IHystrixInvokableInfo.IsResponseSemaphoreRejected
  commentId: P:Steeltoe.CircuitBreaker.Hystrix.IHystrixInvokableInfo.IsResponseSemaphoreRejected
  parent: Steeltoe.CircuitBreaker.Hystrix.IHystrixInvokableInfo
  name: IsResponseSemaphoreRejected
  nameWithType: IHystrixInvokableInfo.IsResponseSemaphoreRejected
  fullName: Steeltoe.CircuitBreaker.Hystrix.IHystrixInvokableInfo.IsResponseSemaphoreRejected
- uid: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.IsResponseShortCircuited*
  commentId: Overload:Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.IsResponseShortCircuited
  name: IsResponseShortCircuited
  nameWithType: AbstractCommand<TResult>.IsResponseShortCircuited
  fullName: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand<TResult>.IsResponseShortCircuited
  nameWithType.vb: AbstractCommand(Of TResult).IsResponseShortCircuited
  fullName.vb: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand(Of TResult).IsResponseShortCircuited
- uid: Steeltoe.CircuitBreaker.Hystrix.IHystrixInvokableInfo.IsResponseShortCircuited
  commentId: P:Steeltoe.CircuitBreaker.Hystrix.IHystrixInvokableInfo.IsResponseShortCircuited
  parent: Steeltoe.CircuitBreaker.Hystrix.IHystrixInvokableInfo
  name: IsResponseShortCircuited
  nameWithType: IHystrixInvokableInfo.IsResponseShortCircuited
  fullName: Steeltoe.CircuitBreaker.Hystrix.IHystrixInvokableInfo.IsResponseShortCircuited
- uid: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.IsResponseThreadPoolRejected*
  commentId: Overload:Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.IsResponseThreadPoolRejected
  name: IsResponseThreadPoolRejected
  nameWithType: AbstractCommand<TResult>.IsResponseThreadPoolRejected
  fullName: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand<TResult>.IsResponseThreadPoolRejected
  nameWithType.vb: AbstractCommand(Of TResult).IsResponseThreadPoolRejected
  fullName.vb: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand(Of TResult).IsResponseThreadPoolRejected
- uid: Steeltoe.CircuitBreaker.Hystrix.IHystrixInvokableInfo.IsResponseThreadPoolRejected
  commentId: P:Steeltoe.CircuitBreaker.Hystrix.IHystrixInvokableInfo.IsResponseThreadPoolRejected
  parent: Steeltoe.CircuitBreaker.Hystrix.IHystrixInvokableInfo
  name: IsResponseThreadPoolRejected
  nameWithType: IHystrixInvokableInfo.IsResponseThreadPoolRejected
  fullName: Steeltoe.CircuitBreaker.Hystrix.IHystrixInvokableInfo.IsResponseThreadPoolRejected
- uid: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.IsResponseTimedOut*
  commentId: Overload:Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.IsResponseTimedOut
  name: IsResponseTimedOut
  nameWithType: AbstractCommand<TResult>.IsResponseTimedOut
  fullName: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand<TResult>.IsResponseTimedOut
  nameWithType.vb: AbstractCommand(Of TResult).IsResponseTimedOut
  fullName.vb: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand(Of TResult).IsResponseTimedOut
- uid: Steeltoe.CircuitBreaker.Hystrix.IHystrixInvokableInfo.IsResponseTimedOut
  commentId: P:Steeltoe.CircuitBreaker.Hystrix.IHystrixInvokableInfo.IsResponseTimedOut
  parent: Steeltoe.CircuitBreaker.Hystrix.IHystrixInvokableInfo
  name: IsResponseTimedOut
  nameWithType: IHystrixInvokableInfo.IsResponseTimedOut
  fullName: Steeltoe.CircuitBreaker.Hystrix.IHystrixInvokableInfo.IsResponseTimedOut
- uid: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.IsSuccessfulExecution*
  commentId: Overload:Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.IsSuccessfulExecution
  name: IsSuccessfulExecution
  nameWithType: AbstractCommand<TResult>.IsSuccessfulExecution
  fullName: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand<TResult>.IsSuccessfulExecution
  nameWithType.vb: AbstractCommand(Of TResult).IsSuccessfulExecution
  fullName.vb: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand(Of TResult).IsSuccessfulExecution
- uid: Steeltoe.CircuitBreaker.Hystrix.IHystrixInvokableInfo.IsSuccessfulExecution
  commentId: P:Steeltoe.CircuitBreaker.Hystrix.IHystrixInvokableInfo.IsSuccessfulExecution
  parent: Steeltoe.CircuitBreaker.Hystrix.IHystrixInvokableInfo
  name: IsSuccessfulExecution
  nameWithType: IHystrixInvokableInfo.IsSuccessfulExecution
  fullName: Steeltoe.CircuitBreaker.Hystrix.IHystrixInvokableInfo.IsSuccessfulExecution
- uid: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.Metrics*
  commentId: Overload:Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.Metrics
  name: Metrics
  nameWithType: AbstractCommand<TResult>.Metrics
  fullName: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand<TResult>.Metrics
  nameWithType.vb: AbstractCommand(Of TResult).Metrics
  fullName.vb: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand(Of TResult).Metrics
- uid: Steeltoe.CircuitBreaker.Hystrix.IHystrixInvokableInfo.Metrics
  commentId: P:Steeltoe.CircuitBreaker.Hystrix.IHystrixInvokableInfo.Metrics
  parent: Steeltoe.CircuitBreaker.Hystrix.IHystrixInvokableInfo
  name: Metrics
  nameWithType: IHystrixInvokableInfo.Metrics
  fullName: Steeltoe.CircuitBreaker.Hystrix.IHystrixInvokableInfo.Metrics
- uid: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.NumberCollapsed*
  commentId: Overload:Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.NumberCollapsed
  name: NumberCollapsed
  nameWithType: AbstractCommand<TResult>.NumberCollapsed
  fullName: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand<TResult>.NumberCollapsed
  nameWithType.vb: AbstractCommand(Of TResult).NumberCollapsed
  fullName.vb: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand(Of TResult).NumberCollapsed
- uid: Steeltoe.CircuitBreaker.Hystrix.IHystrixInvokableInfo.NumberCollapsed
  commentId: P:Steeltoe.CircuitBreaker.Hystrix.IHystrixInvokableInfo.NumberCollapsed
  parent: Steeltoe.CircuitBreaker.Hystrix.IHystrixInvokableInfo
  name: NumberCollapsed
  nameWithType: IHystrixInvokableInfo.NumberCollapsed
  fullName: Steeltoe.CircuitBreaker.Hystrix.IHystrixInvokableInfo.NumberCollapsed
- uid: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.NumberEmissions*
  commentId: Overload:Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.NumberEmissions
  name: NumberEmissions
  nameWithType: AbstractCommand<TResult>.NumberEmissions
  fullName: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand<TResult>.NumberEmissions
  nameWithType.vb: AbstractCommand(Of TResult).NumberEmissions
  fullName.vb: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand(Of TResult).NumberEmissions
- uid: Steeltoe.CircuitBreaker.Hystrix.IHystrixInvokableInfo.NumberEmissions
  commentId: P:Steeltoe.CircuitBreaker.Hystrix.IHystrixInvokableInfo.NumberEmissions
  parent: Steeltoe.CircuitBreaker.Hystrix.IHystrixInvokableInfo
  name: NumberEmissions
  nameWithType: IHystrixInvokableInfo.NumberEmissions
  fullName: Steeltoe.CircuitBreaker.Hystrix.IHystrixInvokableInfo.NumberEmissions
- uid: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.NumberFallbackEmissions*
  commentId: Overload:Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.NumberFallbackEmissions
  name: NumberFallbackEmissions
  nameWithType: AbstractCommand<TResult>.NumberFallbackEmissions
  fullName: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand<TResult>.NumberFallbackEmissions
  nameWithType.vb: AbstractCommand(Of TResult).NumberFallbackEmissions
  fullName.vb: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand(Of TResult).NumberFallbackEmissions
- uid: Steeltoe.CircuitBreaker.Hystrix.IHystrixInvokableInfo.NumberFallbackEmissions
  commentId: P:Steeltoe.CircuitBreaker.Hystrix.IHystrixInvokableInfo.NumberFallbackEmissions
  parent: Steeltoe.CircuitBreaker.Hystrix.IHystrixInvokableInfo
  name: NumberFallbackEmissions
  nameWithType: IHystrixInvokableInfo.NumberFallbackEmissions
  fullName: Steeltoe.CircuitBreaker.Hystrix.IHystrixInvokableInfo.NumberFallbackEmissions
- uid: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.OriginatingCollapserKey*
  commentId: Overload:Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.OriginatingCollapserKey
  name: OriginatingCollapserKey
  nameWithType: AbstractCommand<TResult>.OriginatingCollapserKey
  fullName: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand<TResult>.OriginatingCollapserKey
  nameWithType.vb: AbstractCommand(Of TResult).OriginatingCollapserKey
  fullName.vb: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand(Of TResult).OriginatingCollapserKey
- uid: Steeltoe.CircuitBreaker.Hystrix.IHystrixInvokableInfo.OriginatingCollapserKey
  commentId: P:Steeltoe.CircuitBreaker.Hystrix.IHystrixInvokableInfo.OriginatingCollapserKey
  parent: Steeltoe.CircuitBreaker.Hystrix.IHystrixInvokableInfo
  name: OriginatingCollapserKey
  nameWithType: IHystrixInvokableInfo.OriginatingCollapserKey
  fullName: Steeltoe.CircuitBreaker.Hystrix.IHystrixInvokableInfo.OriginatingCollapserKey
- uid: Steeltoe.CircuitBreaker.Hystrix.IHystrixCollapserKey
  commentId: T:Steeltoe.CircuitBreaker.Hystrix.IHystrixCollapserKey
  parent: Steeltoe.CircuitBreaker.Hystrix
  name: IHystrixCollapserKey
  nameWithType: IHystrixCollapserKey
  fullName: Steeltoe.CircuitBreaker.Hystrix.IHystrixCollapserKey
- uid: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.PublicCacheKey*
  commentId: Overload:Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.PublicCacheKey
  name: PublicCacheKey
  nameWithType: AbstractCommand<TResult>.PublicCacheKey
  fullName: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand<TResult>.PublicCacheKey
  nameWithType.vb: AbstractCommand(Of TResult).PublicCacheKey
  fullName.vb: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand(Of TResult).PublicCacheKey
- uid: Steeltoe.CircuitBreaker.Hystrix.IHystrixInvokableInfo.PublicCacheKey
  commentId: P:Steeltoe.CircuitBreaker.Hystrix.IHystrixInvokableInfo.PublicCacheKey
  parent: Steeltoe.CircuitBreaker.Hystrix.IHystrixInvokableInfo
  name: PublicCacheKey
  nameWithType: IHystrixInvokableInfo.PublicCacheKey
  fullName: Steeltoe.CircuitBreaker.Hystrix.IHystrixInvokableInfo.PublicCacheKey
- uid: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.IsFallbackUserDefined*
  commentId: Overload:Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.IsFallbackUserDefined
  name: IsFallbackUserDefined
  nameWithType: AbstractCommand<TResult>.IsFallbackUserDefined
  fullName: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand<TResult>.IsFallbackUserDefined
  nameWithType.vb: AbstractCommand(Of TResult).IsFallbackUserDefined
  fullName.vb: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand(Of TResult).IsFallbackUserDefined
- uid: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.ExecutionException*
  commentId: Overload:Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.ExecutionException
  name: ExecutionException
  nameWithType: AbstractCommand<TResult>.ExecutionException
  fullName: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand<TResult>.ExecutionException
  nameWithType.vb: AbstractCommand(Of TResult).ExecutionException
  fullName.vb: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand(Of TResult).ExecutionException
- uid: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.CacheKey*
  commentId: Overload:Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.CacheKey
  name: CacheKey
  nameWithType: AbstractCommand<TResult>.CacheKey
  fullName: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand<TResult>.CacheKey
  nameWithType.vb: AbstractCommand(Of TResult).CacheKey
  fullName.vb: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand(Of TResult).CacheKey
- uid: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.IsRequestCachingEnabled*
  commentId: Overload:Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.IsRequestCachingEnabled
  name: IsRequestCachingEnabled
  nameWithType: AbstractCommand<TResult>.IsRequestCachingEnabled
  fullName: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand<TResult>.IsRequestCachingEnabled
  nameWithType.vb: AbstractCommand(Of TResult).IsRequestCachingEnabled
  fullName.vb: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand(Of TResult).IsRequestCachingEnabled
- uid: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.LogMessagePrefix*
  commentId: Overload:Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.LogMessagePrefix
  name: LogMessagePrefix
  nameWithType: AbstractCommand<TResult>.LogMessagePrefix
  fullName: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand<TResult>.LogMessagePrefix
  nameWithType.vb: AbstractCommand(Of TResult).LogMessagePrefix
  fullName.vb: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand(Of TResult).LogMessagePrefix
- uid: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.CommandResult*
  commentId: Overload:Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.CommandResult
  name: CommandResult
  nameWithType: AbstractCommand<TResult>.CommandResult
  fullName: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand<TResult>.CommandResult
  nameWithType.vb: AbstractCommand(Of TResult).CommandResult
  fullName.vb: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand(Of TResult).CommandResult
- uid: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.ShouldOutputOnNextEvents*
  commentId: Overload:Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.ShouldOutputOnNextEvents
  name: ShouldOutputOnNextEvents
  nameWithType: AbstractCommand<TResult>.ShouldOutputOnNextEvents
  fullName: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand<TResult>.ShouldOutputOnNextEvents
  nameWithType.vb: AbstractCommand(Of TResult).ShouldOutputOnNextEvents
  fullName.vb: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand(Of TResult).ShouldOutputOnNextEvents
- uid: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.CommandIsScalar*
  commentId: Overload:Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1.CommandIsScalar
  name: CommandIsScalar
  nameWithType: AbstractCommand<TResult>.CommandIsScalar
  fullName: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand<TResult>.CommandIsScalar
  nameWithType.vb: AbstractCommand(Of TResult).CommandIsScalar
  fullName.vb: Steeltoe.CircuitBreaker.Hystrix.AbstractCommand(Of TResult).CommandIsScalar
