### YamlMime:ManagedReference
items:
- uid: Steeltoe.Messaging.Handler.Invocation.HandlerMethodArgumentResolverComposite
  commentId: T:Steeltoe.Messaging.Handler.Invocation.HandlerMethodArgumentResolverComposite
  id: HandlerMethodArgumentResolverComposite
  parent: Steeltoe.Messaging.Handler.Invocation
  children:
  - Steeltoe.Messaging.Handler.Invocation.HandlerMethodArgumentResolverComposite.AddResolver(Steeltoe.Messaging.Handler.Invocation.IHandlerMethodArgumentResolver)
  - Steeltoe.Messaging.Handler.Invocation.HandlerMethodArgumentResolverComposite.AddResolvers(Steeltoe.Messaging.Handler.Invocation.IHandlerMethodArgumentResolver[])
  - Steeltoe.Messaging.Handler.Invocation.HandlerMethodArgumentResolverComposite.AddResolvers(System.Collections.Generic.IList{Steeltoe.Messaging.Handler.Invocation.IHandlerMethodArgumentResolver})
  - Steeltoe.Messaging.Handler.Invocation.HandlerMethodArgumentResolverComposite.Clear
  - Steeltoe.Messaging.Handler.Invocation.HandlerMethodArgumentResolverComposite.Count
  - Steeltoe.Messaging.Handler.Invocation.HandlerMethodArgumentResolverComposite.ResolveArgument(System.Reflection.ParameterInfo,Steeltoe.Messaging.IMessage)
  - Steeltoe.Messaging.Handler.Invocation.HandlerMethodArgumentResolverComposite.Resolvers
  - Steeltoe.Messaging.Handler.Invocation.HandlerMethodArgumentResolverComposite.SupportsParameter(System.Reflection.ParameterInfo)
  langs:
  - csharp
  - vb
  name: HandlerMethodArgumentResolverComposite
  nameWithType: HandlerMethodArgumentResolverComposite
  fullName: Steeltoe.Messaging.Handler.Invocation.HandlerMethodArgumentResolverComposite
  type: Class
  source:
    remote:
      path: src/Messaging/src/MessagingBase/Handler/Invocation/HandlerMethodArgumentResolverComposite.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: HandlerMethodArgumentResolverComposite
    path: ../Steeltoe/src/Messaging/src/MessagingBase/Handler/Invocation/HandlerMethodArgumentResolverComposite.cs
    startLine: 11
  assemblies:
  - Steeltoe.Messaging.MessagingBase
  namespace: Steeltoe.Messaging.Handler.Invocation
  syntax:
    content: 'public class HandlerMethodArgumentResolverComposite : IHandlerMethodArgumentResolver'
    content.vb: >-
      Public Class HandlerMethodArgumentResolverComposite

          Implements IHandlerMethodArgumentResolver
  inheritance:
  - System.Object
  implements:
  - Steeltoe.Messaging.Handler.Invocation.IHandlerMethodArgumentResolver
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Steeltoe.Messaging.Handler.Invocation.HandlerMethodArgumentResolverComposite.AddResolver(Steeltoe.Messaging.Handler.Invocation.IHandlerMethodArgumentResolver)
  commentId: M:Steeltoe.Messaging.Handler.Invocation.HandlerMethodArgumentResolverComposite.AddResolver(Steeltoe.Messaging.Handler.Invocation.IHandlerMethodArgumentResolver)
  id: AddResolver(Steeltoe.Messaging.Handler.Invocation.IHandlerMethodArgumentResolver)
  parent: Steeltoe.Messaging.Handler.Invocation.HandlerMethodArgumentResolverComposite
  langs:
  - csharp
  - vb
  name: AddResolver(IHandlerMethodArgumentResolver)
  nameWithType: HandlerMethodArgumentResolverComposite.AddResolver(IHandlerMethodArgumentResolver)
  fullName: Steeltoe.Messaging.Handler.Invocation.HandlerMethodArgumentResolverComposite.AddResolver(Steeltoe.Messaging.Handler.Invocation.IHandlerMethodArgumentResolver)
  type: Method
  source:
    remote:
      path: src/Messaging/src/MessagingBase/Handler/Invocation/HandlerMethodArgumentResolverComposite.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: AddResolver
    path: ../Steeltoe/src/Messaging/src/MessagingBase/Handler/Invocation/HandlerMethodArgumentResolverComposite.cs
    startLine: 18
  assemblies:
  - Steeltoe.Messaging.MessagingBase
  namespace: Steeltoe.Messaging.Handler.Invocation
  syntax:
    content: public HandlerMethodArgumentResolverComposite AddResolver(IHandlerMethodArgumentResolver argumentResolver)
    parameters:
    - id: argumentResolver
      type: Steeltoe.Messaging.Handler.Invocation.IHandlerMethodArgumentResolver
    return:
      type: Steeltoe.Messaging.Handler.Invocation.HandlerMethodArgumentResolverComposite
    content.vb: Public Function AddResolver(argumentResolver As IHandlerMethodArgumentResolver) As HandlerMethodArgumentResolverComposite
  overload: Steeltoe.Messaging.Handler.Invocation.HandlerMethodArgumentResolverComposite.AddResolver*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Steeltoe.Messaging.Handler.Invocation.HandlerMethodArgumentResolverComposite.AddResolvers(Steeltoe.Messaging.Handler.Invocation.IHandlerMethodArgumentResolver[])
  commentId: M:Steeltoe.Messaging.Handler.Invocation.HandlerMethodArgumentResolverComposite.AddResolvers(Steeltoe.Messaging.Handler.Invocation.IHandlerMethodArgumentResolver[])
  id: AddResolvers(Steeltoe.Messaging.Handler.Invocation.IHandlerMethodArgumentResolver[])
  parent: Steeltoe.Messaging.Handler.Invocation.HandlerMethodArgumentResolverComposite
  langs:
  - csharp
  - vb
  name: AddResolvers(IHandlerMethodArgumentResolver[])
  nameWithType: HandlerMethodArgumentResolverComposite.AddResolvers(IHandlerMethodArgumentResolver[])
  fullName: Steeltoe.Messaging.Handler.Invocation.HandlerMethodArgumentResolverComposite.AddResolvers(Steeltoe.Messaging.Handler.Invocation.IHandlerMethodArgumentResolver[])
  type: Method
  source:
    remote:
      path: src/Messaging/src/MessagingBase/Handler/Invocation/HandlerMethodArgumentResolverComposite.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: AddResolvers
    path: ../Steeltoe/src/Messaging/src/MessagingBase/Handler/Invocation/HandlerMethodArgumentResolverComposite.cs
    startLine: 24
  assemblies:
  - Steeltoe.Messaging.MessagingBase
  namespace: Steeltoe.Messaging.Handler.Invocation
  syntax:
    content: public HandlerMethodArgumentResolverComposite AddResolvers(params IHandlerMethodArgumentResolver[] resolvers)
    parameters:
    - id: resolvers
      type: Steeltoe.Messaging.Handler.Invocation.IHandlerMethodArgumentResolver[]
    return:
      type: Steeltoe.Messaging.Handler.Invocation.HandlerMethodArgumentResolverComposite
    content.vb: Public Function AddResolvers(ParamArray resolvers As IHandlerMethodArgumentResolver()) As HandlerMethodArgumentResolverComposite
  overload: Steeltoe.Messaging.Handler.Invocation.HandlerMethodArgumentResolverComposite.AddResolvers*
  nameWithType.vb: HandlerMethodArgumentResolverComposite.AddResolvers(IHandlerMethodArgumentResolver())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Steeltoe.Messaging.Handler.Invocation.HandlerMethodArgumentResolverComposite.AddResolvers(Steeltoe.Messaging.Handler.Invocation.IHandlerMethodArgumentResolver())
  name.vb: AddResolvers(IHandlerMethodArgumentResolver())
- uid: Steeltoe.Messaging.Handler.Invocation.HandlerMethodArgumentResolverComposite.AddResolvers(System.Collections.Generic.IList{Steeltoe.Messaging.Handler.Invocation.IHandlerMethodArgumentResolver})
  commentId: M:Steeltoe.Messaging.Handler.Invocation.HandlerMethodArgumentResolverComposite.AddResolvers(System.Collections.Generic.IList{Steeltoe.Messaging.Handler.Invocation.IHandlerMethodArgumentResolver})
  id: AddResolvers(System.Collections.Generic.IList{Steeltoe.Messaging.Handler.Invocation.IHandlerMethodArgumentResolver})
  parent: Steeltoe.Messaging.Handler.Invocation.HandlerMethodArgumentResolverComposite
  langs:
  - csharp
  - vb
  name: AddResolvers(IList<IHandlerMethodArgumentResolver>)
  nameWithType: HandlerMethodArgumentResolverComposite.AddResolvers(IList<IHandlerMethodArgumentResolver>)
  fullName: Steeltoe.Messaging.Handler.Invocation.HandlerMethodArgumentResolverComposite.AddResolvers(System.Collections.Generic.IList<Steeltoe.Messaging.Handler.Invocation.IHandlerMethodArgumentResolver>)
  type: Method
  source:
    remote:
      path: src/Messaging/src/MessagingBase/Handler/Invocation/HandlerMethodArgumentResolverComposite.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: AddResolvers
    path: ../Steeltoe/src/Messaging/src/MessagingBase/Handler/Invocation/HandlerMethodArgumentResolverComposite.cs
    startLine: 34
  assemblies:
  - Steeltoe.Messaging.MessagingBase
  namespace: Steeltoe.Messaging.Handler.Invocation
  syntax:
    content: public HandlerMethodArgumentResolverComposite AddResolvers(IList<IHandlerMethodArgumentResolver> resolvers)
    parameters:
    - id: resolvers
      type: System.Collections.Generic.IList{Steeltoe.Messaging.Handler.Invocation.IHandlerMethodArgumentResolver}
    return:
      type: Steeltoe.Messaging.Handler.Invocation.HandlerMethodArgumentResolverComposite
    content.vb: Public Function AddResolvers(resolvers As IList(Of IHandlerMethodArgumentResolver)) As HandlerMethodArgumentResolverComposite
  overload: Steeltoe.Messaging.Handler.Invocation.HandlerMethodArgumentResolverComposite.AddResolvers*
  nameWithType.vb: HandlerMethodArgumentResolverComposite.AddResolvers(IList(Of IHandlerMethodArgumentResolver))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Steeltoe.Messaging.Handler.Invocation.HandlerMethodArgumentResolverComposite.AddResolvers(System.Collections.Generic.IList(Of Steeltoe.Messaging.Handler.Invocation.IHandlerMethodArgumentResolver))
  name.vb: AddResolvers(IList(Of IHandlerMethodArgumentResolver))
- uid: Steeltoe.Messaging.Handler.Invocation.HandlerMethodArgumentResolverComposite.Count
  commentId: P:Steeltoe.Messaging.Handler.Invocation.HandlerMethodArgumentResolverComposite.Count
  id: Count
  parent: Steeltoe.Messaging.Handler.Invocation.HandlerMethodArgumentResolverComposite
  langs:
  - csharp
  - vb
  name: Count
  nameWithType: HandlerMethodArgumentResolverComposite.Count
  fullName: Steeltoe.Messaging.Handler.Invocation.HandlerMethodArgumentResolverComposite.Count
  type: Property
  source:
    remote:
      path: src/Messaging/src/MessagingBase/Handler/Invocation/HandlerMethodArgumentResolverComposite.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Count
    path: ../Steeltoe/src/Messaging/src/MessagingBase/Handler/Invocation/HandlerMethodArgumentResolverComposite.cs
    startLine: 44
  assemblies:
  - Steeltoe.Messaging.MessagingBase
  namespace: Steeltoe.Messaging.Handler.Invocation
  syntax:
    content: public int Count { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property Count As Integer
  overload: Steeltoe.Messaging.Handler.Invocation.HandlerMethodArgumentResolverComposite.Count*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Steeltoe.Messaging.Handler.Invocation.HandlerMethodArgumentResolverComposite.Resolvers
  commentId: P:Steeltoe.Messaging.Handler.Invocation.HandlerMethodArgumentResolverComposite.Resolvers
  id: Resolvers
  parent: Steeltoe.Messaging.Handler.Invocation.HandlerMethodArgumentResolverComposite
  langs:
  - csharp
  - vb
  name: Resolvers
  nameWithType: HandlerMethodArgumentResolverComposite.Resolvers
  fullName: Steeltoe.Messaging.Handler.Invocation.HandlerMethodArgumentResolverComposite.Resolvers
  type: Property
  source:
    remote:
      path: src/Messaging/src/MessagingBase/Handler/Invocation/HandlerMethodArgumentResolverComposite.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Resolvers
    path: ../Steeltoe/src/Messaging/src/MessagingBase/Handler/Invocation/HandlerMethodArgumentResolverComposite.cs
    startLine: 52
  assemblies:
  - Steeltoe.Messaging.MessagingBase
  namespace: Steeltoe.Messaging.Handler.Invocation
  syntax:
    content: public List<IHandlerMethodArgumentResolver> Resolvers { get; }
    parameters: []
    return:
      type: System.Collections.Generic.List{Steeltoe.Messaging.Handler.Invocation.IHandlerMethodArgumentResolver}
    content.vb: Public ReadOnly Property Resolvers As List(Of IHandlerMethodArgumentResolver)
  overload: Steeltoe.Messaging.Handler.Invocation.HandlerMethodArgumentResolverComposite.Resolvers*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Steeltoe.Messaging.Handler.Invocation.HandlerMethodArgumentResolverComposite.Clear
  commentId: M:Steeltoe.Messaging.Handler.Invocation.HandlerMethodArgumentResolverComposite.Clear
  id: Clear
  parent: Steeltoe.Messaging.Handler.Invocation.HandlerMethodArgumentResolverComposite
  langs:
  - csharp
  - vb
  name: Clear()
  nameWithType: HandlerMethodArgumentResolverComposite.Clear()
  fullName: Steeltoe.Messaging.Handler.Invocation.HandlerMethodArgumentResolverComposite.Clear()
  type: Method
  source:
    remote:
      path: src/Messaging/src/MessagingBase/Handler/Invocation/HandlerMethodArgumentResolverComposite.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Clear
    path: ../Steeltoe/src/Messaging/src/MessagingBase/Handler/Invocation/HandlerMethodArgumentResolverComposite.cs
    startLine: 57
  assemblies:
  - Steeltoe.Messaging.MessagingBase
  namespace: Steeltoe.Messaging.Handler.Invocation
  syntax:
    content: public void Clear()
    content.vb: Public Sub Clear
  overload: Steeltoe.Messaging.Handler.Invocation.HandlerMethodArgumentResolverComposite.Clear*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Steeltoe.Messaging.Handler.Invocation.HandlerMethodArgumentResolverComposite.SupportsParameter(System.Reflection.ParameterInfo)
  commentId: M:Steeltoe.Messaging.Handler.Invocation.HandlerMethodArgumentResolverComposite.SupportsParameter(System.Reflection.ParameterInfo)
  id: SupportsParameter(System.Reflection.ParameterInfo)
  parent: Steeltoe.Messaging.Handler.Invocation.HandlerMethodArgumentResolverComposite
  langs:
  - csharp
  - vb
  name: SupportsParameter(ParameterInfo)
  nameWithType: HandlerMethodArgumentResolverComposite.SupportsParameter(ParameterInfo)
  fullName: Steeltoe.Messaging.Handler.Invocation.HandlerMethodArgumentResolverComposite.SupportsParameter(System.Reflection.ParameterInfo)
  type: Method
  source:
    remote:
      path: src/Messaging/src/MessagingBase/Handler/Invocation/HandlerMethodArgumentResolverComposite.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: SupportsParameter
    path: ../Steeltoe/src/Messaging/src/MessagingBase/Handler/Invocation/HandlerMethodArgumentResolverComposite.cs
    startLine: 62
  assemblies:
  - Steeltoe.Messaging.MessagingBase
  namespace: Steeltoe.Messaging.Handler.Invocation
  syntax:
    content: public bool SupportsParameter(ParameterInfo parameter)
    parameters:
    - id: parameter
      type: System.Reflection.ParameterInfo
    return:
      type: System.Boolean
    content.vb: Public Function SupportsParameter(parameter As ParameterInfo) As Boolean
  overload: Steeltoe.Messaging.Handler.Invocation.HandlerMethodArgumentResolverComposite.SupportsParameter*
  implements:
  - Steeltoe.Messaging.Handler.Invocation.IHandlerMethodArgumentResolver.SupportsParameter(System.Reflection.ParameterInfo)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Steeltoe.Messaging.Handler.Invocation.HandlerMethodArgumentResolverComposite.ResolveArgument(System.Reflection.ParameterInfo,Steeltoe.Messaging.IMessage)
  commentId: M:Steeltoe.Messaging.Handler.Invocation.HandlerMethodArgumentResolverComposite.ResolveArgument(System.Reflection.ParameterInfo,Steeltoe.Messaging.IMessage)
  id: ResolveArgument(System.Reflection.ParameterInfo,Steeltoe.Messaging.IMessage)
  parent: Steeltoe.Messaging.Handler.Invocation.HandlerMethodArgumentResolverComposite
  langs:
  - csharp
  - vb
  name: ResolveArgument(ParameterInfo, IMessage)
  nameWithType: HandlerMethodArgumentResolverComposite.ResolveArgument(ParameterInfo, IMessage)
  fullName: Steeltoe.Messaging.Handler.Invocation.HandlerMethodArgumentResolverComposite.ResolveArgument(System.Reflection.ParameterInfo, Steeltoe.Messaging.IMessage)
  type: Method
  source:
    remote:
      path: src/Messaging/src/MessagingBase/Handler/Invocation/HandlerMethodArgumentResolverComposite.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: ResolveArgument
    path: ../Steeltoe/src/Messaging/src/MessagingBase/Handler/Invocation/HandlerMethodArgumentResolverComposite.cs
    startLine: 67
  assemblies:
  - Steeltoe.Messaging.MessagingBase
  namespace: Steeltoe.Messaging.Handler.Invocation
  syntax:
    content: public object ResolveArgument(ParameterInfo parameter, IMessage message)
    parameters:
    - id: parameter
      type: System.Reflection.ParameterInfo
    - id: message
      type: Steeltoe.Messaging.IMessage
    return:
      type: System.Object
    content.vb: Public Function ResolveArgument(parameter As ParameterInfo, message As IMessage) As Object
  overload: Steeltoe.Messaging.Handler.Invocation.HandlerMethodArgumentResolverComposite.ResolveArgument*
  implements:
  - Steeltoe.Messaging.Handler.Invocation.IHandlerMethodArgumentResolver.ResolveArgument(System.Reflection.ParameterInfo,Steeltoe.Messaging.IMessage)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Steeltoe.Messaging.Handler.Invocation
  commentId: N:Steeltoe.Messaging.Handler.Invocation
  name: Steeltoe.Messaging.Handler.Invocation
  nameWithType: Steeltoe.Messaging.Handler.Invocation
  fullName: Steeltoe.Messaging.Handler.Invocation
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Steeltoe.Messaging.Handler.Invocation.IHandlerMethodArgumentResolver
  commentId: T:Steeltoe.Messaging.Handler.Invocation.IHandlerMethodArgumentResolver
  parent: Steeltoe.Messaging.Handler.Invocation
  name: IHandlerMethodArgumentResolver
  nameWithType: IHandlerMethodArgumentResolver
  fullName: Steeltoe.Messaging.Handler.Invocation.IHandlerMethodArgumentResolver
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Steeltoe.Messaging.Handler.Invocation.HandlerMethodArgumentResolverComposite.AddResolver*
  commentId: Overload:Steeltoe.Messaging.Handler.Invocation.HandlerMethodArgumentResolverComposite.AddResolver
  name: AddResolver
  nameWithType: HandlerMethodArgumentResolverComposite.AddResolver
  fullName: Steeltoe.Messaging.Handler.Invocation.HandlerMethodArgumentResolverComposite.AddResolver
- uid: Steeltoe.Messaging.Handler.Invocation.HandlerMethodArgumentResolverComposite
  commentId: T:Steeltoe.Messaging.Handler.Invocation.HandlerMethodArgumentResolverComposite
  parent: Steeltoe.Messaging.Handler.Invocation
  name: HandlerMethodArgumentResolverComposite
  nameWithType: HandlerMethodArgumentResolverComposite
  fullName: Steeltoe.Messaging.Handler.Invocation.HandlerMethodArgumentResolverComposite
- uid: Steeltoe.Messaging.Handler.Invocation.HandlerMethodArgumentResolverComposite.AddResolvers*
  commentId: Overload:Steeltoe.Messaging.Handler.Invocation.HandlerMethodArgumentResolverComposite.AddResolvers
  name: AddResolvers
  nameWithType: HandlerMethodArgumentResolverComposite.AddResolvers
  fullName: Steeltoe.Messaging.Handler.Invocation.HandlerMethodArgumentResolverComposite.AddResolvers
- uid: Steeltoe.Messaging.Handler.Invocation.IHandlerMethodArgumentResolver[]
  isExternal: true
  name: IHandlerMethodArgumentResolver[]
  nameWithType: IHandlerMethodArgumentResolver[]
  fullName: Steeltoe.Messaging.Handler.Invocation.IHandlerMethodArgumentResolver[]
  nameWithType.vb: IHandlerMethodArgumentResolver()
  fullName.vb: Steeltoe.Messaging.Handler.Invocation.IHandlerMethodArgumentResolver()
  name.vb: IHandlerMethodArgumentResolver()
  spec.csharp:
  - uid: Steeltoe.Messaging.Handler.Invocation.IHandlerMethodArgumentResolver
    name: IHandlerMethodArgumentResolver
    nameWithType: IHandlerMethodArgumentResolver
    fullName: Steeltoe.Messaging.Handler.Invocation.IHandlerMethodArgumentResolver
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: Steeltoe.Messaging.Handler.Invocation.IHandlerMethodArgumentResolver
    name: IHandlerMethodArgumentResolver
    nameWithType: IHandlerMethodArgumentResolver
    fullName: Steeltoe.Messaging.Handler.Invocation.IHandlerMethodArgumentResolver
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Collections.Generic.IList{Steeltoe.Messaging.Handler.Invocation.IHandlerMethodArgumentResolver}
  commentId: T:System.Collections.Generic.IList{Steeltoe.Messaging.Handler.Invocation.IHandlerMethodArgumentResolver}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<IHandlerMethodArgumentResolver>
  nameWithType: IList<IHandlerMethodArgumentResolver>
  fullName: System.Collections.Generic.IList<Steeltoe.Messaging.Handler.Invocation.IHandlerMethodArgumentResolver>
  nameWithType.vb: IList(Of IHandlerMethodArgumentResolver)
  fullName.vb: System.Collections.Generic.IList(Of Steeltoe.Messaging.Handler.Invocation.IHandlerMethodArgumentResolver)
  name.vb: IList(Of IHandlerMethodArgumentResolver)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Steeltoe.Messaging.Handler.Invocation.IHandlerMethodArgumentResolver
    name: IHandlerMethodArgumentResolver
    nameWithType: IHandlerMethodArgumentResolver
    fullName: Steeltoe.Messaging.Handler.Invocation.IHandlerMethodArgumentResolver
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Steeltoe.Messaging.Handler.Invocation.IHandlerMethodArgumentResolver
    name: IHandlerMethodArgumentResolver
    nameWithType: IHandlerMethodArgumentResolver
    fullName: Steeltoe.Messaging.Handler.Invocation.IHandlerMethodArgumentResolver
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullName.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Steeltoe.Messaging.Handler.Invocation.HandlerMethodArgumentResolverComposite.Count*
  commentId: Overload:Steeltoe.Messaging.Handler.Invocation.HandlerMethodArgumentResolverComposite.Count
  name: Count
  nameWithType: HandlerMethodArgumentResolverComposite.Count
  fullName: Steeltoe.Messaging.Handler.Invocation.HandlerMethodArgumentResolverComposite.Count
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Steeltoe.Messaging.Handler.Invocation.HandlerMethodArgumentResolverComposite.Resolvers*
  commentId: Overload:Steeltoe.Messaging.Handler.Invocation.HandlerMethodArgumentResolverComposite.Resolvers
  name: Resolvers
  nameWithType: HandlerMethodArgumentResolverComposite.Resolvers
  fullName: Steeltoe.Messaging.Handler.Invocation.HandlerMethodArgumentResolverComposite.Resolvers
- uid: System.Collections.Generic.List{Steeltoe.Messaging.Handler.Invocation.IHandlerMethodArgumentResolver}
  commentId: T:System.Collections.Generic.List{Steeltoe.Messaging.Handler.Invocation.IHandlerMethodArgumentResolver}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<IHandlerMethodArgumentResolver>
  nameWithType: List<IHandlerMethodArgumentResolver>
  fullName: System.Collections.Generic.List<Steeltoe.Messaging.Handler.Invocation.IHandlerMethodArgumentResolver>
  nameWithType.vb: List(Of IHandlerMethodArgumentResolver)
  fullName.vb: System.Collections.Generic.List(Of Steeltoe.Messaging.Handler.Invocation.IHandlerMethodArgumentResolver)
  name.vb: List(Of IHandlerMethodArgumentResolver)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Steeltoe.Messaging.Handler.Invocation.IHandlerMethodArgumentResolver
    name: IHandlerMethodArgumentResolver
    nameWithType: IHandlerMethodArgumentResolver
    fullName: Steeltoe.Messaging.Handler.Invocation.IHandlerMethodArgumentResolver
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Steeltoe.Messaging.Handler.Invocation.IHandlerMethodArgumentResolver
    name: IHandlerMethodArgumentResolver
    nameWithType: IHandlerMethodArgumentResolver
    fullName: Steeltoe.Messaging.Handler.Invocation.IHandlerMethodArgumentResolver
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Handler.Invocation.HandlerMethodArgumentResolverComposite.Clear*
  commentId: Overload:Steeltoe.Messaging.Handler.Invocation.HandlerMethodArgumentResolverComposite.Clear
  name: Clear
  nameWithType: HandlerMethodArgumentResolverComposite.Clear
  fullName: Steeltoe.Messaging.Handler.Invocation.HandlerMethodArgumentResolverComposite.Clear
- uid: Steeltoe.Messaging.Handler.Invocation.HandlerMethodArgumentResolverComposite.SupportsParameter*
  commentId: Overload:Steeltoe.Messaging.Handler.Invocation.HandlerMethodArgumentResolverComposite.SupportsParameter
  name: SupportsParameter
  nameWithType: HandlerMethodArgumentResolverComposite.SupportsParameter
  fullName: Steeltoe.Messaging.Handler.Invocation.HandlerMethodArgumentResolverComposite.SupportsParameter
- uid: Steeltoe.Messaging.Handler.Invocation.IHandlerMethodArgumentResolver.SupportsParameter(System.Reflection.ParameterInfo)
  commentId: M:Steeltoe.Messaging.Handler.Invocation.IHandlerMethodArgumentResolver.SupportsParameter(System.Reflection.ParameterInfo)
  parent: Steeltoe.Messaging.Handler.Invocation.IHandlerMethodArgumentResolver
  isExternal: true
  name: SupportsParameter(ParameterInfo)
  nameWithType: IHandlerMethodArgumentResolver.SupportsParameter(ParameterInfo)
  fullName: Steeltoe.Messaging.Handler.Invocation.IHandlerMethodArgumentResolver.SupportsParameter(System.Reflection.ParameterInfo)
  spec.csharp:
  - uid: Steeltoe.Messaging.Handler.Invocation.IHandlerMethodArgumentResolver.SupportsParameter(System.Reflection.ParameterInfo)
    name: SupportsParameter
    nameWithType: IHandlerMethodArgumentResolver.SupportsParameter
    fullName: Steeltoe.Messaging.Handler.Invocation.IHandlerMethodArgumentResolver.SupportsParameter
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Reflection.ParameterInfo
    name: ParameterInfo
    nameWithType: ParameterInfo
    fullName: System.Reflection.ParameterInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Handler.Invocation.IHandlerMethodArgumentResolver.SupportsParameter(System.Reflection.ParameterInfo)
    name: SupportsParameter
    nameWithType: IHandlerMethodArgumentResolver.SupportsParameter
    fullName: Steeltoe.Messaging.Handler.Invocation.IHandlerMethodArgumentResolver.SupportsParameter
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Reflection.ParameterInfo
    name: ParameterInfo
    nameWithType: ParameterInfo
    fullName: System.Reflection.ParameterInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Reflection.ParameterInfo
  commentId: T:System.Reflection.ParameterInfo
  parent: System.Reflection
  isExternal: true
  name: ParameterInfo
  nameWithType: ParameterInfo
  fullName: System.Reflection.ParameterInfo
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Reflection
  commentId: N:System.Reflection
  isExternal: true
  name: System.Reflection
  nameWithType: System.Reflection
  fullName: System.Reflection
- uid: Steeltoe.Messaging.Handler.Invocation.HandlerMethodArgumentResolverComposite.ResolveArgument*
  commentId: Overload:Steeltoe.Messaging.Handler.Invocation.HandlerMethodArgumentResolverComposite.ResolveArgument
  name: ResolveArgument
  nameWithType: HandlerMethodArgumentResolverComposite.ResolveArgument
  fullName: Steeltoe.Messaging.Handler.Invocation.HandlerMethodArgumentResolverComposite.ResolveArgument
- uid: Steeltoe.Messaging.Handler.Invocation.IHandlerMethodArgumentResolver.ResolveArgument(System.Reflection.ParameterInfo,Steeltoe.Messaging.IMessage)
  commentId: M:Steeltoe.Messaging.Handler.Invocation.IHandlerMethodArgumentResolver.ResolveArgument(System.Reflection.ParameterInfo,Steeltoe.Messaging.IMessage)
  parent: Steeltoe.Messaging.Handler.Invocation.IHandlerMethodArgumentResolver
  isExternal: true
  name: ResolveArgument(ParameterInfo, IMessage)
  nameWithType: IHandlerMethodArgumentResolver.ResolveArgument(ParameterInfo, IMessage)
  fullName: Steeltoe.Messaging.Handler.Invocation.IHandlerMethodArgumentResolver.ResolveArgument(System.Reflection.ParameterInfo, Steeltoe.Messaging.IMessage)
  spec.csharp:
  - uid: Steeltoe.Messaging.Handler.Invocation.IHandlerMethodArgumentResolver.ResolveArgument(System.Reflection.ParameterInfo,Steeltoe.Messaging.IMessage)
    name: ResolveArgument
    nameWithType: IHandlerMethodArgumentResolver.ResolveArgument
    fullName: Steeltoe.Messaging.Handler.Invocation.IHandlerMethodArgumentResolver.ResolveArgument
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Reflection.ParameterInfo
    name: ParameterInfo
    nameWithType: ParameterInfo
    fullName: System.Reflection.ParameterInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Handler.Invocation.IHandlerMethodArgumentResolver.ResolveArgument(System.Reflection.ParameterInfo,Steeltoe.Messaging.IMessage)
    name: ResolveArgument
    nameWithType: IHandlerMethodArgumentResolver.ResolveArgument
    fullName: Steeltoe.Messaging.Handler.Invocation.IHandlerMethodArgumentResolver.ResolveArgument
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Reflection.ParameterInfo
    name: ParameterInfo
    nameWithType: ParameterInfo
    fullName: System.Reflection.ParameterInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.IMessage
  commentId: T:Steeltoe.Messaging.IMessage
  parent: Steeltoe.Messaging
  name: IMessage
  nameWithType: IMessage
  fullName: Steeltoe.Messaging.IMessage
- uid: Steeltoe.Messaging
  commentId: N:Steeltoe.Messaging
  name: Steeltoe.Messaging
  nameWithType: Steeltoe.Messaging
  fullName: Steeltoe.Messaging
