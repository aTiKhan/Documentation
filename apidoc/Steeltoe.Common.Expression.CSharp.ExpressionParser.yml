### YamlMime:ManagedReference
items:
- uid: Steeltoe.Common.Expression.CSharp.ExpressionParser
  commentId: T:Steeltoe.Common.Expression.CSharp.ExpressionParser
  id: ExpressionParser
  parent: Steeltoe.Common.Expression.CSharp
  children:
  - Steeltoe.Common.Expression.CSharp.ExpressionParser.ParseExpression(System.String)
  - Steeltoe.Common.Expression.CSharp.ExpressionParser.ParseExpression(System.String,Steeltoe.Common.Expression.IParserContext)
  langs:
  - csharp
  - vb
  name: ExpressionParser
  nameWithType: ExpressionParser
  fullName: Steeltoe.Common.Expression.CSharp.ExpressionParser
  type: Class
  source:
    remote:
      path: src/Common/src/Common/Expression/CSharp/ExpressionParser.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: ExpressionParser
    path: ../Steeltoe/src/Common/src/Common/Expression/CSharp/ExpressionParser.cs
    startLine: 8
  assemblies:
  - Steeltoe.Common
  namespace: Steeltoe.Common.Expression.CSharp
  syntax:
    content: 'public class ExpressionParser : IExpressionParser'
    content.vb: >-
      Public Class ExpressionParser

          Implements IExpressionParser
  inheritance:
  - System.Object
  implements:
  - Steeltoe.Common.Expression.IExpressionParser
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Steeltoe.Common.Expression.CSharp.ExpressionParser.ParseExpression(System.String)
  commentId: M:Steeltoe.Common.Expression.CSharp.ExpressionParser.ParseExpression(System.String)
  id: ParseExpression(System.String)
  parent: Steeltoe.Common.Expression.CSharp.ExpressionParser
  langs:
  - csharp
  - vb
  name: ParseExpression(String)
  nameWithType: ExpressionParser.ParseExpression(String)
  fullName: Steeltoe.Common.Expression.CSharp.ExpressionParser.ParseExpression(System.String)
  type: Method
  source:
    remote:
      path: src/Common/src/Common/Expression/CSharp/ExpressionParser.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: ParseExpression
    path: ../Steeltoe/src/Common/src/Common/Expression/CSharp/ExpressionParser.cs
    startLine: 10
  assemblies:
  - Steeltoe.Common
  namespace: Steeltoe.Common.Expression.CSharp
  syntax:
    content: public IExpression ParseExpression(string expressionString)
    parameters:
    - id: expressionString
      type: System.String
    return:
      type: Steeltoe.Common.Expression.IExpression
    content.vb: Public Function ParseExpression(expressionString As String) As IExpression
  overload: Steeltoe.Common.Expression.CSharp.ExpressionParser.ParseExpression*
  implements:
  - Steeltoe.Common.Expression.IExpressionParser.ParseExpression(System.String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Steeltoe.Common.Expression.CSharp.ExpressionParser.ParseExpression(System.String,Steeltoe.Common.Expression.IParserContext)
  commentId: M:Steeltoe.Common.Expression.CSharp.ExpressionParser.ParseExpression(System.String,Steeltoe.Common.Expression.IParserContext)
  id: ParseExpression(System.String,Steeltoe.Common.Expression.IParserContext)
  parent: Steeltoe.Common.Expression.CSharp.ExpressionParser
  langs:
  - csharp
  - vb
  name: ParseExpression(String, IParserContext)
  nameWithType: ExpressionParser.ParseExpression(String, IParserContext)
  fullName: Steeltoe.Common.Expression.CSharp.ExpressionParser.ParseExpression(System.String, Steeltoe.Common.Expression.IParserContext)
  type: Method
  source:
    remote:
      path: src/Common/src/Common/Expression/CSharp/ExpressionParser.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: ParseExpression
    path: ../Steeltoe/src/Common/src/Common/Expression/CSharp/ExpressionParser.cs
    startLine: 15
  assemblies:
  - Steeltoe.Common
  namespace: Steeltoe.Common.Expression.CSharp
  syntax:
    content: public IExpression ParseExpression(string expressionString, IParserContext context)
    parameters:
    - id: expressionString
      type: System.String
    - id: context
      type: Steeltoe.Common.Expression.IParserContext
    return:
      type: Steeltoe.Common.Expression.IExpression
    content.vb: Public Function ParseExpression(expressionString As String, context As IParserContext) As IExpression
  overload: Steeltoe.Common.Expression.CSharp.ExpressionParser.ParseExpression*
  implements:
  - Steeltoe.Common.Expression.IExpressionParser.ParseExpression(System.String,Steeltoe.Common.Expression.IParserContext)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Steeltoe.Common.Expression.CSharp
  commentId: N:Steeltoe.Common.Expression.CSharp
  name: Steeltoe.Common.Expression.CSharp
  nameWithType: Steeltoe.Common.Expression.CSharp
  fullName: Steeltoe.Common.Expression.CSharp
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Steeltoe.Common.Expression.IExpressionParser
  commentId: T:Steeltoe.Common.Expression.IExpressionParser
  parent: Steeltoe.Common.Expression
  name: IExpressionParser
  nameWithType: IExpressionParser
  fullName: Steeltoe.Common.Expression.IExpressionParser
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Steeltoe.Common.Expression
  commentId: N:Steeltoe.Common.Expression
  name: Steeltoe.Common.Expression
  nameWithType: Steeltoe.Common.Expression
  fullName: Steeltoe.Common.Expression
- uid: Steeltoe.Common.Expression.CSharp.ExpressionParser.ParseExpression*
  commentId: Overload:Steeltoe.Common.Expression.CSharp.ExpressionParser.ParseExpression
  name: ParseExpression
  nameWithType: ExpressionParser.ParseExpression
  fullName: Steeltoe.Common.Expression.CSharp.ExpressionParser.ParseExpression
- uid: Steeltoe.Common.Expression.IExpressionParser.ParseExpression(System.String)
  commentId: M:Steeltoe.Common.Expression.IExpressionParser.ParseExpression(System.String)
  parent: Steeltoe.Common.Expression.IExpressionParser
  isExternal: true
  name: ParseExpression(String)
  nameWithType: IExpressionParser.ParseExpression(String)
  fullName: Steeltoe.Common.Expression.IExpressionParser.ParseExpression(System.String)
  spec.csharp:
  - uid: Steeltoe.Common.Expression.IExpressionParser.ParseExpression(System.String)
    name: ParseExpression
    nameWithType: IExpressionParser.ParseExpression
    fullName: Steeltoe.Common.Expression.IExpressionParser.ParseExpression
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Common.Expression.IExpressionParser.ParseExpression(System.String)
    name: ParseExpression
    nameWithType: IExpressionParser.ParseExpression
    fullName: Steeltoe.Common.Expression.IExpressionParser.ParseExpression
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Steeltoe.Common.Expression.IExpression
  commentId: T:Steeltoe.Common.Expression.IExpression
  parent: Steeltoe.Common.Expression
  name: IExpression
  nameWithType: IExpression
  fullName: Steeltoe.Common.Expression.IExpression
- uid: Steeltoe.Common.Expression.IExpressionParser.ParseExpression(System.String,Steeltoe.Common.Expression.IParserContext)
  commentId: M:Steeltoe.Common.Expression.IExpressionParser.ParseExpression(System.String,Steeltoe.Common.Expression.IParserContext)
  parent: Steeltoe.Common.Expression.IExpressionParser
  isExternal: true
  name: ParseExpression(String, IParserContext)
  nameWithType: IExpressionParser.ParseExpression(String, IParserContext)
  fullName: Steeltoe.Common.Expression.IExpressionParser.ParseExpression(System.String, Steeltoe.Common.Expression.IParserContext)
  spec.csharp:
  - uid: Steeltoe.Common.Expression.IExpressionParser.ParseExpression(System.String,Steeltoe.Common.Expression.IParserContext)
    name: ParseExpression
    nameWithType: IExpressionParser.ParseExpression
    fullName: Steeltoe.Common.Expression.IExpressionParser.ParseExpression
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Common.Expression.IParserContext
    name: IParserContext
    nameWithType: IParserContext
    fullName: Steeltoe.Common.Expression.IParserContext
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Common.Expression.IExpressionParser.ParseExpression(System.String,Steeltoe.Common.Expression.IParserContext)
    name: ParseExpression
    nameWithType: IExpressionParser.ParseExpression
    fullName: Steeltoe.Common.Expression.IExpressionParser.ParseExpression
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Common.Expression.IParserContext
    name: IParserContext
    nameWithType: IParserContext
    fullName: Steeltoe.Common.Expression.IParserContext
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Common.Expression.IParserContext
  commentId: T:Steeltoe.Common.Expression.IParserContext
  parent: Steeltoe.Common.Expression
  name: IParserContext
  nameWithType: IParserContext
  fullName: Steeltoe.Common.Expression.IParserContext
