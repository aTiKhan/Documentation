### YamlMime:ManagedReference
items:
- uid: Steeltoe.Messaging.RabbitMQ.Listener.Exceptions.ListenerExecutionFailedException
  commentId: T:Steeltoe.Messaging.RabbitMQ.Listener.Exceptions.ListenerExecutionFailedException
  id: ListenerExecutionFailedException
  parent: Steeltoe.Messaging.RabbitMQ.Listener.Exceptions
  children:
  - Steeltoe.Messaging.RabbitMQ.Listener.Exceptions.ListenerExecutionFailedException.#ctor(System.String,System.Exception,Steeltoe.Messaging.IMessage[])
  - Steeltoe.Messaging.RabbitMQ.Listener.Exceptions.ListenerExecutionFailedException.FailedMessage
  - Steeltoe.Messaging.RabbitMQ.Listener.Exceptions.ListenerExecutionFailedException.FailedMessages
  langs:
  - csharp
  - vb
  name: ListenerExecutionFailedException
  nameWithType: ListenerExecutionFailedException
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.Exceptions.ListenerExecutionFailedException
  type: Class
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Listener/Exceptions/ListenerExecutionFailedException.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: ListenerExecutionFailedException
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Listener/Exceptions/ListenerExecutionFailedException.cs
    startLine: 9
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Listener.Exceptions
  syntax:
    content: 'public class ListenerExecutionFailedException : Exception, ISerializable'
    content.vb: >-
      Public Class ListenerExecutionFailedException

          Inherits Exception

          Implements ISerializable
  inheritance:
  - System.Object
  - System.Exception
  implements:
  - System.Runtime.Serialization.ISerializable
  inheritedMembers:
  - System.Exception.GetBaseException
  - System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.Exception.GetType
  - System.Exception.ToString
  - System.Exception.Data
  - System.Exception.HelpLink
  - System.Exception.HResult
  - System.Exception.InnerException
  - System.Exception.Message
  - System.Exception.Source
  - System.Exception.StackTrace
  - System.Exception.TargetSite
  - System.Exception.SerializeObjectState
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Steeltoe.Messaging.RabbitMQ.Listener.Exceptions.ListenerExecutionFailedException.#ctor(System.String,System.Exception,Steeltoe.Messaging.IMessage[])
  commentId: M:Steeltoe.Messaging.RabbitMQ.Listener.Exceptions.ListenerExecutionFailedException.#ctor(System.String,System.Exception,Steeltoe.Messaging.IMessage[])
  id: '#ctor(System.String,System.Exception,Steeltoe.Messaging.IMessage[])'
  parent: Steeltoe.Messaging.RabbitMQ.Listener.Exceptions.ListenerExecutionFailedException
  langs:
  - csharp
  - vb
  name: ListenerExecutionFailedException(String, Exception, IMessage[])
  nameWithType: ListenerExecutionFailedException.ListenerExecutionFailedException(String, Exception, IMessage[])
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.Exceptions.ListenerExecutionFailedException.ListenerExecutionFailedException(System.String, System.Exception, Steeltoe.Messaging.IMessage[])
  type: Constructor
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Listener/Exceptions/ListenerExecutionFailedException.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: .ctor
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Listener/Exceptions/ListenerExecutionFailedException.cs
    startLine: 11
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Listener.Exceptions
  syntax:
    content: public ListenerExecutionFailedException(string message, Exception cause, params IMessage[] failedMessages)
    parameters:
    - id: message
      type: System.String
    - id: cause
      type: System.Exception
    - id: failedMessages
      type: Steeltoe.Messaging.IMessage[]
    content.vb: Public Sub New(message As String, cause As Exception, ParamArray failedMessages As IMessage())
  overload: Steeltoe.Messaging.RabbitMQ.Listener.Exceptions.ListenerExecutionFailedException.#ctor*
  nameWithType.vb: ListenerExecutionFailedException.ListenerExecutionFailedException(String, Exception, IMessage())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Steeltoe.Messaging.RabbitMQ.Listener.Exceptions.ListenerExecutionFailedException.ListenerExecutionFailedException(System.String, System.Exception, Steeltoe.Messaging.IMessage())
  name.vb: ListenerExecutionFailedException(String, Exception, IMessage())
- uid: Steeltoe.Messaging.RabbitMQ.Listener.Exceptions.ListenerExecutionFailedException.FailedMessage
  commentId: P:Steeltoe.Messaging.RabbitMQ.Listener.Exceptions.ListenerExecutionFailedException.FailedMessage
  id: FailedMessage
  parent: Steeltoe.Messaging.RabbitMQ.Listener.Exceptions.ListenerExecutionFailedException
  langs:
  - csharp
  - vb
  name: FailedMessage
  nameWithType: ListenerExecutionFailedException.FailedMessage
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.Exceptions.ListenerExecutionFailedException.FailedMessage
  type: Property
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Listener/Exceptions/ListenerExecutionFailedException.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: FailedMessage
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Listener/Exceptions/ListenerExecutionFailedException.cs
    startLine: 17
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Listener.Exceptions
  syntax:
    content: public IMessage FailedMessage { get; }
    parameters: []
    return:
      type: Steeltoe.Messaging.IMessage
    content.vb: Public ReadOnly Property FailedMessage As IMessage
  overload: Steeltoe.Messaging.RabbitMQ.Listener.Exceptions.ListenerExecutionFailedException.FailedMessage*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Steeltoe.Messaging.RabbitMQ.Listener.Exceptions.ListenerExecutionFailedException.FailedMessages
  commentId: P:Steeltoe.Messaging.RabbitMQ.Listener.Exceptions.ListenerExecutionFailedException.FailedMessages
  id: FailedMessages
  parent: Steeltoe.Messaging.RabbitMQ.Listener.Exceptions.ListenerExecutionFailedException
  langs:
  - csharp
  - vb
  name: FailedMessages
  nameWithType: ListenerExecutionFailedException.FailedMessages
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.Exceptions.ListenerExecutionFailedException.FailedMessages
  type: Property
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Listener/Exceptions/ListenerExecutionFailedException.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: FailedMessages
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Listener/Exceptions/ListenerExecutionFailedException.cs
    startLine: 30
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Listener.Exceptions
  syntax:
    content: public List<IMessage> FailedMessages { get; }
    parameters: []
    return:
      type: System.Collections.Generic.List{Steeltoe.Messaging.IMessage}
    content.vb: Public ReadOnly Property FailedMessages As List(Of IMessage)
  overload: Steeltoe.Messaging.RabbitMQ.Listener.Exceptions.ListenerExecutionFailedException.FailedMessages*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: Steeltoe.Messaging.RabbitMQ.Listener.Exceptions
  commentId: N:Steeltoe.Messaging.RabbitMQ.Listener.Exceptions
  name: Steeltoe.Messaging.RabbitMQ.Listener.Exceptions
  nameWithType: Steeltoe.Messaging.RabbitMQ.Listener.Exceptions
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.Exceptions
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Exception
  commentId: T:System.Exception
  parent: System
  isExternal: true
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: System.Runtime.Serialization.ISerializable
  commentId: T:System.Runtime.Serialization.ISerializable
  parent: System.Runtime.Serialization
  isExternal: true
  name: ISerializable
  nameWithType: ISerializable
  fullName: System.Runtime.Serialization.ISerializable
- uid: System.Exception.GetBaseException
  commentId: M:System.Exception.GetBaseException
  parent: System.Exception
  isExternal: true
  name: GetBaseException()
  nameWithType: Exception.GetBaseException()
  fullName: System.Exception.GetBaseException()
  spec.csharp:
  - uid: System.Exception.GetBaseException
    name: GetBaseException
    nameWithType: Exception.GetBaseException
    fullName: System.Exception.GetBaseException
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Exception.GetBaseException
    name: GetBaseException
    nameWithType: Exception.GetBaseException
    fullName: System.Exception.GetBaseException
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  commentId: M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Exception
  isExternal: true
  name: GetObjectData(SerializationInfo, StreamingContext)
  nameWithType: Exception.GetObjectData(SerializationInfo, StreamingContext)
  fullName: System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)
  spec.csharp:
  - uid: System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
    name: GetObjectData
    nameWithType: Exception.GetObjectData
    fullName: System.Exception.GetObjectData
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Runtime.Serialization.SerializationInfo
    name: SerializationInfo
    nameWithType: SerializationInfo
    fullName: System.Runtime.Serialization.SerializationInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Runtime.Serialization.StreamingContext
    name: StreamingContext
    nameWithType: StreamingContext
    fullName: System.Runtime.Serialization.StreamingContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
    name: GetObjectData
    nameWithType: Exception.GetObjectData
    fullName: System.Exception.GetObjectData
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Runtime.Serialization.SerializationInfo
    name: SerializationInfo
    nameWithType: SerializationInfo
    fullName: System.Runtime.Serialization.SerializationInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Runtime.Serialization.StreamingContext
    name: StreamingContext
    nameWithType: StreamingContext
    fullName: System.Runtime.Serialization.StreamingContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Exception.GetType
  commentId: M:System.Exception.GetType
  parent: System.Exception
  isExternal: true
  name: GetType()
  nameWithType: Exception.GetType()
  fullName: System.Exception.GetType()
  spec.csharp:
  - uid: System.Exception.GetType
    name: GetType
    nameWithType: Exception.GetType
    fullName: System.Exception.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Exception.GetType
    name: GetType
    nameWithType: Exception.GetType
    fullName: System.Exception.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Exception.ToString
  commentId: M:System.Exception.ToString
  parent: System.Exception
  isExternal: true
  name: ToString()
  nameWithType: Exception.ToString()
  fullName: System.Exception.ToString()
  spec.csharp:
  - uid: System.Exception.ToString
    name: ToString
    nameWithType: Exception.ToString
    fullName: System.Exception.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Exception.ToString
    name: ToString
    nameWithType: Exception.ToString
    fullName: System.Exception.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Exception.Data
  commentId: P:System.Exception.Data
  parent: System.Exception
  isExternal: true
  name: Data
  nameWithType: Exception.Data
  fullName: System.Exception.Data
- uid: System.Exception.HelpLink
  commentId: P:System.Exception.HelpLink
  parent: System.Exception
  isExternal: true
  name: HelpLink
  nameWithType: Exception.HelpLink
  fullName: System.Exception.HelpLink
- uid: System.Exception.HResult
  commentId: P:System.Exception.HResult
  parent: System.Exception
  isExternal: true
  name: HResult
  nameWithType: Exception.HResult
  fullName: System.Exception.HResult
- uid: System.Exception.InnerException
  commentId: P:System.Exception.InnerException
  parent: System.Exception
  isExternal: true
  name: InnerException
  nameWithType: Exception.InnerException
  fullName: System.Exception.InnerException
- uid: System.Exception.Message
  commentId: P:System.Exception.Message
  parent: System.Exception
  isExternal: true
  name: Message
  nameWithType: Exception.Message
  fullName: System.Exception.Message
- uid: System.Exception.Source
  commentId: P:System.Exception.Source
  parent: System.Exception
  isExternal: true
  name: Source
  nameWithType: Exception.Source
  fullName: System.Exception.Source
- uid: System.Exception.StackTrace
  commentId: P:System.Exception.StackTrace
  parent: System.Exception
  isExternal: true
  name: StackTrace
  nameWithType: Exception.StackTrace
  fullName: System.Exception.StackTrace
- uid: System.Exception.TargetSite
  commentId: P:System.Exception.TargetSite
  parent: System.Exception
  isExternal: true
  name: TargetSite
  nameWithType: Exception.TargetSite
  fullName: System.Exception.TargetSite
- uid: System.Exception.SerializeObjectState
  commentId: E:System.Exception.SerializeObjectState
  parent: System.Exception
  isExternal: true
  name: SerializeObjectState
  nameWithType: Exception.SerializeObjectState
  fullName: System.Exception.SerializeObjectState
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Runtime.Serialization
  commentId: N:System.Runtime.Serialization
  isExternal: true
  name: System.Runtime.Serialization
  nameWithType: System.Runtime.Serialization
  fullName: System.Runtime.Serialization
- uid: Steeltoe.Messaging.RabbitMQ.Listener.Exceptions.ListenerExecutionFailedException.#ctor*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Listener.Exceptions.ListenerExecutionFailedException.#ctor
  name: ListenerExecutionFailedException
  nameWithType: ListenerExecutionFailedException.ListenerExecutionFailedException
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.Exceptions.ListenerExecutionFailedException.ListenerExecutionFailedException
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Steeltoe.Messaging.IMessage[]
  isExternal: true
  name: IMessage[]
  nameWithType: IMessage[]
  fullName: Steeltoe.Messaging.IMessage[]
  nameWithType.vb: IMessage()
  fullName.vb: Steeltoe.Messaging.IMessage()
  name.vb: IMessage()
  spec.csharp:
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Steeltoe.Messaging.RabbitMQ.Listener.Exceptions.ListenerExecutionFailedException.FailedMessage*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Listener.Exceptions.ListenerExecutionFailedException.FailedMessage
  name: FailedMessage
  nameWithType: ListenerExecutionFailedException.FailedMessage
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.Exceptions.ListenerExecutionFailedException.FailedMessage
- uid: Steeltoe.Messaging.IMessage
  commentId: T:Steeltoe.Messaging.IMessage
  parent: Steeltoe.Messaging
  name: IMessage
  nameWithType: IMessage
  fullName: Steeltoe.Messaging.IMessage
- uid: Steeltoe.Messaging
  commentId: N:Steeltoe.Messaging
  name: Steeltoe.Messaging
  nameWithType: Steeltoe.Messaging
  fullName: Steeltoe.Messaging
- uid: Steeltoe.Messaging.RabbitMQ.Listener.Exceptions.ListenerExecutionFailedException.FailedMessages*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Listener.Exceptions.ListenerExecutionFailedException.FailedMessages
  name: FailedMessages
  nameWithType: ListenerExecutionFailedException.FailedMessages
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.Exceptions.ListenerExecutionFailedException.FailedMessages
- uid: System.Collections.Generic.List{Steeltoe.Messaging.IMessage}
  commentId: T:System.Collections.Generic.List{Steeltoe.Messaging.IMessage}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<IMessage>
  nameWithType: List<IMessage>
  fullName: System.Collections.Generic.List<Steeltoe.Messaging.IMessage>
  nameWithType.vb: List(Of IMessage)
  fullName.vb: System.Collections.Generic.List(Of Steeltoe.Messaging.IMessage)
  name.vb: List(Of IMessage)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
