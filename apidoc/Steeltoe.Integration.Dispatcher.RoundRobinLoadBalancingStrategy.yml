### YamlMime:ManagedReference
items:
- uid: Steeltoe.Integration.Dispatcher.RoundRobinLoadBalancingStrategy
  commentId: T:Steeltoe.Integration.Dispatcher.RoundRobinLoadBalancingStrategy
  id: RoundRobinLoadBalancingStrategy
  parent: Steeltoe.Integration.Dispatcher
  children:
  - Steeltoe.Integration.Dispatcher.RoundRobinLoadBalancingStrategy.GetNextHandlerStartIndex(Steeltoe.Messaging.IMessage,System.Collections.Generic.List{Steeltoe.Messaging.IMessageHandler})
  langs:
  - csharp
  - vb
  name: RoundRobinLoadBalancingStrategy
  nameWithType: RoundRobinLoadBalancingStrategy
  fullName: Steeltoe.Integration.Dispatcher.RoundRobinLoadBalancingStrategy
  type: Class
  source:
    remote:
      path: src/Integration/src/IntegrationBase/Dispatcher/RoundRobinLoadBalancingStrategy.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: RoundRobinLoadBalancingStrategy
    path: ../Steeltoe/src/Integration/src/IntegrationBase/Dispatcher/RoundRobinLoadBalancingStrategy.cs
    startLine: 10
  assemblies:
  - Steeltoe.Integration.IntegrationBase
  namespace: Steeltoe.Integration.Dispatcher
  syntax:
    content: 'public class RoundRobinLoadBalancingStrategy : ILoadBalancingStrategy'
    content.vb: >-
      Public Class RoundRobinLoadBalancingStrategy

          Implements ILoadBalancingStrategy
  inheritance:
  - System.Object
  implements:
  - Steeltoe.Integration.Dispatcher.ILoadBalancingStrategy
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Steeltoe.Integration.Dispatcher.RoundRobinLoadBalancingStrategy.GetNextHandlerStartIndex(Steeltoe.Messaging.IMessage,System.Collections.Generic.List{Steeltoe.Messaging.IMessageHandler})
  commentId: M:Steeltoe.Integration.Dispatcher.RoundRobinLoadBalancingStrategy.GetNextHandlerStartIndex(Steeltoe.Messaging.IMessage,System.Collections.Generic.List{Steeltoe.Messaging.IMessageHandler})
  id: GetNextHandlerStartIndex(Steeltoe.Messaging.IMessage,System.Collections.Generic.List{Steeltoe.Messaging.IMessageHandler})
  parent: Steeltoe.Integration.Dispatcher.RoundRobinLoadBalancingStrategy
  langs:
  - csharp
  - vb
  name: GetNextHandlerStartIndex(IMessage, List<IMessageHandler>)
  nameWithType: RoundRobinLoadBalancingStrategy.GetNextHandlerStartIndex(IMessage, List<IMessageHandler>)
  fullName: Steeltoe.Integration.Dispatcher.RoundRobinLoadBalancingStrategy.GetNextHandlerStartIndex(Steeltoe.Messaging.IMessage, System.Collections.Generic.List<Steeltoe.Messaging.IMessageHandler>)
  type: Method
  source:
    remote:
      path: src/Integration/src/IntegrationBase/Dispatcher/RoundRobinLoadBalancingStrategy.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: GetNextHandlerStartIndex
    path: ../Steeltoe/src/Integration/src/IntegrationBase/Dispatcher/RoundRobinLoadBalancingStrategy.cs
    startLine: 14
  assemblies:
  - Steeltoe.Integration.IntegrationBase
  namespace: Steeltoe.Integration.Dispatcher
  syntax:
    content: public int GetNextHandlerStartIndex(IMessage message, List<IMessageHandler> handlers)
    parameters:
    - id: message
      type: Steeltoe.Messaging.IMessage
    - id: handlers
      type: System.Collections.Generic.List{Steeltoe.Messaging.IMessageHandler}
    return:
      type: System.Int32
    content.vb: Public Function GetNextHandlerStartIndex(message As IMessage, handlers As List(Of IMessageHandler)) As Integer
  overload: Steeltoe.Integration.Dispatcher.RoundRobinLoadBalancingStrategy.GetNextHandlerStartIndex*
  implements:
  - Steeltoe.Integration.Dispatcher.ILoadBalancingStrategy.GetNextHandlerStartIndex(Steeltoe.Messaging.IMessage,System.Collections.Generic.List{Steeltoe.Messaging.IMessageHandler})
  nameWithType.vb: RoundRobinLoadBalancingStrategy.GetNextHandlerStartIndex(IMessage, List(Of IMessageHandler))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Steeltoe.Integration.Dispatcher.RoundRobinLoadBalancingStrategy.GetNextHandlerStartIndex(Steeltoe.Messaging.IMessage, System.Collections.Generic.List(Of Steeltoe.Messaging.IMessageHandler))
  name.vb: GetNextHandlerStartIndex(IMessage, List(Of IMessageHandler))
references:
- uid: Steeltoe.Integration.Dispatcher
  commentId: N:Steeltoe.Integration.Dispatcher
  name: Steeltoe.Integration.Dispatcher
  nameWithType: Steeltoe.Integration.Dispatcher
  fullName: Steeltoe.Integration.Dispatcher
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Steeltoe.Integration.Dispatcher.ILoadBalancingStrategy
  commentId: T:Steeltoe.Integration.Dispatcher.ILoadBalancingStrategy
  parent: Steeltoe.Integration.Dispatcher
  name: ILoadBalancingStrategy
  nameWithType: ILoadBalancingStrategy
  fullName: Steeltoe.Integration.Dispatcher.ILoadBalancingStrategy
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Steeltoe.Integration.Dispatcher.RoundRobinLoadBalancingStrategy.GetNextHandlerStartIndex*
  commentId: Overload:Steeltoe.Integration.Dispatcher.RoundRobinLoadBalancingStrategy.GetNextHandlerStartIndex
  name: GetNextHandlerStartIndex
  nameWithType: RoundRobinLoadBalancingStrategy.GetNextHandlerStartIndex
  fullName: Steeltoe.Integration.Dispatcher.RoundRobinLoadBalancingStrategy.GetNextHandlerStartIndex
- uid: Steeltoe.Integration.Dispatcher.ILoadBalancingStrategy.GetNextHandlerStartIndex(Steeltoe.Messaging.IMessage,System.Collections.Generic.List{Steeltoe.Messaging.IMessageHandler})
  commentId: M:Steeltoe.Integration.Dispatcher.ILoadBalancingStrategy.GetNextHandlerStartIndex(Steeltoe.Messaging.IMessage,System.Collections.Generic.List{Steeltoe.Messaging.IMessageHandler})
  parent: Steeltoe.Integration.Dispatcher.ILoadBalancingStrategy
  isExternal: true
  name: GetNextHandlerStartIndex(IMessage, List<IMessageHandler>)
  nameWithType: ILoadBalancingStrategy.GetNextHandlerStartIndex(IMessage, List<IMessageHandler>)
  fullName: Steeltoe.Integration.Dispatcher.ILoadBalancingStrategy.GetNextHandlerStartIndex(Steeltoe.Messaging.IMessage, System.Collections.Generic.List<Steeltoe.Messaging.IMessageHandler>)
  nameWithType.vb: ILoadBalancingStrategy.GetNextHandlerStartIndex(IMessage, List(Of IMessageHandler))
  fullName.vb: Steeltoe.Integration.Dispatcher.ILoadBalancingStrategy.GetNextHandlerStartIndex(Steeltoe.Messaging.IMessage, System.Collections.Generic.List(Of Steeltoe.Messaging.IMessageHandler))
  name.vb: GetNextHandlerStartIndex(IMessage, List(Of IMessageHandler))
  spec.csharp:
  - uid: Steeltoe.Integration.Dispatcher.ILoadBalancingStrategy.GetNextHandlerStartIndex(Steeltoe.Messaging.IMessage,System.Collections.Generic.List{Steeltoe.Messaging.IMessageHandler})
    name: GetNextHandlerStartIndex
    nameWithType: ILoadBalancingStrategy.GetNextHandlerStartIndex
    fullName: Steeltoe.Integration.Dispatcher.ILoadBalancingStrategy.GetNextHandlerStartIndex
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Steeltoe.Messaging.IMessageHandler
    name: IMessageHandler
    nameWithType: IMessageHandler
    fullName: Steeltoe.Messaging.IMessageHandler
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Integration.Dispatcher.ILoadBalancingStrategy.GetNextHandlerStartIndex(Steeltoe.Messaging.IMessage,System.Collections.Generic.List{Steeltoe.Messaging.IMessageHandler})
    name: GetNextHandlerStartIndex
    nameWithType: ILoadBalancingStrategy.GetNextHandlerStartIndex
    fullName: Steeltoe.Integration.Dispatcher.ILoadBalancingStrategy.GetNextHandlerStartIndex
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Steeltoe.Messaging.IMessageHandler
    name: IMessageHandler
    nameWithType: IMessageHandler
    fullName: Steeltoe.Messaging.IMessageHandler
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.IMessage
  commentId: T:Steeltoe.Messaging.IMessage
  parent: Steeltoe.Messaging
  name: IMessage
  nameWithType: IMessage
  fullName: Steeltoe.Messaging.IMessage
- uid: System.Collections.Generic.List{Steeltoe.Messaging.IMessageHandler}
  commentId: T:System.Collections.Generic.List{Steeltoe.Messaging.IMessageHandler}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<IMessageHandler>
  nameWithType: List<IMessageHandler>
  fullName: System.Collections.Generic.List<Steeltoe.Messaging.IMessageHandler>
  nameWithType.vb: List(Of IMessageHandler)
  fullName.vb: System.Collections.Generic.List(Of Steeltoe.Messaging.IMessageHandler)
  name.vb: List(Of IMessageHandler)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Steeltoe.Messaging.IMessageHandler
    name: IMessageHandler
    nameWithType: IMessageHandler
    fullName: Steeltoe.Messaging.IMessageHandler
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Steeltoe.Messaging.IMessageHandler
    name: IMessageHandler
    nameWithType: IMessageHandler
    fullName: Steeltoe.Messaging.IMessageHandler
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Steeltoe.Messaging
  commentId: N:Steeltoe.Messaging
  name: Steeltoe.Messaging
  nameWithType: Steeltoe.Messaging
  fullName: Steeltoe.Messaging
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
