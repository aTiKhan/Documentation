### YamlMime:ManagedReference
items:
- uid: Steeltoe.Integration.Util.IntegrationServicesUtils
  commentId: T:Steeltoe.Integration.Util.IntegrationServicesUtils
  id: IntegrationServicesUtils
  parent: Steeltoe.Integration.Util
  children:
  - Steeltoe.Integration.Util.IntegrationServicesUtils.ExtractTypeIfPossible``1(System.Object)
  - Steeltoe.Integration.Util.IntegrationServicesUtils.GetIntegrationServices(Steeltoe.Common.Contexts.IApplicationContext)
  - Steeltoe.Integration.Util.IntegrationServicesUtils.WrapInHandlingExceptionIfNecessary(Steeltoe.Messaging.IMessage,System.String,System.Exception)
  langs:
  - csharp
  - vb
  name: IntegrationServicesUtils
  nameWithType: IntegrationServicesUtils
  fullName: Steeltoe.Integration.Util.IntegrationServicesUtils
  type: Class
  source:
    remote:
      path: src/Integration/src/IntegrationBase/Util/IntegrationServicesUtils.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: IntegrationServicesUtils
    path: ../Steeltoe/src/Integration/src/IntegrationBase/Util/IntegrationServicesUtils.cs
    startLine: 10
  assemblies:
  - Steeltoe.Integration.IntegrationBase
  namespace: Steeltoe.Integration.Util
  syntax:
    content: public static class IntegrationServicesUtils
    content.vb: Public Module IntegrationServicesUtils
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Steeltoe.Integration.Util.IntegrationServicesUtils.ExtractTypeIfPossible``1(System.Object)
  commentId: M:Steeltoe.Integration.Util.IntegrationServicesUtils.ExtractTypeIfPossible``1(System.Object)
  id: ExtractTypeIfPossible``1(System.Object)
  parent: Steeltoe.Integration.Util.IntegrationServicesUtils
  langs:
  - csharp
  - vb
  name: ExtractTypeIfPossible<T>(Object)
  nameWithType: IntegrationServicesUtils.ExtractTypeIfPossible<T>(Object)
  fullName: Steeltoe.Integration.Util.IntegrationServicesUtils.ExtractTypeIfPossible<T>(System.Object)
  type: Method
  source:
    remote:
      path: src/Integration/src/IntegrationBase/Util/IntegrationServicesUtils.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: ExtractTypeIfPossible
    path: ../Steeltoe/src/Integration/src/IntegrationBase/Util/IntegrationServicesUtils.cs
    startLine: 12
  assemblies:
  - Steeltoe.Integration.IntegrationBase
  namespace: Steeltoe.Integration.Util
  syntax:
    content: public static T ExtractTypeIfPossible<T>(object targetObject)
    parameters:
    - id: targetObject
      type: System.Object
    typeParameters:
    - id: T
    return:
      type: '{T}'
    content.vb: Public Shared Function ExtractTypeIfPossible(Of T)(targetObject As Object) As T
  overload: Steeltoe.Integration.Util.IntegrationServicesUtils.ExtractTypeIfPossible*
  nameWithType.vb: IntegrationServicesUtils.ExtractTypeIfPossible(Of T)(Object)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Steeltoe.Integration.Util.IntegrationServicesUtils.ExtractTypeIfPossible(Of T)(System.Object)
  name.vb: ExtractTypeIfPossible(Of T)(Object)
- uid: Steeltoe.Integration.Util.IntegrationServicesUtils.WrapInHandlingExceptionIfNecessary(Steeltoe.Messaging.IMessage,System.String,System.Exception)
  commentId: M:Steeltoe.Integration.Util.IntegrationServicesUtils.WrapInHandlingExceptionIfNecessary(Steeltoe.Messaging.IMessage,System.String,System.Exception)
  id: WrapInHandlingExceptionIfNecessary(Steeltoe.Messaging.IMessage,System.String,System.Exception)
  parent: Steeltoe.Integration.Util.IntegrationServicesUtils
  langs:
  - csharp
  - vb
  name: WrapInHandlingExceptionIfNecessary(IMessage, String, Exception)
  nameWithType: IntegrationServicesUtils.WrapInHandlingExceptionIfNecessary(IMessage, String, Exception)
  fullName: Steeltoe.Integration.Util.IntegrationServicesUtils.WrapInHandlingExceptionIfNecessary(Steeltoe.Messaging.IMessage, System.String, System.Exception)
  type: Method
  source:
    remote:
      path: src/Integration/src/IntegrationBase/Util/IntegrationServicesUtils.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: WrapInHandlingExceptionIfNecessary
    path: ../Steeltoe/src/Integration/src/IntegrationBase/Util/IntegrationServicesUtils.cs
    startLine: 27
  assemblies:
  - Steeltoe.Integration.IntegrationBase
  namespace: Steeltoe.Integration.Util
  syntax:
    content: public static Exception WrapInHandlingExceptionIfNecessary(IMessage message, string text, Exception ex)
    parameters:
    - id: message
      type: Steeltoe.Messaging.IMessage
    - id: text
      type: System.String
    - id: ex
      type: System.Exception
    return:
      type: System.Exception
    content.vb: Public Shared Function WrapInHandlingExceptionIfNecessary(message As IMessage, text As String, ex As Exception) As Exception
  overload: Steeltoe.Integration.Util.IntegrationServicesUtils.WrapInHandlingExceptionIfNecessary*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Steeltoe.Integration.Util.IntegrationServicesUtils.GetIntegrationServices(Steeltoe.Common.Contexts.IApplicationContext)
  commentId: M:Steeltoe.Integration.Util.IntegrationServicesUtils.GetIntegrationServices(Steeltoe.Common.Contexts.IApplicationContext)
  id: GetIntegrationServices(Steeltoe.Common.Contexts.IApplicationContext)
  parent: Steeltoe.Integration.Util.IntegrationServicesUtils
  langs:
  - csharp
  - vb
  name: GetIntegrationServices(IApplicationContext)
  nameWithType: IntegrationServicesUtils.GetIntegrationServices(IApplicationContext)
  fullName: Steeltoe.Integration.Util.IntegrationServicesUtils.GetIntegrationServices(Steeltoe.Common.Contexts.IApplicationContext)
  type: Method
  source:
    remote:
      path: src/Integration/src/IntegrationBase/Util/IntegrationServicesUtils.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: GetIntegrationServices
    path: ../Steeltoe/src/Integration/src/IntegrationBase/Util/IntegrationServicesUtils.cs
    startLine: 37
  assemblies:
  - Steeltoe.Integration.IntegrationBase
  namespace: Steeltoe.Integration.Util
  syntax:
    content: public static IIntegrationServices GetIntegrationServices(IApplicationContext context)
    parameters:
    - id: context
      type: Steeltoe.Common.Contexts.IApplicationContext
    return:
      type: Steeltoe.Integration.IIntegrationServices
    content.vb: Public Shared Function GetIntegrationServices(context As IApplicationContext) As IIntegrationServices
  overload: Steeltoe.Integration.Util.IntegrationServicesUtils.GetIntegrationServices*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Steeltoe.Integration.Util
  commentId: N:Steeltoe.Integration.Util
  name: Steeltoe.Integration.Util
  nameWithType: Steeltoe.Integration.Util
  fullName: Steeltoe.Integration.Util
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Steeltoe.Integration.Util.IntegrationServicesUtils.ExtractTypeIfPossible*
  commentId: Overload:Steeltoe.Integration.Util.IntegrationServicesUtils.ExtractTypeIfPossible
  name: ExtractTypeIfPossible
  nameWithType: IntegrationServicesUtils.ExtractTypeIfPossible
  fullName: Steeltoe.Integration.Util.IntegrationServicesUtils.ExtractTypeIfPossible
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: Steeltoe.Integration.Util.IntegrationServicesUtils.WrapInHandlingExceptionIfNecessary*
  commentId: Overload:Steeltoe.Integration.Util.IntegrationServicesUtils.WrapInHandlingExceptionIfNecessary
  name: WrapInHandlingExceptionIfNecessary
  nameWithType: IntegrationServicesUtils.WrapInHandlingExceptionIfNecessary
  fullName: Steeltoe.Integration.Util.IntegrationServicesUtils.WrapInHandlingExceptionIfNecessary
- uid: Steeltoe.Messaging.IMessage
  commentId: T:Steeltoe.Messaging.IMessage
  parent: Steeltoe.Messaging
  name: IMessage
  nameWithType: IMessage
  fullName: Steeltoe.Messaging.IMessage
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Exception
  commentId: T:System.Exception
  parent: System
  isExternal: true
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: Steeltoe.Messaging
  commentId: N:Steeltoe.Messaging
  name: Steeltoe.Messaging
  nameWithType: Steeltoe.Messaging
  fullName: Steeltoe.Messaging
- uid: Steeltoe.Integration.Util.IntegrationServicesUtils.GetIntegrationServices*
  commentId: Overload:Steeltoe.Integration.Util.IntegrationServicesUtils.GetIntegrationServices
  name: GetIntegrationServices
  nameWithType: IntegrationServicesUtils.GetIntegrationServices
  fullName: Steeltoe.Integration.Util.IntegrationServicesUtils.GetIntegrationServices
- uid: Steeltoe.Common.Contexts.IApplicationContext
  commentId: T:Steeltoe.Common.Contexts.IApplicationContext
  parent: Steeltoe.Common.Contexts
  name: IApplicationContext
  nameWithType: IApplicationContext
  fullName: Steeltoe.Common.Contexts.IApplicationContext
- uid: Steeltoe.Integration.IIntegrationServices
  commentId: T:Steeltoe.Integration.IIntegrationServices
  parent: Steeltoe.Integration
  name: IIntegrationServices
  nameWithType: IIntegrationServices
  fullName: Steeltoe.Integration.IIntegrationServices
- uid: Steeltoe.Common.Contexts
  commentId: N:Steeltoe.Common.Contexts
  name: Steeltoe.Common.Contexts
  nameWithType: Steeltoe.Common.Contexts
  fullName: Steeltoe.Common.Contexts
- uid: Steeltoe.Integration
  commentId: N:Steeltoe.Integration
  name: Steeltoe.Integration
  nameWithType: Steeltoe.Integration
  fullName: Steeltoe.Integration
