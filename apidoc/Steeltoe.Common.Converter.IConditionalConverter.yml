### YamlMime:ManagedReference
items:
- uid: Steeltoe.Common.Converter.IConditionalConverter
  commentId: T:Steeltoe.Common.Converter.IConditionalConverter
  id: IConditionalConverter
  parent: Steeltoe.Common.Converter
  children:
  - Steeltoe.Common.Converter.IConditionalConverter.Matches(System.Type,System.Type)
  langs:
  - csharp
  - vb
  name: IConditionalConverter
  nameWithType: IConditionalConverter
  fullName: Steeltoe.Common.Converter.IConditionalConverter
  type: Interface
  source:
    remote:
      path: src/Common/src/Abstractions/Converter/IConditionalConverter.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: IConditionalConverter
    path: ../Steeltoe/src/Common/src/Abstractions/Converter/IConditionalConverter.cs
    startLine: 11
  assemblies:
  - Steeltoe.Common.Abstractions
  namespace: Steeltoe.Common.Converter
  summary: "\nAllows a converter to conditionally execute based on the types of the source and target\n"
  example: []
  syntax:
    content: public interface IConditionalConverter
    content.vb: Public Interface IConditionalConverter
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Steeltoe.Common.Converter.IConditionalConverter.Matches(System.Type,System.Type)
  commentId: M:Steeltoe.Common.Converter.IConditionalConverter.Matches(System.Type,System.Type)
  id: Matches(System.Type,System.Type)
  parent: Steeltoe.Common.Converter.IConditionalConverter
  langs:
  - csharp
  - vb
  name: Matches(Type, Type)
  nameWithType: IConditionalConverter.Matches(Type, Type)
  fullName: Steeltoe.Common.Converter.IConditionalConverter.Matches(System.Type, System.Type)
  type: Method
  source:
    remote:
      path: src/Common/src/Abstractions/Converter/IConditionalConverter.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Matches
    path: ../Steeltoe/src/Common/src/Abstractions/Converter/IConditionalConverter.cs
    startLine: 19
  assemblies:
  - Steeltoe.Common.Abstractions
  namespace: Steeltoe.Common.Converter
  summary: "\nCan the conversion from source type to target type be performed by this converter\n"
  example: []
  syntax:
    content: bool Matches(Type sourceType, Type targetType)
    parameters:
    - id: sourceType
      type: System.Type
      description: the type of the source object to convert from
    - id: targetType
      type: System.Type
      description: the type of the target object to conver to
    return:
      type: System.Boolean
      description: true if the conversion can be performed
    content.vb: Function Matches(sourceType As Type, targetType As Type) As Boolean
  overload: Steeltoe.Common.Converter.IConditionalConverter.Matches*
references:
- uid: Steeltoe.Common.Converter
  commentId: N:Steeltoe.Common.Converter
  name: Steeltoe.Common.Converter
  nameWithType: Steeltoe.Common.Converter
  fullName: Steeltoe.Common.Converter
- uid: Steeltoe.Common.Converter.IConditionalConverter.Matches*
  commentId: Overload:Steeltoe.Common.Converter.IConditionalConverter.Matches
  name: Matches
  nameWithType: IConditionalConverter.Matches
  fullName: Steeltoe.Common.Converter.IConditionalConverter.Matches
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
