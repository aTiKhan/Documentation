### YamlMime:ManagedReference
items:
- uid: Steeltoe.Messaging.RabbitMQ.Listener.IMessageListenerContainerCollection
  commentId: T:Steeltoe.Messaging.RabbitMQ.Listener.IMessageListenerContainerCollection
  id: IMessageListenerContainerCollection
  parent: Steeltoe.Messaging.RabbitMQ.Listener
  children:
  - Steeltoe.Messaging.RabbitMQ.Listener.IMessageListenerContainerCollection.Containers
  - Steeltoe.Messaging.RabbitMQ.Listener.IMessageListenerContainerCollection.GroupName
  langs:
  - csharp
  - vb
  name: IMessageListenerContainerCollection
  nameWithType: IMessageListenerContainerCollection
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.IMessageListenerContainerCollection
  type: Interface
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Listener/IMessageListenerContainerCollection.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: IMessageListenerContainerCollection
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Listener/IMessageListenerContainerCollection.cs
    startLine: 9
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Listener
  syntax:
    content: 'public interface IMessageListenerContainerCollection : IServiceNameAware'
    content.vb: >-
      Public Interface IMessageListenerContainerCollection

          Inherits IServiceNameAware
  inheritedMembers:
  - Steeltoe.Common.Services.IServiceNameAware.ServiceName
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Steeltoe.Messaging.RabbitMQ.Listener.IMessageListenerContainerCollection.GroupName
  commentId: P:Steeltoe.Messaging.RabbitMQ.Listener.IMessageListenerContainerCollection.GroupName
  id: GroupName
  parent: Steeltoe.Messaging.RabbitMQ.Listener.IMessageListenerContainerCollection
  langs:
  - csharp
  - vb
  name: GroupName
  nameWithType: IMessageListenerContainerCollection.GroupName
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.IMessageListenerContainerCollection.GroupName
  type: Property
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Listener/IMessageListenerContainerCollection.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: GroupName
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Listener/IMessageListenerContainerCollection.cs
    startLine: 11
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Listener
  syntax:
    content: string GroupName { get; }
    parameters: []
    return:
      type: System.String
    content.vb: ReadOnly Property GroupName As String
  overload: Steeltoe.Messaging.RabbitMQ.Listener.IMessageListenerContainerCollection.GroupName*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Steeltoe.Messaging.RabbitMQ.Listener.IMessageListenerContainerCollection.Containers
  commentId: P:Steeltoe.Messaging.RabbitMQ.Listener.IMessageListenerContainerCollection.Containers
  id: Containers
  parent: Steeltoe.Messaging.RabbitMQ.Listener.IMessageListenerContainerCollection
  langs:
  - csharp
  - vb
  name: Containers
  nameWithType: IMessageListenerContainerCollection.Containers
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.IMessageListenerContainerCollection.Containers
  type: Property
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Listener/IMessageListenerContainerCollection.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Containers
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Listener/IMessageListenerContainerCollection.cs
    startLine: 13
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Listener
  syntax:
    content: IList<IMessageListenerContainer> Containers { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IList{Steeltoe.Messaging.RabbitMQ.Listener.IMessageListenerContainer}
    content.vb: ReadOnly Property Containers As IList(Of IMessageListenerContainer)
  overload: Steeltoe.Messaging.RabbitMQ.Listener.IMessageListenerContainerCollection.Containers*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
references:
- uid: Steeltoe.Messaging.RabbitMQ.Listener
  commentId: N:Steeltoe.Messaging.RabbitMQ.Listener
  name: Steeltoe.Messaging.RabbitMQ.Listener
  nameWithType: Steeltoe.Messaging.RabbitMQ.Listener
  fullName: Steeltoe.Messaging.RabbitMQ.Listener
- uid: Steeltoe.Common.Services.IServiceNameAware.ServiceName
  commentId: P:Steeltoe.Common.Services.IServiceNameAware.ServiceName
  parent: Steeltoe.Common.Services.IServiceNameAware
  name: ServiceName
  nameWithType: IServiceNameAware.ServiceName
  fullName: Steeltoe.Common.Services.IServiceNameAware.ServiceName
- uid: Steeltoe.Common.Services.IServiceNameAware
  commentId: T:Steeltoe.Common.Services.IServiceNameAware
  parent: Steeltoe.Common.Services
  name: IServiceNameAware
  nameWithType: IServiceNameAware
  fullName: Steeltoe.Common.Services.IServiceNameAware
- uid: Steeltoe.Common.Services
  commentId: N:Steeltoe.Common.Services
  name: Steeltoe.Common.Services
  nameWithType: Steeltoe.Common.Services
  fullName: Steeltoe.Common.Services
- uid: Steeltoe.Messaging.RabbitMQ.Listener.IMessageListenerContainerCollection.GroupName*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Listener.IMessageListenerContainerCollection.GroupName
  name: GroupName
  nameWithType: IMessageListenerContainerCollection.GroupName
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.IMessageListenerContainerCollection.GroupName
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Steeltoe.Messaging.RabbitMQ.Listener.IMessageListenerContainerCollection.Containers*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Listener.IMessageListenerContainerCollection.Containers
  name: Containers
  nameWithType: IMessageListenerContainerCollection.Containers
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.IMessageListenerContainerCollection.Containers
- uid: System.Collections.Generic.IList{Steeltoe.Messaging.RabbitMQ.Listener.IMessageListenerContainer}
  commentId: T:System.Collections.Generic.IList{Steeltoe.Messaging.RabbitMQ.Listener.IMessageListenerContainer}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<IMessageListenerContainer>
  nameWithType: IList<IMessageListenerContainer>
  fullName: System.Collections.Generic.IList<Steeltoe.Messaging.RabbitMQ.Listener.IMessageListenerContainer>
  nameWithType.vb: IList(Of IMessageListenerContainer)
  fullName.vb: System.Collections.Generic.IList(Of Steeltoe.Messaging.RabbitMQ.Listener.IMessageListenerContainer)
  name.vb: IList(Of IMessageListenerContainer)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Steeltoe.Messaging.RabbitMQ.Listener.IMessageListenerContainer
    name: IMessageListenerContainer
    nameWithType: IMessageListenerContainer
    fullName: Steeltoe.Messaging.RabbitMQ.Listener.IMessageListenerContainer
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Steeltoe.Messaging.RabbitMQ.Listener.IMessageListenerContainer
    name: IMessageListenerContainer
    nameWithType: IMessageListenerContainer
    fullName: Steeltoe.Messaging.RabbitMQ.Listener.IMessageListenerContainer
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullName.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
