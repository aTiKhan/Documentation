### YamlMime:ManagedReference
items:
- uid: Steeltoe.Common.Hosting.HostBuilderExtensions
  commentId: T:Steeltoe.Common.Hosting.HostBuilderExtensions
  id: HostBuilderExtensions
  parent: Steeltoe.Common.Hosting
  children:
  - Steeltoe.Common.Hosting.HostBuilderExtensions.UseCloudHosting(Microsoft.AspNetCore.Hosting.IWebHostBuilder,System.Nullable{System.Int32},System.Nullable{System.Int32})
  - Steeltoe.Common.Hosting.HostBuilderExtensions.UseCloudHosting(Microsoft.Extensions.Hosting.IHostBuilder,System.Nullable{System.Int32},System.Nullable{System.Int32})
  langs:
  - csharp
  - vb
  name: HostBuilderExtensions
  nameWithType: HostBuilderExtensions
  fullName: Steeltoe.Common.Hosting.HostBuilderExtensions
  type: Class
  source:
    remote:
      path: src/Common/src/Common.Hosting/HostBuilderExtensions.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: HostBuilderExtensions
    path: ../Steeltoe/src/Common/src/Common.Hosting/HostBuilderExtensions.cs
    startLine: 11
  assemblies:
  - Steeltoe.Common.Hosting
  namespace: Steeltoe.Common.Hosting
  syntax:
    content: public static class HostBuilderExtensions
    content.vb: Public Module HostBuilderExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Steeltoe.Common.Hosting.HostBuilderExtensions.UseCloudHosting(Microsoft.AspNetCore.Hosting.IWebHostBuilder,System.Nullable{System.Int32},System.Nullable{System.Int32})
  commentId: M:Steeltoe.Common.Hosting.HostBuilderExtensions.UseCloudHosting(Microsoft.AspNetCore.Hosting.IWebHostBuilder,System.Nullable{System.Int32},System.Nullable{System.Int32})
  id: UseCloudHosting(Microsoft.AspNetCore.Hosting.IWebHostBuilder,System.Nullable{System.Int32},System.Nullable{System.Int32})
  isExtensionMethod: true
  parent: Steeltoe.Common.Hosting.HostBuilderExtensions
  langs:
  - csharp
  - vb
  name: UseCloudHosting(IWebHostBuilder, Nullable<Int32>, Nullable<Int32>)
  nameWithType: HostBuilderExtensions.UseCloudHosting(IWebHostBuilder, Nullable<Int32>, Nullable<Int32>)
  fullName: Steeltoe.Common.Hosting.HostBuilderExtensions.UseCloudHosting(Microsoft.AspNetCore.Hosting.IWebHostBuilder, System.Nullable<System.Int32>, System.Nullable<System.Int32>)
  type: Method
  source:
    remote:
      path: src/Common/src/Common.Hosting/HostBuilderExtensions.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: UseCloudHosting
    path: ../Steeltoe/src/Common/src/Common.Hosting/HostBuilderExtensions.cs
    startLine: 21
  assemblies:
  - Steeltoe.Common.Hosting
  namespace: Steeltoe.Common.Hosting
  summary: "\nConfigure the application to listen on port(s) provided by the environment at runtime. Defaults to port 8080.\n"
  remarks: runLocalPort parameter will not be used if an environment variable PORT is found
  example: []
  syntax:
    content: public static IWebHostBuilder UseCloudHosting(this IWebHostBuilder webHostBuilder, int? runLocalHttpPort = default(int? ), int? runLocalHttpsPort = default(int? ))
    parameters:
    - id: webHostBuilder
      type: Microsoft.AspNetCore.Hosting.IWebHostBuilder
      description: Your WebHostBuilder
    - id: runLocalHttpPort
      type: System.Nullable{System.Int32}
      description: Set the Http port number with code so you don&apos;t need to set environment variables locally
    - id: runLocalHttpsPort
      type: System.Nullable{System.Int32}
      description: Set the Https port number with code so you don&apos;t need to set environment variables locally
    return:
      type: Microsoft.AspNetCore.Hosting.IWebHostBuilder
      description: Your HostBuilder, now listening on port(s) found in the environment or passed in
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function UseCloudHosting(webHostBuilder As IWebHostBuilder, runLocalHttpPort As Integer? = Nothing, runLocalHttpsPort As Integer? = Nothing) As IWebHostBuilder
  overload: Steeltoe.Common.Hosting.HostBuilderExtensions.UseCloudHosting*
  nameWithType.vb: HostBuilderExtensions.UseCloudHosting(IWebHostBuilder, Nullable(Of Int32), Nullable(Of Int32))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Steeltoe.Common.Hosting.HostBuilderExtensions.UseCloudHosting(Microsoft.AspNetCore.Hosting.IWebHostBuilder, System.Nullable(Of System.Int32), System.Nullable(Of System.Int32))
  name.vb: UseCloudHosting(IWebHostBuilder, Nullable(Of Int32), Nullable(Of Int32))
- uid: Steeltoe.Common.Hosting.HostBuilderExtensions.UseCloudHosting(Microsoft.Extensions.Hosting.IHostBuilder,System.Nullable{System.Int32},System.Nullable{System.Int32})
  commentId: M:Steeltoe.Common.Hosting.HostBuilderExtensions.UseCloudHosting(Microsoft.Extensions.Hosting.IHostBuilder,System.Nullable{System.Int32},System.Nullable{System.Int32})
  id: UseCloudHosting(Microsoft.Extensions.Hosting.IHostBuilder,System.Nullable{System.Int32},System.Nullable{System.Int32})
  isExtensionMethod: true
  parent: Steeltoe.Common.Hosting.HostBuilderExtensions
  langs:
  - csharp
  - vb
  name: UseCloudHosting(IHostBuilder, Nullable<Int32>, Nullable<Int32>)
  nameWithType: HostBuilderExtensions.UseCloudHosting(IHostBuilder, Nullable<Int32>, Nullable<Int32>)
  fullName: Steeltoe.Common.Hosting.HostBuilderExtensions.UseCloudHosting(Microsoft.Extensions.Hosting.IHostBuilder, System.Nullable<System.Int32>, System.Nullable<System.Int32>)
  type: Method
  source:
    remote:
      path: src/Common/src/Common.Hosting/HostBuilderExtensions.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: UseCloudHosting
    path: ../Steeltoe/src/Common/src/Common.Hosting/HostBuilderExtensions.cs
    startLine: 39
  assemblies:
  - Steeltoe.Common.Hosting
  namespace: Steeltoe.Common.Hosting
  summary: "\nConfigure the application to listen on port(s) provided by the environment at runtime. Defaults to port 8080.\n"
  remarks: runLocalPort parameter will not be used if an environment variable PORT is found
  example: []
  syntax:
    content: public static IHostBuilder UseCloudHosting(this IHostBuilder hostBuilder, int? runLocalHttpPort = default(int? ), int? runLocalHttpsPort = default(int? ))
    parameters:
    - id: hostBuilder
      type: Microsoft.Extensions.Hosting.IHostBuilder
      description: Your HostBuilder
    - id: runLocalHttpPort
      type: System.Nullable{System.Int32}
      description: Set the Http port number with code so you don&apos;t need to set environment variables locally
    - id: runLocalHttpsPort
      type: System.Nullable{System.Int32}
      description: Set the Https port number with code so you don&apos;t need to set environment variables locally
    return:
      type: Microsoft.Extensions.Hosting.IHostBuilder
      description: Your HostBuilder, now listening on port(s) found in the environment or passed in
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function UseCloudHosting(hostBuilder As IHostBuilder, runLocalHttpPort As Integer? = Nothing, runLocalHttpsPort As Integer? = Nothing) As IHostBuilder
  overload: Steeltoe.Common.Hosting.HostBuilderExtensions.UseCloudHosting*
  nameWithType.vb: HostBuilderExtensions.UseCloudHosting(IHostBuilder, Nullable(Of Int32), Nullable(Of Int32))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Steeltoe.Common.Hosting.HostBuilderExtensions.UseCloudHosting(Microsoft.Extensions.Hosting.IHostBuilder, System.Nullable(Of System.Int32), System.Nullable(Of System.Int32))
  name.vb: UseCloudHosting(IHostBuilder, Nullable(Of Int32), Nullable(Of Int32))
references:
- uid: Steeltoe.Common.Hosting
  commentId: N:Steeltoe.Common.Hosting
  name: Steeltoe.Common.Hosting
  nameWithType: Steeltoe.Common.Hosting
  fullName: Steeltoe.Common.Hosting
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Steeltoe.Common.Hosting.HostBuilderExtensions.UseCloudHosting*
  commentId: Overload:Steeltoe.Common.Hosting.HostBuilderExtensions.UseCloudHosting
  name: UseCloudHosting
  nameWithType: HostBuilderExtensions.UseCloudHosting
  fullName: Steeltoe.Common.Hosting.HostBuilderExtensions.UseCloudHosting
- uid: Microsoft.AspNetCore.Hosting.IWebHostBuilder
  commentId: T:Microsoft.AspNetCore.Hosting.IWebHostBuilder
  parent: Microsoft.AspNetCore.Hosting
  isExternal: true
  name: IWebHostBuilder
  nameWithType: IWebHostBuilder
  fullName: Microsoft.AspNetCore.Hosting.IWebHostBuilder
- uid: System.Nullable{System.Int32}
  commentId: T:System.Nullable{System.Int32}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Int32>
  nameWithType: Nullable<Int32>
  fullName: System.Nullable<System.Int32>
  nameWithType.vb: Nullable(Of Int32)
  fullName.vb: System.Nullable(Of System.Int32)
  name.vb: Nullable(Of Int32)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Hosting
  commentId: N:Microsoft.AspNetCore.Hosting
  isExternal: true
  name: Microsoft.AspNetCore.Hosting
  nameWithType: Microsoft.AspNetCore.Hosting
  fullName: Microsoft.AspNetCore.Hosting
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.Hosting.IHostBuilder
  commentId: T:Microsoft.Extensions.Hosting.IHostBuilder
  parent: Microsoft.Extensions.Hosting
  isExternal: true
  name: IHostBuilder
  nameWithType: IHostBuilder
  fullName: Microsoft.Extensions.Hosting.IHostBuilder
- uid: Microsoft.Extensions.Hosting
  commentId: N:Microsoft.Extensions.Hosting
  isExternal: true
  name: Microsoft.Extensions.Hosting
  nameWithType: Microsoft.Extensions.Hosting
  fullName: Microsoft.Extensions.Hosting
