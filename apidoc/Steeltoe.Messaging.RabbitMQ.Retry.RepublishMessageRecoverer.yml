### YamlMime:ManagedReference
items:
- uid: Steeltoe.Messaging.RabbitMQ.Retry.RepublishMessageRecoverer
  commentId: T:Steeltoe.Messaging.RabbitMQ.Retry.RepublishMessageRecoverer
  id: RepublishMessageRecoverer
  parent: Steeltoe.Messaging.RabbitMQ.Retry
  children:
  - Steeltoe.Messaging.RabbitMQ.Retry.RepublishMessageRecoverer.#ctor(Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate,Microsoft.Extensions.Logging.ILogger)
  - Steeltoe.Messaging.RabbitMQ.Retry.RepublishMessageRecoverer.#ctor(Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate,System.String,Microsoft.Extensions.Logging.ILogger)
  - Steeltoe.Messaging.RabbitMQ.Retry.RepublishMessageRecoverer.#ctor(Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate,System.String,System.String,Microsoft.Extensions.Logging.ILogger)
  - Steeltoe.Messaging.RabbitMQ.Retry.RepublishMessageRecoverer.AddAdditionalHeaders(Steeltoe.Messaging.IMessage,System.Exception)
  - Steeltoe.Messaging.RabbitMQ.Retry.RepublishMessageRecoverer.DEFAULT_FRAME_MAX_HEADROOM
  - Steeltoe.Messaging.RabbitMQ.Retry.RepublishMessageRecoverer.DeliveryMode
  - Steeltoe.Messaging.RabbitMQ.Retry.RepublishMessageRecoverer.ErrorExchangeName
  - Steeltoe.Messaging.RabbitMQ.Retry.RepublishMessageRecoverer.ErrorRoutingKey
  - Steeltoe.Messaging.RabbitMQ.Retry.RepublishMessageRecoverer.ErrorRoutingKeyPrefix
  - Steeltoe.Messaging.RabbitMQ.Retry.RepublishMessageRecoverer.ErrorTemplate
  - Steeltoe.Messaging.RabbitMQ.Retry.RepublishMessageRecoverer.FrameMaxHeadroom
  - Steeltoe.Messaging.RabbitMQ.Retry.RepublishMessageRecoverer.MaxStackTraceLength
  - Steeltoe.Messaging.RabbitMQ.Retry.RepublishMessageRecoverer.Recover(Steeltoe.Messaging.IMessage,System.Exception)
  - Steeltoe.Messaging.RabbitMQ.Retry.RepublishMessageRecoverer.X_EXCEPTION_MESSAGE
  - Steeltoe.Messaging.RabbitMQ.Retry.RepublishMessageRecoverer.X_EXCEPTION_STACKTRACE
  - Steeltoe.Messaging.RabbitMQ.Retry.RepublishMessageRecoverer.X_ORIGINAL_EXCHANGE
  - Steeltoe.Messaging.RabbitMQ.Retry.RepublishMessageRecoverer.X_ORIGINAL_ROUTING_KEY
  langs:
  - csharp
  - vb
  name: RepublishMessageRecoverer
  nameWithType: RepublishMessageRecoverer
  fullName: Steeltoe.Messaging.RabbitMQ.Retry.RepublishMessageRecoverer
  type: Class
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Retry/RepublishMessageRecoverer.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: RepublishMessageRecoverer
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Retry/RepublishMessageRecoverer.cs
    startLine: 15
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Retry
  syntax:
    content: 'public class RepublishMessageRecoverer : IMessageRecoverer'
    content.vb: >-
      Public Class RepublishMessageRecoverer

          Implements IMessageRecoverer
  inheritance:
  - System.Object
  implements:
  - Steeltoe.Messaging.RabbitMQ.Retry.IMessageRecoverer
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Steeltoe.Messaging.RabbitMQ.Retry.RepublishMessageRecoverer.X_EXCEPTION_STACKTRACE
  commentId: F:Steeltoe.Messaging.RabbitMQ.Retry.RepublishMessageRecoverer.X_EXCEPTION_STACKTRACE
  id: X_EXCEPTION_STACKTRACE
  parent: Steeltoe.Messaging.RabbitMQ.Retry.RepublishMessageRecoverer
  langs:
  - csharp
  - vb
  name: X_EXCEPTION_STACKTRACE
  nameWithType: RepublishMessageRecoverer.X_EXCEPTION_STACKTRACE
  fullName: Steeltoe.Messaging.RabbitMQ.Retry.RepublishMessageRecoverer.X_EXCEPTION_STACKTRACE
  type: Field
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Retry/RepublishMessageRecoverer.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: X_EXCEPTION_STACKTRACE
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Retry/RepublishMessageRecoverer.cs
    startLine: 17
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Retry
  syntax:
    content: public const string X_EXCEPTION_STACKTRACE = "x-exception-stacktrace"
    return:
      type: System.String
    content.vb: Public Const X_EXCEPTION_STACKTRACE As String = "x-exception-stacktrace"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Steeltoe.Messaging.RabbitMQ.Retry.RepublishMessageRecoverer.X_EXCEPTION_MESSAGE
  commentId: F:Steeltoe.Messaging.RabbitMQ.Retry.RepublishMessageRecoverer.X_EXCEPTION_MESSAGE
  id: X_EXCEPTION_MESSAGE
  parent: Steeltoe.Messaging.RabbitMQ.Retry.RepublishMessageRecoverer
  langs:
  - csharp
  - vb
  name: X_EXCEPTION_MESSAGE
  nameWithType: RepublishMessageRecoverer.X_EXCEPTION_MESSAGE
  fullName: Steeltoe.Messaging.RabbitMQ.Retry.RepublishMessageRecoverer.X_EXCEPTION_MESSAGE
  type: Field
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Retry/RepublishMessageRecoverer.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: X_EXCEPTION_MESSAGE
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Retry/RepublishMessageRecoverer.cs
    startLine: 18
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Retry
  syntax:
    content: public const string X_EXCEPTION_MESSAGE = "x-exception-message"
    return:
      type: System.String
    content.vb: Public Const X_EXCEPTION_MESSAGE As String = "x-exception-message"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Steeltoe.Messaging.RabbitMQ.Retry.RepublishMessageRecoverer.X_ORIGINAL_EXCHANGE
  commentId: F:Steeltoe.Messaging.RabbitMQ.Retry.RepublishMessageRecoverer.X_ORIGINAL_EXCHANGE
  id: X_ORIGINAL_EXCHANGE
  parent: Steeltoe.Messaging.RabbitMQ.Retry.RepublishMessageRecoverer
  langs:
  - csharp
  - vb
  name: X_ORIGINAL_EXCHANGE
  nameWithType: RepublishMessageRecoverer.X_ORIGINAL_EXCHANGE
  fullName: Steeltoe.Messaging.RabbitMQ.Retry.RepublishMessageRecoverer.X_ORIGINAL_EXCHANGE
  type: Field
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Retry/RepublishMessageRecoverer.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: X_ORIGINAL_EXCHANGE
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Retry/RepublishMessageRecoverer.cs
    startLine: 19
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Retry
  syntax:
    content: public const string X_ORIGINAL_EXCHANGE = "x-original-exchange"
    return:
      type: System.String
    content.vb: Public Const X_ORIGINAL_EXCHANGE As String = "x-original-exchange"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Steeltoe.Messaging.RabbitMQ.Retry.RepublishMessageRecoverer.X_ORIGINAL_ROUTING_KEY
  commentId: F:Steeltoe.Messaging.RabbitMQ.Retry.RepublishMessageRecoverer.X_ORIGINAL_ROUTING_KEY
  id: X_ORIGINAL_ROUTING_KEY
  parent: Steeltoe.Messaging.RabbitMQ.Retry.RepublishMessageRecoverer
  langs:
  - csharp
  - vb
  name: X_ORIGINAL_ROUTING_KEY
  nameWithType: RepublishMessageRecoverer.X_ORIGINAL_ROUTING_KEY
  fullName: Steeltoe.Messaging.RabbitMQ.Retry.RepublishMessageRecoverer.X_ORIGINAL_ROUTING_KEY
  type: Field
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Retry/RepublishMessageRecoverer.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: X_ORIGINAL_ROUTING_KEY
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Retry/RepublishMessageRecoverer.cs
    startLine: 20
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Retry
  syntax:
    content: public const string X_ORIGINAL_ROUTING_KEY = "x-original-routingKey"
    return:
      type: System.String
    content.vb: Public Const X_ORIGINAL_ROUTING_KEY As String = "x-original-routingKey"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Steeltoe.Messaging.RabbitMQ.Retry.RepublishMessageRecoverer.DEFAULT_FRAME_MAX_HEADROOM
  commentId: F:Steeltoe.Messaging.RabbitMQ.Retry.RepublishMessageRecoverer.DEFAULT_FRAME_MAX_HEADROOM
  id: DEFAULT_FRAME_MAX_HEADROOM
  parent: Steeltoe.Messaging.RabbitMQ.Retry.RepublishMessageRecoverer
  langs:
  - csharp
  - vb
  name: DEFAULT_FRAME_MAX_HEADROOM
  nameWithType: RepublishMessageRecoverer.DEFAULT_FRAME_MAX_HEADROOM
  fullName: Steeltoe.Messaging.RabbitMQ.Retry.RepublishMessageRecoverer.DEFAULT_FRAME_MAX_HEADROOM
  type: Field
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Retry/RepublishMessageRecoverer.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: DEFAULT_FRAME_MAX_HEADROOM
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Retry/RepublishMessageRecoverer.cs
    startLine: 21
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Retry
  syntax:
    content: public const int DEFAULT_FRAME_MAX_HEADROOM = 20000
    return:
      type: System.Int32
    content.vb: Public Const DEFAULT_FRAME_MAX_HEADROOM As Integer = 20000
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Steeltoe.Messaging.RabbitMQ.Retry.RepublishMessageRecoverer.#ctor(Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate,Microsoft.Extensions.Logging.ILogger)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Retry.RepublishMessageRecoverer.#ctor(Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate,Microsoft.Extensions.Logging.ILogger)
  id: '#ctor(Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate,Microsoft.Extensions.Logging.ILogger)'
  parent: Steeltoe.Messaging.RabbitMQ.Retry.RepublishMessageRecoverer
  langs:
  - csharp
  - vb
  name: RepublishMessageRecoverer(RabbitTemplate, ILogger)
  nameWithType: RepublishMessageRecoverer.RepublishMessageRecoverer(RabbitTemplate, ILogger)
  fullName: Steeltoe.Messaging.RabbitMQ.Retry.RepublishMessageRecoverer.RepublishMessageRecoverer(Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate, Microsoft.Extensions.Logging.ILogger)
  type: Constructor
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Retry/RepublishMessageRecoverer.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: .ctor
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Retry/RepublishMessageRecoverer.cs
    startLine: 28
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Retry
  syntax:
    content: public RepublishMessageRecoverer(RabbitTemplate errorTemplate, ILogger logger = null)
    parameters:
    - id: errorTemplate
      type: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate
    - id: logger
      type: Microsoft.Extensions.Logging.ILogger
    content.vb: Public Sub New(errorTemplate As RabbitTemplate, logger As ILogger = Nothing)
  overload: Steeltoe.Messaging.RabbitMQ.Retry.RepublishMessageRecoverer.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Steeltoe.Messaging.RabbitMQ.Retry.RepublishMessageRecoverer.#ctor(Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate,System.String,Microsoft.Extensions.Logging.ILogger)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Retry.RepublishMessageRecoverer.#ctor(Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate,System.String,Microsoft.Extensions.Logging.ILogger)
  id: '#ctor(Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate,System.String,Microsoft.Extensions.Logging.ILogger)'
  parent: Steeltoe.Messaging.RabbitMQ.Retry.RepublishMessageRecoverer
  langs:
  - csharp
  - vb
  name: RepublishMessageRecoverer(RabbitTemplate, String, ILogger)
  nameWithType: RepublishMessageRecoverer.RepublishMessageRecoverer(RabbitTemplate, String, ILogger)
  fullName: Steeltoe.Messaging.RabbitMQ.Retry.RepublishMessageRecoverer.RepublishMessageRecoverer(Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate, System.String, Microsoft.Extensions.Logging.ILogger)
  type: Constructor
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Retry/RepublishMessageRecoverer.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: .ctor
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Retry/RepublishMessageRecoverer.cs
    startLine: 33
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Retry
  syntax:
    content: public RepublishMessageRecoverer(RabbitTemplate errorTemplate, string errorExchange, ILogger logger = null)
    parameters:
    - id: errorTemplate
      type: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate
    - id: errorExchange
      type: System.String
    - id: logger
      type: Microsoft.Extensions.Logging.ILogger
    content.vb: Public Sub New(errorTemplate As RabbitTemplate, errorExchange As String, logger As ILogger = Nothing)
  overload: Steeltoe.Messaging.RabbitMQ.Retry.RepublishMessageRecoverer.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Steeltoe.Messaging.RabbitMQ.Retry.RepublishMessageRecoverer.#ctor(Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate,System.String,System.String,Microsoft.Extensions.Logging.ILogger)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Retry.RepublishMessageRecoverer.#ctor(Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate,System.String,System.String,Microsoft.Extensions.Logging.ILogger)
  id: '#ctor(Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate,System.String,System.String,Microsoft.Extensions.Logging.ILogger)'
  parent: Steeltoe.Messaging.RabbitMQ.Retry.RepublishMessageRecoverer
  langs:
  - csharp
  - vb
  name: RepublishMessageRecoverer(RabbitTemplate, String, String, ILogger)
  nameWithType: RepublishMessageRecoverer.RepublishMessageRecoverer(RabbitTemplate, String, String, ILogger)
  fullName: Steeltoe.Messaging.RabbitMQ.Retry.RepublishMessageRecoverer.RepublishMessageRecoverer(Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate, System.String, System.String, Microsoft.Extensions.Logging.ILogger)
  type: Constructor
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Retry/RepublishMessageRecoverer.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: .ctor
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Retry/RepublishMessageRecoverer.cs
    startLine: 38
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Retry
  syntax:
    content: public RepublishMessageRecoverer(RabbitTemplate errorTemplate, string errorExchange, string errorRoutingKey, ILogger logger = null)
    parameters:
    - id: errorTemplate
      type: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate
    - id: errorExchange
      type: System.String
    - id: errorRoutingKey
      type: System.String
    - id: logger
      type: Microsoft.Extensions.Logging.ILogger
    content.vb: Public Sub New(errorTemplate As RabbitTemplate, errorExchange As String, errorRoutingKey As String, logger As ILogger = Nothing)
  overload: Steeltoe.Messaging.RabbitMQ.Retry.RepublishMessageRecoverer.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Steeltoe.Messaging.RabbitMQ.Retry.RepublishMessageRecoverer.ErrorTemplate
  commentId: P:Steeltoe.Messaging.RabbitMQ.Retry.RepublishMessageRecoverer.ErrorTemplate
  id: ErrorTemplate
  parent: Steeltoe.Messaging.RabbitMQ.Retry.RepublishMessageRecoverer
  langs:
  - csharp
  - vb
  name: ErrorTemplate
  nameWithType: RepublishMessageRecoverer.ErrorTemplate
  fullName: Steeltoe.Messaging.RabbitMQ.Retry.RepublishMessageRecoverer.ErrorTemplate
  type: Property
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Retry/RepublishMessageRecoverer.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: ErrorTemplate
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Retry/RepublishMessageRecoverer.cs
    startLine: 52
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Retry
  syntax:
    content: public RabbitTemplate ErrorTemplate { get; }
    parameters: []
    return:
      type: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate
    content.vb: Public ReadOnly Property ErrorTemplate As RabbitTemplate
  overload: Steeltoe.Messaging.RabbitMQ.Retry.RepublishMessageRecoverer.ErrorTemplate*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Steeltoe.Messaging.RabbitMQ.Retry.RepublishMessageRecoverer.ErrorExchangeName
  commentId: P:Steeltoe.Messaging.RabbitMQ.Retry.RepublishMessageRecoverer.ErrorExchangeName
  id: ErrorExchangeName
  parent: Steeltoe.Messaging.RabbitMQ.Retry.RepublishMessageRecoverer
  langs:
  - csharp
  - vb
  name: ErrorExchangeName
  nameWithType: RepublishMessageRecoverer.ErrorExchangeName
  fullName: Steeltoe.Messaging.RabbitMQ.Retry.RepublishMessageRecoverer.ErrorExchangeName
  type: Property
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Retry/RepublishMessageRecoverer.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: ErrorExchangeName
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Retry/RepublishMessageRecoverer.cs
    startLine: 54
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Retry
  syntax:
    content: public string ErrorExchangeName { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property ErrorExchangeName As String
  overload: Steeltoe.Messaging.RabbitMQ.Retry.RepublishMessageRecoverer.ErrorExchangeName*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Steeltoe.Messaging.RabbitMQ.Retry.RepublishMessageRecoverer.ErrorRoutingKey
  commentId: P:Steeltoe.Messaging.RabbitMQ.Retry.RepublishMessageRecoverer.ErrorRoutingKey
  id: ErrorRoutingKey
  parent: Steeltoe.Messaging.RabbitMQ.Retry.RepublishMessageRecoverer
  langs:
  - csharp
  - vb
  name: ErrorRoutingKey
  nameWithType: RepublishMessageRecoverer.ErrorRoutingKey
  fullName: Steeltoe.Messaging.RabbitMQ.Retry.RepublishMessageRecoverer.ErrorRoutingKey
  type: Property
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Retry/RepublishMessageRecoverer.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: ErrorRoutingKey
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Retry/RepublishMessageRecoverer.cs
    startLine: 56
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Retry
  syntax:
    content: public string ErrorRoutingKey { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property ErrorRoutingKey As String
  overload: Steeltoe.Messaging.RabbitMQ.Retry.RepublishMessageRecoverer.ErrorRoutingKey*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Steeltoe.Messaging.RabbitMQ.Retry.RepublishMessageRecoverer.MaxStackTraceLength
  commentId: P:Steeltoe.Messaging.RabbitMQ.Retry.RepublishMessageRecoverer.MaxStackTraceLength
  id: MaxStackTraceLength
  parent: Steeltoe.Messaging.RabbitMQ.Retry.RepublishMessageRecoverer
  langs:
  - csharp
  - vb
  name: MaxStackTraceLength
  nameWithType: RepublishMessageRecoverer.MaxStackTraceLength
  fullName: Steeltoe.Messaging.RabbitMQ.Retry.RepublishMessageRecoverer.MaxStackTraceLength
  type: Property
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Retry/RepublishMessageRecoverer.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: MaxStackTraceLength
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Retry/RepublishMessageRecoverer.cs
    startLine: 58
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Retry
  syntax:
    content: public int MaxStackTraceLength { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property MaxStackTraceLength As Integer
  overload: Steeltoe.Messaging.RabbitMQ.Retry.RepublishMessageRecoverer.MaxStackTraceLength*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Steeltoe.Messaging.RabbitMQ.Retry.RepublishMessageRecoverer.ErrorRoutingKeyPrefix
  commentId: P:Steeltoe.Messaging.RabbitMQ.Retry.RepublishMessageRecoverer.ErrorRoutingKeyPrefix
  id: ErrorRoutingKeyPrefix
  parent: Steeltoe.Messaging.RabbitMQ.Retry.RepublishMessageRecoverer
  langs:
  - csharp
  - vb
  name: ErrorRoutingKeyPrefix
  nameWithType: RepublishMessageRecoverer.ErrorRoutingKeyPrefix
  fullName: Steeltoe.Messaging.RabbitMQ.Retry.RepublishMessageRecoverer.ErrorRoutingKeyPrefix
  type: Property
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Retry/RepublishMessageRecoverer.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: ErrorRoutingKeyPrefix
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Retry/RepublishMessageRecoverer.cs
    startLine: 60
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Retry
  syntax:
    content: public string ErrorRoutingKeyPrefix { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property ErrorRoutingKeyPrefix As String
  overload: Steeltoe.Messaging.RabbitMQ.Retry.RepublishMessageRecoverer.ErrorRoutingKeyPrefix*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Steeltoe.Messaging.RabbitMQ.Retry.RepublishMessageRecoverer.DeliveryMode
  commentId: P:Steeltoe.Messaging.RabbitMQ.Retry.RepublishMessageRecoverer.DeliveryMode
  id: DeliveryMode
  parent: Steeltoe.Messaging.RabbitMQ.Retry.RepublishMessageRecoverer
  langs:
  - csharp
  - vb
  name: DeliveryMode
  nameWithType: RepublishMessageRecoverer.DeliveryMode
  fullName: Steeltoe.Messaging.RabbitMQ.Retry.RepublishMessageRecoverer.DeliveryMode
  type: Property
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Retry/RepublishMessageRecoverer.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: DeliveryMode
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Retry/RepublishMessageRecoverer.cs
    startLine: 62
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Retry
  syntax:
    content: public MessageDeliveryMode DeliveryMode { get; set; }
    parameters: []
    return:
      type: Steeltoe.Messaging.RabbitMQ.Core.MessageDeliveryMode
    content.vb: Public Property DeliveryMode As MessageDeliveryMode
  overload: Steeltoe.Messaging.RabbitMQ.Retry.RepublishMessageRecoverer.DeliveryMode*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Steeltoe.Messaging.RabbitMQ.Retry.RepublishMessageRecoverer.FrameMaxHeadroom
  commentId: P:Steeltoe.Messaging.RabbitMQ.Retry.RepublishMessageRecoverer.FrameMaxHeadroom
  id: FrameMaxHeadroom
  parent: Steeltoe.Messaging.RabbitMQ.Retry.RepublishMessageRecoverer
  langs:
  - csharp
  - vb
  name: FrameMaxHeadroom
  nameWithType: RepublishMessageRecoverer.FrameMaxHeadroom
  fullName: Steeltoe.Messaging.RabbitMQ.Retry.RepublishMessageRecoverer.FrameMaxHeadroom
  type: Property
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Retry/RepublishMessageRecoverer.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: FrameMaxHeadroom
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Retry/RepublishMessageRecoverer.cs
    startLine: 64
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Retry
  syntax:
    content: public int FrameMaxHeadroom { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property FrameMaxHeadroom As Integer
  overload: Steeltoe.Messaging.RabbitMQ.Retry.RepublishMessageRecoverer.FrameMaxHeadroom*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Steeltoe.Messaging.RabbitMQ.Retry.RepublishMessageRecoverer.Recover(Steeltoe.Messaging.IMessage,System.Exception)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Retry.RepublishMessageRecoverer.Recover(Steeltoe.Messaging.IMessage,System.Exception)
  id: Recover(Steeltoe.Messaging.IMessage,System.Exception)
  parent: Steeltoe.Messaging.RabbitMQ.Retry.RepublishMessageRecoverer
  langs:
  - csharp
  - vb
  name: Recover(IMessage, Exception)
  nameWithType: RepublishMessageRecoverer.Recover(IMessage, Exception)
  fullName: Steeltoe.Messaging.RabbitMQ.Retry.RepublishMessageRecoverer.Recover(Steeltoe.Messaging.IMessage, System.Exception)
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Retry/RepublishMessageRecoverer.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Recover
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Retry/RepublishMessageRecoverer.cs
    startLine: 66
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Retry
  syntax:
    content: public void Recover(IMessage message, Exception exception)
    parameters:
    - id: message
      type: Steeltoe.Messaging.IMessage
    - id: exception
      type: System.Exception
    content.vb: Public Sub Recover(message As IMessage, exception As Exception)
  overload: Steeltoe.Messaging.RabbitMQ.Retry.RepublishMessageRecoverer.Recover*
  implements:
  - Steeltoe.Messaging.RabbitMQ.Retry.IMessageRecoverer.Recover(Steeltoe.Messaging.IMessage,System.Exception)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Steeltoe.Messaging.RabbitMQ.Retry.RepublishMessageRecoverer.AddAdditionalHeaders(Steeltoe.Messaging.IMessage,System.Exception)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Retry.RepublishMessageRecoverer.AddAdditionalHeaders(Steeltoe.Messaging.IMessage,System.Exception)
  id: AddAdditionalHeaders(Steeltoe.Messaging.IMessage,System.Exception)
  parent: Steeltoe.Messaging.RabbitMQ.Retry.RepublishMessageRecoverer
  langs:
  - csharp
  - vb
  name: AddAdditionalHeaders(IMessage, Exception)
  nameWithType: RepublishMessageRecoverer.AddAdditionalHeaders(IMessage, Exception)
  fullName: Steeltoe.Messaging.RabbitMQ.Retry.RepublishMessageRecoverer.AddAdditionalHeaders(Steeltoe.Messaging.IMessage, System.Exception)
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Retry/RepublishMessageRecoverer.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: AddAdditionalHeaders
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Retry/RepublishMessageRecoverer.cs
    startLine: 114
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Retry
  syntax:
    content: protected virtual Dictionary<string, object> AddAdditionalHeaders(IMessage message, Exception cause)
    parameters:
    - id: message
      type: Steeltoe.Messaging.IMessage
    - id: cause
      type: System.Exception
    return:
      type: System.Collections.Generic.Dictionary{System.String,System.Object}
    content.vb: Protected Overridable Function AddAdditionalHeaders(message As IMessage, cause As Exception) As Dictionary(Of String, Object)
  overload: Steeltoe.Messaging.RabbitMQ.Retry.RepublishMessageRecoverer.AddAdditionalHeaders*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
references:
- uid: Steeltoe.Messaging.RabbitMQ.Retry
  commentId: N:Steeltoe.Messaging.RabbitMQ.Retry
  name: Steeltoe.Messaging.RabbitMQ.Retry
  nameWithType: Steeltoe.Messaging.RabbitMQ.Retry
  fullName: Steeltoe.Messaging.RabbitMQ.Retry
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Steeltoe.Messaging.RabbitMQ.Retry.IMessageRecoverer
  commentId: T:Steeltoe.Messaging.RabbitMQ.Retry.IMessageRecoverer
  parent: Steeltoe.Messaging.RabbitMQ.Retry
  name: IMessageRecoverer
  nameWithType: IMessageRecoverer
  fullName: Steeltoe.Messaging.RabbitMQ.Retry.IMessageRecoverer
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Steeltoe.Messaging.RabbitMQ.Retry.RepublishMessageRecoverer.#ctor*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Retry.RepublishMessageRecoverer.#ctor
  name: RepublishMessageRecoverer
  nameWithType: RepublishMessageRecoverer.RepublishMessageRecoverer
  fullName: Steeltoe.Messaging.RabbitMQ.Retry.RepublishMessageRecoverer.RepublishMessageRecoverer
- uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate
  commentId: T:Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate
  parent: Steeltoe.Messaging.RabbitMQ.Core
  name: RabbitTemplate
  nameWithType: RabbitTemplate
  fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate
- uid: Microsoft.Extensions.Logging.ILogger
  commentId: T:Microsoft.Extensions.Logging.ILogger
  parent: Microsoft.Extensions.Logging
  isExternal: true
  name: ILogger
  nameWithType: ILogger
  fullName: Microsoft.Extensions.Logging.ILogger
- uid: Steeltoe.Messaging.RabbitMQ.Core
  commentId: N:Steeltoe.Messaging.RabbitMQ.Core
  name: Steeltoe.Messaging.RabbitMQ.Core
  nameWithType: Steeltoe.Messaging.RabbitMQ.Core
  fullName: Steeltoe.Messaging.RabbitMQ.Core
- uid: Microsoft.Extensions.Logging
  commentId: N:Microsoft.Extensions.Logging
  isExternal: true
  name: Microsoft.Extensions.Logging
  nameWithType: Microsoft.Extensions.Logging
  fullName: Microsoft.Extensions.Logging
- uid: Steeltoe.Messaging.RabbitMQ.Retry.RepublishMessageRecoverer.ErrorTemplate*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Retry.RepublishMessageRecoverer.ErrorTemplate
  name: ErrorTemplate
  nameWithType: RepublishMessageRecoverer.ErrorTemplate
  fullName: Steeltoe.Messaging.RabbitMQ.Retry.RepublishMessageRecoverer.ErrorTemplate
- uid: Steeltoe.Messaging.RabbitMQ.Retry.RepublishMessageRecoverer.ErrorExchangeName*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Retry.RepublishMessageRecoverer.ErrorExchangeName
  name: ErrorExchangeName
  nameWithType: RepublishMessageRecoverer.ErrorExchangeName
  fullName: Steeltoe.Messaging.RabbitMQ.Retry.RepublishMessageRecoverer.ErrorExchangeName
- uid: Steeltoe.Messaging.RabbitMQ.Retry.RepublishMessageRecoverer.ErrorRoutingKey*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Retry.RepublishMessageRecoverer.ErrorRoutingKey
  name: ErrorRoutingKey
  nameWithType: RepublishMessageRecoverer.ErrorRoutingKey
  fullName: Steeltoe.Messaging.RabbitMQ.Retry.RepublishMessageRecoverer.ErrorRoutingKey
- uid: Steeltoe.Messaging.RabbitMQ.Retry.RepublishMessageRecoverer.MaxStackTraceLength*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Retry.RepublishMessageRecoverer.MaxStackTraceLength
  name: MaxStackTraceLength
  nameWithType: RepublishMessageRecoverer.MaxStackTraceLength
  fullName: Steeltoe.Messaging.RabbitMQ.Retry.RepublishMessageRecoverer.MaxStackTraceLength
- uid: Steeltoe.Messaging.RabbitMQ.Retry.RepublishMessageRecoverer.ErrorRoutingKeyPrefix*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Retry.RepublishMessageRecoverer.ErrorRoutingKeyPrefix
  name: ErrorRoutingKeyPrefix
  nameWithType: RepublishMessageRecoverer.ErrorRoutingKeyPrefix
  fullName: Steeltoe.Messaging.RabbitMQ.Retry.RepublishMessageRecoverer.ErrorRoutingKeyPrefix
- uid: Steeltoe.Messaging.RabbitMQ.Retry.RepublishMessageRecoverer.DeliveryMode*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Retry.RepublishMessageRecoverer.DeliveryMode
  name: DeliveryMode
  nameWithType: RepublishMessageRecoverer.DeliveryMode
  fullName: Steeltoe.Messaging.RabbitMQ.Retry.RepublishMessageRecoverer.DeliveryMode
- uid: Steeltoe.Messaging.RabbitMQ.Core.MessageDeliveryMode
  commentId: T:Steeltoe.Messaging.RabbitMQ.Core.MessageDeliveryMode
  parent: Steeltoe.Messaging.RabbitMQ.Core
  name: MessageDeliveryMode
  nameWithType: MessageDeliveryMode
  fullName: Steeltoe.Messaging.RabbitMQ.Core.MessageDeliveryMode
- uid: Steeltoe.Messaging.RabbitMQ.Retry.RepublishMessageRecoverer.FrameMaxHeadroom*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Retry.RepublishMessageRecoverer.FrameMaxHeadroom
  name: FrameMaxHeadroom
  nameWithType: RepublishMessageRecoverer.FrameMaxHeadroom
  fullName: Steeltoe.Messaging.RabbitMQ.Retry.RepublishMessageRecoverer.FrameMaxHeadroom
- uid: Steeltoe.Messaging.RabbitMQ.Retry.RepublishMessageRecoverer.Recover*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Retry.RepublishMessageRecoverer.Recover
  name: Recover
  nameWithType: RepublishMessageRecoverer.Recover
  fullName: Steeltoe.Messaging.RabbitMQ.Retry.RepublishMessageRecoverer.Recover
- uid: Steeltoe.Messaging.RabbitMQ.Retry.IMessageRecoverer.Recover(Steeltoe.Messaging.IMessage,System.Exception)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Retry.IMessageRecoverer.Recover(Steeltoe.Messaging.IMessage,System.Exception)
  parent: Steeltoe.Messaging.RabbitMQ.Retry.IMessageRecoverer
  isExternal: true
  name: Recover(IMessage, Exception)
  nameWithType: IMessageRecoverer.Recover(IMessage, Exception)
  fullName: Steeltoe.Messaging.RabbitMQ.Retry.IMessageRecoverer.Recover(Steeltoe.Messaging.IMessage, System.Exception)
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Retry.IMessageRecoverer.Recover(Steeltoe.Messaging.IMessage,System.Exception)
    name: Recover
    nameWithType: IMessageRecoverer.Recover
    fullName: Steeltoe.Messaging.RabbitMQ.Retry.IMessageRecoverer.Recover
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Retry.IMessageRecoverer.Recover(Steeltoe.Messaging.IMessage,System.Exception)
    name: Recover
    nameWithType: IMessageRecoverer.Recover
    fullName: Steeltoe.Messaging.RabbitMQ.Retry.IMessageRecoverer.Recover
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.IMessage
  commentId: T:Steeltoe.Messaging.IMessage
  parent: Steeltoe.Messaging
  name: IMessage
  nameWithType: IMessage
  fullName: Steeltoe.Messaging.IMessage
- uid: System.Exception
  commentId: T:System.Exception
  parent: System
  isExternal: true
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: Steeltoe.Messaging
  commentId: N:Steeltoe.Messaging
  name: Steeltoe.Messaging
  nameWithType: Steeltoe.Messaging
  fullName: Steeltoe.Messaging
- uid: Steeltoe.Messaging.RabbitMQ.Retry.RepublishMessageRecoverer.AddAdditionalHeaders*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Retry.RepublishMessageRecoverer.AddAdditionalHeaders
  name: AddAdditionalHeaders
  nameWithType: RepublishMessageRecoverer.AddAdditionalHeaders
  fullName: Steeltoe.Messaging.RabbitMQ.Retry.RepublishMessageRecoverer.AddAdditionalHeaders
- uid: System.Collections.Generic.Dictionary{System.String,System.Object}
  commentId: T:System.Collections.Generic.Dictionary{System.String,System.Object}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  name: Dictionary<String, Object>
  nameWithType: Dictionary<String, Object>
  fullName: System.Collections.Generic.Dictionary<System.String, System.Object>
  nameWithType.vb: Dictionary(Of String, Object)
  fullName.vb: System.Collections.Generic.Dictionary(Of System.String, System.Object)
  name.vb: Dictionary(Of String, Object)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Dictionary`2
  commentId: T:System.Collections.Generic.Dictionary`2
  isExternal: true
  name: Dictionary<TKey, TValue>
  nameWithType: Dictionary<TKey, TValue>
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>
  nameWithType.vb: Dictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue)
  name.vb: Dictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
