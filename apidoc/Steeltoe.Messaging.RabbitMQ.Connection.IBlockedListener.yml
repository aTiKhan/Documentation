### YamlMime:ManagedReference
items:
- uid: Steeltoe.Messaging.RabbitMQ.Connection.IBlockedListener
  commentId: T:Steeltoe.Messaging.RabbitMQ.Connection.IBlockedListener
  id: IBlockedListener
  parent: Steeltoe.Messaging.RabbitMQ.Connection
  children:
  - Steeltoe.Messaging.RabbitMQ.Connection.IBlockedListener.HandleBlocked(System.Object,RabbitMQ.Client.Events.ConnectionBlockedEventArgs)
  - Steeltoe.Messaging.RabbitMQ.Connection.IBlockedListener.HandleUnblocked(System.Object,System.EventArgs)
  langs:
  - csharp
  - vb
  name: IBlockedListener
  nameWithType: IBlockedListener
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.IBlockedListener
  type: Interface
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Connection/IBlockedListener.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: IBlockedListener
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Connection/IBlockedListener.cs
    startLine: 9
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Connection
  syntax:
    content: public interface IBlockedListener
    content.vb: Public Interface IBlockedListener
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Steeltoe.Messaging.RabbitMQ.Connection.IBlockedListener.HandleBlocked(System.Object,RabbitMQ.Client.Events.ConnectionBlockedEventArgs)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Connection.IBlockedListener.HandleBlocked(System.Object,RabbitMQ.Client.Events.ConnectionBlockedEventArgs)
  id: HandleBlocked(System.Object,RabbitMQ.Client.Events.ConnectionBlockedEventArgs)
  parent: Steeltoe.Messaging.RabbitMQ.Connection.IBlockedListener
  langs:
  - csharp
  - vb
  name: HandleBlocked(Object, ConnectionBlockedEventArgs)
  nameWithType: IBlockedListener.HandleBlocked(Object, ConnectionBlockedEventArgs)
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.IBlockedListener.HandleBlocked(System.Object, RabbitMQ.Client.Events.ConnectionBlockedEventArgs)
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Connection/IBlockedListener.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: HandleBlocked
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Connection/IBlockedListener.cs
    startLine: 11
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Connection
  syntax:
    content: void HandleBlocked(object sender, ConnectionBlockedEventArgs args)
    parameters:
    - id: sender
      type: System.Object
    - id: args
      type: RabbitMQ.Client.Events.ConnectionBlockedEventArgs
    content.vb: Sub HandleBlocked(sender As Object, args As ConnectionBlockedEventArgs)
  overload: Steeltoe.Messaging.RabbitMQ.Connection.IBlockedListener.HandleBlocked*
- uid: Steeltoe.Messaging.RabbitMQ.Connection.IBlockedListener.HandleUnblocked(System.Object,System.EventArgs)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Connection.IBlockedListener.HandleUnblocked(System.Object,System.EventArgs)
  id: HandleUnblocked(System.Object,System.EventArgs)
  parent: Steeltoe.Messaging.RabbitMQ.Connection.IBlockedListener
  langs:
  - csharp
  - vb
  name: HandleUnblocked(Object, EventArgs)
  nameWithType: IBlockedListener.HandleUnblocked(Object, EventArgs)
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.IBlockedListener.HandleUnblocked(System.Object, System.EventArgs)
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Connection/IBlockedListener.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: HandleUnblocked
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Connection/IBlockedListener.cs
    startLine: 13
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Connection
  syntax:
    content: void HandleUnblocked(object sender, EventArgs args)
    parameters:
    - id: sender
      type: System.Object
    - id: args
      type: System.EventArgs
    content.vb: Sub HandleUnblocked(sender As Object, args As EventArgs)
  overload: Steeltoe.Messaging.RabbitMQ.Connection.IBlockedListener.HandleUnblocked*
references:
- uid: Steeltoe.Messaging.RabbitMQ.Connection
  commentId: N:Steeltoe.Messaging.RabbitMQ.Connection
  name: Steeltoe.Messaging.RabbitMQ.Connection
  nameWithType: Steeltoe.Messaging.RabbitMQ.Connection
  fullName: Steeltoe.Messaging.RabbitMQ.Connection
- uid: Steeltoe.Messaging.RabbitMQ.Connection.IBlockedListener.HandleBlocked*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Connection.IBlockedListener.HandleBlocked
  name: HandleBlocked
  nameWithType: IBlockedListener.HandleBlocked
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.IBlockedListener.HandleBlocked
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: RabbitMQ.Client.Events.ConnectionBlockedEventArgs
  commentId: T:RabbitMQ.Client.Events.ConnectionBlockedEventArgs
  parent: RabbitMQ.Client.Events
  isExternal: true
  name: ConnectionBlockedEventArgs
  nameWithType: ConnectionBlockedEventArgs
  fullName: RabbitMQ.Client.Events.ConnectionBlockedEventArgs
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: RabbitMQ.Client.Events
  commentId: N:RabbitMQ.Client.Events
  isExternal: true
  name: RabbitMQ.Client.Events
  nameWithType: RabbitMQ.Client.Events
  fullName: RabbitMQ.Client.Events
- uid: Steeltoe.Messaging.RabbitMQ.Connection.IBlockedListener.HandleUnblocked*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Connection.IBlockedListener.HandleUnblocked
  name: HandleUnblocked
  nameWithType: IBlockedListener.HandleUnblocked
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.IBlockedListener.HandleUnblocked
- uid: System.EventArgs
  commentId: T:System.EventArgs
  parent: System
  isExternal: true
  name: EventArgs
  nameWithType: EventArgs
  fullName: System.EventArgs
