### YamlMime:ManagedReference
items:
- uid: Steeltoe.CircuitBreaker.Hystrix.Strategy.Concurrency.IHystrixTaskScheduler
  commentId: T:Steeltoe.CircuitBreaker.Hystrix.Strategy.Concurrency.IHystrixTaskScheduler
  id: IHystrixTaskScheduler
  parent: Steeltoe.CircuitBreaker.Hystrix.Strategy.Concurrency
  children:
  - Steeltoe.CircuitBreaker.Hystrix.Strategy.Concurrency.IHystrixTaskScheduler.CorePoolSize
  - Steeltoe.CircuitBreaker.Hystrix.Strategy.Concurrency.IHystrixTaskScheduler.CurrentActiveCount
  - Steeltoe.CircuitBreaker.Hystrix.Strategy.Concurrency.IHystrixTaskScheduler.CurrentCompletedTaskCount
  - Steeltoe.CircuitBreaker.Hystrix.Strategy.Concurrency.IHystrixTaskScheduler.CurrentCorePoolSize
  - Steeltoe.CircuitBreaker.Hystrix.Strategy.Concurrency.IHystrixTaskScheduler.CurrentLargestPoolSize
  - Steeltoe.CircuitBreaker.Hystrix.Strategy.Concurrency.IHystrixTaskScheduler.CurrentMaximumPoolSize
  - Steeltoe.CircuitBreaker.Hystrix.Strategy.Concurrency.IHystrixTaskScheduler.CurrentPoolSize
  - Steeltoe.CircuitBreaker.Hystrix.Strategy.Concurrency.IHystrixTaskScheduler.CurrentQueueSize
  - Steeltoe.CircuitBreaker.Hystrix.Strategy.Concurrency.IHystrixTaskScheduler.CurrentTaskCount
  - Steeltoe.CircuitBreaker.Hystrix.Strategy.Concurrency.IHystrixTaskScheduler.IsQueueSpaceAvailable
  - Steeltoe.CircuitBreaker.Hystrix.Strategy.Concurrency.IHystrixTaskScheduler.IsShutdown
  - Steeltoe.CircuitBreaker.Hystrix.Strategy.Concurrency.IHystrixTaskScheduler.KeepAliveTime
  - Steeltoe.CircuitBreaker.Hystrix.Strategy.Concurrency.IHystrixTaskScheduler.MaximumPoolSize
  langs:
  - csharp
  - vb
  name: IHystrixTaskScheduler
  nameWithType: IHystrixTaskScheduler
  fullName: Steeltoe.CircuitBreaker.Hystrix.Strategy.Concurrency.IHystrixTaskScheduler
  type: Interface
  source:
    remote:
      path: src/CircuitBreaker/src/HystrixBase/Strategy/Concurrency/IHystrixTaskScheduler.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: IHystrixTaskScheduler
    path: ../Steeltoe/src/CircuitBreaker/src/HystrixBase/Strategy/Concurrency/IHystrixTaskScheduler.cs
    startLine: 8
  assemblies:
  - Steeltoe.CircuitBreaker.HystrixBase
  namespace: Steeltoe.CircuitBreaker.Hystrix.Strategy.Concurrency
  syntax:
    content: 'public interface IHystrixTaskScheduler : IDisposable'
    content.vb: >-
      Public Interface IHystrixTaskScheduler

          Inherits IDisposable
  inheritedMembers:
  - System.IDisposable.Dispose
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Steeltoe.CircuitBreaker.Hystrix.Strategy.Concurrency.IHystrixTaskScheduler.CurrentActiveCount
  commentId: P:Steeltoe.CircuitBreaker.Hystrix.Strategy.Concurrency.IHystrixTaskScheduler.CurrentActiveCount
  id: CurrentActiveCount
  parent: Steeltoe.CircuitBreaker.Hystrix.Strategy.Concurrency.IHystrixTaskScheduler
  langs:
  - csharp
  - vb
  name: CurrentActiveCount
  nameWithType: IHystrixTaskScheduler.CurrentActiveCount
  fullName: Steeltoe.CircuitBreaker.Hystrix.Strategy.Concurrency.IHystrixTaskScheduler.CurrentActiveCount
  type: Property
  source:
    remote:
      path: src/CircuitBreaker/src/HystrixBase/Strategy/Concurrency/IHystrixTaskScheduler.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: CurrentActiveCount
    path: ../Steeltoe/src/CircuitBreaker/src/HystrixBase/Strategy/Concurrency/IHystrixTaskScheduler.cs
    startLine: 10
  assemblies:
  - Steeltoe.CircuitBreaker.HystrixBase
  namespace: Steeltoe.CircuitBreaker.Hystrix.Strategy.Concurrency
  syntax:
    content: int CurrentActiveCount { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: ReadOnly Property CurrentActiveCount As Integer
  overload: Steeltoe.CircuitBreaker.Hystrix.Strategy.Concurrency.IHystrixTaskScheduler.CurrentActiveCount*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Steeltoe.CircuitBreaker.Hystrix.Strategy.Concurrency.IHystrixTaskScheduler.CurrentCompletedTaskCount
  commentId: P:Steeltoe.CircuitBreaker.Hystrix.Strategy.Concurrency.IHystrixTaskScheduler.CurrentCompletedTaskCount
  id: CurrentCompletedTaskCount
  parent: Steeltoe.CircuitBreaker.Hystrix.Strategy.Concurrency.IHystrixTaskScheduler
  langs:
  - csharp
  - vb
  name: CurrentCompletedTaskCount
  nameWithType: IHystrixTaskScheduler.CurrentCompletedTaskCount
  fullName: Steeltoe.CircuitBreaker.Hystrix.Strategy.Concurrency.IHystrixTaskScheduler.CurrentCompletedTaskCount
  type: Property
  source:
    remote:
      path: src/CircuitBreaker/src/HystrixBase/Strategy/Concurrency/IHystrixTaskScheduler.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: CurrentCompletedTaskCount
    path: ../Steeltoe/src/CircuitBreaker/src/HystrixBase/Strategy/Concurrency/IHystrixTaskScheduler.cs
    startLine: 12
  assemblies:
  - Steeltoe.CircuitBreaker.HystrixBase
  namespace: Steeltoe.CircuitBreaker.Hystrix.Strategy.Concurrency
  syntax:
    content: int CurrentCompletedTaskCount { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: ReadOnly Property CurrentCompletedTaskCount As Integer
  overload: Steeltoe.CircuitBreaker.Hystrix.Strategy.Concurrency.IHystrixTaskScheduler.CurrentCompletedTaskCount*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Steeltoe.CircuitBreaker.Hystrix.Strategy.Concurrency.IHystrixTaskScheduler.CurrentCorePoolSize
  commentId: P:Steeltoe.CircuitBreaker.Hystrix.Strategy.Concurrency.IHystrixTaskScheduler.CurrentCorePoolSize
  id: CurrentCorePoolSize
  parent: Steeltoe.CircuitBreaker.Hystrix.Strategy.Concurrency.IHystrixTaskScheduler
  langs:
  - csharp
  - vb
  name: CurrentCorePoolSize
  nameWithType: IHystrixTaskScheduler.CurrentCorePoolSize
  fullName: Steeltoe.CircuitBreaker.Hystrix.Strategy.Concurrency.IHystrixTaskScheduler.CurrentCorePoolSize
  type: Property
  source:
    remote:
      path: src/CircuitBreaker/src/HystrixBase/Strategy/Concurrency/IHystrixTaskScheduler.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: CurrentCorePoolSize
    path: ../Steeltoe/src/CircuitBreaker/src/HystrixBase/Strategy/Concurrency/IHystrixTaskScheduler.cs
    startLine: 14
  assemblies:
  - Steeltoe.CircuitBreaker.HystrixBase
  namespace: Steeltoe.CircuitBreaker.Hystrix.Strategy.Concurrency
  syntax:
    content: int CurrentCorePoolSize { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: ReadOnly Property CurrentCorePoolSize As Integer
  overload: Steeltoe.CircuitBreaker.Hystrix.Strategy.Concurrency.IHystrixTaskScheduler.CurrentCorePoolSize*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Steeltoe.CircuitBreaker.Hystrix.Strategy.Concurrency.IHystrixTaskScheduler.CurrentLargestPoolSize
  commentId: P:Steeltoe.CircuitBreaker.Hystrix.Strategy.Concurrency.IHystrixTaskScheduler.CurrentLargestPoolSize
  id: CurrentLargestPoolSize
  parent: Steeltoe.CircuitBreaker.Hystrix.Strategy.Concurrency.IHystrixTaskScheduler
  langs:
  - csharp
  - vb
  name: CurrentLargestPoolSize
  nameWithType: IHystrixTaskScheduler.CurrentLargestPoolSize
  fullName: Steeltoe.CircuitBreaker.Hystrix.Strategy.Concurrency.IHystrixTaskScheduler.CurrentLargestPoolSize
  type: Property
  source:
    remote:
      path: src/CircuitBreaker/src/HystrixBase/Strategy/Concurrency/IHystrixTaskScheduler.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: CurrentLargestPoolSize
    path: ../Steeltoe/src/CircuitBreaker/src/HystrixBase/Strategy/Concurrency/IHystrixTaskScheduler.cs
    startLine: 16
  assemblies:
  - Steeltoe.CircuitBreaker.HystrixBase
  namespace: Steeltoe.CircuitBreaker.Hystrix.Strategy.Concurrency
  syntax:
    content: int CurrentLargestPoolSize { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: ReadOnly Property CurrentLargestPoolSize As Integer
  overload: Steeltoe.CircuitBreaker.Hystrix.Strategy.Concurrency.IHystrixTaskScheduler.CurrentLargestPoolSize*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Steeltoe.CircuitBreaker.Hystrix.Strategy.Concurrency.IHystrixTaskScheduler.CurrentMaximumPoolSize
  commentId: P:Steeltoe.CircuitBreaker.Hystrix.Strategy.Concurrency.IHystrixTaskScheduler.CurrentMaximumPoolSize
  id: CurrentMaximumPoolSize
  parent: Steeltoe.CircuitBreaker.Hystrix.Strategy.Concurrency.IHystrixTaskScheduler
  langs:
  - csharp
  - vb
  name: CurrentMaximumPoolSize
  nameWithType: IHystrixTaskScheduler.CurrentMaximumPoolSize
  fullName: Steeltoe.CircuitBreaker.Hystrix.Strategy.Concurrency.IHystrixTaskScheduler.CurrentMaximumPoolSize
  type: Property
  source:
    remote:
      path: src/CircuitBreaker/src/HystrixBase/Strategy/Concurrency/IHystrixTaskScheduler.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: CurrentMaximumPoolSize
    path: ../Steeltoe/src/CircuitBreaker/src/HystrixBase/Strategy/Concurrency/IHystrixTaskScheduler.cs
    startLine: 18
  assemblies:
  - Steeltoe.CircuitBreaker.HystrixBase
  namespace: Steeltoe.CircuitBreaker.Hystrix.Strategy.Concurrency
  syntax:
    content: int CurrentMaximumPoolSize { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: ReadOnly Property CurrentMaximumPoolSize As Integer
  overload: Steeltoe.CircuitBreaker.Hystrix.Strategy.Concurrency.IHystrixTaskScheduler.CurrentMaximumPoolSize*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Steeltoe.CircuitBreaker.Hystrix.Strategy.Concurrency.IHystrixTaskScheduler.CurrentPoolSize
  commentId: P:Steeltoe.CircuitBreaker.Hystrix.Strategy.Concurrency.IHystrixTaskScheduler.CurrentPoolSize
  id: CurrentPoolSize
  parent: Steeltoe.CircuitBreaker.Hystrix.Strategy.Concurrency.IHystrixTaskScheduler
  langs:
  - csharp
  - vb
  name: CurrentPoolSize
  nameWithType: IHystrixTaskScheduler.CurrentPoolSize
  fullName: Steeltoe.CircuitBreaker.Hystrix.Strategy.Concurrency.IHystrixTaskScheduler.CurrentPoolSize
  type: Property
  source:
    remote:
      path: src/CircuitBreaker/src/HystrixBase/Strategy/Concurrency/IHystrixTaskScheduler.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: CurrentPoolSize
    path: ../Steeltoe/src/CircuitBreaker/src/HystrixBase/Strategy/Concurrency/IHystrixTaskScheduler.cs
    startLine: 20
  assemblies:
  - Steeltoe.CircuitBreaker.HystrixBase
  namespace: Steeltoe.CircuitBreaker.Hystrix.Strategy.Concurrency
  syntax:
    content: int CurrentPoolSize { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: ReadOnly Property CurrentPoolSize As Integer
  overload: Steeltoe.CircuitBreaker.Hystrix.Strategy.Concurrency.IHystrixTaskScheduler.CurrentPoolSize*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Steeltoe.CircuitBreaker.Hystrix.Strategy.Concurrency.IHystrixTaskScheduler.CurrentQueueSize
  commentId: P:Steeltoe.CircuitBreaker.Hystrix.Strategy.Concurrency.IHystrixTaskScheduler.CurrentQueueSize
  id: CurrentQueueSize
  parent: Steeltoe.CircuitBreaker.Hystrix.Strategy.Concurrency.IHystrixTaskScheduler
  langs:
  - csharp
  - vb
  name: CurrentQueueSize
  nameWithType: IHystrixTaskScheduler.CurrentQueueSize
  fullName: Steeltoe.CircuitBreaker.Hystrix.Strategy.Concurrency.IHystrixTaskScheduler.CurrentQueueSize
  type: Property
  source:
    remote:
      path: src/CircuitBreaker/src/HystrixBase/Strategy/Concurrency/IHystrixTaskScheduler.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: CurrentQueueSize
    path: ../Steeltoe/src/CircuitBreaker/src/HystrixBase/Strategy/Concurrency/IHystrixTaskScheduler.cs
    startLine: 22
  assemblies:
  - Steeltoe.CircuitBreaker.HystrixBase
  namespace: Steeltoe.CircuitBreaker.Hystrix.Strategy.Concurrency
  syntax:
    content: int CurrentQueueSize { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: ReadOnly Property CurrentQueueSize As Integer
  overload: Steeltoe.CircuitBreaker.Hystrix.Strategy.Concurrency.IHystrixTaskScheduler.CurrentQueueSize*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Steeltoe.CircuitBreaker.Hystrix.Strategy.Concurrency.IHystrixTaskScheduler.CurrentTaskCount
  commentId: P:Steeltoe.CircuitBreaker.Hystrix.Strategy.Concurrency.IHystrixTaskScheduler.CurrentTaskCount
  id: CurrentTaskCount
  parent: Steeltoe.CircuitBreaker.Hystrix.Strategy.Concurrency.IHystrixTaskScheduler
  langs:
  - csharp
  - vb
  name: CurrentTaskCount
  nameWithType: IHystrixTaskScheduler.CurrentTaskCount
  fullName: Steeltoe.CircuitBreaker.Hystrix.Strategy.Concurrency.IHystrixTaskScheduler.CurrentTaskCount
  type: Property
  source:
    remote:
      path: src/CircuitBreaker/src/HystrixBase/Strategy/Concurrency/IHystrixTaskScheduler.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: CurrentTaskCount
    path: ../Steeltoe/src/CircuitBreaker/src/HystrixBase/Strategy/Concurrency/IHystrixTaskScheduler.cs
    startLine: 24
  assemblies:
  - Steeltoe.CircuitBreaker.HystrixBase
  namespace: Steeltoe.CircuitBreaker.Hystrix.Strategy.Concurrency
  syntax:
    content: int CurrentTaskCount { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: ReadOnly Property CurrentTaskCount As Integer
  overload: Steeltoe.CircuitBreaker.Hystrix.Strategy.Concurrency.IHystrixTaskScheduler.CurrentTaskCount*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Steeltoe.CircuitBreaker.Hystrix.Strategy.Concurrency.IHystrixTaskScheduler.CorePoolSize
  commentId: P:Steeltoe.CircuitBreaker.Hystrix.Strategy.Concurrency.IHystrixTaskScheduler.CorePoolSize
  id: CorePoolSize
  parent: Steeltoe.CircuitBreaker.Hystrix.Strategy.Concurrency.IHystrixTaskScheduler
  langs:
  - csharp
  - vb
  name: CorePoolSize
  nameWithType: IHystrixTaskScheduler.CorePoolSize
  fullName: Steeltoe.CircuitBreaker.Hystrix.Strategy.Concurrency.IHystrixTaskScheduler.CorePoolSize
  type: Property
  source:
    remote:
      path: src/CircuitBreaker/src/HystrixBase/Strategy/Concurrency/IHystrixTaskScheduler.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: CorePoolSize
    path: ../Steeltoe/src/CircuitBreaker/src/HystrixBase/Strategy/Concurrency/IHystrixTaskScheduler.cs
    startLine: 26
  assemblies:
  - Steeltoe.CircuitBreaker.HystrixBase
  namespace: Steeltoe.CircuitBreaker.Hystrix.Strategy.Concurrency
  syntax:
    content: int CorePoolSize { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Property CorePoolSize As Integer
  overload: Steeltoe.CircuitBreaker.Hystrix.Strategy.Concurrency.IHystrixTaskScheduler.CorePoolSize*
  modifiers.csharp:
  - get
  - set
- uid: Steeltoe.CircuitBreaker.Hystrix.Strategy.Concurrency.IHystrixTaskScheduler.MaximumPoolSize
  commentId: P:Steeltoe.CircuitBreaker.Hystrix.Strategy.Concurrency.IHystrixTaskScheduler.MaximumPoolSize
  id: MaximumPoolSize
  parent: Steeltoe.CircuitBreaker.Hystrix.Strategy.Concurrency.IHystrixTaskScheduler
  langs:
  - csharp
  - vb
  name: MaximumPoolSize
  nameWithType: IHystrixTaskScheduler.MaximumPoolSize
  fullName: Steeltoe.CircuitBreaker.Hystrix.Strategy.Concurrency.IHystrixTaskScheduler.MaximumPoolSize
  type: Property
  source:
    remote:
      path: src/CircuitBreaker/src/HystrixBase/Strategy/Concurrency/IHystrixTaskScheduler.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: MaximumPoolSize
    path: ../Steeltoe/src/CircuitBreaker/src/HystrixBase/Strategy/Concurrency/IHystrixTaskScheduler.cs
    startLine: 28
  assemblies:
  - Steeltoe.CircuitBreaker.HystrixBase
  namespace: Steeltoe.CircuitBreaker.Hystrix.Strategy.Concurrency
  syntax:
    content: int MaximumPoolSize { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Property MaximumPoolSize As Integer
  overload: Steeltoe.CircuitBreaker.Hystrix.Strategy.Concurrency.IHystrixTaskScheduler.MaximumPoolSize*
  modifiers.csharp:
  - get
  - set
- uid: Steeltoe.CircuitBreaker.Hystrix.Strategy.Concurrency.IHystrixTaskScheduler.KeepAliveTime
  commentId: P:Steeltoe.CircuitBreaker.Hystrix.Strategy.Concurrency.IHystrixTaskScheduler.KeepAliveTime
  id: KeepAliveTime
  parent: Steeltoe.CircuitBreaker.Hystrix.Strategy.Concurrency.IHystrixTaskScheduler
  langs:
  - csharp
  - vb
  name: KeepAliveTime
  nameWithType: IHystrixTaskScheduler.KeepAliveTime
  fullName: Steeltoe.CircuitBreaker.Hystrix.Strategy.Concurrency.IHystrixTaskScheduler.KeepAliveTime
  type: Property
  source:
    remote:
      path: src/CircuitBreaker/src/HystrixBase/Strategy/Concurrency/IHystrixTaskScheduler.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: KeepAliveTime
    path: ../Steeltoe/src/CircuitBreaker/src/HystrixBase/Strategy/Concurrency/IHystrixTaskScheduler.cs
    startLine: 30
  assemblies:
  - Steeltoe.CircuitBreaker.HystrixBase
  namespace: Steeltoe.CircuitBreaker.Hystrix.Strategy.Concurrency
  syntax:
    content: TimeSpan KeepAliveTime { get; set; }
    parameters: []
    return:
      type: System.TimeSpan
    content.vb: Property KeepAliveTime As TimeSpan
  overload: Steeltoe.CircuitBreaker.Hystrix.Strategy.Concurrency.IHystrixTaskScheduler.KeepAliveTime*
  modifiers.csharp:
  - get
  - set
- uid: Steeltoe.CircuitBreaker.Hystrix.Strategy.Concurrency.IHystrixTaskScheduler.IsQueueSpaceAvailable
  commentId: P:Steeltoe.CircuitBreaker.Hystrix.Strategy.Concurrency.IHystrixTaskScheduler.IsQueueSpaceAvailable
  id: IsQueueSpaceAvailable
  parent: Steeltoe.CircuitBreaker.Hystrix.Strategy.Concurrency.IHystrixTaskScheduler
  langs:
  - csharp
  - vb
  name: IsQueueSpaceAvailable
  nameWithType: IHystrixTaskScheduler.IsQueueSpaceAvailable
  fullName: Steeltoe.CircuitBreaker.Hystrix.Strategy.Concurrency.IHystrixTaskScheduler.IsQueueSpaceAvailable
  type: Property
  source:
    remote:
      path: src/CircuitBreaker/src/HystrixBase/Strategy/Concurrency/IHystrixTaskScheduler.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: IsQueueSpaceAvailable
    path: ../Steeltoe/src/CircuitBreaker/src/HystrixBase/Strategy/Concurrency/IHystrixTaskScheduler.cs
    startLine: 32
  assemblies:
  - Steeltoe.CircuitBreaker.HystrixBase
  namespace: Steeltoe.CircuitBreaker.Hystrix.Strategy.Concurrency
  syntax:
    content: bool IsQueueSpaceAvailable { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: ReadOnly Property IsQueueSpaceAvailable As Boolean
  overload: Steeltoe.CircuitBreaker.Hystrix.Strategy.Concurrency.IHystrixTaskScheduler.IsQueueSpaceAvailable*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Steeltoe.CircuitBreaker.Hystrix.Strategy.Concurrency.IHystrixTaskScheduler.IsShutdown
  commentId: P:Steeltoe.CircuitBreaker.Hystrix.Strategy.Concurrency.IHystrixTaskScheduler.IsShutdown
  id: IsShutdown
  parent: Steeltoe.CircuitBreaker.Hystrix.Strategy.Concurrency.IHystrixTaskScheduler
  langs:
  - csharp
  - vb
  name: IsShutdown
  nameWithType: IHystrixTaskScheduler.IsShutdown
  fullName: Steeltoe.CircuitBreaker.Hystrix.Strategy.Concurrency.IHystrixTaskScheduler.IsShutdown
  type: Property
  source:
    remote:
      path: src/CircuitBreaker/src/HystrixBase/Strategy/Concurrency/IHystrixTaskScheduler.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: IsShutdown
    path: ../Steeltoe/src/CircuitBreaker/src/HystrixBase/Strategy/Concurrency/IHystrixTaskScheduler.cs
    startLine: 34
  assemblies:
  - Steeltoe.CircuitBreaker.HystrixBase
  namespace: Steeltoe.CircuitBreaker.Hystrix.Strategy.Concurrency
  syntax:
    content: bool IsShutdown { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: ReadOnly Property IsShutdown As Boolean
  overload: Steeltoe.CircuitBreaker.Hystrix.Strategy.Concurrency.IHystrixTaskScheduler.IsShutdown*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
references:
- uid: Steeltoe.CircuitBreaker.Hystrix.Strategy.Concurrency
  commentId: N:Steeltoe.CircuitBreaker.Hystrix.Strategy.Concurrency
  name: Steeltoe.CircuitBreaker.Hystrix.Strategy.Concurrency
  nameWithType: Steeltoe.CircuitBreaker.Hystrix.Strategy.Concurrency
  fullName: Steeltoe.CircuitBreaker.Hystrix.Strategy.Concurrency
- uid: System.IDisposable.Dispose
  commentId: M:System.IDisposable.Dispose
  parent: System.IDisposable
  isExternal: true
  name: Dispose()
  nameWithType: IDisposable.Dispose()
  fullName: System.IDisposable.Dispose()
  spec.csharp:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Steeltoe.CircuitBreaker.Hystrix.Strategy.Concurrency.IHystrixTaskScheduler.CurrentActiveCount*
  commentId: Overload:Steeltoe.CircuitBreaker.Hystrix.Strategy.Concurrency.IHystrixTaskScheduler.CurrentActiveCount
  name: CurrentActiveCount
  nameWithType: IHystrixTaskScheduler.CurrentActiveCount
  fullName: Steeltoe.CircuitBreaker.Hystrix.Strategy.Concurrency.IHystrixTaskScheduler.CurrentActiveCount
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Steeltoe.CircuitBreaker.Hystrix.Strategy.Concurrency.IHystrixTaskScheduler.CurrentCompletedTaskCount*
  commentId: Overload:Steeltoe.CircuitBreaker.Hystrix.Strategy.Concurrency.IHystrixTaskScheduler.CurrentCompletedTaskCount
  name: CurrentCompletedTaskCount
  nameWithType: IHystrixTaskScheduler.CurrentCompletedTaskCount
  fullName: Steeltoe.CircuitBreaker.Hystrix.Strategy.Concurrency.IHystrixTaskScheduler.CurrentCompletedTaskCount
- uid: Steeltoe.CircuitBreaker.Hystrix.Strategy.Concurrency.IHystrixTaskScheduler.CurrentCorePoolSize*
  commentId: Overload:Steeltoe.CircuitBreaker.Hystrix.Strategy.Concurrency.IHystrixTaskScheduler.CurrentCorePoolSize
  name: CurrentCorePoolSize
  nameWithType: IHystrixTaskScheduler.CurrentCorePoolSize
  fullName: Steeltoe.CircuitBreaker.Hystrix.Strategy.Concurrency.IHystrixTaskScheduler.CurrentCorePoolSize
- uid: Steeltoe.CircuitBreaker.Hystrix.Strategy.Concurrency.IHystrixTaskScheduler.CurrentLargestPoolSize*
  commentId: Overload:Steeltoe.CircuitBreaker.Hystrix.Strategy.Concurrency.IHystrixTaskScheduler.CurrentLargestPoolSize
  name: CurrentLargestPoolSize
  nameWithType: IHystrixTaskScheduler.CurrentLargestPoolSize
  fullName: Steeltoe.CircuitBreaker.Hystrix.Strategy.Concurrency.IHystrixTaskScheduler.CurrentLargestPoolSize
- uid: Steeltoe.CircuitBreaker.Hystrix.Strategy.Concurrency.IHystrixTaskScheduler.CurrentMaximumPoolSize*
  commentId: Overload:Steeltoe.CircuitBreaker.Hystrix.Strategy.Concurrency.IHystrixTaskScheduler.CurrentMaximumPoolSize
  name: CurrentMaximumPoolSize
  nameWithType: IHystrixTaskScheduler.CurrentMaximumPoolSize
  fullName: Steeltoe.CircuitBreaker.Hystrix.Strategy.Concurrency.IHystrixTaskScheduler.CurrentMaximumPoolSize
- uid: Steeltoe.CircuitBreaker.Hystrix.Strategy.Concurrency.IHystrixTaskScheduler.CurrentPoolSize*
  commentId: Overload:Steeltoe.CircuitBreaker.Hystrix.Strategy.Concurrency.IHystrixTaskScheduler.CurrentPoolSize
  name: CurrentPoolSize
  nameWithType: IHystrixTaskScheduler.CurrentPoolSize
  fullName: Steeltoe.CircuitBreaker.Hystrix.Strategy.Concurrency.IHystrixTaskScheduler.CurrentPoolSize
- uid: Steeltoe.CircuitBreaker.Hystrix.Strategy.Concurrency.IHystrixTaskScheduler.CurrentQueueSize*
  commentId: Overload:Steeltoe.CircuitBreaker.Hystrix.Strategy.Concurrency.IHystrixTaskScheduler.CurrentQueueSize
  name: CurrentQueueSize
  nameWithType: IHystrixTaskScheduler.CurrentQueueSize
  fullName: Steeltoe.CircuitBreaker.Hystrix.Strategy.Concurrency.IHystrixTaskScheduler.CurrentQueueSize
- uid: Steeltoe.CircuitBreaker.Hystrix.Strategy.Concurrency.IHystrixTaskScheduler.CurrentTaskCount*
  commentId: Overload:Steeltoe.CircuitBreaker.Hystrix.Strategy.Concurrency.IHystrixTaskScheduler.CurrentTaskCount
  name: CurrentTaskCount
  nameWithType: IHystrixTaskScheduler.CurrentTaskCount
  fullName: Steeltoe.CircuitBreaker.Hystrix.Strategy.Concurrency.IHystrixTaskScheduler.CurrentTaskCount
- uid: Steeltoe.CircuitBreaker.Hystrix.Strategy.Concurrency.IHystrixTaskScheduler.CorePoolSize*
  commentId: Overload:Steeltoe.CircuitBreaker.Hystrix.Strategy.Concurrency.IHystrixTaskScheduler.CorePoolSize
  name: CorePoolSize
  nameWithType: IHystrixTaskScheduler.CorePoolSize
  fullName: Steeltoe.CircuitBreaker.Hystrix.Strategy.Concurrency.IHystrixTaskScheduler.CorePoolSize
- uid: Steeltoe.CircuitBreaker.Hystrix.Strategy.Concurrency.IHystrixTaskScheduler.MaximumPoolSize*
  commentId: Overload:Steeltoe.CircuitBreaker.Hystrix.Strategy.Concurrency.IHystrixTaskScheduler.MaximumPoolSize
  name: MaximumPoolSize
  nameWithType: IHystrixTaskScheduler.MaximumPoolSize
  fullName: Steeltoe.CircuitBreaker.Hystrix.Strategy.Concurrency.IHystrixTaskScheduler.MaximumPoolSize
- uid: Steeltoe.CircuitBreaker.Hystrix.Strategy.Concurrency.IHystrixTaskScheduler.KeepAliveTime*
  commentId: Overload:Steeltoe.CircuitBreaker.Hystrix.Strategy.Concurrency.IHystrixTaskScheduler.KeepAliveTime
  name: KeepAliveTime
  nameWithType: IHystrixTaskScheduler.KeepAliveTime
  fullName: Steeltoe.CircuitBreaker.Hystrix.Strategy.Concurrency.IHystrixTaskScheduler.KeepAliveTime
- uid: System.TimeSpan
  commentId: T:System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: Steeltoe.CircuitBreaker.Hystrix.Strategy.Concurrency.IHystrixTaskScheduler.IsQueueSpaceAvailable*
  commentId: Overload:Steeltoe.CircuitBreaker.Hystrix.Strategy.Concurrency.IHystrixTaskScheduler.IsQueueSpaceAvailable
  name: IsQueueSpaceAvailable
  nameWithType: IHystrixTaskScheduler.IsQueueSpaceAvailable
  fullName: Steeltoe.CircuitBreaker.Hystrix.Strategy.Concurrency.IHystrixTaskScheduler.IsQueueSpaceAvailable
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Steeltoe.CircuitBreaker.Hystrix.Strategy.Concurrency.IHystrixTaskScheduler.IsShutdown*
  commentId: Overload:Steeltoe.CircuitBreaker.Hystrix.Strategy.Concurrency.IHystrixTaskScheduler.IsShutdown
  name: IsShutdown
  nameWithType: IHystrixTaskScheduler.IsShutdown
  fullName: Steeltoe.CircuitBreaker.Hystrix.Strategy.Concurrency.IHystrixTaskScheduler.IsShutdown
