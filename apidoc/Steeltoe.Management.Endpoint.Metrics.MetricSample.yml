### YamlMime:ManagedReference
items:
- uid: Steeltoe.Management.Endpoint.Metrics.MetricSample
  commentId: T:Steeltoe.Management.Endpoint.Metrics.MetricSample
  id: MetricSample
  parent: Steeltoe.Management.Endpoint.Metrics
  children:
  - Steeltoe.Management.Endpoint.Metrics.MetricSample.#ctor(Steeltoe.Management.Endpoint.Metrics.MetricStatistic,System.Double,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}})
  - Steeltoe.Management.Endpoint.Metrics.MetricSample.Statistic
  - Steeltoe.Management.Endpoint.Metrics.MetricSample.Tags
  - Steeltoe.Management.Endpoint.Metrics.MetricSample.ToString
  - Steeltoe.Management.Endpoint.Metrics.MetricSample.Value
  langs:
  - csharp
  - vb
  name: MetricSample
  nameWithType: MetricSample
  fullName: Steeltoe.Management.Endpoint.Metrics.MetricSample
  type: Class
  source:
    remote:
      path: src/Management/src/EndpointBase/Metrics/MetricSample.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: MetricSample
    path: ../Steeltoe/src/Management/src/EndpointBase/Metrics/MetricSample.cs
    startLine: 9
  assemblies:
  - Steeltoe.Management.EndpointBase
  namespace: Steeltoe.Management.Endpoint.Metrics
  syntax:
    content: public class MetricSample
    content.vb: Public Class MetricSample
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Steeltoe.Management.Endpoint.Metrics.MetricSample.Statistic
  commentId: P:Steeltoe.Management.Endpoint.Metrics.MetricSample.Statistic
  id: Statistic
  parent: Steeltoe.Management.Endpoint.Metrics.MetricSample
  langs:
  - csharp
  - vb
  name: Statistic
  nameWithType: MetricSample.Statistic
  fullName: Steeltoe.Management.Endpoint.Metrics.MetricSample.Statistic
  type: Property
  source:
    remote:
      path: src/Management/src/EndpointBase/Metrics/MetricSample.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Statistic
    path: ../Steeltoe/src/Management/src/EndpointBase/Metrics/MetricSample.cs
    startLine: 11
  assemblies:
  - Steeltoe.Management.EndpointBase
  namespace: Steeltoe.Management.Endpoint.Metrics
  syntax:
    content: >-
      [JsonPropertyName("statistic")]

      [JsonConverter(typeof(JsonStringEnumConverter))]

      public MetricStatistic Statistic { get; }
    parameters: []
    return:
      type: Steeltoe.Management.Endpoint.Metrics.MetricStatistic
    content.vb: >-
      <JsonPropertyName("statistic")>

      <JsonConverter(GetType(JsonStringEnumConverter))>

      Public ReadOnly Property Statistic As MetricStatistic
  overload: Steeltoe.Management.Endpoint.Metrics.MetricSample.Statistic*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: statistic
  - type: System.Text.Json.Serialization.JsonConverterAttribute
    ctor: System.Text.Json.Serialization.JsonConverterAttribute.#ctor(System.Type)
    arguments:
    - type: System.Type
      value: System.Text.Json.Serialization.JsonStringEnumConverter
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Steeltoe.Management.Endpoint.Metrics.MetricSample.Value
  commentId: P:Steeltoe.Management.Endpoint.Metrics.MetricSample.Value
  id: Value
  parent: Steeltoe.Management.Endpoint.Metrics.MetricSample
  langs:
  - csharp
  - vb
  name: Value
  nameWithType: MetricSample.Value
  fullName: Steeltoe.Management.Endpoint.Metrics.MetricSample.Value
  type: Property
  source:
    remote:
      path: src/Management/src/EndpointBase/Metrics/MetricSample.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Value
    path: ../Steeltoe/src/Management/src/EndpointBase/Metrics/MetricSample.cs
    startLine: 15
  assemblies:
  - Steeltoe.Management.EndpointBase
  namespace: Steeltoe.Management.Endpoint.Metrics
  syntax:
    content: >-
      [JsonPropertyName("value")]

      public double Value { get; }
    parameters: []
    return:
      type: System.Double
    content.vb: >-
      <JsonPropertyName("value")>

      Public ReadOnly Property Value As Double
  overload: Steeltoe.Management.Endpoint.Metrics.MetricSample.Value*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: value
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Steeltoe.Management.Endpoint.Metrics.MetricSample.Tags
  commentId: P:Steeltoe.Management.Endpoint.Metrics.MetricSample.Tags
  id: Tags
  parent: Steeltoe.Management.Endpoint.Metrics.MetricSample
  langs:
  - csharp
  - vb
  name: Tags
  nameWithType: MetricSample.Tags
  fullName: Steeltoe.Management.Endpoint.Metrics.MetricSample.Tags
  type: Property
  source:
    remote:
      path: src/Management/src/EndpointBase/Metrics/MetricSample.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Tags
    path: ../Steeltoe/src/Management/src/EndpointBase/Metrics/MetricSample.cs
    startLine: 18
  assemblies:
  - Steeltoe.Management.EndpointBase
  namespace: Steeltoe.Management.Endpoint.Metrics
  syntax:
    content: >-
      [JsonIgnore]

      public IEnumerable<KeyValuePair<string, string>> Tags { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}}
    content.vb: >-
      <JsonIgnore>

      Public Property Tags As IEnumerable(Of KeyValuePair(Of String, String))
  overload: Steeltoe.Management.Endpoint.Metrics.MetricSample.Tags*
  attributes:
  - type: System.Text.Json.Serialization.JsonIgnoreAttribute
    ctor: System.Text.Json.Serialization.JsonIgnoreAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Steeltoe.Management.Endpoint.Metrics.MetricSample.#ctor(Steeltoe.Management.Endpoint.Metrics.MetricStatistic,System.Double,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}})
  commentId: M:Steeltoe.Management.Endpoint.Metrics.MetricSample.#ctor(Steeltoe.Management.Endpoint.Metrics.MetricStatistic,System.Double,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}})
  id: '#ctor(Steeltoe.Management.Endpoint.Metrics.MetricStatistic,System.Double,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}})'
  parent: Steeltoe.Management.Endpoint.Metrics.MetricSample
  langs:
  - csharp
  - vb
  name: MetricSample(MetricStatistic, Double, IEnumerable<KeyValuePair<String, String>>)
  nameWithType: MetricSample.MetricSample(MetricStatistic, Double, IEnumerable<KeyValuePair<String, String>>)
  fullName: Steeltoe.Management.Endpoint.Metrics.MetricSample.MetricSample(Steeltoe.Management.Endpoint.Metrics.MetricStatistic, System.Double, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.String, System.String>>)
  type: Constructor
  source:
    remote:
      path: src/Management/src/EndpointBase/Metrics/MetricSample.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: .ctor
    path: ../Steeltoe/src/Management/src/EndpointBase/Metrics/MetricSample.cs
    startLine: 21
  assemblies:
  - Steeltoe.Management.EndpointBase
  namespace: Steeltoe.Management.Endpoint.Metrics
  syntax:
    content: public MetricSample(MetricStatistic statistic, double value, IEnumerable<KeyValuePair<string, string>> tags = null)
    parameters:
    - id: statistic
      type: Steeltoe.Management.Endpoint.Metrics.MetricStatistic
    - id: value
      type: System.Double
    - id: tags
      type: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}}
    content.vb: Public Sub New(statistic As MetricStatistic, value As Double, tags As IEnumerable(Of KeyValuePair(Of String, String)) = Nothing)
  overload: Steeltoe.Management.Endpoint.Metrics.MetricSample.#ctor*
  nameWithType.vb: MetricSample.MetricSample(MetricStatistic, Double, IEnumerable(Of KeyValuePair(Of String, String)))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Steeltoe.Management.Endpoint.Metrics.MetricSample.MetricSample(Steeltoe.Management.Endpoint.Metrics.MetricStatistic, System.Double, System.Collections.Generic.IEnumerable(Of System.Collections.Generic.KeyValuePair(Of System.String, System.String)))
  name.vb: MetricSample(MetricStatistic, Double, IEnumerable(Of KeyValuePair(Of String, String)))
- uid: Steeltoe.Management.Endpoint.Metrics.MetricSample.ToString
  commentId: M:Steeltoe.Management.Endpoint.Metrics.MetricSample.ToString
  id: ToString
  parent: Steeltoe.Management.Endpoint.Metrics.MetricSample
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: MetricSample.ToString()
  fullName: Steeltoe.Management.Endpoint.Metrics.MetricSample.ToString()
  type: Method
  source:
    remote:
      path: src/Management/src/EndpointBase/Metrics/MetricSample.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: ToString
    path: ../Steeltoe/src/Management/src/EndpointBase/Metrics/MetricSample.cs
    startLine: 28
  assemblies:
  - Steeltoe.Management.EndpointBase
  namespace: Steeltoe.Management.Endpoint.Metrics
  syntax:
    content: public override string ToString()
    return:
      type: System.String
    content.vb: Public Overrides Function ToString As String
  overridden: System.Object.ToString
  overload: Steeltoe.Management.Endpoint.Metrics.MetricSample.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: Steeltoe.Management.Endpoint.Metrics
  commentId: N:Steeltoe.Management.Endpoint.Metrics
  name: Steeltoe.Management.Endpoint.Metrics
  nameWithType: Steeltoe.Management.Endpoint.Metrics
  fullName: Steeltoe.Management.Endpoint.Metrics
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Steeltoe.Management.Endpoint.Metrics.MetricSample.Statistic*
  commentId: Overload:Steeltoe.Management.Endpoint.Metrics.MetricSample.Statistic
  name: Statistic
  nameWithType: MetricSample.Statistic
  fullName: Steeltoe.Management.Endpoint.Metrics.MetricSample.Statistic
- uid: Steeltoe.Management.Endpoint.Metrics.MetricStatistic
  commentId: T:Steeltoe.Management.Endpoint.Metrics.MetricStatistic
  parent: Steeltoe.Management.Endpoint.Metrics
  name: MetricStatistic
  nameWithType: MetricStatistic
  fullName: Steeltoe.Management.Endpoint.Metrics.MetricStatistic
- uid: Steeltoe.Management.Endpoint.Metrics.MetricSample.Value*
  commentId: Overload:Steeltoe.Management.Endpoint.Metrics.MetricSample.Value
  name: Value
  nameWithType: MetricSample.Value
  fullName: Steeltoe.Management.Endpoint.Metrics.MetricSample.Value
- uid: System.Double
  commentId: T:System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: Steeltoe.Management.Endpoint.Metrics.MetricSample.Tags*
  commentId: Overload:Steeltoe.Management.Endpoint.Metrics.MetricSample.Tags
  name: Tags
  nameWithType: MetricSample.Tags
  fullName: Steeltoe.Management.Endpoint.Metrics.MetricSample.Tags
- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}}
  commentId: T:System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<KeyValuePair<String, String>>
  nameWithType: IEnumerable<KeyValuePair<String, String>>
  fullName: System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.String, System.String>>
  nameWithType.vb: IEnumerable(Of KeyValuePair(Of String, String))
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.Collections.Generic.KeyValuePair(Of System.String, System.String))
  name.vb: IEnumerable(Of KeyValuePair(Of String, String))
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Steeltoe.Management.Endpoint.Metrics.MetricSample.#ctor*
  commentId: Overload:Steeltoe.Management.Endpoint.Metrics.MetricSample.#ctor
  name: MetricSample
  nameWithType: MetricSample.MetricSample
  fullName: Steeltoe.Management.Endpoint.Metrics.MetricSample.MetricSample
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Management.Endpoint.Metrics.MetricSample.ToString*
  commentId: Overload:Steeltoe.Management.Endpoint.Metrics.MetricSample.ToString
  name: ToString
  nameWithType: MetricSample.ToString
  fullName: Steeltoe.Management.Endpoint.Metrics.MetricSample.ToString
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
