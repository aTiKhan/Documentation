### YamlMime:ManagedReference
items:
- uid: Steeltoe.Stream.Converter.CompositeMessageConverterFactory
  commentId: T:Steeltoe.Stream.Converter.CompositeMessageConverterFactory
  id: CompositeMessageConverterFactory
  parent: Steeltoe.Stream.Converter
  children:
  - Steeltoe.Stream.Converter.CompositeMessageConverterFactory.#ctor
  - Steeltoe.Stream.Converter.CompositeMessageConverterFactory.#ctor(System.Collections.Generic.IEnumerable{Steeltoe.Messaging.Converter.IMessageConverter})
  - Steeltoe.Stream.Converter.CompositeMessageConverterFactory.AllRegistered
  - Steeltoe.Stream.Converter.CompositeMessageConverterFactory.GetMessageConverterForType(Steeltoe.Common.Util.MimeType)
  - Steeltoe.Stream.Converter.CompositeMessageConverterFactory.MessageConverterForAllRegistered
  langs:
  - csharp
  - vb
  name: CompositeMessageConverterFactory
  nameWithType: CompositeMessageConverterFactory
  fullName: Steeltoe.Stream.Converter.CompositeMessageConverterFactory
  type: Class
  source:
    remote:
      path: src/Stream/src/StreamBase/Converter/CompositeMessageConverterFactory.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: CompositeMessageConverterFactory
    path: ../Steeltoe/src/Stream/src/StreamBase/Converter/CompositeMessageConverterFactory.cs
    startLine: 11
  assemblies:
  - Steeltoe.Stream.StreamBase
  namespace: Steeltoe.Stream.Converter
  syntax:
    content: 'public class CompositeMessageConverterFactory : IMessageConverterFactory'
    content.vb: >-
      Public Class CompositeMessageConverterFactory

          Implements IMessageConverterFactory
  inheritance:
  - System.Object
  implements:
  - Steeltoe.Messaging.Converter.IMessageConverterFactory
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Steeltoe.Stream.Converter.CompositeMessageConverterFactory.#ctor
  commentId: M:Steeltoe.Stream.Converter.CompositeMessageConverterFactory.#ctor
  id: '#ctor'
  parent: Steeltoe.Stream.Converter.CompositeMessageConverterFactory
  langs:
  - csharp
  - vb
  name: CompositeMessageConverterFactory()
  nameWithType: CompositeMessageConverterFactory.CompositeMessageConverterFactory()
  fullName: Steeltoe.Stream.Converter.CompositeMessageConverterFactory.CompositeMessageConverterFactory()
  type: Constructor
  source:
    remote:
      path: src/Stream/src/StreamBase/Converter/CompositeMessageConverterFactory.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: .ctor
    path: ../Steeltoe/src/Stream/src/StreamBase/Converter/CompositeMessageConverterFactory.cs
    startLine: 15
  assemblies:
  - Steeltoe.Stream.StreamBase
  namespace: Steeltoe.Stream.Converter
  syntax:
    content: public CompositeMessageConverterFactory()
    content.vb: Public Sub New
  overload: Steeltoe.Stream.Converter.CompositeMessageConverterFactory.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Steeltoe.Stream.Converter.CompositeMessageConverterFactory.#ctor(System.Collections.Generic.IEnumerable{Steeltoe.Messaging.Converter.IMessageConverter})
  commentId: M:Steeltoe.Stream.Converter.CompositeMessageConverterFactory.#ctor(System.Collections.Generic.IEnumerable{Steeltoe.Messaging.Converter.IMessageConverter})
  id: '#ctor(System.Collections.Generic.IEnumerable{Steeltoe.Messaging.Converter.IMessageConverter})'
  parent: Steeltoe.Stream.Converter.CompositeMessageConverterFactory
  langs:
  - csharp
  - vb
  name: CompositeMessageConverterFactory(IEnumerable<IMessageConverter>)
  nameWithType: CompositeMessageConverterFactory.CompositeMessageConverterFactory(IEnumerable<IMessageConverter>)
  fullName: Steeltoe.Stream.Converter.CompositeMessageConverterFactory.CompositeMessageConverterFactory(System.Collections.Generic.IEnumerable<Steeltoe.Messaging.Converter.IMessageConverter>)
  type: Constructor
  source:
    remote:
      path: src/Stream/src/StreamBase/Converter/CompositeMessageConverterFactory.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: .ctor
    path: ../Steeltoe/src/Stream/src/StreamBase/Converter/CompositeMessageConverterFactory.cs
    startLine: 20
  assemblies:
  - Steeltoe.Stream.StreamBase
  namespace: Steeltoe.Stream.Converter
  syntax:
    content: public CompositeMessageConverterFactory(IEnumerable<IMessageConverter> converters)
    parameters:
    - id: converters
      type: System.Collections.Generic.IEnumerable{Steeltoe.Messaging.Converter.IMessageConverter}
    content.vb: Public Sub New(converters As IEnumerable(Of IMessageConverter))
  overload: Steeltoe.Stream.Converter.CompositeMessageConverterFactory.#ctor*
  nameWithType.vb: CompositeMessageConverterFactory.CompositeMessageConverterFactory(IEnumerable(Of IMessageConverter))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Steeltoe.Stream.Converter.CompositeMessageConverterFactory.CompositeMessageConverterFactory(System.Collections.Generic.IEnumerable(Of Steeltoe.Messaging.Converter.IMessageConverter))
  name.vb: CompositeMessageConverterFactory(IEnumerable(Of IMessageConverter))
- uid: Steeltoe.Stream.Converter.CompositeMessageConverterFactory.GetMessageConverterForType(Steeltoe.Common.Util.MimeType)
  commentId: M:Steeltoe.Stream.Converter.CompositeMessageConverterFactory.GetMessageConverterForType(Steeltoe.Common.Util.MimeType)
  id: GetMessageConverterForType(Steeltoe.Common.Util.MimeType)
  parent: Steeltoe.Stream.Converter.CompositeMessageConverterFactory
  langs:
  - csharp
  - vb
  name: GetMessageConverterForType(MimeType)
  nameWithType: CompositeMessageConverterFactory.GetMessageConverterForType(MimeType)
  fullName: Steeltoe.Stream.Converter.CompositeMessageConverterFactory.GetMessageConverterForType(Steeltoe.Common.Util.MimeType)
  type: Method
  source:
    remote:
      path: src/Stream/src/StreamBase/Converter/CompositeMessageConverterFactory.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: GetMessageConverterForType
    path: ../Steeltoe/src/Stream/src/StreamBase/Converter/CompositeMessageConverterFactory.cs
    startLine: 44
  assemblies:
  - Steeltoe.Stream.StreamBase
  namespace: Steeltoe.Stream.Converter
  syntax:
    content: public IMessageConverter GetMessageConverterForType(MimeType mimeType)
    parameters:
    - id: mimeType
      type: Steeltoe.Common.Util.MimeType
    return:
      type: Steeltoe.Messaging.Converter.IMessageConverter
    content.vb: Public Function GetMessageConverterForType(mimeType As MimeType) As IMessageConverter
  overload: Steeltoe.Stream.Converter.CompositeMessageConverterFactory.GetMessageConverterForType*
  implements:
  - Steeltoe.Messaging.Converter.IMessageConverterFactory.GetMessageConverterForType(Steeltoe.Common.Util.MimeType)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Steeltoe.Stream.Converter.CompositeMessageConverterFactory.MessageConverterForAllRegistered
  commentId: P:Steeltoe.Stream.Converter.CompositeMessageConverterFactory.MessageConverterForAllRegistered
  id: MessageConverterForAllRegistered
  parent: Steeltoe.Stream.Converter.CompositeMessageConverterFactory
  langs:
  - csharp
  - vb
  name: MessageConverterForAllRegistered
  nameWithType: CompositeMessageConverterFactory.MessageConverterForAllRegistered
  fullName: Steeltoe.Stream.Converter.CompositeMessageConverterFactory.MessageConverterForAllRegistered
  type: Property
  source:
    remote:
      path: src/Stream/src/StreamBase/Converter/CompositeMessageConverterFactory.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: MessageConverterForAllRegistered
    path: ../Steeltoe/src/Stream/src/StreamBase/Converter/CompositeMessageConverterFactory.cs
    startLine: 76
  assemblies:
  - Steeltoe.Stream.StreamBase
  namespace: Steeltoe.Stream.Converter
  syntax:
    content: public ISmartMessageConverter MessageConverterForAllRegistered { get; }
    parameters: []
    return:
      type: Steeltoe.Messaging.Converter.ISmartMessageConverter
    content.vb: Public ReadOnly Property MessageConverterForAllRegistered As ISmartMessageConverter
  overload: Steeltoe.Stream.Converter.CompositeMessageConverterFactory.MessageConverterForAllRegistered*
  implements:
  - Steeltoe.Messaging.Converter.IMessageConverterFactory.MessageConverterForAllRegistered
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Steeltoe.Stream.Converter.CompositeMessageConverterFactory.AllRegistered
  commentId: P:Steeltoe.Stream.Converter.CompositeMessageConverterFactory.AllRegistered
  id: AllRegistered
  parent: Steeltoe.Stream.Converter.CompositeMessageConverterFactory
  langs:
  - csharp
  - vb
  name: AllRegistered
  nameWithType: CompositeMessageConverterFactory.AllRegistered
  fullName: Steeltoe.Stream.Converter.CompositeMessageConverterFactory.AllRegistered
  type: Property
  source:
    remote:
      path: src/Stream/src/StreamBase/Converter/CompositeMessageConverterFactory.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: AllRegistered
    path: ../Steeltoe/src/Stream/src/StreamBase/Converter/CompositeMessageConverterFactory.cs
    startLine: 81
  assemblies:
  - Steeltoe.Stream.StreamBase
  namespace: Steeltoe.Stream.Converter
  syntax:
    content: public IList<IMessageConverter> AllRegistered { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IList{Steeltoe.Messaging.Converter.IMessageConverter}
    content.vb: Public ReadOnly Property AllRegistered As IList(Of IMessageConverter)
  overload: Steeltoe.Stream.Converter.CompositeMessageConverterFactory.AllRegistered*
  implements:
  - Steeltoe.Messaging.Converter.IMessageConverterFactory.AllRegistered
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: Steeltoe.Stream.Converter
  commentId: N:Steeltoe.Stream.Converter
  name: Steeltoe.Stream.Converter
  nameWithType: Steeltoe.Stream.Converter
  fullName: Steeltoe.Stream.Converter
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Steeltoe.Messaging.Converter.IMessageConverterFactory
  commentId: T:Steeltoe.Messaging.Converter.IMessageConverterFactory
  parent: Steeltoe.Messaging.Converter
  name: IMessageConverterFactory
  nameWithType: IMessageConverterFactory
  fullName: Steeltoe.Messaging.Converter.IMessageConverterFactory
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Steeltoe.Messaging.Converter
  commentId: N:Steeltoe.Messaging.Converter
  name: Steeltoe.Messaging.Converter
  nameWithType: Steeltoe.Messaging.Converter
  fullName: Steeltoe.Messaging.Converter
- uid: Steeltoe.Stream.Converter.CompositeMessageConverterFactory.#ctor*
  commentId: Overload:Steeltoe.Stream.Converter.CompositeMessageConverterFactory.#ctor
  name: CompositeMessageConverterFactory
  nameWithType: CompositeMessageConverterFactory.CompositeMessageConverterFactory
  fullName: Steeltoe.Stream.Converter.CompositeMessageConverterFactory.CompositeMessageConverterFactory
- uid: System.Collections.Generic.IEnumerable{Steeltoe.Messaging.Converter.IMessageConverter}
  commentId: T:System.Collections.Generic.IEnumerable{Steeltoe.Messaging.Converter.IMessageConverter}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<IMessageConverter>
  nameWithType: IEnumerable<IMessageConverter>
  fullName: System.Collections.Generic.IEnumerable<Steeltoe.Messaging.Converter.IMessageConverter>
  nameWithType.vb: IEnumerable(Of IMessageConverter)
  fullName.vb: System.Collections.Generic.IEnumerable(Of Steeltoe.Messaging.Converter.IMessageConverter)
  name.vb: IEnumerable(Of IMessageConverter)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Steeltoe.Messaging.Converter.IMessageConverter
    name: IMessageConverter
    nameWithType: IMessageConverter
    fullName: Steeltoe.Messaging.Converter.IMessageConverter
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Steeltoe.Messaging.Converter.IMessageConverter
    name: IMessageConverter
    nameWithType: IMessageConverter
    fullName: Steeltoe.Messaging.Converter.IMessageConverter
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Steeltoe.Stream.Converter.CompositeMessageConverterFactory.GetMessageConverterForType*
  commentId: Overload:Steeltoe.Stream.Converter.CompositeMessageConverterFactory.GetMessageConverterForType
  name: GetMessageConverterForType
  nameWithType: CompositeMessageConverterFactory.GetMessageConverterForType
  fullName: Steeltoe.Stream.Converter.CompositeMessageConverterFactory.GetMessageConverterForType
- uid: Steeltoe.Messaging.Converter.IMessageConverterFactory.GetMessageConverterForType(Steeltoe.Common.Util.MimeType)
  commentId: M:Steeltoe.Messaging.Converter.IMessageConverterFactory.GetMessageConverterForType(Steeltoe.Common.Util.MimeType)
  parent: Steeltoe.Messaging.Converter.IMessageConverterFactory
  name: GetMessageConverterForType(MimeType)
  nameWithType: IMessageConverterFactory.GetMessageConverterForType(MimeType)
  fullName: Steeltoe.Messaging.Converter.IMessageConverterFactory.GetMessageConverterForType(Steeltoe.Common.Util.MimeType)
  spec.csharp:
  - uid: Steeltoe.Messaging.Converter.IMessageConverterFactory.GetMessageConverterForType(Steeltoe.Common.Util.MimeType)
    name: GetMessageConverterForType
    nameWithType: IMessageConverterFactory.GetMessageConverterForType
    fullName: Steeltoe.Messaging.Converter.IMessageConverterFactory.GetMessageConverterForType
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Common.Util.MimeType
    name: MimeType
    nameWithType: MimeType
    fullName: Steeltoe.Common.Util.MimeType
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Converter.IMessageConverterFactory.GetMessageConverterForType(Steeltoe.Common.Util.MimeType)
    name: GetMessageConverterForType
    nameWithType: IMessageConverterFactory.GetMessageConverterForType
    fullName: Steeltoe.Messaging.Converter.IMessageConverterFactory.GetMessageConverterForType
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Common.Util.MimeType
    name: MimeType
    nameWithType: MimeType
    fullName: Steeltoe.Common.Util.MimeType
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Common.Util.MimeType
  commentId: T:Steeltoe.Common.Util.MimeType
  parent: Steeltoe.Common.Util
  name: MimeType
  nameWithType: MimeType
  fullName: Steeltoe.Common.Util.MimeType
- uid: Steeltoe.Messaging.Converter.IMessageConverter
  commentId: T:Steeltoe.Messaging.Converter.IMessageConverter
  parent: Steeltoe.Messaging.Converter
  name: IMessageConverter
  nameWithType: IMessageConverter
  fullName: Steeltoe.Messaging.Converter.IMessageConverter
- uid: Steeltoe.Common.Util
  commentId: N:Steeltoe.Common.Util
  name: Steeltoe.Common.Util
  nameWithType: Steeltoe.Common.Util
  fullName: Steeltoe.Common.Util
- uid: Steeltoe.Stream.Converter.CompositeMessageConverterFactory.MessageConverterForAllRegistered*
  commentId: Overload:Steeltoe.Stream.Converter.CompositeMessageConverterFactory.MessageConverterForAllRegistered
  name: MessageConverterForAllRegistered
  nameWithType: CompositeMessageConverterFactory.MessageConverterForAllRegistered
  fullName: Steeltoe.Stream.Converter.CompositeMessageConverterFactory.MessageConverterForAllRegistered
- uid: Steeltoe.Messaging.Converter.IMessageConverterFactory.MessageConverterForAllRegistered
  commentId: P:Steeltoe.Messaging.Converter.IMessageConverterFactory.MessageConverterForAllRegistered
  parent: Steeltoe.Messaging.Converter.IMessageConverterFactory
  name: MessageConverterForAllRegistered
  nameWithType: IMessageConverterFactory.MessageConverterForAllRegistered
  fullName: Steeltoe.Messaging.Converter.IMessageConverterFactory.MessageConverterForAllRegistered
- uid: Steeltoe.Messaging.Converter.ISmartMessageConverter
  commentId: T:Steeltoe.Messaging.Converter.ISmartMessageConverter
  parent: Steeltoe.Messaging.Converter
  name: ISmartMessageConverter
  nameWithType: ISmartMessageConverter
  fullName: Steeltoe.Messaging.Converter.ISmartMessageConverter
- uid: Steeltoe.Stream.Converter.CompositeMessageConverterFactory.AllRegistered*
  commentId: Overload:Steeltoe.Stream.Converter.CompositeMessageConverterFactory.AllRegistered
  name: AllRegistered
  nameWithType: CompositeMessageConverterFactory.AllRegistered
  fullName: Steeltoe.Stream.Converter.CompositeMessageConverterFactory.AllRegistered
- uid: Steeltoe.Messaging.Converter.IMessageConverterFactory.AllRegistered
  commentId: P:Steeltoe.Messaging.Converter.IMessageConverterFactory.AllRegistered
  parent: Steeltoe.Messaging.Converter.IMessageConverterFactory
  name: AllRegistered
  nameWithType: IMessageConverterFactory.AllRegistered
  fullName: Steeltoe.Messaging.Converter.IMessageConverterFactory.AllRegistered
- uid: System.Collections.Generic.IList{Steeltoe.Messaging.Converter.IMessageConverter}
  commentId: T:System.Collections.Generic.IList{Steeltoe.Messaging.Converter.IMessageConverter}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<IMessageConverter>
  nameWithType: IList<IMessageConverter>
  fullName: System.Collections.Generic.IList<Steeltoe.Messaging.Converter.IMessageConverter>
  nameWithType.vb: IList(Of IMessageConverter)
  fullName.vb: System.Collections.Generic.IList(Of Steeltoe.Messaging.Converter.IMessageConverter)
  name.vb: IList(Of IMessageConverter)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Steeltoe.Messaging.Converter.IMessageConverter
    name: IMessageConverter
    nameWithType: IMessageConverter
    fullName: Steeltoe.Messaging.Converter.IMessageConverter
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Steeltoe.Messaging.Converter.IMessageConverter
    name: IMessageConverter
    nameWithType: IMessageConverter
    fullName: Steeltoe.Messaging.Converter.IMessageConverter
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullName.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
