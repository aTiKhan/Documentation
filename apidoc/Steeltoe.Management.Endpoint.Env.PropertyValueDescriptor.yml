### YamlMime:ManagedReference
items:
- uid: Steeltoe.Management.Endpoint.Env.PropertyValueDescriptor
  commentId: T:Steeltoe.Management.Endpoint.Env.PropertyValueDescriptor
  id: PropertyValueDescriptor
  parent: Steeltoe.Management.Endpoint.Env
  children:
  - Steeltoe.Management.Endpoint.Env.PropertyValueDescriptor.#ctor(System.Object,System.String)
  - Steeltoe.Management.Endpoint.Env.PropertyValueDescriptor.Origin
  - Steeltoe.Management.Endpoint.Env.PropertyValueDescriptor.Value
  langs:
  - csharp
  - vb
  name: PropertyValueDescriptor
  nameWithType: PropertyValueDescriptor
  fullName: Steeltoe.Management.Endpoint.Env.PropertyValueDescriptor
  type: Class
  source:
    remote:
      path: src/Management/src/EndpointBase/Env/PropertyValueDescriptor.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: PropertyValueDescriptor
    path: ../Steeltoe/src/Management/src/EndpointBase/Env/PropertyValueDescriptor.cs
    startLine: 8
  assemblies:
  - Steeltoe.Management.EndpointBase
  namespace: Steeltoe.Management.Endpoint.Env
  syntax:
    content: public class PropertyValueDescriptor
    content.vb: Public Class PropertyValueDescriptor
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Steeltoe.Management.Endpoint.Env.PropertyValueDescriptor.#ctor(System.Object,System.String)
  commentId: M:Steeltoe.Management.Endpoint.Env.PropertyValueDescriptor.#ctor(System.Object,System.String)
  id: '#ctor(System.Object,System.String)'
  parent: Steeltoe.Management.Endpoint.Env.PropertyValueDescriptor
  langs:
  - csharp
  - vb
  name: PropertyValueDescriptor(Object, String)
  nameWithType: PropertyValueDescriptor.PropertyValueDescriptor(Object, String)
  fullName: Steeltoe.Management.Endpoint.Env.PropertyValueDescriptor.PropertyValueDescriptor(System.Object, System.String)
  type: Constructor
  source:
    remote:
      path: src/Management/src/EndpointBase/Env/PropertyValueDescriptor.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: .ctor
    path: ../Steeltoe/src/Management/src/EndpointBase/Env/PropertyValueDescriptor.cs
    startLine: 10
  assemblies:
  - Steeltoe.Management.EndpointBase
  namespace: Steeltoe.Management.Endpoint.Env
  syntax:
    content: public PropertyValueDescriptor(object value, string origin = null)
    parameters:
    - id: value
      type: System.Object
    - id: origin
      type: System.String
    content.vb: Public Sub New(value As Object, origin As String = Nothing)
  overload: Steeltoe.Management.Endpoint.Env.PropertyValueDescriptor.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Steeltoe.Management.Endpoint.Env.PropertyValueDescriptor.Value
  commentId: P:Steeltoe.Management.Endpoint.Env.PropertyValueDescriptor.Value
  id: Value
  parent: Steeltoe.Management.Endpoint.Env.PropertyValueDescriptor
  langs:
  - csharp
  - vb
  name: Value
  nameWithType: PropertyValueDescriptor.Value
  fullName: Steeltoe.Management.Endpoint.Env.PropertyValueDescriptor.Value
  type: Property
  source:
    remote:
      path: src/Management/src/EndpointBase/Env/PropertyValueDescriptor.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Value
    path: ../Steeltoe/src/Management/src/EndpointBase/Env/PropertyValueDescriptor.cs
    startLine: 16
  assemblies:
  - Steeltoe.Management.EndpointBase
  namespace: Steeltoe.Management.Endpoint.Env
  syntax:
    content: >-
      [JsonPropertyName("value")]

      public object Value { get; }
    parameters: []
    return:
      type: System.Object
    content.vb: >-
      <JsonPropertyName("value")>

      Public ReadOnly Property Value As Object
  overload: Steeltoe.Management.Endpoint.Env.PropertyValueDescriptor.Value*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: value
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Steeltoe.Management.Endpoint.Env.PropertyValueDescriptor.Origin
  commentId: P:Steeltoe.Management.Endpoint.Env.PropertyValueDescriptor.Origin
  id: Origin
  parent: Steeltoe.Management.Endpoint.Env.PropertyValueDescriptor
  langs:
  - csharp
  - vb
  name: Origin
  nameWithType: PropertyValueDescriptor.Origin
  fullName: Steeltoe.Management.Endpoint.Env.PropertyValueDescriptor.Origin
  type: Property
  source:
    remote:
      path: src/Management/src/EndpointBase/Env/PropertyValueDescriptor.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Origin
    path: ../Steeltoe/src/Management/src/EndpointBase/Env/PropertyValueDescriptor.cs
    startLine: 19
  assemblies:
  - Steeltoe.Management.EndpointBase
  namespace: Steeltoe.Management.Endpoint.Env
  syntax:
    content: >-
      [JsonPropertyName("origin")]

      public string Origin { get; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonPropertyName("origin")>

      Public ReadOnly Property Origin As String
  overload: Steeltoe.Management.Endpoint.Env.PropertyValueDescriptor.Origin*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: origin
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: Steeltoe.Management.Endpoint.Env
  commentId: N:Steeltoe.Management.Endpoint.Env
  name: Steeltoe.Management.Endpoint.Env
  nameWithType: Steeltoe.Management.Endpoint.Env
  fullName: Steeltoe.Management.Endpoint.Env
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Steeltoe.Management.Endpoint.Env.PropertyValueDescriptor.#ctor*
  commentId: Overload:Steeltoe.Management.Endpoint.Env.PropertyValueDescriptor.#ctor
  name: PropertyValueDescriptor
  nameWithType: PropertyValueDescriptor.PropertyValueDescriptor
  fullName: Steeltoe.Management.Endpoint.Env.PropertyValueDescriptor.PropertyValueDescriptor
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Steeltoe.Management.Endpoint.Env.PropertyValueDescriptor.Value*
  commentId: Overload:Steeltoe.Management.Endpoint.Env.PropertyValueDescriptor.Value
  name: Value
  nameWithType: PropertyValueDescriptor.Value
  fullName: Steeltoe.Management.Endpoint.Env.PropertyValueDescriptor.Value
- uid: Steeltoe.Management.Endpoint.Env.PropertyValueDescriptor.Origin*
  commentId: Overload:Steeltoe.Management.Endpoint.Env.PropertyValueDescriptor.Origin
  name: Origin
  nameWithType: PropertyValueDescriptor.Origin
  fullName: Steeltoe.Management.Endpoint.Env.PropertyValueDescriptor.Origin
