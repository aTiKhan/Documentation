### YamlMime:ManagedReference
items:
- uid: Steeltoe.Common.Discovery.IServiceInstanceProviderExtensions
  commentId: T:Steeltoe.Common.Discovery.IServiceInstanceProviderExtensions
  id: IServiceInstanceProviderExtensions
  parent: Steeltoe.Common.Discovery
  children:
  - Steeltoe.Common.Discovery.IServiceInstanceProviderExtensions.GetInstancesWithCacheAsync(Steeltoe.Common.Discovery.IServiceInstanceProvider,System.String,IDistributedCache,DistributedCacheEntryOptions,System.String)
  langs:
  - csharp
  - vb
  name: IServiceInstanceProviderExtensions
  nameWithType: IServiceInstanceProviderExtensions
  fullName: Steeltoe.Common.Discovery.IServiceInstanceProviderExtensions
  type: Class
  source:
    remote:
      path: src/Common/src/Common/Discovery/IServiceInstanceProviderExtensions.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: IServiceInstanceProviderExtensions
    path: ../Steeltoe/src/Common/src/Common/Discovery/IServiceInstanceProviderExtensions.cs
    startLine: 12
  assemblies:
  - Steeltoe.Common
  namespace: Steeltoe.Common.Discovery
  syntax:
    content: public static class IServiceInstanceProviderExtensions
    content.vb: Public Module IServiceInstanceProviderExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Steeltoe.Common.Discovery.IServiceInstanceProviderExtensions.GetInstancesWithCacheAsync(Steeltoe.Common.Discovery.IServiceInstanceProvider,System.String,IDistributedCache,DistributedCacheEntryOptions,System.String)
  commentId: M:Steeltoe.Common.Discovery.IServiceInstanceProviderExtensions.GetInstancesWithCacheAsync(Steeltoe.Common.Discovery.IServiceInstanceProvider,System.String,IDistributedCache,DistributedCacheEntryOptions,System.String)
  id: GetInstancesWithCacheAsync(Steeltoe.Common.Discovery.IServiceInstanceProvider,System.String,IDistributedCache,DistributedCacheEntryOptions,System.String)
  isExtensionMethod: true
  parent: Steeltoe.Common.Discovery.IServiceInstanceProviderExtensions
  langs:
  - csharp
  - vb
  name: GetInstancesWithCacheAsync(IServiceInstanceProvider, String, IDistributedCache, DistributedCacheEntryOptions, String)
  nameWithType: IServiceInstanceProviderExtensions.GetInstancesWithCacheAsync(IServiceInstanceProvider, String, IDistributedCache, DistributedCacheEntryOptions, String)
  fullName: Steeltoe.Common.Discovery.IServiceInstanceProviderExtensions.GetInstancesWithCacheAsync(Steeltoe.Common.Discovery.IServiceInstanceProvider, System.String, IDistributedCache, DistributedCacheEntryOptions, System.String)
  type: Method
  source:
    remote:
      path: src/Common/src/Common/Discovery/IServiceInstanceProviderExtensions.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: GetInstancesWithCacheAsync
    path: ../Steeltoe/src/Common/src/Common/Discovery/IServiceInstanceProviderExtensions.cs
    startLine: 14
  assemblies:
  - Steeltoe.Common
  namespace: Steeltoe.Common.Discovery
  syntax:
    content: public static Task<IList<IServiceInstance>> GetInstancesWithCacheAsync(this IServiceInstanceProvider serviceInstanceProvider, string serviceId, IDistributedCache distributedCache = null, DistributedCacheEntryOptions cacheOptions = null, string serviceInstancesKeyPrefix = "ServiceInstances:")
    parameters:
    - id: serviceInstanceProvider
      type: Steeltoe.Common.Discovery.IServiceInstanceProvider
    - id: serviceId
      type: System.String
    - id: distributedCache
      type: IDistributedCache
    - id: cacheOptions
      type: DistributedCacheEntryOptions
    - id: serviceInstancesKeyPrefix
      type: System.String
    return:
      type: System.Threading.Tasks.Task{System.Collections.Generic.IList{Steeltoe.Common.Discovery.IServiceInstance}}
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetInstancesWithCacheAsync(serviceInstanceProvider As IServiceInstanceProvider, serviceId As String, distributedCache As IDistributedCache = Nothing, cacheOptions As DistributedCacheEntryOptions = Nothing, serviceInstancesKeyPrefix As String = "ServiceInstances:") As Task(Of IList(Of IServiceInstance))
  overload: Steeltoe.Common.Discovery.IServiceInstanceProviderExtensions.GetInstancesWithCacheAsync*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Steeltoe.Common.Discovery
  commentId: N:Steeltoe.Common.Discovery
  name: Steeltoe.Common.Discovery
  nameWithType: Steeltoe.Common.Discovery
  fullName: Steeltoe.Common.Discovery
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Steeltoe.Common.Discovery.IServiceInstanceProviderExtensions.GetInstancesWithCacheAsync*
  commentId: Overload:Steeltoe.Common.Discovery.IServiceInstanceProviderExtensions.GetInstancesWithCacheAsync
  name: GetInstancesWithCacheAsync
  nameWithType: IServiceInstanceProviderExtensions.GetInstancesWithCacheAsync
  fullName: Steeltoe.Common.Discovery.IServiceInstanceProviderExtensions.GetInstancesWithCacheAsync
- uid: Steeltoe.Common.Discovery.IServiceInstanceProvider
  commentId: T:Steeltoe.Common.Discovery.IServiceInstanceProvider
  parent: Steeltoe.Common.Discovery
  name: IServiceInstanceProvider
  nameWithType: IServiceInstanceProvider
  fullName: Steeltoe.Common.Discovery.IServiceInstanceProvider
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: IDistributedCache
  isExternal: true
  name: IDistributedCache
  nameWithType: IDistributedCache
  fullName: IDistributedCache
- uid: DistributedCacheEntryOptions
  isExternal: true
  name: DistributedCacheEntryOptions
  nameWithType: DistributedCacheEntryOptions
  fullName: DistributedCacheEntryOptions
- uid: System.Threading.Tasks.Task{System.Collections.Generic.IList{Steeltoe.Common.Discovery.IServiceInstance}}
  commentId: T:System.Threading.Tasks.Task{System.Collections.Generic.IList{Steeltoe.Common.Discovery.IServiceInstance}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<IList<IServiceInstance>>
  nameWithType: Task<IList<IServiceInstance>>
  fullName: System.Threading.Tasks.Task<System.Collections.Generic.IList<Steeltoe.Common.Discovery.IServiceInstance>>
  nameWithType.vb: Task(Of IList(Of IServiceInstance))
  fullName.vb: System.Threading.Tasks.Task(Of System.Collections.Generic.IList(Of Steeltoe.Common.Discovery.IServiceInstance))
  name.vb: Task(Of IList(Of IServiceInstance))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Steeltoe.Common.Discovery.IServiceInstance
    name: IServiceInstance
    nameWithType: IServiceInstance
    fullName: Steeltoe.Common.Discovery.IServiceInstance
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Steeltoe.Common.Discovery.IServiceInstance
    name: IServiceInstance
    nameWithType: IServiceInstance
    fullName: Steeltoe.Common.Discovery.IServiceInstance
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
