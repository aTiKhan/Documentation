### YamlMime:ManagedReference
items:
- uid: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.IReplyingMessageListener`2
  commentId: T:Steeltoe.Messaging.RabbitMQ.Listener.Adapters.IReplyingMessageListener`2
  id: IReplyingMessageListener`2
  parent: Steeltoe.Messaging.RabbitMQ.Listener.Adapters
  children:
  - Steeltoe.Messaging.RabbitMQ.Listener.Adapters.IReplyingMessageListener`2.HandleMessage(`0)
  langs:
  - csharp
  - vb
  name: IReplyingMessageListener<T, R>
  nameWithType: IReplyingMessageListener<T, R>
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.IReplyingMessageListener<T, R>
  type: Interface
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Listener/Adapters/IReplyingMessageListener.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: IReplyingMessageListener
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Listener/Adapters/IReplyingMessageListener.cs
    startLine: 6
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Listener.Adapters
  syntax:
    content: public interface IReplyingMessageListener<in T, out R>
    typeParameters:
    - id: T
    - id: R
    content.vb: Public Interface IReplyingMessageListener(Of In T, Out R)
  nameWithType.vb: IReplyingMessageListener(Of T, R)
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
  fullName.vb: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.IReplyingMessageListener(Of T, R)
  name.vb: IReplyingMessageListener(Of T, R)
- uid: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.IReplyingMessageListener`2.HandleMessage(`0)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Listener.Adapters.IReplyingMessageListener`2.HandleMessage(`0)
  id: HandleMessage(`0)
  parent: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.IReplyingMessageListener`2
  langs:
  - csharp
  - vb
  name: HandleMessage(T)
  nameWithType: IReplyingMessageListener<T, R>.HandleMessage(T)
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.IReplyingMessageListener<T, R>.HandleMessage(T)
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Listener/Adapters/IReplyingMessageListener.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: HandleMessage
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Listener/Adapters/IReplyingMessageListener.cs
    startLine: 8
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Listener.Adapters
  syntax:
    content: R HandleMessage(T t)
    parameters:
    - id: t
      type: '{T}'
    return:
      type: '{R}'
    content.vb: Function HandleMessage(t As T) As R
  overload: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.IReplyingMessageListener`2.HandleMessage*
  nameWithType.vb: IReplyingMessageListener(Of T, R).HandleMessage(T)
  fullName.vb: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.IReplyingMessageListener(Of T, R).HandleMessage(T)
references:
- uid: Steeltoe.Messaging.RabbitMQ.Listener.Adapters
  commentId: N:Steeltoe.Messaging.RabbitMQ.Listener.Adapters
  name: Steeltoe.Messaging.RabbitMQ.Listener.Adapters
  nameWithType: Steeltoe.Messaging.RabbitMQ.Listener.Adapters
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.Adapters
- uid: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.IReplyingMessageListener`2.HandleMessage*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Listener.Adapters.IReplyingMessageListener`2.HandleMessage
  name: HandleMessage
  nameWithType: IReplyingMessageListener<T, R>.HandleMessage
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.IReplyingMessageListener<T, R>.HandleMessage
  nameWithType.vb: IReplyingMessageListener(Of T, R).HandleMessage
  fullName.vb: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.IReplyingMessageListener(Of T, R).HandleMessage
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: '{R}'
  commentId: '!:R'
  definition: R
  name: R
  nameWithType: R
  fullName: R
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: R
  name: R
  nameWithType: R
  fullName: R
