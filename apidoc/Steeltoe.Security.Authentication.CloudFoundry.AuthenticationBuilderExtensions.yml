### YamlMime:ManagedReference
items:
- uid: Steeltoe.Security.Authentication.CloudFoundry.AuthenticationBuilderExtensions
  commentId: T:Steeltoe.Security.Authentication.CloudFoundry.AuthenticationBuilderExtensions
  id: AuthenticationBuilderExtensions
  parent: Steeltoe.Security.Authentication.CloudFoundry
  children:
  - Steeltoe.Security.Authentication.CloudFoundry.AuthenticationBuilderExtensions.AddCloudFoundryIdentityCertificate(Microsoft.AspNetCore.Authentication.AuthenticationBuilder)
  - Steeltoe.Security.Authentication.CloudFoundry.AuthenticationBuilderExtensions.AddCloudFoundryJwtBearer(Microsoft.AspNetCore.Authentication.AuthenticationBuilder,Microsoft.Extensions.Configuration.IConfiguration)
  - Steeltoe.Security.Authentication.CloudFoundry.AuthenticationBuilderExtensions.AddCloudFoundryJwtBearer(Microsoft.AspNetCore.Authentication.AuthenticationBuilder,Microsoft.Extensions.Configuration.IConfiguration,System.Action{Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerOptions,Microsoft.Extensions.Configuration.IConfiguration})
  - Steeltoe.Security.Authentication.CloudFoundry.AuthenticationBuilderExtensions.AddCloudFoundryJwtBearer(Microsoft.AspNetCore.Authentication.AuthenticationBuilder,System.String,Microsoft.Extensions.Configuration.IConfiguration)
  - Steeltoe.Security.Authentication.CloudFoundry.AuthenticationBuilderExtensions.AddCloudFoundryJwtBearer(Microsoft.AspNetCore.Authentication.AuthenticationBuilder,System.String,Microsoft.Extensions.Configuration.IConfiguration,System.Action{Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerOptions,Microsoft.Extensions.Configuration.IConfiguration})
  - Steeltoe.Security.Authentication.CloudFoundry.AuthenticationBuilderExtensions.AddCloudFoundryJwtBearer(Microsoft.AspNetCore.Authentication.AuthenticationBuilder,System.String,System.String,Microsoft.Extensions.Configuration.IConfiguration)
  - Steeltoe.Security.Authentication.CloudFoundry.AuthenticationBuilderExtensions.AddCloudFoundryJwtBearer(Microsoft.AspNetCore.Authentication.AuthenticationBuilder,System.String,System.String,Microsoft.Extensions.Configuration.IConfiguration,System.Action{Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerOptions,Microsoft.Extensions.Configuration.IConfiguration})
  - Steeltoe.Security.Authentication.CloudFoundry.AuthenticationBuilderExtensions.AddCloudFoundryOAuth(Microsoft.AspNetCore.Authentication.AuthenticationBuilder,Microsoft.Extensions.Configuration.IConfiguration)
  - Steeltoe.Security.Authentication.CloudFoundry.AuthenticationBuilderExtensions.AddCloudFoundryOAuth(Microsoft.AspNetCore.Authentication.AuthenticationBuilder,Microsoft.Extensions.Configuration.IConfiguration,System.Action{Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions,Microsoft.Extensions.Configuration.IConfiguration})
  - Steeltoe.Security.Authentication.CloudFoundry.AuthenticationBuilderExtensions.AddCloudFoundryOAuth(Microsoft.AspNetCore.Authentication.AuthenticationBuilder,System.String,Microsoft.Extensions.Configuration.IConfiguration)
  - Steeltoe.Security.Authentication.CloudFoundry.AuthenticationBuilderExtensions.AddCloudFoundryOAuth(Microsoft.AspNetCore.Authentication.AuthenticationBuilder,System.String,Microsoft.Extensions.Configuration.IConfiguration,System.Action{Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions,Microsoft.Extensions.Configuration.IConfiguration})
  - Steeltoe.Security.Authentication.CloudFoundry.AuthenticationBuilderExtensions.AddCloudFoundryOAuth(Microsoft.AspNetCore.Authentication.AuthenticationBuilder,System.String,System.String,Microsoft.Extensions.Configuration.IConfiguration)
  - Steeltoe.Security.Authentication.CloudFoundry.AuthenticationBuilderExtensions.AddCloudFoundryOAuth(Microsoft.AspNetCore.Authentication.AuthenticationBuilder,System.String,System.String,Microsoft.Extensions.Configuration.IConfiguration,System.Action{Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions,Microsoft.Extensions.Configuration.IConfiguration})
  - Steeltoe.Security.Authentication.CloudFoundry.AuthenticationBuilderExtensions.AddCloudFoundryOpenIdConnect(Microsoft.AspNetCore.Authentication.AuthenticationBuilder,Microsoft.Extensions.Configuration.IConfiguration)
  - Steeltoe.Security.Authentication.CloudFoundry.AuthenticationBuilderExtensions.AddCloudFoundryOpenIdConnect(Microsoft.AspNetCore.Authentication.AuthenticationBuilder,Microsoft.Extensions.Configuration.IConfiguration,System.Action{Microsoft.AspNetCore.Authentication.OpenIdConnect.OpenIdConnectOptions,Microsoft.Extensions.Configuration.IConfiguration})
  - Steeltoe.Security.Authentication.CloudFoundry.AuthenticationBuilderExtensions.AddCloudFoundryOpenIdConnect(Microsoft.AspNetCore.Authentication.AuthenticationBuilder,System.String,Microsoft.Extensions.Configuration.IConfiguration)
  - Steeltoe.Security.Authentication.CloudFoundry.AuthenticationBuilderExtensions.AddCloudFoundryOpenIdConnect(Microsoft.AspNetCore.Authentication.AuthenticationBuilder,System.String,Microsoft.Extensions.Configuration.IConfiguration,System.Action{Microsoft.AspNetCore.Authentication.OpenIdConnect.OpenIdConnectOptions,Microsoft.Extensions.Configuration.IConfiguration})
  - Steeltoe.Security.Authentication.CloudFoundry.AuthenticationBuilderExtensions.AddCloudFoundryOpenIdConnect(Microsoft.AspNetCore.Authentication.AuthenticationBuilder,System.String,System.String,Microsoft.Extensions.Configuration.IConfiguration)
  - Steeltoe.Security.Authentication.CloudFoundry.AuthenticationBuilderExtensions.AddCloudFoundryOpenIdConnect(Microsoft.AspNetCore.Authentication.AuthenticationBuilder,System.String,System.String,Microsoft.Extensions.Configuration.IConfiguration,System.Action{Microsoft.AspNetCore.Authentication.OpenIdConnect.OpenIdConnectOptions,Microsoft.Extensions.Configuration.IConfiguration})
  langs:
  - csharp
  - vb
  name: AuthenticationBuilderExtensions
  nameWithType: AuthenticationBuilderExtensions
  fullName: Steeltoe.Security.Authentication.CloudFoundry.AuthenticationBuilderExtensions
  type: Class
  source:
    remote:
      path: src/Security/src/Authentication.CloudFoundryCore/AuthenticationBuilderExtensions.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: AuthenticationBuilderExtensions
    path: ../Steeltoe/src/Security/src/Authentication.CloudFoundryCore/AuthenticationBuilderExtensions.cs
    startLine: 22
  assemblies:
  - Steeltoe.Security.Authentication.CloudFoundryCore
  namespace: Steeltoe.Security.Authentication.CloudFoundry
  syntax:
    content: public static class AuthenticationBuilderExtensions
    content.vb: Public Module AuthenticationBuilderExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Steeltoe.Security.Authentication.CloudFoundry.AuthenticationBuilderExtensions.AddCloudFoundryOAuth(Microsoft.AspNetCore.Authentication.AuthenticationBuilder,Microsoft.Extensions.Configuration.IConfiguration)
  commentId: M:Steeltoe.Security.Authentication.CloudFoundry.AuthenticationBuilderExtensions.AddCloudFoundryOAuth(Microsoft.AspNetCore.Authentication.AuthenticationBuilder,Microsoft.Extensions.Configuration.IConfiguration)
  id: AddCloudFoundryOAuth(Microsoft.AspNetCore.Authentication.AuthenticationBuilder,Microsoft.Extensions.Configuration.IConfiguration)
  isExtensionMethod: true
  parent: Steeltoe.Security.Authentication.CloudFoundry.AuthenticationBuilderExtensions
  langs:
  - csharp
  - vb
  name: AddCloudFoundryOAuth(AuthenticationBuilder, IConfiguration)
  nameWithType: AuthenticationBuilderExtensions.AddCloudFoundryOAuth(AuthenticationBuilder, IConfiguration)
  fullName: Steeltoe.Security.Authentication.CloudFoundry.AuthenticationBuilderExtensions.AddCloudFoundryOAuth(Microsoft.AspNetCore.Authentication.AuthenticationBuilder, Microsoft.Extensions.Configuration.IConfiguration)
  type: Method
  source:
    remote:
      path: src/Security/src/Authentication.CloudFoundryCore/AuthenticationBuilderExtensions.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: AddCloudFoundryOAuth
    path: ../Steeltoe/src/Security/src/Authentication.CloudFoundryCore/AuthenticationBuilderExtensions.cs
    startLine: 30
  assemblies:
  - Steeltoe.Security.Authentication.CloudFoundryCore
  namespace: Steeltoe.Security.Authentication.CloudFoundry
  summary: "\nAdds OAuth middleware and configuration for using UAA or Pivotal SSO for user authentication\n"
  example: []
  syntax:
    content: public static AuthenticationBuilder AddCloudFoundryOAuth(this AuthenticationBuilder builder, IConfiguration config)
    parameters:
    - id: builder
      type: Microsoft.AspNetCore.Authentication.AuthenticationBuilder
      description: Your <xref href="Microsoft.AspNetCore.Authentication.AuthenticationBuilder" data-throw-if-not-resolved="false"></xref>
    - id: config
      type: Microsoft.Extensions.Configuration.IConfiguration
      description: Your application configuration. Be sure to include the <xref href="Steeltoe.Extensions.Configuration.CloudFoundry.CloudFoundryConfigurationProvider" data-throw-if-not-resolved="false"></xref>
    return:
      type: Microsoft.AspNetCore.Authentication.AuthenticationBuilder
      description: <xref href="Microsoft.AspNetCore.Authentication.AuthenticationBuilder" data-throw-if-not-resolved="false"></xref> configured to use OAuth with UAA or Pivotal SSO
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function AddCloudFoundryOAuth(builder As AuthenticationBuilder, config As IConfiguration) As AuthenticationBuilder
  overload: Steeltoe.Security.Authentication.CloudFoundry.AuthenticationBuilderExtensions.AddCloudFoundryOAuth*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Steeltoe.Security.Authentication.CloudFoundry.AuthenticationBuilderExtensions.AddCloudFoundryOAuth(Microsoft.AspNetCore.Authentication.AuthenticationBuilder,System.String,Microsoft.Extensions.Configuration.IConfiguration)
  commentId: M:Steeltoe.Security.Authentication.CloudFoundry.AuthenticationBuilderExtensions.AddCloudFoundryOAuth(Microsoft.AspNetCore.Authentication.AuthenticationBuilder,System.String,Microsoft.Extensions.Configuration.IConfiguration)
  id: AddCloudFoundryOAuth(Microsoft.AspNetCore.Authentication.AuthenticationBuilder,System.String,Microsoft.Extensions.Configuration.IConfiguration)
  isExtensionMethod: true
  parent: Steeltoe.Security.Authentication.CloudFoundry.AuthenticationBuilderExtensions
  langs:
  - csharp
  - vb
  name: AddCloudFoundryOAuth(AuthenticationBuilder, String, IConfiguration)
  nameWithType: AuthenticationBuilderExtensions.AddCloudFoundryOAuth(AuthenticationBuilder, String, IConfiguration)
  fullName: Steeltoe.Security.Authentication.CloudFoundry.AuthenticationBuilderExtensions.AddCloudFoundryOAuth(Microsoft.AspNetCore.Authentication.AuthenticationBuilder, System.String, Microsoft.Extensions.Configuration.IConfiguration)
  type: Method
  source:
    remote:
      path: src/Security/src/Authentication.CloudFoundryCore/AuthenticationBuilderExtensions.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: AddCloudFoundryOAuth
    path: ../Steeltoe/src/Security/src/Authentication.CloudFoundryCore/AuthenticationBuilderExtensions.cs
    startLine: 40
  assemblies:
  - Steeltoe.Security.Authentication.CloudFoundryCore
  namespace: Steeltoe.Security.Authentication.CloudFoundry
  summary: "\nAdds OAuth middleware and configuration for using UAA or Pivotal SSO for user authentication\n"
  example: []
  syntax:
    content: public static AuthenticationBuilder AddCloudFoundryOAuth(this AuthenticationBuilder builder, string authenticationScheme, IConfiguration config)
    parameters:
    - id: builder
      type: Microsoft.AspNetCore.Authentication.AuthenticationBuilder
      description: Your <xref href="Microsoft.AspNetCore.Authentication.AuthenticationBuilder" data-throw-if-not-resolved="false"></xref>
    - id: authenticationScheme
      type: System.String
      description: An identifier for this authentication mechanism.
    - id: config
      type: Microsoft.Extensions.Configuration.IConfiguration
      description: Your application configuration. Be sure to include the <xref href="Steeltoe.Extensions.Configuration.CloudFoundry.CloudFoundryConfigurationProvider" data-throw-if-not-resolved="false"></xref>
    return:
      type: Microsoft.AspNetCore.Authentication.AuthenticationBuilder
      description: <xref href="Microsoft.AspNetCore.Authentication.AuthenticationBuilder" data-throw-if-not-resolved="false"></xref> configured to use OAuth with UAA or Pivotal SSO
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function AddCloudFoundryOAuth(builder As AuthenticationBuilder, authenticationScheme As String, config As IConfiguration) As AuthenticationBuilder
  overload: Steeltoe.Security.Authentication.CloudFoundry.AuthenticationBuilderExtensions.AddCloudFoundryOAuth*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Steeltoe.Security.Authentication.CloudFoundry.AuthenticationBuilderExtensions.AddCloudFoundryOAuth(Microsoft.AspNetCore.Authentication.AuthenticationBuilder,System.String,System.String,Microsoft.Extensions.Configuration.IConfiguration)
  commentId: M:Steeltoe.Security.Authentication.CloudFoundry.AuthenticationBuilderExtensions.AddCloudFoundryOAuth(Microsoft.AspNetCore.Authentication.AuthenticationBuilder,System.String,System.String,Microsoft.Extensions.Configuration.IConfiguration)
  id: AddCloudFoundryOAuth(Microsoft.AspNetCore.Authentication.AuthenticationBuilder,System.String,System.String,Microsoft.Extensions.Configuration.IConfiguration)
  isExtensionMethod: true
  parent: Steeltoe.Security.Authentication.CloudFoundry.AuthenticationBuilderExtensions
  langs:
  - csharp
  - vb
  name: AddCloudFoundryOAuth(AuthenticationBuilder, String, String, IConfiguration)
  nameWithType: AuthenticationBuilderExtensions.AddCloudFoundryOAuth(AuthenticationBuilder, String, String, IConfiguration)
  fullName: Steeltoe.Security.Authentication.CloudFoundry.AuthenticationBuilderExtensions.AddCloudFoundryOAuth(Microsoft.AspNetCore.Authentication.AuthenticationBuilder, System.String, System.String, Microsoft.Extensions.Configuration.IConfiguration)
  type: Method
  source:
    remote:
      path: src/Security/src/Authentication.CloudFoundryCore/AuthenticationBuilderExtensions.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: AddCloudFoundryOAuth
    path: ../Steeltoe/src/Security/src/Authentication.CloudFoundryCore/AuthenticationBuilderExtensions.cs
    startLine: 51
  assemblies:
  - Steeltoe.Security.Authentication.CloudFoundryCore
  namespace: Steeltoe.Security.Authentication.CloudFoundry
  summary: "\nAdds OAuth middleware and configuration for using UAA or Pivotal SSO for user authentication\n"
  example: []
  syntax:
    content: public static AuthenticationBuilder AddCloudFoundryOAuth(this AuthenticationBuilder builder, string authenticationScheme, string displayName, IConfiguration config)
    parameters:
    - id: builder
      type: Microsoft.AspNetCore.Authentication.AuthenticationBuilder
      description: Your <xref href="Microsoft.AspNetCore.Authentication.AuthenticationBuilder" data-throw-if-not-resolved="false"></xref>
    - id: authenticationScheme
      type: System.String
      description: An identifier for this authentication mechanism.
    - id: displayName
      type: System.String
      description: Sets a display name for this auth scheme. Defaults to <xref href="Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryDefaults.DisplayName" data-throw-if-not-resolved="false"></xref>
    - id: config
      type: Microsoft.Extensions.Configuration.IConfiguration
      description: Your application configuration. Be sure to include the <xref href="Steeltoe.Extensions.Configuration.CloudFoundry.CloudFoundryConfigurationProvider" data-throw-if-not-resolved="false"></xref>
    return:
      type: Microsoft.AspNetCore.Authentication.AuthenticationBuilder
      description: <xref href="Microsoft.AspNetCore.Authentication.AuthenticationBuilder" data-throw-if-not-resolved="false"></xref> configured to use OAuth with UAA or Pivotal SSO
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function AddCloudFoundryOAuth(builder As AuthenticationBuilder, authenticationScheme As String, displayName As String, config As IConfiguration) As AuthenticationBuilder
  overload: Steeltoe.Security.Authentication.CloudFoundry.AuthenticationBuilderExtensions.AddCloudFoundryOAuth*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Steeltoe.Security.Authentication.CloudFoundry.AuthenticationBuilderExtensions.AddCloudFoundryOAuth(Microsoft.AspNetCore.Authentication.AuthenticationBuilder,Microsoft.Extensions.Configuration.IConfiguration,System.Action{Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions,Microsoft.Extensions.Configuration.IConfiguration})
  commentId: M:Steeltoe.Security.Authentication.CloudFoundry.AuthenticationBuilderExtensions.AddCloudFoundryOAuth(Microsoft.AspNetCore.Authentication.AuthenticationBuilder,Microsoft.Extensions.Configuration.IConfiguration,System.Action{Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions,Microsoft.Extensions.Configuration.IConfiguration})
  id: AddCloudFoundryOAuth(Microsoft.AspNetCore.Authentication.AuthenticationBuilder,Microsoft.Extensions.Configuration.IConfiguration,System.Action{Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions,Microsoft.Extensions.Configuration.IConfiguration})
  isExtensionMethod: true
  parent: Steeltoe.Security.Authentication.CloudFoundry.AuthenticationBuilderExtensions
  langs:
  - csharp
  - vb
  name: AddCloudFoundryOAuth(AuthenticationBuilder, IConfiguration, Action<CloudFoundryOAuthOptions, IConfiguration>)
  nameWithType: AuthenticationBuilderExtensions.AddCloudFoundryOAuth(AuthenticationBuilder, IConfiguration, Action<CloudFoundryOAuthOptions, IConfiguration>)
  fullName: Steeltoe.Security.Authentication.CloudFoundry.AuthenticationBuilderExtensions.AddCloudFoundryOAuth(Microsoft.AspNetCore.Authentication.AuthenticationBuilder, Microsoft.Extensions.Configuration.IConfiguration, System.Action<Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions, Microsoft.Extensions.Configuration.IConfiguration>)
  type: Method
  source:
    remote:
      path: src/Security/src/Authentication.CloudFoundryCore/AuthenticationBuilderExtensions.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: AddCloudFoundryOAuth
    path: ../Steeltoe/src/Security/src/Authentication.CloudFoundryCore/AuthenticationBuilderExtensions.cs
    startLine: 71
  assemblies:
  - Steeltoe.Security.Authentication.CloudFoundryCore
  namespace: Steeltoe.Security.Authentication.CloudFoundry
  summary: "\nAdds OAuth middleware and configuration for using UAA or Pivotal SSO for user authentication\n"
  example: []
  syntax:
    content: public static AuthenticationBuilder AddCloudFoundryOAuth(this AuthenticationBuilder builder, IConfiguration config, Action<CloudFoundryOAuthOptions, IConfiguration> configurer)
    parameters:
    - id: builder
      type: Microsoft.AspNetCore.Authentication.AuthenticationBuilder
      description: Your <xref href="Microsoft.AspNetCore.Authentication.AuthenticationBuilder" data-throw-if-not-resolved="false"></xref>
    - id: config
      type: Microsoft.Extensions.Configuration.IConfiguration
      description: Your application configuration. Be sure to include the <xref href="Steeltoe.Extensions.Configuration.CloudFoundry.CloudFoundryConfigurationProvider" data-throw-if-not-resolved="false"></xref>
    - id: configurer
      type: System.Action{Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions,Microsoft.Extensions.Configuration.IConfiguration}
      description: Used to configure the options
    return:
      type: Microsoft.AspNetCore.Authentication.AuthenticationBuilder
      description: <xref href="Microsoft.AspNetCore.Authentication.AuthenticationBuilder" data-throw-if-not-resolved="false"></xref> configured to use OAuth with UAA or Pivotal SSO
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function AddCloudFoundryOAuth(builder As AuthenticationBuilder, config As IConfiguration, configurer As Action(Of CloudFoundryOAuthOptions, IConfiguration)) As AuthenticationBuilder
  overload: Steeltoe.Security.Authentication.CloudFoundry.AuthenticationBuilderExtensions.AddCloudFoundryOAuth*
  nameWithType.vb: AuthenticationBuilderExtensions.AddCloudFoundryOAuth(AuthenticationBuilder, IConfiguration, Action(Of CloudFoundryOAuthOptions, IConfiguration))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Steeltoe.Security.Authentication.CloudFoundry.AuthenticationBuilderExtensions.AddCloudFoundryOAuth(Microsoft.AspNetCore.Authentication.AuthenticationBuilder, Microsoft.Extensions.Configuration.IConfiguration, System.Action(Of Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions, Microsoft.Extensions.Configuration.IConfiguration))
  name.vb: AddCloudFoundryOAuth(AuthenticationBuilder, IConfiguration, Action(Of CloudFoundryOAuthOptions, IConfiguration))
- uid: Steeltoe.Security.Authentication.CloudFoundry.AuthenticationBuilderExtensions.AddCloudFoundryOAuth(Microsoft.AspNetCore.Authentication.AuthenticationBuilder,System.String,Microsoft.Extensions.Configuration.IConfiguration,System.Action{Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions,Microsoft.Extensions.Configuration.IConfiguration})
  commentId: M:Steeltoe.Security.Authentication.CloudFoundry.AuthenticationBuilderExtensions.AddCloudFoundryOAuth(Microsoft.AspNetCore.Authentication.AuthenticationBuilder,System.String,Microsoft.Extensions.Configuration.IConfiguration,System.Action{Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions,Microsoft.Extensions.Configuration.IConfiguration})
  id: AddCloudFoundryOAuth(Microsoft.AspNetCore.Authentication.AuthenticationBuilder,System.String,Microsoft.Extensions.Configuration.IConfiguration,System.Action{Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions,Microsoft.Extensions.Configuration.IConfiguration})
  isExtensionMethod: true
  parent: Steeltoe.Security.Authentication.CloudFoundry.AuthenticationBuilderExtensions
  langs:
  - csharp
  - vb
  name: AddCloudFoundryOAuth(AuthenticationBuilder, String, IConfiguration, Action<CloudFoundryOAuthOptions, IConfiguration>)
  nameWithType: AuthenticationBuilderExtensions.AddCloudFoundryOAuth(AuthenticationBuilder, String, IConfiguration, Action<CloudFoundryOAuthOptions, IConfiguration>)
  fullName: Steeltoe.Security.Authentication.CloudFoundry.AuthenticationBuilderExtensions.AddCloudFoundryOAuth(Microsoft.AspNetCore.Authentication.AuthenticationBuilder, System.String, Microsoft.Extensions.Configuration.IConfiguration, System.Action<Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions, Microsoft.Extensions.Configuration.IConfiguration>)
  type: Method
  source:
    remote:
      path: src/Security/src/Authentication.CloudFoundryCore/AuthenticationBuilderExtensions.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: AddCloudFoundryOAuth
    path: ../Steeltoe/src/Security/src/Authentication.CloudFoundryCore/AuthenticationBuilderExtensions.cs
    startLine: 82
  assemblies:
  - Steeltoe.Security.Authentication.CloudFoundryCore
  namespace: Steeltoe.Security.Authentication.CloudFoundry
  summary: "\nAdds OAuth middleware and configuration for using UAA or Pivotal SSO for user authentication\n"
  example: []
  syntax:
    content: public static AuthenticationBuilder AddCloudFoundryOAuth(this AuthenticationBuilder builder, string authenticationScheme, IConfiguration config, Action<CloudFoundryOAuthOptions, IConfiguration> configurer)
    parameters:
    - id: builder
      type: Microsoft.AspNetCore.Authentication.AuthenticationBuilder
      description: Your <xref href="Microsoft.AspNetCore.Authentication.AuthenticationBuilder" data-throw-if-not-resolved="false"></xref>
    - id: authenticationScheme
      type: System.String
      description: An identifier for this authentication mechanism. Default value is <xref href="Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryDefaults.DisplayName" data-throw-if-not-resolved="false"></xref>
    - id: config
      type: Microsoft.Extensions.Configuration.IConfiguration
      description: Your application configuration. Be sure to include the <xref href="Steeltoe.Extensions.Configuration.CloudFoundry.CloudFoundryConfigurationProvider" data-throw-if-not-resolved="false"></xref>
    - id: configurer
      type: System.Action{Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions,Microsoft.Extensions.Configuration.IConfiguration}
      description: Used to configure the options
    return:
      type: Microsoft.AspNetCore.Authentication.AuthenticationBuilder
      description: <xref href="Microsoft.AspNetCore.Authentication.AuthenticationBuilder" data-throw-if-not-resolved="false"></xref> configured to use OAuth with UAA or Pivotal SSO
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function AddCloudFoundryOAuth(builder As AuthenticationBuilder, authenticationScheme As String, config As IConfiguration, configurer As Action(Of CloudFoundryOAuthOptions, IConfiguration)) As AuthenticationBuilder
  overload: Steeltoe.Security.Authentication.CloudFoundry.AuthenticationBuilderExtensions.AddCloudFoundryOAuth*
  nameWithType.vb: AuthenticationBuilderExtensions.AddCloudFoundryOAuth(AuthenticationBuilder, String, IConfiguration, Action(Of CloudFoundryOAuthOptions, IConfiguration))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Steeltoe.Security.Authentication.CloudFoundry.AuthenticationBuilderExtensions.AddCloudFoundryOAuth(Microsoft.AspNetCore.Authentication.AuthenticationBuilder, System.String, Microsoft.Extensions.Configuration.IConfiguration, System.Action(Of Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions, Microsoft.Extensions.Configuration.IConfiguration))
  name.vb: AddCloudFoundryOAuth(AuthenticationBuilder, String, IConfiguration, Action(Of CloudFoundryOAuthOptions, IConfiguration))
- uid: Steeltoe.Security.Authentication.CloudFoundry.AuthenticationBuilderExtensions.AddCloudFoundryOAuth(Microsoft.AspNetCore.Authentication.AuthenticationBuilder,System.String,System.String,Microsoft.Extensions.Configuration.IConfiguration,System.Action{Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions,Microsoft.Extensions.Configuration.IConfiguration})
  commentId: M:Steeltoe.Security.Authentication.CloudFoundry.AuthenticationBuilderExtensions.AddCloudFoundryOAuth(Microsoft.AspNetCore.Authentication.AuthenticationBuilder,System.String,System.String,Microsoft.Extensions.Configuration.IConfiguration,System.Action{Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions,Microsoft.Extensions.Configuration.IConfiguration})
  id: AddCloudFoundryOAuth(Microsoft.AspNetCore.Authentication.AuthenticationBuilder,System.String,System.String,Microsoft.Extensions.Configuration.IConfiguration,System.Action{Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions,Microsoft.Extensions.Configuration.IConfiguration})
  isExtensionMethod: true
  parent: Steeltoe.Security.Authentication.CloudFoundry.AuthenticationBuilderExtensions
  langs:
  - csharp
  - vb
  name: AddCloudFoundryOAuth(AuthenticationBuilder, String, String, IConfiguration, Action<CloudFoundryOAuthOptions, IConfiguration>)
  nameWithType: AuthenticationBuilderExtensions.AddCloudFoundryOAuth(AuthenticationBuilder, String, String, IConfiguration, Action<CloudFoundryOAuthOptions, IConfiguration>)
  fullName: Steeltoe.Security.Authentication.CloudFoundry.AuthenticationBuilderExtensions.AddCloudFoundryOAuth(Microsoft.AspNetCore.Authentication.AuthenticationBuilder, System.String, System.String, Microsoft.Extensions.Configuration.IConfiguration, System.Action<Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions, Microsoft.Extensions.Configuration.IConfiguration>)
  type: Method
  source:
    remote:
      path: src/Security/src/Authentication.CloudFoundryCore/AuthenticationBuilderExtensions.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: AddCloudFoundryOAuth
    path: ../Steeltoe/src/Security/src/Authentication.CloudFoundryCore/AuthenticationBuilderExtensions.cs
    startLine: 94
  assemblies:
  - Steeltoe.Security.Authentication.CloudFoundryCore
  namespace: Steeltoe.Security.Authentication.CloudFoundry
  summary: "\nAdds OAuth middleware and configuration for using UAA or Pivotal SSO for user authentication\n"
  example: []
  syntax:
    content: public static AuthenticationBuilder AddCloudFoundryOAuth(this AuthenticationBuilder builder, string authenticationScheme, string displayName, IConfiguration config, Action<CloudFoundryOAuthOptions, IConfiguration> configurer)
    parameters:
    - id: builder
      type: Microsoft.AspNetCore.Authentication.AuthenticationBuilder
      description: Your <xref href="Microsoft.AspNetCore.Authentication.AuthenticationBuilder" data-throw-if-not-resolved="false"></xref>
    - id: authenticationScheme
      type: System.String
      description: An identifier for this authentication mechanism. Default value is <xref href="Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryDefaults.DisplayName" data-throw-if-not-resolved="false"></xref>
    - id: displayName
      type: System.String
      description: Sets a display name for this auth scheme. Defaults to <xref href="Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryDefaults.DisplayName" data-throw-if-not-resolved="false"></xref>
    - id: config
      type: Microsoft.Extensions.Configuration.IConfiguration
      description: Your application configuration. Be sure to include the <xref href="Steeltoe.Extensions.Configuration.CloudFoundry.CloudFoundryConfigurationProvider" data-throw-if-not-resolved="false"></xref>
    - id: configurer
      type: System.Action{Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions,Microsoft.Extensions.Configuration.IConfiguration}
      description: Used to configure the options
    return:
      type: Microsoft.AspNetCore.Authentication.AuthenticationBuilder
      description: <xref href="Microsoft.AspNetCore.Authentication.AuthenticationBuilder" data-throw-if-not-resolved="false"></xref> configured to use OAuth with UAA or Pivotal SSO
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function AddCloudFoundryOAuth(builder As AuthenticationBuilder, authenticationScheme As String, displayName As String, config As IConfiguration, configurer As Action(Of CloudFoundryOAuthOptions, IConfiguration)) As AuthenticationBuilder
  overload: Steeltoe.Security.Authentication.CloudFoundry.AuthenticationBuilderExtensions.AddCloudFoundryOAuth*
  nameWithType.vb: AuthenticationBuilderExtensions.AddCloudFoundryOAuth(AuthenticationBuilder, String, String, IConfiguration, Action(Of CloudFoundryOAuthOptions, IConfiguration))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Steeltoe.Security.Authentication.CloudFoundry.AuthenticationBuilderExtensions.AddCloudFoundryOAuth(Microsoft.AspNetCore.Authentication.AuthenticationBuilder, System.String, System.String, Microsoft.Extensions.Configuration.IConfiguration, System.Action(Of Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions, Microsoft.Extensions.Configuration.IConfiguration))
  name.vb: AddCloudFoundryOAuth(AuthenticationBuilder, String, String, IConfiguration, Action(Of CloudFoundryOAuthOptions, IConfiguration))
- uid: Steeltoe.Security.Authentication.CloudFoundry.AuthenticationBuilderExtensions.AddCloudFoundryOpenIdConnect(Microsoft.AspNetCore.Authentication.AuthenticationBuilder,Microsoft.Extensions.Configuration.IConfiguration)
  commentId: M:Steeltoe.Security.Authentication.CloudFoundry.AuthenticationBuilderExtensions.AddCloudFoundryOpenIdConnect(Microsoft.AspNetCore.Authentication.AuthenticationBuilder,Microsoft.Extensions.Configuration.IConfiguration)
  id: AddCloudFoundryOpenIdConnect(Microsoft.AspNetCore.Authentication.AuthenticationBuilder,Microsoft.Extensions.Configuration.IConfiguration)
  isExtensionMethod: true
  parent: Steeltoe.Security.Authentication.CloudFoundry.AuthenticationBuilderExtensions
  langs:
  - csharp
  - vb
  name: AddCloudFoundryOpenIdConnect(AuthenticationBuilder, IConfiguration)
  nameWithType: AuthenticationBuilderExtensions.AddCloudFoundryOpenIdConnect(AuthenticationBuilder, IConfiguration)
  fullName: Steeltoe.Security.Authentication.CloudFoundry.AuthenticationBuilderExtensions.AddCloudFoundryOpenIdConnect(Microsoft.AspNetCore.Authentication.AuthenticationBuilder, Microsoft.Extensions.Configuration.IConfiguration)
  type: Method
  source:
    remote:
      path: src/Security/src/Authentication.CloudFoundryCore/AuthenticationBuilderExtensions.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: AddCloudFoundryOpenIdConnect
    path: ../Steeltoe/src/Security/src/Authentication.CloudFoundryCore/AuthenticationBuilderExtensions.cs
    startLine: 109
  assemblies:
  - Steeltoe.Security.Authentication.CloudFoundryCore
  namespace: Steeltoe.Security.Authentication.CloudFoundry
  summary: "\nAdds OpenID Connect middleware and configuration for using UAA or Pivotal SSO for user authentication\n"
  example: []
  syntax:
    content: public static AuthenticationBuilder AddCloudFoundryOpenIdConnect(this AuthenticationBuilder builder, IConfiguration config)
    parameters:
    - id: builder
      type: Microsoft.AspNetCore.Authentication.AuthenticationBuilder
      description: Your <xref href="Microsoft.AspNetCore.Authentication.AuthenticationBuilder" data-throw-if-not-resolved="false"></xref>
    - id: config
      type: Microsoft.Extensions.Configuration.IConfiguration
      description: Your application configuration. Be sure to include the <xref href="Steeltoe.Extensions.Configuration.CloudFoundry.CloudFoundryConfigurationProvider" data-throw-if-not-resolved="false"></xref>
    return:
      type: Microsoft.AspNetCore.Authentication.AuthenticationBuilder
      description: <xref href="Microsoft.AspNetCore.Authentication.AuthenticationBuilder" data-throw-if-not-resolved="false"></xref> configured to use OpenID Connect with UAA or Pivotal SSO
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function AddCloudFoundryOpenIdConnect(builder As AuthenticationBuilder, config As IConfiguration) As AuthenticationBuilder
  overload: Steeltoe.Security.Authentication.CloudFoundry.AuthenticationBuilderExtensions.AddCloudFoundryOpenIdConnect*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Steeltoe.Security.Authentication.CloudFoundry.AuthenticationBuilderExtensions.AddCloudFoundryOpenIdConnect(Microsoft.AspNetCore.Authentication.AuthenticationBuilder,System.String,Microsoft.Extensions.Configuration.IConfiguration)
  commentId: M:Steeltoe.Security.Authentication.CloudFoundry.AuthenticationBuilderExtensions.AddCloudFoundryOpenIdConnect(Microsoft.AspNetCore.Authentication.AuthenticationBuilder,System.String,Microsoft.Extensions.Configuration.IConfiguration)
  id: AddCloudFoundryOpenIdConnect(Microsoft.AspNetCore.Authentication.AuthenticationBuilder,System.String,Microsoft.Extensions.Configuration.IConfiguration)
  isExtensionMethod: true
  parent: Steeltoe.Security.Authentication.CloudFoundry.AuthenticationBuilderExtensions
  langs:
  - csharp
  - vb
  name: AddCloudFoundryOpenIdConnect(AuthenticationBuilder, String, IConfiguration)
  nameWithType: AuthenticationBuilderExtensions.AddCloudFoundryOpenIdConnect(AuthenticationBuilder, String, IConfiguration)
  fullName: Steeltoe.Security.Authentication.CloudFoundry.AuthenticationBuilderExtensions.AddCloudFoundryOpenIdConnect(Microsoft.AspNetCore.Authentication.AuthenticationBuilder, System.String, Microsoft.Extensions.Configuration.IConfiguration)
  type: Method
  source:
    remote:
      path: src/Security/src/Authentication.CloudFoundryCore/AuthenticationBuilderExtensions.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: AddCloudFoundryOpenIdConnect
    path: ../Steeltoe/src/Security/src/Authentication.CloudFoundryCore/AuthenticationBuilderExtensions.cs
    startLine: 119
  assemblies:
  - Steeltoe.Security.Authentication.CloudFoundryCore
  namespace: Steeltoe.Security.Authentication.CloudFoundry
  summary: "\nAdds OpenID Connect middleware and configuration for using UAA or Pivotal SSO for user authentication\n"
  example: []
  syntax:
    content: public static AuthenticationBuilder AddCloudFoundryOpenIdConnect(this AuthenticationBuilder builder, string authenticationScheme, IConfiguration config)
    parameters:
    - id: builder
      type: Microsoft.AspNetCore.Authentication.AuthenticationBuilder
      description: Your <xref href="Microsoft.AspNetCore.Authentication.AuthenticationBuilder" data-throw-if-not-resolved="false"></xref>
    - id: authenticationScheme
      type: System.String
      description: An identifier for this authentication mechanism. Default value is <xref href="Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryDefaults.DisplayName" data-throw-if-not-resolved="false"></xref>
    - id: config
      type: Microsoft.Extensions.Configuration.IConfiguration
      description: Your application configuration. Be sure to include the <xref href="Steeltoe.Extensions.Configuration.CloudFoundry.CloudFoundryConfigurationProvider" data-throw-if-not-resolved="false"></xref>
    return:
      type: Microsoft.AspNetCore.Authentication.AuthenticationBuilder
      description: <xref href="Microsoft.AspNetCore.Authentication.AuthenticationBuilder" data-throw-if-not-resolved="false"></xref> configured to use OpenID Connect with UAA or Pivotal SSO
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function AddCloudFoundryOpenIdConnect(builder As AuthenticationBuilder, authenticationScheme As String, config As IConfiguration) As AuthenticationBuilder
  overload: Steeltoe.Security.Authentication.CloudFoundry.AuthenticationBuilderExtensions.AddCloudFoundryOpenIdConnect*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Steeltoe.Security.Authentication.CloudFoundry.AuthenticationBuilderExtensions.AddCloudFoundryOpenIdConnect(Microsoft.AspNetCore.Authentication.AuthenticationBuilder,System.String,System.String,Microsoft.Extensions.Configuration.IConfiguration)
  commentId: M:Steeltoe.Security.Authentication.CloudFoundry.AuthenticationBuilderExtensions.AddCloudFoundryOpenIdConnect(Microsoft.AspNetCore.Authentication.AuthenticationBuilder,System.String,System.String,Microsoft.Extensions.Configuration.IConfiguration)
  id: AddCloudFoundryOpenIdConnect(Microsoft.AspNetCore.Authentication.AuthenticationBuilder,System.String,System.String,Microsoft.Extensions.Configuration.IConfiguration)
  isExtensionMethod: true
  parent: Steeltoe.Security.Authentication.CloudFoundry.AuthenticationBuilderExtensions
  langs:
  - csharp
  - vb
  name: AddCloudFoundryOpenIdConnect(AuthenticationBuilder, String, String, IConfiguration)
  nameWithType: AuthenticationBuilderExtensions.AddCloudFoundryOpenIdConnect(AuthenticationBuilder, String, String, IConfiguration)
  fullName: Steeltoe.Security.Authentication.CloudFoundry.AuthenticationBuilderExtensions.AddCloudFoundryOpenIdConnect(Microsoft.AspNetCore.Authentication.AuthenticationBuilder, System.String, System.String, Microsoft.Extensions.Configuration.IConfiguration)
  type: Method
  source:
    remote:
      path: src/Security/src/Authentication.CloudFoundryCore/AuthenticationBuilderExtensions.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: AddCloudFoundryOpenIdConnect
    path: ../Steeltoe/src/Security/src/Authentication.CloudFoundryCore/AuthenticationBuilderExtensions.cs
    startLine: 130
  assemblies:
  - Steeltoe.Security.Authentication.CloudFoundryCore
  namespace: Steeltoe.Security.Authentication.CloudFoundry
  summary: "\nAdds OpenID Connect middleware and configuration for using UAA or Pivotal SSO for user authentication\n"
  example: []
  syntax:
    content: public static AuthenticationBuilder AddCloudFoundryOpenIdConnect(this AuthenticationBuilder builder, string authenticationScheme, string displayName, IConfiguration config)
    parameters:
    - id: builder
      type: Microsoft.AspNetCore.Authentication.AuthenticationBuilder
      description: Your <xref href="Microsoft.AspNetCore.Authentication.AuthenticationBuilder" data-throw-if-not-resolved="false"></xref>
    - id: authenticationScheme
      type: System.String
      description: An identifier for this authentication mechanism. Default value is <xref href="Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryDefaults.DisplayName" data-throw-if-not-resolved="false"></xref>
    - id: displayName
      type: System.String
      description: Sets a display name for this auth scheme. Defaults to <xref href="Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryDefaults.DisplayName" data-throw-if-not-resolved="false"></xref>
    - id: config
      type: Microsoft.Extensions.Configuration.IConfiguration
      description: Your application configuration. Be sure to include the <xref href="Steeltoe.Extensions.Configuration.CloudFoundry.CloudFoundryConfigurationProvider" data-throw-if-not-resolved="false"></xref>
    return:
      type: Microsoft.AspNetCore.Authentication.AuthenticationBuilder
      description: <xref href="Microsoft.AspNetCore.Authentication.AuthenticationBuilder" data-throw-if-not-resolved="false"></xref> configured to use OpenID Connect with UAA or Pivotal SSO
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function AddCloudFoundryOpenIdConnect(builder As AuthenticationBuilder, authenticationScheme As String, displayName As String, config As IConfiguration) As AuthenticationBuilder
  overload: Steeltoe.Security.Authentication.CloudFoundry.AuthenticationBuilderExtensions.AddCloudFoundryOpenIdConnect*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Steeltoe.Security.Authentication.CloudFoundry.AuthenticationBuilderExtensions.AddCloudFoundryOpenIdConnect(Microsoft.AspNetCore.Authentication.AuthenticationBuilder,Microsoft.Extensions.Configuration.IConfiguration,System.Action{Microsoft.AspNetCore.Authentication.OpenIdConnect.OpenIdConnectOptions,Microsoft.Extensions.Configuration.IConfiguration})
  commentId: M:Steeltoe.Security.Authentication.CloudFoundry.AuthenticationBuilderExtensions.AddCloudFoundryOpenIdConnect(Microsoft.AspNetCore.Authentication.AuthenticationBuilder,Microsoft.Extensions.Configuration.IConfiguration,System.Action{Microsoft.AspNetCore.Authentication.OpenIdConnect.OpenIdConnectOptions,Microsoft.Extensions.Configuration.IConfiguration})
  id: AddCloudFoundryOpenIdConnect(Microsoft.AspNetCore.Authentication.AuthenticationBuilder,Microsoft.Extensions.Configuration.IConfiguration,System.Action{Microsoft.AspNetCore.Authentication.OpenIdConnect.OpenIdConnectOptions,Microsoft.Extensions.Configuration.IConfiguration})
  isExtensionMethod: true
  parent: Steeltoe.Security.Authentication.CloudFoundry.AuthenticationBuilderExtensions
  langs:
  - csharp
  - vb
  name: AddCloudFoundryOpenIdConnect(AuthenticationBuilder, IConfiguration, Action<OpenIdConnectOptions, IConfiguration>)
  nameWithType: AuthenticationBuilderExtensions.AddCloudFoundryOpenIdConnect(AuthenticationBuilder, IConfiguration, Action<OpenIdConnectOptions, IConfiguration>)
  fullName: Steeltoe.Security.Authentication.CloudFoundry.AuthenticationBuilderExtensions.AddCloudFoundryOpenIdConnect(Microsoft.AspNetCore.Authentication.AuthenticationBuilder, Microsoft.Extensions.Configuration.IConfiguration, System.Action<Microsoft.AspNetCore.Authentication.OpenIdConnect.OpenIdConnectOptions, Microsoft.Extensions.Configuration.IConfiguration>)
  type: Method
  source:
    remote:
      path: src/Security/src/Authentication.CloudFoundryCore/AuthenticationBuilderExtensions.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: AddCloudFoundryOpenIdConnect
    path: ../Steeltoe/src/Security/src/Authentication.CloudFoundryCore/AuthenticationBuilderExtensions.cs
    startLine: 151
  assemblies:
  - Steeltoe.Security.Authentication.CloudFoundryCore
  namespace: Steeltoe.Security.Authentication.CloudFoundry
  summary: "\nAdds OpenID Connect middleware and configuration for using UAA or Pivotal SSO for user authentication\n"
  example: []
  syntax:
    content: public static AuthenticationBuilder AddCloudFoundryOpenIdConnect(this AuthenticationBuilder builder, IConfiguration config, Action<OpenIdConnectOptions, IConfiguration> configurer)
    parameters:
    - id: builder
      type: Microsoft.AspNetCore.Authentication.AuthenticationBuilder
      description: Your <xref href="Microsoft.AspNetCore.Authentication.AuthenticationBuilder" data-throw-if-not-resolved="false"></xref>
    - id: config
      type: Microsoft.Extensions.Configuration.IConfiguration
      description: Your application configuration. Be sure to include the <xref href="Steeltoe.Extensions.Configuration.CloudFoundry.CloudFoundryConfigurationProvider" data-throw-if-not-resolved="false"></xref>
    - id: configurer
      type: System.Action{Microsoft.AspNetCore.Authentication.OpenIdConnect.OpenIdConnectOptions,Microsoft.Extensions.Configuration.IConfiguration}
      description: Configure the <xref href="Microsoft.AspNetCore.Authentication.OpenIdConnect.OpenIdConnectOptions" data-throw-if-not-resolved="false"></xref> after applying service bindings
    return:
      type: Microsoft.AspNetCore.Authentication.AuthenticationBuilder
      description: <xref href="Microsoft.AspNetCore.Authentication.AuthenticationBuilder" data-throw-if-not-resolved="false"></xref> configured to use OpenID Connect with UAA or Pivotal SSO
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function AddCloudFoundryOpenIdConnect(builder As AuthenticationBuilder, config As IConfiguration, configurer As Action(Of OpenIdConnectOptions, IConfiguration)) As AuthenticationBuilder
  overload: Steeltoe.Security.Authentication.CloudFoundry.AuthenticationBuilderExtensions.AddCloudFoundryOpenIdConnect*
  nameWithType.vb: AuthenticationBuilderExtensions.AddCloudFoundryOpenIdConnect(AuthenticationBuilder, IConfiguration, Action(Of OpenIdConnectOptions, IConfiguration))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Steeltoe.Security.Authentication.CloudFoundry.AuthenticationBuilderExtensions.AddCloudFoundryOpenIdConnect(Microsoft.AspNetCore.Authentication.AuthenticationBuilder, Microsoft.Extensions.Configuration.IConfiguration, System.Action(Of Microsoft.AspNetCore.Authentication.OpenIdConnect.OpenIdConnectOptions, Microsoft.Extensions.Configuration.IConfiguration))
  name.vb: AddCloudFoundryOpenIdConnect(AuthenticationBuilder, IConfiguration, Action(Of OpenIdConnectOptions, IConfiguration))
- uid: Steeltoe.Security.Authentication.CloudFoundry.AuthenticationBuilderExtensions.AddCloudFoundryOpenIdConnect(Microsoft.AspNetCore.Authentication.AuthenticationBuilder,System.String,Microsoft.Extensions.Configuration.IConfiguration,System.Action{Microsoft.AspNetCore.Authentication.OpenIdConnect.OpenIdConnectOptions,Microsoft.Extensions.Configuration.IConfiguration})
  commentId: M:Steeltoe.Security.Authentication.CloudFoundry.AuthenticationBuilderExtensions.AddCloudFoundryOpenIdConnect(Microsoft.AspNetCore.Authentication.AuthenticationBuilder,System.String,Microsoft.Extensions.Configuration.IConfiguration,System.Action{Microsoft.AspNetCore.Authentication.OpenIdConnect.OpenIdConnectOptions,Microsoft.Extensions.Configuration.IConfiguration})
  id: AddCloudFoundryOpenIdConnect(Microsoft.AspNetCore.Authentication.AuthenticationBuilder,System.String,Microsoft.Extensions.Configuration.IConfiguration,System.Action{Microsoft.AspNetCore.Authentication.OpenIdConnect.OpenIdConnectOptions,Microsoft.Extensions.Configuration.IConfiguration})
  isExtensionMethod: true
  parent: Steeltoe.Security.Authentication.CloudFoundry.AuthenticationBuilderExtensions
  langs:
  - csharp
  - vb
  name: AddCloudFoundryOpenIdConnect(AuthenticationBuilder, String, IConfiguration, Action<OpenIdConnectOptions, IConfiguration>)
  nameWithType: AuthenticationBuilderExtensions.AddCloudFoundryOpenIdConnect(AuthenticationBuilder, String, IConfiguration, Action<OpenIdConnectOptions, IConfiguration>)
  fullName: Steeltoe.Security.Authentication.CloudFoundry.AuthenticationBuilderExtensions.AddCloudFoundryOpenIdConnect(Microsoft.AspNetCore.Authentication.AuthenticationBuilder, System.String, Microsoft.Extensions.Configuration.IConfiguration, System.Action<Microsoft.AspNetCore.Authentication.OpenIdConnect.OpenIdConnectOptions, Microsoft.Extensions.Configuration.IConfiguration>)
  type: Method
  source:
    remote:
      path: src/Security/src/Authentication.CloudFoundryCore/AuthenticationBuilderExtensions.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: AddCloudFoundryOpenIdConnect
    path: ../Steeltoe/src/Security/src/Authentication.CloudFoundryCore/AuthenticationBuilderExtensions.cs
    startLine: 162
  assemblies:
  - Steeltoe.Security.Authentication.CloudFoundryCore
  namespace: Steeltoe.Security.Authentication.CloudFoundry
  summary: "\nAdds OpenID Connect middleware and configuration for using UAA or Pivotal SSO for user authentication\n"
  example: []
  syntax:
    content: public static AuthenticationBuilder AddCloudFoundryOpenIdConnect(this AuthenticationBuilder builder, string authenticationScheme, IConfiguration config, Action<OpenIdConnectOptions, IConfiguration> configurer)
    parameters:
    - id: builder
      type: Microsoft.AspNetCore.Authentication.AuthenticationBuilder
      description: Your <xref href="Microsoft.AspNetCore.Authentication.AuthenticationBuilder" data-throw-if-not-resolved="false"></xref>
    - id: authenticationScheme
      type: System.String
      description: An identifier for this authentication mechanism. Default value is <xref href="Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryDefaults.DisplayName" data-throw-if-not-resolved="false"></xref>
    - id: config
      type: Microsoft.Extensions.Configuration.IConfiguration
      description: (Optional) Your application configuration. Be sure to include the <xref href="Steeltoe.Extensions.Configuration.CloudFoundry.CloudFoundryConfigurationProvider" data-throw-if-not-resolved="false"></xref>
    - id: configurer
      type: System.Action{Microsoft.AspNetCore.Authentication.OpenIdConnect.OpenIdConnectOptions,Microsoft.Extensions.Configuration.IConfiguration}
      description: Configure the <xref href="Microsoft.AspNetCore.Authentication.OpenIdConnect.OpenIdConnectOptions" data-throw-if-not-resolved="false"></xref> after applying service bindings
    return:
      type: Microsoft.AspNetCore.Authentication.AuthenticationBuilder
      description: <xref href="Microsoft.AspNetCore.Authentication.AuthenticationBuilder" data-throw-if-not-resolved="false"></xref> configured to use OpenID Connect with UAA or Pivotal SSO
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function AddCloudFoundryOpenIdConnect(builder As AuthenticationBuilder, authenticationScheme As String, config As IConfiguration, configurer As Action(Of OpenIdConnectOptions, IConfiguration)) As AuthenticationBuilder
  overload: Steeltoe.Security.Authentication.CloudFoundry.AuthenticationBuilderExtensions.AddCloudFoundryOpenIdConnect*
  nameWithType.vb: AuthenticationBuilderExtensions.AddCloudFoundryOpenIdConnect(AuthenticationBuilder, String, IConfiguration, Action(Of OpenIdConnectOptions, IConfiguration))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Steeltoe.Security.Authentication.CloudFoundry.AuthenticationBuilderExtensions.AddCloudFoundryOpenIdConnect(Microsoft.AspNetCore.Authentication.AuthenticationBuilder, System.String, Microsoft.Extensions.Configuration.IConfiguration, System.Action(Of Microsoft.AspNetCore.Authentication.OpenIdConnect.OpenIdConnectOptions, Microsoft.Extensions.Configuration.IConfiguration))
  name.vb: AddCloudFoundryOpenIdConnect(AuthenticationBuilder, String, IConfiguration, Action(Of OpenIdConnectOptions, IConfiguration))
- uid: Steeltoe.Security.Authentication.CloudFoundry.AuthenticationBuilderExtensions.AddCloudFoundryOpenIdConnect(Microsoft.AspNetCore.Authentication.AuthenticationBuilder,System.String,System.String,Microsoft.Extensions.Configuration.IConfiguration,System.Action{Microsoft.AspNetCore.Authentication.OpenIdConnect.OpenIdConnectOptions,Microsoft.Extensions.Configuration.IConfiguration})
  commentId: M:Steeltoe.Security.Authentication.CloudFoundry.AuthenticationBuilderExtensions.AddCloudFoundryOpenIdConnect(Microsoft.AspNetCore.Authentication.AuthenticationBuilder,System.String,System.String,Microsoft.Extensions.Configuration.IConfiguration,System.Action{Microsoft.AspNetCore.Authentication.OpenIdConnect.OpenIdConnectOptions,Microsoft.Extensions.Configuration.IConfiguration})
  id: AddCloudFoundryOpenIdConnect(Microsoft.AspNetCore.Authentication.AuthenticationBuilder,System.String,System.String,Microsoft.Extensions.Configuration.IConfiguration,System.Action{Microsoft.AspNetCore.Authentication.OpenIdConnect.OpenIdConnectOptions,Microsoft.Extensions.Configuration.IConfiguration})
  isExtensionMethod: true
  parent: Steeltoe.Security.Authentication.CloudFoundry.AuthenticationBuilderExtensions
  langs:
  - csharp
  - vb
  name: AddCloudFoundryOpenIdConnect(AuthenticationBuilder, String, String, IConfiguration, Action<OpenIdConnectOptions, IConfiguration>)
  nameWithType: AuthenticationBuilderExtensions.AddCloudFoundryOpenIdConnect(AuthenticationBuilder, String, String, IConfiguration, Action<OpenIdConnectOptions, IConfiguration>)
  fullName: Steeltoe.Security.Authentication.CloudFoundry.AuthenticationBuilderExtensions.AddCloudFoundryOpenIdConnect(Microsoft.AspNetCore.Authentication.AuthenticationBuilder, System.String, System.String, Microsoft.Extensions.Configuration.IConfiguration, System.Action<Microsoft.AspNetCore.Authentication.OpenIdConnect.OpenIdConnectOptions, Microsoft.Extensions.Configuration.IConfiguration>)
  type: Method
  source:
    remote:
      path: src/Security/src/Authentication.CloudFoundryCore/AuthenticationBuilderExtensions.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: AddCloudFoundryOpenIdConnect
    path: ../Steeltoe/src/Security/src/Authentication.CloudFoundryCore/AuthenticationBuilderExtensions.cs
    startLine: 174
  assemblies:
  - Steeltoe.Security.Authentication.CloudFoundryCore
  namespace: Steeltoe.Security.Authentication.CloudFoundry
  summary: "\nAdds OpenID Connect middleware and configuration for using UAA or Pivotal SSO for user authentication\n"
  example: []
  syntax:
    content: public static AuthenticationBuilder AddCloudFoundryOpenIdConnect(this AuthenticationBuilder builder, string authenticationScheme, string displayName, IConfiguration config, Action<OpenIdConnectOptions, IConfiguration> configurer)
    parameters:
    - id: builder
      type: Microsoft.AspNetCore.Authentication.AuthenticationBuilder
      description: Your <xref href="Microsoft.AspNetCore.Authentication.AuthenticationBuilder" data-throw-if-not-resolved="false"></xref>
    - id: authenticationScheme
      type: System.String
      description: An identifier for this authentication mechanism. Default value is <xref href="Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryDefaults.DisplayName" data-throw-if-not-resolved="false"></xref>
    - id: displayName
      type: System.String
      description: Sets a display name for this auth scheme. Defaults to <xref href="Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryDefaults.DisplayName" data-throw-if-not-resolved="false"></xref>
    - id: config
      type: Microsoft.Extensions.Configuration.IConfiguration
      description: Your application configuration. Be sure to include the <xref href="Steeltoe.Extensions.Configuration.CloudFoundry.CloudFoundryConfigurationProvider" data-throw-if-not-resolved="false"></xref>
    - id: configurer
      type: System.Action{Microsoft.AspNetCore.Authentication.OpenIdConnect.OpenIdConnectOptions,Microsoft.Extensions.Configuration.IConfiguration}
      description: Configure the <xref href="Microsoft.AspNetCore.Authentication.OpenIdConnect.OpenIdConnectOptions" data-throw-if-not-resolved="false"></xref> after applying service bindings
    return:
      type: Microsoft.AspNetCore.Authentication.AuthenticationBuilder
      description: <xref href="Microsoft.AspNetCore.Authentication.AuthenticationBuilder" data-throw-if-not-resolved="false"></xref> configured to use OpenID Connect with UAA or Pivotal SSO
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function AddCloudFoundryOpenIdConnect(builder As AuthenticationBuilder, authenticationScheme As String, displayName As String, config As IConfiguration, configurer As Action(Of OpenIdConnectOptions, IConfiguration)) As AuthenticationBuilder
  overload: Steeltoe.Security.Authentication.CloudFoundry.AuthenticationBuilderExtensions.AddCloudFoundryOpenIdConnect*
  nameWithType.vb: AuthenticationBuilderExtensions.AddCloudFoundryOpenIdConnect(AuthenticationBuilder, String, String, IConfiguration, Action(Of OpenIdConnectOptions, IConfiguration))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Steeltoe.Security.Authentication.CloudFoundry.AuthenticationBuilderExtensions.AddCloudFoundryOpenIdConnect(Microsoft.AspNetCore.Authentication.AuthenticationBuilder, System.String, System.String, Microsoft.Extensions.Configuration.IConfiguration, System.Action(Of Microsoft.AspNetCore.Authentication.OpenIdConnect.OpenIdConnectOptions, Microsoft.Extensions.Configuration.IConfiguration))
  name.vb: AddCloudFoundryOpenIdConnect(AuthenticationBuilder, String, String, IConfiguration, Action(Of OpenIdConnectOptions, IConfiguration))
- uid: Steeltoe.Security.Authentication.CloudFoundry.AuthenticationBuilderExtensions.AddCloudFoundryJwtBearer(Microsoft.AspNetCore.Authentication.AuthenticationBuilder,Microsoft.Extensions.Configuration.IConfiguration)
  commentId: M:Steeltoe.Security.Authentication.CloudFoundry.AuthenticationBuilderExtensions.AddCloudFoundryJwtBearer(Microsoft.AspNetCore.Authentication.AuthenticationBuilder,Microsoft.Extensions.Configuration.IConfiguration)
  id: AddCloudFoundryJwtBearer(Microsoft.AspNetCore.Authentication.AuthenticationBuilder,Microsoft.Extensions.Configuration.IConfiguration)
  isExtensionMethod: true
  parent: Steeltoe.Security.Authentication.CloudFoundry.AuthenticationBuilderExtensions
  langs:
  - csharp
  - vb
  name: AddCloudFoundryJwtBearer(AuthenticationBuilder, IConfiguration)
  nameWithType: AuthenticationBuilderExtensions.AddCloudFoundryJwtBearer(AuthenticationBuilder, IConfiguration)
  fullName: Steeltoe.Security.Authentication.CloudFoundry.AuthenticationBuilderExtensions.AddCloudFoundryJwtBearer(Microsoft.AspNetCore.Authentication.AuthenticationBuilder, Microsoft.Extensions.Configuration.IConfiguration)
  type: Method
  source:
    remote:
      path: src/Security/src/Authentication.CloudFoundryCore/AuthenticationBuilderExtensions.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: AddCloudFoundryJwtBearer
    path: ../Steeltoe/src/Security/src/Authentication.CloudFoundryCore/AuthenticationBuilderExtensions.cs
    startLine: 196
  assemblies:
  - Steeltoe.Security.Authentication.CloudFoundryCore
  namespace: Steeltoe.Security.Authentication.CloudFoundry
  summary: "\nAdds JWT middleware and configuration for using UAA or Pivotal SSO for bearer token authentication\n"
  example: []
  syntax:
    content: public static AuthenticationBuilder AddCloudFoundryJwtBearer(this AuthenticationBuilder builder, IConfiguration config)
    parameters:
    - id: builder
      type: Microsoft.AspNetCore.Authentication.AuthenticationBuilder
      description: Your <xref href="Microsoft.AspNetCore.Authentication.AuthenticationBuilder" data-throw-if-not-resolved="false"></xref>
    - id: config
      type: Microsoft.Extensions.Configuration.IConfiguration
      description: Your application configuration. Be sure to include the <xref href="Steeltoe.Extensions.Configuration.CloudFoundry.CloudFoundryConfigurationProvider" data-throw-if-not-resolved="false"></xref>
    return:
      type: Microsoft.AspNetCore.Authentication.AuthenticationBuilder
      description: <xref href="Microsoft.AspNetCore.Authentication.AuthenticationBuilder" data-throw-if-not-resolved="false"></xref> configured to use JWT Bearer tokens from UAA or Pivotal SSO
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function AddCloudFoundryJwtBearer(builder As AuthenticationBuilder, config As IConfiguration) As AuthenticationBuilder
  overload: Steeltoe.Security.Authentication.CloudFoundry.AuthenticationBuilderExtensions.AddCloudFoundryJwtBearer*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Steeltoe.Security.Authentication.CloudFoundry.AuthenticationBuilderExtensions.AddCloudFoundryJwtBearer(Microsoft.AspNetCore.Authentication.AuthenticationBuilder,System.String,Microsoft.Extensions.Configuration.IConfiguration)
  commentId: M:Steeltoe.Security.Authentication.CloudFoundry.AuthenticationBuilderExtensions.AddCloudFoundryJwtBearer(Microsoft.AspNetCore.Authentication.AuthenticationBuilder,System.String,Microsoft.Extensions.Configuration.IConfiguration)
  id: AddCloudFoundryJwtBearer(Microsoft.AspNetCore.Authentication.AuthenticationBuilder,System.String,Microsoft.Extensions.Configuration.IConfiguration)
  isExtensionMethod: true
  parent: Steeltoe.Security.Authentication.CloudFoundry.AuthenticationBuilderExtensions
  langs:
  - csharp
  - vb
  name: AddCloudFoundryJwtBearer(AuthenticationBuilder, String, IConfiguration)
  nameWithType: AuthenticationBuilderExtensions.AddCloudFoundryJwtBearer(AuthenticationBuilder, String, IConfiguration)
  fullName: Steeltoe.Security.Authentication.CloudFoundry.AuthenticationBuilderExtensions.AddCloudFoundryJwtBearer(Microsoft.AspNetCore.Authentication.AuthenticationBuilder, System.String, Microsoft.Extensions.Configuration.IConfiguration)
  type: Method
  source:
    remote:
      path: src/Security/src/Authentication.CloudFoundryCore/AuthenticationBuilderExtensions.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: AddCloudFoundryJwtBearer
    path: ../Steeltoe/src/Security/src/Authentication.CloudFoundryCore/AuthenticationBuilderExtensions.cs
    startLine: 206
  assemblies:
  - Steeltoe.Security.Authentication.CloudFoundryCore
  namespace: Steeltoe.Security.Authentication.CloudFoundry
  summary: "\nAdds JWT middleware and configuration for using UAA or Pivotal SSO for bearer token authentication\n"
  example: []
  syntax:
    content: public static AuthenticationBuilder AddCloudFoundryJwtBearer(this AuthenticationBuilder builder, string authenticationScheme, IConfiguration config)
    parameters:
    - id: builder
      type: Microsoft.AspNetCore.Authentication.AuthenticationBuilder
      description: Your <xref href="Microsoft.AspNetCore.Authentication.AuthenticationBuilder" data-throw-if-not-resolved="false"></xref>
    - id: authenticationScheme
      type: System.String
      description: An identifier for this authentication mechanism. Default value is <xref href="Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerDefaults.AuthenticationScheme" data-throw-if-not-resolved="false"></xref>
    - id: config
      type: Microsoft.Extensions.Configuration.IConfiguration
      description: Your application configuration. Be sure to include the <xref href="Steeltoe.Extensions.Configuration.CloudFoundry.CloudFoundryConfigurationProvider" data-throw-if-not-resolved="false"></xref>
    return:
      type: Microsoft.AspNetCore.Authentication.AuthenticationBuilder
      description: <xref href="Microsoft.AspNetCore.Authentication.AuthenticationBuilder" data-throw-if-not-resolved="false"></xref> configured to use JWT Bearer tokens from UAA or Pivotal SSO
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function AddCloudFoundryJwtBearer(builder As AuthenticationBuilder, authenticationScheme As String, config As IConfiguration) As AuthenticationBuilder
  overload: Steeltoe.Security.Authentication.CloudFoundry.AuthenticationBuilderExtensions.AddCloudFoundryJwtBearer*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Steeltoe.Security.Authentication.CloudFoundry.AuthenticationBuilderExtensions.AddCloudFoundryJwtBearer(Microsoft.AspNetCore.Authentication.AuthenticationBuilder,System.String,System.String,Microsoft.Extensions.Configuration.IConfiguration)
  commentId: M:Steeltoe.Security.Authentication.CloudFoundry.AuthenticationBuilderExtensions.AddCloudFoundryJwtBearer(Microsoft.AspNetCore.Authentication.AuthenticationBuilder,System.String,System.String,Microsoft.Extensions.Configuration.IConfiguration)
  id: AddCloudFoundryJwtBearer(Microsoft.AspNetCore.Authentication.AuthenticationBuilder,System.String,System.String,Microsoft.Extensions.Configuration.IConfiguration)
  isExtensionMethod: true
  parent: Steeltoe.Security.Authentication.CloudFoundry.AuthenticationBuilderExtensions
  langs:
  - csharp
  - vb
  name: AddCloudFoundryJwtBearer(AuthenticationBuilder, String, String, IConfiguration)
  nameWithType: AuthenticationBuilderExtensions.AddCloudFoundryJwtBearer(AuthenticationBuilder, String, String, IConfiguration)
  fullName: Steeltoe.Security.Authentication.CloudFoundry.AuthenticationBuilderExtensions.AddCloudFoundryJwtBearer(Microsoft.AspNetCore.Authentication.AuthenticationBuilder, System.String, System.String, Microsoft.Extensions.Configuration.IConfiguration)
  type: Method
  source:
    remote:
      path: src/Security/src/Authentication.CloudFoundryCore/AuthenticationBuilderExtensions.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: AddCloudFoundryJwtBearer
    path: ../Steeltoe/src/Security/src/Authentication.CloudFoundryCore/AuthenticationBuilderExtensions.cs
    startLine: 217
  assemblies:
  - Steeltoe.Security.Authentication.CloudFoundryCore
  namespace: Steeltoe.Security.Authentication.CloudFoundry
  summary: "\nAdds JWT middleware and configuration for using UAA or Pivotal SSO for bearer token authentication\n"
  example: []
  syntax:
    content: public static AuthenticationBuilder AddCloudFoundryJwtBearer(this AuthenticationBuilder builder, string authenticationScheme, string displayName, IConfiguration config)
    parameters:
    - id: builder
      type: Microsoft.AspNetCore.Authentication.AuthenticationBuilder
      description: Your <xref href="Microsoft.AspNetCore.Authentication.AuthenticationBuilder" data-throw-if-not-resolved="false"></xref>
    - id: authenticationScheme
      type: System.String
      description: An identifier for this authentication mechanism. Default value is <xref href="Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerDefaults.AuthenticationScheme" data-throw-if-not-resolved="false"></xref>
    - id: displayName
      type: System.String
      description: Sets a display name for this auth scheme. Defaults to <xref href="Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerDefaults.AuthenticationScheme" data-throw-if-not-resolved="false"></xref>
    - id: config
      type: Microsoft.Extensions.Configuration.IConfiguration
      description: Your application configuration. Be sure to include the <xref href="Steeltoe.Extensions.Configuration.CloudFoundry.CloudFoundryConfigurationProvider" data-throw-if-not-resolved="false"></xref>
    return:
      type: Microsoft.AspNetCore.Authentication.AuthenticationBuilder
      description: <xref href="Microsoft.AspNetCore.Authentication.AuthenticationBuilder" data-throw-if-not-resolved="false"></xref> configured to use JWT Bearer tokens from UAA or Pivotal SSO
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function AddCloudFoundryJwtBearer(builder As AuthenticationBuilder, authenticationScheme As String, displayName As String, config As IConfiguration) As AuthenticationBuilder
  overload: Steeltoe.Security.Authentication.CloudFoundry.AuthenticationBuilderExtensions.AddCloudFoundryJwtBearer*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Steeltoe.Security.Authentication.CloudFoundry.AuthenticationBuilderExtensions.AddCloudFoundryJwtBearer(Microsoft.AspNetCore.Authentication.AuthenticationBuilder,Microsoft.Extensions.Configuration.IConfiguration,System.Action{Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerOptions,Microsoft.Extensions.Configuration.IConfiguration})
  commentId: M:Steeltoe.Security.Authentication.CloudFoundry.AuthenticationBuilderExtensions.AddCloudFoundryJwtBearer(Microsoft.AspNetCore.Authentication.AuthenticationBuilder,Microsoft.Extensions.Configuration.IConfiguration,System.Action{Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerOptions,Microsoft.Extensions.Configuration.IConfiguration})
  id: AddCloudFoundryJwtBearer(Microsoft.AspNetCore.Authentication.AuthenticationBuilder,Microsoft.Extensions.Configuration.IConfiguration,System.Action{Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerOptions,Microsoft.Extensions.Configuration.IConfiguration})
  isExtensionMethod: true
  parent: Steeltoe.Security.Authentication.CloudFoundry.AuthenticationBuilderExtensions
  langs:
  - csharp
  - vb
  name: AddCloudFoundryJwtBearer(AuthenticationBuilder, IConfiguration, Action<JwtBearerOptions, IConfiguration>)
  nameWithType: AuthenticationBuilderExtensions.AddCloudFoundryJwtBearer(AuthenticationBuilder, IConfiguration, Action<JwtBearerOptions, IConfiguration>)
  fullName: Steeltoe.Security.Authentication.CloudFoundry.AuthenticationBuilderExtensions.AddCloudFoundryJwtBearer(Microsoft.AspNetCore.Authentication.AuthenticationBuilder, Microsoft.Extensions.Configuration.IConfiguration, System.Action<Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerOptions, Microsoft.Extensions.Configuration.IConfiguration>)
  type: Method
  source:
    remote:
      path: src/Security/src/Authentication.CloudFoundryCore/AuthenticationBuilderExtensions.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: AddCloudFoundryJwtBearer
    path: ../Steeltoe/src/Security/src/Authentication.CloudFoundryCore/AuthenticationBuilderExtensions.cs
    startLine: 238
  assemblies:
  - Steeltoe.Security.Authentication.CloudFoundryCore
  namespace: Steeltoe.Security.Authentication.CloudFoundry
  summary: "\nAdds JWT middleware and configuration for using UAA or Pivotal SSO for bearer token authentication\n"
  example: []
  syntax:
    content: public static AuthenticationBuilder AddCloudFoundryJwtBearer(this AuthenticationBuilder builder, IConfiguration config, Action<JwtBearerOptions, IConfiguration> configurer)
    parameters:
    - id: builder
      type: Microsoft.AspNetCore.Authentication.AuthenticationBuilder
      description: Your <xref href="Microsoft.AspNetCore.Authentication.AuthenticationBuilder" data-throw-if-not-resolved="false"></xref>
    - id: config
      type: Microsoft.Extensions.Configuration.IConfiguration
      description: Your application configuration. Be sure to include the <xref href="Steeltoe.Extensions.Configuration.CloudFoundry.CloudFoundryConfigurationProvider" data-throw-if-not-resolved="false"></xref>
    - id: configurer
      type: System.Action{Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerOptions,Microsoft.Extensions.Configuration.IConfiguration}
      description: Used to configure the options
    return:
      type: Microsoft.AspNetCore.Authentication.AuthenticationBuilder
      description: <xref href="Microsoft.AspNetCore.Authentication.AuthenticationBuilder" data-throw-if-not-resolved="false"></xref> configured to use JWT Bearer tokens from UAA or Pivotal SSO
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function AddCloudFoundryJwtBearer(builder As AuthenticationBuilder, config As IConfiguration, configurer As Action(Of JwtBearerOptions, IConfiguration)) As AuthenticationBuilder
  overload: Steeltoe.Security.Authentication.CloudFoundry.AuthenticationBuilderExtensions.AddCloudFoundryJwtBearer*
  nameWithType.vb: AuthenticationBuilderExtensions.AddCloudFoundryJwtBearer(AuthenticationBuilder, IConfiguration, Action(Of JwtBearerOptions, IConfiguration))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Steeltoe.Security.Authentication.CloudFoundry.AuthenticationBuilderExtensions.AddCloudFoundryJwtBearer(Microsoft.AspNetCore.Authentication.AuthenticationBuilder, Microsoft.Extensions.Configuration.IConfiguration, System.Action(Of Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerOptions, Microsoft.Extensions.Configuration.IConfiguration))
  name.vb: AddCloudFoundryJwtBearer(AuthenticationBuilder, IConfiguration, Action(Of JwtBearerOptions, IConfiguration))
- uid: Steeltoe.Security.Authentication.CloudFoundry.AuthenticationBuilderExtensions.AddCloudFoundryJwtBearer(Microsoft.AspNetCore.Authentication.AuthenticationBuilder,System.String,Microsoft.Extensions.Configuration.IConfiguration,System.Action{Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerOptions,Microsoft.Extensions.Configuration.IConfiguration})
  commentId: M:Steeltoe.Security.Authentication.CloudFoundry.AuthenticationBuilderExtensions.AddCloudFoundryJwtBearer(Microsoft.AspNetCore.Authentication.AuthenticationBuilder,System.String,Microsoft.Extensions.Configuration.IConfiguration,System.Action{Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerOptions,Microsoft.Extensions.Configuration.IConfiguration})
  id: AddCloudFoundryJwtBearer(Microsoft.AspNetCore.Authentication.AuthenticationBuilder,System.String,Microsoft.Extensions.Configuration.IConfiguration,System.Action{Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerOptions,Microsoft.Extensions.Configuration.IConfiguration})
  isExtensionMethod: true
  parent: Steeltoe.Security.Authentication.CloudFoundry.AuthenticationBuilderExtensions
  langs:
  - csharp
  - vb
  name: AddCloudFoundryJwtBearer(AuthenticationBuilder, String, IConfiguration, Action<JwtBearerOptions, IConfiguration>)
  nameWithType: AuthenticationBuilderExtensions.AddCloudFoundryJwtBearer(AuthenticationBuilder, String, IConfiguration, Action<JwtBearerOptions, IConfiguration>)
  fullName: Steeltoe.Security.Authentication.CloudFoundry.AuthenticationBuilderExtensions.AddCloudFoundryJwtBearer(Microsoft.AspNetCore.Authentication.AuthenticationBuilder, System.String, Microsoft.Extensions.Configuration.IConfiguration, System.Action<Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerOptions, Microsoft.Extensions.Configuration.IConfiguration>)
  type: Method
  source:
    remote:
      path: src/Security/src/Authentication.CloudFoundryCore/AuthenticationBuilderExtensions.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: AddCloudFoundryJwtBearer
    path: ../Steeltoe/src/Security/src/Authentication.CloudFoundryCore/AuthenticationBuilderExtensions.cs
    startLine: 249
  assemblies:
  - Steeltoe.Security.Authentication.CloudFoundryCore
  namespace: Steeltoe.Security.Authentication.CloudFoundry
  summary: "\nAdds JWT middleware and configuration for using UAA or Pivotal SSO for bearer token authentication\n"
  example: []
  syntax:
    content: public static AuthenticationBuilder AddCloudFoundryJwtBearer(this AuthenticationBuilder builder, string authenticationScheme, IConfiguration config, Action<JwtBearerOptions, IConfiguration> configurer)
    parameters:
    - id: builder
      type: Microsoft.AspNetCore.Authentication.AuthenticationBuilder
      description: Your <xref href="Microsoft.AspNetCore.Authentication.AuthenticationBuilder" data-throw-if-not-resolved="false"></xref>
    - id: authenticationScheme
      type: System.String
      description: An identifier for this authentication mechanism. Default value is <xref href="Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerDefaults.AuthenticationScheme" data-throw-if-not-resolved="false"></xref>
    - id: config
      type: Microsoft.Extensions.Configuration.IConfiguration
      description: Your application configuration. Be sure to include the <xref href="Steeltoe.Extensions.Configuration.CloudFoundry.CloudFoundryConfigurationProvider" data-throw-if-not-resolved="false"></xref>
    - id: configurer
      type: System.Action{Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerOptions,Microsoft.Extensions.Configuration.IConfiguration}
      description: Used to configure the options
    return:
      type: Microsoft.AspNetCore.Authentication.AuthenticationBuilder
      description: <xref href="Microsoft.AspNetCore.Authentication.AuthenticationBuilder" data-throw-if-not-resolved="false"></xref> configured to use JWT Bearer tokens from UAA or Pivotal SSO
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function AddCloudFoundryJwtBearer(builder As AuthenticationBuilder, authenticationScheme As String, config As IConfiguration, configurer As Action(Of JwtBearerOptions, IConfiguration)) As AuthenticationBuilder
  overload: Steeltoe.Security.Authentication.CloudFoundry.AuthenticationBuilderExtensions.AddCloudFoundryJwtBearer*
  nameWithType.vb: AuthenticationBuilderExtensions.AddCloudFoundryJwtBearer(AuthenticationBuilder, String, IConfiguration, Action(Of JwtBearerOptions, IConfiguration))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Steeltoe.Security.Authentication.CloudFoundry.AuthenticationBuilderExtensions.AddCloudFoundryJwtBearer(Microsoft.AspNetCore.Authentication.AuthenticationBuilder, System.String, Microsoft.Extensions.Configuration.IConfiguration, System.Action(Of Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerOptions, Microsoft.Extensions.Configuration.IConfiguration))
  name.vb: AddCloudFoundryJwtBearer(AuthenticationBuilder, String, IConfiguration, Action(Of JwtBearerOptions, IConfiguration))
- uid: Steeltoe.Security.Authentication.CloudFoundry.AuthenticationBuilderExtensions.AddCloudFoundryJwtBearer(Microsoft.AspNetCore.Authentication.AuthenticationBuilder,System.String,System.String,Microsoft.Extensions.Configuration.IConfiguration,System.Action{Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerOptions,Microsoft.Extensions.Configuration.IConfiguration})
  commentId: M:Steeltoe.Security.Authentication.CloudFoundry.AuthenticationBuilderExtensions.AddCloudFoundryJwtBearer(Microsoft.AspNetCore.Authentication.AuthenticationBuilder,System.String,System.String,Microsoft.Extensions.Configuration.IConfiguration,System.Action{Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerOptions,Microsoft.Extensions.Configuration.IConfiguration})
  id: AddCloudFoundryJwtBearer(Microsoft.AspNetCore.Authentication.AuthenticationBuilder,System.String,System.String,Microsoft.Extensions.Configuration.IConfiguration,System.Action{Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerOptions,Microsoft.Extensions.Configuration.IConfiguration})
  isExtensionMethod: true
  parent: Steeltoe.Security.Authentication.CloudFoundry.AuthenticationBuilderExtensions
  langs:
  - csharp
  - vb
  name: AddCloudFoundryJwtBearer(AuthenticationBuilder, String, String, IConfiguration, Action<JwtBearerOptions, IConfiguration>)
  nameWithType: AuthenticationBuilderExtensions.AddCloudFoundryJwtBearer(AuthenticationBuilder, String, String, IConfiguration, Action<JwtBearerOptions, IConfiguration>)
  fullName: Steeltoe.Security.Authentication.CloudFoundry.AuthenticationBuilderExtensions.AddCloudFoundryJwtBearer(Microsoft.AspNetCore.Authentication.AuthenticationBuilder, System.String, System.String, Microsoft.Extensions.Configuration.IConfiguration, System.Action<Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerOptions, Microsoft.Extensions.Configuration.IConfiguration>)
  type: Method
  source:
    remote:
      path: src/Security/src/Authentication.CloudFoundryCore/AuthenticationBuilderExtensions.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: AddCloudFoundryJwtBearer
    path: ../Steeltoe/src/Security/src/Authentication.CloudFoundryCore/AuthenticationBuilderExtensions.cs
    startLine: 261
  assemblies:
  - Steeltoe.Security.Authentication.CloudFoundryCore
  namespace: Steeltoe.Security.Authentication.CloudFoundry
  summary: "\nAdds JWT middleware and configuration for using UAA or Pivotal SSO for bearer token authentication\n"
  example: []
  syntax:
    content: public static AuthenticationBuilder AddCloudFoundryJwtBearer(this AuthenticationBuilder builder, string authenticationScheme, string displayName, IConfiguration config, Action<JwtBearerOptions, IConfiguration> configurer)
    parameters:
    - id: builder
      type: Microsoft.AspNetCore.Authentication.AuthenticationBuilder
      description: Your <xref href="Microsoft.AspNetCore.Authentication.AuthenticationBuilder" data-throw-if-not-resolved="false"></xref>
    - id: authenticationScheme
      type: System.String
      description: An identifier for this authentication mechanism. Default value is <xref href="Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerDefaults.AuthenticationScheme" data-throw-if-not-resolved="false"></xref>
    - id: displayName
      type: System.String
      description: Sets a display name for this auth scheme. Defaults to <xref href="Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerDefaults.AuthenticationScheme" data-throw-if-not-resolved="false"></xref>
    - id: config
      type: Microsoft.Extensions.Configuration.IConfiguration
      description: Your application configuration. Be sure to include the <xref href="Steeltoe.Extensions.Configuration.CloudFoundry.CloudFoundryConfigurationProvider" data-throw-if-not-resolved="false"></xref>
    - id: configurer
      type: System.Action{Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerOptions,Microsoft.Extensions.Configuration.IConfiguration}
      description: Used to configure the options
    return:
      type: Microsoft.AspNetCore.Authentication.AuthenticationBuilder
      description: <xref href="Microsoft.AspNetCore.Authentication.AuthenticationBuilder" data-throw-if-not-resolved="false"></xref> configured to use JWT Bearer tokens from UAA or Pivotal SSO
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function AddCloudFoundryJwtBearer(builder As AuthenticationBuilder, authenticationScheme As String, displayName As String, config As IConfiguration, configurer As Action(Of JwtBearerOptions, IConfiguration)) As AuthenticationBuilder
  overload: Steeltoe.Security.Authentication.CloudFoundry.AuthenticationBuilderExtensions.AddCloudFoundryJwtBearer*
  nameWithType.vb: AuthenticationBuilderExtensions.AddCloudFoundryJwtBearer(AuthenticationBuilder, String, String, IConfiguration, Action(Of JwtBearerOptions, IConfiguration))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Steeltoe.Security.Authentication.CloudFoundry.AuthenticationBuilderExtensions.AddCloudFoundryJwtBearer(Microsoft.AspNetCore.Authentication.AuthenticationBuilder, System.String, System.String, Microsoft.Extensions.Configuration.IConfiguration, System.Action(Of Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerOptions, Microsoft.Extensions.Configuration.IConfiguration))
  name.vb: AddCloudFoundryJwtBearer(AuthenticationBuilder, String, String, IConfiguration, Action(Of JwtBearerOptions, IConfiguration))
- uid: Steeltoe.Security.Authentication.CloudFoundry.AuthenticationBuilderExtensions.AddCloudFoundryIdentityCertificate(Microsoft.AspNetCore.Authentication.AuthenticationBuilder)
  commentId: M:Steeltoe.Security.Authentication.CloudFoundry.AuthenticationBuilderExtensions.AddCloudFoundryIdentityCertificate(Microsoft.AspNetCore.Authentication.AuthenticationBuilder)
  id: AddCloudFoundryIdentityCertificate(Microsoft.AspNetCore.Authentication.AuthenticationBuilder)
  isExtensionMethod: true
  parent: Steeltoe.Security.Authentication.CloudFoundry.AuthenticationBuilderExtensions
  langs:
  - csharp
  - vb
  name: AddCloudFoundryIdentityCertificate(AuthenticationBuilder)
  nameWithType: AuthenticationBuilderExtensions.AddCloudFoundryIdentityCertificate(AuthenticationBuilder)
  fullName: Steeltoe.Security.Authentication.CloudFoundry.AuthenticationBuilderExtensions.AddCloudFoundryIdentityCertificate(Microsoft.AspNetCore.Authentication.AuthenticationBuilder)
  type: Method
  source:
    remote:
      path: src/Security/src/Authentication.CloudFoundryCore/AuthenticationBuilderExtensions.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: AddCloudFoundryIdentityCertificate
    path: ../Steeltoe/src/Security/src/Authentication.CloudFoundryCore/AuthenticationBuilderExtensions.cs
    startLine: 275
  assemblies:
  - Steeltoe.Security.Authentication.CloudFoundryCore
  namespace: Steeltoe.Security.Authentication.CloudFoundry
  summary: "\nAdds Certificate authentication middleware and configuration to use platform identity certificates\n"
  example: []
  syntax:
    content: public static AuthenticationBuilder AddCloudFoundryIdentityCertificate(this AuthenticationBuilder builder)
    parameters:
    - id: builder
      type: Microsoft.AspNetCore.Authentication.AuthenticationBuilder
      description: Your <xref href="Microsoft.AspNetCore.Authentication.AuthenticationBuilder" data-throw-if-not-resolved="false"></xref>
    return:
      type: Microsoft.AspNetCore.Authentication.AuthenticationBuilder
      description: <xref href="Microsoft.AspNetCore.Authentication.AuthenticationBuilder" data-throw-if-not-resolved="false"></xref> configured to use application identity certificates
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function AddCloudFoundryIdentityCertificate(builder As AuthenticationBuilder) As AuthenticationBuilder
  overload: Steeltoe.Security.Authentication.CloudFoundry.AuthenticationBuilderExtensions.AddCloudFoundryIdentityCertificate*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Steeltoe.Security.Authentication.CloudFoundry
  commentId: N:Steeltoe.Security.Authentication.CloudFoundry
  name: Steeltoe.Security.Authentication.CloudFoundry
  nameWithType: Steeltoe.Security.Authentication.CloudFoundry
  fullName: Steeltoe.Security.Authentication.CloudFoundry
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.AspNetCore.Authentication.AuthenticationBuilder
  commentId: T:Microsoft.AspNetCore.Authentication.AuthenticationBuilder
  parent: Microsoft.AspNetCore.Authentication
  isExternal: true
  name: AuthenticationBuilder
  nameWithType: AuthenticationBuilder
  fullName: Microsoft.AspNetCore.Authentication.AuthenticationBuilder
- uid: Steeltoe.Extensions.Configuration.CloudFoundry.CloudFoundryConfigurationProvider
  commentId: T:Steeltoe.Extensions.Configuration.CloudFoundry.CloudFoundryConfigurationProvider
  name: CloudFoundryConfigurationProvider
  nameWithType: CloudFoundryConfigurationProvider
  fullName: Steeltoe.Extensions.Configuration.CloudFoundry.CloudFoundryConfigurationProvider
- uid: Steeltoe.Security.Authentication.CloudFoundry.AuthenticationBuilderExtensions.AddCloudFoundryOAuth*
  commentId: Overload:Steeltoe.Security.Authentication.CloudFoundry.AuthenticationBuilderExtensions.AddCloudFoundryOAuth
  name: AddCloudFoundryOAuth
  nameWithType: AuthenticationBuilderExtensions.AddCloudFoundryOAuth
  fullName: Steeltoe.Security.Authentication.CloudFoundry.AuthenticationBuilderExtensions.AddCloudFoundryOAuth
- uid: Microsoft.Extensions.Configuration.IConfiguration
  commentId: T:Microsoft.Extensions.Configuration.IConfiguration
  parent: Microsoft.Extensions.Configuration
  isExternal: true
  name: IConfiguration
  nameWithType: IConfiguration
  fullName: Microsoft.Extensions.Configuration.IConfiguration
- uid: Microsoft.AspNetCore.Authentication
  commentId: N:Microsoft.AspNetCore.Authentication
  isExternal: true
  name: Microsoft.AspNetCore.Authentication
  nameWithType: Microsoft.AspNetCore.Authentication
  fullName: Microsoft.AspNetCore.Authentication
- uid: Microsoft.Extensions.Configuration
  commentId: N:Microsoft.Extensions.Configuration
  isExternal: true
  name: Microsoft.Extensions.Configuration
  nameWithType: Microsoft.Extensions.Configuration
  fullName: Microsoft.Extensions.Configuration
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryDefaults.DisplayName
  commentId: F:Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryDefaults.DisplayName
  isExternal: true
- uid: System.Action{Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions,Microsoft.Extensions.Configuration.IConfiguration}
  commentId: T:System.Action{Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions,Microsoft.Extensions.Configuration.IConfiguration}
  parent: System
  definition: System.Action`2
  name: Action<CloudFoundryOAuthOptions, IConfiguration>
  nameWithType: Action<CloudFoundryOAuthOptions, IConfiguration>
  fullName: System.Action<Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions, Microsoft.Extensions.Configuration.IConfiguration>
  nameWithType.vb: Action(Of CloudFoundryOAuthOptions, IConfiguration)
  fullName.vb: System.Action(Of Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions, Microsoft.Extensions.Configuration.IConfiguration)
  name.vb: Action(Of CloudFoundryOAuthOptions, IConfiguration)
  spec.csharp:
  - uid: System.Action`2
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions
    name: CloudFoundryOAuthOptions
    nameWithType: CloudFoundryOAuthOptions
    fullName: Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Extensions.Configuration.IConfiguration
    name: IConfiguration
    nameWithType: IConfiguration
    fullName: Microsoft.Extensions.Configuration.IConfiguration
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`2
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions
    name: CloudFoundryOAuthOptions
    nameWithType: CloudFoundryOAuthOptions
    fullName: Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Extensions.Configuration.IConfiguration
    name: IConfiguration
    nameWithType: IConfiguration
    fullName: Microsoft.Extensions.Configuration.IConfiguration
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Action`2
  commentId: T:System.Action`2
  isExternal: true
  name: Action<T1, T2>
  nameWithType: Action<T1, T2>
  fullName: System.Action<T1, T2>
  nameWithType.vb: Action(Of T1, T2)
  fullName.vb: System.Action(Of T1, T2)
  name.vb: Action(Of T1, T2)
  spec.csharp:
  - uid: System.Action`2
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`2
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Security.Authentication.CloudFoundry.AuthenticationBuilderExtensions.AddCloudFoundryOpenIdConnect*
  commentId: Overload:Steeltoe.Security.Authentication.CloudFoundry.AuthenticationBuilderExtensions.AddCloudFoundryOpenIdConnect
  name: AddCloudFoundryOpenIdConnect
  nameWithType: AuthenticationBuilderExtensions.AddCloudFoundryOpenIdConnect
  fullName: Steeltoe.Security.Authentication.CloudFoundry.AuthenticationBuilderExtensions.AddCloudFoundryOpenIdConnect
- uid: Microsoft.AspNetCore.Authentication.OpenIdConnect.OpenIdConnectOptions
  commentId: T:Microsoft.AspNetCore.Authentication.OpenIdConnect.OpenIdConnectOptions
  parent: Microsoft.AspNetCore.Authentication.OpenIdConnect
  isExternal: true
  name: OpenIdConnectOptions
  nameWithType: OpenIdConnectOptions
  fullName: Microsoft.AspNetCore.Authentication.OpenIdConnect.OpenIdConnectOptions
- uid: System.Action{Microsoft.AspNetCore.Authentication.OpenIdConnect.OpenIdConnectOptions,Microsoft.Extensions.Configuration.IConfiguration}
  commentId: T:System.Action{Microsoft.AspNetCore.Authentication.OpenIdConnect.OpenIdConnectOptions,Microsoft.Extensions.Configuration.IConfiguration}
  parent: System
  definition: System.Action`2
  name: Action<OpenIdConnectOptions, IConfiguration>
  nameWithType: Action<OpenIdConnectOptions, IConfiguration>
  fullName: System.Action<Microsoft.AspNetCore.Authentication.OpenIdConnect.OpenIdConnectOptions, Microsoft.Extensions.Configuration.IConfiguration>
  nameWithType.vb: Action(Of OpenIdConnectOptions, IConfiguration)
  fullName.vb: System.Action(Of Microsoft.AspNetCore.Authentication.OpenIdConnect.OpenIdConnectOptions, Microsoft.Extensions.Configuration.IConfiguration)
  name.vb: Action(Of OpenIdConnectOptions, IConfiguration)
  spec.csharp:
  - uid: System.Action`2
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.AspNetCore.Authentication.OpenIdConnect.OpenIdConnectOptions
    name: OpenIdConnectOptions
    nameWithType: OpenIdConnectOptions
    fullName: Microsoft.AspNetCore.Authentication.OpenIdConnect.OpenIdConnectOptions
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Extensions.Configuration.IConfiguration
    name: IConfiguration
    nameWithType: IConfiguration
    fullName: Microsoft.Extensions.Configuration.IConfiguration
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`2
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.AspNetCore.Authentication.OpenIdConnect.OpenIdConnectOptions
    name: OpenIdConnectOptions
    nameWithType: OpenIdConnectOptions
    fullName: Microsoft.AspNetCore.Authentication.OpenIdConnect.OpenIdConnectOptions
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Extensions.Configuration.IConfiguration
    name: IConfiguration
    nameWithType: IConfiguration
    fullName: Microsoft.Extensions.Configuration.IConfiguration
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Authentication.OpenIdConnect
  commentId: N:Microsoft.AspNetCore.Authentication.OpenIdConnect
  isExternal: true
  name: Microsoft.AspNetCore.Authentication.OpenIdConnect
  nameWithType: Microsoft.AspNetCore.Authentication.OpenIdConnect
  fullName: Microsoft.AspNetCore.Authentication.OpenIdConnect
- uid: Steeltoe.Security.Authentication.CloudFoundry.AuthenticationBuilderExtensions.AddCloudFoundryJwtBearer*
  commentId: Overload:Steeltoe.Security.Authentication.CloudFoundry.AuthenticationBuilderExtensions.AddCloudFoundryJwtBearer
  name: AddCloudFoundryJwtBearer
  nameWithType: AuthenticationBuilderExtensions.AddCloudFoundryJwtBearer
  fullName: Steeltoe.Security.Authentication.CloudFoundry.AuthenticationBuilderExtensions.AddCloudFoundryJwtBearer
- uid: Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerDefaults.AuthenticationScheme
  commentId: F:Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerDefaults.AuthenticationScheme
  isExternal: true
- uid: System.Action{Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerOptions,Microsoft.Extensions.Configuration.IConfiguration}
  commentId: T:System.Action{Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerOptions,Microsoft.Extensions.Configuration.IConfiguration}
  parent: System
  definition: System.Action`2
  name: Action<JwtBearerOptions, IConfiguration>
  nameWithType: Action<JwtBearerOptions, IConfiguration>
  fullName: System.Action<Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerOptions, Microsoft.Extensions.Configuration.IConfiguration>
  nameWithType.vb: Action(Of JwtBearerOptions, IConfiguration)
  fullName.vb: System.Action(Of Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerOptions, Microsoft.Extensions.Configuration.IConfiguration)
  name.vb: Action(Of JwtBearerOptions, IConfiguration)
  spec.csharp:
  - uid: System.Action`2
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerOptions
    name: JwtBearerOptions
    nameWithType: JwtBearerOptions
    fullName: Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerOptions
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Extensions.Configuration.IConfiguration
    name: IConfiguration
    nameWithType: IConfiguration
    fullName: Microsoft.Extensions.Configuration.IConfiguration
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`2
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerOptions
    name: JwtBearerOptions
    nameWithType: JwtBearerOptions
    fullName: Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerOptions
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Extensions.Configuration.IConfiguration
    name: IConfiguration
    nameWithType: IConfiguration
    fullName: Microsoft.Extensions.Configuration.IConfiguration
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Security.Authentication.CloudFoundry.AuthenticationBuilderExtensions.AddCloudFoundryIdentityCertificate*
  commentId: Overload:Steeltoe.Security.Authentication.CloudFoundry.AuthenticationBuilderExtensions.AddCloudFoundryIdentityCertificate
  name: AddCloudFoundryIdentityCertificate
  nameWithType: AuthenticationBuilderExtensions.AddCloudFoundryIdentityCertificate
  fullName: Steeltoe.Security.Authentication.CloudFoundry.AuthenticationBuilderExtensions.AddCloudFoundryIdentityCertificate
