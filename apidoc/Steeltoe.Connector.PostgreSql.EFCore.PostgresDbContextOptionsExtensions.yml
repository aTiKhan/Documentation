### YamlMime:ManagedReference
items:
- uid: Steeltoe.Connector.PostgreSql.EFCore.PostgresDbContextOptionsExtensions
  commentId: T:Steeltoe.Connector.PostgreSql.EFCore.PostgresDbContextOptionsExtensions
  id: PostgresDbContextOptionsExtensions
  parent: Steeltoe.Connector.PostgreSql.EFCore
  children:
  - Steeltoe.Connector.PostgreSql.EFCore.PostgresDbContextOptionsExtensions.FindUseNpgsqlMethod(System.Type,System.Type[])
  - Steeltoe.Connector.PostgreSql.EFCore.PostgresDbContextOptionsExtensions.UseNpgsql(DbContextOptionsBuilder,IConfiguration,System.Object)
  - Steeltoe.Connector.PostgreSql.EFCore.PostgresDbContextOptionsExtensions.UseNpgsql(DbContextOptionsBuilder,IConfiguration,System.String,System.Object)
  - Steeltoe.Connector.PostgreSql.EFCore.PostgresDbContextOptionsExtensions.UseNpgsql``1(DbContextOptionsBuilder{``0},IConfiguration,System.Object)
  - Steeltoe.Connector.PostgreSql.EFCore.PostgresDbContextOptionsExtensions.UseNpgsql``1(DbContextOptionsBuilder{``0},IConfiguration,System.String,System.Object)
  langs:
  - csharp
  - vb
  name: PostgresDbContextOptionsExtensions
  nameWithType: PostgresDbContextOptionsExtensions
  fullName: Steeltoe.Connector.PostgreSql.EFCore.PostgresDbContextOptionsExtensions
  type: Class
  source:
    remote:
      path: src/Connectors/src/Connector.EFCore/PostgresDbContextOptionsExtensions.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: PostgresDbContextOptionsExtensions
    path: ../Steeltoe/src/Connectors/src/Connector.EFCore/PostgresDbContextOptionsExtensions.cs
    startLine: 14
  assemblies:
  - Steeltoe.Connector.EFCore
  namespace: Steeltoe.Connector.PostgreSql.EFCore
  syntax:
    content: public static class PostgresDbContextOptionsExtensions
    content.vb: Public Module PostgresDbContextOptionsExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Steeltoe.Connector.PostgreSql.EFCore.PostgresDbContextOptionsExtensions.UseNpgsql(DbContextOptionsBuilder,IConfiguration,System.Object)
  commentId: M:Steeltoe.Connector.PostgreSql.EFCore.PostgresDbContextOptionsExtensions.UseNpgsql(DbContextOptionsBuilder,IConfiguration,System.Object)
  id: UseNpgsql(DbContextOptionsBuilder,IConfiguration,System.Object)
  isExtensionMethod: true
  parent: Steeltoe.Connector.PostgreSql.EFCore.PostgresDbContextOptionsExtensions
  langs:
  - csharp
  - vb
  name: UseNpgsql(DbContextOptionsBuilder, IConfiguration, Object)
  nameWithType: PostgresDbContextOptionsExtensions.UseNpgsql(DbContextOptionsBuilder, IConfiguration, Object)
  fullName: Steeltoe.Connector.PostgreSql.EFCore.PostgresDbContextOptionsExtensions.UseNpgsql(DbContextOptionsBuilder, IConfiguration, System.Object)
  type: Method
  source:
    remote:
      path: src/Connectors/src/Connector.EFCore/PostgresDbContextOptionsExtensions.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: UseNpgsql
    path: ../Steeltoe/src/Connectors/src/Connector.EFCore/PostgresDbContextOptionsExtensions.cs
    startLine: 16
  assemblies:
  - Steeltoe.Connector.EFCore
  namespace: Steeltoe.Connector.PostgreSql.EFCore
  syntax:
    content: public static DbContextOptionsBuilder UseNpgsql(this DbContextOptionsBuilder optionsBuilder, IConfiguration config, object npgsqlOptionsAction = null)
    parameters:
    - id: optionsBuilder
      type: DbContextOptionsBuilder
    - id: config
      type: IConfiguration
    - id: npgsqlOptionsAction
      type: System.Object
    return:
      type: DbContextOptionsBuilder
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function UseNpgsql(optionsBuilder As DbContextOptionsBuilder, config As IConfiguration, npgsqlOptionsAction As Object = Nothing) As DbContextOptionsBuilder
  overload: Steeltoe.Connector.PostgreSql.EFCore.PostgresDbContextOptionsExtensions.UseNpgsql*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Steeltoe.Connector.PostgreSql.EFCore.PostgresDbContextOptionsExtensions.UseNpgsql(DbContextOptionsBuilder,IConfiguration,System.String,System.Object)
  commentId: M:Steeltoe.Connector.PostgreSql.EFCore.PostgresDbContextOptionsExtensions.UseNpgsql(DbContextOptionsBuilder,IConfiguration,System.String,System.Object)
  id: UseNpgsql(DbContextOptionsBuilder,IConfiguration,System.String,System.Object)
  isExtensionMethod: true
  parent: Steeltoe.Connector.PostgreSql.EFCore.PostgresDbContextOptionsExtensions
  langs:
  - csharp
  - vb
  name: UseNpgsql(DbContextOptionsBuilder, IConfiguration, String, Object)
  nameWithType: PostgresDbContextOptionsExtensions.UseNpgsql(DbContextOptionsBuilder, IConfiguration, String, Object)
  fullName: Steeltoe.Connector.PostgreSql.EFCore.PostgresDbContextOptionsExtensions.UseNpgsql(DbContextOptionsBuilder, IConfiguration, System.String, System.Object)
  type: Method
  source:
    remote:
      path: src/Connectors/src/Connector.EFCore/PostgresDbContextOptionsExtensions.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: UseNpgsql
    path: ../Steeltoe/src/Connectors/src/Connector.EFCore/PostgresDbContextOptionsExtensions.cs
    startLine: 33
  assemblies:
  - Steeltoe.Connector.EFCore
  namespace: Steeltoe.Connector.PostgreSql.EFCore
  syntax:
    content: public static DbContextOptionsBuilder UseNpgsql(this DbContextOptionsBuilder optionsBuilder, IConfiguration config, string serviceName, object npgsqlOptionsAction = null)
    parameters:
    - id: optionsBuilder
      type: DbContextOptionsBuilder
    - id: config
      type: IConfiguration
    - id: serviceName
      type: System.String
    - id: npgsqlOptionsAction
      type: System.Object
    return:
      type: DbContextOptionsBuilder
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function UseNpgsql(optionsBuilder As DbContextOptionsBuilder, config As IConfiguration, serviceName As String, npgsqlOptionsAction As Object = Nothing) As DbContextOptionsBuilder
  overload: Steeltoe.Connector.PostgreSql.EFCore.PostgresDbContextOptionsExtensions.UseNpgsql*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Steeltoe.Connector.PostgreSql.EFCore.PostgresDbContextOptionsExtensions.UseNpgsql``1(DbContextOptionsBuilder{``0},IConfiguration,System.Object)
  commentId: M:Steeltoe.Connector.PostgreSql.EFCore.PostgresDbContextOptionsExtensions.UseNpgsql``1(DbContextOptionsBuilder{``0},IConfiguration,System.Object)
  id: UseNpgsql``1(DbContextOptionsBuilder{``0},IConfiguration,System.Object)
  isExtensionMethod: true
  parent: Steeltoe.Connector.PostgreSql.EFCore.PostgresDbContextOptionsExtensions
  langs:
  - csharp
  - vb
  name: UseNpgsql<TContext>(DbContextOptionsBuilder<TContext>, IConfiguration, Object)
  nameWithType: PostgresDbContextOptionsExtensions.UseNpgsql<TContext>(DbContextOptionsBuilder<TContext>, IConfiguration, Object)
  fullName: Steeltoe.Connector.PostgreSql.EFCore.PostgresDbContextOptionsExtensions.UseNpgsql<TContext>(DbContextOptionsBuilder<TContext>, IConfiguration, System.Object)
  type: Method
  source:
    remote:
      path: src/Connectors/src/Connector.EFCore/PostgresDbContextOptionsExtensions.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: UseNpgsql
    path: ../Steeltoe/src/Connectors/src/Connector.EFCore/PostgresDbContextOptionsExtensions.cs
    startLine: 55
  assemblies:
  - Steeltoe.Connector.EFCore
  namespace: Steeltoe.Connector.PostgreSql.EFCore
  syntax:
    content: >-
      public static DbContextOptionsBuilder<TContext> UseNpgsql<TContext>(this DbContextOptionsBuilder<TContext> optionsBuilder, IConfiguration config, object npgsqlOptionsAction = null)

          where TContext : DbContext
    parameters:
    - id: optionsBuilder
      type: DbContextOptionsBuilder{{TContext}}
    - id: config
      type: IConfiguration
    - id: npgsqlOptionsAction
      type: System.Object
    typeParameters:
    - id: TContext
    return:
      type: DbContextOptionsBuilder{{TContext}}
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function UseNpgsql(Of TContext As DbContext)(optionsBuilder As DbContextOptionsBuilder(Of TContext), config As IConfiguration, npgsqlOptionsAction As Object = Nothing) As DbContextOptionsBuilder(Of TContext)
  overload: Steeltoe.Connector.PostgreSql.EFCore.PostgresDbContextOptionsExtensions.UseNpgsql*
  nameWithType.vb: PostgresDbContextOptionsExtensions.UseNpgsql(Of TContext)(DbContextOptionsBuilder(Of TContext), IConfiguration, Object)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Steeltoe.Connector.PostgreSql.EFCore.PostgresDbContextOptionsExtensions.UseNpgsql(Of TContext)(DbContextOptionsBuilder(Of TContext), IConfiguration, System.Object)
  name.vb: UseNpgsql(Of TContext)(DbContextOptionsBuilder(Of TContext), IConfiguration, Object)
- uid: Steeltoe.Connector.PostgreSql.EFCore.PostgresDbContextOptionsExtensions.UseNpgsql``1(DbContextOptionsBuilder{``0},IConfiguration,System.String,System.Object)
  commentId: M:Steeltoe.Connector.PostgreSql.EFCore.PostgresDbContextOptionsExtensions.UseNpgsql``1(DbContextOptionsBuilder{``0},IConfiguration,System.String,System.Object)
  id: UseNpgsql``1(DbContextOptionsBuilder{``0},IConfiguration,System.String,System.Object)
  isExtensionMethod: true
  parent: Steeltoe.Connector.PostgreSql.EFCore.PostgresDbContextOptionsExtensions
  langs:
  - csharp
  - vb
  name: UseNpgsql<TContext>(DbContextOptionsBuilder<TContext>, IConfiguration, String, Object)
  nameWithType: PostgresDbContextOptionsExtensions.UseNpgsql<TContext>(DbContextOptionsBuilder<TContext>, IConfiguration, String, Object)
  fullName: Steeltoe.Connector.PostgreSql.EFCore.PostgresDbContextOptionsExtensions.UseNpgsql<TContext>(DbContextOptionsBuilder<TContext>, IConfiguration, System.String, System.Object)
  type: Method
  source:
    remote:
      path: src/Connectors/src/Connector.EFCore/PostgresDbContextOptionsExtensions.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: UseNpgsql
    path: ../Steeltoe/src/Connectors/src/Connector.EFCore/PostgresDbContextOptionsExtensions.cs
    startLine: 73
  assemblies:
  - Steeltoe.Connector.EFCore
  namespace: Steeltoe.Connector.PostgreSql.EFCore
  syntax:
    content: >-
      public static DbContextOptionsBuilder<TContext> UseNpgsql<TContext>(this DbContextOptionsBuilder<TContext> optionsBuilder, IConfiguration config, string serviceName, object npgsqlOptionsAction = null)

          where TContext : DbContext
    parameters:
    - id: optionsBuilder
      type: DbContextOptionsBuilder{{TContext}}
    - id: config
      type: IConfiguration
    - id: serviceName
      type: System.String
    - id: npgsqlOptionsAction
      type: System.Object
    typeParameters:
    - id: TContext
    return:
      type: DbContextOptionsBuilder{{TContext}}
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function UseNpgsql(Of TContext As DbContext)(optionsBuilder As DbContextOptionsBuilder(Of TContext), config As IConfiguration, serviceName As String, npgsqlOptionsAction As Object = Nothing) As DbContextOptionsBuilder(Of TContext)
  overload: Steeltoe.Connector.PostgreSql.EFCore.PostgresDbContextOptionsExtensions.UseNpgsql*
  nameWithType.vb: PostgresDbContextOptionsExtensions.UseNpgsql(Of TContext)(DbContextOptionsBuilder(Of TContext), IConfiguration, String, Object)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Steeltoe.Connector.PostgreSql.EFCore.PostgresDbContextOptionsExtensions.UseNpgsql(Of TContext)(DbContextOptionsBuilder(Of TContext), IConfiguration, System.String, System.Object)
  name.vb: UseNpgsql(Of TContext)(DbContextOptionsBuilder(Of TContext), IConfiguration, String, Object)
- uid: Steeltoe.Connector.PostgreSql.EFCore.PostgresDbContextOptionsExtensions.FindUseNpgsqlMethod(System.Type,System.Type[])
  commentId: M:Steeltoe.Connector.PostgreSql.EFCore.PostgresDbContextOptionsExtensions.FindUseNpgsqlMethod(System.Type,System.Type[])
  id: FindUseNpgsqlMethod(System.Type,System.Type[])
  parent: Steeltoe.Connector.PostgreSql.EFCore.PostgresDbContextOptionsExtensions
  langs:
  - csharp
  - vb
  name: FindUseNpgsqlMethod(Type, Type[])
  nameWithType: PostgresDbContextOptionsExtensions.FindUseNpgsqlMethod(Type, Type[])
  fullName: Steeltoe.Connector.PostgreSql.EFCore.PostgresDbContextOptionsExtensions.FindUseNpgsqlMethod(System.Type, System.Type[])
  type: Method
  source:
    remote:
      path: src/Connectors/src/Connector.EFCore/PostgresDbContextOptionsExtensions.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: FindUseNpgsqlMethod
    path: ../Steeltoe/src/Connectors/src/Connector.EFCore/PostgresDbContextOptionsExtensions.cs
    startLine: 96
  assemblies:
  - Steeltoe.Connector.EFCore
  namespace: Steeltoe.Connector.PostgreSql.EFCore
  syntax:
    content: public static MethodInfo FindUseNpgsqlMethod(Type type, Type[] parameterTypes)
    parameters:
    - id: type
      type: System.Type
    - id: parameterTypes
      type: System.Type[]
    return:
      type: System.Reflection.MethodInfo
    content.vb: Public Shared Function FindUseNpgsqlMethod(type As Type, parameterTypes As Type()) As MethodInfo
  overload: Steeltoe.Connector.PostgreSql.EFCore.PostgresDbContextOptionsExtensions.FindUseNpgsqlMethod*
  nameWithType.vb: PostgresDbContextOptionsExtensions.FindUseNpgsqlMethod(Type, Type())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Steeltoe.Connector.PostgreSql.EFCore.PostgresDbContextOptionsExtensions.FindUseNpgsqlMethod(System.Type, System.Type())
  name.vb: FindUseNpgsqlMethod(Type, Type())
references:
- uid: Steeltoe.Connector.PostgreSql.EFCore
  commentId: N:Steeltoe.Connector.PostgreSql.EFCore
  name: Steeltoe.Connector.PostgreSql.EFCore
  nameWithType: Steeltoe.Connector.PostgreSql.EFCore
  fullName: Steeltoe.Connector.PostgreSql.EFCore
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Steeltoe.Connector.PostgreSql.EFCore.PostgresDbContextOptionsExtensions.UseNpgsql*
  commentId: Overload:Steeltoe.Connector.PostgreSql.EFCore.PostgresDbContextOptionsExtensions.UseNpgsql
  name: UseNpgsql
  nameWithType: PostgresDbContextOptionsExtensions.UseNpgsql
  fullName: Steeltoe.Connector.PostgreSql.EFCore.PostgresDbContextOptionsExtensions.UseNpgsql
- uid: DbContextOptionsBuilder
  isExternal: true
  name: DbContextOptionsBuilder
  nameWithType: DbContextOptionsBuilder
  fullName: DbContextOptionsBuilder
- uid: IConfiguration
  isExternal: true
  name: IConfiguration
  nameWithType: IConfiguration
  fullName: IConfiguration
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: DbContextOptionsBuilder{{TContext}}
  commentId: '!:DbContextOptionsBuilder{``0}'
  definition: DbContextOptionsBuilder`1
  name: DbContextOptionsBuilder<TContext>
  nameWithType: DbContextOptionsBuilder<TContext>
  fullName: DbContextOptionsBuilder<TContext>
  nameWithType.vb: DbContextOptionsBuilder(Of TContext)
  fullName.vb: DbContextOptionsBuilder(Of TContext)
  name.vb: DbContextOptionsBuilder(Of TContext)
  spec.csharp:
  - uid: DbContextOptionsBuilder`1
    name: DbContextOptionsBuilder
    nameWithType: DbContextOptionsBuilder
    fullName: DbContextOptionsBuilder
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TContext
    nameWithType: TContext
    fullName: TContext
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: DbContextOptionsBuilder`1
    name: DbContextOptionsBuilder
    nameWithType: DbContextOptionsBuilder
    fullName: DbContextOptionsBuilder
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TContext
    nameWithType: TContext
    fullName: TContext
  - name: )
    nameWithType: )
    fullName: )
- uid: DbContextOptionsBuilder`1
  isExternal: true
  name: DbContextOptionsBuilder<>
  nameWithType: DbContextOptionsBuilder<>
  fullName: DbContextOptionsBuilder<>
  nameWithType.vb: DbContextOptionsBuilder(Of )
  fullName.vb: DbContextOptionsBuilder(Of )
  name.vb: DbContextOptionsBuilder(Of )
  spec.csharp:
  - uid: DbContextOptionsBuilder`1
    name: DbContextOptionsBuilder
    nameWithType: DbContextOptionsBuilder
    fullName: DbContextOptionsBuilder
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: DbContextOptionsBuilder`1
    name: DbContextOptionsBuilder
    nameWithType: DbContextOptionsBuilder
    fullName: DbContextOptionsBuilder
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Connector.PostgreSql.EFCore.PostgresDbContextOptionsExtensions.FindUseNpgsqlMethod*
  commentId: Overload:Steeltoe.Connector.PostgreSql.EFCore.PostgresDbContextOptionsExtensions.FindUseNpgsqlMethod
  name: FindUseNpgsqlMethod
  nameWithType: PostgresDbContextOptionsExtensions.FindUseNpgsqlMethod
  fullName: Steeltoe.Connector.PostgreSql.EFCore.PostgresDbContextOptionsExtensions.FindUseNpgsqlMethod
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Type[]
  isExternal: true
  name: Type[]
  nameWithType: Type[]
  fullName: System.Type[]
  nameWithType.vb: Type()
  fullName.vb: System.Type()
  name.vb: Type()
  spec.csharp:
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Reflection.MethodInfo
  commentId: T:System.Reflection.MethodInfo
  parent: System.Reflection
  isExternal: true
  name: MethodInfo
  nameWithType: MethodInfo
  fullName: System.Reflection.MethodInfo
- uid: System.Reflection
  commentId: N:System.Reflection
  isExternal: true
  name: System.Reflection
  nameWithType: System.Reflection
  fullName: System.Reflection
