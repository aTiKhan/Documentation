### YamlMime:ManagedReference
items:
- uid: Steeltoe.Messaging.RabbitMQ.Config.QueueBinding
  commentId: T:Steeltoe.Messaging.RabbitMQ.Config.QueueBinding
  id: QueueBinding
  parent: Steeltoe.Messaging.RabbitMQ.Config
  children:
  - Steeltoe.Messaging.RabbitMQ.Config.QueueBinding.#ctor(System.String)
  - Steeltoe.Messaging.RabbitMQ.Config.QueueBinding.#ctor(System.String,System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Object})
  langs:
  - csharp
  - vb
  name: QueueBinding
  nameWithType: QueueBinding
  fullName: Steeltoe.Messaging.RabbitMQ.Config.QueueBinding
  type: Class
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Config/QueueBinding.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: QueueBinding
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Config/QueueBinding.cs
    startLine: 8
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Config
  syntax:
    content: 'public class QueueBinding : Binding, IQueueBinding, IBinding, IDeclarable, IServiceNameAware'
    content.vb: >-
      Public Class QueueBinding

          Inherits Binding

          Implements IQueueBinding, IBinding, IDeclarable, IServiceNameAware
  inheritance:
  - System.Object
  - Steeltoe.Messaging.RabbitMQ.Config.AbstractDeclarable
  - Steeltoe.Messaging.RabbitMQ.Config.Binding
  implements:
  - Steeltoe.Messaging.RabbitMQ.Config.IQueueBinding
  - Steeltoe.Messaging.RabbitMQ.Config.IBinding
  - Steeltoe.Messaging.RabbitMQ.Config.IDeclarable
  - Steeltoe.Common.Services.IServiceNameAware
  inheritedMembers:
  - Steeltoe.Messaging.RabbitMQ.Config.Binding.ServiceName
  - Steeltoe.Messaging.RabbitMQ.Config.Binding.Destination
  - Steeltoe.Messaging.RabbitMQ.Config.Binding.Exchange
  - Steeltoe.Messaging.RabbitMQ.Config.Binding.RoutingKey
  - Steeltoe.Messaging.RabbitMQ.Config.Binding.Type
  - Steeltoe.Messaging.RabbitMQ.Config.Binding.IsDestinationQueue
  - Steeltoe.Messaging.RabbitMQ.Config.Binding.BindingName
  - Steeltoe.Messaging.RabbitMQ.Config.Binding.ToString
  - Steeltoe.Messaging.RabbitMQ.Config.AbstractDeclarable._declaringAdmins
  - Steeltoe.Messaging.RabbitMQ.Config.AbstractDeclarable.ShouldDeclare
  - Steeltoe.Messaging.RabbitMQ.Config.AbstractDeclarable.Arguments
  - Steeltoe.Messaging.RabbitMQ.Config.AbstractDeclarable.DeclaringAdmins
  - Steeltoe.Messaging.RabbitMQ.Config.AbstractDeclarable.IgnoreDeclarationExceptions
  - Steeltoe.Messaging.RabbitMQ.Config.AbstractDeclarable.SetAdminsThatShouldDeclare(System.Object[])
  - Steeltoe.Messaging.RabbitMQ.Config.AbstractDeclarable.AddArgument(System.String,System.Object)
  - Steeltoe.Messaging.RabbitMQ.Config.AbstractDeclarable.RemoveArgument(System.String)
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Steeltoe.Messaging.RabbitMQ.Config.QueueBinding.#ctor(System.String)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Config.QueueBinding.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: Steeltoe.Messaging.RabbitMQ.Config.QueueBinding
  langs:
  - csharp
  - vb
  name: QueueBinding(String)
  nameWithType: QueueBinding.QueueBinding(String)
  fullName: Steeltoe.Messaging.RabbitMQ.Config.QueueBinding.QueueBinding(System.String)
  type: Constructor
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Config/QueueBinding.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: .ctor
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Config/QueueBinding.cs
    startLine: 10
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Config
  syntax:
    content: public QueueBinding(string bindingName)
    parameters:
    - id: bindingName
      type: System.String
    content.vb: Public Sub New(bindingName As String)
  overload: Steeltoe.Messaging.RabbitMQ.Config.QueueBinding.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Steeltoe.Messaging.RabbitMQ.Config.QueueBinding.#ctor(System.String,System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Object})
  commentId: M:Steeltoe.Messaging.RabbitMQ.Config.QueueBinding.#ctor(System.String,System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Object})
  id: '#ctor(System.String,System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Object})'
  parent: Steeltoe.Messaging.RabbitMQ.Config.QueueBinding
  langs:
  - csharp
  - vb
  name: QueueBinding(String, String, String, String, Dictionary<String, Object>)
  nameWithType: QueueBinding.QueueBinding(String, String, String, String, Dictionary<String, Object>)
  fullName: Steeltoe.Messaging.RabbitMQ.Config.QueueBinding.QueueBinding(System.String, System.String, System.String, System.String, System.Collections.Generic.Dictionary<System.String, System.Object>)
  type: Constructor
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Config/QueueBinding.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: .ctor
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Config/QueueBinding.cs
    startLine: 15
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Config
  syntax:
    content: public QueueBinding(string name, string queueDestination, string exchange, string routingKey, Dictionary<string, object> arguments)
    parameters:
    - id: name
      type: System.String
    - id: queueDestination
      type: System.String
    - id: exchange
      type: System.String
    - id: routingKey
      type: System.String
    - id: arguments
      type: System.Collections.Generic.Dictionary{System.String,System.Object}
    content.vb: Public Sub New(name As String, queueDestination As String, exchange As String, routingKey As String, arguments As Dictionary(Of String, Object))
  overload: Steeltoe.Messaging.RabbitMQ.Config.QueueBinding.#ctor*
  nameWithType.vb: QueueBinding.QueueBinding(String, String, String, String, Dictionary(Of String, Object))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Steeltoe.Messaging.RabbitMQ.Config.QueueBinding.QueueBinding(System.String, System.String, System.String, System.String, System.Collections.Generic.Dictionary(Of System.String, System.Object))
  name.vb: QueueBinding(String, String, String, String, Dictionary(Of String, Object))
references:
- uid: Steeltoe.Messaging.RabbitMQ.Config
  commentId: N:Steeltoe.Messaging.RabbitMQ.Config
  name: Steeltoe.Messaging.RabbitMQ.Config
  nameWithType: Steeltoe.Messaging.RabbitMQ.Config
  fullName: Steeltoe.Messaging.RabbitMQ.Config
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Steeltoe.Messaging.RabbitMQ.Config.AbstractDeclarable
  commentId: T:Steeltoe.Messaging.RabbitMQ.Config.AbstractDeclarable
  parent: Steeltoe.Messaging.RabbitMQ.Config
  name: AbstractDeclarable
  nameWithType: AbstractDeclarable
  fullName: Steeltoe.Messaging.RabbitMQ.Config.AbstractDeclarable
- uid: Steeltoe.Messaging.RabbitMQ.Config.Binding
  commentId: T:Steeltoe.Messaging.RabbitMQ.Config.Binding
  parent: Steeltoe.Messaging.RabbitMQ.Config
  name: Binding
  nameWithType: Binding
  fullName: Steeltoe.Messaging.RabbitMQ.Config.Binding
- uid: Steeltoe.Messaging.RabbitMQ.Config.IQueueBinding
  commentId: T:Steeltoe.Messaging.RabbitMQ.Config.IQueueBinding
  parent: Steeltoe.Messaging.RabbitMQ.Config
  name: IQueueBinding
  nameWithType: IQueueBinding
  fullName: Steeltoe.Messaging.RabbitMQ.Config.IQueueBinding
- uid: Steeltoe.Messaging.RabbitMQ.Config.IBinding
  commentId: T:Steeltoe.Messaging.RabbitMQ.Config.IBinding
  parent: Steeltoe.Messaging.RabbitMQ.Config
  name: IBinding
  nameWithType: IBinding
  fullName: Steeltoe.Messaging.RabbitMQ.Config.IBinding
- uid: Steeltoe.Messaging.RabbitMQ.Config.IDeclarable
  commentId: T:Steeltoe.Messaging.RabbitMQ.Config.IDeclarable
  parent: Steeltoe.Messaging.RabbitMQ.Config
  name: IDeclarable
  nameWithType: IDeclarable
  fullName: Steeltoe.Messaging.RabbitMQ.Config.IDeclarable
- uid: Steeltoe.Common.Services.IServiceNameAware
  commentId: T:Steeltoe.Common.Services.IServiceNameAware
  parent: Steeltoe.Common.Services
  name: IServiceNameAware
  nameWithType: IServiceNameAware
  fullName: Steeltoe.Common.Services.IServiceNameAware
- uid: Steeltoe.Messaging.RabbitMQ.Config.Binding.ServiceName
  commentId: P:Steeltoe.Messaging.RabbitMQ.Config.Binding.ServiceName
  parent: Steeltoe.Messaging.RabbitMQ.Config.Binding
  name: ServiceName
  nameWithType: Binding.ServiceName
  fullName: Steeltoe.Messaging.RabbitMQ.Config.Binding.ServiceName
- uid: Steeltoe.Messaging.RabbitMQ.Config.Binding.Destination
  commentId: P:Steeltoe.Messaging.RabbitMQ.Config.Binding.Destination
  parent: Steeltoe.Messaging.RabbitMQ.Config.Binding
  name: Destination
  nameWithType: Binding.Destination
  fullName: Steeltoe.Messaging.RabbitMQ.Config.Binding.Destination
- uid: Steeltoe.Messaging.RabbitMQ.Config.Binding.Exchange
  commentId: P:Steeltoe.Messaging.RabbitMQ.Config.Binding.Exchange
  parent: Steeltoe.Messaging.RabbitMQ.Config.Binding
  name: Exchange
  nameWithType: Binding.Exchange
  fullName: Steeltoe.Messaging.RabbitMQ.Config.Binding.Exchange
- uid: Steeltoe.Messaging.RabbitMQ.Config.Binding.RoutingKey
  commentId: P:Steeltoe.Messaging.RabbitMQ.Config.Binding.RoutingKey
  parent: Steeltoe.Messaging.RabbitMQ.Config.Binding
  name: RoutingKey
  nameWithType: Binding.RoutingKey
  fullName: Steeltoe.Messaging.RabbitMQ.Config.Binding.RoutingKey
- uid: Steeltoe.Messaging.RabbitMQ.Config.Binding.Type
  commentId: P:Steeltoe.Messaging.RabbitMQ.Config.Binding.Type
  parent: Steeltoe.Messaging.RabbitMQ.Config.Binding
  name: Type
  nameWithType: Binding.Type
  fullName: Steeltoe.Messaging.RabbitMQ.Config.Binding.Type
- uid: Steeltoe.Messaging.RabbitMQ.Config.Binding.IsDestinationQueue
  commentId: P:Steeltoe.Messaging.RabbitMQ.Config.Binding.IsDestinationQueue
  parent: Steeltoe.Messaging.RabbitMQ.Config.Binding
  name: IsDestinationQueue
  nameWithType: Binding.IsDestinationQueue
  fullName: Steeltoe.Messaging.RabbitMQ.Config.Binding.IsDestinationQueue
- uid: Steeltoe.Messaging.RabbitMQ.Config.Binding.BindingName
  commentId: P:Steeltoe.Messaging.RabbitMQ.Config.Binding.BindingName
  parent: Steeltoe.Messaging.RabbitMQ.Config.Binding
  name: BindingName
  nameWithType: Binding.BindingName
  fullName: Steeltoe.Messaging.RabbitMQ.Config.Binding.BindingName
- uid: Steeltoe.Messaging.RabbitMQ.Config.Binding.ToString
  commentId: M:Steeltoe.Messaging.RabbitMQ.Config.Binding.ToString
  parent: Steeltoe.Messaging.RabbitMQ.Config.Binding
  name: ToString()
  nameWithType: Binding.ToString()
  fullName: Steeltoe.Messaging.RabbitMQ.Config.Binding.ToString()
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Config.Binding.ToString
    name: ToString
    nameWithType: Binding.ToString
    fullName: Steeltoe.Messaging.RabbitMQ.Config.Binding.ToString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Config.Binding.ToString
    name: ToString
    nameWithType: Binding.ToString
    fullName: Steeltoe.Messaging.RabbitMQ.Config.Binding.ToString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Config.AbstractDeclarable._declaringAdmins
  commentId: F:Steeltoe.Messaging.RabbitMQ.Config.AbstractDeclarable._declaringAdmins
  parent: Steeltoe.Messaging.RabbitMQ.Config.AbstractDeclarable
  name: _declaringAdmins
  nameWithType: AbstractDeclarable._declaringAdmins
  fullName: Steeltoe.Messaging.RabbitMQ.Config.AbstractDeclarable._declaringAdmins
- uid: Steeltoe.Messaging.RabbitMQ.Config.AbstractDeclarable.ShouldDeclare
  commentId: P:Steeltoe.Messaging.RabbitMQ.Config.AbstractDeclarable.ShouldDeclare
  parent: Steeltoe.Messaging.RabbitMQ.Config.AbstractDeclarable
  name: ShouldDeclare
  nameWithType: AbstractDeclarable.ShouldDeclare
  fullName: Steeltoe.Messaging.RabbitMQ.Config.AbstractDeclarable.ShouldDeclare
- uid: Steeltoe.Messaging.RabbitMQ.Config.AbstractDeclarable.Arguments
  commentId: P:Steeltoe.Messaging.RabbitMQ.Config.AbstractDeclarable.Arguments
  parent: Steeltoe.Messaging.RabbitMQ.Config.AbstractDeclarable
  name: Arguments
  nameWithType: AbstractDeclarable.Arguments
  fullName: Steeltoe.Messaging.RabbitMQ.Config.AbstractDeclarable.Arguments
- uid: Steeltoe.Messaging.RabbitMQ.Config.AbstractDeclarable.DeclaringAdmins
  commentId: P:Steeltoe.Messaging.RabbitMQ.Config.AbstractDeclarable.DeclaringAdmins
  parent: Steeltoe.Messaging.RabbitMQ.Config.AbstractDeclarable
  name: DeclaringAdmins
  nameWithType: AbstractDeclarable.DeclaringAdmins
  fullName: Steeltoe.Messaging.RabbitMQ.Config.AbstractDeclarable.DeclaringAdmins
- uid: Steeltoe.Messaging.RabbitMQ.Config.AbstractDeclarable.IgnoreDeclarationExceptions
  commentId: P:Steeltoe.Messaging.RabbitMQ.Config.AbstractDeclarable.IgnoreDeclarationExceptions
  parent: Steeltoe.Messaging.RabbitMQ.Config.AbstractDeclarable
  name: IgnoreDeclarationExceptions
  nameWithType: AbstractDeclarable.IgnoreDeclarationExceptions
  fullName: Steeltoe.Messaging.RabbitMQ.Config.AbstractDeclarable.IgnoreDeclarationExceptions
- uid: Steeltoe.Messaging.RabbitMQ.Config.AbstractDeclarable.SetAdminsThatShouldDeclare(System.Object[])
  commentId: M:Steeltoe.Messaging.RabbitMQ.Config.AbstractDeclarable.SetAdminsThatShouldDeclare(System.Object[])
  parent: Steeltoe.Messaging.RabbitMQ.Config.AbstractDeclarable
  isExternal: true
  name: SetAdminsThatShouldDeclare(Object[])
  nameWithType: AbstractDeclarable.SetAdminsThatShouldDeclare(Object[])
  fullName: Steeltoe.Messaging.RabbitMQ.Config.AbstractDeclarable.SetAdminsThatShouldDeclare(System.Object[])
  nameWithType.vb: AbstractDeclarable.SetAdminsThatShouldDeclare(Object())
  fullName.vb: Steeltoe.Messaging.RabbitMQ.Config.AbstractDeclarable.SetAdminsThatShouldDeclare(System.Object())
  name.vb: SetAdminsThatShouldDeclare(Object())
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Config.AbstractDeclarable.SetAdminsThatShouldDeclare(System.Object[])
    name: SetAdminsThatShouldDeclare
    nameWithType: AbstractDeclarable.SetAdminsThatShouldDeclare
    fullName: Steeltoe.Messaging.RabbitMQ.Config.AbstractDeclarable.SetAdminsThatShouldDeclare
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Config.AbstractDeclarable.SetAdminsThatShouldDeclare(System.Object[])
    name: SetAdminsThatShouldDeclare
    nameWithType: AbstractDeclarable.SetAdminsThatShouldDeclare
    fullName: Steeltoe.Messaging.RabbitMQ.Config.AbstractDeclarable.SetAdminsThatShouldDeclare
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Config.AbstractDeclarable.AddArgument(System.String,System.Object)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Config.AbstractDeclarable.AddArgument(System.String,System.Object)
  parent: Steeltoe.Messaging.RabbitMQ.Config.AbstractDeclarable
  isExternal: true
  name: AddArgument(String, Object)
  nameWithType: AbstractDeclarable.AddArgument(String, Object)
  fullName: Steeltoe.Messaging.RabbitMQ.Config.AbstractDeclarable.AddArgument(System.String, System.Object)
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Config.AbstractDeclarable.AddArgument(System.String,System.Object)
    name: AddArgument
    nameWithType: AbstractDeclarable.AddArgument
    fullName: Steeltoe.Messaging.RabbitMQ.Config.AbstractDeclarable.AddArgument
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Config.AbstractDeclarable.AddArgument(System.String,System.Object)
    name: AddArgument
    nameWithType: AbstractDeclarable.AddArgument
    fullName: Steeltoe.Messaging.RabbitMQ.Config.AbstractDeclarable.AddArgument
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Config.AbstractDeclarable.RemoveArgument(System.String)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Config.AbstractDeclarable.RemoveArgument(System.String)
  parent: Steeltoe.Messaging.RabbitMQ.Config.AbstractDeclarable
  isExternal: true
  name: RemoveArgument(String)
  nameWithType: AbstractDeclarable.RemoveArgument(String)
  fullName: Steeltoe.Messaging.RabbitMQ.Config.AbstractDeclarable.RemoveArgument(System.String)
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Config.AbstractDeclarable.RemoveArgument(System.String)
    name: RemoveArgument
    nameWithType: AbstractDeclarable.RemoveArgument
    fullName: Steeltoe.Messaging.RabbitMQ.Config.AbstractDeclarable.RemoveArgument
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Config.AbstractDeclarable.RemoveArgument(System.String)
    name: RemoveArgument
    nameWithType: AbstractDeclarable.RemoveArgument
    fullName: Steeltoe.Messaging.RabbitMQ.Config.AbstractDeclarable.RemoveArgument
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Steeltoe.Common.Services
  commentId: N:Steeltoe.Common.Services
  name: Steeltoe.Common.Services
  nameWithType: Steeltoe.Common.Services
  fullName: Steeltoe.Common.Services
- uid: Steeltoe.Messaging.RabbitMQ.Config.QueueBinding.#ctor*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Config.QueueBinding.#ctor
  name: QueueBinding
  nameWithType: QueueBinding.QueueBinding
  fullName: Steeltoe.Messaging.RabbitMQ.Config.QueueBinding.QueueBinding
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Collections.Generic.Dictionary{System.String,System.Object}
  commentId: T:System.Collections.Generic.Dictionary{System.String,System.Object}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  name: Dictionary<String, Object>
  nameWithType: Dictionary<String, Object>
  fullName: System.Collections.Generic.Dictionary<System.String, System.Object>
  nameWithType.vb: Dictionary(Of String, Object)
  fullName.vb: System.Collections.Generic.Dictionary(Of System.String, System.Object)
  name.vb: Dictionary(Of String, Object)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Dictionary`2
  commentId: T:System.Collections.Generic.Dictionary`2
  isExternal: true
  name: Dictionary<TKey, TValue>
  nameWithType: Dictionary<TKey, TValue>
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>
  nameWithType.vb: Dictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue)
  name.vb: Dictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
