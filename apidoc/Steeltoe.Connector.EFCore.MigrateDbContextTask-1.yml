### YamlMime:ManagedReference
items:
- uid: Steeltoe.Connector.EFCore.MigrateDbContextTask`1
  commentId: T:Steeltoe.Connector.EFCore.MigrateDbContextTask`1
  id: MigrateDbContextTask`1
  parent: Steeltoe.Connector.EFCore
  children:
  - Steeltoe.Connector.EFCore.MigrateDbContextTask`1.#ctor(`0,ILogger{Steeltoe.Connector.EFCore.MigrateDbContextTask{`0}})
  - Steeltoe.Connector.EFCore.MigrateDbContextTask`1.Name
  - Steeltoe.Connector.EFCore.MigrateDbContextTask`1.Run
  langs:
  - csharp
  - vb
  name: MigrateDbContextTask<T>
  nameWithType: MigrateDbContextTask<T>
  fullName: Steeltoe.Connector.EFCore.MigrateDbContextTask<T>
  type: Class
  source:
    remote:
      path: src/Connectors/src/Connector.EFCore/MigrateDbContextTask.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: MigrateDbContextTask
    path: ../Steeltoe/src/Connectors/src/Connector.EFCore/MigrateDbContextTask.cs
    startLine: 20
  assemblies:
  - Steeltoe.Connector.EFCore
  namespace: Steeltoe.Connector.EFCore
  summary: "\nApplies code first migrations for the specified Entity Framework DB Context\nThis task name is &quot;migrate&quot;\n"
  example:
  - "\ndotnet run runtask=migrate\n"
  syntax:
    content: 'public class MigrateDbContextTask<T> : IApplicationTask where T : DbContext'
    typeParameters:
    - id: T
      description: The DBContext which to migrate
    content.vb: >-
      Public Class MigrateDbContextTask(Of T As DbContext)

          Inherits IApplicationTask
  inheritance:
  - System.Object
  nameWithType.vb: MigrateDbContextTask(Of T)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
  fullName.vb: Steeltoe.Connector.EFCore.MigrateDbContextTask(Of T)
  name.vb: MigrateDbContextTask(Of T)
- uid: Steeltoe.Connector.EFCore.MigrateDbContextTask`1.#ctor(`0,ILogger{Steeltoe.Connector.EFCore.MigrateDbContextTask{`0}})
  commentId: M:Steeltoe.Connector.EFCore.MigrateDbContextTask`1.#ctor(`0,ILogger{Steeltoe.Connector.EFCore.MigrateDbContextTask{`0}})
  id: '#ctor(`0,ILogger{Steeltoe.Connector.EFCore.MigrateDbContextTask{`0}})'
  parent: Steeltoe.Connector.EFCore.MigrateDbContextTask`1
  langs:
  - csharp
  - vb
  name: MigrateDbContextTask(T, ILogger<MigrateDbContextTask<T>>)
  nameWithType: MigrateDbContextTask<T>.MigrateDbContextTask(T, ILogger<MigrateDbContextTask<T>>)
  fullName: Steeltoe.Connector.EFCore.MigrateDbContextTask<T>.MigrateDbContextTask(T, ILogger<Steeltoe.Connector.EFCore.MigrateDbContextTask<T>>)
  type: Constructor
  source:
    remote:
      path: src/Connectors/src/Connector.EFCore/MigrateDbContextTask.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: .ctor
    path: ../Steeltoe/src/Connectors/src/Connector.EFCore/MigrateDbContextTask.cs
    startLine: 26
  assemblies:
  - Steeltoe.Connector.EFCore
  namespace: Steeltoe.Connector.EFCore
  syntax:
    content: public MigrateDbContextTask(T db, ILogger<MigrateDbContextTask<T>> logger)
    parameters:
    - id: db
      type: '{T}'
    - id: logger
      type: ILogger{Steeltoe.Connector.EFCore.MigrateDbContextTask`1}
    content.vb: Public Sub New(db As T, logger As ILogger(Of MigrateDbContextTask(Of T)))
  overload: Steeltoe.Connector.EFCore.MigrateDbContextTask`1.#ctor*
  nameWithType.vb: MigrateDbContextTask(Of T).MigrateDbContextTask(T, ILogger(Of MigrateDbContextTask(Of T)))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Steeltoe.Connector.EFCore.MigrateDbContextTask(Of T).MigrateDbContextTask(T, ILogger(Of Steeltoe.Connector.EFCore.MigrateDbContextTask(Of T)))
  name.vb: MigrateDbContextTask(T, ILogger(Of MigrateDbContextTask(Of T)))
- uid: Steeltoe.Connector.EFCore.MigrateDbContextTask`1.Name
  commentId: P:Steeltoe.Connector.EFCore.MigrateDbContextTask`1.Name
  id: Name
  parent: Steeltoe.Connector.EFCore.MigrateDbContextTask`1
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: MigrateDbContextTask<T>.Name
  fullName: Steeltoe.Connector.EFCore.MigrateDbContextTask<T>.Name
  type: Property
  source:
    remote:
      path: src/Connectors/src/Connector.EFCore/MigrateDbContextTask.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Name
    path: ../Steeltoe/src/Connectors/src/Connector.EFCore/MigrateDbContextTask.cs
    startLine: 32
  assemblies:
  - Steeltoe.Connector.EFCore
  namespace: Steeltoe.Connector.EFCore
  syntax:
    content: public string Name { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property Name As String
  overload: Steeltoe.Connector.EFCore.MigrateDbContextTask`1.Name*
  nameWithType.vb: MigrateDbContextTask(Of T).Name
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: Steeltoe.Connector.EFCore.MigrateDbContextTask(Of T).Name
- uid: Steeltoe.Connector.EFCore.MigrateDbContextTask`1.Run
  commentId: M:Steeltoe.Connector.EFCore.MigrateDbContextTask`1.Run
  id: Run
  parent: Steeltoe.Connector.EFCore.MigrateDbContextTask`1
  langs:
  - csharp
  - vb
  name: Run()
  nameWithType: MigrateDbContextTask<T>.Run()
  fullName: Steeltoe.Connector.EFCore.MigrateDbContextTask<T>.Run()
  type: Method
  source:
    remote:
      path: src/Connectors/src/Connector.EFCore/MigrateDbContextTask.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Run
    path: ../Steeltoe/src/Connectors/src/Connector.EFCore/MigrateDbContextTask.cs
    startLine: 34
  assemblies:
  - Steeltoe.Connector.EFCore
  namespace: Steeltoe.Connector.EFCore
  syntax:
    content: public void Run()
    content.vb: Public Sub Run
  overload: Steeltoe.Connector.EFCore.MigrateDbContextTask`1.Run*
  nameWithType.vb: MigrateDbContextTask(Of T).Run()
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Steeltoe.Connector.EFCore.MigrateDbContextTask(Of T).Run()
references:
- uid: Steeltoe.Connector.EFCore
  commentId: N:Steeltoe.Connector.EFCore
  name: Steeltoe.Connector.EFCore
  nameWithType: Steeltoe.Connector.EFCore
  fullName: Steeltoe.Connector.EFCore
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Steeltoe.Connector.EFCore.MigrateDbContextTask`1.#ctor*
  commentId: Overload:Steeltoe.Connector.EFCore.MigrateDbContextTask`1.#ctor
  name: MigrateDbContextTask
  nameWithType: MigrateDbContextTask<T>.MigrateDbContextTask
  fullName: Steeltoe.Connector.EFCore.MigrateDbContextTask<T>.MigrateDbContextTask
  nameWithType.vb: MigrateDbContextTask(Of T).MigrateDbContextTask
  fullName.vb: Steeltoe.Connector.EFCore.MigrateDbContextTask(Of T).MigrateDbContextTask
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: ILogger{Steeltoe.Connector.EFCore.MigrateDbContextTask`1}
  commentId: '!:ILogger{Steeltoe.Connector.EFCore.MigrateDbContextTask`1}'
  definition: ILogger`1
  name: ILogger<MigrateDbContextTask<T>>
  nameWithType: ILogger<MigrateDbContextTask<T>>
  fullName: ILogger<Steeltoe.Connector.EFCore.MigrateDbContextTask<T>>
  nameWithType.vb: ILogger(Of MigrateDbContextTask(Of T))
  fullName.vb: ILogger(Of Steeltoe.Connector.EFCore.MigrateDbContextTask(Of T))
  name.vb: ILogger(Of MigrateDbContextTask(Of T))
  spec.csharp:
  - uid: ILogger`1
    name: ILogger
    nameWithType: ILogger
    fullName: ILogger
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Steeltoe.Connector.EFCore.MigrateDbContextTask`1
    name: MigrateDbContextTask
    nameWithType: MigrateDbContextTask
    fullName: Steeltoe.Connector.EFCore.MigrateDbContextTask
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: ILogger`1
    name: ILogger
    nameWithType: ILogger
    fullName: ILogger
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Steeltoe.Connector.EFCore.MigrateDbContextTask`1
    name: MigrateDbContextTask
    nameWithType: MigrateDbContextTask
    fullName: Steeltoe.Connector.EFCore.MigrateDbContextTask
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: ILogger`1
  isExternal: true
  name: ILogger<>
  nameWithType: ILogger<>
  fullName: ILogger<>
  nameWithType.vb: ILogger(Of )
  fullName.vb: ILogger(Of )
  name.vb: ILogger(Of )
  spec.csharp:
  - uid: ILogger`1
    name: ILogger
    nameWithType: ILogger
    fullName: ILogger
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: ILogger`1
    name: ILogger
    nameWithType: ILogger
    fullName: ILogger
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Connector.EFCore.MigrateDbContextTask`1.Name*
  commentId: Overload:Steeltoe.Connector.EFCore.MigrateDbContextTask`1.Name
  name: Name
  nameWithType: MigrateDbContextTask<T>.Name
  fullName: Steeltoe.Connector.EFCore.MigrateDbContextTask<T>.Name
  nameWithType.vb: MigrateDbContextTask(Of T).Name
  fullName.vb: Steeltoe.Connector.EFCore.MigrateDbContextTask(Of T).Name
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Steeltoe.Connector.EFCore.MigrateDbContextTask`1.Run*
  commentId: Overload:Steeltoe.Connector.EFCore.MigrateDbContextTask`1.Run
  name: Run
  nameWithType: MigrateDbContextTask<T>.Run
  fullName: Steeltoe.Connector.EFCore.MigrateDbContextTask<T>.Run
  nameWithType.vb: MigrateDbContextTask(Of T).Run
  fullName.vb: Steeltoe.Connector.EFCore.MigrateDbContextTask(Of T).Run
