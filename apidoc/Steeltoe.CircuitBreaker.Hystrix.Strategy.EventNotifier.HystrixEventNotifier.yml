### YamlMime:ManagedReference
items:
- uid: Steeltoe.CircuitBreaker.Hystrix.Strategy.EventNotifier.HystrixEventNotifier
  commentId: T:Steeltoe.CircuitBreaker.Hystrix.Strategy.EventNotifier.HystrixEventNotifier
  id: HystrixEventNotifier
  parent: Steeltoe.CircuitBreaker.Hystrix.Strategy.EventNotifier
  children:
  - Steeltoe.CircuitBreaker.Hystrix.Strategy.EventNotifier.HystrixEventNotifier.MarkCommandExecution(Steeltoe.CircuitBreaker.Hystrix.IHystrixCommandKey,Steeltoe.CircuitBreaker.Hystrix.ExecutionIsolationStrategy,System.Int32,System.Collections.Generic.IList{Steeltoe.CircuitBreaker.Hystrix.HystrixEventType})
  - Steeltoe.CircuitBreaker.Hystrix.Strategy.EventNotifier.HystrixEventNotifier.MarkEvent(Steeltoe.CircuitBreaker.Hystrix.HystrixEventType,Steeltoe.CircuitBreaker.Hystrix.IHystrixCommandKey)
  langs:
  - csharp
  - vb
  name: HystrixEventNotifier
  nameWithType: HystrixEventNotifier
  fullName: Steeltoe.CircuitBreaker.Hystrix.Strategy.EventNotifier.HystrixEventNotifier
  type: Class
  source:
    remote:
      path: src/CircuitBreaker/src/HystrixBase/Strategy/EventNotifier/HystrixEventNotifier.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: HystrixEventNotifier
    path: ../Steeltoe/src/CircuitBreaker/src/HystrixBase/Strategy/EventNotifier/HystrixEventNotifier.cs
    startLine: 8
  assemblies:
  - Steeltoe.CircuitBreaker.HystrixBase
  namespace: Steeltoe.CircuitBreaker.Hystrix.Strategy.EventNotifier
  syntax:
    content: public abstract class HystrixEventNotifier
    content.vb: Public MustInherit Class HystrixEventNotifier
  inheritance:
  - System.Object
  derivedClasses:
  - Steeltoe.CircuitBreaker.Hystrix.Strategy.EventNotifier.HystrixEventNotifierDefault
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: Steeltoe.CircuitBreaker.Hystrix.Strategy.EventNotifier.HystrixEventNotifier.MarkEvent(Steeltoe.CircuitBreaker.Hystrix.HystrixEventType,Steeltoe.CircuitBreaker.Hystrix.IHystrixCommandKey)
  commentId: M:Steeltoe.CircuitBreaker.Hystrix.Strategy.EventNotifier.HystrixEventNotifier.MarkEvent(Steeltoe.CircuitBreaker.Hystrix.HystrixEventType,Steeltoe.CircuitBreaker.Hystrix.IHystrixCommandKey)
  id: MarkEvent(Steeltoe.CircuitBreaker.Hystrix.HystrixEventType,Steeltoe.CircuitBreaker.Hystrix.IHystrixCommandKey)
  parent: Steeltoe.CircuitBreaker.Hystrix.Strategy.EventNotifier.HystrixEventNotifier
  langs:
  - csharp
  - vb
  name: MarkEvent(HystrixEventType, IHystrixCommandKey)
  nameWithType: HystrixEventNotifier.MarkEvent(HystrixEventType, IHystrixCommandKey)
  fullName: Steeltoe.CircuitBreaker.Hystrix.Strategy.EventNotifier.HystrixEventNotifier.MarkEvent(Steeltoe.CircuitBreaker.Hystrix.HystrixEventType, Steeltoe.CircuitBreaker.Hystrix.IHystrixCommandKey)
  type: Method
  source:
    remote:
      path: src/CircuitBreaker/src/HystrixBase/Strategy/EventNotifier/HystrixEventNotifier.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: MarkEvent
    path: ../Steeltoe/src/CircuitBreaker/src/HystrixBase/Strategy/EventNotifier/HystrixEventNotifier.cs
    startLine: 10
  assemblies:
  - Steeltoe.CircuitBreaker.HystrixBase
  namespace: Steeltoe.CircuitBreaker.Hystrix.Strategy.EventNotifier
  syntax:
    content: public void MarkEvent(HystrixEventType eventType, IHystrixCommandKey key)
    parameters:
    - id: eventType
      type: Steeltoe.CircuitBreaker.Hystrix.HystrixEventType
    - id: key
      type: Steeltoe.CircuitBreaker.Hystrix.IHystrixCommandKey
    content.vb: Public Sub MarkEvent(eventType As HystrixEventType, key As IHystrixCommandKey)
  overload: Steeltoe.CircuitBreaker.Hystrix.Strategy.EventNotifier.HystrixEventNotifier.MarkEvent*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Steeltoe.CircuitBreaker.Hystrix.Strategy.EventNotifier.HystrixEventNotifier.MarkCommandExecution(Steeltoe.CircuitBreaker.Hystrix.IHystrixCommandKey,Steeltoe.CircuitBreaker.Hystrix.ExecutionIsolationStrategy,System.Int32,System.Collections.Generic.IList{Steeltoe.CircuitBreaker.Hystrix.HystrixEventType})
  commentId: M:Steeltoe.CircuitBreaker.Hystrix.Strategy.EventNotifier.HystrixEventNotifier.MarkCommandExecution(Steeltoe.CircuitBreaker.Hystrix.IHystrixCommandKey,Steeltoe.CircuitBreaker.Hystrix.ExecutionIsolationStrategy,System.Int32,System.Collections.Generic.IList{Steeltoe.CircuitBreaker.Hystrix.HystrixEventType})
  id: MarkCommandExecution(Steeltoe.CircuitBreaker.Hystrix.IHystrixCommandKey,Steeltoe.CircuitBreaker.Hystrix.ExecutionIsolationStrategy,System.Int32,System.Collections.Generic.IList{Steeltoe.CircuitBreaker.Hystrix.HystrixEventType})
  parent: Steeltoe.CircuitBreaker.Hystrix.Strategy.EventNotifier.HystrixEventNotifier
  langs:
  - csharp
  - vb
  name: MarkCommandExecution(IHystrixCommandKey, ExecutionIsolationStrategy, Int32, IList<HystrixEventType>)
  nameWithType: HystrixEventNotifier.MarkCommandExecution(IHystrixCommandKey, ExecutionIsolationStrategy, Int32, IList<HystrixEventType>)
  fullName: Steeltoe.CircuitBreaker.Hystrix.Strategy.EventNotifier.HystrixEventNotifier.MarkCommandExecution(Steeltoe.CircuitBreaker.Hystrix.IHystrixCommandKey, Steeltoe.CircuitBreaker.Hystrix.ExecutionIsolationStrategy, System.Int32, System.Collections.Generic.IList<Steeltoe.CircuitBreaker.Hystrix.HystrixEventType>)
  type: Method
  source:
    remote:
      path: src/CircuitBreaker/src/HystrixBase/Strategy/EventNotifier/HystrixEventNotifier.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: MarkCommandExecution
    path: ../Steeltoe/src/CircuitBreaker/src/HystrixBase/Strategy/EventNotifier/HystrixEventNotifier.cs
    startLine: 15
  assemblies:
  - Steeltoe.CircuitBreaker.HystrixBase
  namespace: Steeltoe.CircuitBreaker.Hystrix.Strategy.EventNotifier
  syntax:
    content: public void MarkCommandExecution(IHystrixCommandKey key, ExecutionIsolationStrategy isolationStrategy, int duration, IList<HystrixEventType> eventsDuringExecution)
    parameters:
    - id: key
      type: Steeltoe.CircuitBreaker.Hystrix.IHystrixCommandKey
    - id: isolationStrategy
      type: Steeltoe.CircuitBreaker.Hystrix.ExecutionIsolationStrategy
    - id: duration
      type: System.Int32
    - id: eventsDuringExecution
      type: System.Collections.Generic.IList{Steeltoe.CircuitBreaker.Hystrix.HystrixEventType}
    content.vb: Public Sub MarkCommandExecution(key As IHystrixCommandKey, isolationStrategy As ExecutionIsolationStrategy, duration As Integer, eventsDuringExecution As IList(Of HystrixEventType))
  overload: Steeltoe.CircuitBreaker.Hystrix.Strategy.EventNotifier.HystrixEventNotifier.MarkCommandExecution*
  nameWithType.vb: HystrixEventNotifier.MarkCommandExecution(IHystrixCommandKey, ExecutionIsolationStrategy, Int32, IList(Of HystrixEventType))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Steeltoe.CircuitBreaker.Hystrix.Strategy.EventNotifier.HystrixEventNotifier.MarkCommandExecution(Steeltoe.CircuitBreaker.Hystrix.IHystrixCommandKey, Steeltoe.CircuitBreaker.Hystrix.ExecutionIsolationStrategy, System.Int32, System.Collections.Generic.IList(Of Steeltoe.CircuitBreaker.Hystrix.HystrixEventType))
  name.vb: MarkCommandExecution(IHystrixCommandKey, ExecutionIsolationStrategy, Int32, IList(Of HystrixEventType))
references:
- uid: Steeltoe.CircuitBreaker.Hystrix.Strategy.EventNotifier
  commentId: N:Steeltoe.CircuitBreaker.Hystrix.Strategy.EventNotifier
  name: Steeltoe.CircuitBreaker.Hystrix.Strategy.EventNotifier
  nameWithType: Steeltoe.CircuitBreaker.Hystrix.Strategy.EventNotifier
  fullName: Steeltoe.CircuitBreaker.Hystrix.Strategy.EventNotifier
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Steeltoe.CircuitBreaker.Hystrix.Strategy.EventNotifier.HystrixEventNotifier.MarkEvent*
  commentId: Overload:Steeltoe.CircuitBreaker.Hystrix.Strategy.EventNotifier.HystrixEventNotifier.MarkEvent
  name: MarkEvent
  nameWithType: HystrixEventNotifier.MarkEvent
  fullName: Steeltoe.CircuitBreaker.Hystrix.Strategy.EventNotifier.HystrixEventNotifier.MarkEvent
- uid: Steeltoe.CircuitBreaker.Hystrix.HystrixEventType
  commentId: T:Steeltoe.CircuitBreaker.Hystrix.HystrixEventType
  parent: Steeltoe.CircuitBreaker.Hystrix
  name: HystrixEventType
  nameWithType: HystrixEventType
  fullName: Steeltoe.CircuitBreaker.Hystrix.HystrixEventType
- uid: Steeltoe.CircuitBreaker.Hystrix.IHystrixCommandKey
  commentId: T:Steeltoe.CircuitBreaker.Hystrix.IHystrixCommandKey
  parent: Steeltoe.CircuitBreaker.Hystrix
  name: IHystrixCommandKey
  nameWithType: IHystrixCommandKey
  fullName: Steeltoe.CircuitBreaker.Hystrix.IHystrixCommandKey
- uid: Steeltoe.CircuitBreaker.Hystrix
  commentId: N:Steeltoe.CircuitBreaker.Hystrix
  name: Steeltoe.CircuitBreaker.Hystrix
  nameWithType: Steeltoe.CircuitBreaker.Hystrix
  fullName: Steeltoe.CircuitBreaker.Hystrix
- uid: Steeltoe.CircuitBreaker.Hystrix.Strategy.EventNotifier.HystrixEventNotifier.MarkCommandExecution*
  commentId: Overload:Steeltoe.CircuitBreaker.Hystrix.Strategy.EventNotifier.HystrixEventNotifier.MarkCommandExecution
  name: MarkCommandExecution
  nameWithType: HystrixEventNotifier.MarkCommandExecution
  fullName: Steeltoe.CircuitBreaker.Hystrix.Strategy.EventNotifier.HystrixEventNotifier.MarkCommandExecution
- uid: Steeltoe.CircuitBreaker.Hystrix.ExecutionIsolationStrategy
  commentId: T:Steeltoe.CircuitBreaker.Hystrix.ExecutionIsolationStrategy
  parent: Steeltoe.CircuitBreaker.Hystrix
  name: ExecutionIsolationStrategy
  nameWithType: ExecutionIsolationStrategy
  fullName: Steeltoe.CircuitBreaker.Hystrix.ExecutionIsolationStrategy
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Collections.Generic.IList{Steeltoe.CircuitBreaker.Hystrix.HystrixEventType}
  commentId: T:System.Collections.Generic.IList{Steeltoe.CircuitBreaker.Hystrix.HystrixEventType}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<HystrixEventType>
  nameWithType: IList<HystrixEventType>
  fullName: System.Collections.Generic.IList<Steeltoe.CircuitBreaker.Hystrix.HystrixEventType>
  nameWithType.vb: IList(Of HystrixEventType)
  fullName.vb: System.Collections.Generic.IList(Of Steeltoe.CircuitBreaker.Hystrix.HystrixEventType)
  name.vb: IList(Of HystrixEventType)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Steeltoe.CircuitBreaker.Hystrix.HystrixEventType
    name: HystrixEventType
    nameWithType: HystrixEventType
    fullName: Steeltoe.CircuitBreaker.Hystrix.HystrixEventType
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Steeltoe.CircuitBreaker.Hystrix.HystrixEventType
    name: HystrixEventType
    nameWithType: HystrixEventType
    fullName: Steeltoe.CircuitBreaker.Hystrix.HystrixEventType
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullName.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
