### YamlMime:ManagedReference
items:
- uid: Steeltoe.Messaging.RabbitMQ.Config.Queue
  commentId: T:Steeltoe.Messaging.RabbitMQ.Config.Queue
  id: Queue
  parent: Steeltoe.Messaging.RabbitMQ.Config
  children:
  - Steeltoe.Messaging.RabbitMQ.Config.Queue.#ctor(System.String)
  - Steeltoe.Messaging.RabbitMQ.Config.Queue.#ctor(System.String,System.Boolean)
  - Steeltoe.Messaging.RabbitMQ.Config.Queue.#ctor(System.String,System.Boolean,System.Boolean,System.Boolean)
  - Steeltoe.Messaging.RabbitMQ.Config.Queue.#ctor(System.String,System.Boolean,System.Boolean,System.Boolean,System.Collections.Generic.Dictionary{System.String,System.Object})
  - Steeltoe.Messaging.RabbitMQ.Config.Queue.ActualName
  - Steeltoe.Messaging.RabbitMQ.Config.Queue.Clone
  - Steeltoe.Messaging.RabbitMQ.Config.Queue.IsAutoDelete
  - Steeltoe.Messaging.RabbitMQ.Config.Queue.IsDurable
  - Steeltoe.Messaging.RabbitMQ.Config.Queue.IsExclusive
  - Steeltoe.Messaging.RabbitMQ.Config.Queue.MasterLocator
  - Steeltoe.Messaging.RabbitMQ.Config.Queue.QueueName
  - Steeltoe.Messaging.RabbitMQ.Config.Queue.ServiceName
  - Steeltoe.Messaging.RabbitMQ.Config.Queue.ToString
  - Steeltoe.Messaging.RabbitMQ.Config.Queue.X_QUEUE_MASTER_LOCATOR
  langs:
  - csharp
  - vb
  name: Queue
  nameWithType: Queue
  fullName: Steeltoe.Messaging.RabbitMQ.Config.Queue
  type: Class
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Config/Queue.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Queue
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Config/Queue.cs
    startLine: 11
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Config
  syntax:
    content: 'public class Queue : AbstractDeclarable, IQueue, IDeclarable, IServiceNameAware, ICloneable'
    content.vb: >-
      Public Class Queue

          Inherits AbstractDeclarable

          Implements IQueue, IDeclarable, IServiceNameAware, ICloneable
  inheritance:
  - System.Object
  - Steeltoe.Messaging.RabbitMQ.Config.AbstractDeclarable
  derivedClasses:
  - Steeltoe.Messaging.RabbitMQ.Config.AnonymousQueue
  implements:
  - Steeltoe.Messaging.RabbitMQ.Config.IQueue
  - Steeltoe.Messaging.RabbitMQ.Config.IDeclarable
  - Steeltoe.Common.Services.IServiceNameAware
  - System.ICloneable
  inheritedMembers:
  - Steeltoe.Messaging.RabbitMQ.Config.AbstractDeclarable._declaringAdmins
  - Steeltoe.Messaging.RabbitMQ.Config.AbstractDeclarable.ShouldDeclare
  - Steeltoe.Messaging.RabbitMQ.Config.AbstractDeclarable.Arguments
  - Steeltoe.Messaging.RabbitMQ.Config.AbstractDeclarable.DeclaringAdmins
  - Steeltoe.Messaging.RabbitMQ.Config.AbstractDeclarable.IgnoreDeclarationExceptions
  - Steeltoe.Messaging.RabbitMQ.Config.AbstractDeclarable.SetAdminsThatShouldDeclare(System.Object[])
  - Steeltoe.Messaging.RabbitMQ.Config.AbstractDeclarable.AddArgument(System.String,System.Object)
  - Steeltoe.Messaging.RabbitMQ.Config.AbstractDeclarable.RemoveArgument(System.String)
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Steeltoe.Messaging.RabbitMQ.Config.Queue.X_QUEUE_MASTER_LOCATOR
  commentId: F:Steeltoe.Messaging.RabbitMQ.Config.Queue.X_QUEUE_MASTER_LOCATOR
  id: X_QUEUE_MASTER_LOCATOR
  parent: Steeltoe.Messaging.RabbitMQ.Config.Queue
  langs:
  - csharp
  - vb
  name: X_QUEUE_MASTER_LOCATOR
  nameWithType: Queue.X_QUEUE_MASTER_LOCATOR
  fullName: Steeltoe.Messaging.RabbitMQ.Config.Queue.X_QUEUE_MASTER_LOCATOR
  type: Field
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Config/Queue.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: X_QUEUE_MASTER_LOCATOR
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Config/Queue.cs
    startLine: 13
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Config
  syntax:
    content: public const string X_QUEUE_MASTER_LOCATOR = "x-queue-master-locator"
    return:
      type: System.String
    content.vb: Public Const X_QUEUE_MASTER_LOCATOR As String = "x-queue-master-locator"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Steeltoe.Messaging.RabbitMQ.Config.Queue.#ctor(System.String)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Config.Queue.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: Steeltoe.Messaging.RabbitMQ.Config.Queue
  langs:
  - csharp
  - vb
  name: Queue(String)
  nameWithType: Queue.Queue(String)
  fullName: Steeltoe.Messaging.RabbitMQ.Config.Queue.Queue(System.String)
  type: Constructor
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Config/Queue.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: .ctor
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Config/Queue.cs
    startLine: 15
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Config
  syntax:
    content: public Queue(string queueName)
    parameters:
    - id: queueName
      type: System.String
    content.vb: Public Sub New(queueName As String)
  overload: Steeltoe.Messaging.RabbitMQ.Config.Queue.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Steeltoe.Messaging.RabbitMQ.Config.Queue.#ctor(System.String,System.Boolean)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Config.Queue.#ctor(System.String,System.Boolean)
  id: '#ctor(System.String,System.Boolean)'
  parent: Steeltoe.Messaging.RabbitMQ.Config.Queue
  langs:
  - csharp
  - vb
  name: Queue(String, Boolean)
  nameWithType: Queue.Queue(String, Boolean)
  fullName: Steeltoe.Messaging.RabbitMQ.Config.Queue.Queue(System.String, System.Boolean)
  type: Constructor
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Config/Queue.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: .ctor
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Config/Queue.cs
    startLine: 20
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Config
  syntax:
    content: public Queue(string queueName, bool durable)
    parameters:
    - id: queueName
      type: System.String
    - id: durable
      type: System.Boolean
    content.vb: Public Sub New(queueName As String, durable As Boolean)
  overload: Steeltoe.Messaging.RabbitMQ.Config.Queue.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Steeltoe.Messaging.RabbitMQ.Config.Queue.#ctor(System.String,System.Boolean,System.Boolean,System.Boolean)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Config.Queue.#ctor(System.String,System.Boolean,System.Boolean,System.Boolean)
  id: '#ctor(System.String,System.Boolean,System.Boolean,System.Boolean)'
  parent: Steeltoe.Messaging.RabbitMQ.Config.Queue
  langs:
  - csharp
  - vb
  name: Queue(String, Boolean, Boolean, Boolean)
  nameWithType: Queue.Queue(String, Boolean, Boolean, Boolean)
  fullName: Steeltoe.Messaging.RabbitMQ.Config.Queue.Queue(System.String, System.Boolean, System.Boolean, System.Boolean)
  type: Constructor
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Config/Queue.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: .ctor
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Config/Queue.cs
    startLine: 25
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Config
  syntax:
    content: public Queue(string queueName, bool durable, bool exclusive, bool autoDelete)
    parameters:
    - id: queueName
      type: System.String
    - id: durable
      type: System.Boolean
    - id: exclusive
      type: System.Boolean
    - id: autoDelete
      type: System.Boolean
    content.vb: Public Sub New(queueName As String, durable As Boolean, exclusive As Boolean, autoDelete As Boolean)
  overload: Steeltoe.Messaging.RabbitMQ.Config.Queue.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Steeltoe.Messaging.RabbitMQ.Config.Queue.#ctor(System.String,System.Boolean,System.Boolean,System.Boolean,System.Collections.Generic.Dictionary{System.String,System.Object})
  commentId: M:Steeltoe.Messaging.RabbitMQ.Config.Queue.#ctor(System.String,System.Boolean,System.Boolean,System.Boolean,System.Collections.Generic.Dictionary{System.String,System.Object})
  id: '#ctor(System.String,System.Boolean,System.Boolean,System.Boolean,System.Collections.Generic.Dictionary{System.String,System.Object})'
  parent: Steeltoe.Messaging.RabbitMQ.Config.Queue
  langs:
  - csharp
  - vb
  name: Queue(String, Boolean, Boolean, Boolean, Dictionary<String, Object>)
  nameWithType: Queue.Queue(String, Boolean, Boolean, Boolean, Dictionary<String, Object>)
  fullName: Steeltoe.Messaging.RabbitMQ.Config.Queue.Queue(System.String, System.Boolean, System.Boolean, System.Boolean, System.Collections.Generic.Dictionary<System.String, System.Object>)
  type: Constructor
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Config/Queue.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: .ctor
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Config/Queue.cs
    startLine: 30
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Config
  syntax:
    content: public Queue(string queueName, bool durable, bool exclusive, bool autoDelete, Dictionary<string, object> arguments)
    parameters:
    - id: queueName
      type: System.String
    - id: durable
      type: System.Boolean
    - id: exclusive
      type: System.Boolean
    - id: autoDelete
      type: System.Boolean
    - id: arguments
      type: System.Collections.Generic.Dictionary{System.String,System.Object}
    content.vb: Public Sub New(queueName As String, durable As Boolean, exclusive As Boolean, autoDelete As Boolean, arguments As Dictionary(Of String, Object))
  overload: Steeltoe.Messaging.RabbitMQ.Config.Queue.#ctor*
  nameWithType.vb: Queue.Queue(String, Boolean, Boolean, Boolean, Dictionary(Of String, Object))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Steeltoe.Messaging.RabbitMQ.Config.Queue.Queue(System.String, System.Boolean, System.Boolean, System.Boolean, System.Collections.Generic.Dictionary(Of System.String, System.Object))
  name.vb: Queue(String, Boolean, Boolean, Boolean, Dictionary(Of String, Object))
- uid: Steeltoe.Messaging.RabbitMQ.Config.Queue.ServiceName
  commentId: P:Steeltoe.Messaging.RabbitMQ.Config.Queue.ServiceName
  id: ServiceName
  parent: Steeltoe.Messaging.RabbitMQ.Config.Queue
  langs:
  - csharp
  - vb
  name: ServiceName
  nameWithType: Queue.ServiceName
  fullName: Steeltoe.Messaging.RabbitMQ.Config.Queue.ServiceName
  type: Property
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Config/Queue.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: ServiceName
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Config/Queue.cs
    startLine: 46
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Config
  syntax:
    content: public string ServiceName { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property ServiceName As String
  overload: Steeltoe.Messaging.RabbitMQ.Config.Queue.ServiceName*
  implements:
  - Steeltoe.Common.Services.IServiceNameAware.ServiceName
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Steeltoe.Messaging.RabbitMQ.Config.Queue.QueueName
  commentId: P:Steeltoe.Messaging.RabbitMQ.Config.Queue.QueueName
  id: QueueName
  parent: Steeltoe.Messaging.RabbitMQ.Config.Queue
  langs:
  - csharp
  - vb
  name: QueueName
  nameWithType: Queue.QueueName
  fullName: Steeltoe.Messaging.RabbitMQ.Config.Queue.QueueName
  type: Property
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Config/Queue.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: QueueName
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Config/Queue.cs
    startLine: 48
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Config
  syntax:
    content: public string QueueName { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property QueueName As String
  overload: Steeltoe.Messaging.RabbitMQ.Config.Queue.QueueName*
  implements:
  - Steeltoe.Messaging.RabbitMQ.Config.IQueue.QueueName
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Steeltoe.Messaging.RabbitMQ.Config.Queue.ActualName
  commentId: P:Steeltoe.Messaging.RabbitMQ.Config.Queue.ActualName
  id: ActualName
  parent: Steeltoe.Messaging.RabbitMQ.Config.Queue
  langs:
  - csharp
  - vb
  name: ActualName
  nameWithType: Queue.ActualName
  fullName: Steeltoe.Messaging.RabbitMQ.Config.Queue.ActualName
  type: Property
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Config/Queue.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: ActualName
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Config/Queue.cs
    startLine: 50
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Config
  syntax:
    content: public string ActualName { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property ActualName As String
  overload: Steeltoe.Messaging.RabbitMQ.Config.Queue.ActualName*
  implements:
  - Steeltoe.Messaging.RabbitMQ.Config.IQueue.ActualName
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Steeltoe.Messaging.RabbitMQ.Config.Queue.IsDurable
  commentId: P:Steeltoe.Messaging.RabbitMQ.Config.Queue.IsDurable
  id: IsDurable
  parent: Steeltoe.Messaging.RabbitMQ.Config.Queue
  langs:
  - csharp
  - vb
  name: IsDurable
  nameWithType: Queue.IsDurable
  fullName: Steeltoe.Messaging.RabbitMQ.Config.Queue.IsDurable
  type: Property
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Config/Queue.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: IsDurable
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Config/Queue.cs
    startLine: 52
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Config
  syntax:
    content: public bool IsDurable { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property IsDurable As Boolean
  overload: Steeltoe.Messaging.RabbitMQ.Config.Queue.IsDurable*
  implements:
  - Steeltoe.Messaging.RabbitMQ.Config.IQueue.IsDurable
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Steeltoe.Messaging.RabbitMQ.Config.Queue.IsExclusive
  commentId: P:Steeltoe.Messaging.RabbitMQ.Config.Queue.IsExclusive
  id: IsExclusive
  parent: Steeltoe.Messaging.RabbitMQ.Config.Queue
  langs:
  - csharp
  - vb
  name: IsExclusive
  nameWithType: Queue.IsExclusive
  fullName: Steeltoe.Messaging.RabbitMQ.Config.Queue.IsExclusive
  type: Property
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Config/Queue.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: IsExclusive
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Config/Queue.cs
    startLine: 54
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Config
  syntax:
    content: public bool IsExclusive { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property IsExclusive As Boolean
  overload: Steeltoe.Messaging.RabbitMQ.Config.Queue.IsExclusive*
  implements:
  - Steeltoe.Messaging.RabbitMQ.Config.IQueue.IsExclusive
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Steeltoe.Messaging.RabbitMQ.Config.Queue.IsAutoDelete
  commentId: P:Steeltoe.Messaging.RabbitMQ.Config.Queue.IsAutoDelete
  id: IsAutoDelete
  parent: Steeltoe.Messaging.RabbitMQ.Config.Queue
  langs:
  - csharp
  - vb
  name: IsAutoDelete
  nameWithType: Queue.IsAutoDelete
  fullName: Steeltoe.Messaging.RabbitMQ.Config.Queue.IsAutoDelete
  type: Property
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Config/Queue.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: IsAutoDelete
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Config/Queue.cs
    startLine: 56
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Config
  syntax:
    content: public bool IsAutoDelete { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property IsAutoDelete As Boolean
  overload: Steeltoe.Messaging.RabbitMQ.Config.Queue.IsAutoDelete*
  implements:
  - Steeltoe.Messaging.RabbitMQ.Config.IQueue.IsAutoDelete
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Steeltoe.Messaging.RabbitMQ.Config.Queue.MasterLocator
  commentId: P:Steeltoe.Messaging.RabbitMQ.Config.Queue.MasterLocator
  id: MasterLocator
  parent: Steeltoe.Messaging.RabbitMQ.Config.Queue
  langs:
  - csharp
  - vb
  name: MasterLocator
  nameWithType: Queue.MasterLocator
  fullName: Steeltoe.Messaging.RabbitMQ.Config.Queue.MasterLocator
  type: Property
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Config/Queue.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: MasterLocator
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Config/Queue.cs
    startLine: 58
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Config
  syntax:
    content: public string MasterLocator { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property MasterLocator As String
  overload: Steeltoe.Messaging.RabbitMQ.Config.Queue.MasterLocator*
  implements:
  - Steeltoe.Messaging.RabbitMQ.Config.IQueue.MasterLocator
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Steeltoe.Messaging.RabbitMQ.Config.Queue.Clone
  commentId: M:Steeltoe.Messaging.RabbitMQ.Config.Queue.Clone
  id: Clone
  parent: Steeltoe.Messaging.RabbitMQ.Config.Queue
  langs:
  - csharp
  - vb
  name: Clone()
  nameWithType: Queue.Clone()
  fullName: Steeltoe.Messaging.RabbitMQ.Config.Queue.Clone()
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Config/Queue.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Clone
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Config/Queue.cs
    startLine: 79
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Config
  syntax:
    content: public object Clone()
    return:
      type: System.Object
    content.vb: Public Function Clone As Object
  overload: Steeltoe.Messaging.RabbitMQ.Config.Queue.Clone*
  implements:
  - Steeltoe.Messaging.RabbitMQ.Config.IQueue.Clone
  - System.ICloneable.Clone
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Steeltoe.Messaging.RabbitMQ.Config.Queue.ToString
  commentId: M:Steeltoe.Messaging.RabbitMQ.Config.Queue.ToString
  id: ToString
  parent: Steeltoe.Messaging.RabbitMQ.Config.Queue
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: Queue.ToString()
  fullName: Steeltoe.Messaging.RabbitMQ.Config.Queue.ToString()
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Config/Queue.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: ToString
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Config/Queue.cs
    startLine: 86
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Config
  syntax:
    content: public override string ToString()
    return:
      type: System.String
    content.vb: Public Overrides Function ToString As String
  overridden: System.Object.ToString
  overload: Steeltoe.Messaging.RabbitMQ.Config.Queue.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: Steeltoe.Messaging.RabbitMQ.Config
  commentId: N:Steeltoe.Messaging.RabbitMQ.Config
  name: Steeltoe.Messaging.RabbitMQ.Config
  nameWithType: Steeltoe.Messaging.RabbitMQ.Config
  fullName: Steeltoe.Messaging.RabbitMQ.Config
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Steeltoe.Messaging.RabbitMQ.Config.AbstractDeclarable
  commentId: T:Steeltoe.Messaging.RabbitMQ.Config.AbstractDeclarable
  parent: Steeltoe.Messaging.RabbitMQ.Config
  name: AbstractDeclarable
  nameWithType: AbstractDeclarable
  fullName: Steeltoe.Messaging.RabbitMQ.Config.AbstractDeclarable
- uid: Steeltoe.Messaging.RabbitMQ.Config.IQueue
  commentId: T:Steeltoe.Messaging.RabbitMQ.Config.IQueue
  parent: Steeltoe.Messaging.RabbitMQ.Config
  name: IQueue
  nameWithType: IQueue
  fullName: Steeltoe.Messaging.RabbitMQ.Config.IQueue
- uid: Steeltoe.Messaging.RabbitMQ.Config.IDeclarable
  commentId: T:Steeltoe.Messaging.RabbitMQ.Config.IDeclarable
  parent: Steeltoe.Messaging.RabbitMQ.Config
  name: IDeclarable
  nameWithType: IDeclarable
  fullName: Steeltoe.Messaging.RabbitMQ.Config.IDeclarable
- uid: Steeltoe.Common.Services.IServiceNameAware
  commentId: T:Steeltoe.Common.Services.IServiceNameAware
  parent: Steeltoe.Common.Services
  name: IServiceNameAware
  nameWithType: IServiceNameAware
  fullName: Steeltoe.Common.Services.IServiceNameAware
- uid: System.ICloneable
  commentId: T:System.ICloneable
  parent: System
  isExternal: true
  name: ICloneable
  nameWithType: ICloneable
  fullName: System.ICloneable
- uid: Steeltoe.Messaging.RabbitMQ.Config.AbstractDeclarable._declaringAdmins
  commentId: F:Steeltoe.Messaging.RabbitMQ.Config.AbstractDeclarable._declaringAdmins
  parent: Steeltoe.Messaging.RabbitMQ.Config.AbstractDeclarable
  name: _declaringAdmins
  nameWithType: AbstractDeclarable._declaringAdmins
  fullName: Steeltoe.Messaging.RabbitMQ.Config.AbstractDeclarable._declaringAdmins
- uid: Steeltoe.Messaging.RabbitMQ.Config.AbstractDeclarable.ShouldDeclare
  commentId: P:Steeltoe.Messaging.RabbitMQ.Config.AbstractDeclarable.ShouldDeclare
  parent: Steeltoe.Messaging.RabbitMQ.Config.AbstractDeclarable
  name: ShouldDeclare
  nameWithType: AbstractDeclarable.ShouldDeclare
  fullName: Steeltoe.Messaging.RabbitMQ.Config.AbstractDeclarable.ShouldDeclare
- uid: Steeltoe.Messaging.RabbitMQ.Config.AbstractDeclarable.Arguments
  commentId: P:Steeltoe.Messaging.RabbitMQ.Config.AbstractDeclarable.Arguments
  parent: Steeltoe.Messaging.RabbitMQ.Config.AbstractDeclarable
  name: Arguments
  nameWithType: AbstractDeclarable.Arguments
  fullName: Steeltoe.Messaging.RabbitMQ.Config.AbstractDeclarable.Arguments
- uid: Steeltoe.Messaging.RabbitMQ.Config.AbstractDeclarable.DeclaringAdmins
  commentId: P:Steeltoe.Messaging.RabbitMQ.Config.AbstractDeclarable.DeclaringAdmins
  parent: Steeltoe.Messaging.RabbitMQ.Config.AbstractDeclarable
  name: DeclaringAdmins
  nameWithType: AbstractDeclarable.DeclaringAdmins
  fullName: Steeltoe.Messaging.RabbitMQ.Config.AbstractDeclarable.DeclaringAdmins
- uid: Steeltoe.Messaging.RabbitMQ.Config.AbstractDeclarable.IgnoreDeclarationExceptions
  commentId: P:Steeltoe.Messaging.RabbitMQ.Config.AbstractDeclarable.IgnoreDeclarationExceptions
  parent: Steeltoe.Messaging.RabbitMQ.Config.AbstractDeclarable
  name: IgnoreDeclarationExceptions
  nameWithType: AbstractDeclarable.IgnoreDeclarationExceptions
  fullName: Steeltoe.Messaging.RabbitMQ.Config.AbstractDeclarable.IgnoreDeclarationExceptions
- uid: Steeltoe.Messaging.RabbitMQ.Config.AbstractDeclarable.SetAdminsThatShouldDeclare(System.Object[])
  commentId: M:Steeltoe.Messaging.RabbitMQ.Config.AbstractDeclarable.SetAdminsThatShouldDeclare(System.Object[])
  parent: Steeltoe.Messaging.RabbitMQ.Config.AbstractDeclarable
  isExternal: true
  name: SetAdminsThatShouldDeclare(Object[])
  nameWithType: AbstractDeclarable.SetAdminsThatShouldDeclare(Object[])
  fullName: Steeltoe.Messaging.RabbitMQ.Config.AbstractDeclarable.SetAdminsThatShouldDeclare(System.Object[])
  nameWithType.vb: AbstractDeclarable.SetAdminsThatShouldDeclare(Object())
  fullName.vb: Steeltoe.Messaging.RabbitMQ.Config.AbstractDeclarable.SetAdminsThatShouldDeclare(System.Object())
  name.vb: SetAdminsThatShouldDeclare(Object())
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Config.AbstractDeclarable.SetAdminsThatShouldDeclare(System.Object[])
    name: SetAdminsThatShouldDeclare
    nameWithType: AbstractDeclarable.SetAdminsThatShouldDeclare
    fullName: Steeltoe.Messaging.RabbitMQ.Config.AbstractDeclarable.SetAdminsThatShouldDeclare
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Config.AbstractDeclarable.SetAdminsThatShouldDeclare(System.Object[])
    name: SetAdminsThatShouldDeclare
    nameWithType: AbstractDeclarable.SetAdminsThatShouldDeclare
    fullName: Steeltoe.Messaging.RabbitMQ.Config.AbstractDeclarable.SetAdminsThatShouldDeclare
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Config.AbstractDeclarable.AddArgument(System.String,System.Object)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Config.AbstractDeclarable.AddArgument(System.String,System.Object)
  parent: Steeltoe.Messaging.RabbitMQ.Config.AbstractDeclarable
  isExternal: true
  name: AddArgument(String, Object)
  nameWithType: AbstractDeclarable.AddArgument(String, Object)
  fullName: Steeltoe.Messaging.RabbitMQ.Config.AbstractDeclarable.AddArgument(System.String, System.Object)
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Config.AbstractDeclarable.AddArgument(System.String,System.Object)
    name: AddArgument
    nameWithType: AbstractDeclarable.AddArgument
    fullName: Steeltoe.Messaging.RabbitMQ.Config.AbstractDeclarable.AddArgument
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Config.AbstractDeclarable.AddArgument(System.String,System.Object)
    name: AddArgument
    nameWithType: AbstractDeclarable.AddArgument
    fullName: Steeltoe.Messaging.RabbitMQ.Config.AbstractDeclarable.AddArgument
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Config.AbstractDeclarable.RemoveArgument(System.String)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Config.AbstractDeclarable.RemoveArgument(System.String)
  parent: Steeltoe.Messaging.RabbitMQ.Config.AbstractDeclarable
  isExternal: true
  name: RemoveArgument(String)
  nameWithType: AbstractDeclarable.RemoveArgument(String)
  fullName: Steeltoe.Messaging.RabbitMQ.Config.AbstractDeclarable.RemoveArgument(System.String)
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Config.AbstractDeclarable.RemoveArgument(System.String)
    name: RemoveArgument
    nameWithType: AbstractDeclarable.RemoveArgument
    fullName: Steeltoe.Messaging.RabbitMQ.Config.AbstractDeclarable.RemoveArgument
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Config.AbstractDeclarable.RemoveArgument(System.String)
    name: RemoveArgument
    nameWithType: AbstractDeclarable.RemoveArgument
    fullName: Steeltoe.Messaging.RabbitMQ.Config.AbstractDeclarable.RemoveArgument
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Steeltoe.Common.Services
  commentId: N:Steeltoe.Common.Services
  name: Steeltoe.Common.Services
  nameWithType: Steeltoe.Common.Services
  fullName: Steeltoe.Common.Services
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Steeltoe.Messaging.RabbitMQ.Config.Queue.#ctor*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Config.Queue.#ctor
  name: Queue
  nameWithType: Queue.Queue
  fullName: Steeltoe.Messaging.RabbitMQ.Config.Queue.Queue
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Collections.Generic.Dictionary{System.String,System.Object}
  commentId: T:System.Collections.Generic.Dictionary{System.String,System.Object}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  name: Dictionary<String, Object>
  nameWithType: Dictionary<String, Object>
  fullName: System.Collections.Generic.Dictionary<System.String, System.Object>
  nameWithType.vb: Dictionary(Of String, Object)
  fullName.vb: System.Collections.Generic.Dictionary(Of System.String, System.Object)
  name.vb: Dictionary(Of String, Object)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Dictionary`2
  commentId: T:System.Collections.Generic.Dictionary`2
  isExternal: true
  name: Dictionary<TKey, TValue>
  nameWithType: Dictionary<TKey, TValue>
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>
  nameWithType.vb: Dictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue)
  name.vb: Dictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Steeltoe.Messaging.RabbitMQ.Config.Queue.ServiceName*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Config.Queue.ServiceName
  name: ServiceName
  nameWithType: Queue.ServiceName
  fullName: Steeltoe.Messaging.RabbitMQ.Config.Queue.ServiceName
- uid: Steeltoe.Common.Services.IServiceNameAware.ServiceName
  commentId: P:Steeltoe.Common.Services.IServiceNameAware.ServiceName
  parent: Steeltoe.Common.Services.IServiceNameAware
  name: ServiceName
  nameWithType: IServiceNameAware.ServiceName
  fullName: Steeltoe.Common.Services.IServiceNameAware.ServiceName
- uid: Steeltoe.Messaging.RabbitMQ.Config.Queue.QueueName*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Config.Queue.QueueName
  name: QueueName
  nameWithType: Queue.QueueName
  fullName: Steeltoe.Messaging.RabbitMQ.Config.Queue.QueueName
- uid: Steeltoe.Messaging.RabbitMQ.Config.IQueue.QueueName
  commentId: P:Steeltoe.Messaging.RabbitMQ.Config.IQueue.QueueName
  parent: Steeltoe.Messaging.RabbitMQ.Config.IQueue
  name: QueueName
  nameWithType: IQueue.QueueName
  fullName: Steeltoe.Messaging.RabbitMQ.Config.IQueue.QueueName
- uid: Steeltoe.Messaging.RabbitMQ.Config.Queue.ActualName*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Config.Queue.ActualName
  name: ActualName
  nameWithType: Queue.ActualName
  fullName: Steeltoe.Messaging.RabbitMQ.Config.Queue.ActualName
- uid: Steeltoe.Messaging.RabbitMQ.Config.IQueue.ActualName
  commentId: P:Steeltoe.Messaging.RabbitMQ.Config.IQueue.ActualName
  parent: Steeltoe.Messaging.RabbitMQ.Config.IQueue
  name: ActualName
  nameWithType: IQueue.ActualName
  fullName: Steeltoe.Messaging.RabbitMQ.Config.IQueue.ActualName
- uid: Steeltoe.Messaging.RabbitMQ.Config.Queue.IsDurable*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Config.Queue.IsDurable
  name: IsDurable
  nameWithType: Queue.IsDurable
  fullName: Steeltoe.Messaging.RabbitMQ.Config.Queue.IsDurable
- uid: Steeltoe.Messaging.RabbitMQ.Config.IQueue.IsDurable
  commentId: P:Steeltoe.Messaging.RabbitMQ.Config.IQueue.IsDurable
  parent: Steeltoe.Messaging.RabbitMQ.Config.IQueue
  name: IsDurable
  nameWithType: IQueue.IsDurable
  fullName: Steeltoe.Messaging.RabbitMQ.Config.IQueue.IsDurable
- uid: Steeltoe.Messaging.RabbitMQ.Config.Queue.IsExclusive*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Config.Queue.IsExclusive
  name: IsExclusive
  nameWithType: Queue.IsExclusive
  fullName: Steeltoe.Messaging.RabbitMQ.Config.Queue.IsExclusive
- uid: Steeltoe.Messaging.RabbitMQ.Config.IQueue.IsExclusive
  commentId: P:Steeltoe.Messaging.RabbitMQ.Config.IQueue.IsExclusive
  parent: Steeltoe.Messaging.RabbitMQ.Config.IQueue
  name: IsExclusive
  nameWithType: IQueue.IsExclusive
  fullName: Steeltoe.Messaging.RabbitMQ.Config.IQueue.IsExclusive
- uid: Steeltoe.Messaging.RabbitMQ.Config.Queue.IsAutoDelete*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Config.Queue.IsAutoDelete
  name: IsAutoDelete
  nameWithType: Queue.IsAutoDelete
  fullName: Steeltoe.Messaging.RabbitMQ.Config.Queue.IsAutoDelete
- uid: Steeltoe.Messaging.RabbitMQ.Config.IQueue.IsAutoDelete
  commentId: P:Steeltoe.Messaging.RabbitMQ.Config.IQueue.IsAutoDelete
  parent: Steeltoe.Messaging.RabbitMQ.Config.IQueue
  name: IsAutoDelete
  nameWithType: IQueue.IsAutoDelete
  fullName: Steeltoe.Messaging.RabbitMQ.Config.IQueue.IsAutoDelete
- uid: Steeltoe.Messaging.RabbitMQ.Config.Queue.MasterLocator*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Config.Queue.MasterLocator
  name: MasterLocator
  nameWithType: Queue.MasterLocator
  fullName: Steeltoe.Messaging.RabbitMQ.Config.Queue.MasterLocator
- uid: Steeltoe.Messaging.RabbitMQ.Config.IQueue.MasterLocator
  commentId: P:Steeltoe.Messaging.RabbitMQ.Config.IQueue.MasterLocator
  parent: Steeltoe.Messaging.RabbitMQ.Config.IQueue
  name: MasterLocator
  nameWithType: IQueue.MasterLocator
  fullName: Steeltoe.Messaging.RabbitMQ.Config.IQueue.MasterLocator
- uid: Steeltoe.Messaging.RabbitMQ.Config.Queue.Clone*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Config.Queue.Clone
  name: Clone
  nameWithType: Queue.Clone
  fullName: Steeltoe.Messaging.RabbitMQ.Config.Queue.Clone
- uid: Steeltoe.Messaging.RabbitMQ.Config.IQueue.Clone
  commentId: M:Steeltoe.Messaging.RabbitMQ.Config.IQueue.Clone
  parent: Steeltoe.Messaging.RabbitMQ.Config.IQueue
  name: Clone()
  nameWithType: IQueue.Clone()
  fullName: Steeltoe.Messaging.RabbitMQ.Config.IQueue.Clone()
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Config.IQueue.Clone
    name: Clone
    nameWithType: IQueue.Clone
    fullName: Steeltoe.Messaging.RabbitMQ.Config.IQueue.Clone
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Config.IQueue.Clone
    name: Clone
    nameWithType: IQueue.Clone
    fullName: Steeltoe.Messaging.RabbitMQ.Config.IQueue.Clone
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ICloneable.Clone
  commentId: M:System.ICloneable.Clone
  parent: System.ICloneable
  isExternal: true
  name: Clone()
  nameWithType: ICloneable.Clone()
  fullName: System.ICloneable.Clone()
  spec.csharp:
  - uid: System.ICloneable.Clone
    name: Clone
    nameWithType: ICloneable.Clone
    fullName: System.ICloneable.Clone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ICloneable.Clone
    name: Clone
    nameWithType: ICloneable.Clone
    fullName: System.ICloneable.Clone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Config.Queue.ToString*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Config.Queue.ToString
  name: ToString
  nameWithType: Queue.ToString
  fullName: Steeltoe.Messaging.RabbitMQ.Config.Queue.ToString
