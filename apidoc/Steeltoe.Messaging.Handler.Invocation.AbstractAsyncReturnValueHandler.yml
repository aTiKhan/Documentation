### YamlMime:ManagedReference
items:
- uid: Steeltoe.Messaging.Handler.Invocation.AbstractAsyncReturnValueHandler
  commentId: T:Steeltoe.Messaging.Handler.Invocation.AbstractAsyncReturnValueHandler
  id: AbstractAsyncReturnValueHandler
  parent: Steeltoe.Messaging.Handler.Invocation
  children:
  - Steeltoe.Messaging.Handler.Invocation.AbstractAsyncReturnValueHandler.HandleReturnValue(System.Object,System.Reflection.ParameterInfo,Steeltoe.Messaging.IMessage)
  - Steeltoe.Messaging.Handler.Invocation.AbstractAsyncReturnValueHandler.IsAsyncReturnValue(System.Object,System.Reflection.ParameterInfo)
  - Steeltoe.Messaging.Handler.Invocation.AbstractAsyncReturnValueHandler.SupportsReturnType(System.Reflection.ParameterInfo)
  langs:
  - csharp
  - vb
  name: AbstractAsyncReturnValueHandler
  nameWithType: AbstractAsyncReturnValueHandler
  fullName: Steeltoe.Messaging.Handler.Invocation.AbstractAsyncReturnValueHandler
  type: Class
  source:
    remote:
      path: src/Messaging/src/MessagingBase/Handler/Invocation/AbstractAsyncReturnValueHandler.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: AbstractAsyncReturnValueHandler
    path: ../Steeltoe/src/Messaging/src/MessagingBase/Handler/Invocation/AbstractAsyncReturnValueHandler.cs
    startLine: 9
  assemblies:
  - Steeltoe.Messaging.MessagingBase
  namespace: Steeltoe.Messaging.Handler.Invocation
  syntax:
    content: 'public abstract class AbstractAsyncReturnValueHandler : IAsyncHandlerMethodReturnValueHandler, IHandlerMethodReturnValueHandler'
    content.vb: >-
      Public MustInherit Class AbstractAsyncReturnValueHandler

          Implements IAsyncHandlerMethodReturnValueHandler, IHandlerMethodReturnValueHandler
  inheritance:
  - System.Object
  implements:
  - Steeltoe.Messaging.Handler.Invocation.IAsyncHandlerMethodReturnValueHandler
  - Steeltoe.Messaging.Handler.Invocation.IHandlerMethodReturnValueHandler
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: Steeltoe.Messaging.Handler.Invocation.AbstractAsyncReturnValueHandler.HandleReturnValue(System.Object,System.Reflection.ParameterInfo,Steeltoe.Messaging.IMessage)
  commentId: M:Steeltoe.Messaging.Handler.Invocation.AbstractAsyncReturnValueHandler.HandleReturnValue(System.Object,System.Reflection.ParameterInfo,Steeltoe.Messaging.IMessage)
  id: HandleReturnValue(System.Object,System.Reflection.ParameterInfo,Steeltoe.Messaging.IMessage)
  parent: Steeltoe.Messaging.Handler.Invocation.AbstractAsyncReturnValueHandler
  langs:
  - csharp
  - vb
  name: HandleReturnValue(Object, ParameterInfo, IMessage)
  nameWithType: AbstractAsyncReturnValueHandler.HandleReturnValue(Object, ParameterInfo, IMessage)
  fullName: Steeltoe.Messaging.Handler.Invocation.AbstractAsyncReturnValueHandler.HandleReturnValue(System.Object, System.Reflection.ParameterInfo, Steeltoe.Messaging.IMessage)
  type: Method
  source:
    remote:
      path: src/Messaging/src/MessagingBase/Handler/Invocation/AbstractAsyncReturnValueHandler.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: HandleReturnValue
    path: ../Steeltoe/src/Messaging/src/MessagingBase/Handler/Invocation/AbstractAsyncReturnValueHandler.cs
    startLine: 11
  assemblies:
  - Steeltoe.Messaging.MessagingBase
  namespace: Steeltoe.Messaging.Handler.Invocation
  syntax:
    content: public void HandleReturnValue(object returnValue, ParameterInfo returnType, IMessage message)
    parameters:
    - id: returnValue
      type: System.Object
    - id: returnType
      type: System.Reflection.ParameterInfo
    - id: message
      type: Steeltoe.Messaging.IMessage
    content.vb: Public Sub HandleReturnValue(returnValue As Object, returnType As ParameterInfo, message As IMessage)
  overload: Steeltoe.Messaging.Handler.Invocation.AbstractAsyncReturnValueHandler.HandleReturnValue*
  implements:
  - Steeltoe.Messaging.Handler.Invocation.IHandlerMethodReturnValueHandler.HandleReturnValue(System.Object,System.Reflection.ParameterInfo,Steeltoe.Messaging.IMessage)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Steeltoe.Messaging.Handler.Invocation.AbstractAsyncReturnValueHandler.IsAsyncReturnValue(System.Object,System.Reflection.ParameterInfo)
  commentId: M:Steeltoe.Messaging.Handler.Invocation.AbstractAsyncReturnValueHandler.IsAsyncReturnValue(System.Object,System.Reflection.ParameterInfo)
  id: IsAsyncReturnValue(System.Object,System.Reflection.ParameterInfo)
  parent: Steeltoe.Messaging.Handler.Invocation.AbstractAsyncReturnValueHandler
  langs:
  - csharp
  - vb
  name: IsAsyncReturnValue(Object, ParameterInfo)
  nameWithType: AbstractAsyncReturnValueHandler.IsAsyncReturnValue(Object, ParameterInfo)
  fullName: Steeltoe.Messaging.Handler.Invocation.AbstractAsyncReturnValueHandler.IsAsyncReturnValue(System.Object, System.Reflection.ParameterInfo)
  type: Method
  source:
    remote:
      path: src/Messaging/src/MessagingBase/Handler/Invocation/AbstractAsyncReturnValueHandler.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: IsAsyncReturnValue
    path: ../Steeltoe/src/Messaging/src/MessagingBase/Handler/Invocation/AbstractAsyncReturnValueHandler.cs
    startLine: 16
  assemblies:
  - Steeltoe.Messaging.MessagingBase
  namespace: Steeltoe.Messaging.Handler.Invocation
  syntax:
    content: public virtual bool IsAsyncReturnValue(object returnValue, ParameterInfo returnType)
    parameters:
    - id: returnValue
      type: System.Object
    - id: returnType
      type: System.Reflection.ParameterInfo
    return:
      type: System.Boolean
    content.vb: Public Overridable Function IsAsyncReturnValue(returnValue As Object, returnType As ParameterInfo) As Boolean
  overload: Steeltoe.Messaging.Handler.Invocation.AbstractAsyncReturnValueHandler.IsAsyncReturnValue*
  implements:
  - Steeltoe.Messaging.Handler.Invocation.IAsyncHandlerMethodReturnValueHandler.IsAsyncReturnValue(System.Object,System.Reflection.ParameterInfo)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Steeltoe.Messaging.Handler.Invocation.AbstractAsyncReturnValueHandler.SupportsReturnType(System.Reflection.ParameterInfo)
  commentId: M:Steeltoe.Messaging.Handler.Invocation.AbstractAsyncReturnValueHandler.SupportsReturnType(System.Reflection.ParameterInfo)
  id: SupportsReturnType(System.Reflection.ParameterInfo)
  parent: Steeltoe.Messaging.Handler.Invocation.AbstractAsyncReturnValueHandler
  langs:
  - csharp
  - vb
  name: SupportsReturnType(ParameterInfo)
  nameWithType: AbstractAsyncReturnValueHandler.SupportsReturnType(ParameterInfo)
  fullName: Steeltoe.Messaging.Handler.Invocation.AbstractAsyncReturnValueHandler.SupportsReturnType(System.Reflection.ParameterInfo)
  type: Method
  source:
    remote:
      path: src/Messaging/src/MessagingBase/Handler/Invocation/AbstractAsyncReturnValueHandler.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: SupportsReturnType
    path: ../Steeltoe/src/Messaging/src/MessagingBase/Handler/Invocation/AbstractAsyncReturnValueHandler.cs
    startLine: 21
  assemblies:
  - Steeltoe.Messaging.MessagingBase
  namespace: Steeltoe.Messaging.Handler.Invocation
  syntax:
    content: public abstract bool SupportsReturnType(ParameterInfo returnType)
    parameters:
    - id: returnType
      type: System.Reflection.ParameterInfo
    return:
      type: System.Boolean
    content.vb: Public MustOverride Function SupportsReturnType(returnType As ParameterInfo) As Boolean
  overload: Steeltoe.Messaging.Handler.Invocation.AbstractAsyncReturnValueHandler.SupportsReturnType*
  implements:
  - Steeltoe.Messaging.Handler.Invocation.IHandlerMethodReturnValueHandler.SupportsReturnType(System.Reflection.ParameterInfo)
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
references:
- uid: Steeltoe.Messaging.Handler.Invocation
  commentId: N:Steeltoe.Messaging.Handler.Invocation
  name: Steeltoe.Messaging.Handler.Invocation
  nameWithType: Steeltoe.Messaging.Handler.Invocation
  fullName: Steeltoe.Messaging.Handler.Invocation
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Steeltoe.Messaging.Handler.Invocation.IAsyncHandlerMethodReturnValueHandler
  commentId: T:Steeltoe.Messaging.Handler.Invocation.IAsyncHandlerMethodReturnValueHandler
  parent: Steeltoe.Messaging.Handler.Invocation
  name: IAsyncHandlerMethodReturnValueHandler
  nameWithType: IAsyncHandlerMethodReturnValueHandler
  fullName: Steeltoe.Messaging.Handler.Invocation.IAsyncHandlerMethodReturnValueHandler
- uid: Steeltoe.Messaging.Handler.Invocation.IHandlerMethodReturnValueHandler
  commentId: T:Steeltoe.Messaging.Handler.Invocation.IHandlerMethodReturnValueHandler
  parent: Steeltoe.Messaging.Handler.Invocation
  name: IHandlerMethodReturnValueHandler
  nameWithType: IHandlerMethodReturnValueHandler
  fullName: Steeltoe.Messaging.Handler.Invocation.IHandlerMethodReturnValueHandler
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Steeltoe.Messaging.Handler.Invocation.AbstractAsyncReturnValueHandler.HandleReturnValue*
  commentId: Overload:Steeltoe.Messaging.Handler.Invocation.AbstractAsyncReturnValueHandler.HandleReturnValue
  name: HandleReturnValue
  nameWithType: AbstractAsyncReturnValueHandler.HandleReturnValue
  fullName: Steeltoe.Messaging.Handler.Invocation.AbstractAsyncReturnValueHandler.HandleReturnValue
- uid: Steeltoe.Messaging.Handler.Invocation.IHandlerMethodReturnValueHandler.HandleReturnValue(System.Object,System.Reflection.ParameterInfo,Steeltoe.Messaging.IMessage)
  commentId: M:Steeltoe.Messaging.Handler.Invocation.IHandlerMethodReturnValueHandler.HandleReturnValue(System.Object,System.Reflection.ParameterInfo,Steeltoe.Messaging.IMessage)
  parent: Steeltoe.Messaging.Handler.Invocation.IHandlerMethodReturnValueHandler
  isExternal: true
  name: HandleReturnValue(Object, ParameterInfo, IMessage)
  nameWithType: IHandlerMethodReturnValueHandler.HandleReturnValue(Object, ParameterInfo, IMessage)
  fullName: Steeltoe.Messaging.Handler.Invocation.IHandlerMethodReturnValueHandler.HandleReturnValue(System.Object, System.Reflection.ParameterInfo, Steeltoe.Messaging.IMessage)
  spec.csharp:
  - uid: Steeltoe.Messaging.Handler.Invocation.IHandlerMethodReturnValueHandler.HandleReturnValue(System.Object,System.Reflection.ParameterInfo,Steeltoe.Messaging.IMessage)
    name: HandleReturnValue
    nameWithType: IHandlerMethodReturnValueHandler.HandleReturnValue
    fullName: Steeltoe.Messaging.Handler.Invocation.IHandlerMethodReturnValueHandler.HandleReturnValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Reflection.ParameterInfo
    name: ParameterInfo
    nameWithType: ParameterInfo
    fullName: System.Reflection.ParameterInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Handler.Invocation.IHandlerMethodReturnValueHandler.HandleReturnValue(System.Object,System.Reflection.ParameterInfo,Steeltoe.Messaging.IMessage)
    name: HandleReturnValue
    nameWithType: IHandlerMethodReturnValueHandler.HandleReturnValue
    fullName: Steeltoe.Messaging.Handler.Invocation.IHandlerMethodReturnValueHandler.HandleReturnValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Reflection.ParameterInfo
    name: ParameterInfo
    nameWithType: ParameterInfo
    fullName: System.Reflection.ParameterInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Reflection.ParameterInfo
  commentId: T:System.Reflection.ParameterInfo
  parent: System.Reflection
  isExternal: true
  name: ParameterInfo
  nameWithType: ParameterInfo
  fullName: System.Reflection.ParameterInfo
- uid: Steeltoe.Messaging.IMessage
  commentId: T:Steeltoe.Messaging.IMessage
  parent: Steeltoe.Messaging
  name: IMessage
  nameWithType: IMessage
  fullName: Steeltoe.Messaging.IMessage
- uid: System.Reflection
  commentId: N:System.Reflection
  isExternal: true
  name: System.Reflection
  nameWithType: System.Reflection
  fullName: System.Reflection
- uid: Steeltoe.Messaging
  commentId: N:Steeltoe.Messaging
  name: Steeltoe.Messaging
  nameWithType: Steeltoe.Messaging
  fullName: Steeltoe.Messaging
- uid: Steeltoe.Messaging.Handler.Invocation.AbstractAsyncReturnValueHandler.IsAsyncReturnValue*
  commentId: Overload:Steeltoe.Messaging.Handler.Invocation.AbstractAsyncReturnValueHandler.IsAsyncReturnValue
  name: IsAsyncReturnValue
  nameWithType: AbstractAsyncReturnValueHandler.IsAsyncReturnValue
  fullName: Steeltoe.Messaging.Handler.Invocation.AbstractAsyncReturnValueHandler.IsAsyncReturnValue
- uid: Steeltoe.Messaging.Handler.Invocation.IAsyncHandlerMethodReturnValueHandler.IsAsyncReturnValue(System.Object,System.Reflection.ParameterInfo)
  commentId: M:Steeltoe.Messaging.Handler.Invocation.IAsyncHandlerMethodReturnValueHandler.IsAsyncReturnValue(System.Object,System.Reflection.ParameterInfo)
  parent: Steeltoe.Messaging.Handler.Invocation.IAsyncHandlerMethodReturnValueHandler
  isExternal: true
  name: IsAsyncReturnValue(Object, ParameterInfo)
  nameWithType: IAsyncHandlerMethodReturnValueHandler.IsAsyncReturnValue(Object, ParameterInfo)
  fullName: Steeltoe.Messaging.Handler.Invocation.IAsyncHandlerMethodReturnValueHandler.IsAsyncReturnValue(System.Object, System.Reflection.ParameterInfo)
  spec.csharp:
  - uid: Steeltoe.Messaging.Handler.Invocation.IAsyncHandlerMethodReturnValueHandler.IsAsyncReturnValue(System.Object,System.Reflection.ParameterInfo)
    name: IsAsyncReturnValue
    nameWithType: IAsyncHandlerMethodReturnValueHandler.IsAsyncReturnValue
    fullName: Steeltoe.Messaging.Handler.Invocation.IAsyncHandlerMethodReturnValueHandler.IsAsyncReturnValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Reflection.ParameterInfo
    name: ParameterInfo
    nameWithType: ParameterInfo
    fullName: System.Reflection.ParameterInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Handler.Invocation.IAsyncHandlerMethodReturnValueHandler.IsAsyncReturnValue(System.Object,System.Reflection.ParameterInfo)
    name: IsAsyncReturnValue
    nameWithType: IAsyncHandlerMethodReturnValueHandler.IsAsyncReturnValue
    fullName: Steeltoe.Messaging.Handler.Invocation.IAsyncHandlerMethodReturnValueHandler.IsAsyncReturnValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Reflection.ParameterInfo
    name: ParameterInfo
    nameWithType: ParameterInfo
    fullName: System.Reflection.ParameterInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Steeltoe.Messaging.Handler.Invocation.AbstractAsyncReturnValueHandler.SupportsReturnType*
  commentId: Overload:Steeltoe.Messaging.Handler.Invocation.AbstractAsyncReturnValueHandler.SupportsReturnType
  name: SupportsReturnType
  nameWithType: AbstractAsyncReturnValueHandler.SupportsReturnType
  fullName: Steeltoe.Messaging.Handler.Invocation.AbstractAsyncReturnValueHandler.SupportsReturnType
- uid: Steeltoe.Messaging.Handler.Invocation.IHandlerMethodReturnValueHandler.SupportsReturnType(System.Reflection.ParameterInfo)
  commentId: M:Steeltoe.Messaging.Handler.Invocation.IHandlerMethodReturnValueHandler.SupportsReturnType(System.Reflection.ParameterInfo)
  parent: Steeltoe.Messaging.Handler.Invocation.IHandlerMethodReturnValueHandler
  isExternal: true
  name: SupportsReturnType(ParameterInfo)
  nameWithType: IHandlerMethodReturnValueHandler.SupportsReturnType(ParameterInfo)
  fullName: Steeltoe.Messaging.Handler.Invocation.IHandlerMethodReturnValueHandler.SupportsReturnType(System.Reflection.ParameterInfo)
  spec.csharp:
  - uid: Steeltoe.Messaging.Handler.Invocation.IHandlerMethodReturnValueHandler.SupportsReturnType(System.Reflection.ParameterInfo)
    name: SupportsReturnType
    nameWithType: IHandlerMethodReturnValueHandler.SupportsReturnType
    fullName: Steeltoe.Messaging.Handler.Invocation.IHandlerMethodReturnValueHandler.SupportsReturnType
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Reflection.ParameterInfo
    name: ParameterInfo
    nameWithType: ParameterInfo
    fullName: System.Reflection.ParameterInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Handler.Invocation.IHandlerMethodReturnValueHandler.SupportsReturnType(System.Reflection.ParameterInfo)
    name: SupportsReturnType
    nameWithType: IHandlerMethodReturnValueHandler.SupportsReturnType
    fullName: Steeltoe.Messaging.Handler.Invocation.IHandlerMethodReturnValueHandler.SupportsReturnType
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Reflection.ParameterInfo
    name: ParameterInfo
    nameWithType: ParameterInfo
    fullName: System.Reflection.ParameterInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
