### YamlMime:ManagedReference
items:
- uid: Steeltoe.Integration.Handler.IHeaderPropagation
  commentId: T:Steeltoe.Integration.Handler.IHeaderPropagation
  id: IHeaderPropagation
  parent: Steeltoe.Integration.Handler
  children:
  - Steeltoe.Integration.Handler.IHeaderPropagation.AddNotPropagatedHeaders(System.String[])
  - Steeltoe.Integration.Handler.IHeaderPropagation.NotPropagatedHeaders
  langs:
  - csharp
  - vb
  name: IHeaderPropagation
  nameWithType: IHeaderPropagation
  fullName: Steeltoe.Integration.Handler.IHeaderPropagation
  type: Interface
  source:
    remote:
      path: src/Integration/src/Abstractions/Handler/IHeaderPropagation.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: IHeaderPropagation
    path: ../Steeltoe/src/Integration/src/Abstractions/Handler/IHeaderPropagation.cs
    startLine: 12
  assemblies:
  - Steeltoe.Integration.Abstractions
  namespace: Steeltoe.Integration.Handler
  summary: "\nMessageHandlers implementing this interface can propagate headers from\nan input message to an output message.\n"
  example: []
  syntax:
    content: public interface IHeaderPropagation
    content.vb: Public Interface IHeaderPropagation
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Steeltoe.Integration.Handler.IHeaderPropagation.NotPropagatedHeaders
  commentId: P:Steeltoe.Integration.Handler.IHeaderPropagation.NotPropagatedHeaders
  id: NotPropagatedHeaders
  parent: Steeltoe.Integration.Handler.IHeaderPropagation
  langs:
  - csharp
  - vb
  name: NotPropagatedHeaders
  nameWithType: IHeaderPropagation.NotPropagatedHeaders
  fullName: Steeltoe.Integration.Handler.IHeaderPropagation.NotPropagatedHeaders
  type: Property
  source:
    remote:
      path: src/Integration/src/Abstractions/Handler/IHeaderPropagation.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: NotPropagatedHeaders
    path: ../Steeltoe/src/Integration/src/Abstractions/Handler/IHeaderPropagation.cs
    startLine: 18
  assemblies:
  - Steeltoe.Integration.Abstractions
  namespace: Steeltoe.Integration.Handler
  summary: "\nGets or sets the headers that should not be copied from inbound message if\nhandler is configured to copy headers\n"
  example: []
  syntax:
    content: IList<string> NotPropagatedHeaders { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.IList{System.String}
    content.vb: Property NotPropagatedHeaders As IList(Of String)
  overload: Steeltoe.Integration.Handler.IHeaderPropagation.NotPropagatedHeaders*
  modifiers.csharp:
  - get
  - set
- uid: Steeltoe.Integration.Handler.IHeaderPropagation.AddNotPropagatedHeaders(System.String[])
  commentId: M:Steeltoe.Integration.Handler.IHeaderPropagation.AddNotPropagatedHeaders(System.String[])
  id: AddNotPropagatedHeaders(System.String[])
  parent: Steeltoe.Integration.Handler.IHeaderPropagation
  langs:
  - csharp
  - vb
  name: AddNotPropagatedHeaders(String[])
  nameWithType: IHeaderPropagation.AddNotPropagatedHeaders(String[])
  fullName: Steeltoe.Integration.Handler.IHeaderPropagation.AddNotPropagatedHeaders(System.String[])
  type: Method
  source:
    remote:
      path: src/Integration/src/Abstractions/Handler/IHeaderPropagation.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: AddNotPropagatedHeaders
    path: ../Steeltoe/src/Integration/src/Abstractions/Handler/IHeaderPropagation.cs
    startLine: 25
  assemblies:
  - Steeltoe.Integration.Abstractions
  namespace: Steeltoe.Integration.Handler
  summary: "\nAdd headers that will not be copied from the inbound message if\nhandler is configured to copy headers\n"
  example: []
  syntax:
    content: void AddNotPropagatedHeaders(params string[] headers)
    parameters:
    - id: headers
      type: System.String[]
      description: the headers to not copy
    content.vb: Sub AddNotPropagatedHeaders(ParamArray headers As String())
  overload: Steeltoe.Integration.Handler.IHeaderPropagation.AddNotPropagatedHeaders*
  nameWithType.vb: IHeaderPropagation.AddNotPropagatedHeaders(String())
  fullName.vb: Steeltoe.Integration.Handler.IHeaderPropagation.AddNotPropagatedHeaders(System.String())
  name.vb: AddNotPropagatedHeaders(String())
references:
- uid: Steeltoe.Integration.Handler
  commentId: N:Steeltoe.Integration.Handler
  name: Steeltoe.Integration.Handler
  nameWithType: Steeltoe.Integration.Handler
  fullName: Steeltoe.Integration.Handler
- uid: Steeltoe.Integration.Handler.IHeaderPropagation.NotPropagatedHeaders*
  commentId: Overload:Steeltoe.Integration.Handler.IHeaderPropagation.NotPropagatedHeaders
  name: NotPropagatedHeaders
  nameWithType: IHeaderPropagation.NotPropagatedHeaders
  fullName: Steeltoe.Integration.Handler.IHeaderPropagation.NotPropagatedHeaders
- uid: System.Collections.Generic.IList{System.String}
  commentId: T:System.Collections.Generic.IList{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<String>
  nameWithType: IList<String>
  fullName: System.Collections.Generic.IList<System.String>
  nameWithType.vb: IList(Of String)
  fullName.vb: System.Collections.Generic.IList(Of System.String)
  name.vb: IList(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullName.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Steeltoe.Integration.Handler.IHeaderPropagation.AddNotPropagatedHeaders*
  commentId: Overload:Steeltoe.Integration.Handler.IHeaderPropagation.AddNotPropagatedHeaders
  name: AddNotPropagatedHeaders
  nameWithType: IHeaderPropagation.AddNotPropagatedHeaders
  fullName: Steeltoe.Integration.Handler.IHeaderPropagation.AddNotPropagatedHeaders
- uid: System.String[]
  isExternal: true
  name: String[]
  nameWithType: String[]
  fullName: System.String[]
  nameWithType.vb: String()
  fullName.vb: System.String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
