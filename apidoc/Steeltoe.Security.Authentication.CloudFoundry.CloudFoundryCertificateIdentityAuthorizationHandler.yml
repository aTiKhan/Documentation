### YamlMime:ManagedReference
items:
- uid: Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryCertificateIdentityAuthorizationHandler
  commentId: T:Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryCertificateIdentityAuthorizationHandler
  id: CloudFoundryCertificateIdentityAuthorizationHandler
  parent: Steeltoe.Security.Authentication.CloudFoundry
  children:
  - Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryCertificateIdentityAuthorizationHandler.#ctor(Microsoft.Extensions.Options.IOptionsMonitor{Steeltoe.Common.Options.CertificateOptions},Microsoft.Extensions.Logging.ILogger{Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryCertificateIdentityAuthorizationHandler})
  - Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryCertificateIdentityAuthorizationHandler.HandleAsync(Microsoft.AspNetCore.Authorization.AuthorizationHandlerContext)
  langs:
  - csharp
  - vb
  name: CloudFoundryCertificateIdentityAuthorizationHandler
  nameWithType: CloudFoundryCertificateIdentityAuthorizationHandler
  fullName: Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryCertificateIdentityAuthorizationHandler
  type: Class
  source:
    remote:
      path: src/Security/src/Authentication.CloudFoundryCore/CloudFoundryCertificateIdentityAuthorizationHandler.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: CloudFoundryCertificateIdentityAuthorizationHandler
    path: ../Steeltoe/src/Security/src/Authentication.CloudFoundryCore/CloudFoundryCertificateIdentityAuthorizationHandler.cs
    startLine: 15
  assemblies:
  - Steeltoe.Security.Authentication.CloudFoundryCore
  namespace: Steeltoe.Security.Authentication.CloudFoundry
  syntax:
    content: 'public class CloudFoundryCertificateIdentityAuthorizationHandler : IAuthorizationHandler'
    content.vb: >-
      Public Class CloudFoundryCertificateIdentityAuthorizationHandler

          Implements IAuthorizationHandler
  inheritance:
  - System.Object
  implements:
  - Microsoft.AspNetCore.Authorization.IAuthorizationHandler
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryCertificateIdentityAuthorizationHandler.#ctor(Microsoft.Extensions.Options.IOptionsMonitor{Steeltoe.Common.Options.CertificateOptions},Microsoft.Extensions.Logging.ILogger{Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryCertificateIdentityAuthorizationHandler})
  commentId: M:Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryCertificateIdentityAuthorizationHandler.#ctor(Microsoft.Extensions.Options.IOptionsMonitor{Steeltoe.Common.Options.CertificateOptions},Microsoft.Extensions.Logging.ILogger{Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryCertificateIdentityAuthorizationHandler})
  id: '#ctor(Microsoft.Extensions.Options.IOptionsMonitor{Steeltoe.Common.Options.CertificateOptions},Microsoft.Extensions.Logging.ILogger{Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryCertificateIdentityAuthorizationHandler})'
  parent: Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryCertificateIdentityAuthorizationHandler
  langs:
  - csharp
  - vb
  name: CloudFoundryCertificateIdentityAuthorizationHandler(IOptionsMonitor<CertificateOptions>, ILogger<CloudFoundryCertificateIdentityAuthorizationHandler>)
  nameWithType: CloudFoundryCertificateIdentityAuthorizationHandler.CloudFoundryCertificateIdentityAuthorizationHandler(IOptionsMonitor<CertificateOptions>, ILogger<CloudFoundryCertificateIdentityAuthorizationHandler>)
  fullName: Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryCertificateIdentityAuthorizationHandler.CloudFoundryCertificateIdentityAuthorizationHandler(Microsoft.Extensions.Options.IOptionsMonitor<Steeltoe.Common.Options.CertificateOptions>, Microsoft.Extensions.Logging.ILogger<Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryCertificateIdentityAuthorizationHandler>)
  type: Constructor
  source:
    remote:
      path: src/Security/src/Authentication.CloudFoundryCore/CloudFoundryCertificateIdentityAuthorizationHandler.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: .ctor
    path: ../Steeltoe/src/Security/src/Authentication.CloudFoundryCore/CloudFoundryCertificateIdentityAuthorizationHandler.cs
    startLine: 21
  assemblies:
  - Steeltoe.Security.Authentication.CloudFoundryCore
  namespace: Steeltoe.Security.Authentication.CloudFoundry
  syntax:
    content: public CloudFoundryCertificateIdentityAuthorizationHandler(IOptionsMonitor<CertificateOptions> identityCert, ILogger<CloudFoundryCertificateIdentityAuthorizationHandler> logger)
    parameters:
    - id: identityCert
      type: Microsoft.Extensions.Options.IOptionsMonitor{Steeltoe.Common.Options.CertificateOptions}
    - id: logger
      type: Microsoft.Extensions.Logging.ILogger{Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryCertificateIdentityAuthorizationHandler}
    content.vb: Public Sub New(identityCert As IOptionsMonitor(Of CertificateOptions), logger As ILogger(Of CloudFoundryCertificateIdentityAuthorizationHandler))
  overload: Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryCertificateIdentityAuthorizationHandler.#ctor*
  nameWithType.vb: CloudFoundryCertificateIdentityAuthorizationHandler.CloudFoundryCertificateIdentityAuthorizationHandler(IOptionsMonitor(Of CertificateOptions), ILogger(Of CloudFoundryCertificateIdentityAuthorizationHandler))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryCertificateIdentityAuthorizationHandler.CloudFoundryCertificateIdentityAuthorizationHandler(Microsoft.Extensions.Options.IOptionsMonitor(Of Steeltoe.Common.Options.CertificateOptions), Microsoft.Extensions.Logging.ILogger(Of Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryCertificateIdentityAuthorizationHandler))
  name.vb: CloudFoundryCertificateIdentityAuthorizationHandler(IOptionsMonitor(Of CertificateOptions), ILogger(Of CloudFoundryCertificateIdentityAuthorizationHandler))
- uid: Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryCertificateIdentityAuthorizationHandler.HandleAsync(Microsoft.AspNetCore.Authorization.AuthorizationHandlerContext)
  commentId: M:Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryCertificateIdentityAuthorizationHandler.HandleAsync(Microsoft.AspNetCore.Authorization.AuthorizationHandlerContext)
  id: HandleAsync(Microsoft.AspNetCore.Authorization.AuthorizationHandlerContext)
  parent: Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryCertificateIdentityAuthorizationHandler
  langs:
  - csharp
  - vb
  name: HandleAsync(AuthorizationHandlerContext)
  nameWithType: CloudFoundryCertificateIdentityAuthorizationHandler.HandleAsync(AuthorizationHandlerContext)
  fullName: Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryCertificateIdentityAuthorizationHandler.HandleAsync(Microsoft.AspNetCore.Authorization.AuthorizationHandlerContext)
  type: Method
  source:
    remote:
      path: src/Security/src/Authentication.CloudFoundryCore/CloudFoundryCertificateIdentityAuthorizationHandler.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: HandleAsync
    path: ../Steeltoe/src/Security/src/Authentication.CloudFoundryCore/CloudFoundryCertificateIdentityAuthorizationHandler.cs
    startLine: 30
  assemblies:
  - Steeltoe.Security.Authentication.CloudFoundryCore
  namespace: Steeltoe.Security.Authentication.CloudFoundry
  syntax:
    content: public Task HandleAsync(AuthorizationHandlerContext context)
    parameters:
    - id: context
      type: Microsoft.AspNetCore.Authorization.AuthorizationHandlerContext
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function HandleAsync(context As AuthorizationHandlerContext) As Task
  overload: Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryCertificateIdentityAuthorizationHandler.HandleAsync*
  implements:
  - Microsoft.AspNetCore.Authorization.IAuthorizationHandler.HandleAsync(Microsoft.AspNetCore.Authorization.AuthorizationHandlerContext)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Steeltoe.Security.Authentication.CloudFoundry
  commentId: N:Steeltoe.Security.Authentication.CloudFoundry
  name: Steeltoe.Security.Authentication.CloudFoundry
  nameWithType: Steeltoe.Security.Authentication.CloudFoundry
  fullName: Steeltoe.Security.Authentication.CloudFoundry
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.AspNetCore.Authorization.IAuthorizationHandler
  commentId: T:Microsoft.AspNetCore.Authorization.IAuthorizationHandler
  parent: Microsoft.AspNetCore.Authorization
  isExternal: true
  name: IAuthorizationHandler
  nameWithType: IAuthorizationHandler
  fullName: Microsoft.AspNetCore.Authorization.IAuthorizationHandler
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.AspNetCore.Authorization
  commentId: N:Microsoft.AspNetCore.Authorization
  isExternal: true
  name: Microsoft.AspNetCore.Authorization
  nameWithType: Microsoft.AspNetCore.Authorization
  fullName: Microsoft.AspNetCore.Authorization
- uid: Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryCertificateIdentityAuthorizationHandler.#ctor*
  commentId: Overload:Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryCertificateIdentityAuthorizationHandler.#ctor
  name: CloudFoundryCertificateIdentityAuthorizationHandler
  nameWithType: CloudFoundryCertificateIdentityAuthorizationHandler.CloudFoundryCertificateIdentityAuthorizationHandler
  fullName: Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryCertificateIdentityAuthorizationHandler.CloudFoundryCertificateIdentityAuthorizationHandler
- uid: Microsoft.Extensions.Options.IOptionsMonitor{Steeltoe.Common.Options.CertificateOptions}
  commentId: T:Microsoft.Extensions.Options.IOptionsMonitor{Steeltoe.Common.Options.CertificateOptions}
  parent: Microsoft.Extensions.Options
  definition: Microsoft.Extensions.Options.IOptionsMonitor`1
  name: IOptionsMonitor<CertificateOptions>
  nameWithType: IOptionsMonitor<CertificateOptions>
  fullName: Microsoft.Extensions.Options.IOptionsMonitor<Steeltoe.Common.Options.CertificateOptions>
  nameWithType.vb: IOptionsMonitor(Of CertificateOptions)
  fullName.vb: Microsoft.Extensions.Options.IOptionsMonitor(Of Steeltoe.Common.Options.CertificateOptions)
  name.vb: IOptionsMonitor(Of CertificateOptions)
  spec.csharp:
  - uid: Microsoft.Extensions.Options.IOptionsMonitor`1
    name: IOptionsMonitor
    nameWithType: IOptionsMonitor
    fullName: Microsoft.Extensions.Options.IOptionsMonitor
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Steeltoe.Common.Options.CertificateOptions
    name: CertificateOptions
    nameWithType: CertificateOptions
    fullName: Steeltoe.Common.Options.CertificateOptions
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Extensions.Options.IOptionsMonitor`1
    name: IOptionsMonitor
    nameWithType: IOptionsMonitor
    fullName: Microsoft.Extensions.Options.IOptionsMonitor
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Steeltoe.Common.Options.CertificateOptions
    name: CertificateOptions
    nameWithType: CertificateOptions
    fullName: Steeltoe.Common.Options.CertificateOptions
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.Logging.ILogger{Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryCertificateIdentityAuthorizationHandler}
  commentId: T:Microsoft.Extensions.Logging.ILogger{Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryCertificateIdentityAuthorizationHandler}
  parent: Microsoft.Extensions.Logging
  definition: Microsoft.Extensions.Logging.ILogger`1
  name: ILogger<CloudFoundryCertificateIdentityAuthorizationHandler>
  nameWithType: ILogger<CloudFoundryCertificateIdentityAuthorizationHandler>
  fullName: Microsoft.Extensions.Logging.ILogger<Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryCertificateIdentityAuthorizationHandler>
  nameWithType.vb: ILogger(Of CloudFoundryCertificateIdentityAuthorizationHandler)
  fullName.vb: Microsoft.Extensions.Logging.ILogger(Of Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryCertificateIdentityAuthorizationHandler)
  name.vb: ILogger(Of CloudFoundryCertificateIdentityAuthorizationHandler)
  spec.csharp:
  - uid: Microsoft.Extensions.Logging.ILogger`1
    name: ILogger
    nameWithType: ILogger
    fullName: Microsoft.Extensions.Logging.ILogger
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryCertificateIdentityAuthorizationHandler
    name: CloudFoundryCertificateIdentityAuthorizationHandler
    nameWithType: CloudFoundryCertificateIdentityAuthorizationHandler
    fullName: Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryCertificateIdentityAuthorizationHandler
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Extensions.Logging.ILogger`1
    name: ILogger
    nameWithType: ILogger
    fullName: Microsoft.Extensions.Logging.ILogger
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryCertificateIdentityAuthorizationHandler
    name: CloudFoundryCertificateIdentityAuthorizationHandler
    nameWithType: CloudFoundryCertificateIdentityAuthorizationHandler
    fullName: Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryCertificateIdentityAuthorizationHandler
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.Options.IOptionsMonitor`1
  commentId: T:Microsoft.Extensions.Options.IOptionsMonitor`1
  isExternal: true
  name: IOptionsMonitor<TOptions>
  nameWithType: IOptionsMonitor<TOptions>
  fullName: Microsoft.Extensions.Options.IOptionsMonitor<TOptions>
  nameWithType.vb: IOptionsMonitor(Of TOptions)
  fullName.vb: Microsoft.Extensions.Options.IOptionsMonitor(Of TOptions)
  name.vb: IOptionsMonitor(Of TOptions)
  spec.csharp:
  - uid: Microsoft.Extensions.Options.IOptionsMonitor`1
    name: IOptionsMonitor
    nameWithType: IOptionsMonitor
    fullName: Microsoft.Extensions.Options.IOptionsMonitor
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TOptions
    nameWithType: TOptions
    fullName: TOptions
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Extensions.Options.IOptionsMonitor`1
    name: IOptionsMonitor
    nameWithType: IOptionsMonitor
    fullName: Microsoft.Extensions.Options.IOptionsMonitor
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TOptions
    nameWithType: TOptions
    fullName: TOptions
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.Options
  commentId: N:Microsoft.Extensions.Options
  isExternal: true
  name: Microsoft.Extensions.Options
  nameWithType: Microsoft.Extensions.Options
  fullName: Microsoft.Extensions.Options
- uid: Microsoft.Extensions.Logging.ILogger`1
  commentId: T:Microsoft.Extensions.Logging.ILogger`1
  isExternal: true
  name: ILogger<TCategoryName>
  nameWithType: ILogger<TCategoryName>
  fullName: Microsoft.Extensions.Logging.ILogger<TCategoryName>
  nameWithType.vb: ILogger(Of TCategoryName)
  fullName.vb: Microsoft.Extensions.Logging.ILogger(Of TCategoryName)
  name.vb: ILogger(Of TCategoryName)
  spec.csharp:
  - uid: Microsoft.Extensions.Logging.ILogger`1
    name: ILogger
    nameWithType: ILogger
    fullName: Microsoft.Extensions.Logging.ILogger
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TCategoryName
    nameWithType: TCategoryName
    fullName: TCategoryName
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Extensions.Logging.ILogger`1
    name: ILogger
    nameWithType: ILogger
    fullName: Microsoft.Extensions.Logging.ILogger
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TCategoryName
    nameWithType: TCategoryName
    fullName: TCategoryName
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.Logging
  commentId: N:Microsoft.Extensions.Logging
  isExternal: true
  name: Microsoft.Extensions.Logging
  nameWithType: Microsoft.Extensions.Logging
  fullName: Microsoft.Extensions.Logging
- uid: Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryCertificateIdentityAuthorizationHandler.HandleAsync*
  commentId: Overload:Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryCertificateIdentityAuthorizationHandler.HandleAsync
  name: HandleAsync
  nameWithType: CloudFoundryCertificateIdentityAuthorizationHandler.HandleAsync
  fullName: Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryCertificateIdentityAuthorizationHandler.HandleAsync
- uid: Microsoft.AspNetCore.Authorization.IAuthorizationHandler.HandleAsync(Microsoft.AspNetCore.Authorization.AuthorizationHandlerContext)
  commentId: M:Microsoft.AspNetCore.Authorization.IAuthorizationHandler.HandleAsync(Microsoft.AspNetCore.Authorization.AuthorizationHandlerContext)
  parent: Microsoft.AspNetCore.Authorization.IAuthorizationHandler
  isExternal: true
  name: HandleAsync(AuthorizationHandlerContext)
  nameWithType: IAuthorizationHandler.HandleAsync(AuthorizationHandlerContext)
  fullName: Microsoft.AspNetCore.Authorization.IAuthorizationHandler.HandleAsync(Microsoft.AspNetCore.Authorization.AuthorizationHandlerContext)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Authorization.IAuthorizationHandler.HandleAsync(Microsoft.AspNetCore.Authorization.AuthorizationHandlerContext)
    name: HandleAsync
    nameWithType: IAuthorizationHandler.HandleAsync
    fullName: Microsoft.AspNetCore.Authorization.IAuthorizationHandler.HandleAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Authorization.AuthorizationHandlerContext
    name: AuthorizationHandlerContext
    nameWithType: AuthorizationHandlerContext
    fullName: Microsoft.AspNetCore.Authorization.AuthorizationHandlerContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Authorization.IAuthorizationHandler.HandleAsync(Microsoft.AspNetCore.Authorization.AuthorizationHandlerContext)
    name: HandleAsync
    nameWithType: IAuthorizationHandler.HandleAsync
    fullName: Microsoft.AspNetCore.Authorization.IAuthorizationHandler.HandleAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Authorization.AuthorizationHandlerContext
    name: AuthorizationHandlerContext
    nameWithType: AuthorizationHandlerContext
    fullName: Microsoft.AspNetCore.Authorization.AuthorizationHandlerContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Authorization.AuthorizationHandlerContext
  commentId: T:Microsoft.AspNetCore.Authorization.AuthorizationHandlerContext
  parent: Microsoft.AspNetCore.Authorization
  isExternal: true
  name: AuthorizationHandlerContext
  nameWithType: AuthorizationHandlerContext
  fullName: Microsoft.AspNetCore.Authorization.AuthorizationHandlerContext
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
