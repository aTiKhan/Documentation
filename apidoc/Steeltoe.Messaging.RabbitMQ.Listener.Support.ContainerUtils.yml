### YamlMime:ManagedReference
items:
- uid: Steeltoe.Messaging.RabbitMQ.Listener.Support.ContainerUtils
  commentId: T:Steeltoe.Messaging.RabbitMQ.Listener.Support.ContainerUtils
  id: ContainerUtils
  parent: Steeltoe.Messaging.RabbitMQ.Listener.Support
  children:
  - Steeltoe.Messaging.RabbitMQ.Listener.Support.ContainerUtils.IsRejectManual(System.Exception)
  - Steeltoe.Messaging.RabbitMQ.Listener.Support.ContainerUtils.ShouldRequeue(System.Boolean,System.Exception,Microsoft.Extensions.Logging.ILogger)
  langs:
  - csharp
  - vb
  name: ContainerUtils
  nameWithType: ContainerUtils
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.Support.ContainerUtils
  type: Class
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Listener/Support/ContainerUtils.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: ContainerUtils
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Listener/Support/ContainerUtils.cs
    startLine: 10
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Listener.Support
  syntax:
    content: public static class ContainerUtils
    content.vb: Public Module ContainerUtils
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Steeltoe.Messaging.RabbitMQ.Listener.Support.ContainerUtils.ShouldRequeue(System.Boolean,System.Exception,Microsoft.Extensions.Logging.ILogger)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Listener.Support.ContainerUtils.ShouldRequeue(System.Boolean,System.Exception,Microsoft.Extensions.Logging.ILogger)
  id: ShouldRequeue(System.Boolean,System.Exception,Microsoft.Extensions.Logging.ILogger)
  parent: Steeltoe.Messaging.RabbitMQ.Listener.Support.ContainerUtils
  langs:
  - csharp
  - vb
  name: ShouldRequeue(Boolean, Exception, ILogger)
  nameWithType: ContainerUtils.ShouldRequeue(Boolean, Exception, ILogger)
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.Support.ContainerUtils.ShouldRequeue(System.Boolean, System.Exception, Microsoft.Extensions.Logging.ILogger)
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Listener/Support/ContainerUtils.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: ShouldRequeue
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Listener/Support/ContainerUtils.cs
    startLine: 12
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Listener.Support
  syntax:
    content: public static bool ShouldRequeue(bool defaultRequeueRejected, Exception exception, ILogger logger = null)
    parameters:
    - id: defaultRequeueRejected
      type: System.Boolean
    - id: exception
      type: System.Exception
    - id: logger
      type: Microsoft.Extensions.Logging.ILogger
    return:
      type: System.Boolean
    content.vb: Public Shared Function ShouldRequeue(defaultRequeueRejected As Boolean, exception As Exception, logger As ILogger = Nothing) As Boolean
  overload: Steeltoe.Messaging.RabbitMQ.Listener.Support.ContainerUtils.ShouldRequeue*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Steeltoe.Messaging.RabbitMQ.Listener.Support.ContainerUtils.IsRejectManual(System.Exception)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Listener.Support.ContainerUtils.IsRejectManual(System.Exception)
  id: IsRejectManual(System.Exception)
  parent: Steeltoe.Messaging.RabbitMQ.Listener.Support.ContainerUtils
  langs:
  - csharp
  - vb
  name: IsRejectManual(Exception)
  nameWithType: ContainerUtils.IsRejectManual(Exception)
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.Support.ContainerUtils.IsRejectManual(System.Exception)
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Listener/Support/ContainerUtils.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: IsRejectManual
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Listener/Support/ContainerUtils.cs
    startLine: 36
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Listener.Support
  syntax:
    content: public static bool IsRejectManual(Exception exception)
    parameters:
    - id: exception
      type: System.Exception
    return:
      type: System.Boolean
    content.vb: Public Shared Function IsRejectManual(exception As Exception) As Boolean
  overload: Steeltoe.Messaging.RabbitMQ.Listener.Support.ContainerUtils.IsRejectManual*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Steeltoe.Messaging.RabbitMQ.Listener.Support
  commentId: N:Steeltoe.Messaging.RabbitMQ.Listener.Support
  name: Steeltoe.Messaging.RabbitMQ.Listener.Support
  nameWithType: Steeltoe.Messaging.RabbitMQ.Listener.Support
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.Support
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Steeltoe.Messaging.RabbitMQ.Listener.Support.ContainerUtils.ShouldRequeue*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Listener.Support.ContainerUtils.ShouldRequeue
  name: ShouldRequeue
  nameWithType: ContainerUtils.ShouldRequeue
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.Support.ContainerUtils.ShouldRequeue
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Exception
  commentId: T:System.Exception
  parent: System
  isExternal: true
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: Microsoft.Extensions.Logging.ILogger
  commentId: T:Microsoft.Extensions.Logging.ILogger
  parent: Microsoft.Extensions.Logging
  isExternal: true
  name: ILogger
  nameWithType: ILogger
  fullName: Microsoft.Extensions.Logging.ILogger
- uid: Microsoft.Extensions.Logging
  commentId: N:Microsoft.Extensions.Logging
  isExternal: true
  name: Microsoft.Extensions.Logging
  nameWithType: Microsoft.Extensions.Logging
  fullName: Microsoft.Extensions.Logging
- uid: Steeltoe.Messaging.RabbitMQ.Listener.Support.ContainerUtils.IsRejectManual*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Listener.Support.ContainerUtils.IsRejectManual
  name: IsRejectManual
  nameWithType: ContainerUtils.IsRejectManual
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.Support.ContainerUtils.IsRejectManual
