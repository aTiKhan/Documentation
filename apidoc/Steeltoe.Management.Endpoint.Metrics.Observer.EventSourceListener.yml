### YamlMime:ManagedReference
items:
- uid: Steeltoe.Management.Endpoint.Metrics.Observer.EventSourceListener
  commentId: T:Steeltoe.Management.Endpoint.Metrics.Observer.EventSourceListener
  id: EventSourceListener
  parent: Steeltoe.Management.Endpoint.Metrics.Observer
  children:
  - Steeltoe.Management.Endpoint.Metrics.Observer.EventSourceListener.DoubleMeasureMetrics
  - Steeltoe.Management.Endpoint.Metrics.Observer.EventSourceListener.ExtractAndRecordMetric(System.String,System.Diagnostics.Tracing.EventWrittenEventArgs,System.Collections.Generic.IDictionary{System.String,System.String},System.String[],System.String[])
  - Steeltoe.Management.Endpoint.Metrics.Observer.EventSourceListener.LongMeasureMetrics
  - Steeltoe.Management.Endpoint.Metrics.Observer.EventSourceListener.Meter
  langs:
  - csharp
  - vb
  name: EventSourceListener
  nameWithType: EventSourceListener
  fullName: Steeltoe.Management.Endpoint.Metrics.Observer.EventSourceListener
  type: Class
  source:
    remote:
      path: src/Management/src/EndpointBase/Metrics/Observer/EventSourceListener.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: EventSourceListener
    path: ../Steeltoe/src/Management/src/EndpointBase/Metrics/Observer/EventSourceListener.cs
    startLine: 17
  assemblies:
  - Steeltoe.Management.EndpointBase
  namespace: Steeltoe.Management.Endpoint.Metrics.Observer
  syntax:
    content: 'public class EventSourceListener : EventListener, IDisposable'
    content.vb: >-
      Public Class EventSourceListener

          Inherits EventListener

          Implements IDisposable
  inheritance:
  - System.Object
  - System.Diagnostics.Tracing.EventListener
  derivedClasses:
  - Steeltoe.Management.Endpoint.Metrics.Observer.GCEventsListener
  - Steeltoe.Management.Endpoint.Metrics.Observer.HystrixEventsListener
  - Steeltoe.Management.Endpoint.Metrics.Observer.ThreadPoolEventsListener
  implements:
  - System.IDisposable
  inheritedMembers:
  - System.Diagnostics.Tracing.EventListener.DisableEvents(System.Diagnostics.Tracing.EventSource)
  - System.Diagnostics.Tracing.EventListener.Dispose
  - System.Diagnostics.Tracing.EventListener.EnableEvents(System.Diagnostics.Tracing.EventSource,System.Diagnostics.Tracing.EventLevel)
  - System.Diagnostics.Tracing.EventListener.EnableEvents(System.Diagnostics.Tracing.EventSource,System.Diagnostics.Tracing.EventLevel,System.Diagnostics.Tracing.EventKeywords)
  - System.Diagnostics.Tracing.EventListener.EnableEvents(System.Diagnostics.Tracing.EventSource,System.Diagnostics.Tracing.EventLevel,System.Diagnostics.Tracing.EventKeywords,System.Collections.Generic.IDictionary{System.String,System.String})
  - System.Diagnostics.Tracing.EventListener.EventSourceIndex(System.Diagnostics.Tracing.EventSource)
  - System.Diagnostics.Tracing.EventListener.OnEventSourceCreated(System.Diagnostics.Tracing.EventSource)
  - System.Diagnostics.Tracing.EventListener.OnEventWritten(System.Diagnostics.Tracing.EventWrittenEventArgs)
  - System.Diagnostics.Tracing.EventListener.EventSourceCreated
  - System.Diagnostics.Tracing.EventListener.EventWritten
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Steeltoe.Management.Endpoint.Metrics.Observer.EventSourceListener.LongMeasureMetrics
  commentId: P:Steeltoe.Management.Endpoint.Metrics.Observer.EventSourceListener.LongMeasureMetrics
  id: LongMeasureMetrics
  parent: Steeltoe.Management.Endpoint.Metrics.Observer.EventSourceListener
  langs:
  - csharp
  - vb
  name: LongMeasureMetrics
  nameWithType: EventSourceListener.LongMeasureMetrics
  fullName: Steeltoe.Management.Endpoint.Metrics.Observer.EventSourceListener.LongMeasureMetrics
  type: Property
  source:
    remote:
      path: src/Management/src/EndpointBase/Metrics/Observer/EventSourceListener.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: LongMeasureMetrics
    path: ../Steeltoe/src/Management/src/EndpointBase/Metrics/Observer/EventSourceListener.cs
    startLine: 19
  assemblies:
  - Steeltoe.Management.EndpointBase
  namespace: Steeltoe.Management.Endpoint.Metrics.Observer
  syntax:
    content: protected ConcurrentDictionary<string, MeasureMetric<long>> LongMeasureMetrics { get; set; }
    parameters: []
    return:
      type: System.Collections.Concurrent.ConcurrentDictionary{System.String,MeasureMetric{System.Int64}}
    content.vb: Protected Property LongMeasureMetrics As ConcurrentDictionary(Of String, MeasureMetric(Of Long))
  overload: Steeltoe.Management.Endpoint.Metrics.Observer.EventSourceListener.LongMeasureMetrics*
  modifiers.csharp:
  - protected
  - get
  - set
  modifiers.vb:
  - Protected
- uid: Steeltoe.Management.Endpoint.Metrics.Observer.EventSourceListener.DoubleMeasureMetrics
  commentId: P:Steeltoe.Management.Endpoint.Metrics.Observer.EventSourceListener.DoubleMeasureMetrics
  id: DoubleMeasureMetrics
  parent: Steeltoe.Management.Endpoint.Metrics.Observer.EventSourceListener
  langs:
  - csharp
  - vb
  name: DoubleMeasureMetrics
  nameWithType: EventSourceListener.DoubleMeasureMetrics
  fullName: Steeltoe.Management.Endpoint.Metrics.Observer.EventSourceListener.DoubleMeasureMetrics
  type: Property
  source:
    remote:
      path: src/Management/src/EndpointBase/Metrics/Observer/EventSourceListener.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: DoubleMeasureMetrics
    path: ../Steeltoe/src/Management/src/EndpointBase/Metrics/Observer/EventSourceListener.cs
    startLine: 21
  assemblies:
  - Steeltoe.Management.EndpointBase
  namespace: Steeltoe.Management.Endpoint.Metrics.Observer
  syntax:
    content: protected ConcurrentDictionary<string, MeasureMetric<double>> DoubleMeasureMetrics { get; set; }
    parameters: []
    return:
      type: System.Collections.Concurrent.ConcurrentDictionary{System.String,MeasureMetric{System.Double}}
    content.vb: Protected Property DoubleMeasureMetrics As ConcurrentDictionary(Of String, MeasureMetric(Of Double))
  overload: Steeltoe.Management.Endpoint.Metrics.Observer.EventSourceListener.DoubleMeasureMetrics*
  modifiers.csharp:
  - protected
  - get
  - set
  modifiers.vb:
  - Protected
- uid: Steeltoe.Management.Endpoint.Metrics.Observer.EventSourceListener.Meter
  commentId: P:Steeltoe.Management.Endpoint.Metrics.Observer.EventSourceListener.Meter
  id: Meter
  parent: Steeltoe.Management.Endpoint.Metrics.Observer.EventSourceListener
  langs:
  - csharp
  - vb
  name: Meter
  nameWithType: EventSourceListener.Meter
  fullName: Steeltoe.Management.Endpoint.Metrics.Observer.EventSourceListener.Meter
  type: Property
  source:
    remote:
      path: src/Management/src/EndpointBase/Metrics/Observer/EventSourceListener.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Meter
    path: ../Steeltoe/src/Management/src/EndpointBase/Metrics/Observer/EventSourceListener.cs
    startLine: 34
  assemblies:
  - Steeltoe.Management.EndpointBase
  namespace: Steeltoe.Management.Endpoint.Metrics.Observer
  syntax:
    content: protected Meter Meter { get; }
    parameters: []
    return:
      type: Meter
    content.vb: Protected ReadOnly Property Meter As Meter
  overload: Steeltoe.Management.Endpoint.Metrics.Observer.EventSourceListener.Meter*
  modifiers.csharp:
  - protected
  - get
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: Steeltoe.Management.Endpoint.Metrics.Observer.EventSourceListener.ExtractAndRecordMetric(System.String,System.Diagnostics.Tracing.EventWrittenEventArgs,System.Collections.Generic.IDictionary{System.String,System.String},System.String[],System.String[])
  commentId: M:Steeltoe.Management.Endpoint.Metrics.Observer.EventSourceListener.ExtractAndRecordMetric(System.String,System.Diagnostics.Tracing.EventWrittenEventArgs,System.Collections.Generic.IDictionary{System.String,System.String},System.String[],System.String[])
  id: ExtractAndRecordMetric(System.String,System.Diagnostics.Tracing.EventWrittenEventArgs,System.Collections.Generic.IDictionary{System.String,System.String},System.String[],System.String[])
  parent: Steeltoe.Management.Endpoint.Metrics.Observer.EventSourceListener
  langs:
  - csharp
  - vb
  name: ExtractAndRecordMetric(String, EventWrittenEventArgs, IDictionary<String, String>, String[], String[])
  nameWithType: EventSourceListener.ExtractAndRecordMetric(String, EventWrittenEventArgs, IDictionary<String, String>, String[], String[])
  fullName: Steeltoe.Management.Endpoint.Metrics.Observer.EventSourceListener.ExtractAndRecordMetric(System.String, System.Diagnostics.Tracing.EventWrittenEventArgs, System.Collections.Generic.IDictionary<System.String, System.String>, System.String[], System.String[])
  type: Method
  source:
    remote:
      path: src/Management/src/EndpointBase/Metrics/Observer/EventSourceListener.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: ExtractAndRecordMetric
    path: ../Steeltoe/src/Management/src/EndpointBase/Metrics/Observer/EventSourceListener.cs
    startLine: 36
  assemblies:
  - Steeltoe.Management.EndpointBase
  namespace: Steeltoe.Management.Endpoint.Metrics.Observer
  syntax:
    content: protected virtual void ExtractAndRecordMetric(string eventSourceName, EventWrittenEventArgs eventData, IDictionary<string, string> labels, string[] ignorePayloadNames = null, string[] counterNames = null)
    parameters:
    - id: eventSourceName
      type: System.String
    - id: eventData
      type: System.Diagnostics.Tracing.EventWrittenEventArgs
    - id: labels
      type: System.Collections.Generic.IDictionary{System.String,System.String}
    - id: ignorePayloadNames
      type: System.String[]
    - id: counterNames
      type: System.String[]
    content.vb: Protected Overridable Sub ExtractAndRecordMetric(eventSourceName As String, eventData As EventWrittenEventArgs, labels As IDictionary(Of String, String), ignorePayloadNames As String() = Nothing, counterNames As String() = Nothing)
  overload: Steeltoe.Management.Endpoint.Metrics.Observer.EventSourceListener.ExtractAndRecordMetric*
  nameWithType.vb: EventSourceListener.ExtractAndRecordMetric(String, EventWrittenEventArgs, IDictionary(Of String, String), String(), String())
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
  fullName.vb: Steeltoe.Management.Endpoint.Metrics.Observer.EventSourceListener.ExtractAndRecordMetric(System.String, System.Diagnostics.Tracing.EventWrittenEventArgs, System.Collections.Generic.IDictionary(Of System.String, System.String), System.String(), System.String())
  name.vb: ExtractAndRecordMetric(String, EventWrittenEventArgs, IDictionary(Of String, String), String(), String())
references:
- uid: Steeltoe.Management.Endpoint.Metrics.Observer
  commentId: N:Steeltoe.Management.Endpoint.Metrics.Observer
  name: Steeltoe.Management.Endpoint.Metrics.Observer
  nameWithType: Steeltoe.Management.Endpoint.Metrics.Observer
  fullName: Steeltoe.Management.Endpoint.Metrics.Observer
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Diagnostics.Tracing.EventListener
  commentId: T:System.Diagnostics.Tracing.EventListener
  parent: System.Diagnostics.Tracing
  isExternal: true
  name: EventListener
  nameWithType: EventListener
  fullName: System.Diagnostics.Tracing.EventListener
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: System.Diagnostics.Tracing.EventListener.DisableEvents(System.Diagnostics.Tracing.EventSource)
  commentId: M:System.Diagnostics.Tracing.EventListener.DisableEvents(System.Diagnostics.Tracing.EventSource)
  parent: System.Diagnostics.Tracing.EventListener
  isExternal: true
  name: DisableEvents(EventSource)
  nameWithType: EventListener.DisableEvents(EventSource)
  fullName: System.Diagnostics.Tracing.EventListener.DisableEvents(System.Diagnostics.Tracing.EventSource)
  spec.csharp:
  - uid: System.Diagnostics.Tracing.EventListener.DisableEvents(System.Diagnostics.Tracing.EventSource)
    name: DisableEvents
    nameWithType: EventListener.DisableEvents
    fullName: System.Diagnostics.Tracing.EventListener.DisableEvents
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Diagnostics.Tracing.EventSource
    name: EventSource
    nameWithType: EventSource
    fullName: System.Diagnostics.Tracing.EventSource
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Diagnostics.Tracing.EventListener.DisableEvents(System.Diagnostics.Tracing.EventSource)
    name: DisableEvents
    nameWithType: EventListener.DisableEvents
    fullName: System.Diagnostics.Tracing.EventListener.DisableEvents
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Diagnostics.Tracing.EventSource
    name: EventSource
    nameWithType: EventSource
    fullName: System.Diagnostics.Tracing.EventSource
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Diagnostics.Tracing.EventListener.Dispose
  commentId: M:System.Diagnostics.Tracing.EventListener.Dispose
  parent: System.Diagnostics.Tracing.EventListener
  isExternal: true
  name: Dispose()
  nameWithType: EventListener.Dispose()
  fullName: System.Diagnostics.Tracing.EventListener.Dispose()
  spec.csharp:
  - uid: System.Diagnostics.Tracing.EventListener.Dispose
    name: Dispose
    nameWithType: EventListener.Dispose
    fullName: System.Diagnostics.Tracing.EventListener.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Diagnostics.Tracing.EventListener.Dispose
    name: Dispose
    nameWithType: EventListener.Dispose
    fullName: System.Diagnostics.Tracing.EventListener.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Diagnostics.Tracing.EventListener.EnableEvents(System.Diagnostics.Tracing.EventSource,System.Diagnostics.Tracing.EventLevel)
  commentId: M:System.Diagnostics.Tracing.EventListener.EnableEvents(System.Diagnostics.Tracing.EventSource,System.Diagnostics.Tracing.EventLevel)
  parent: System.Diagnostics.Tracing.EventListener
  isExternal: true
  name: EnableEvents(EventSource, EventLevel)
  nameWithType: EventListener.EnableEvents(EventSource, EventLevel)
  fullName: System.Diagnostics.Tracing.EventListener.EnableEvents(System.Diagnostics.Tracing.EventSource, System.Diagnostics.Tracing.EventLevel)
  spec.csharp:
  - uid: System.Diagnostics.Tracing.EventListener.EnableEvents(System.Diagnostics.Tracing.EventSource,System.Diagnostics.Tracing.EventLevel)
    name: EnableEvents
    nameWithType: EventListener.EnableEvents
    fullName: System.Diagnostics.Tracing.EventListener.EnableEvents
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Diagnostics.Tracing.EventSource
    name: EventSource
    nameWithType: EventSource
    fullName: System.Diagnostics.Tracing.EventSource
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Diagnostics.Tracing.EventLevel
    name: EventLevel
    nameWithType: EventLevel
    fullName: System.Diagnostics.Tracing.EventLevel
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Diagnostics.Tracing.EventListener.EnableEvents(System.Diagnostics.Tracing.EventSource,System.Diagnostics.Tracing.EventLevel)
    name: EnableEvents
    nameWithType: EventListener.EnableEvents
    fullName: System.Diagnostics.Tracing.EventListener.EnableEvents
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Diagnostics.Tracing.EventSource
    name: EventSource
    nameWithType: EventSource
    fullName: System.Diagnostics.Tracing.EventSource
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Diagnostics.Tracing.EventLevel
    name: EventLevel
    nameWithType: EventLevel
    fullName: System.Diagnostics.Tracing.EventLevel
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Diagnostics.Tracing.EventListener.EnableEvents(System.Diagnostics.Tracing.EventSource,System.Diagnostics.Tracing.EventLevel,System.Diagnostics.Tracing.EventKeywords)
  commentId: M:System.Diagnostics.Tracing.EventListener.EnableEvents(System.Diagnostics.Tracing.EventSource,System.Diagnostics.Tracing.EventLevel,System.Diagnostics.Tracing.EventKeywords)
  parent: System.Diagnostics.Tracing.EventListener
  isExternal: true
  name: EnableEvents(EventSource, EventLevel, EventKeywords)
  nameWithType: EventListener.EnableEvents(EventSource, EventLevel, EventKeywords)
  fullName: System.Diagnostics.Tracing.EventListener.EnableEvents(System.Diagnostics.Tracing.EventSource, System.Diagnostics.Tracing.EventLevel, System.Diagnostics.Tracing.EventKeywords)
  spec.csharp:
  - uid: System.Diagnostics.Tracing.EventListener.EnableEvents(System.Diagnostics.Tracing.EventSource,System.Diagnostics.Tracing.EventLevel,System.Diagnostics.Tracing.EventKeywords)
    name: EnableEvents
    nameWithType: EventListener.EnableEvents
    fullName: System.Diagnostics.Tracing.EventListener.EnableEvents
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Diagnostics.Tracing.EventSource
    name: EventSource
    nameWithType: EventSource
    fullName: System.Diagnostics.Tracing.EventSource
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Diagnostics.Tracing.EventLevel
    name: EventLevel
    nameWithType: EventLevel
    fullName: System.Diagnostics.Tracing.EventLevel
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Diagnostics.Tracing.EventKeywords
    name: EventKeywords
    nameWithType: EventKeywords
    fullName: System.Diagnostics.Tracing.EventKeywords
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Diagnostics.Tracing.EventListener.EnableEvents(System.Diagnostics.Tracing.EventSource,System.Diagnostics.Tracing.EventLevel,System.Diagnostics.Tracing.EventKeywords)
    name: EnableEvents
    nameWithType: EventListener.EnableEvents
    fullName: System.Diagnostics.Tracing.EventListener.EnableEvents
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Diagnostics.Tracing.EventSource
    name: EventSource
    nameWithType: EventSource
    fullName: System.Diagnostics.Tracing.EventSource
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Diagnostics.Tracing.EventLevel
    name: EventLevel
    nameWithType: EventLevel
    fullName: System.Diagnostics.Tracing.EventLevel
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Diagnostics.Tracing.EventKeywords
    name: EventKeywords
    nameWithType: EventKeywords
    fullName: System.Diagnostics.Tracing.EventKeywords
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Diagnostics.Tracing.EventListener.EnableEvents(System.Diagnostics.Tracing.EventSource,System.Diagnostics.Tracing.EventLevel,System.Diagnostics.Tracing.EventKeywords,System.Collections.Generic.IDictionary{System.String,System.String})
  commentId: M:System.Diagnostics.Tracing.EventListener.EnableEvents(System.Diagnostics.Tracing.EventSource,System.Diagnostics.Tracing.EventLevel,System.Diagnostics.Tracing.EventKeywords,System.Collections.Generic.IDictionary{System.String,System.String})
  parent: System.Diagnostics.Tracing.EventListener
  isExternal: true
  name: EnableEvents(EventSource, EventLevel, EventKeywords, IDictionary<String, String>)
  nameWithType: EventListener.EnableEvents(EventSource, EventLevel, EventKeywords, IDictionary<String, String>)
  fullName: System.Diagnostics.Tracing.EventListener.EnableEvents(System.Diagnostics.Tracing.EventSource, System.Diagnostics.Tracing.EventLevel, System.Diagnostics.Tracing.EventKeywords, System.Collections.Generic.IDictionary<System.String, System.String>)
  nameWithType.vb: EventListener.EnableEvents(EventSource, EventLevel, EventKeywords, IDictionary(Of String, String))
  fullName.vb: System.Diagnostics.Tracing.EventListener.EnableEvents(System.Diagnostics.Tracing.EventSource, System.Diagnostics.Tracing.EventLevel, System.Diagnostics.Tracing.EventKeywords, System.Collections.Generic.IDictionary(Of System.String, System.String))
  name.vb: EnableEvents(EventSource, EventLevel, EventKeywords, IDictionary(Of String, String))
  spec.csharp:
  - uid: System.Diagnostics.Tracing.EventListener.EnableEvents(System.Diagnostics.Tracing.EventSource,System.Diagnostics.Tracing.EventLevel,System.Diagnostics.Tracing.EventKeywords,System.Collections.Generic.IDictionary{System.String,System.String})
    name: EnableEvents
    nameWithType: EventListener.EnableEvents
    fullName: System.Diagnostics.Tracing.EventListener.EnableEvents
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Diagnostics.Tracing.EventSource
    name: EventSource
    nameWithType: EventSource
    fullName: System.Diagnostics.Tracing.EventSource
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Diagnostics.Tracing.EventLevel
    name: EventLevel
    nameWithType: EventLevel
    fullName: System.Diagnostics.Tracing.EventLevel
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Diagnostics.Tracing.EventKeywords
    name: EventKeywords
    nameWithType: EventKeywords
    fullName: System.Diagnostics.Tracing.EventKeywords
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Diagnostics.Tracing.EventListener.EnableEvents(System.Diagnostics.Tracing.EventSource,System.Diagnostics.Tracing.EventLevel,System.Diagnostics.Tracing.EventKeywords,System.Collections.Generic.IDictionary{System.String,System.String})
    name: EnableEvents
    nameWithType: EventListener.EnableEvents
    fullName: System.Diagnostics.Tracing.EventListener.EnableEvents
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Diagnostics.Tracing.EventSource
    name: EventSource
    nameWithType: EventSource
    fullName: System.Diagnostics.Tracing.EventSource
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Diagnostics.Tracing.EventLevel
    name: EventLevel
    nameWithType: EventLevel
    fullName: System.Diagnostics.Tracing.EventLevel
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Diagnostics.Tracing.EventKeywords
    name: EventKeywords
    nameWithType: EventKeywords
    fullName: System.Diagnostics.Tracing.EventKeywords
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Diagnostics.Tracing.EventListener.EventSourceIndex(System.Diagnostics.Tracing.EventSource)
  commentId: M:System.Diagnostics.Tracing.EventListener.EventSourceIndex(System.Diagnostics.Tracing.EventSource)
  parent: System.Diagnostics.Tracing.EventListener
  isExternal: true
  name: EventSourceIndex(EventSource)
  nameWithType: EventListener.EventSourceIndex(EventSource)
  fullName: System.Diagnostics.Tracing.EventListener.EventSourceIndex(System.Diagnostics.Tracing.EventSource)
  spec.csharp:
  - uid: System.Diagnostics.Tracing.EventListener.EventSourceIndex(System.Diagnostics.Tracing.EventSource)
    name: EventSourceIndex
    nameWithType: EventListener.EventSourceIndex
    fullName: System.Diagnostics.Tracing.EventListener.EventSourceIndex
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Diagnostics.Tracing.EventSource
    name: EventSource
    nameWithType: EventSource
    fullName: System.Diagnostics.Tracing.EventSource
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Diagnostics.Tracing.EventListener.EventSourceIndex(System.Diagnostics.Tracing.EventSource)
    name: EventSourceIndex
    nameWithType: EventListener.EventSourceIndex
    fullName: System.Diagnostics.Tracing.EventListener.EventSourceIndex
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Diagnostics.Tracing.EventSource
    name: EventSource
    nameWithType: EventSource
    fullName: System.Diagnostics.Tracing.EventSource
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Diagnostics.Tracing.EventListener.OnEventSourceCreated(System.Diagnostics.Tracing.EventSource)
  commentId: M:System.Diagnostics.Tracing.EventListener.OnEventSourceCreated(System.Diagnostics.Tracing.EventSource)
  parent: System.Diagnostics.Tracing.EventListener
  isExternal: true
  name: OnEventSourceCreated(EventSource)
  nameWithType: EventListener.OnEventSourceCreated(EventSource)
  fullName: System.Diagnostics.Tracing.EventListener.OnEventSourceCreated(System.Diagnostics.Tracing.EventSource)
  spec.csharp:
  - uid: System.Diagnostics.Tracing.EventListener.OnEventSourceCreated(System.Diagnostics.Tracing.EventSource)
    name: OnEventSourceCreated
    nameWithType: EventListener.OnEventSourceCreated
    fullName: System.Diagnostics.Tracing.EventListener.OnEventSourceCreated
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Diagnostics.Tracing.EventSource
    name: EventSource
    nameWithType: EventSource
    fullName: System.Diagnostics.Tracing.EventSource
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Diagnostics.Tracing.EventListener.OnEventSourceCreated(System.Diagnostics.Tracing.EventSource)
    name: OnEventSourceCreated
    nameWithType: EventListener.OnEventSourceCreated
    fullName: System.Diagnostics.Tracing.EventListener.OnEventSourceCreated
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Diagnostics.Tracing.EventSource
    name: EventSource
    nameWithType: EventSource
    fullName: System.Diagnostics.Tracing.EventSource
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Diagnostics.Tracing.EventListener.OnEventWritten(System.Diagnostics.Tracing.EventWrittenEventArgs)
  commentId: M:System.Diagnostics.Tracing.EventListener.OnEventWritten(System.Diagnostics.Tracing.EventWrittenEventArgs)
  parent: System.Diagnostics.Tracing.EventListener
  isExternal: true
  name: OnEventWritten(EventWrittenEventArgs)
  nameWithType: EventListener.OnEventWritten(EventWrittenEventArgs)
  fullName: System.Diagnostics.Tracing.EventListener.OnEventWritten(System.Diagnostics.Tracing.EventWrittenEventArgs)
  spec.csharp:
  - uid: System.Diagnostics.Tracing.EventListener.OnEventWritten(System.Diagnostics.Tracing.EventWrittenEventArgs)
    name: OnEventWritten
    nameWithType: EventListener.OnEventWritten
    fullName: System.Diagnostics.Tracing.EventListener.OnEventWritten
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Diagnostics.Tracing.EventWrittenEventArgs
    name: EventWrittenEventArgs
    nameWithType: EventWrittenEventArgs
    fullName: System.Diagnostics.Tracing.EventWrittenEventArgs
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Diagnostics.Tracing.EventListener.OnEventWritten(System.Diagnostics.Tracing.EventWrittenEventArgs)
    name: OnEventWritten
    nameWithType: EventListener.OnEventWritten
    fullName: System.Diagnostics.Tracing.EventListener.OnEventWritten
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Diagnostics.Tracing.EventWrittenEventArgs
    name: EventWrittenEventArgs
    nameWithType: EventWrittenEventArgs
    fullName: System.Diagnostics.Tracing.EventWrittenEventArgs
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Diagnostics.Tracing.EventListener.EventSourceCreated
  commentId: E:System.Diagnostics.Tracing.EventListener.EventSourceCreated
  parent: System.Diagnostics.Tracing.EventListener
  isExternal: true
  name: EventSourceCreated
  nameWithType: EventListener.EventSourceCreated
  fullName: System.Diagnostics.Tracing.EventListener.EventSourceCreated
- uid: System.Diagnostics.Tracing.EventListener.EventWritten
  commentId: E:System.Diagnostics.Tracing.EventListener.EventWritten
  parent: System.Diagnostics.Tracing.EventListener
  isExternal: true
  name: EventWritten
  nameWithType: EventListener.EventWritten
  fullName: System.Diagnostics.Tracing.EventListener.EventWritten
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Diagnostics.Tracing
  commentId: N:System.Diagnostics.Tracing
  isExternal: true
  name: System.Diagnostics.Tracing
  nameWithType: System.Diagnostics.Tracing
  fullName: System.Diagnostics.Tracing
- uid: Steeltoe.Management.Endpoint.Metrics.Observer.EventSourceListener.LongMeasureMetrics*
  commentId: Overload:Steeltoe.Management.Endpoint.Metrics.Observer.EventSourceListener.LongMeasureMetrics
  name: LongMeasureMetrics
  nameWithType: EventSourceListener.LongMeasureMetrics
  fullName: Steeltoe.Management.Endpoint.Metrics.Observer.EventSourceListener.LongMeasureMetrics
- uid: System.Collections.Concurrent.ConcurrentDictionary{System.String,MeasureMetric{System.Int64}}
  commentId: T:System.Collections.Concurrent.ConcurrentDictionary{System.String,MeasureMetric{System.Int64}}
  parent: System.Collections.Concurrent
  definition: System.Collections.Concurrent.ConcurrentDictionary`2
  name: ConcurrentDictionary<String, MeasureMetric<Int64>>
  nameWithType: ConcurrentDictionary<String, MeasureMetric<Int64>>
  fullName: System.Collections.Concurrent.ConcurrentDictionary<System.String, MeasureMetric<System.Int64>>
  nameWithType.vb: ConcurrentDictionary(Of String, MeasureMetric(Of Int64))
  fullName.vb: System.Collections.Concurrent.ConcurrentDictionary(Of System.String, MeasureMetric(Of System.Int64))
  name.vb: ConcurrentDictionary(Of String, MeasureMetric(Of Int64))
  spec.csharp:
  - uid: System.Collections.Concurrent.ConcurrentDictionary`2
    name: ConcurrentDictionary
    nameWithType: ConcurrentDictionary
    fullName: System.Collections.Concurrent.ConcurrentDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: MeasureMetric`1
    name: MeasureMetric
    nameWithType: MeasureMetric
    fullName: MeasureMetric
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Concurrent.ConcurrentDictionary`2
    name: ConcurrentDictionary
    nameWithType: ConcurrentDictionary
    fullName: System.Collections.Concurrent.ConcurrentDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: MeasureMetric`1
    name: MeasureMetric
    nameWithType: MeasureMetric
    fullName: MeasureMetric
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Concurrent.ConcurrentDictionary`2
  commentId: T:System.Collections.Concurrent.ConcurrentDictionary`2
  isExternal: true
  name: ConcurrentDictionary<TKey, TValue>
  nameWithType: ConcurrentDictionary<TKey, TValue>
  fullName: System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>
  nameWithType.vb: ConcurrentDictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Concurrent.ConcurrentDictionary(Of TKey, TValue)
  name.vb: ConcurrentDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Concurrent.ConcurrentDictionary`2
    name: ConcurrentDictionary
    nameWithType: ConcurrentDictionary
    fullName: System.Collections.Concurrent.ConcurrentDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Concurrent.ConcurrentDictionary`2
    name: ConcurrentDictionary
    nameWithType: ConcurrentDictionary
    fullName: System.Collections.Concurrent.ConcurrentDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Concurrent
  commentId: N:System.Collections.Concurrent
  isExternal: true
  name: System.Collections.Concurrent
  nameWithType: System.Collections.Concurrent
  fullName: System.Collections.Concurrent
- uid: Steeltoe.Management.Endpoint.Metrics.Observer.EventSourceListener.DoubleMeasureMetrics*
  commentId: Overload:Steeltoe.Management.Endpoint.Metrics.Observer.EventSourceListener.DoubleMeasureMetrics
  name: DoubleMeasureMetrics
  nameWithType: EventSourceListener.DoubleMeasureMetrics
  fullName: Steeltoe.Management.Endpoint.Metrics.Observer.EventSourceListener.DoubleMeasureMetrics
- uid: System.Collections.Concurrent.ConcurrentDictionary{System.String,MeasureMetric{System.Double}}
  commentId: T:System.Collections.Concurrent.ConcurrentDictionary{System.String,MeasureMetric{System.Double}}
  parent: System.Collections.Concurrent
  definition: System.Collections.Concurrent.ConcurrentDictionary`2
  name: ConcurrentDictionary<String, MeasureMetric<Double>>
  nameWithType: ConcurrentDictionary<String, MeasureMetric<Double>>
  fullName: System.Collections.Concurrent.ConcurrentDictionary<System.String, MeasureMetric<System.Double>>
  nameWithType.vb: ConcurrentDictionary(Of String, MeasureMetric(Of Double))
  fullName.vb: System.Collections.Concurrent.ConcurrentDictionary(Of System.String, MeasureMetric(Of System.Double))
  name.vb: ConcurrentDictionary(Of String, MeasureMetric(Of Double))
  spec.csharp:
  - uid: System.Collections.Concurrent.ConcurrentDictionary`2
    name: ConcurrentDictionary
    nameWithType: ConcurrentDictionary
    fullName: System.Collections.Concurrent.ConcurrentDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: MeasureMetric`1
    name: MeasureMetric
    nameWithType: MeasureMetric
    fullName: MeasureMetric
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Concurrent.ConcurrentDictionary`2
    name: ConcurrentDictionary
    nameWithType: ConcurrentDictionary
    fullName: System.Collections.Concurrent.ConcurrentDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: MeasureMetric`1
    name: MeasureMetric
    nameWithType: MeasureMetric
    fullName: MeasureMetric
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Management.Endpoint.Metrics.Observer.EventSourceListener.Meter*
  commentId: Overload:Steeltoe.Management.Endpoint.Metrics.Observer.EventSourceListener.Meter
  name: Meter
  nameWithType: EventSourceListener.Meter
  fullName: Steeltoe.Management.Endpoint.Metrics.Observer.EventSourceListener.Meter
- uid: Meter
  isExternal: true
  name: Meter
  nameWithType: Meter
  fullName: Meter
- uid: Steeltoe.Management.Endpoint.Metrics.Observer.EventSourceListener.ExtractAndRecordMetric*
  commentId: Overload:Steeltoe.Management.Endpoint.Metrics.Observer.EventSourceListener.ExtractAndRecordMetric
  name: ExtractAndRecordMetric
  nameWithType: EventSourceListener.ExtractAndRecordMetric
  fullName: Steeltoe.Management.Endpoint.Metrics.Observer.EventSourceListener.ExtractAndRecordMetric
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Diagnostics.Tracing.EventWrittenEventArgs
  commentId: T:System.Diagnostics.Tracing.EventWrittenEventArgs
  parent: System.Diagnostics.Tracing
  isExternal: true
  name: EventWrittenEventArgs
  nameWithType: EventWrittenEventArgs
  fullName: System.Diagnostics.Tracing.EventWrittenEventArgs
- uid: System.Collections.Generic.IDictionary{System.String,System.String}
  commentId: T:System.Collections.Generic.IDictionary{System.String,System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IDictionary`2
  name: IDictionary<String, String>
  nameWithType: IDictionary<String, String>
  fullName: System.Collections.Generic.IDictionary<System.String, System.String>
  nameWithType.vb: IDictionary(Of String, String)
  fullName.vb: System.Collections.Generic.IDictionary(Of System.String, System.String)
  name.vb: IDictionary(Of String, String)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.String[]
  isExternal: true
  name: String[]
  nameWithType: String[]
  fullName: System.String[]
  nameWithType.vb: String()
  fullName.vb: System.String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Collections.Generic.IDictionary`2
  commentId: T:System.Collections.Generic.IDictionary`2
  isExternal: true
  name: IDictionary<TKey, TValue>
  nameWithType: IDictionary<TKey, TValue>
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>
  nameWithType.vb: IDictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.IDictionary(Of TKey, TValue)
  name.vb: IDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
