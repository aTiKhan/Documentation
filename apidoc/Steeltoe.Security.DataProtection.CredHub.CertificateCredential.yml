### YamlMime:ManagedReference
items:
- uid: Steeltoe.Security.DataProtection.CredHub.CertificateCredential
  commentId: T:Steeltoe.Security.DataProtection.CredHub.CertificateCredential
  id: CertificateCredential
  parent: Steeltoe.Security.DataProtection.CredHub
  children:
  - Steeltoe.Security.DataProtection.CredHub.CertificateCredential.Certificate
  - Steeltoe.Security.DataProtection.CredHub.CertificateCredential.CertificateAuthority
  - Steeltoe.Security.DataProtection.CredHub.CertificateCredential.CertificateAuthorityName
  - Steeltoe.Security.DataProtection.CredHub.CertificateCredential.PrivateKey
  langs:
  - csharp
  - vb
  name: CertificateCredential
  nameWithType: CertificateCredential
  fullName: Steeltoe.Security.DataProtection.CredHub.CertificateCredential
  type: Class
  source:
    remote:
      path: src/Security/src/DataProtection.CredHubBase/Credentials/Certificate/CertificateCredential.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: CertificateCredential
    path: ../Steeltoe/src/Security/src/DataProtection.CredHubBase/Credentials/Certificate/CertificateCredential.cs
    startLine: 8
  assemblies:
  - Steeltoe.Security.DataProtection.CredHubBase
  namespace: Steeltoe.Security.DataProtection.CredHub
  syntax:
    content: 'public class CertificateCredential : ICredentialValue'
    content.vb: >-
      Public Class CertificateCredential

          Implements ICredentialValue
  inheritance:
  - System.Object
  implements:
  - Steeltoe.Security.DataProtection.CredHub.ICredentialValue
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Steeltoe.Security.DataProtection.CredHub.CertificateCredential.CertificateAuthority
  commentId: P:Steeltoe.Security.DataProtection.CredHub.CertificateCredential.CertificateAuthority
  id: CertificateAuthority
  parent: Steeltoe.Security.DataProtection.CredHub.CertificateCredential
  langs:
  - csharp
  - vb
  name: CertificateAuthority
  nameWithType: CertificateCredential.CertificateAuthority
  fullName: Steeltoe.Security.DataProtection.CredHub.CertificateCredential.CertificateAuthority
  type: Property
  source:
    remote:
      path: src/Security/src/DataProtection.CredHubBase/Credentials/Certificate/CertificateCredential.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: CertificateAuthority
    path: ../Steeltoe/src/Security/src/DataProtection.CredHubBase/Credentials/Certificate/CertificateCredential.cs
    startLine: 13
  assemblies:
  - Steeltoe.Security.DataProtection.CredHubBase
  namespace: Steeltoe.Security.DataProtection.CredHub
  summary: "\nGets or sets certificate of the Certificate Authority\n"
  example: []
  syntax:
    content: >-
      [JsonPropertyName("ca")]

      public string CertificateAuthority { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonPropertyName("ca")>

      Public Property CertificateAuthority As String
  overload: Steeltoe.Security.DataProtection.CredHub.CertificateCredential.CertificateAuthority*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: ca
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Steeltoe.Security.DataProtection.CredHub.CertificateCredential.CertificateAuthorityName
  commentId: P:Steeltoe.Security.DataProtection.CredHub.CertificateCredential.CertificateAuthorityName
  id: CertificateAuthorityName
  parent: Steeltoe.Security.DataProtection.CredHub.CertificateCredential
  langs:
  - csharp
  - vb
  name: CertificateAuthorityName
  nameWithType: CertificateCredential.CertificateAuthorityName
  fullName: Steeltoe.Security.DataProtection.CredHub.CertificateCredential.CertificateAuthorityName
  type: Property
  source:
    remote:
      path: src/Security/src/DataProtection.CredHubBase/Credentials/Certificate/CertificateCredential.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: CertificateAuthorityName
    path: ../Steeltoe/src/Security/src/DataProtection.CredHubBase/Credentials/Certificate/CertificateCredential.cs
    startLine: 19
  assemblies:
  - Steeltoe.Security.DataProtection.CredHubBase
  namespace: Steeltoe.Security.DataProtection.CredHub
  summary: "\nGets or sets name of CA credential in credhub that has signed this certificate\n"
  example: []
  syntax:
    content: >-
      [JsonPropertyName("ca_name")]

      public string CertificateAuthorityName { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonPropertyName("ca_name")>

      Public Property CertificateAuthorityName As String
  overload: Steeltoe.Security.DataProtection.CredHub.CertificateCredential.CertificateAuthorityName*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: ca_name
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Steeltoe.Security.DataProtection.CredHub.CertificateCredential.Certificate
  commentId: P:Steeltoe.Security.DataProtection.CredHub.CertificateCredential.Certificate
  id: Certificate
  parent: Steeltoe.Security.DataProtection.CredHub.CertificateCredential
  langs:
  - csharp
  - vb
  name: Certificate
  nameWithType: CertificateCredential.Certificate
  fullName: Steeltoe.Security.DataProtection.CredHub.CertificateCredential.Certificate
  type: Property
  source:
    remote:
      path: src/Security/src/DataProtection.CredHubBase/Credentials/Certificate/CertificateCredential.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Certificate
    path: ../Steeltoe/src/Security/src/DataProtection.CredHubBase/Credentials/Certificate/CertificateCredential.cs
    startLine: 25
  assemblies:
  - Steeltoe.Security.DataProtection.CredHubBase
  namespace: Steeltoe.Security.DataProtection.CredHub
  summary: "\nGets or sets string representation of the certificate\n"
  example: []
  syntax:
    content: public string Certificate { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Certificate As String
  overload: Steeltoe.Security.DataProtection.CredHub.CertificateCredential.Certificate*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Steeltoe.Security.DataProtection.CredHub.CertificateCredential.PrivateKey
  commentId: P:Steeltoe.Security.DataProtection.CredHub.CertificateCredential.PrivateKey
  id: PrivateKey
  parent: Steeltoe.Security.DataProtection.CredHub.CertificateCredential
  langs:
  - csharp
  - vb
  name: PrivateKey
  nameWithType: CertificateCredential.PrivateKey
  fullName: Steeltoe.Security.DataProtection.CredHub.CertificateCredential.PrivateKey
  type: Property
  source:
    remote:
      path: src/Security/src/DataProtection.CredHubBase/Credentials/Certificate/CertificateCredential.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: PrivateKey
    path: ../Steeltoe/src/Security/src/DataProtection.CredHubBase/Credentials/Certificate/CertificateCredential.cs
    startLine: 30
  assemblies:
  - Steeltoe.Security.DataProtection.CredHubBase
  namespace: Steeltoe.Security.DataProtection.CredHub
  summary: "\nGets or sets private key for the certificate\n"
  example: []
  syntax:
    content: >-
      [JsonPropertyName("private_key")]

      public string PrivateKey { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonPropertyName("private_key")>

      Public Property PrivateKey As String
  overload: Steeltoe.Security.DataProtection.CredHub.CertificateCredential.PrivateKey*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: private_key
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Steeltoe.Security.DataProtection.CredHub
  commentId: N:Steeltoe.Security.DataProtection.CredHub
  name: Steeltoe.Security.DataProtection.CredHub
  nameWithType: Steeltoe.Security.DataProtection.CredHub
  fullName: Steeltoe.Security.DataProtection.CredHub
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Steeltoe.Security.DataProtection.CredHub.ICredentialValue
  commentId: T:Steeltoe.Security.DataProtection.CredHub.ICredentialValue
  parent: Steeltoe.Security.DataProtection.CredHub
  name: ICredentialValue
  nameWithType: ICredentialValue
  fullName: Steeltoe.Security.DataProtection.CredHub.ICredentialValue
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Steeltoe.Security.DataProtection.CredHub.CertificateCredential.CertificateAuthority*
  commentId: Overload:Steeltoe.Security.DataProtection.CredHub.CertificateCredential.CertificateAuthority
  name: CertificateAuthority
  nameWithType: CertificateCredential.CertificateAuthority
  fullName: Steeltoe.Security.DataProtection.CredHub.CertificateCredential.CertificateAuthority
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Steeltoe.Security.DataProtection.CredHub.CertificateCredential.CertificateAuthorityName*
  commentId: Overload:Steeltoe.Security.DataProtection.CredHub.CertificateCredential.CertificateAuthorityName
  name: CertificateAuthorityName
  nameWithType: CertificateCredential.CertificateAuthorityName
  fullName: Steeltoe.Security.DataProtection.CredHub.CertificateCredential.CertificateAuthorityName
- uid: Steeltoe.Security.DataProtection.CredHub.CertificateCredential.Certificate*
  commentId: Overload:Steeltoe.Security.DataProtection.CredHub.CertificateCredential.Certificate
  name: Certificate
  nameWithType: CertificateCredential.Certificate
  fullName: Steeltoe.Security.DataProtection.CredHub.CertificateCredential.Certificate
- uid: Steeltoe.Security.DataProtection.CredHub.CertificateCredential.PrivateKey*
  commentId: Overload:Steeltoe.Security.DataProtection.CredHub.CertificateCredential.PrivateKey
  name: PrivateKey
  nameWithType: CertificateCredential.PrivateKey
  fullName: Steeltoe.Security.DataProtection.CredHub.CertificateCredential.PrivateKey
