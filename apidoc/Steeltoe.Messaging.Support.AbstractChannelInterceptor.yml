### YamlMime:ManagedReference
items:
- uid: Steeltoe.Messaging.Support.AbstractChannelInterceptor
  commentId: T:Steeltoe.Messaging.Support.AbstractChannelInterceptor
  id: AbstractChannelInterceptor
  parent: Steeltoe.Messaging.Support
  children:
  - Steeltoe.Messaging.Support.AbstractChannelInterceptor.#ctor
  - Steeltoe.Messaging.Support.AbstractChannelInterceptor.#ctor(System.Int32)
  - Steeltoe.Messaging.Support.AbstractChannelInterceptor.AfterReceiveCompletion(Steeltoe.Messaging.IMessage,Steeltoe.Messaging.IMessageChannel,System.Exception)
  - Steeltoe.Messaging.Support.AbstractChannelInterceptor.AfterSendCompletion(Steeltoe.Messaging.IMessage,Steeltoe.Messaging.IMessageChannel,System.Boolean,System.Exception)
  - Steeltoe.Messaging.Support.AbstractChannelInterceptor.PostReceive(Steeltoe.Messaging.IMessage,Steeltoe.Messaging.IMessageChannel)
  - Steeltoe.Messaging.Support.AbstractChannelInterceptor.PostSend(Steeltoe.Messaging.IMessage,Steeltoe.Messaging.IMessageChannel,System.Boolean)
  - Steeltoe.Messaging.Support.AbstractChannelInterceptor.PreReceive(Steeltoe.Messaging.IMessageChannel)
  - Steeltoe.Messaging.Support.AbstractChannelInterceptor.PreSend(Steeltoe.Messaging.IMessage,Steeltoe.Messaging.IMessageChannel)
  langs:
  - csharp
  - vb
  name: AbstractChannelInterceptor
  nameWithType: AbstractChannelInterceptor
  fullName: Steeltoe.Messaging.Support.AbstractChannelInterceptor
  type: Class
  source:
    remote:
      path: src/Messaging/src/MessagingBase/Support/AbstractChannelInterceptor.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: AbstractChannelInterceptor
    path: ../Steeltoe/src/Messaging/src/MessagingBase/Support/AbstractChannelInterceptor.cs
    startLine: 9
  assemblies:
  - Steeltoe.Messaging.MessagingBase
  namespace: Steeltoe.Messaging.Support
  syntax:
    content: 'public abstract class AbstractChannelInterceptor : AbstractOrdered, IOrdered, IChannelInterceptor, IOrdered'
    content.vb: >-
      Public MustInherit Class AbstractChannelInterceptor

          Inherits AbstractOrdered

          Implements IOrdered, IChannelInterceptor, IOrdered
  inheritance:
  - System.Object
  - Steeltoe.Common.Order.AbstractOrdered
  derivedClasses:
  - Steeltoe.Messaging.Support.AbstractTaskSchedulerChannelInterceptor
  - Steeltoe.Messaging.Support.ImmutableMessageChannelInterceptor
  - Steeltoe.Stream.Binder.AbstractMessageChannelBinder.EmbeddedHeadersChannelInterceptor
  implements:
  - Steeltoe.Common.Order.IOrdered
  - Steeltoe.Messaging.Support.IChannelInterceptor
  - IOrdered
  inheritedMembers:
  - Steeltoe.Common.Order.AbstractOrdered.HIGHEST_PRECEDENCE
  - Steeltoe.Common.Order.AbstractOrdered.LOWEST_PRECEDENCE
  - Steeltoe.Common.Order.AbstractOrdered.Order
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: Steeltoe.Messaging.Support.AbstractChannelInterceptor.#ctor
  commentId: M:Steeltoe.Messaging.Support.AbstractChannelInterceptor.#ctor
  id: '#ctor'
  parent: Steeltoe.Messaging.Support.AbstractChannelInterceptor
  langs:
  - csharp
  - vb
  name: AbstractChannelInterceptor()
  nameWithType: AbstractChannelInterceptor.AbstractChannelInterceptor()
  fullName: Steeltoe.Messaging.Support.AbstractChannelInterceptor.AbstractChannelInterceptor()
  type: Constructor
  source:
    remote:
      path: src/Messaging/src/MessagingBase/Support/AbstractChannelInterceptor.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: .ctor
    path: ../Steeltoe/src/Messaging/src/MessagingBase/Support/AbstractChannelInterceptor.cs
    startLine: 11
  assemblies:
  - Steeltoe.Messaging.MessagingBase
  namespace: Steeltoe.Messaging.Support
  syntax:
    content: public AbstractChannelInterceptor()
    content.vb: Public Sub New
  overload: Steeltoe.Messaging.Support.AbstractChannelInterceptor.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Steeltoe.Messaging.Support.AbstractChannelInterceptor.#ctor(System.Int32)
  commentId: M:Steeltoe.Messaging.Support.AbstractChannelInterceptor.#ctor(System.Int32)
  id: '#ctor(System.Int32)'
  parent: Steeltoe.Messaging.Support.AbstractChannelInterceptor
  langs:
  - csharp
  - vb
  name: AbstractChannelInterceptor(Int32)
  nameWithType: AbstractChannelInterceptor.AbstractChannelInterceptor(Int32)
  fullName: Steeltoe.Messaging.Support.AbstractChannelInterceptor.AbstractChannelInterceptor(System.Int32)
  type: Constructor
  source:
    remote:
      path: src/Messaging/src/MessagingBase/Support/AbstractChannelInterceptor.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: .ctor
    path: ../Steeltoe/src/Messaging/src/MessagingBase/Support/AbstractChannelInterceptor.cs
    startLine: 15
  assemblies:
  - Steeltoe.Messaging.MessagingBase
  namespace: Steeltoe.Messaging.Support
  syntax:
    content: public AbstractChannelInterceptor(int order)
    parameters:
    - id: order
      type: System.Int32
    content.vb: Public Sub New(order As Integer)
  overload: Steeltoe.Messaging.Support.AbstractChannelInterceptor.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Steeltoe.Messaging.Support.AbstractChannelInterceptor.AfterReceiveCompletion(Steeltoe.Messaging.IMessage,Steeltoe.Messaging.IMessageChannel,System.Exception)
  commentId: M:Steeltoe.Messaging.Support.AbstractChannelInterceptor.AfterReceiveCompletion(Steeltoe.Messaging.IMessage,Steeltoe.Messaging.IMessageChannel,System.Exception)
  id: AfterReceiveCompletion(Steeltoe.Messaging.IMessage,Steeltoe.Messaging.IMessageChannel,System.Exception)
  parent: Steeltoe.Messaging.Support.AbstractChannelInterceptor
  langs:
  - csharp
  - vb
  name: AfterReceiveCompletion(IMessage, IMessageChannel, Exception)
  nameWithType: AbstractChannelInterceptor.AfterReceiveCompletion(IMessage, IMessageChannel, Exception)
  fullName: Steeltoe.Messaging.Support.AbstractChannelInterceptor.AfterReceiveCompletion(Steeltoe.Messaging.IMessage, Steeltoe.Messaging.IMessageChannel, System.Exception)
  type: Method
  source:
    remote:
      path: src/Messaging/src/MessagingBase/Support/AbstractChannelInterceptor.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: AfterReceiveCompletion
    path: ../Steeltoe/src/Messaging/src/MessagingBase/Support/AbstractChannelInterceptor.cs
    startLine: 20
  assemblies:
  - Steeltoe.Messaging.MessagingBase
  namespace: Steeltoe.Messaging.Support
  syntax:
    content: public virtual void AfterReceiveCompletion(IMessage message, IMessageChannel channel, Exception exception)
    parameters:
    - id: message
      type: Steeltoe.Messaging.IMessage
    - id: channel
      type: Steeltoe.Messaging.IMessageChannel
    - id: exception
      type: System.Exception
    content.vb: Public Overridable Sub AfterReceiveCompletion(message As IMessage, channel As IMessageChannel, exception As Exception)
  overload: Steeltoe.Messaging.Support.AbstractChannelInterceptor.AfterReceiveCompletion*
  implements:
  - Steeltoe.Messaging.Support.IChannelInterceptor.AfterReceiveCompletion(Steeltoe.Messaging.IMessage,Steeltoe.Messaging.IMessageChannel,System.Exception)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Steeltoe.Messaging.Support.AbstractChannelInterceptor.AfterSendCompletion(Steeltoe.Messaging.IMessage,Steeltoe.Messaging.IMessageChannel,System.Boolean,System.Exception)
  commentId: M:Steeltoe.Messaging.Support.AbstractChannelInterceptor.AfterSendCompletion(Steeltoe.Messaging.IMessage,Steeltoe.Messaging.IMessageChannel,System.Boolean,System.Exception)
  id: AfterSendCompletion(Steeltoe.Messaging.IMessage,Steeltoe.Messaging.IMessageChannel,System.Boolean,System.Exception)
  parent: Steeltoe.Messaging.Support.AbstractChannelInterceptor
  langs:
  - csharp
  - vb
  name: AfterSendCompletion(IMessage, IMessageChannel, Boolean, Exception)
  nameWithType: AbstractChannelInterceptor.AfterSendCompletion(IMessage, IMessageChannel, Boolean, Exception)
  fullName: Steeltoe.Messaging.Support.AbstractChannelInterceptor.AfterSendCompletion(Steeltoe.Messaging.IMessage, Steeltoe.Messaging.IMessageChannel, System.Boolean, System.Exception)
  type: Method
  source:
    remote:
      path: src/Messaging/src/MessagingBase/Support/AbstractChannelInterceptor.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: AfterSendCompletion
    path: ../Steeltoe/src/Messaging/src/MessagingBase/Support/AbstractChannelInterceptor.cs
    startLine: 24
  assemblies:
  - Steeltoe.Messaging.MessagingBase
  namespace: Steeltoe.Messaging.Support
  syntax:
    content: public virtual void AfterSendCompletion(IMessage message, IMessageChannel channel, bool sent, Exception exception)
    parameters:
    - id: message
      type: Steeltoe.Messaging.IMessage
    - id: channel
      type: Steeltoe.Messaging.IMessageChannel
    - id: sent
      type: System.Boolean
    - id: exception
      type: System.Exception
    content.vb: Public Overridable Sub AfterSendCompletion(message As IMessage, channel As IMessageChannel, sent As Boolean, exception As Exception)
  overload: Steeltoe.Messaging.Support.AbstractChannelInterceptor.AfterSendCompletion*
  implements:
  - Steeltoe.Messaging.Support.IChannelInterceptor.AfterSendCompletion(Steeltoe.Messaging.IMessage,Steeltoe.Messaging.IMessageChannel,System.Boolean,System.Exception)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Steeltoe.Messaging.Support.AbstractChannelInterceptor.PostReceive(Steeltoe.Messaging.IMessage,Steeltoe.Messaging.IMessageChannel)
  commentId: M:Steeltoe.Messaging.Support.AbstractChannelInterceptor.PostReceive(Steeltoe.Messaging.IMessage,Steeltoe.Messaging.IMessageChannel)
  id: PostReceive(Steeltoe.Messaging.IMessage,Steeltoe.Messaging.IMessageChannel)
  parent: Steeltoe.Messaging.Support.AbstractChannelInterceptor
  langs:
  - csharp
  - vb
  name: PostReceive(IMessage, IMessageChannel)
  nameWithType: AbstractChannelInterceptor.PostReceive(IMessage, IMessageChannel)
  fullName: Steeltoe.Messaging.Support.AbstractChannelInterceptor.PostReceive(Steeltoe.Messaging.IMessage, Steeltoe.Messaging.IMessageChannel)
  type: Method
  source:
    remote:
      path: src/Messaging/src/MessagingBase/Support/AbstractChannelInterceptor.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: PostReceive
    path: ../Steeltoe/src/Messaging/src/MessagingBase/Support/AbstractChannelInterceptor.cs
    startLine: 28
  assemblies:
  - Steeltoe.Messaging.MessagingBase
  namespace: Steeltoe.Messaging.Support
  syntax:
    content: public virtual IMessage PostReceive(IMessage message, IMessageChannel channel)
    parameters:
    - id: message
      type: Steeltoe.Messaging.IMessage
    - id: channel
      type: Steeltoe.Messaging.IMessageChannel
    return:
      type: Steeltoe.Messaging.IMessage
    content.vb: Public Overridable Function PostReceive(message As IMessage, channel As IMessageChannel) As IMessage
  overload: Steeltoe.Messaging.Support.AbstractChannelInterceptor.PostReceive*
  implements:
  - Steeltoe.Messaging.Support.IChannelInterceptor.PostReceive(Steeltoe.Messaging.IMessage,Steeltoe.Messaging.IMessageChannel)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Steeltoe.Messaging.Support.AbstractChannelInterceptor.PostSend(Steeltoe.Messaging.IMessage,Steeltoe.Messaging.IMessageChannel,System.Boolean)
  commentId: M:Steeltoe.Messaging.Support.AbstractChannelInterceptor.PostSend(Steeltoe.Messaging.IMessage,Steeltoe.Messaging.IMessageChannel,System.Boolean)
  id: PostSend(Steeltoe.Messaging.IMessage,Steeltoe.Messaging.IMessageChannel,System.Boolean)
  parent: Steeltoe.Messaging.Support.AbstractChannelInterceptor
  langs:
  - csharp
  - vb
  name: PostSend(IMessage, IMessageChannel, Boolean)
  nameWithType: AbstractChannelInterceptor.PostSend(IMessage, IMessageChannel, Boolean)
  fullName: Steeltoe.Messaging.Support.AbstractChannelInterceptor.PostSend(Steeltoe.Messaging.IMessage, Steeltoe.Messaging.IMessageChannel, System.Boolean)
  type: Method
  source:
    remote:
      path: src/Messaging/src/MessagingBase/Support/AbstractChannelInterceptor.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: PostSend
    path: ../Steeltoe/src/Messaging/src/MessagingBase/Support/AbstractChannelInterceptor.cs
    startLine: 33
  assemblies:
  - Steeltoe.Messaging.MessagingBase
  namespace: Steeltoe.Messaging.Support
  syntax:
    content: public virtual void PostSend(IMessage message, IMessageChannel channel, bool sent)
    parameters:
    - id: message
      type: Steeltoe.Messaging.IMessage
    - id: channel
      type: Steeltoe.Messaging.IMessageChannel
    - id: sent
      type: System.Boolean
    content.vb: Public Overridable Sub PostSend(message As IMessage, channel As IMessageChannel, sent As Boolean)
  overload: Steeltoe.Messaging.Support.AbstractChannelInterceptor.PostSend*
  implements:
  - Steeltoe.Messaging.Support.IChannelInterceptor.PostSend(Steeltoe.Messaging.IMessage,Steeltoe.Messaging.IMessageChannel,System.Boolean)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Steeltoe.Messaging.Support.AbstractChannelInterceptor.PreReceive(Steeltoe.Messaging.IMessageChannel)
  commentId: M:Steeltoe.Messaging.Support.AbstractChannelInterceptor.PreReceive(Steeltoe.Messaging.IMessageChannel)
  id: PreReceive(Steeltoe.Messaging.IMessageChannel)
  parent: Steeltoe.Messaging.Support.AbstractChannelInterceptor
  langs:
  - csharp
  - vb
  name: PreReceive(IMessageChannel)
  nameWithType: AbstractChannelInterceptor.PreReceive(IMessageChannel)
  fullName: Steeltoe.Messaging.Support.AbstractChannelInterceptor.PreReceive(Steeltoe.Messaging.IMessageChannel)
  type: Method
  source:
    remote:
      path: src/Messaging/src/MessagingBase/Support/AbstractChannelInterceptor.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: PreReceive
    path: ../Steeltoe/src/Messaging/src/MessagingBase/Support/AbstractChannelInterceptor.cs
    startLine: 37
  assemblies:
  - Steeltoe.Messaging.MessagingBase
  namespace: Steeltoe.Messaging.Support
  syntax:
    content: public virtual bool PreReceive(IMessageChannel channel)
    parameters:
    - id: channel
      type: Steeltoe.Messaging.IMessageChannel
    return:
      type: System.Boolean
    content.vb: Public Overridable Function PreReceive(channel As IMessageChannel) As Boolean
  overload: Steeltoe.Messaging.Support.AbstractChannelInterceptor.PreReceive*
  implements:
  - Steeltoe.Messaging.Support.IChannelInterceptor.PreReceive(Steeltoe.Messaging.IMessageChannel)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Steeltoe.Messaging.Support.AbstractChannelInterceptor.PreSend(Steeltoe.Messaging.IMessage,Steeltoe.Messaging.IMessageChannel)
  commentId: M:Steeltoe.Messaging.Support.AbstractChannelInterceptor.PreSend(Steeltoe.Messaging.IMessage,Steeltoe.Messaging.IMessageChannel)
  id: PreSend(Steeltoe.Messaging.IMessage,Steeltoe.Messaging.IMessageChannel)
  parent: Steeltoe.Messaging.Support.AbstractChannelInterceptor
  langs:
  - csharp
  - vb
  name: PreSend(IMessage, IMessageChannel)
  nameWithType: AbstractChannelInterceptor.PreSend(IMessage, IMessageChannel)
  fullName: Steeltoe.Messaging.Support.AbstractChannelInterceptor.PreSend(Steeltoe.Messaging.IMessage, Steeltoe.Messaging.IMessageChannel)
  type: Method
  source:
    remote:
      path: src/Messaging/src/MessagingBase/Support/AbstractChannelInterceptor.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: PreSend
    path: ../Steeltoe/src/Messaging/src/MessagingBase/Support/AbstractChannelInterceptor.cs
    startLine: 42
  assemblies:
  - Steeltoe.Messaging.MessagingBase
  namespace: Steeltoe.Messaging.Support
  syntax:
    content: public virtual IMessage PreSend(IMessage message, IMessageChannel channel)
    parameters:
    - id: message
      type: Steeltoe.Messaging.IMessage
    - id: channel
      type: Steeltoe.Messaging.IMessageChannel
    return:
      type: Steeltoe.Messaging.IMessage
    content.vb: Public Overridable Function PreSend(message As IMessage, channel As IMessageChannel) As IMessage
  overload: Steeltoe.Messaging.Support.AbstractChannelInterceptor.PreSend*
  implements:
  - Steeltoe.Messaging.Support.IChannelInterceptor.PreSend(Steeltoe.Messaging.IMessage,Steeltoe.Messaging.IMessageChannel)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
references:
- uid: Steeltoe.Messaging.Support
  commentId: N:Steeltoe.Messaging.Support
  name: Steeltoe.Messaging.Support
  nameWithType: Steeltoe.Messaging.Support
  fullName: Steeltoe.Messaging.Support
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Steeltoe.Common.Order.AbstractOrdered
  commentId: T:Steeltoe.Common.Order.AbstractOrdered
  parent: Steeltoe.Common.Order
  name: AbstractOrdered
  nameWithType: AbstractOrdered
  fullName: Steeltoe.Common.Order.AbstractOrdered
- uid: Steeltoe.Common.Order.IOrdered
  commentId: T:Steeltoe.Common.Order.IOrdered
  parent: Steeltoe.Common.Order
  name: IOrdered
  nameWithType: IOrdered
  fullName: Steeltoe.Common.Order.IOrdered
- uid: Steeltoe.Messaging.Support.IChannelInterceptor
  commentId: T:Steeltoe.Messaging.Support.IChannelInterceptor
  parent: Steeltoe.Messaging.Support
  name: IChannelInterceptor
  nameWithType: IChannelInterceptor
  fullName: Steeltoe.Messaging.Support.IChannelInterceptor
- uid: IOrdered
  isExternal: true
  name: IOrdered
  nameWithType: IOrdered
  fullName: IOrdered
- uid: Steeltoe.Common.Order.AbstractOrdered.HIGHEST_PRECEDENCE
  commentId: F:Steeltoe.Common.Order.AbstractOrdered.HIGHEST_PRECEDENCE
  parent: Steeltoe.Common.Order.AbstractOrdered
  name: HIGHEST_PRECEDENCE
  nameWithType: AbstractOrdered.HIGHEST_PRECEDENCE
  fullName: Steeltoe.Common.Order.AbstractOrdered.HIGHEST_PRECEDENCE
- uid: Steeltoe.Common.Order.AbstractOrdered.LOWEST_PRECEDENCE
  commentId: F:Steeltoe.Common.Order.AbstractOrdered.LOWEST_PRECEDENCE
  parent: Steeltoe.Common.Order.AbstractOrdered
  name: LOWEST_PRECEDENCE
  nameWithType: AbstractOrdered.LOWEST_PRECEDENCE
  fullName: Steeltoe.Common.Order.AbstractOrdered.LOWEST_PRECEDENCE
- uid: Steeltoe.Common.Order.AbstractOrdered.Order
  commentId: P:Steeltoe.Common.Order.AbstractOrdered.Order
  parent: Steeltoe.Common.Order.AbstractOrdered
  name: Order
  nameWithType: AbstractOrdered.Order
  fullName: Steeltoe.Common.Order.AbstractOrdered.Order
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Steeltoe.Common.Order
  commentId: N:Steeltoe.Common.Order
  name: Steeltoe.Common.Order
  nameWithType: Steeltoe.Common.Order
  fullName: Steeltoe.Common.Order
- uid: Steeltoe.Messaging.Support.AbstractChannelInterceptor.#ctor*
  commentId: Overload:Steeltoe.Messaging.Support.AbstractChannelInterceptor.#ctor
  name: AbstractChannelInterceptor
  nameWithType: AbstractChannelInterceptor.AbstractChannelInterceptor
  fullName: Steeltoe.Messaging.Support.AbstractChannelInterceptor.AbstractChannelInterceptor
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Steeltoe.Messaging.Support.AbstractChannelInterceptor.AfterReceiveCompletion*
  commentId: Overload:Steeltoe.Messaging.Support.AbstractChannelInterceptor.AfterReceiveCompletion
  name: AfterReceiveCompletion
  nameWithType: AbstractChannelInterceptor.AfterReceiveCompletion
  fullName: Steeltoe.Messaging.Support.AbstractChannelInterceptor.AfterReceiveCompletion
- uid: Steeltoe.Messaging.Support.IChannelInterceptor.AfterReceiveCompletion(Steeltoe.Messaging.IMessage,Steeltoe.Messaging.IMessageChannel,System.Exception)
  commentId: M:Steeltoe.Messaging.Support.IChannelInterceptor.AfterReceiveCompletion(Steeltoe.Messaging.IMessage,Steeltoe.Messaging.IMessageChannel,System.Exception)
  parent: Steeltoe.Messaging.Support.IChannelInterceptor
  isExternal: true
  name: AfterReceiveCompletion(IMessage, IMessageChannel, Exception)
  nameWithType: IChannelInterceptor.AfterReceiveCompletion(IMessage, IMessageChannel, Exception)
  fullName: Steeltoe.Messaging.Support.IChannelInterceptor.AfterReceiveCompletion(Steeltoe.Messaging.IMessage, Steeltoe.Messaging.IMessageChannel, System.Exception)
  spec.csharp:
  - uid: Steeltoe.Messaging.Support.IChannelInterceptor.AfterReceiveCompletion(Steeltoe.Messaging.IMessage,Steeltoe.Messaging.IMessageChannel,System.Exception)
    name: AfterReceiveCompletion
    nameWithType: IChannelInterceptor.AfterReceiveCompletion
    fullName: Steeltoe.Messaging.Support.IChannelInterceptor.AfterReceiveCompletion
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.IMessageChannel
    name: IMessageChannel
    nameWithType: IMessageChannel
    fullName: Steeltoe.Messaging.IMessageChannel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Support.IChannelInterceptor.AfterReceiveCompletion(Steeltoe.Messaging.IMessage,Steeltoe.Messaging.IMessageChannel,System.Exception)
    name: AfterReceiveCompletion
    nameWithType: IChannelInterceptor.AfterReceiveCompletion
    fullName: Steeltoe.Messaging.Support.IChannelInterceptor.AfterReceiveCompletion
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.IMessageChannel
    name: IMessageChannel
    nameWithType: IMessageChannel
    fullName: Steeltoe.Messaging.IMessageChannel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.IMessage
  commentId: T:Steeltoe.Messaging.IMessage
  parent: Steeltoe.Messaging
  name: IMessage
  nameWithType: IMessage
  fullName: Steeltoe.Messaging.IMessage
- uid: Steeltoe.Messaging.IMessageChannel
  commentId: T:Steeltoe.Messaging.IMessageChannel
  parent: Steeltoe.Messaging
  name: IMessageChannel
  nameWithType: IMessageChannel
  fullName: Steeltoe.Messaging.IMessageChannel
- uid: System.Exception
  commentId: T:System.Exception
  parent: System
  isExternal: true
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: Steeltoe.Messaging
  commentId: N:Steeltoe.Messaging
  name: Steeltoe.Messaging
  nameWithType: Steeltoe.Messaging
  fullName: Steeltoe.Messaging
- uid: Steeltoe.Messaging.Support.AbstractChannelInterceptor.AfterSendCompletion*
  commentId: Overload:Steeltoe.Messaging.Support.AbstractChannelInterceptor.AfterSendCompletion
  name: AfterSendCompletion
  nameWithType: AbstractChannelInterceptor.AfterSendCompletion
  fullName: Steeltoe.Messaging.Support.AbstractChannelInterceptor.AfterSendCompletion
- uid: Steeltoe.Messaging.Support.IChannelInterceptor.AfterSendCompletion(Steeltoe.Messaging.IMessage,Steeltoe.Messaging.IMessageChannel,System.Boolean,System.Exception)
  commentId: M:Steeltoe.Messaging.Support.IChannelInterceptor.AfterSendCompletion(Steeltoe.Messaging.IMessage,Steeltoe.Messaging.IMessageChannel,System.Boolean,System.Exception)
  parent: Steeltoe.Messaging.Support.IChannelInterceptor
  isExternal: true
  name: AfterSendCompletion(IMessage, IMessageChannel, Boolean, Exception)
  nameWithType: IChannelInterceptor.AfterSendCompletion(IMessage, IMessageChannel, Boolean, Exception)
  fullName: Steeltoe.Messaging.Support.IChannelInterceptor.AfterSendCompletion(Steeltoe.Messaging.IMessage, Steeltoe.Messaging.IMessageChannel, System.Boolean, System.Exception)
  spec.csharp:
  - uid: Steeltoe.Messaging.Support.IChannelInterceptor.AfterSendCompletion(Steeltoe.Messaging.IMessage,Steeltoe.Messaging.IMessageChannel,System.Boolean,System.Exception)
    name: AfterSendCompletion
    nameWithType: IChannelInterceptor.AfterSendCompletion
    fullName: Steeltoe.Messaging.Support.IChannelInterceptor.AfterSendCompletion
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.IMessageChannel
    name: IMessageChannel
    nameWithType: IMessageChannel
    fullName: Steeltoe.Messaging.IMessageChannel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Support.IChannelInterceptor.AfterSendCompletion(Steeltoe.Messaging.IMessage,Steeltoe.Messaging.IMessageChannel,System.Boolean,System.Exception)
    name: AfterSendCompletion
    nameWithType: IChannelInterceptor.AfterSendCompletion
    fullName: Steeltoe.Messaging.Support.IChannelInterceptor.AfterSendCompletion
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.IMessageChannel
    name: IMessageChannel
    nameWithType: IMessageChannel
    fullName: Steeltoe.Messaging.IMessageChannel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Steeltoe.Messaging.Support.AbstractChannelInterceptor.PostReceive*
  commentId: Overload:Steeltoe.Messaging.Support.AbstractChannelInterceptor.PostReceive
  name: PostReceive
  nameWithType: AbstractChannelInterceptor.PostReceive
  fullName: Steeltoe.Messaging.Support.AbstractChannelInterceptor.PostReceive
- uid: Steeltoe.Messaging.Support.IChannelInterceptor.PostReceive(Steeltoe.Messaging.IMessage,Steeltoe.Messaging.IMessageChannel)
  commentId: M:Steeltoe.Messaging.Support.IChannelInterceptor.PostReceive(Steeltoe.Messaging.IMessage,Steeltoe.Messaging.IMessageChannel)
  parent: Steeltoe.Messaging.Support.IChannelInterceptor
  name: PostReceive(IMessage, IMessageChannel)
  nameWithType: IChannelInterceptor.PostReceive(IMessage, IMessageChannel)
  fullName: Steeltoe.Messaging.Support.IChannelInterceptor.PostReceive(Steeltoe.Messaging.IMessage, Steeltoe.Messaging.IMessageChannel)
  spec.csharp:
  - uid: Steeltoe.Messaging.Support.IChannelInterceptor.PostReceive(Steeltoe.Messaging.IMessage,Steeltoe.Messaging.IMessageChannel)
    name: PostReceive
    nameWithType: IChannelInterceptor.PostReceive
    fullName: Steeltoe.Messaging.Support.IChannelInterceptor.PostReceive
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.IMessageChannel
    name: IMessageChannel
    nameWithType: IMessageChannel
    fullName: Steeltoe.Messaging.IMessageChannel
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Support.IChannelInterceptor.PostReceive(Steeltoe.Messaging.IMessage,Steeltoe.Messaging.IMessageChannel)
    name: PostReceive
    nameWithType: IChannelInterceptor.PostReceive
    fullName: Steeltoe.Messaging.Support.IChannelInterceptor.PostReceive
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.IMessageChannel
    name: IMessageChannel
    nameWithType: IMessageChannel
    fullName: Steeltoe.Messaging.IMessageChannel
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Support.AbstractChannelInterceptor.PostSend*
  commentId: Overload:Steeltoe.Messaging.Support.AbstractChannelInterceptor.PostSend
  name: PostSend
  nameWithType: AbstractChannelInterceptor.PostSend
  fullName: Steeltoe.Messaging.Support.AbstractChannelInterceptor.PostSend
- uid: Steeltoe.Messaging.Support.IChannelInterceptor.PostSend(Steeltoe.Messaging.IMessage,Steeltoe.Messaging.IMessageChannel,System.Boolean)
  commentId: M:Steeltoe.Messaging.Support.IChannelInterceptor.PostSend(Steeltoe.Messaging.IMessage,Steeltoe.Messaging.IMessageChannel,System.Boolean)
  parent: Steeltoe.Messaging.Support.IChannelInterceptor
  isExternal: true
  name: PostSend(IMessage, IMessageChannel, Boolean)
  nameWithType: IChannelInterceptor.PostSend(IMessage, IMessageChannel, Boolean)
  fullName: Steeltoe.Messaging.Support.IChannelInterceptor.PostSend(Steeltoe.Messaging.IMessage, Steeltoe.Messaging.IMessageChannel, System.Boolean)
  spec.csharp:
  - uid: Steeltoe.Messaging.Support.IChannelInterceptor.PostSend(Steeltoe.Messaging.IMessage,Steeltoe.Messaging.IMessageChannel,System.Boolean)
    name: PostSend
    nameWithType: IChannelInterceptor.PostSend
    fullName: Steeltoe.Messaging.Support.IChannelInterceptor.PostSend
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.IMessageChannel
    name: IMessageChannel
    nameWithType: IMessageChannel
    fullName: Steeltoe.Messaging.IMessageChannel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Support.IChannelInterceptor.PostSend(Steeltoe.Messaging.IMessage,Steeltoe.Messaging.IMessageChannel,System.Boolean)
    name: PostSend
    nameWithType: IChannelInterceptor.PostSend
    fullName: Steeltoe.Messaging.Support.IChannelInterceptor.PostSend
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.IMessageChannel
    name: IMessageChannel
    nameWithType: IMessageChannel
    fullName: Steeltoe.Messaging.IMessageChannel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Support.AbstractChannelInterceptor.PreReceive*
  commentId: Overload:Steeltoe.Messaging.Support.AbstractChannelInterceptor.PreReceive
  name: PreReceive
  nameWithType: AbstractChannelInterceptor.PreReceive
  fullName: Steeltoe.Messaging.Support.AbstractChannelInterceptor.PreReceive
- uid: Steeltoe.Messaging.Support.IChannelInterceptor.PreReceive(Steeltoe.Messaging.IMessageChannel)
  commentId: M:Steeltoe.Messaging.Support.IChannelInterceptor.PreReceive(Steeltoe.Messaging.IMessageChannel)
  parent: Steeltoe.Messaging.Support.IChannelInterceptor
  name: PreReceive(IMessageChannel)
  nameWithType: IChannelInterceptor.PreReceive(IMessageChannel)
  fullName: Steeltoe.Messaging.Support.IChannelInterceptor.PreReceive(Steeltoe.Messaging.IMessageChannel)
  spec.csharp:
  - uid: Steeltoe.Messaging.Support.IChannelInterceptor.PreReceive(Steeltoe.Messaging.IMessageChannel)
    name: PreReceive
    nameWithType: IChannelInterceptor.PreReceive
    fullName: Steeltoe.Messaging.Support.IChannelInterceptor.PreReceive
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.IMessageChannel
    name: IMessageChannel
    nameWithType: IMessageChannel
    fullName: Steeltoe.Messaging.IMessageChannel
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Support.IChannelInterceptor.PreReceive(Steeltoe.Messaging.IMessageChannel)
    name: PreReceive
    nameWithType: IChannelInterceptor.PreReceive
    fullName: Steeltoe.Messaging.Support.IChannelInterceptor.PreReceive
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.IMessageChannel
    name: IMessageChannel
    nameWithType: IMessageChannel
    fullName: Steeltoe.Messaging.IMessageChannel
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Support.AbstractChannelInterceptor.PreSend*
  commentId: Overload:Steeltoe.Messaging.Support.AbstractChannelInterceptor.PreSend
  name: PreSend
  nameWithType: AbstractChannelInterceptor.PreSend
  fullName: Steeltoe.Messaging.Support.AbstractChannelInterceptor.PreSend
- uid: Steeltoe.Messaging.Support.IChannelInterceptor.PreSend(Steeltoe.Messaging.IMessage,Steeltoe.Messaging.IMessageChannel)
  commentId: M:Steeltoe.Messaging.Support.IChannelInterceptor.PreSend(Steeltoe.Messaging.IMessage,Steeltoe.Messaging.IMessageChannel)
  parent: Steeltoe.Messaging.Support.IChannelInterceptor
  name: PreSend(IMessage, IMessageChannel)
  nameWithType: IChannelInterceptor.PreSend(IMessage, IMessageChannel)
  fullName: Steeltoe.Messaging.Support.IChannelInterceptor.PreSend(Steeltoe.Messaging.IMessage, Steeltoe.Messaging.IMessageChannel)
  spec.csharp:
  - uid: Steeltoe.Messaging.Support.IChannelInterceptor.PreSend(Steeltoe.Messaging.IMessage,Steeltoe.Messaging.IMessageChannel)
    name: PreSend
    nameWithType: IChannelInterceptor.PreSend
    fullName: Steeltoe.Messaging.Support.IChannelInterceptor.PreSend
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.IMessageChannel
    name: IMessageChannel
    nameWithType: IMessageChannel
    fullName: Steeltoe.Messaging.IMessageChannel
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Support.IChannelInterceptor.PreSend(Steeltoe.Messaging.IMessage,Steeltoe.Messaging.IMessageChannel)
    name: PreSend
    nameWithType: IChannelInterceptor.PreSend
    fullName: Steeltoe.Messaging.Support.IChannelInterceptor.PreSend
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.IMessageChannel
    name: IMessageChannel
    nameWithType: IMessageChannel
    fullName: Steeltoe.Messaging.IMessageChannel
  - name: )
    nameWithType: )
    fullName: )
