### YamlMime:ManagedReference
items:
- uid: Steeltoe.Connector.MySql.MySqlTypeLocator
  commentId: T:Steeltoe.Connector.MySql.MySqlTypeLocator
  id: MySqlTypeLocator
  parent: Steeltoe.Connector.MySql
  children:
  - Steeltoe.Connector.MySql.MySqlTypeLocator.Assemblies
  - Steeltoe.Connector.MySql.MySqlTypeLocator.ConnectionTypeNames
  - Steeltoe.Connector.MySql.MySqlTypeLocator.MySqlConnection
  langs:
  - csharp
  - vb
  name: MySqlTypeLocator
  nameWithType: MySqlTypeLocator
  fullName: Steeltoe.Connector.MySql.MySqlTypeLocator
  type: Class
  source:
    remote:
      path: src/Connectors/src/ConnectorBase/MySql/MySqlTypeLocator.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: MySqlTypeLocator
    path: ../Steeltoe/src/Connectors/src/ConnectorBase/MySql/MySqlTypeLocator.cs
    startLine: 12
  assemblies:
  - Steeltoe.Connector.ConnectorBase
  namespace: Steeltoe.Connector.MySql
  summary: "\nAssemblies and types used for interacting with MySQL\n"
  example: []
  syntax:
    content: public static class MySqlTypeLocator
    content.vb: Public Module MySqlTypeLocator
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Steeltoe.Connector.MySql.MySqlTypeLocator.Assemblies
  commentId: P:Steeltoe.Connector.MySql.MySqlTypeLocator.Assemblies
  id: Assemblies
  parent: Steeltoe.Connector.MySql.MySqlTypeLocator
  langs:
  - csharp
  - vb
  name: Assemblies
  nameWithType: MySqlTypeLocator.Assemblies
  fullName: Steeltoe.Connector.MySql.MySqlTypeLocator.Assemblies
  type: Property
  source:
    remote:
      path: src/Connectors/src/ConnectorBase/MySql/MySqlTypeLocator.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Assemblies
    path: ../Steeltoe/src/Connectors/src/ConnectorBase/MySql/MySqlTypeLocator.cs
    startLine: 17
  assemblies:
  - Steeltoe.Connector.ConnectorBase
  namespace: Steeltoe.Connector.MySql
  summary: "\nGets a list of supported MySQL assemblies\n"
  example: []
  syntax:
    content: public static string[] Assemblies { get; }
    parameters: []
    return:
      type: System.String[]
    content.vb: Public Shared ReadOnly Property Assemblies As String()
  overload: Steeltoe.Connector.MySql.MySqlTypeLocator.Assemblies*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Steeltoe.Connector.MySql.MySqlTypeLocator.ConnectionTypeNames
  commentId: P:Steeltoe.Connector.MySql.MySqlTypeLocator.ConnectionTypeNames
  id: ConnectionTypeNames
  parent: Steeltoe.Connector.MySql.MySqlTypeLocator
  langs:
  - csharp
  - vb
  name: ConnectionTypeNames
  nameWithType: MySqlTypeLocator.ConnectionTypeNames
  fullName: Steeltoe.Connector.MySql.MySqlTypeLocator.ConnectionTypeNames
  type: Property
  source:
    remote:
      path: src/Connectors/src/ConnectorBase/MySql/MySqlTypeLocator.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: ConnectionTypeNames
    path: ../Steeltoe/src/Connectors/src/ConnectorBase/MySql/MySqlTypeLocator.cs
    startLine: 22
  assemblies:
  - Steeltoe.Connector.ConnectorBase
  namespace: Steeltoe.Connector.MySql
  summary: "\nGets a list of MySQL types that implement IDbConnection\n"
  example: []
  syntax:
    content: public static string[] ConnectionTypeNames { get; }
    parameters: []
    return:
      type: System.String[]
    content.vb: Public Shared ReadOnly Property ConnectionTypeNames As String()
  overload: Steeltoe.Connector.MySql.MySqlTypeLocator.ConnectionTypeNames*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Steeltoe.Connector.MySql.MySqlTypeLocator.MySqlConnection
  commentId: P:Steeltoe.Connector.MySql.MySqlTypeLocator.MySqlConnection
  id: MySqlConnection
  parent: Steeltoe.Connector.MySql.MySqlTypeLocator
  langs:
  - csharp
  - vb
  name: MySqlConnection
  nameWithType: MySqlTypeLocator.MySqlConnection
  fullName: Steeltoe.Connector.MySql.MySqlTypeLocator.MySqlConnection
  type: Property
  source:
    remote:
      path: src/Connectors/src/ConnectorBase/MySql/MySqlTypeLocator.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: MySqlConnection
    path: ../Steeltoe/src/Connectors/src/ConnectorBase/MySql/MySqlTypeLocator.cs
    startLine: 28
  assemblies:
  - Steeltoe.Connector.ConnectorBase
  namespace: Steeltoe.Connector.MySql
  summary: "\nGets MySqlConnection from a MySQL Library\n"
  example: []
  syntax:
    content: public static Type MySqlConnection { get; }
    parameters: []
    return:
      type: System.Type
    content.vb: Public Shared ReadOnly Property MySqlConnection As Type
  overload: Steeltoe.Connector.MySql.MySqlTypeLocator.MySqlConnection*
  exceptions:
  - type: Steeltoe.Connector.ConnectorException
    commentId: T:Steeltoe.Connector.ConnectorException
    description: When type is not found
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
references:
- uid: Steeltoe.Connector.MySql
  commentId: N:Steeltoe.Connector.MySql
  name: Steeltoe.Connector.MySql
  nameWithType: Steeltoe.Connector.MySql
  fullName: Steeltoe.Connector.MySql
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Steeltoe.Connector.MySql.MySqlTypeLocator.Assemblies*
  commentId: Overload:Steeltoe.Connector.MySql.MySqlTypeLocator.Assemblies
  name: Assemblies
  nameWithType: MySqlTypeLocator.Assemblies
  fullName: Steeltoe.Connector.MySql.MySqlTypeLocator.Assemblies
- uid: System.String[]
  isExternal: true
  name: String[]
  nameWithType: String[]
  fullName: System.String[]
  nameWithType.vb: String()
  fullName.vb: System.String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Steeltoe.Connector.MySql.MySqlTypeLocator.ConnectionTypeNames*
  commentId: Overload:Steeltoe.Connector.MySql.MySqlTypeLocator.ConnectionTypeNames
  name: ConnectionTypeNames
  nameWithType: MySqlTypeLocator.ConnectionTypeNames
  fullName: Steeltoe.Connector.MySql.MySqlTypeLocator.ConnectionTypeNames
- uid: Steeltoe.Connector.ConnectorException
  commentId: T:Steeltoe.Connector.ConnectorException
  name: ConnectorException
  nameWithType: ConnectorException
  fullName: Steeltoe.Connector.ConnectorException
- uid: Steeltoe.Connector.MySql.MySqlTypeLocator.MySqlConnection*
  commentId: Overload:Steeltoe.Connector.MySql.MySqlTypeLocator.MySqlConnection
  name: MySqlConnection
  nameWithType: MySqlTypeLocator.MySqlConnection
  fullName: Steeltoe.Connector.MySql.MySqlTypeLocator.MySqlConnection
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
