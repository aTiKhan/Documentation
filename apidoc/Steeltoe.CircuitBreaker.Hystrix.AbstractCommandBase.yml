### YamlMime:ManagedReference
items:
- uid: Steeltoe.CircuitBreaker.Hystrix.AbstractCommandBase
  commentId: T:Steeltoe.CircuitBreaker.Hystrix.AbstractCommandBase
  id: AbstractCommandBase
  parent: Steeltoe.CircuitBreaker.Hystrix
  children:
  - Steeltoe.CircuitBreaker.Hystrix.AbstractCommandBase.#ctor
  - Steeltoe.CircuitBreaker.Hystrix.AbstractCommandBase._executionSemaphorePerCircuit
  - Steeltoe.CircuitBreaker.Hystrix.AbstractCommandBase._fallbackSemaphorePerCircuit
  langs:
  - csharp
  - vb
  name: AbstractCommandBase
  nameWithType: AbstractCommandBase
  fullName: Steeltoe.CircuitBreaker.Hystrix.AbstractCommandBase
  type: Class
  source:
    remote:
      path: src/CircuitBreaker/src/HystrixBase/AbstractCommandBase.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: AbstractCommandBase
    path: ../Steeltoe/src/CircuitBreaker/src/HystrixBase/AbstractCommandBase.cs
    startLine: 9
  assemblies:
  - Steeltoe.CircuitBreaker.HystrixBase
  namespace: Steeltoe.CircuitBreaker.Hystrix
  syntax:
    content: public abstract class AbstractCommandBase
    content.vb: Public MustInherit Class AbstractCommandBase
  inheritance:
  - System.Object
  derivedClasses:
  - Steeltoe.CircuitBreaker.Hystrix.AbstractCommand`1
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: Steeltoe.CircuitBreaker.Hystrix.AbstractCommandBase._executionSemaphorePerCircuit
  commentId: F:Steeltoe.CircuitBreaker.Hystrix.AbstractCommandBase._executionSemaphorePerCircuit
  id: _executionSemaphorePerCircuit
  parent: Steeltoe.CircuitBreaker.Hystrix.AbstractCommandBase
  langs:
  - csharp
  - vb
  name: _executionSemaphorePerCircuit
  nameWithType: AbstractCommandBase._executionSemaphorePerCircuit
  fullName: Steeltoe.CircuitBreaker.Hystrix.AbstractCommandBase._executionSemaphorePerCircuit
  type: Field
  source:
    remote:
      path: src/CircuitBreaker/src/HystrixBase/AbstractCommandBase.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: _executionSemaphorePerCircuit
    path: ../Steeltoe/src/CircuitBreaker/src/HystrixBase/AbstractCommandBase.cs
    startLine: 14
  assemblies:
  - Steeltoe.CircuitBreaker.HystrixBase
  namespace: Steeltoe.CircuitBreaker.Hystrix
  syntax:
    content: protected static readonly ConcurrentDictionary<string, SemaphoreSlim> _executionSemaphorePerCircuit
    return:
      type: System.Collections.Concurrent.ConcurrentDictionary{System.String,System.Threading.SemaphoreSlim}
    content.vb: Protected Shared ReadOnly _executionSemaphorePerCircuit As ConcurrentDictionary(Of String, SemaphoreSlim)
  modifiers.csharp:
  - protected
  - static
  - readonly
  modifiers.vb:
  - Protected
  - Shared
  - ReadOnly
- uid: Steeltoe.CircuitBreaker.Hystrix.AbstractCommandBase._fallbackSemaphorePerCircuit
  commentId: F:Steeltoe.CircuitBreaker.Hystrix.AbstractCommandBase._fallbackSemaphorePerCircuit
  id: _fallbackSemaphorePerCircuit
  parent: Steeltoe.CircuitBreaker.Hystrix.AbstractCommandBase
  langs:
  - csharp
  - vb
  name: _fallbackSemaphorePerCircuit
  nameWithType: AbstractCommandBase._fallbackSemaphorePerCircuit
  fullName: Steeltoe.CircuitBreaker.Hystrix.AbstractCommandBase._fallbackSemaphorePerCircuit
  type: Field
  source:
    remote:
      path: src/CircuitBreaker/src/HystrixBase/AbstractCommandBase.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: _fallbackSemaphorePerCircuit
    path: ../Steeltoe/src/CircuitBreaker/src/HystrixBase/AbstractCommandBase.cs
    startLine: 15
  assemblies:
  - Steeltoe.CircuitBreaker.HystrixBase
  namespace: Steeltoe.CircuitBreaker.Hystrix
  syntax:
    content: protected static readonly ConcurrentDictionary<string, SemaphoreSlim> _fallbackSemaphorePerCircuit
    return:
      type: System.Collections.Concurrent.ConcurrentDictionary{System.String,System.Threading.SemaphoreSlim}
    content.vb: Protected Shared ReadOnly _fallbackSemaphorePerCircuit As ConcurrentDictionary(Of String, SemaphoreSlim)
  modifiers.csharp:
  - protected
  - static
  - readonly
  modifiers.vb:
  - Protected
  - Shared
  - ReadOnly
- uid: Steeltoe.CircuitBreaker.Hystrix.AbstractCommandBase.#ctor
  commentId: M:Steeltoe.CircuitBreaker.Hystrix.AbstractCommandBase.#ctor
  id: '#ctor'
  parent: Steeltoe.CircuitBreaker.Hystrix.AbstractCommandBase
  langs:
  - csharp
  - vb
  name: AbstractCommandBase()
  nameWithType: AbstractCommandBase.AbstractCommandBase()
  fullName: Steeltoe.CircuitBreaker.Hystrix.AbstractCommandBase.AbstractCommandBase()
  type: Constructor
  source:
    remote:
      path: src/CircuitBreaker/src/HystrixBase/AbstractCommandBase.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: .ctor
    path: ../Steeltoe/src/CircuitBreaker/src/HystrixBase/AbstractCommandBase.cs
    startLine: 17
  assemblies:
  - Steeltoe.CircuitBreaker.HystrixBase
  namespace: Steeltoe.CircuitBreaker.Hystrix
  syntax:
    content: protected AbstractCommandBase()
    content.vb: Protected Sub New
  overload: Steeltoe.CircuitBreaker.Hystrix.AbstractCommandBase.#ctor*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
references:
- uid: Steeltoe.CircuitBreaker.Hystrix
  commentId: N:Steeltoe.CircuitBreaker.Hystrix
  name: Steeltoe.CircuitBreaker.Hystrix
  nameWithType: Steeltoe.CircuitBreaker.Hystrix
  fullName: Steeltoe.CircuitBreaker.Hystrix
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Collections.Concurrent.ConcurrentDictionary{System.String,System.Threading.SemaphoreSlim}
  commentId: T:System.Collections.Concurrent.ConcurrentDictionary{System.String,System.Threading.SemaphoreSlim}
  parent: System.Collections.Concurrent
  definition: System.Collections.Concurrent.ConcurrentDictionary`2
  name: ConcurrentDictionary<String, SemaphoreSlim>
  nameWithType: ConcurrentDictionary<String, SemaphoreSlim>
  fullName: System.Collections.Concurrent.ConcurrentDictionary<System.String, System.Threading.SemaphoreSlim>
  nameWithType.vb: ConcurrentDictionary(Of String, SemaphoreSlim)
  fullName.vb: System.Collections.Concurrent.ConcurrentDictionary(Of System.String, System.Threading.SemaphoreSlim)
  name.vb: ConcurrentDictionary(Of String, SemaphoreSlim)
  spec.csharp:
  - uid: System.Collections.Concurrent.ConcurrentDictionary`2
    name: ConcurrentDictionary
    nameWithType: ConcurrentDictionary
    fullName: System.Collections.Concurrent.ConcurrentDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.SemaphoreSlim
    name: SemaphoreSlim
    nameWithType: SemaphoreSlim
    fullName: System.Threading.SemaphoreSlim
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Concurrent.ConcurrentDictionary`2
    name: ConcurrentDictionary
    nameWithType: ConcurrentDictionary
    fullName: System.Collections.Concurrent.ConcurrentDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.SemaphoreSlim
    name: SemaphoreSlim
    nameWithType: SemaphoreSlim
    fullName: System.Threading.SemaphoreSlim
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Concurrent.ConcurrentDictionary`2
  commentId: T:System.Collections.Concurrent.ConcurrentDictionary`2
  isExternal: true
  name: ConcurrentDictionary<TKey, TValue>
  nameWithType: ConcurrentDictionary<TKey, TValue>
  fullName: System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>
  nameWithType.vb: ConcurrentDictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Concurrent.ConcurrentDictionary(Of TKey, TValue)
  name.vb: ConcurrentDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Concurrent.ConcurrentDictionary`2
    name: ConcurrentDictionary
    nameWithType: ConcurrentDictionary
    fullName: System.Collections.Concurrent.ConcurrentDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Concurrent.ConcurrentDictionary`2
    name: ConcurrentDictionary
    nameWithType: ConcurrentDictionary
    fullName: System.Collections.Concurrent.ConcurrentDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Concurrent
  commentId: N:System.Collections.Concurrent
  isExternal: true
  name: System.Collections.Concurrent
  nameWithType: System.Collections.Concurrent
  fullName: System.Collections.Concurrent
- uid: Steeltoe.CircuitBreaker.Hystrix.AbstractCommandBase.#ctor*
  commentId: Overload:Steeltoe.CircuitBreaker.Hystrix.AbstractCommandBase.#ctor
  name: AbstractCommandBase
  nameWithType: AbstractCommandBase.AbstractCommandBase
  fullName: Steeltoe.CircuitBreaker.Hystrix.AbstractCommandBase.AbstractCommandBase
