### YamlMime:ManagedReference
items:
- uid: Steeltoe.CircuitBreaker.Hystrix.Util.HystrixRollingPercentile
  commentId: T:Steeltoe.CircuitBreaker.Hystrix.Util.HystrixRollingPercentile
  id: HystrixRollingPercentile
  parent: Steeltoe.CircuitBreaker.Hystrix.Util
  children:
  - Steeltoe.CircuitBreaker.Hystrix.Util.HystrixRollingPercentile.#ctor(System.Int32,System.Int32,System.Int32,System.Boolean)
  - Steeltoe.CircuitBreaker.Hystrix.Util.HystrixRollingPercentile.AddValue(System.Int32[])
  - Steeltoe.CircuitBreaker.Hystrix.Util.HystrixRollingPercentile.GetPercentile(System.Double)
  - Steeltoe.CircuitBreaker.Hystrix.Util.HystrixRollingPercentile.Mean
  - Steeltoe.CircuitBreaker.Hystrix.Util.HystrixRollingPercentile.Reset
  langs:
  - csharp
  - vb
  name: HystrixRollingPercentile
  nameWithType: HystrixRollingPercentile
  fullName: Steeltoe.CircuitBreaker.Hystrix.Util.HystrixRollingPercentile
  type: Class
  source:
    remote:
      path: src/CircuitBreaker/src/HystrixBase/Util/HystrixRollingPercentile.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: HystrixRollingPercentile
    path: ../Steeltoe/src/CircuitBreaker/src/HystrixBase/Util/HystrixRollingPercentile.cs
    startLine: 12
  assemblies:
  - Steeltoe.CircuitBreaker.HystrixBase
  namespace: Steeltoe.CircuitBreaker.Hystrix.Util
  syntax:
    content: public class HystrixRollingPercentile
    content.vb: Public Class HystrixRollingPercentile
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Steeltoe.CircuitBreaker.Hystrix.Util.HystrixRollingPercentile.#ctor(System.Int32,System.Int32,System.Int32,System.Boolean)
  commentId: M:Steeltoe.CircuitBreaker.Hystrix.Util.HystrixRollingPercentile.#ctor(System.Int32,System.Int32,System.Int32,System.Boolean)
  id: '#ctor(System.Int32,System.Int32,System.Int32,System.Boolean)'
  parent: Steeltoe.CircuitBreaker.Hystrix.Util.HystrixRollingPercentile
  langs:
  - csharp
  - vb
  name: HystrixRollingPercentile(Int32, Int32, Int32, Boolean)
  nameWithType: HystrixRollingPercentile.HystrixRollingPercentile(Int32, Int32, Int32, Boolean)
  fullName: Steeltoe.CircuitBreaker.Hystrix.Util.HystrixRollingPercentile.HystrixRollingPercentile(System.Int32, System.Int32, System.Int32, System.Boolean)
  type: Constructor
  source:
    remote:
      path: src/CircuitBreaker/src/HystrixBase/Util/HystrixRollingPercentile.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: .ctor
    path: ../Steeltoe/src/CircuitBreaker/src/HystrixBase/Util/HystrixRollingPercentile.cs
    startLine: 30
  assemblies:
  - Steeltoe.CircuitBreaker.HystrixBase
  namespace: Steeltoe.CircuitBreaker.Hystrix.Util
  syntax:
    content: public HystrixRollingPercentile(int timeInMilliseconds, int numberOfBuckets, int bucketDataLength, bool enabled)
    parameters:
    - id: timeInMilliseconds
      type: System.Int32
    - id: numberOfBuckets
      type: System.Int32
    - id: bucketDataLength
      type: System.Int32
    - id: enabled
      type: System.Boolean
    content.vb: Public Sub New(timeInMilliseconds As Integer, numberOfBuckets As Integer, bucketDataLength As Integer, enabled As Boolean)
  overload: Steeltoe.CircuitBreaker.Hystrix.Util.HystrixRollingPercentile.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Steeltoe.CircuitBreaker.Hystrix.Util.HystrixRollingPercentile.AddValue(System.Int32[])
  commentId: M:Steeltoe.CircuitBreaker.Hystrix.Util.HystrixRollingPercentile.AddValue(System.Int32[])
  id: AddValue(System.Int32[])
  parent: Steeltoe.CircuitBreaker.Hystrix.Util.HystrixRollingPercentile
  langs:
  - csharp
  - vb
  name: AddValue(Int32[])
  nameWithType: HystrixRollingPercentile.AddValue(Int32[])
  fullName: Steeltoe.CircuitBreaker.Hystrix.Util.HystrixRollingPercentile.AddValue(System.Int32[])
  type: Method
  source:
    remote:
      path: src/CircuitBreaker/src/HystrixBase/Util/HystrixRollingPercentile.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: AddValue
    path: ../Steeltoe/src/CircuitBreaker/src/HystrixBase/Util/HystrixRollingPercentile.cs
    startLine: 54
  assemblies:
  - Steeltoe.CircuitBreaker.HystrixBase
  namespace: Steeltoe.CircuitBreaker.Hystrix.Util
  syntax:
    content: public void AddValue(params int[] value)
    parameters:
    - id: value
      type: System.Int32[]
    content.vb: Public Sub AddValue(ParamArray value As Integer())
  overload: Steeltoe.CircuitBreaker.Hystrix.Util.HystrixRollingPercentile.AddValue*
  nameWithType.vb: HystrixRollingPercentile.AddValue(Int32())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Steeltoe.CircuitBreaker.Hystrix.Util.HystrixRollingPercentile.AddValue(System.Int32())
  name.vb: AddValue(Int32())
- uid: Steeltoe.CircuitBreaker.Hystrix.Util.HystrixRollingPercentile.GetPercentile(System.Double)
  commentId: M:Steeltoe.CircuitBreaker.Hystrix.Util.HystrixRollingPercentile.GetPercentile(System.Double)
  id: GetPercentile(System.Double)
  parent: Steeltoe.CircuitBreaker.Hystrix.Util.HystrixRollingPercentile
  langs:
  - csharp
  - vb
  name: GetPercentile(Double)
  nameWithType: HystrixRollingPercentile.GetPercentile(Double)
  fullName: Steeltoe.CircuitBreaker.Hystrix.Util.HystrixRollingPercentile.GetPercentile(System.Double)
  type: Method
  source:
    remote:
      path: src/CircuitBreaker/src/HystrixBase/Util/HystrixRollingPercentile.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: GetPercentile
    path: ../Steeltoe/src/CircuitBreaker/src/HystrixBase/Util/HystrixRollingPercentile.cs
    startLine: 79
  assemblies:
  - Steeltoe.CircuitBreaker.HystrixBase
  namespace: Steeltoe.CircuitBreaker.Hystrix.Util
  syntax:
    content: public int GetPercentile(double percentile)
    parameters:
    - id: percentile
      type: System.Double
    return:
      type: System.Int32
    content.vb: Public Function GetPercentile(percentile As Double) As Integer
  overload: Steeltoe.CircuitBreaker.Hystrix.Util.HystrixRollingPercentile.GetPercentile*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Steeltoe.CircuitBreaker.Hystrix.Util.HystrixRollingPercentile.Mean
  commentId: P:Steeltoe.CircuitBreaker.Hystrix.Util.HystrixRollingPercentile.Mean
  id: Mean
  parent: Steeltoe.CircuitBreaker.Hystrix.Util.HystrixRollingPercentile
  langs:
  - csharp
  - vb
  name: Mean
  nameWithType: HystrixRollingPercentile.Mean
  fullName: Steeltoe.CircuitBreaker.Hystrix.Util.HystrixRollingPercentile.Mean
  type: Property
  source:
    remote:
      path: src/CircuitBreaker/src/HystrixBase/Util/HystrixRollingPercentile.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Mean
    path: ../Steeltoe/src/CircuitBreaker/src/HystrixBase/Util/HystrixRollingPercentile.cs
    startLine: 94
  assemblies:
  - Steeltoe.CircuitBreaker.HystrixBase
  namespace: Steeltoe.CircuitBreaker.Hystrix.Util
  syntax:
    content: public int Mean { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property Mean As Integer
  overload: Steeltoe.CircuitBreaker.Hystrix.Util.HystrixRollingPercentile.Mean*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Steeltoe.CircuitBreaker.Hystrix.Util.HystrixRollingPercentile.Reset
  commentId: M:Steeltoe.CircuitBreaker.Hystrix.Util.HystrixRollingPercentile.Reset
  id: Reset
  parent: Steeltoe.CircuitBreaker.Hystrix.Util.HystrixRollingPercentile
  langs:
  - csharp
  - vb
  name: Reset()
  nameWithType: HystrixRollingPercentile.Reset()
  fullName: Steeltoe.CircuitBreaker.Hystrix.Util.HystrixRollingPercentile.Reset()
  type: Method
  source:
    remote:
      path: src/CircuitBreaker/src/HystrixBase/Util/HystrixRollingPercentile.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Reset
    path: ../Steeltoe/src/CircuitBreaker/src/HystrixBase/Util/HystrixRollingPercentile.cs
    startLine: 112
  assemblies:
  - Steeltoe.CircuitBreaker.HystrixBase
  namespace: Steeltoe.CircuitBreaker.Hystrix.Util
  syntax:
    content: public void Reset()
    content.vb: Public Sub Reset
  overload: Steeltoe.CircuitBreaker.Hystrix.Util.HystrixRollingPercentile.Reset*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Steeltoe.CircuitBreaker.Hystrix.Util
  commentId: N:Steeltoe.CircuitBreaker.Hystrix.Util
  name: Steeltoe.CircuitBreaker.Hystrix.Util
  nameWithType: Steeltoe.CircuitBreaker.Hystrix.Util
  fullName: Steeltoe.CircuitBreaker.Hystrix.Util
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Steeltoe.CircuitBreaker.Hystrix.Util.HystrixRollingPercentile.#ctor*
  commentId: Overload:Steeltoe.CircuitBreaker.Hystrix.Util.HystrixRollingPercentile.#ctor
  name: HystrixRollingPercentile
  nameWithType: HystrixRollingPercentile.HystrixRollingPercentile
  fullName: Steeltoe.CircuitBreaker.Hystrix.Util.HystrixRollingPercentile.HystrixRollingPercentile
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Steeltoe.CircuitBreaker.Hystrix.Util.HystrixRollingPercentile.AddValue*
  commentId: Overload:Steeltoe.CircuitBreaker.Hystrix.Util.HystrixRollingPercentile.AddValue
  name: AddValue
  nameWithType: HystrixRollingPercentile.AddValue
  fullName: Steeltoe.CircuitBreaker.Hystrix.Util.HystrixRollingPercentile.AddValue
- uid: System.Int32[]
  isExternal: true
  name: Int32[]
  nameWithType: Int32[]
  fullName: System.Int32[]
  nameWithType.vb: Int32()
  fullName.vb: System.Int32()
  name.vb: Int32()
  spec.csharp:
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Steeltoe.CircuitBreaker.Hystrix.Util.HystrixRollingPercentile.GetPercentile*
  commentId: Overload:Steeltoe.CircuitBreaker.Hystrix.Util.HystrixRollingPercentile.GetPercentile
  name: GetPercentile
  nameWithType: HystrixRollingPercentile.GetPercentile
  fullName: Steeltoe.CircuitBreaker.Hystrix.Util.HystrixRollingPercentile.GetPercentile
- uid: System.Double
  commentId: T:System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: Steeltoe.CircuitBreaker.Hystrix.Util.HystrixRollingPercentile.Mean*
  commentId: Overload:Steeltoe.CircuitBreaker.Hystrix.Util.HystrixRollingPercentile.Mean
  name: Mean
  nameWithType: HystrixRollingPercentile.Mean
  fullName: Steeltoe.CircuitBreaker.Hystrix.Util.HystrixRollingPercentile.Mean
- uid: Steeltoe.CircuitBreaker.Hystrix.Util.HystrixRollingPercentile.Reset*
  commentId: Overload:Steeltoe.CircuitBreaker.Hystrix.Util.HystrixRollingPercentile.Reset
  name: Reset
  nameWithType: HystrixRollingPercentile.Reset
  fullName: Steeltoe.CircuitBreaker.Hystrix.Util.HystrixRollingPercentile.Reset
