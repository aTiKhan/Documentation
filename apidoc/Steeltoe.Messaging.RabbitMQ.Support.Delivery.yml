### YamlMime:ManagedReference
items:
- uid: Steeltoe.Messaging.RabbitMQ.Support.Delivery
  commentId: T:Steeltoe.Messaging.RabbitMQ.Support.Delivery
  id: Delivery
  parent: Steeltoe.Messaging.RabbitMQ.Support
  children:
  - Steeltoe.Messaging.RabbitMQ.Support.Delivery.#ctor(System.String,Steeltoe.Messaging.RabbitMQ.Core.Envelope,RabbitMQ.Client.IBasicProperties,System.Byte[],System.String)
  - Steeltoe.Messaging.RabbitMQ.Support.Delivery.Body
  - Steeltoe.Messaging.RabbitMQ.Support.Delivery.ConsumerTag
  - Steeltoe.Messaging.RabbitMQ.Support.Delivery.Envelope
  - Steeltoe.Messaging.RabbitMQ.Support.Delivery.Properties
  - Steeltoe.Messaging.RabbitMQ.Support.Delivery.Queue
  langs:
  - csharp
  - vb
  name: Delivery
  nameWithType: Delivery
  fullName: Steeltoe.Messaging.RabbitMQ.Support.Delivery
  type: Class
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Support/Delivery.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Delivery
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Support/Delivery.cs
    startLine: 9
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Support
  syntax:
    content: public class Delivery
    content.vb: Public Class Delivery
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Steeltoe.Messaging.RabbitMQ.Support.Delivery.#ctor(System.String,Steeltoe.Messaging.RabbitMQ.Core.Envelope,RabbitMQ.Client.IBasicProperties,System.Byte[],System.String)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Support.Delivery.#ctor(System.String,Steeltoe.Messaging.RabbitMQ.Core.Envelope,RabbitMQ.Client.IBasicProperties,System.Byte[],System.String)
  id: '#ctor(System.String,Steeltoe.Messaging.RabbitMQ.Core.Envelope,RabbitMQ.Client.IBasicProperties,System.Byte[],System.String)'
  parent: Steeltoe.Messaging.RabbitMQ.Support.Delivery
  langs:
  - csharp
  - vb
  name: Delivery(String, Envelope, IBasicProperties, Byte[], String)
  nameWithType: Delivery.Delivery(String, Envelope, IBasicProperties, Byte[], String)
  fullName: Steeltoe.Messaging.RabbitMQ.Support.Delivery.Delivery(System.String, Steeltoe.Messaging.RabbitMQ.Core.Envelope, RabbitMQ.Client.IBasicProperties, System.Byte[], System.String)
  type: Constructor
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Support/Delivery.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: .ctor
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Support/Delivery.cs
    startLine: 11
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Support
  syntax:
    content: public Delivery(string consumerTag, Envelope envelope, IBasicProperties properties, byte[] body, string queue)
    parameters:
    - id: consumerTag
      type: System.String
    - id: envelope
      type: Steeltoe.Messaging.RabbitMQ.Core.Envelope
    - id: properties
      type: RabbitMQ.Client.IBasicProperties
    - id: body
      type: System.Byte[]
    - id: queue
      type: System.String
    content.vb: Public Sub New(consumerTag As String, envelope As Envelope, properties As IBasicProperties, body As Byte(), queue As String)
  overload: Steeltoe.Messaging.RabbitMQ.Support.Delivery.#ctor*
  nameWithType.vb: Delivery.Delivery(String, Envelope, IBasicProperties, Byte(), String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Steeltoe.Messaging.RabbitMQ.Support.Delivery.Delivery(System.String, Steeltoe.Messaging.RabbitMQ.Core.Envelope, RabbitMQ.Client.IBasicProperties, System.Byte(), System.String)
  name.vb: Delivery(String, Envelope, IBasicProperties, Byte(), String)
- uid: Steeltoe.Messaging.RabbitMQ.Support.Delivery.ConsumerTag
  commentId: P:Steeltoe.Messaging.RabbitMQ.Support.Delivery.ConsumerTag
  id: ConsumerTag
  parent: Steeltoe.Messaging.RabbitMQ.Support.Delivery
  langs:
  - csharp
  - vb
  name: ConsumerTag
  nameWithType: Delivery.ConsumerTag
  fullName: Steeltoe.Messaging.RabbitMQ.Support.Delivery.ConsumerTag
  type: Property
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Support/Delivery.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: ConsumerTag
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Support/Delivery.cs
    startLine: 20
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Support
  syntax:
    content: public string ConsumerTag { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property ConsumerTag As String
  overload: Steeltoe.Messaging.RabbitMQ.Support.Delivery.ConsumerTag*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Steeltoe.Messaging.RabbitMQ.Support.Delivery.Envelope
  commentId: P:Steeltoe.Messaging.RabbitMQ.Support.Delivery.Envelope
  id: Envelope
  parent: Steeltoe.Messaging.RabbitMQ.Support.Delivery
  langs:
  - csharp
  - vb
  name: Envelope
  nameWithType: Delivery.Envelope
  fullName: Steeltoe.Messaging.RabbitMQ.Support.Delivery.Envelope
  type: Property
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Support/Delivery.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Envelope
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Support/Delivery.cs
    startLine: 22
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Support
  syntax:
    content: public Envelope Envelope { get; }
    parameters: []
    return:
      type: Steeltoe.Messaging.RabbitMQ.Core.Envelope
    content.vb: Public ReadOnly Property Envelope As Envelope
  overload: Steeltoe.Messaging.RabbitMQ.Support.Delivery.Envelope*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Steeltoe.Messaging.RabbitMQ.Support.Delivery.Properties
  commentId: P:Steeltoe.Messaging.RabbitMQ.Support.Delivery.Properties
  id: Properties
  parent: Steeltoe.Messaging.RabbitMQ.Support.Delivery
  langs:
  - csharp
  - vb
  name: Properties
  nameWithType: Delivery.Properties
  fullName: Steeltoe.Messaging.RabbitMQ.Support.Delivery.Properties
  type: Property
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Support/Delivery.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Properties
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Support/Delivery.cs
    startLine: 24
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Support
  syntax:
    content: public IBasicProperties Properties { get; }
    parameters: []
    return:
      type: RabbitMQ.Client.IBasicProperties
    content.vb: Public ReadOnly Property Properties As IBasicProperties
  overload: Steeltoe.Messaging.RabbitMQ.Support.Delivery.Properties*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Steeltoe.Messaging.RabbitMQ.Support.Delivery.Body
  commentId: P:Steeltoe.Messaging.RabbitMQ.Support.Delivery.Body
  id: Body
  parent: Steeltoe.Messaging.RabbitMQ.Support.Delivery
  langs:
  - csharp
  - vb
  name: Body
  nameWithType: Delivery.Body
  fullName: Steeltoe.Messaging.RabbitMQ.Support.Delivery.Body
  type: Property
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Support/Delivery.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Body
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Support/Delivery.cs
    startLine: 26
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Support
  syntax:
    content: public byte[] Body { get; }
    parameters: []
    return:
      type: System.Byte[]
    content.vb: Public ReadOnly Property Body As Byte()
  overload: Steeltoe.Messaging.RabbitMQ.Support.Delivery.Body*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Steeltoe.Messaging.RabbitMQ.Support.Delivery.Queue
  commentId: P:Steeltoe.Messaging.RabbitMQ.Support.Delivery.Queue
  id: Queue
  parent: Steeltoe.Messaging.RabbitMQ.Support.Delivery
  langs:
  - csharp
  - vb
  name: Queue
  nameWithType: Delivery.Queue
  fullName: Steeltoe.Messaging.RabbitMQ.Support.Delivery.Queue
  type: Property
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Support/Delivery.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Queue
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Support/Delivery.cs
    startLine: 28
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Support
  syntax:
    content: public string Queue { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property Queue As String
  overload: Steeltoe.Messaging.RabbitMQ.Support.Delivery.Queue*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: Steeltoe.Messaging.RabbitMQ.Support
  commentId: N:Steeltoe.Messaging.RabbitMQ.Support
  name: Steeltoe.Messaging.RabbitMQ.Support
  nameWithType: Steeltoe.Messaging.RabbitMQ.Support
  fullName: Steeltoe.Messaging.RabbitMQ.Support
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Steeltoe.Messaging.RabbitMQ.Support.Delivery.#ctor*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Support.Delivery.#ctor
  name: Delivery
  nameWithType: Delivery.Delivery
  fullName: Steeltoe.Messaging.RabbitMQ.Support.Delivery.Delivery
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Steeltoe.Messaging.RabbitMQ.Core.Envelope
  commentId: T:Steeltoe.Messaging.RabbitMQ.Core.Envelope
  parent: Steeltoe.Messaging.RabbitMQ.Core
  name: Envelope
  nameWithType: Envelope
  fullName: Steeltoe.Messaging.RabbitMQ.Core.Envelope
- uid: RabbitMQ.Client.IBasicProperties
  commentId: T:RabbitMQ.Client.IBasicProperties
  parent: RabbitMQ.Client
  isExternal: true
  name: IBasicProperties
  nameWithType: IBasicProperties
  fullName: RabbitMQ.Client.IBasicProperties
- uid: System.Byte[]
  isExternal: true
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  nameWithType.vb: Byte()
  fullName.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Steeltoe.Messaging.RabbitMQ.Core
  commentId: N:Steeltoe.Messaging.RabbitMQ.Core
  name: Steeltoe.Messaging.RabbitMQ.Core
  nameWithType: Steeltoe.Messaging.RabbitMQ.Core
  fullName: Steeltoe.Messaging.RabbitMQ.Core
- uid: RabbitMQ.Client
  commentId: N:RabbitMQ.Client
  isExternal: true
  name: RabbitMQ.Client
  nameWithType: RabbitMQ.Client
  fullName: RabbitMQ.Client
- uid: Steeltoe.Messaging.RabbitMQ.Support.Delivery.ConsumerTag*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Support.Delivery.ConsumerTag
  name: ConsumerTag
  nameWithType: Delivery.ConsumerTag
  fullName: Steeltoe.Messaging.RabbitMQ.Support.Delivery.ConsumerTag
- uid: Steeltoe.Messaging.RabbitMQ.Support.Delivery.Envelope*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Support.Delivery.Envelope
  name: Envelope
  nameWithType: Delivery.Envelope
  fullName: Steeltoe.Messaging.RabbitMQ.Support.Delivery.Envelope
- uid: Steeltoe.Messaging.RabbitMQ.Support.Delivery.Properties*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Support.Delivery.Properties
  name: Properties
  nameWithType: Delivery.Properties
  fullName: Steeltoe.Messaging.RabbitMQ.Support.Delivery.Properties
- uid: Steeltoe.Messaging.RabbitMQ.Support.Delivery.Body*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Support.Delivery.Body
  name: Body
  nameWithType: Delivery.Body
  fullName: Steeltoe.Messaging.RabbitMQ.Support.Delivery.Body
- uid: Steeltoe.Messaging.RabbitMQ.Support.Delivery.Queue*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Support.Delivery.Queue
  name: Queue
  nameWithType: Delivery.Queue
  fullName: Steeltoe.Messaging.RabbitMQ.Support.Delivery.Queue
