### YamlMime:ManagedReference
items:
- uid: Steeltoe.Extensions.Logging.ILoggerConfiguration
  commentId: T:Steeltoe.Extensions.Logging.ILoggerConfiguration
  id: ILoggerConfiguration
  parent: Steeltoe.Extensions.Logging
  children:
  - Steeltoe.Extensions.Logging.ILoggerConfiguration.ConfiguredLevel
  - Steeltoe.Extensions.Logging.ILoggerConfiguration.EffectiveLevel
  - Steeltoe.Extensions.Logging.ILoggerConfiguration.Name
  langs:
  - csharp
  - vb
  name: ILoggerConfiguration
  nameWithType: ILoggerConfiguration
  fullName: Steeltoe.Extensions.Logging.ILoggerConfiguration
  type: Interface
  source:
    remote:
      path: src/Logging/src/Abstractions/ILoggerConfiguration.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: ILoggerConfiguration
    path: ../Steeltoe/src/Logging/src/Abstractions/ILoggerConfiguration.cs
    startLine: 8
  assemblies:
  - Steeltoe.Extensions.Logging.Abstractions
  namespace: Steeltoe.Extensions.Logging
  syntax:
    content: public interface ILoggerConfiguration
    content.vb: Public Interface ILoggerConfiguration
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Steeltoe.Extensions.Logging.ILoggerConfiguration.Name
  commentId: P:Steeltoe.Extensions.Logging.ILoggerConfiguration.Name
  id: Name
  parent: Steeltoe.Extensions.Logging.ILoggerConfiguration
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: ILoggerConfiguration.Name
  fullName: Steeltoe.Extensions.Logging.ILoggerConfiguration.Name
  type: Property
  source:
    remote:
      path: src/Logging/src/Abstractions/ILoggerConfiguration.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Name
    path: ../Steeltoe/src/Logging/src/Abstractions/ILoggerConfiguration.cs
    startLine: 10
  assemblies:
  - Steeltoe.Extensions.Logging.Abstractions
  namespace: Steeltoe.Extensions.Logging
  syntax:
    content: string Name { get; }
    parameters: []
    return:
      type: System.String
    content.vb: ReadOnly Property Name As String
  overload: Steeltoe.Extensions.Logging.ILoggerConfiguration.Name*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Steeltoe.Extensions.Logging.ILoggerConfiguration.ConfiguredLevel
  commentId: P:Steeltoe.Extensions.Logging.ILoggerConfiguration.ConfiguredLevel
  id: ConfiguredLevel
  parent: Steeltoe.Extensions.Logging.ILoggerConfiguration
  langs:
  - csharp
  - vb
  name: ConfiguredLevel
  nameWithType: ILoggerConfiguration.ConfiguredLevel
  fullName: Steeltoe.Extensions.Logging.ILoggerConfiguration.ConfiguredLevel
  type: Property
  source:
    remote:
      path: src/Logging/src/Abstractions/ILoggerConfiguration.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: ConfiguredLevel
    path: ../Steeltoe/src/Logging/src/Abstractions/ILoggerConfiguration.cs
    startLine: 12
  assemblies:
  - Steeltoe.Extensions.Logging.Abstractions
  namespace: Steeltoe.Extensions.Logging
  syntax:
    content: LogLevel? ConfiguredLevel { get; }
    parameters: []
    return:
      type: System.Nullable{LogLevel}
    content.vb: ReadOnly Property ConfiguredLevel As LogLevel?
  overload: Steeltoe.Extensions.Logging.ILoggerConfiguration.ConfiguredLevel*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Steeltoe.Extensions.Logging.ILoggerConfiguration.EffectiveLevel
  commentId: P:Steeltoe.Extensions.Logging.ILoggerConfiguration.EffectiveLevel
  id: EffectiveLevel
  parent: Steeltoe.Extensions.Logging.ILoggerConfiguration
  langs:
  - csharp
  - vb
  name: EffectiveLevel
  nameWithType: ILoggerConfiguration.EffectiveLevel
  fullName: Steeltoe.Extensions.Logging.ILoggerConfiguration.EffectiveLevel
  type: Property
  source:
    remote:
      path: src/Logging/src/Abstractions/ILoggerConfiguration.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: EffectiveLevel
    path: ../Steeltoe/src/Logging/src/Abstractions/ILoggerConfiguration.cs
    startLine: 14
  assemblies:
  - Steeltoe.Extensions.Logging.Abstractions
  namespace: Steeltoe.Extensions.Logging
  syntax:
    content: LogLevel EffectiveLevel { get; }
    parameters: []
    return:
      type: LogLevel
    content.vb: ReadOnly Property EffectiveLevel As LogLevel
  overload: Steeltoe.Extensions.Logging.ILoggerConfiguration.EffectiveLevel*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
references:
- uid: Steeltoe.Extensions.Logging
  commentId: N:Steeltoe.Extensions.Logging
  name: Steeltoe.Extensions.Logging
  nameWithType: Steeltoe.Extensions.Logging
  fullName: Steeltoe.Extensions.Logging
- uid: Steeltoe.Extensions.Logging.ILoggerConfiguration.Name*
  commentId: Overload:Steeltoe.Extensions.Logging.ILoggerConfiguration.Name
  name: Name
  nameWithType: ILoggerConfiguration.Name
  fullName: Steeltoe.Extensions.Logging.ILoggerConfiguration.Name
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Steeltoe.Extensions.Logging.ILoggerConfiguration.ConfiguredLevel*
  commentId: Overload:Steeltoe.Extensions.Logging.ILoggerConfiguration.ConfiguredLevel
  name: ConfiguredLevel
  nameWithType: ILoggerConfiguration.ConfiguredLevel
  fullName: Steeltoe.Extensions.Logging.ILoggerConfiguration.ConfiguredLevel
- uid: System.Nullable{LogLevel}
  commentId: T:System.Nullable{LogLevel}
  parent: System
  definition: System.Nullable`1
  name: Nullable<LogLevel>
  nameWithType: Nullable<LogLevel>
  fullName: System.Nullable<LogLevel>
  nameWithType.vb: Nullable(Of LogLevel)
  fullName.vb: System.Nullable(Of LogLevel)
  name.vb: Nullable(Of LogLevel)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: LogLevel
    name: LogLevel
    nameWithType: LogLevel
    fullName: LogLevel
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: LogLevel
    name: LogLevel
    nameWithType: LogLevel
    fullName: LogLevel
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Extensions.Logging.ILoggerConfiguration.EffectiveLevel*
  commentId: Overload:Steeltoe.Extensions.Logging.ILoggerConfiguration.EffectiveLevel
  name: EffectiveLevel
  nameWithType: ILoggerConfiguration.EffectiveLevel
  fullName: Steeltoe.Extensions.Logging.ILoggerConfiguration.EffectiveLevel
- uid: LogLevel
  isExternal: true
  name: LogLevel
  nameWithType: LogLevel
  fullName: LogLevel
