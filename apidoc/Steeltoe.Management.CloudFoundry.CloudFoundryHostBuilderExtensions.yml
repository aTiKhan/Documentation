### YamlMime:ManagedReference
items:
- uid: Steeltoe.Management.CloudFoundry.CloudFoundryHostBuilderExtensions
  commentId: T:Steeltoe.Management.CloudFoundry.CloudFoundryHostBuilderExtensions
  id: CloudFoundryHostBuilderExtensions
  parent: Steeltoe.Management.CloudFoundry
  children:
  - Steeltoe.Management.CloudFoundry.CloudFoundryHostBuilderExtensions.AddCloudFoundryActuators(Microsoft.AspNetCore.Hosting.IWebHostBuilder,Steeltoe.Management.Endpoint.MediaTypeVersion,System.Action{Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicyBuilder})
  - Steeltoe.Management.CloudFoundry.CloudFoundryHostBuilderExtensions.AddCloudFoundryActuators(Microsoft.AspNetCore.Hosting.IWebHostBuilder,System.Action{Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicyBuilder})
  - Steeltoe.Management.CloudFoundry.CloudFoundryHostBuilderExtensions.AddCloudFoundryActuators(Microsoft.Extensions.Hosting.IHostBuilder,Steeltoe.Management.Endpoint.MediaTypeVersion,System.Action{Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicyBuilder})
  - Steeltoe.Management.CloudFoundry.CloudFoundryHostBuilderExtensions.AddCloudFoundryActuators(Microsoft.Extensions.Hosting.IHostBuilder,System.Action{Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicyBuilder})
  langs:
  - csharp
  - vb
  name: CloudFoundryHostBuilderExtensions
  nameWithType: CloudFoundryHostBuilderExtensions
  fullName: Steeltoe.Management.CloudFoundry.CloudFoundryHostBuilderExtensions
  type: Class
  source:
    remote:
      path: src/Management/src/CloudFoundryCore/CloudFoundryHostBuilderExtensions.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: CloudFoundryHostBuilderExtensions
    path: ../Steeltoe/src/Management/src/CloudFoundryCore/CloudFoundryHostBuilderExtensions.cs
    startLine: 15
  assemblies:
  - Steeltoe.Management.CloudFoundryCore
  namespace: Steeltoe.Management.CloudFoundry
  syntax:
    content: public static class CloudFoundryHostBuilderExtensions
    content.vb: Public Module CloudFoundryHostBuilderExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Steeltoe.Management.CloudFoundry.CloudFoundryHostBuilderExtensions.AddCloudFoundryActuators(Microsoft.AspNetCore.Hosting.IWebHostBuilder,System.Action{Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicyBuilder})
  commentId: M:Steeltoe.Management.CloudFoundry.CloudFoundryHostBuilderExtensions.AddCloudFoundryActuators(Microsoft.AspNetCore.Hosting.IWebHostBuilder,System.Action{Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicyBuilder})
  id: AddCloudFoundryActuators(Microsoft.AspNetCore.Hosting.IWebHostBuilder,System.Action{Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicyBuilder})
  isExtensionMethod: true
  parent: Steeltoe.Management.CloudFoundry.CloudFoundryHostBuilderExtensions
  langs:
  - csharp
  - vb
  name: AddCloudFoundryActuators(IWebHostBuilder, Action<CorsPolicyBuilder>)
  nameWithType: CloudFoundryHostBuilderExtensions.AddCloudFoundryActuators(IWebHostBuilder, Action<CorsPolicyBuilder>)
  fullName: Steeltoe.Management.CloudFoundry.CloudFoundryHostBuilderExtensions.AddCloudFoundryActuators(Microsoft.AspNetCore.Hosting.IWebHostBuilder, System.Action<Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicyBuilder>)
  type: Method
  source:
    remote:
      path: src/Management/src/CloudFoundryCore/CloudFoundryHostBuilderExtensions.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: AddCloudFoundryActuators
    path: ../Steeltoe/src/Management/src/CloudFoundryCore/CloudFoundryHostBuilderExtensions.cs
    startLine: 22
  assemblies:
  - Steeltoe.Management.CloudFoundryCore
  namespace: Steeltoe.Management.CloudFoundry
  summary: "\nAdds all Actuators supported by Apps Manager. Also configures DynamicLogging if not previously setup.\n"
  example: []
  syntax:
    content: public static IWebHostBuilder AddCloudFoundryActuators(this IWebHostBuilder webHostBuilder, Action<CorsPolicyBuilder> buildCorsPolicy = null)
    parameters:
    - id: webHostBuilder
      type: Microsoft.AspNetCore.Hosting.IWebHostBuilder
      description: Your Hostbuilder
    - id: buildCorsPolicy
      type: System.Action{Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicyBuilder}
      description: 'Customize the CORS policy. '
    return:
      type: Microsoft.AspNetCore.Hosting.IWebHostBuilder
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function AddCloudFoundryActuators(webHostBuilder As IWebHostBuilder, buildCorsPolicy As Action(Of CorsPolicyBuilder) = Nothing) As IWebHostBuilder
  overload: Steeltoe.Management.CloudFoundry.CloudFoundryHostBuilderExtensions.AddCloudFoundryActuators*
  nameWithType.vb: CloudFoundryHostBuilderExtensions.AddCloudFoundryActuators(IWebHostBuilder, Action(Of CorsPolicyBuilder))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Steeltoe.Management.CloudFoundry.CloudFoundryHostBuilderExtensions.AddCloudFoundryActuators(Microsoft.AspNetCore.Hosting.IWebHostBuilder, System.Action(Of Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicyBuilder))
  name.vb: AddCloudFoundryActuators(IWebHostBuilder, Action(Of CorsPolicyBuilder))
- uid: Steeltoe.Management.CloudFoundry.CloudFoundryHostBuilderExtensions.AddCloudFoundryActuators(Microsoft.Extensions.Hosting.IHostBuilder,System.Action{Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicyBuilder})
  commentId: M:Steeltoe.Management.CloudFoundry.CloudFoundryHostBuilderExtensions.AddCloudFoundryActuators(Microsoft.Extensions.Hosting.IHostBuilder,System.Action{Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicyBuilder})
  id: AddCloudFoundryActuators(Microsoft.Extensions.Hosting.IHostBuilder,System.Action{Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicyBuilder})
  isExtensionMethod: true
  parent: Steeltoe.Management.CloudFoundry.CloudFoundryHostBuilderExtensions
  langs:
  - csharp
  - vb
  name: AddCloudFoundryActuators(IHostBuilder, Action<CorsPolicyBuilder>)
  nameWithType: CloudFoundryHostBuilderExtensions.AddCloudFoundryActuators(IHostBuilder, Action<CorsPolicyBuilder>)
  fullName: Steeltoe.Management.CloudFoundry.CloudFoundryHostBuilderExtensions.AddCloudFoundryActuators(Microsoft.Extensions.Hosting.IHostBuilder, System.Action<Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicyBuilder>)
  type: Method
  source:
    remote:
      path: src/Management/src/CloudFoundryCore/CloudFoundryHostBuilderExtensions.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: AddCloudFoundryActuators
    path: ../Steeltoe/src/Management/src/CloudFoundryCore/CloudFoundryHostBuilderExtensions.cs
    startLine: 32
  assemblies:
  - Steeltoe.Management.CloudFoundryCore
  namespace: Steeltoe.Management.CloudFoundry
  summary: "\nAdds all Actuators supported by Apps Manager. Also configures DynamicLogging if not previously setup.\n"
  example: []
  syntax:
    content: public static IHostBuilder AddCloudFoundryActuators(this IHostBuilder hostBuilder, Action<CorsPolicyBuilder> buildCorsPolicy = null)
    parameters:
    - id: hostBuilder
      type: Microsoft.Extensions.Hosting.IHostBuilder
      description: Your Hostbuilder
    - id: buildCorsPolicy
      type: System.Action{Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicyBuilder}
      description: 'Customize the CORS policy. '
    return:
      type: Microsoft.Extensions.Hosting.IHostBuilder
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function AddCloudFoundryActuators(hostBuilder As IHostBuilder, buildCorsPolicy As Action(Of CorsPolicyBuilder) = Nothing) As IHostBuilder
  overload: Steeltoe.Management.CloudFoundry.CloudFoundryHostBuilderExtensions.AddCloudFoundryActuators*
  nameWithType.vb: CloudFoundryHostBuilderExtensions.AddCloudFoundryActuators(IHostBuilder, Action(Of CorsPolicyBuilder))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Steeltoe.Management.CloudFoundry.CloudFoundryHostBuilderExtensions.AddCloudFoundryActuators(Microsoft.Extensions.Hosting.IHostBuilder, System.Action(Of Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicyBuilder))
  name.vb: AddCloudFoundryActuators(IHostBuilder, Action(Of CorsPolicyBuilder))
- uid: Steeltoe.Management.CloudFoundry.CloudFoundryHostBuilderExtensions.AddCloudFoundryActuators(Microsoft.AspNetCore.Hosting.IWebHostBuilder,Steeltoe.Management.Endpoint.MediaTypeVersion,System.Action{Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicyBuilder})
  commentId: M:Steeltoe.Management.CloudFoundry.CloudFoundryHostBuilderExtensions.AddCloudFoundryActuators(Microsoft.AspNetCore.Hosting.IWebHostBuilder,Steeltoe.Management.Endpoint.MediaTypeVersion,System.Action{Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicyBuilder})
  id: AddCloudFoundryActuators(Microsoft.AspNetCore.Hosting.IWebHostBuilder,Steeltoe.Management.Endpoint.MediaTypeVersion,System.Action{Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicyBuilder})
  isExtensionMethod: true
  parent: Steeltoe.Management.CloudFoundry.CloudFoundryHostBuilderExtensions
  langs:
  - csharp
  - vb
  name: AddCloudFoundryActuators(IWebHostBuilder, MediaTypeVersion, Action<CorsPolicyBuilder>)
  nameWithType: CloudFoundryHostBuilderExtensions.AddCloudFoundryActuators(IWebHostBuilder, MediaTypeVersion, Action<CorsPolicyBuilder>)
  fullName: Steeltoe.Management.CloudFoundry.CloudFoundryHostBuilderExtensions.AddCloudFoundryActuators(Microsoft.AspNetCore.Hosting.IWebHostBuilder, Steeltoe.Management.Endpoint.MediaTypeVersion, System.Action<Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicyBuilder>)
  type: Method
  source:
    remote:
      path: src/Management/src/CloudFoundryCore/CloudFoundryHostBuilderExtensions.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: AddCloudFoundryActuators
    path: ../Steeltoe/src/Management/src/CloudFoundryCore/CloudFoundryHostBuilderExtensions.cs
    startLine: 43
  assemblies:
  - Steeltoe.Management.CloudFoundryCore
  namespace: Steeltoe.Management.CloudFoundry
  summary: "\nAdds all Actuators supported by Apps Manager. Also configures DynamicLogging if not previously setup.\n"
  example: []
  syntax:
    content: public static IWebHostBuilder AddCloudFoundryActuators(this IWebHostBuilder webHostBuilder, MediaTypeVersion mediaTypeVersion, Action<CorsPolicyBuilder> buildCorsPolicy = null)
    parameters:
    - id: webHostBuilder
      type: Microsoft.AspNetCore.Hosting.IWebHostBuilder
      description: Your Hostbuilder
    - id: mediaTypeVersion
      type: Steeltoe.Management.Endpoint.MediaTypeVersion
      description: Spring Boot media type version to use with responses
    - id: buildCorsPolicy
      type: System.Action{Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicyBuilder}
      description: 'Customize the CORS policy. '
    return:
      type: Microsoft.AspNetCore.Hosting.IWebHostBuilder
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function AddCloudFoundryActuators(webHostBuilder As IWebHostBuilder, mediaTypeVersion As MediaTypeVersion, buildCorsPolicy As Action(Of CorsPolicyBuilder) = Nothing) As IWebHostBuilder
  overload: Steeltoe.Management.CloudFoundry.CloudFoundryHostBuilderExtensions.AddCloudFoundryActuators*
  nameWithType.vb: CloudFoundryHostBuilderExtensions.AddCloudFoundryActuators(IWebHostBuilder, MediaTypeVersion, Action(Of CorsPolicyBuilder))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Steeltoe.Management.CloudFoundry.CloudFoundryHostBuilderExtensions.AddCloudFoundryActuators(Microsoft.AspNetCore.Hosting.IWebHostBuilder, Steeltoe.Management.Endpoint.MediaTypeVersion, System.Action(Of Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicyBuilder))
  name.vb: AddCloudFoundryActuators(IWebHostBuilder, MediaTypeVersion, Action(Of CorsPolicyBuilder))
- uid: Steeltoe.Management.CloudFoundry.CloudFoundryHostBuilderExtensions.AddCloudFoundryActuators(Microsoft.Extensions.Hosting.IHostBuilder,Steeltoe.Management.Endpoint.MediaTypeVersion,System.Action{Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicyBuilder})
  commentId: M:Steeltoe.Management.CloudFoundry.CloudFoundryHostBuilderExtensions.AddCloudFoundryActuators(Microsoft.Extensions.Hosting.IHostBuilder,Steeltoe.Management.Endpoint.MediaTypeVersion,System.Action{Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicyBuilder})
  id: AddCloudFoundryActuators(Microsoft.Extensions.Hosting.IHostBuilder,Steeltoe.Management.Endpoint.MediaTypeVersion,System.Action{Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicyBuilder})
  isExtensionMethod: true
  parent: Steeltoe.Management.CloudFoundry.CloudFoundryHostBuilderExtensions
  langs:
  - csharp
  - vb
  name: AddCloudFoundryActuators(IHostBuilder, MediaTypeVersion, Action<CorsPolicyBuilder>)
  nameWithType: CloudFoundryHostBuilderExtensions.AddCloudFoundryActuators(IHostBuilder, MediaTypeVersion, Action<CorsPolicyBuilder>)
  fullName: Steeltoe.Management.CloudFoundry.CloudFoundryHostBuilderExtensions.AddCloudFoundryActuators(Microsoft.Extensions.Hosting.IHostBuilder, Steeltoe.Management.Endpoint.MediaTypeVersion, System.Action<Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicyBuilder>)
  type: Method
  source:
    remote:
      path: src/Management/src/CloudFoundryCore/CloudFoundryHostBuilderExtensions.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: AddCloudFoundryActuators
    path: ../Steeltoe/src/Management/src/CloudFoundryCore/CloudFoundryHostBuilderExtensions.cs
    startLine: 56
  assemblies:
  - Steeltoe.Management.CloudFoundryCore
  namespace: Steeltoe.Management.CloudFoundry
  summary: "\nAdds all Actuators supported by Apps Manager. Also configures DynamicLogging if not previously setup.\n"
  example: []
  syntax:
    content: public static IHostBuilder AddCloudFoundryActuators(this IHostBuilder hostBuilder, MediaTypeVersion mediaTypeVersion, Action<CorsPolicyBuilder> buildCorsPolicy = null)
    parameters:
    - id: hostBuilder
      type: Microsoft.Extensions.Hosting.IHostBuilder
      description: Your Hostbuilder
    - id: mediaTypeVersion
      type: Steeltoe.Management.Endpoint.MediaTypeVersion
      description: Spring Boot media type version to use with responses
    - id: buildCorsPolicy
      type: System.Action{Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicyBuilder}
      description: 'Customize the CORS policy. '
    return:
      type: Microsoft.Extensions.Hosting.IHostBuilder
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function AddCloudFoundryActuators(hostBuilder As IHostBuilder, mediaTypeVersion As MediaTypeVersion, buildCorsPolicy As Action(Of CorsPolicyBuilder) = Nothing) As IHostBuilder
  overload: Steeltoe.Management.CloudFoundry.CloudFoundryHostBuilderExtensions.AddCloudFoundryActuators*
  nameWithType.vb: CloudFoundryHostBuilderExtensions.AddCloudFoundryActuators(IHostBuilder, MediaTypeVersion, Action(Of CorsPolicyBuilder))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Steeltoe.Management.CloudFoundry.CloudFoundryHostBuilderExtensions.AddCloudFoundryActuators(Microsoft.Extensions.Hosting.IHostBuilder, Steeltoe.Management.Endpoint.MediaTypeVersion, System.Action(Of Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicyBuilder))
  name.vb: AddCloudFoundryActuators(IHostBuilder, MediaTypeVersion, Action(Of CorsPolicyBuilder))
references:
- uid: Steeltoe.Management.CloudFoundry
  commentId: N:Steeltoe.Management.CloudFoundry
  name: Steeltoe.Management.CloudFoundry
  nameWithType: Steeltoe.Management.CloudFoundry
  fullName: Steeltoe.Management.CloudFoundry
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Steeltoe.Management.CloudFoundry.CloudFoundryHostBuilderExtensions.AddCloudFoundryActuators*
  commentId: Overload:Steeltoe.Management.CloudFoundry.CloudFoundryHostBuilderExtensions.AddCloudFoundryActuators
  name: AddCloudFoundryActuators
  nameWithType: CloudFoundryHostBuilderExtensions.AddCloudFoundryActuators
  fullName: Steeltoe.Management.CloudFoundry.CloudFoundryHostBuilderExtensions.AddCloudFoundryActuators
- uid: Microsoft.AspNetCore.Hosting.IWebHostBuilder
  commentId: T:Microsoft.AspNetCore.Hosting.IWebHostBuilder
  parent: Microsoft.AspNetCore.Hosting
  isExternal: true
  name: IWebHostBuilder
  nameWithType: IWebHostBuilder
  fullName: Microsoft.AspNetCore.Hosting.IWebHostBuilder
- uid: System.Action{Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicyBuilder}
  commentId: T:System.Action{Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicyBuilder}
  parent: System
  definition: System.Action`1
  name: Action<CorsPolicyBuilder>
  nameWithType: Action<CorsPolicyBuilder>
  fullName: System.Action<Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicyBuilder>
  nameWithType.vb: Action(Of CorsPolicyBuilder)
  fullName.vb: System.Action(Of Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicyBuilder)
  name.vb: Action(Of CorsPolicyBuilder)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicyBuilder
    name: CorsPolicyBuilder
    nameWithType: CorsPolicyBuilder
    fullName: Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicyBuilder
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicyBuilder
    name: CorsPolicyBuilder
    nameWithType: CorsPolicyBuilder
    fullName: Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicyBuilder
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Hosting
  commentId: N:Microsoft.AspNetCore.Hosting
  isExternal: true
  name: Microsoft.AspNetCore.Hosting
  nameWithType: Microsoft.AspNetCore.Hosting
  fullName: Microsoft.AspNetCore.Hosting
- uid: System.Action`1
  commentId: T:System.Action`1
  isExternal: true
  name: Action<T>
  nameWithType: Action<T>
  fullName: System.Action<T>
  nameWithType.vb: Action(Of T)
  fullName.vb: System.Action(Of T)
  name.vb: Action(Of T)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.Hosting.IHostBuilder
  commentId: T:Microsoft.Extensions.Hosting.IHostBuilder
  parent: Microsoft.Extensions.Hosting
  isExternal: true
  name: IHostBuilder
  nameWithType: IHostBuilder
  fullName: Microsoft.Extensions.Hosting.IHostBuilder
- uid: Microsoft.Extensions.Hosting
  commentId: N:Microsoft.Extensions.Hosting
  isExternal: true
  name: Microsoft.Extensions.Hosting
  nameWithType: Microsoft.Extensions.Hosting
  fullName: Microsoft.Extensions.Hosting
- uid: Steeltoe.Management.Endpoint.MediaTypeVersion
  commentId: T:Steeltoe.Management.Endpoint.MediaTypeVersion
  parent: Steeltoe.Management.Endpoint
  name: MediaTypeVersion
  nameWithType: MediaTypeVersion
  fullName: Steeltoe.Management.Endpoint.MediaTypeVersion
- uid: Steeltoe.Management.Endpoint
  commentId: N:Steeltoe.Management.Endpoint
  name: Steeltoe.Management.Endpoint
  nameWithType: Steeltoe.Management.Endpoint
  fullName: Steeltoe.Management.Endpoint
