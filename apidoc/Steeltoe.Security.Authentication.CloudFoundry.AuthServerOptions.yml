### YamlMime:ManagedReference
items:
- uid: Steeltoe.Security.Authentication.CloudFoundry.AuthServerOptions
  commentId: T:Steeltoe.Security.Authentication.CloudFoundry.AuthServerOptions
  id: AuthServerOptions
  parent: Steeltoe.Security.Authentication.CloudFoundry
  children:
  - Steeltoe.Security.Authentication.CloudFoundry.AuthServerOptions.AdditionalAudiences
  - Steeltoe.Security.Authentication.CloudFoundry.AuthServerOptions.AdditionalTokenScopes
  - Steeltoe.Security.Authentication.CloudFoundry.AuthServerOptions.AuthorizationUrl
  - Steeltoe.Security.Authentication.CloudFoundry.AuthServerOptions.CallbackUrl
  - Steeltoe.Security.Authentication.CloudFoundry.AuthServerOptions.ClientId
  - Steeltoe.Security.Authentication.CloudFoundry.AuthServerOptions.ClientSecret
  - Steeltoe.Security.Authentication.CloudFoundry.AuthServerOptions.ClientTimeout
  - Steeltoe.Security.Authentication.CloudFoundry.AuthServerOptions.RequiredScopes
  - Steeltoe.Security.Authentication.CloudFoundry.AuthServerOptions.SignInAsAuthenticationType
  - Steeltoe.Security.Authentication.CloudFoundry.AuthServerOptions.ValidateCertificates
  langs:
  - csharp
  - vb
  name: AuthServerOptions
  nameWithType: AuthServerOptions
  fullName: Steeltoe.Security.Authentication.CloudFoundry.AuthServerOptions
  type: Class
  source:
    remote:
      path: src/Security/src/Authentication.CloudFoundryBase/AuthServerOptions.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: AuthServerOptions
    path: ../Steeltoe/src/Security/src/Authentication.CloudFoundryBase/AuthServerOptions.cs
    startLine: 6
  assemblies:
  - Steeltoe.Security.Authentication.CloudFoundryBase
  namespace: Steeltoe.Security.Authentication.CloudFoundry
  syntax:
    content: public class AuthServerOptions
    content.vb: Public Class AuthServerOptions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Steeltoe.Security.Authentication.CloudFoundry.AuthServerOptions.AuthorizationUrl
  commentId: P:Steeltoe.Security.Authentication.CloudFoundry.AuthServerOptions.AuthorizationUrl
  id: AuthorizationUrl
  parent: Steeltoe.Security.Authentication.CloudFoundry.AuthServerOptions
  langs:
  - csharp
  - vb
  name: AuthorizationUrl
  nameWithType: AuthServerOptions.AuthorizationUrl
  fullName: Steeltoe.Security.Authentication.CloudFoundry.AuthServerOptions.AuthorizationUrl
  type: Property
  source:
    remote:
      path: src/Security/src/Authentication.CloudFoundryBase/AuthServerOptions.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: AuthorizationUrl
    path: ../Steeltoe/src/Security/src/Authentication.CloudFoundryBase/AuthServerOptions.cs
    startLine: 11
  assemblies:
  - Steeltoe.Security.Authentication.CloudFoundryBase
  namespace: Steeltoe.Security.Authentication.CloudFoundry
  summary: "\nGets or sets the location of the OAuth server\n"
  example: []
  syntax:
    content: public string AuthorizationUrl { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property AuthorizationUrl As String
  overload: Steeltoe.Security.Authentication.CloudFoundry.AuthServerOptions.AuthorizationUrl*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Steeltoe.Security.Authentication.CloudFoundry.AuthServerOptions.CallbackUrl
  commentId: P:Steeltoe.Security.Authentication.CloudFoundry.AuthServerOptions.CallbackUrl
  id: CallbackUrl
  parent: Steeltoe.Security.Authentication.CloudFoundry.AuthServerOptions
  langs:
  - csharp
  - vb
  name: CallbackUrl
  nameWithType: AuthServerOptions.CallbackUrl
  fullName: Steeltoe.Security.Authentication.CloudFoundry.AuthServerOptions.CallbackUrl
  type: Property
  source:
    remote:
      path: src/Security/src/Authentication.CloudFoundryBase/AuthServerOptions.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: CallbackUrl
    path: ../Steeltoe/src/Security/src/Authentication.CloudFoundryBase/AuthServerOptions.cs
    startLine: 16
  assemblies:
  - Steeltoe.Security.Authentication.CloudFoundryBase
  namespace: Steeltoe.Security.Authentication.CloudFoundry
  summary: "\nGets or sets the location the user is sent to after authentication\n"
  example: []
  syntax:
    content: public string CallbackUrl { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property CallbackUrl As String
  overload: Steeltoe.Security.Authentication.CloudFoundry.AuthServerOptions.CallbackUrl*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Steeltoe.Security.Authentication.CloudFoundry.AuthServerOptions.ClientId
  commentId: P:Steeltoe.Security.Authentication.CloudFoundry.AuthServerOptions.ClientId
  id: ClientId
  parent: Steeltoe.Security.Authentication.CloudFoundry.AuthServerOptions
  langs:
  - csharp
  - vb
  name: ClientId
  nameWithType: AuthServerOptions.ClientId
  fullName: Steeltoe.Security.Authentication.CloudFoundry.AuthServerOptions.ClientId
  type: Property
  source:
    remote:
      path: src/Security/src/Authentication.CloudFoundryBase/AuthServerOptions.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: ClientId
    path: ../Steeltoe/src/Security/src/Authentication.CloudFoundryBase/AuthServerOptions.cs
    startLine: 21
  assemblies:
  - Steeltoe.Security.Authentication.CloudFoundryBase
  namespace: Steeltoe.Security.Authentication.CloudFoundry
  summary: "\nGets or sets the application&apos;s client id for interacting with the auth server\n"
  example: []
  syntax:
    content: public string ClientId { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property ClientId As String
  overload: Steeltoe.Security.Authentication.CloudFoundry.AuthServerOptions.ClientId*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Steeltoe.Security.Authentication.CloudFoundry.AuthServerOptions.ClientSecret
  commentId: P:Steeltoe.Security.Authentication.CloudFoundry.AuthServerOptions.ClientSecret
  id: ClientSecret
  parent: Steeltoe.Security.Authentication.CloudFoundry.AuthServerOptions
  langs:
  - csharp
  - vb
  name: ClientSecret
  nameWithType: AuthServerOptions.ClientSecret
  fullName: Steeltoe.Security.Authentication.CloudFoundry.AuthServerOptions.ClientSecret
  type: Property
  source:
    remote:
      path: src/Security/src/Authentication.CloudFoundryBase/AuthServerOptions.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: ClientSecret
    path: ../Steeltoe/src/Security/src/Authentication.CloudFoundryBase/AuthServerOptions.cs
    startLine: 26
  assemblies:
  - Steeltoe.Security.Authentication.CloudFoundryBase
  namespace: Steeltoe.Security.Authentication.CloudFoundry
  summary: "\nGets or sets the application&apos;s client secret for interacting with the auth server\n"
  example: []
  syntax:
    content: public string ClientSecret { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property ClientSecret As String
  overload: Steeltoe.Security.Authentication.CloudFoundry.AuthServerOptions.ClientSecret*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Steeltoe.Security.Authentication.CloudFoundry.AuthServerOptions.SignInAsAuthenticationType
  commentId: P:Steeltoe.Security.Authentication.CloudFoundry.AuthServerOptions.SignInAsAuthenticationType
  id: SignInAsAuthenticationType
  parent: Steeltoe.Security.Authentication.CloudFoundry.AuthServerOptions
  langs:
  - csharp
  - vb
  name: SignInAsAuthenticationType
  nameWithType: AuthServerOptions.SignInAsAuthenticationType
  fullName: Steeltoe.Security.Authentication.CloudFoundry.AuthServerOptions.SignInAsAuthenticationType
  type: Property
  source:
    remote:
      path: src/Security/src/Authentication.CloudFoundryBase/AuthServerOptions.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: SignInAsAuthenticationType
    path: ../Steeltoe/src/Security/src/Authentication.CloudFoundryBase/AuthServerOptions.cs
    startLine: 31
  assemblies:
  - Steeltoe.Security.Authentication.CloudFoundryBase
  namespace: Steeltoe.Security.Authentication.CloudFoundry
  summary: "\nGets or sets the name of the authentication type currently in use\n"
  example: []
  syntax:
    content: public string SignInAsAuthenticationType { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property SignInAsAuthenticationType As String
  overload: Steeltoe.Security.Authentication.CloudFoundry.AuthServerOptions.SignInAsAuthenticationType*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Steeltoe.Security.Authentication.CloudFoundry.AuthServerOptions.ClientTimeout
  commentId: P:Steeltoe.Security.Authentication.CloudFoundry.AuthServerOptions.ClientTimeout
  id: ClientTimeout
  parent: Steeltoe.Security.Authentication.CloudFoundry.AuthServerOptions
  langs:
  - csharp
  - vb
  name: ClientTimeout
  nameWithType: AuthServerOptions.ClientTimeout
  fullName: Steeltoe.Security.Authentication.CloudFoundry.AuthServerOptions.ClientTimeout
  type: Property
  source:
    remote:
      path: src/Security/src/Authentication.CloudFoundryBase/AuthServerOptions.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: ClientTimeout
    path: ../Steeltoe/src/Security/src/Authentication.CloudFoundryBase/AuthServerOptions.cs
    startLine: 36
  assemblies:
  - Steeltoe.Security.Authentication.CloudFoundryBase
  namespace: Steeltoe.Security.Authentication.CloudFoundry
  summary: "\nGets or sets the timeout (in ms) for calls to the auth server\n"
  example: []
  syntax:
    content: public int ClientTimeout { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property ClientTimeout As Integer
  overload: Steeltoe.Security.Authentication.CloudFoundry.AuthServerOptions.ClientTimeout*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Steeltoe.Security.Authentication.CloudFoundry.AuthServerOptions.AdditionalTokenScopes
  commentId: P:Steeltoe.Security.Authentication.CloudFoundry.AuthServerOptions.AdditionalTokenScopes
  id: AdditionalTokenScopes
  parent: Steeltoe.Security.Authentication.CloudFoundry.AuthServerOptions
  langs:
  - csharp
  - vb
  name: AdditionalTokenScopes
  nameWithType: AuthServerOptions.AdditionalTokenScopes
  fullName: Steeltoe.Security.Authentication.CloudFoundry.AuthServerOptions.AdditionalTokenScopes
  type: Property
  source:
    remote:
      path: src/Security/src/Authentication.CloudFoundryBase/AuthServerOptions.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: AdditionalTokenScopes
    path: ../Steeltoe/src/Security/src/Authentication.CloudFoundryBase/AuthServerOptions.cs
    startLine: 41
  assemblies:
  - Steeltoe.Security.Authentication.CloudFoundryBase
  namespace: Steeltoe.Security.Authentication.CloudFoundry
  summary: "\nGets or sets additional scopes beyond &apos;openid&apos; when requesting tokens\n"
  example: []
  syntax:
    content: public string AdditionalTokenScopes { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property AdditionalTokenScopes As String
  overload: Steeltoe.Security.Authentication.CloudFoundry.AuthServerOptions.AdditionalTokenScopes*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Steeltoe.Security.Authentication.CloudFoundry.AuthServerOptions.RequiredScopes
  commentId: P:Steeltoe.Security.Authentication.CloudFoundry.AuthServerOptions.RequiredScopes
  id: RequiredScopes
  parent: Steeltoe.Security.Authentication.CloudFoundry.AuthServerOptions
  langs:
  - csharp
  - vb
  name: RequiredScopes
  nameWithType: AuthServerOptions.RequiredScopes
  fullName: Steeltoe.Security.Authentication.CloudFoundry.AuthServerOptions.RequiredScopes
  type: Property
  source:
    remote:
      path: src/Security/src/Authentication.CloudFoundryBase/AuthServerOptions.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: RequiredScopes
    path: ../Steeltoe/src/Security/src/Authentication.CloudFoundryBase/AuthServerOptions.cs
    startLine: 46
  assemblies:
  - Steeltoe.Security.Authentication.CloudFoundryBase
  namespace: Steeltoe.Security.Authentication.CloudFoundry
  summary: "\nGets or sets a scopes to require\n"
  example: []
  syntax:
    content: public string[] RequiredScopes { get; set; }
    parameters: []
    return:
      type: System.String[]
    content.vb: Public Property RequiredScopes As String()
  overload: Steeltoe.Security.Authentication.CloudFoundry.AuthServerOptions.RequiredScopes*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Steeltoe.Security.Authentication.CloudFoundry.AuthServerOptions.AdditionalAudiences
  commentId: P:Steeltoe.Security.Authentication.CloudFoundry.AuthServerOptions.AdditionalAudiences
  id: AdditionalAudiences
  parent: Steeltoe.Security.Authentication.CloudFoundry.AuthServerOptions
  langs:
  - csharp
  - vb
  name: AdditionalAudiences
  nameWithType: AuthServerOptions.AdditionalAudiences
  fullName: Steeltoe.Security.Authentication.CloudFoundry.AuthServerOptions.AdditionalAudiences
  type: Property
  source:
    remote:
      path: src/Security/src/Authentication.CloudFoundryBase/AuthServerOptions.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: AdditionalAudiences
    path: ../Steeltoe/src/Security/src/Authentication.CloudFoundryBase/AuthServerOptions.cs
    startLine: 51
  assemblies:
  - Steeltoe.Security.Authentication.CloudFoundryBase
  namespace: Steeltoe.Security.Authentication.CloudFoundry
  summary: "\nGets or sets a list of additional audiences to use with token validation\n"
  example: []
  syntax:
    content: public string[] AdditionalAudiences { get; set; }
    parameters: []
    return:
      type: System.String[]
    content.vb: Public Property AdditionalAudiences As String()
  overload: Steeltoe.Security.Authentication.CloudFoundry.AuthServerOptions.AdditionalAudiences*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Steeltoe.Security.Authentication.CloudFoundry.AuthServerOptions.ValidateCertificates
  commentId: P:Steeltoe.Security.Authentication.CloudFoundry.AuthServerOptions.ValidateCertificates
  id: ValidateCertificates
  parent: Steeltoe.Security.Authentication.CloudFoundry.AuthServerOptions
  langs:
  - csharp
  - vb
  name: ValidateCertificates
  nameWithType: AuthServerOptions.ValidateCertificates
  fullName: Steeltoe.Security.Authentication.CloudFoundry.AuthServerOptions.ValidateCertificates
  type: Property
  source:
    remote:
      path: src/Security/src/Authentication.CloudFoundryBase/AuthServerOptions.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: ValidateCertificates
    path: ../Steeltoe/src/Security/src/Authentication.CloudFoundryBase/AuthServerOptions.cs
    startLine: 56
  assemblies:
  - Steeltoe.Security.Authentication.CloudFoundryBase
  namespace: Steeltoe.Security.Authentication.CloudFoundry
  summary: "\nGets or sets a value indicating whether to validate SSO server certificate\n"
  example: []
  syntax:
    content: public bool ValidateCertificates { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property ValidateCertificates As Boolean
  overload: Steeltoe.Security.Authentication.CloudFoundry.AuthServerOptions.ValidateCertificates*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Steeltoe.Security.Authentication.CloudFoundry
  commentId: N:Steeltoe.Security.Authentication.CloudFoundry
  name: Steeltoe.Security.Authentication.CloudFoundry
  nameWithType: Steeltoe.Security.Authentication.CloudFoundry
  fullName: Steeltoe.Security.Authentication.CloudFoundry
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Steeltoe.Security.Authentication.CloudFoundry.AuthServerOptions.AuthorizationUrl*
  commentId: Overload:Steeltoe.Security.Authentication.CloudFoundry.AuthServerOptions.AuthorizationUrl
  name: AuthorizationUrl
  nameWithType: AuthServerOptions.AuthorizationUrl
  fullName: Steeltoe.Security.Authentication.CloudFoundry.AuthServerOptions.AuthorizationUrl
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Steeltoe.Security.Authentication.CloudFoundry.AuthServerOptions.CallbackUrl*
  commentId: Overload:Steeltoe.Security.Authentication.CloudFoundry.AuthServerOptions.CallbackUrl
  name: CallbackUrl
  nameWithType: AuthServerOptions.CallbackUrl
  fullName: Steeltoe.Security.Authentication.CloudFoundry.AuthServerOptions.CallbackUrl
- uid: Steeltoe.Security.Authentication.CloudFoundry.AuthServerOptions.ClientId*
  commentId: Overload:Steeltoe.Security.Authentication.CloudFoundry.AuthServerOptions.ClientId
  name: ClientId
  nameWithType: AuthServerOptions.ClientId
  fullName: Steeltoe.Security.Authentication.CloudFoundry.AuthServerOptions.ClientId
- uid: Steeltoe.Security.Authentication.CloudFoundry.AuthServerOptions.ClientSecret*
  commentId: Overload:Steeltoe.Security.Authentication.CloudFoundry.AuthServerOptions.ClientSecret
  name: ClientSecret
  nameWithType: AuthServerOptions.ClientSecret
  fullName: Steeltoe.Security.Authentication.CloudFoundry.AuthServerOptions.ClientSecret
- uid: Steeltoe.Security.Authentication.CloudFoundry.AuthServerOptions.SignInAsAuthenticationType*
  commentId: Overload:Steeltoe.Security.Authentication.CloudFoundry.AuthServerOptions.SignInAsAuthenticationType
  name: SignInAsAuthenticationType
  nameWithType: AuthServerOptions.SignInAsAuthenticationType
  fullName: Steeltoe.Security.Authentication.CloudFoundry.AuthServerOptions.SignInAsAuthenticationType
- uid: Steeltoe.Security.Authentication.CloudFoundry.AuthServerOptions.ClientTimeout*
  commentId: Overload:Steeltoe.Security.Authentication.CloudFoundry.AuthServerOptions.ClientTimeout
  name: ClientTimeout
  nameWithType: AuthServerOptions.ClientTimeout
  fullName: Steeltoe.Security.Authentication.CloudFoundry.AuthServerOptions.ClientTimeout
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Steeltoe.Security.Authentication.CloudFoundry.AuthServerOptions.AdditionalTokenScopes*
  commentId: Overload:Steeltoe.Security.Authentication.CloudFoundry.AuthServerOptions.AdditionalTokenScopes
  name: AdditionalTokenScopes
  nameWithType: AuthServerOptions.AdditionalTokenScopes
  fullName: Steeltoe.Security.Authentication.CloudFoundry.AuthServerOptions.AdditionalTokenScopes
- uid: Steeltoe.Security.Authentication.CloudFoundry.AuthServerOptions.RequiredScopes*
  commentId: Overload:Steeltoe.Security.Authentication.CloudFoundry.AuthServerOptions.RequiredScopes
  name: RequiredScopes
  nameWithType: AuthServerOptions.RequiredScopes
  fullName: Steeltoe.Security.Authentication.CloudFoundry.AuthServerOptions.RequiredScopes
- uid: System.String[]
  isExternal: true
  name: String[]
  nameWithType: String[]
  fullName: System.String[]
  nameWithType.vb: String()
  fullName.vb: System.String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Steeltoe.Security.Authentication.CloudFoundry.AuthServerOptions.AdditionalAudiences*
  commentId: Overload:Steeltoe.Security.Authentication.CloudFoundry.AuthServerOptions.AdditionalAudiences
  name: AdditionalAudiences
  nameWithType: AuthServerOptions.AdditionalAudiences
  fullName: Steeltoe.Security.Authentication.CloudFoundry.AuthServerOptions.AdditionalAudiences
- uid: Steeltoe.Security.Authentication.CloudFoundry.AuthServerOptions.ValidateCertificates*
  commentId: Overload:Steeltoe.Security.Authentication.CloudFoundry.AuthServerOptions.ValidateCertificates
  name: ValidateCertificates
  nameWithType: AuthServerOptions.ValidateCertificates
  fullName: Steeltoe.Security.Authentication.CloudFoundry.AuthServerOptions.ValidateCertificates
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
