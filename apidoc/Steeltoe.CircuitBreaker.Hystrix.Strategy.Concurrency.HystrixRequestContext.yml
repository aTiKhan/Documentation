### YamlMime:ManagedReference
items:
- uid: Steeltoe.CircuitBreaker.Hystrix.Strategy.Concurrency.HystrixRequestContext
  commentId: T:Steeltoe.CircuitBreaker.Hystrix.Strategy.Concurrency.HystrixRequestContext
  id: HystrixRequestContext
  parent: Steeltoe.CircuitBreaker.Hystrix.Strategy.Concurrency
  children:
  - Steeltoe.CircuitBreaker.Hystrix.Strategy.Concurrency.HystrixRequestContext.ContextForCurrentThread
  - Steeltoe.CircuitBreaker.Hystrix.Strategy.Concurrency.HystrixRequestContext.Dispose
  - Steeltoe.CircuitBreaker.Hystrix.Strategy.Concurrency.HystrixRequestContext.Dispose(System.Boolean)
  - Steeltoe.CircuitBreaker.Hystrix.Strategy.Concurrency.HystrixRequestContext.InitializeContext
  - Steeltoe.CircuitBreaker.Hystrix.Strategy.Concurrency.HystrixRequestContext.IsCurrentThreadInitialized
  - Steeltoe.CircuitBreaker.Hystrix.Strategy.Concurrency.HystrixRequestContext.SetContextOnCurrentThread(Steeltoe.CircuitBreaker.Hystrix.Strategy.Concurrency.HystrixRequestContext)
  langs:
  - csharp
  - vb
  name: HystrixRequestContext
  nameWithType: HystrixRequestContext
  fullName: Steeltoe.CircuitBreaker.Hystrix.Strategy.Concurrency.HystrixRequestContext
  type: Class
  source:
    remote:
      path: src/CircuitBreaker/src/HystrixBase/Strategy/Concurrency/HystrixRequestContext.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: HystrixRequestContext
    path: ../Steeltoe/src/CircuitBreaker/src/HystrixBase/Strategy/Concurrency/HystrixRequestContext.cs
    startLine: 10
  assemblies:
  - Steeltoe.CircuitBreaker.HystrixBase
  namespace: Steeltoe.CircuitBreaker.Hystrix.Strategy.Concurrency
  syntax:
    content: 'public class HystrixRequestContext : IDisposable'
    content.vb: >-
      Public Class HystrixRequestContext

          Implements IDisposable
  inheritance:
  - System.Object
  implements:
  - System.IDisposable
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Steeltoe.CircuitBreaker.Hystrix.Strategy.Concurrency.HystrixRequestContext.IsCurrentThreadInitialized
  commentId: P:Steeltoe.CircuitBreaker.Hystrix.Strategy.Concurrency.HystrixRequestContext.IsCurrentThreadInitialized
  id: IsCurrentThreadInitialized
  parent: Steeltoe.CircuitBreaker.Hystrix.Strategy.Concurrency.HystrixRequestContext
  langs:
  - csharp
  - vb
  name: IsCurrentThreadInitialized
  nameWithType: HystrixRequestContext.IsCurrentThreadInitialized
  fullName: Steeltoe.CircuitBreaker.Hystrix.Strategy.Concurrency.HystrixRequestContext.IsCurrentThreadInitialized
  type: Property
  source:
    remote:
      path: src/CircuitBreaker/src/HystrixBase/Strategy/Concurrency/HystrixRequestContext.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: IsCurrentThreadInitialized
    path: ../Steeltoe/src/CircuitBreaker/src/HystrixBase/Strategy/Concurrency/HystrixRequestContext.cs
    startLine: 20
  assemblies:
  - Steeltoe.CircuitBreaker.HystrixBase
  namespace: Steeltoe.CircuitBreaker.Hystrix.Strategy.Concurrency
  syntax:
    content: public static bool IsCurrentThreadInitialized { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Shared ReadOnly Property IsCurrentThreadInitialized As Boolean
  overload: Steeltoe.CircuitBreaker.Hystrix.Strategy.Concurrency.HystrixRequestContext.IsCurrentThreadInitialized*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Steeltoe.CircuitBreaker.Hystrix.Strategy.Concurrency.HystrixRequestContext.ContextForCurrentThread
  commentId: P:Steeltoe.CircuitBreaker.Hystrix.Strategy.Concurrency.HystrixRequestContext.ContextForCurrentThread
  id: ContextForCurrentThread
  parent: Steeltoe.CircuitBreaker.Hystrix.Strategy.Concurrency.HystrixRequestContext
  langs:
  - csharp
  - vb
  name: ContextForCurrentThread
  nameWithType: HystrixRequestContext.ContextForCurrentThread
  fullName: Steeltoe.CircuitBreaker.Hystrix.Strategy.Concurrency.HystrixRequestContext.ContextForCurrentThread
  type: Property
  source:
    remote:
      path: src/CircuitBreaker/src/HystrixBase/Strategy/Concurrency/HystrixRequestContext.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: ContextForCurrentThread
    path: ../Steeltoe/src/CircuitBreaker/src/HystrixBase/Strategy/Concurrency/HystrixRequestContext.cs
    startLine: 29
  assemblies:
  - Steeltoe.CircuitBreaker.HystrixBase
  namespace: Steeltoe.CircuitBreaker.Hystrix.Strategy.Concurrency
  syntax:
    content: public static HystrixRequestContext ContextForCurrentThread { get; }
    parameters: []
    return:
      type: Steeltoe.CircuitBreaker.Hystrix.Strategy.Concurrency.HystrixRequestContext
    content.vb: Public Shared ReadOnly Property ContextForCurrentThread As HystrixRequestContext
  overload: Steeltoe.CircuitBreaker.Hystrix.Strategy.Concurrency.HystrixRequestContext.ContextForCurrentThread*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Steeltoe.CircuitBreaker.Hystrix.Strategy.Concurrency.HystrixRequestContext.SetContextOnCurrentThread(Steeltoe.CircuitBreaker.Hystrix.Strategy.Concurrency.HystrixRequestContext)
  commentId: M:Steeltoe.CircuitBreaker.Hystrix.Strategy.Concurrency.HystrixRequestContext.SetContextOnCurrentThread(Steeltoe.CircuitBreaker.Hystrix.Strategy.Concurrency.HystrixRequestContext)
  id: SetContextOnCurrentThread(Steeltoe.CircuitBreaker.Hystrix.Strategy.Concurrency.HystrixRequestContext)
  parent: Steeltoe.CircuitBreaker.Hystrix.Strategy.Concurrency.HystrixRequestContext
  langs:
  - csharp
  - vb
  name: SetContextOnCurrentThread(HystrixRequestContext)
  nameWithType: HystrixRequestContext.SetContextOnCurrentThread(HystrixRequestContext)
  fullName: Steeltoe.CircuitBreaker.Hystrix.Strategy.Concurrency.HystrixRequestContext.SetContextOnCurrentThread(Steeltoe.CircuitBreaker.Hystrix.Strategy.Concurrency.HystrixRequestContext)
  type: Method
  source:
    remote:
      path: src/CircuitBreaker/src/HystrixBase/Strategy/Concurrency/HystrixRequestContext.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: SetContextOnCurrentThread
    path: ../Steeltoe/src/CircuitBreaker/src/HystrixBase/Strategy/Concurrency/HystrixRequestContext.cs
    startLine: 44
  assemblies:
  - Steeltoe.CircuitBreaker.HystrixBase
  namespace: Steeltoe.CircuitBreaker.Hystrix.Strategy.Concurrency
  syntax:
    content: public static void SetContextOnCurrentThread(HystrixRequestContext state)
    parameters:
    - id: state
      type: Steeltoe.CircuitBreaker.Hystrix.Strategy.Concurrency.HystrixRequestContext
    content.vb: Public Shared Sub SetContextOnCurrentThread(state As HystrixRequestContext)
  overload: Steeltoe.CircuitBreaker.Hystrix.Strategy.Concurrency.HystrixRequestContext.SetContextOnCurrentThread*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Steeltoe.CircuitBreaker.Hystrix.Strategy.Concurrency.HystrixRequestContext.InitializeContext
  commentId: M:Steeltoe.CircuitBreaker.Hystrix.Strategy.Concurrency.HystrixRequestContext.InitializeContext
  id: InitializeContext
  parent: Steeltoe.CircuitBreaker.Hystrix.Strategy.Concurrency.HystrixRequestContext
  langs:
  - csharp
  - vb
  name: InitializeContext()
  nameWithType: HystrixRequestContext.InitializeContext()
  fullName: Steeltoe.CircuitBreaker.Hystrix.Strategy.Concurrency.HystrixRequestContext.InitializeContext()
  type: Method
  source:
    remote:
      path: src/CircuitBreaker/src/HystrixBase/Strategy/Concurrency/HystrixRequestContext.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: InitializeContext
    path: ../Steeltoe/src/CircuitBreaker/src/HystrixBase/Strategy/Concurrency/HystrixRequestContext.cs
    startLine: 49
  assemblies:
  - Steeltoe.CircuitBreaker.HystrixBase
  namespace: Steeltoe.CircuitBreaker.Hystrix.Strategy.Concurrency
  syntax:
    content: public static HystrixRequestContext InitializeContext()
    return:
      type: Steeltoe.CircuitBreaker.Hystrix.Strategy.Concurrency.HystrixRequestContext
    content.vb: Public Shared Function InitializeContext As HystrixRequestContext
  overload: Steeltoe.CircuitBreaker.Hystrix.Strategy.Concurrency.HystrixRequestContext.InitializeContext*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Steeltoe.CircuitBreaker.Hystrix.Strategy.Concurrency.HystrixRequestContext.Dispose
  commentId: M:Steeltoe.CircuitBreaker.Hystrix.Strategy.Concurrency.HystrixRequestContext.Dispose
  id: Dispose
  parent: Steeltoe.CircuitBreaker.Hystrix.Strategy.Concurrency.HystrixRequestContext
  langs:
  - csharp
  - vb
  name: Dispose()
  nameWithType: HystrixRequestContext.Dispose()
  fullName: Steeltoe.CircuitBreaker.Hystrix.Strategy.Concurrency.HystrixRequestContext.Dispose()
  type: Method
  source:
    remote:
      path: src/CircuitBreaker/src/HystrixBase/Strategy/Concurrency/HystrixRequestContext.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Dispose
    path: ../Steeltoe/src/CircuitBreaker/src/HystrixBase/Strategy/Concurrency/HystrixRequestContext.cs
    startLine: 59
  assemblies:
  - Steeltoe.CircuitBreaker.HystrixBase
  namespace: Steeltoe.CircuitBreaker.Hystrix.Strategy.Concurrency
  syntax:
    content: public void Dispose()
    content.vb: Public Sub Dispose
  overload: Steeltoe.CircuitBreaker.Hystrix.Strategy.Concurrency.HystrixRequestContext.Dispose*
  implements:
  - System.IDisposable.Dispose
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Steeltoe.CircuitBreaker.Hystrix.Strategy.Concurrency.HystrixRequestContext.Dispose(System.Boolean)
  commentId: M:Steeltoe.CircuitBreaker.Hystrix.Strategy.Concurrency.HystrixRequestContext.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: Steeltoe.CircuitBreaker.Hystrix.Strategy.Concurrency.HystrixRequestContext
  langs:
  - csharp
  - vb
  name: Dispose(Boolean)
  nameWithType: HystrixRequestContext.Dispose(Boolean)
  fullName: Steeltoe.CircuitBreaker.Hystrix.Strategy.Concurrency.HystrixRequestContext.Dispose(System.Boolean)
  type: Method
  source:
    remote:
      path: src/CircuitBreaker/src/HystrixBase/Strategy/Concurrency/HystrixRequestContext.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Dispose
    path: ../Steeltoe/src/CircuitBreaker/src/HystrixBase/Strategy/Concurrency/HystrixRequestContext.cs
    startLine: 65
  assemblies:
  - Steeltoe.CircuitBreaker.HystrixBase
  namespace: Steeltoe.CircuitBreaker.Hystrix.Strategy.Concurrency
  syntax:
    content: protected virtual void Dispose(bool disposing)
    parameters:
    - id: disposing
      type: System.Boolean
    content.vb: Protected Overridable Sub Dispose(disposing As Boolean)
  overload: Steeltoe.CircuitBreaker.Hystrix.Strategy.Concurrency.HystrixRequestContext.Dispose*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
references:
- uid: Steeltoe.CircuitBreaker.Hystrix.Strategy.Concurrency
  commentId: N:Steeltoe.CircuitBreaker.Hystrix.Strategy.Concurrency
  name: Steeltoe.CircuitBreaker.Hystrix.Strategy.Concurrency
  nameWithType: Steeltoe.CircuitBreaker.Hystrix.Strategy.Concurrency
  fullName: Steeltoe.CircuitBreaker.Hystrix.Strategy.Concurrency
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Steeltoe.CircuitBreaker.Hystrix.Strategy.Concurrency.HystrixRequestContext.IsCurrentThreadInitialized*
  commentId: Overload:Steeltoe.CircuitBreaker.Hystrix.Strategy.Concurrency.HystrixRequestContext.IsCurrentThreadInitialized
  name: IsCurrentThreadInitialized
  nameWithType: HystrixRequestContext.IsCurrentThreadInitialized
  fullName: Steeltoe.CircuitBreaker.Hystrix.Strategy.Concurrency.HystrixRequestContext.IsCurrentThreadInitialized
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Steeltoe.CircuitBreaker.Hystrix.Strategy.Concurrency.HystrixRequestContext.ContextForCurrentThread*
  commentId: Overload:Steeltoe.CircuitBreaker.Hystrix.Strategy.Concurrency.HystrixRequestContext.ContextForCurrentThread
  name: ContextForCurrentThread
  nameWithType: HystrixRequestContext.ContextForCurrentThread
  fullName: Steeltoe.CircuitBreaker.Hystrix.Strategy.Concurrency.HystrixRequestContext.ContextForCurrentThread
- uid: Steeltoe.CircuitBreaker.Hystrix.Strategy.Concurrency.HystrixRequestContext
  commentId: T:Steeltoe.CircuitBreaker.Hystrix.Strategy.Concurrency.HystrixRequestContext
  parent: Steeltoe.CircuitBreaker.Hystrix.Strategy.Concurrency
  name: HystrixRequestContext
  nameWithType: HystrixRequestContext
  fullName: Steeltoe.CircuitBreaker.Hystrix.Strategy.Concurrency.HystrixRequestContext
- uid: Steeltoe.CircuitBreaker.Hystrix.Strategy.Concurrency.HystrixRequestContext.SetContextOnCurrentThread*
  commentId: Overload:Steeltoe.CircuitBreaker.Hystrix.Strategy.Concurrency.HystrixRequestContext.SetContextOnCurrentThread
  name: SetContextOnCurrentThread
  nameWithType: HystrixRequestContext.SetContextOnCurrentThread
  fullName: Steeltoe.CircuitBreaker.Hystrix.Strategy.Concurrency.HystrixRequestContext.SetContextOnCurrentThread
- uid: Steeltoe.CircuitBreaker.Hystrix.Strategy.Concurrency.HystrixRequestContext.InitializeContext*
  commentId: Overload:Steeltoe.CircuitBreaker.Hystrix.Strategy.Concurrency.HystrixRequestContext.InitializeContext
  name: InitializeContext
  nameWithType: HystrixRequestContext.InitializeContext
  fullName: Steeltoe.CircuitBreaker.Hystrix.Strategy.Concurrency.HystrixRequestContext.InitializeContext
- uid: Steeltoe.CircuitBreaker.Hystrix.Strategy.Concurrency.HystrixRequestContext.Dispose*
  commentId: Overload:Steeltoe.CircuitBreaker.Hystrix.Strategy.Concurrency.HystrixRequestContext.Dispose
  name: Dispose
  nameWithType: HystrixRequestContext.Dispose
  fullName: Steeltoe.CircuitBreaker.Hystrix.Strategy.Concurrency.HystrixRequestContext.Dispose
- uid: System.IDisposable.Dispose
  commentId: M:System.IDisposable.Dispose
  parent: System.IDisposable
  isExternal: true
  name: Dispose()
  nameWithType: IDisposable.Dispose()
  fullName: System.IDisposable.Dispose()
  spec.csharp:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
