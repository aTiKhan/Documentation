### YamlMime:ManagedReference
items:
- uid: Steeltoe.Extensions.Logging.DynamicSerilog.SerilogDynamicLoggerFactory
  commentId: T:Steeltoe.Extensions.Logging.DynamicSerilog.SerilogDynamicLoggerFactory
  id: SerilogDynamicLoggerFactory
  parent: Steeltoe.Extensions.Logging.DynamicSerilog
  children:
  - Steeltoe.Extensions.Logging.DynamicSerilog.SerilogDynamicLoggerFactory.#ctor(Steeltoe.Extensions.Logging.IDynamicLoggerProvider)
  - Steeltoe.Extensions.Logging.DynamicSerilog.SerilogDynamicLoggerFactory.AddProvider(ILoggerProvider)
  - Steeltoe.Extensions.Logging.DynamicSerilog.SerilogDynamicLoggerFactory.CreateLogger(System.String)
  - Steeltoe.Extensions.Logging.DynamicSerilog.SerilogDynamicLoggerFactory.Dispose
  - Steeltoe.Extensions.Logging.DynamicSerilog.SerilogDynamicLoggerFactory.Dispose(System.Boolean)
  - Steeltoe.Extensions.Logging.DynamicSerilog.SerilogDynamicLoggerFactory.Finalize
  langs:
  - csharp
  - vb
  name: SerilogDynamicLoggerFactory
  nameWithType: SerilogDynamicLoggerFactory
  fullName: Steeltoe.Extensions.Logging.DynamicSerilog.SerilogDynamicLoggerFactory
  type: Class
  source:
    remote:
      path: src/Logging/src/DynamicSerilogBase/SerilogDynamicLoggerFactory.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: SerilogDynamicLoggerFactory
    path: ../Steeltoe/src/Logging/src/DynamicSerilogBase/SerilogDynamicLoggerFactory.cs
    startLine: 9
  assemblies:
  - Steeltoe.Extensions.Logging.DynamicSerilogBase
  namespace: Steeltoe.Extensions.Logging.DynamicSerilog
  syntax:
    content: 'public class SerilogDynamicLoggerFactory : ILoggerFactory'
    content.vb: >-
      Public Class SerilogDynamicLoggerFactory

          Inherits ILoggerFactory
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Steeltoe.Extensions.Logging.DynamicSerilog.SerilogDynamicLoggerFactory.#ctor(Steeltoe.Extensions.Logging.IDynamicLoggerProvider)
  commentId: M:Steeltoe.Extensions.Logging.DynamicSerilog.SerilogDynamicLoggerFactory.#ctor(Steeltoe.Extensions.Logging.IDynamicLoggerProvider)
  id: '#ctor(Steeltoe.Extensions.Logging.IDynamicLoggerProvider)'
  parent: Steeltoe.Extensions.Logging.DynamicSerilog.SerilogDynamicLoggerFactory
  langs:
  - csharp
  - vb
  name: SerilogDynamicLoggerFactory(IDynamicLoggerProvider)
  nameWithType: SerilogDynamicLoggerFactory.SerilogDynamicLoggerFactory(IDynamicLoggerProvider)
  fullName: Steeltoe.Extensions.Logging.DynamicSerilog.SerilogDynamicLoggerFactory.SerilogDynamicLoggerFactory(Steeltoe.Extensions.Logging.IDynamicLoggerProvider)
  type: Constructor
  source:
    remote:
      path: src/Logging/src/DynamicSerilogBase/SerilogDynamicLoggerFactory.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: .ctor
    path: ../Steeltoe/src/Logging/src/DynamicSerilogBase/SerilogDynamicLoggerFactory.cs
    startLine: 13
  assemblies:
  - Steeltoe.Extensions.Logging.DynamicSerilogBase
  namespace: Steeltoe.Extensions.Logging.DynamicSerilog
  syntax:
    content: public SerilogDynamicLoggerFactory(IDynamicLoggerProvider provider)
    parameters:
    - id: provider
      type: Steeltoe.Extensions.Logging.IDynamicLoggerProvider
    content.vb: Public Sub New(provider As IDynamicLoggerProvider)
  overload: Steeltoe.Extensions.Logging.DynamicSerilog.SerilogDynamicLoggerFactory.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Steeltoe.Extensions.Logging.DynamicSerilog.SerilogDynamicLoggerFactory.Dispose
  commentId: M:Steeltoe.Extensions.Logging.DynamicSerilog.SerilogDynamicLoggerFactory.Dispose
  id: Dispose
  parent: Steeltoe.Extensions.Logging.DynamicSerilog.SerilogDynamicLoggerFactory
  langs:
  - csharp
  - vb
  name: Dispose()
  nameWithType: SerilogDynamicLoggerFactory.Dispose()
  fullName: Steeltoe.Extensions.Logging.DynamicSerilog.SerilogDynamicLoggerFactory.Dispose()
  type: Method
  source:
    remote:
      path: src/Logging/src/DynamicSerilogBase/SerilogDynamicLoggerFactory.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Dispose
    path: ../Steeltoe/src/Logging/src/DynamicSerilogBase/SerilogDynamicLoggerFactory.cs
    startLine: 18
  assemblies:
  - Steeltoe.Extensions.Logging.DynamicSerilogBase
  namespace: Steeltoe.Extensions.Logging.DynamicSerilog
  syntax:
    content: public void Dispose()
    content.vb: Public Sub Dispose
  overload: Steeltoe.Extensions.Logging.DynamicSerilog.SerilogDynamicLoggerFactory.Dispose*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Steeltoe.Extensions.Logging.DynamicSerilog.SerilogDynamicLoggerFactory.CreateLogger(System.String)
  commentId: M:Steeltoe.Extensions.Logging.DynamicSerilog.SerilogDynamicLoggerFactory.CreateLogger(System.String)
  id: CreateLogger(System.String)
  parent: Steeltoe.Extensions.Logging.DynamicSerilog.SerilogDynamicLoggerFactory
  langs:
  - csharp
  - vb
  name: CreateLogger(String)
  nameWithType: SerilogDynamicLoggerFactory.CreateLogger(String)
  fullName: Steeltoe.Extensions.Logging.DynamicSerilog.SerilogDynamicLoggerFactory.CreateLogger(System.String)
  type: Method
  source:
    remote:
      path: src/Logging/src/DynamicSerilogBase/SerilogDynamicLoggerFactory.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: CreateLogger
    path: ../Steeltoe/src/Logging/src/DynamicSerilogBase/SerilogDynamicLoggerFactory.cs
    startLine: 24
  assemblies:
  - Steeltoe.Extensions.Logging.DynamicSerilogBase
  namespace: Steeltoe.Extensions.Logging.DynamicSerilog
  syntax:
    content: public ILogger CreateLogger(string categoryName)
    parameters:
    - id: categoryName
      type: System.String
    return:
      type: ILogger
    content.vb: Public Function CreateLogger(categoryName As String) As ILogger
  overload: Steeltoe.Extensions.Logging.DynamicSerilog.SerilogDynamicLoggerFactory.CreateLogger*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Steeltoe.Extensions.Logging.DynamicSerilog.SerilogDynamicLoggerFactory.AddProvider(ILoggerProvider)
  commentId: M:Steeltoe.Extensions.Logging.DynamicSerilog.SerilogDynamicLoggerFactory.AddProvider(ILoggerProvider)
  id: AddProvider(ILoggerProvider)
  parent: Steeltoe.Extensions.Logging.DynamicSerilog.SerilogDynamicLoggerFactory
  langs:
  - csharp
  - vb
  name: AddProvider(ILoggerProvider)
  nameWithType: SerilogDynamicLoggerFactory.AddProvider(ILoggerProvider)
  fullName: Steeltoe.Extensions.Logging.DynamicSerilog.SerilogDynamicLoggerFactory.AddProvider(ILoggerProvider)
  type: Method
  source:
    remote:
      path: src/Logging/src/DynamicSerilogBase/SerilogDynamicLoggerFactory.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: AddProvider
    path: ../Steeltoe/src/Logging/src/DynamicSerilogBase/SerilogDynamicLoggerFactory.cs
    startLine: 29
  assemblies:
  - Steeltoe.Extensions.Logging.DynamicSerilogBase
  namespace: Steeltoe.Extensions.Logging.DynamicSerilog
  syntax:
    content: public void AddProvider(ILoggerProvider provider)
    parameters:
    - id: provider
      type: ILoggerProvider
    content.vb: Public Sub AddProvider(provider As ILoggerProvider)
  overload: Steeltoe.Extensions.Logging.DynamicSerilog.SerilogDynamicLoggerFactory.AddProvider*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Steeltoe.Extensions.Logging.DynamicSerilog.SerilogDynamicLoggerFactory.Dispose(System.Boolean)
  commentId: M:Steeltoe.Extensions.Logging.DynamicSerilog.SerilogDynamicLoggerFactory.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: Steeltoe.Extensions.Logging.DynamicSerilog.SerilogDynamicLoggerFactory
  langs:
  - csharp
  - vb
  name: Dispose(Boolean)
  nameWithType: SerilogDynamicLoggerFactory.Dispose(Boolean)
  fullName: Steeltoe.Extensions.Logging.DynamicSerilog.SerilogDynamicLoggerFactory.Dispose(System.Boolean)
  type: Method
  source:
    remote:
      path: src/Logging/src/DynamicSerilogBase/SerilogDynamicLoggerFactory.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Dispose
    path: ../Steeltoe/src/Logging/src/DynamicSerilogBase/SerilogDynamicLoggerFactory.cs
    startLine: 34
  assemblies:
  - Steeltoe.Extensions.Logging.DynamicSerilogBase
  namespace: Steeltoe.Extensions.Logging.DynamicSerilog
  syntax:
    content: protected virtual void Dispose(bool disposing)
    parameters:
    - id: disposing
      type: System.Boolean
    content.vb: Protected Overridable Sub Dispose(disposing As Boolean)
  overload: Steeltoe.Extensions.Logging.DynamicSerilog.SerilogDynamicLoggerFactory.Dispose*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: Steeltoe.Extensions.Logging.DynamicSerilog.SerilogDynamicLoggerFactory.Finalize
  commentId: M:Steeltoe.Extensions.Logging.DynamicSerilog.SerilogDynamicLoggerFactory.Finalize
  id: Finalize
  parent: Steeltoe.Extensions.Logging.DynamicSerilog.SerilogDynamicLoggerFactory
  langs:
  - csharp
  - vb
  name: Finalize()
  nameWithType: SerilogDynamicLoggerFactory.Finalize()
  fullName: Steeltoe.Extensions.Logging.DynamicSerilog.SerilogDynamicLoggerFactory.Finalize()
  type: Method
  source:
    remote:
      path: src/Logging/src/DynamicSerilogBase/SerilogDynamicLoggerFactory.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Finalize
    path: ../Steeltoe/src/Logging/src/DynamicSerilogBase/SerilogDynamicLoggerFactory.cs
    startLine: 42
  assemblies:
  - Steeltoe.Extensions.Logging.DynamicSerilogBase
  namespace: Steeltoe.Extensions.Logging.DynamicSerilog
  syntax:
    content: protected void Finalize()
    content.vb: Protected Sub Finalize
  overload: Steeltoe.Extensions.Logging.DynamicSerilog.SerilogDynamicLoggerFactory.Finalize*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
references:
- uid: Steeltoe.Extensions.Logging.DynamicSerilog
  commentId: N:Steeltoe.Extensions.Logging.DynamicSerilog
  name: Steeltoe.Extensions.Logging.DynamicSerilog
  nameWithType: Steeltoe.Extensions.Logging.DynamicSerilog
  fullName: Steeltoe.Extensions.Logging.DynamicSerilog
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Steeltoe.Extensions.Logging.DynamicSerilog.SerilogDynamicLoggerFactory.#ctor*
  commentId: Overload:Steeltoe.Extensions.Logging.DynamicSerilog.SerilogDynamicLoggerFactory.#ctor
  name: SerilogDynamicLoggerFactory
  nameWithType: SerilogDynamicLoggerFactory.SerilogDynamicLoggerFactory
  fullName: Steeltoe.Extensions.Logging.DynamicSerilog.SerilogDynamicLoggerFactory.SerilogDynamicLoggerFactory
- uid: Steeltoe.Extensions.Logging.IDynamicLoggerProvider
  commentId: T:Steeltoe.Extensions.Logging.IDynamicLoggerProvider
  parent: Steeltoe.Extensions.Logging
  name: IDynamicLoggerProvider
  nameWithType: IDynamicLoggerProvider
  fullName: Steeltoe.Extensions.Logging.IDynamicLoggerProvider
- uid: Steeltoe.Extensions.Logging
  commentId: N:Steeltoe.Extensions.Logging
  name: Steeltoe.Extensions.Logging
  nameWithType: Steeltoe.Extensions.Logging
  fullName: Steeltoe.Extensions.Logging
- uid: Steeltoe.Extensions.Logging.DynamicSerilog.SerilogDynamicLoggerFactory.Dispose*
  commentId: Overload:Steeltoe.Extensions.Logging.DynamicSerilog.SerilogDynamicLoggerFactory.Dispose
  name: Dispose
  nameWithType: SerilogDynamicLoggerFactory.Dispose
  fullName: Steeltoe.Extensions.Logging.DynamicSerilog.SerilogDynamicLoggerFactory.Dispose
- uid: Steeltoe.Extensions.Logging.DynamicSerilog.SerilogDynamicLoggerFactory.CreateLogger*
  commentId: Overload:Steeltoe.Extensions.Logging.DynamicSerilog.SerilogDynamicLoggerFactory.CreateLogger
  name: CreateLogger
  nameWithType: SerilogDynamicLoggerFactory.CreateLogger
  fullName: Steeltoe.Extensions.Logging.DynamicSerilog.SerilogDynamicLoggerFactory.CreateLogger
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: ILogger
  isExternal: true
  name: ILogger
  nameWithType: ILogger
  fullName: ILogger
- uid: Steeltoe.Extensions.Logging.DynamicSerilog.SerilogDynamicLoggerFactory.AddProvider*
  commentId: Overload:Steeltoe.Extensions.Logging.DynamicSerilog.SerilogDynamicLoggerFactory.AddProvider
  name: AddProvider
  nameWithType: SerilogDynamicLoggerFactory.AddProvider
  fullName: Steeltoe.Extensions.Logging.DynamicSerilog.SerilogDynamicLoggerFactory.AddProvider
- uid: ILoggerProvider
  isExternal: true
  name: ILoggerProvider
  nameWithType: ILoggerProvider
  fullName: ILoggerProvider
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Steeltoe.Extensions.Logging.DynamicSerilog.SerilogDynamicLoggerFactory.Finalize*
  commentId: Overload:Steeltoe.Extensions.Logging.DynamicSerilog.SerilogDynamicLoggerFactory.Finalize
  name: Finalize
  nameWithType: SerilogDynamicLoggerFactory.Finalize
  fullName: Steeltoe.Extensions.Logging.DynamicSerilog.SerilogDynamicLoggerFactory.Finalize
