### YamlMime:ManagedReference
items:
- uid: Steeltoe.Stream.Binder.DefaultBinderTypeRegistry
  commentId: T:Steeltoe.Stream.Binder.DefaultBinderTypeRegistry
  id: DefaultBinderTypeRegistry
  parent: Steeltoe.Stream.Binder
  children:
  - Steeltoe.Stream.Binder.DefaultBinderTypeRegistry.#ctor
  - Steeltoe.Stream.Binder.DefaultBinderTypeRegistry.#ctor(System.Collections.Generic.List{System.String},System.Boolean)
  - Steeltoe.Stream.Binder.DefaultBinderTypeRegistry.Get(System.String)
  - Steeltoe.Stream.Binder.DefaultBinderTypeRegistry.GetAll
  langs:
  - csharp
  - vb
  name: DefaultBinderTypeRegistry
  nameWithType: DefaultBinderTypeRegistry
  fullName: Steeltoe.Stream.Binder.DefaultBinderTypeRegistry
  type: Class
  source:
    remote:
      path: src/Stream/src/StreamBase/Binder/DefaultBinderTypeRegistry.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: DefaultBinderTypeRegistry
    path: ../Steeltoe/src/Stream/src/StreamBase/Binder/DefaultBinderTypeRegistry.cs
    startLine: 13
  assemblies:
  - Steeltoe.Stream.StreamBase
  namespace: Steeltoe.Stream.Binder
  syntax:
    content: 'public class DefaultBinderTypeRegistry : IBinderTypeRegistry'
    content.vb: >-
      Public Class DefaultBinderTypeRegistry

          Implements IBinderTypeRegistry
  inheritance:
  - System.Object
  implements:
  - Steeltoe.Stream.Binder.IBinderTypeRegistry
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Steeltoe.Stream.Binder.DefaultBinderTypeRegistry.#ctor
  commentId: M:Steeltoe.Stream.Binder.DefaultBinderTypeRegistry.#ctor
  id: '#ctor'
  parent: Steeltoe.Stream.Binder.DefaultBinderTypeRegistry
  langs:
  - csharp
  - vb
  name: DefaultBinderTypeRegistry()
  nameWithType: DefaultBinderTypeRegistry.DefaultBinderTypeRegistry()
  fullName: Steeltoe.Stream.Binder.DefaultBinderTypeRegistry.DefaultBinderTypeRegistry()
  type: Constructor
  source:
    remote:
      path: src/Stream/src/StreamBase/Binder/DefaultBinderTypeRegistry.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: .ctor
    path: ../Steeltoe/src/Stream/src/StreamBase/Binder/DefaultBinderTypeRegistry.cs
    startLine: 18
  assemblies:
  - Steeltoe.Stream.StreamBase
  namespace: Steeltoe.Stream.Binder
  syntax:
    content: public DefaultBinderTypeRegistry()
    content.vb: Public Sub New
  overload: Steeltoe.Stream.Binder.DefaultBinderTypeRegistry.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Steeltoe.Stream.Binder.DefaultBinderTypeRegistry.#ctor(System.Collections.Generic.List{System.String},System.Boolean)
  commentId: M:Steeltoe.Stream.Binder.DefaultBinderTypeRegistry.#ctor(System.Collections.Generic.List{System.String},System.Boolean)
  id: '#ctor(System.Collections.Generic.List{System.String},System.Boolean)'
  parent: Steeltoe.Stream.Binder.DefaultBinderTypeRegistry
  langs:
  - csharp
  - vb
  name: DefaultBinderTypeRegistry(List<String>, Boolean)
  nameWithType: DefaultBinderTypeRegistry.DefaultBinderTypeRegistry(List<String>, Boolean)
  fullName: Steeltoe.Stream.Binder.DefaultBinderTypeRegistry.DefaultBinderTypeRegistry(System.Collections.Generic.List<System.String>, System.Boolean)
  type: Constructor
  source:
    remote:
      path: src/Stream/src/StreamBase/Binder/DefaultBinderTypeRegistry.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: .ctor
    path: ../Steeltoe/src/Stream/src/StreamBase/Binder/DefaultBinderTypeRegistry.cs
    startLine: 33
  assemblies:
  - Steeltoe.Stream.StreamBase
  namespace: Steeltoe.Stream.Binder
  syntax:
    content: public DefaultBinderTypeRegistry(List<string> searchDirectories, bool checkLoadedAssemblys = true)
    parameters:
    - id: searchDirectories
      type: System.Collections.Generic.List{System.String}
    - id: checkLoadedAssemblys
      type: System.Boolean
    content.vb: Public Sub New(searchDirectories As List(Of String), checkLoadedAssemblys As Boolean = True)
  overload: Steeltoe.Stream.Binder.DefaultBinderTypeRegistry.#ctor*
  nameWithType.vb: DefaultBinderTypeRegistry.DefaultBinderTypeRegistry(List(Of String), Boolean)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Steeltoe.Stream.Binder.DefaultBinderTypeRegistry.DefaultBinderTypeRegistry(System.Collections.Generic.List(Of System.String), System.Boolean)
  name.vb: DefaultBinderTypeRegistry(List(Of String), Boolean)
- uid: Steeltoe.Stream.Binder.DefaultBinderTypeRegistry.Get(System.String)
  commentId: M:Steeltoe.Stream.Binder.DefaultBinderTypeRegistry.Get(System.String)
  id: Get(System.String)
  parent: Steeltoe.Stream.Binder.DefaultBinderTypeRegistry
  langs:
  - csharp
  - vb
  name: Get(String)
  nameWithType: DefaultBinderTypeRegistry.Get(String)
  fullName: Steeltoe.Stream.Binder.DefaultBinderTypeRegistry.Get(System.String)
  type: Method
  source:
    remote:
      path: src/Stream/src/StreamBase/Binder/DefaultBinderTypeRegistry.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Get
    path: ../Steeltoe/src/Stream/src/StreamBase/Binder/DefaultBinderTypeRegistry.cs
    startLine: 46
  assemblies:
  - Steeltoe.Stream.StreamBase
  namespace: Steeltoe.Stream.Binder
  syntax:
    content: public IBinderType Get(string name)
    parameters:
    - id: name
      type: System.String
    return:
      type: Steeltoe.Stream.Binder.IBinderType
    content.vb: Public Function Get(name As String) As IBinderType
  overload: Steeltoe.Stream.Binder.DefaultBinderTypeRegistry.Get*
  implements:
  - Steeltoe.Stream.Binder.IBinderTypeRegistry.Get(System.String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Steeltoe.Stream.Binder.DefaultBinderTypeRegistry.GetAll
  commentId: M:Steeltoe.Stream.Binder.DefaultBinderTypeRegistry.GetAll
  id: GetAll
  parent: Steeltoe.Stream.Binder.DefaultBinderTypeRegistry
  langs:
  - csharp
  - vb
  name: GetAll()
  nameWithType: DefaultBinderTypeRegistry.GetAll()
  fullName: Steeltoe.Stream.Binder.DefaultBinderTypeRegistry.GetAll()
  type: Method
  source:
    remote:
      path: src/Stream/src/StreamBase/Binder/DefaultBinderTypeRegistry.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: GetAll
    path: ../Steeltoe/src/Stream/src/StreamBase/Binder/DefaultBinderTypeRegistry.cs
    startLine: 52
  assemblies:
  - Steeltoe.Stream.StreamBase
  namespace: Steeltoe.Stream.Binder
  syntax:
    content: public IDictionary<string, IBinderType> GetAll()
    return:
      type: System.Collections.Generic.IDictionary{System.String,Steeltoe.Stream.Binder.IBinderType}
    content.vb: Public Function GetAll As IDictionary(Of String, IBinderType)
  overload: Steeltoe.Stream.Binder.DefaultBinderTypeRegistry.GetAll*
  implements:
  - Steeltoe.Stream.Binder.IBinderTypeRegistry.GetAll
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Steeltoe.Stream.Binder
  commentId: N:Steeltoe.Stream.Binder
  name: Steeltoe.Stream.Binder
  nameWithType: Steeltoe.Stream.Binder
  fullName: Steeltoe.Stream.Binder
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Steeltoe.Stream.Binder.IBinderTypeRegistry
  commentId: T:Steeltoe.Stream.Binder.IBinderTypeRegistry
  parent: Steeltoe.Stream.Binder
  name: IBinderTypeRegistry
  nameWithType: IBinderTypeRegistry
  fullName: Steeltoe.Stream.Binder.IBinderTypeRegistry
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Steeltoe.Stream.Binder.DefaultBinderTypeRegistry.#ctor*
  commentId: Overload:Steeltoe.Stream.Binder.DefaultBinderTypeRegistry.#ctor
  name: DefaultBinderTypeRegistry
  nameWithType: DefaultBinderTypeRegistry.DefaultBinderTypeRegistry
  fullName: Steeltoe.Stream.Binder.DefaultBinderTypeRegistry.DefaultBinderTypeRegistry
- uid: System.Collections.Generic.List{System.String}
  commentId: T:System.Collections.Generic.List{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<String>
  nameWithType: List<String>
  fullName: System.Collections.Generic.List<System.String>
  nameWithType.vb: List(Of String)
  fullName.vb: System.Collections.Generic.List(Of System.String)
  name.vb: List(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Steeltoe.Stream.Binder.DefaultBinderTypeRegistry.Get*
  commentId: Overload:Steeltoe.Stream.Binder.DefaultBinderTypeRegistry.Get
  name: Get
  nameWithType: DefaultBinderTypeRegistry.Get
  fullName: Steeltoe.Stream.Binder.DefaultBinderTypeRegistry.Get
- uid: Steeltoe.Stream.Binder.IBinderTypeRegistry.Get(System.String)
  commentId: M:Steeltoe.Stream.Binder.IBinderTypeRegistry.Get(System.String)
  parent: Steeltoe.Stream.Binder.IBinderTypeRegistry
  isExternal: true
  name: Get(String)
  nameWithType: IBinderTypeRegistry.Get(String)
  fullName: Steeltoe.Stream.Binder.IBinderTypeRegistry.Get(System.String)
  spec.csharp:
  - uid: Steeltoe.Stream.Binder.IBinderTypeRegistry.Get(System.String)
    name: Get
    nameWithType: IBinderTypeRegistry.Get
    fullName: Steeltoe.Stream.Binder.IBinderTypeRegistry.Get
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Stream.Binder.IBinderTypeRegistry.Get(System.String)
    name: Get
    nameWithType: IBinderTypeRegistry.Get
    fullName: Steeltoe.Stream.Binder.IBinderTypeRegistry.Get
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Steeltoe.Stream.Binder.IBinderType
  commentId: T:Steeltoe.Stream.Binder.IBinderType
  parent: Steeltoe.Stream.Binder
  name: IBinderType
  nameWithType: IBinderType
  fullName: Steeltoe.Stream.Binder.IBinderType
- uid: Steeltoe.Stream.Binder.DefaultBinderTypeRegistry.GetAll*
  commentId: Overload:Steeltoe.Stream.Binder.DefaultBinderTypeRegistry.GetAll
  name: GetAll
  nameWithType: DefaultBinderTypeRegistry.GetAll
  fullName: Steeltoe.Stream.Binder.DefaultBinderTypeRegistry.GetAll
- uid: Steeltoe.Stream.Binder.IBinderTypeRegistry.GetAll
  commentId: M:Steeltoe.Stream.Binder.IBinderTypeRegistry.GetAll
  parent: Steeltoe.Stream.Binder.IBinderTypeRegistry
  name: GetAll()
  nameWithType: IBinderTypeRegistry.GetAll()
  fullName: Steeltoe.Stream.Binder.IBinderTypeRegistry.GetAll()
  spec.csharp:
  - uid: Steeltoe.Stream.Binder.IBinderTypeRegistry.GetAll
    name: GetAll
    nameWithType: IBinderTypeRegistry.GetAll
    fullName: Steeltoe.Stream.Binder.IBinderTypeRegistry.GetAll
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Stream.Binder.IBinderTypeRegistry.GetAll
    name: GetAll
    nameWithType: IBinderTypeRegistry.GetAll
    fullName: Steeltoe.Stream.Binder.IBinderTypeRegistry.GetAll
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IDictionary{System.String,Steeltoe.Stream.Binder.IBinderType}
  commentId: T:System.Collections.Generic.IDictionary{System.String,Steeltoe.Stream.Binder.IBinderType}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IDictionary`2
  name: IDictionary<String, IBinderType>
  nameWithType: IDictionary<String, IBinderType>
  fullName: System.Collections.Generic.IDictionary<System.String, Steeltoe.Stream.Binder.IBinderType>
  nameWithType.vb: IDictionary(Of String, IBinderType)
  fullName.vb: System.Collections.Generic.IDictionary(Of System.String, Steeltoe.Stream.Binder.IBinderType)
  name.vb: IDictionary(Of String, IBinderType)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Stream.Binder.IBinderType
    name: IBinderType
    nameWithType: IBinderType
    fullName: Steeltoe.Stream.Binder.IBinderType
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Stream.Binder.IBinderType
    name: IBinderType
    nameWithType: IBinderType
    fullName: Steeltoe.Stream.Binder.IBinderType
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IDictionary`2
  commentId: T:System.Collections.Generic.IDictionary`2
  isExternal: true
  name: IDictionary<TKey, TValue>
  nameWithType: IDictionary<TKey, TValue>
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>
  nameWithType.vb: IDictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.IDictionary(Of TKey, TValue)
  name.vb: IDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
