### YamlMime:ManagedReference
items:
- uid: Steeltoe.Messaging.RabbitMQ.Connection.IPublisherCallbackChannel
  commentId: T:Steeltoe.Messaging.RabbitMQ.Connection.IPublisherCallbackChannel
  id: IPublisherCallbackChannel
  parent: Steeltoe.Messaging.RabbitMQ.Connection
  children:
  - Steeltoe.Messaging.RabbitMQ.Connection.IPublisherCallbackChannel.AddListener(Steeltoe.Messaging.RabbitMQ.Connection.IPublisherCallbackChannel.IListener)
  - Steeltoe.Messaging.RabbitMQ.Connection.IPublisherCallbackChannel.AddPendingConfirm(Steeltoe.Messaging.RabbitMQ.Connection.IPublisherCallbackChannel.IListener,System.UInt64,Steeltoe.Messaging.RabbitMQ.Connection.PendingConfirm)
  - Steeltoe.Messaging.RabbitMQ.Connection.IPublisherCallbackChannel.Channel
  - Steeltoe.Messaging.RabbitMQ.Connection.IPublisherCallbackChannel.Expire(Steeltoe.Messaging.RabbitMQ.Connection.IPublisherCallbackChannel.IListener,System.Int64)
  - Steeltoe.Messaging.RabbitMQ.Connection.IPublisherCallbackChannel.GetPendingConfirmsCount
  - Steeltoe.Messaging.RabbitMQ.Connection.IPublisherCallbackChannel.GetPendingConfirmsCount(Steeltoe.Messaging.RabbitMQ.Connection.IPublisherCallbackChannel.IListener)
  - Steeltoe.Messaging.RabbitMQ.Connection.IPublisherCallbackChannel.SetAfterAckCallback(System.Action{RabbitMQ.Client.IModel})
  langs:
  - csharp
  - vb
  name: IPublisherCallbackChannel
  nameWithType: IPublisherCallbackChannel
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.IPublisherCallbackChannel
  type: Interface
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Connection/IPublisherCallbackChannel.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: IPublisherCallbackChannel
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Connection/IPublisherCallbackChannel.cs
    startLine: 10
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Connection
  syntax:
    content: 'public interface IPublisherCallbackChannel : IModel, IDisposable'
    content.vb: >-
      Public Interface IPublisherCallbackChannel

          Inherits IModel
  inheritedMembers:
  - RabbitMQ.Client.IModel.Abort
  - RabbitMQ.Client.IModel.Abort(System.UInt16,System.String)
  - RabbitMQ.Client.IModel.BasicAck(System.UInt64,System.Boolean)
  - RabbitMQ.Client.IModel.BasicCancel(System.String)
  - RabbitMQ.Client.IModel.BasicConsume(System.String,System.Boolean,System.String,System.Boolean,System.Boolean,System.Collections.Generic.IDictionary{System.String,System.Object},RabbitMQ.Client.IBasicConsumer)
  - RabbitMQ.Client.IModel.BasicGet(System.String,System.Boolean)
  - RabbitMQ.Client.IModel.BasicNack(System.UInt64,System.Boolean,System.Boolean)
  - RabbitMQ.Client.IModel.BasicPublish(System.String,System.String,System.Boolean,RabbitMQ.Client.IBasicProperties,System.Byte[])
  - RabbitMQ.Client.IModel.BasicQos(System.UInt32,System.UInt16,System.Boolean)
  - RabbitMQ.Client.IModel.BasicRecover(System.Boolean)
  - RabbitMQ.Client.IModel.BasicRecoverAsync(System.Boolean)
  - RabbitMQ.Client.IModel.BasicReject(System.UInt64,System.Boolean)
  - RabbitMQ.Client.IModel.Close
  - RabbitMQ.Client.IModel.Close(System.UInt16,System.String)
  - RabbitMQ.Client.IModel.ConfirmSelect
  - RabbitMQ.Client.IModel.CreateBasicPublishBatch
  - RabbitMQ.Client.IModel.CreateBasicProperties
  - RabbitMQ.Client.IModel.ExchangeBind(System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})
  - RabbitMQ.Client.IModel.ExchangeBindNoWait(System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})
  - RabbitMQ.Client.IModel.ExchangeDeclare(System.String,System.String,System.Boolean,System.Boolean,System.Collections.Generic.IDictionary{System.String,System.Object})
  - RabbitMQ.Client.IModel.ExchangeDeclareNoWait(System.String,System.String,System.Boolean,System.Boolean,System.Collections.Generic.IDictionary{System.String,System.Object})
  - RabbitMQ.Client.IModel.ExchangeDeclarePassive(System.String)
  - RabbitMQ.Client.IModel.ExchangeDelete(System.String,System.Boolean)
  - RabbitMQ.Client.IModel.ExchangeDeleteNoWait(System.String,System.Boolean)
  - RabbitMQ.Client.IModel.ExchangeUnbind(System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})
  - RabbitMQ.Client.IModel.ExchangeUnbindNoWait(System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})
  - RabbitMQ.Client.IModel.QueueBind(System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})
  - RabbitMQ.Client.IModel.QueueBindNoWait(System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})
  - RabbitMQ.Client.IModel.QueueDeclare(System.String,System.Boolean,System.Boolean,System.Boolean,System.Collections.Generic.IDictionary{System.String,System.Object})
  - RabbitMQ.Client.IModel.QueueDeclareNoWait(System.String,System.Boolean,System.Boolean,System.Boolean,System.Collections.Generic.IDictionary{System.String,System.Object})
  - RabbitMQ.Client.IModel.QueueDeclarePassive(System.String)
  - RabbitMQ.Client.IModel.MessageCount(System.String)
  - RabbitMQ.Client.IModel.ConsumerCount(System.String)
  - RabbitMQ.Client.IModel.QueueDelete(System.String,System.Boolean,System.Boolean)
  - RabbitMQ.Client.IModel.QueueDeleteNoWait(System.String,System.Boolean,System.Boolean)
  - RabbitMQ.Client.IModel.QueuePurge(System.String)
  - RabbitMQ.Client.IModel.QueueUnbind(System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})
  - RabbitMQ.Client.IModel.TxCommit
  - RabbitMQ.Client.IModel.TxRollback
  - RabbitMQ.Client.IModel.TxSelect
  - RabbitMQ.Client.IModel.WaitForConfirms
  - RabbitMQ.Client.IModel.WaitForConfirms(System.TimeSpan)
  - RabbitMQ.Client.IModel.WaitForConfirms(System.TimeSpan,System.Boolean@)
  - RabbitMQ.Client.IModel.WaitForConfirmsOrDie
  - RabbitMQ.Client.IModel.WaitForConfirmsOrDie(System.TimeSpan)
  - RabbitMQ.Client.IModel.ChannelNumber
  - RabbitMQ.Client.IModel.CloseReason
  - RabbitMQ.Client.IModel.DefaultConsumer
  - RabbitMQ.Client.IModel.IsClosed
  - RabbitMQ.Client.IModel.IsOpen
  - RabbitMQ.Client.IModel.NextPublishSeqNo
  - RabbitMQ.Client.IModel.ContinuationTimeout
  - RabbitMQ.Client.IModel.BasicAcks
  - RabbitMQ.Client.IModel.BasicNacks
  - RabbitMQ.Client.IModel.BasicRecoverOk
  - RabbitMQ.Client.IModel.BasicReturn
  - RabbitMQ.Client.IModel.CallbackException
  - RabbitMQ.Client.IModel.FlowControl
  - RabbitMQ.Client.IModel.ModelShutdown
  - System.IDisposable.Dispose
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Steeltoe.Messaging.RabbitMQ.Connection.IPublisherCallbackChannel.AddListener(Steeltoe.Messaging.RabbitMQ.Connection.IPublisherCallbackChannel.IListener)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Connection.IPublisherCallbackChannel.AddListener(Steeltoe.Messaging.RabbitMQ.Connection.IPublisherCallbackChannel.IListener)
  id: AddListener(Steeltoe.Messaging.RabbitMQ.Connection.IPublisherCallbackChannel.IListener)
  parent: Steeltoe.Messaging.RabbitMQ.Connection.IPublisherCallbackChannel
  langs:
  - csharp
  - vb
  name: AddListener(IPublisherCallbackChannel.IListener)
  nameWithType: IPublisherCallbackChannel.AddListener(IPublisherCallbackChannel.IListener)
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.IPublisherCallbackChannel.AddListener(Steeltoe.Messaging.RabbitMQ.Connection.IPublisherCallbackChannel.IListener)
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Connection/IPublisherCallbackChannel.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: AddListener
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Connection/IPublisherCallbackChannel.cs
    startLine: 16
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Connection
  summary: "\nAdd a publisher callback listener\n"
  example: []
  syntax:
    content: void AddListener(IPublisherCallbackChannel.IListener listener)
    parameters:
    - id: listener
      type: Steeltoe.Messaging.RabbitMQ.Connection.IPublisherCallbackChannel.IListener
      description: the listener to add
    content.vb: Sub AddListener(listener As IPublisherCallbackChannel.IListener)
  overload: Steeltoe.Messaging.RabbitMQ.Connection.IPublisherCallbackChannel.AddListener*
- uid: Steeltoe.Messaging.RabbitMQ.Connection.IPublisherCallbackChannel.Expire(Steeltoe.Messaging.RabbitMQ.Connection.IPublisherCallbackChannel.IListener,System.Int64)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Connection.IPublisherCallbackChannel.Expire(Steeltoe.Messaging.RabbitMQ.Connection.IPublisherCallbackChannel.IListener,System.Int64)
  id: Expire(Steeltoe.Messaging.RabbitMQ.Connection.IPublisherCallbackChannel.IListener,System.Int64)
  parent: Steeltoe.Messaging.RabbitMQ.Connection.IPublisherCallbackChannel
  langs:
  - csharp
  - vb
  name: Expire(IPublisherCallbackChannel.IListener, Int64)
  nameWithType: IPublisherCallbackChannel.Expire(IPublisherCallbackChannel.IListener, Int64)
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.IPublisherCallbackChannel.Expire(Steeltoe.Messaging.RabbitMQ.Connection.IPublisherCallbackChannel.IListener, System.Int64)
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Connection/IPublisherCallbackChannel.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Expire
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Connection/IPublisherCallbackChannel.cs
    startLine: 25
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Connection
  summary: "\nExpire (remove) any pending confirmations created before the specified cutoff time\nfor the supplied listener and return them to the caller\n"
  example: []
  syntax:
    content: IList<PendingConfirm> Expire(IPublisherCallbackChannel.IListener listener, long cutoffTime)
    parameters:
    - id: listener
      type: Steeltoe.Messaging.RabbitMQ.Connection.IPublisherCallbackChannel.IListener
      description: the listener
    - id: cutoffTime
      type: System.Int64
      description: the time before which expired messages were created
    return:
      type: System.Collections.Generic.IList{Steeltoe.Messaging.RabbitMQ.Connection.PendingConfirm}
      description: the list of expired confirms
    content.vb: Function Expire(listener As IPublisherCallbackChannel.IListener, cutoffTime As Long) As IList(Of PendingConfirm)
  overload: Steeltoe.Messaging.RabbitMQ.Connection.IPublisherCallbackChannel.Expire*
- uid: Steeltoe.Messaging.RabbitMQ.Connection.IPublisherCallbackChannel.GetPendingConfirmsCount(Steeltoe.Messaging.RabbitMQ.Connection.IPublisherCallbackChannel.IListener)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Connection.IPublisherCallbackChannel.GetPendingConfirmsCount(Steeltoe.Messaging.RabbitMQ.Connection.IPublisherCallbackChannel.IListener)
  id: GetPendingConfirmsCount(Steeltoe.Messaging.RabbitMQ.Connection.IPublisherCallbackChannel.IListener)
  parent: Steeltoe.Messaging.RabbitMQ.Connection.IPublisherCallbackChannel
  langs:
  - csharp
  - vb
  name: GetPendingConfirmsCount(IPublisherCallbackChannel.IListener)
  nameWithType: IPublisherCallbackChannel.GetPendingConfirmsCount(IPublisherCallbackChannel.IListener)
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.IPublisherCallbackChannel.GetPendingConfirmsCount(Steeltoe.Messaging.RabbitMQ.Connection.IPublisherCallbackChannel.IListener)
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Connection/IPublisherCallbackChannel.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: GetPendingConfirmsCount
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Connection/IPublisherCallbackChannel.cs
    startLine: 32
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Connection
  summary: "\nGet the total pending confirm count for the listener\n"
  example: []
  syntax:
    content: int GetPendingConfirmsCount(IPublisherCallbackChannel.IListener listener)
    parameters:
    - id: listener
      type: Steeltoe.Messaging.RabbitMQ.Connection.IPublisherCallbackChannel.IListener
      description: the listener to get confirm count for
    return:
      type: System.Int32
      description: the count of pending confirms
    content.vb: Function GetPendingConfirmsCount(listener As IPublisherCallbackChannel.IListener) As Integer
  overload: Steeltoe.Messaging.RabbitMQ.Connection.IPublisherCallbackChannel.GetPendingConfirmsCount*
- uid: Steeltoe.Messaging.RabbitMQ.Connection.IPublisherCallbackChannel.GetPendingConfirmsCount
  commentId: M:Steeltoe.Messaging.RabbitMQ.Connection.IPublisherCallbackChannel.GetPendingConfirmsCount
  id: GetPendingConfirmsCount
  parent: Steeltoe.Messaging.RabbitMQ.Connection.IPublisherCallbackChannel
  langs:
  - csharp
  - vb
  name: GetPendingConfirmsCount()
  nameWithType: IPublisherCallbackChannel.GetPendingConfirmsCount()
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.IPublisherCallbackChannel.GetPendingConfirmsCount()
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Connection/IPublisherCallbackChannel.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: GetPendingConfirmsCount
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Connection/IPublisherCallbackChannel.cs
    startLine: 38
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Connection
  summary: "\nGett the total pending confirm count\n"
  example: []
  syntax:
    content: int GetPendingConfirmsCount()
    return:
      type: System.Int32
      description: the total count
    content.vb: Function GetPendingConfirmsCount As Integer
  overload: Steeltoe.Messaging.RabbitMQ.Connection.IPublisherCallbackChannel.GetPendingConfirmsCount*
- uid: Steeltoe.Messaging.RabbitMQ.Connection.IPublisherCallbackChannel.AddPendingConfirm(Steeltoe.Messaging.RabbitMQ.Connection.IPublisherCallbackChannel.IListener,System.UInt64,Steeltoe.Messaging.RabbitMQ.Connection.PendingConfirm)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Connection.IPublisherCallbackChannel.AddPendingConfirm(Steeltoe.Messaging.RabbitMQ.Connection.IPublisherCallbackChannel.IListener,System.UInt64,Steeltoe.Messaging.RabbitMQ.Connection.PendingConfirm)
  id: AddPendingConfirm(Steeltoe.Messaging.RabbitMQ.Connection.IPublisherCallbackChannel.IListener,System.UInt64,Steeltoe.Messaging.RabbitMQ.Connection.PendingConfirm)
  parent: Steeltoe.Messaging.RabbitMQ.Connection.IPublisherCallbackChannel
  langs:
  - csharp
  - vb
  name: AddPendingConfirm(IPublisherCallbackChannel.IListener, UInt64, PendingConfirm)
  nameWithType: IPublisherCallbackChannel.AddPendingConfirm(IPublisherCallbackChannel.IListener, UInt64, PendingConfirm)
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.IPublisherCallbackChannel.AddPendingConfirm(Steeltoe.Messaging.RabbitMQ.Connection.IPublisherCallbackChannel.IListener, System.UInt64, Steeltoe.Messaging.RabbitMQ.Connection.PendingConfirm)
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Connection/IPublisherCallbackChannel.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: AddPendingConfirm
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Connection/IPublisherCallbackChannel.cs
    startLine: 46
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Connection
  summary: "\nAdd a pending confirmation to this channels map\n"
  example: []
  syntax:
    content: void AddPendingConfirm(IPublisherCallbackChannel.IListener listener, ulong sequence, PendingConfirm pendingConfirm)
    parameters:
    - id: listener
      type: Steeltoe.Messaging.RabbitMQ.Connection.IPublisherCallbackChannel.IListener
      description: the listener the pending confir is for
    - id: sequence
      type: System.UInt64
      description: the key to the map
    - id: pendingConfirm
      type: Steeltoe.Messaging.RabbitMQ.Connection.PendingConfirm
      description: the pending confirm
    content.vb: Sub AddPendingConfirm(listener As IPublisherCallbackChannel.IListener, sequence As ULong, pendingConfirm As PendingConfirm)
  overload: Steeltoe.Messaging.RabbitMQ.Connection.IPublisherCallbackChannel.AddPendingConfirm*
- uid: Steeltoe.Messaging.RabbitMQ.Connection.IPublisherCallbackChannel.Channel
  commentId: P:Steeltoe.Messaging.RabbitMQ.Connection.IPublisherCallbackChannel.Channel
  id: Channel
  parent: Steeltoe.Messaging.RabbitMQ.Connection.IPublisherCallbackChannel
  langs:
  - csharp
  - vb
  name: Channel
  nameWithType: IPublisherCallbackChannel.Channel
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.IPublisherCallbackChannel.Channel
  type: Property
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Connection/IPublisherCallbackChannel.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Channel
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Connection/IPublisherCallbackChannel.cs
    startLine: 51
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Connection
  summary: "\nGets the underlying RabbitMQ model\n"
  example: []
  syntax:
    content: IModel Channel { get; }
    parameters: []
    return:
      type: RabbitMQ.Client.IModel
    content.vb: ReadOnly Property Channel As IModel
  overload: Steeltoe.Messaging.RabbitMQ.Connection.IPublisherCallbackChannel.Channel*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Steeltoe.Messaging.RabbitMQ.Connection.IPublisherCallbackChannel.SetAfterAckCallback(System.Action{RabbitMQ.Client.IModel})
  commentId: M:Steeltoe.Messaging.RabbitMQ.Connection.IPublisherCallbackChannel.SetAfterAckCallback(System.Action{RabbitMQ.Client.IModel})
  id: SetAfterAckCallback(System.Action{RabbitMQ.Client.IModel})
  parent: Steeltoe.Messaging.RabbitMQ.Connection.IPublisherCallbackChannel
  langs:
  - csharp
  - vb
  name: SetAfterAckCallback(Action<IModel>)
  nameWithType: IPublisherCallbackChannel.SetAfterAckCallback(Action<IModel>)
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.IPublisherCallbackChannel.SetAfterAckCallback(System.Action<RabbitMQ.Client.IModel>)
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Connection/IPublisherCallbackChannel.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: SetAfterAckCallback
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Connection/IPublisherCallbackChannel.cs
    startLine: 57
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Connection
  summary: "\nSet a callback to be invoked after the ack/nack has been handled\n"
  example: []
  syntax:
    content: void SetAfterAckCallback(Action<IModel> callback)
    parameters:
    - id: callback
      type: System.Action{RabbitMQ.Client.IModel}
      description: the callback
    content.vb: Sub SetAfterAckCallback(callback As Action(Of IModel))
  overload: Steeltoe.Messaging.RabbitMQ.Connection.IPublisherCallbackChannel.SetAfterAckCallback*
  nameWithType.vb: IPublisherCallbackChannel.SetAfterAckCallback(Action(Of IModel))
  fullName.vb: Steeltoe.Messaging.RabbitMQ.Connection.IPublisherCallbackChannel.SetAfterAckCallback(System.Action(Of RabbitMQ.Client.IModel))
  name.vb: SetAfterAckCallback(Action(Of IModel))
references:
- uid: Steeltoe.Messaging.RabbitMQ.Connection
  commentId: N:Steeltoe.Messaging.RabbitMQ.Connection
  name: Steeltoe.Messaging.RabbitMQ.Connection
  nameWithType: Steeltoe.Messaging.RabbitMQ.Connection
  fullName: Steeltoe.Messaging.RabbitMQ.Connection
- uid: RabbitMQ.Client.IModel.Abort
  commentId: M:RabbitMQ.Client.IModel.Abort
  parent: RabbitMQ.Client.IModel
  isExternal: true
  name: Abort()
  nameWithType: IModel.Abort()
  fullName: RabbitMQ.Client.IModel.Abort()
  spec.csharp:
  - uid: RabbitMQ.Client.IModel.Abort
    name: Abort
    nameWithType: IModel.Abort
    fullName: RabbitMQ.Client.IModel.Abort
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: RabbitMQ.Client.IModel.Abort
    name: Abort
    nameWithType: IModel.Abort
    fullName: RabbitMQ.Client.IModel.Abort
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: RabbitMQ.Client.IModel.Abort(System.UInt16,System.String)
  commentId: M:RabbitMQ.Client.IModel.Abort(System.UInt16,System.String)
  parent: RabbitMQ.Client.IModel
  isExternal: true
  name: Abort(UInt16, String)
  nameWithType: IModel.Abort(UInt16, String)
  fullName: RabbitMQ.Client.IModel.Abort(System.UInt16, System.String)
  spec.csharp:
  - uid: RabbitMQ.Client.IModel.Abort(System.UInt16,System.String)
    name: Abort
    nameWithType: IModel.Abort
    fullName: RabbitMQ.Client.IModel.Abort
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.UInt16
    name: UInt16
    nameWithType: UInt16
    fullName: System.UInt16
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: RabbitMQ.Client.IModel.Abort(System.UInt16,System.String)
    name: Abort
    nameWithType: IModel.Abort
    fullName: RabbitMQ.Client.IModel.Abort
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.UInt16
    name: UInt16
    nameWithType: UInt16
    fullName: System.UInt16
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: RabbitMQ.Client.IModel.BasicAck(System.UInt64,System.Boolean)
  commentId: M:RabbitMQ.Client.IModel.BasicAck(System.UInt64,System.Boolean)
  parent: RabbitMQ.Client.IModel
  isExternal: true
  name: BasicAck(UInt64, Boolean)
  nameWithType: IModel.BasicAck(UInt64, Boolean)
  fullName: RabbitMQ.Client.IModel.BasicAck(System.UInt64, System.Boolean)
  spec.csharp:
  - uid: RabbitMQ.Client.IModel.BasicAck(System.UInt64,System.Boolean)
    name: BasicAck
    nameWithType: IModel.BasicAck
    fullName: RabbitMQ.Client.IModel.BasicAck
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.UInt64
    name: UInt64
    nameWithType: UInt64
    fullName: System.UInt64
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: RabbitMQ.Client.IModel.BasicAck(System.UInt64,System.Boolean)
    name: BasicAck
    nameWithType: IModel.BasicAck
    fullName: RabbitMQ.Client.IModel.BasicAck
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.UInt64
    name: UInt64
    nameWithType: UInt64
    fullName: System.UInt64
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: RabbitMQ.Client.IModel.BasicCancel(System.String)
  commentId: M:RabbitMQ.Client.IModel.BasicCancel(System.String)
  parent: RabbitMQ.Client.IModel
  isExternal: true
  name: BasicCancel(String)
  nameWithType: IModel.BasicCancel(String)
  fullName: RabbitMQ.Client.IModel.BasicCancel(System.String)
  spec.csharp:
  - uid: RabbitMQ.Client.IModel.BasicCancel(System.String)
    name: BasicCancel
    nameWithType: IModel.BasicCancel
    fullName: RabbitMQ.Client.IModel.BasicCancel
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: RabbitMQ.Client.IModel.BasicCancel(System.String)
    name: BasicCancel
    nameWithType: IModel.BasicCancel
    fullName: RabbitMQ.Client.IModel.BasicCancel
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: RabbitMQ.Client.IModel.BasicConsume(System.String,System.Boolean,System.String,System.Boolean,System.Boolean,System.Collections.Generic.IDictionary{System.String,System.Object},RabbitMQ.Client.IBasicConsumer)
  commentId: M:RabbitMQ.Client.IModel.BasicConsume(System.String,System.Boolean,System.String,System.Boolean,System.Boolean,System.Collections.Generic.IDictionary{System.String,System.Object},RabbitMQ.Client.IBasicConsumer)
  parent: RabbitMQ.Client.IModel
  isExternal: true
  name: BasicConsume(String, Boolean, String, Boolean, Boolean, IDictionary<String, Object>, IBasicConsumer)
  nameWithType: IModel.BasicConsume(String, Boolean, String, Boolean, Boolean, IDictionary<String, Object>, IBasicConsumer)
  fullName: RabbitMQ.Client.IModel.BasicConsume(System.String, System.Boolean, System.String, System.Boolean, System.Boolean, System.Collections.Generic.IDictionary<System.String, System.Object>, RabbitMQ.Client.IBasicConsumer)
  nameWithType.vb: IModel.BasicConsume(String, Boolean, String, Boolean, Boolean, IDictionary(Of String, Object), IBasicConsumer)
  fullName.vb: RabbitMQ.Client.IModel.BasicConsume(System.String, System.Boolean, System.String, System.Boolean, System.Boolean, System.Collections.Generic.IDictionary(Of System.String, System.Object), RabbitMQ.Client.IBasicConsumer)
  name.vb: BasicConsume(String, Boolean, String, Boolean, Boolean, IDictionary(Of String, Object), IBasicConsumer)
  spec.csharp:
  - uid: RabbitMQ.Client.IModel.BasicConsume(System.String,System.Boolean,System.String,System.Boolean,System.Boolean,System.Collections.Generic.IDictionary{System.String,System.Object},RabbitMQ.Client.IBasicConsumer)
    name: BasicConsume
    nameWithType: IModel.BasicConsume
    fullName: RabbitMQ.Client.IModel.BasicConsume
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: RabbitMQ.Client.IBasicConsumer
    name: IBasicConsumer
    nameWithType: IBasicConsumer
    fullName: RabbitMQ.Client.IBasicConsumer
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: RabbitMQ.Client.IModel.BasicConsume(System.String,System.Boolean,System.String,System.Boolean,System.Boolean,System.Collections.Generic.IDictionary{System.String,System.Object},RabbitMQ.Client.IBasicConsumer)
    name: BasicConsume
    nameWithType: IModel.BasicConsume
    fullName: RabbitMQ.Client.IModel.BasicConsume
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: RabbitMQ.Client.IBasicConsumer
    name: IBasicConsumer
    nameWithType: IBasicConsumer
    fullName: RabbitMQ.Client.IBasicConsumer
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: RabbitMQ.Client.IModel.BasicGet(System.String,System.Boolean)
  commentId: M:RabbitMQ.Client.IModel.BasicGet(System.String,System.Boolean)
  parent: RabbitMQ.Client.IModel
  isExternal: true
  name: BasicGet(String, Boolean)
  nameWithType: IModel.BasicGet(String, Boolean)
  fullName: RabbitMQ.Client.IModel.BasicGet(System.String, System.Boolean)
  spec.csharp:
  - uid: RabbitMQ.Client.IModel.BasicGet(System.String,System.Boolean)
    name: BasicGet
    nameWithType: IModel.BasicGet
    fullName: RabbitMQ.Client.IModel.BasicGet
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: RabbitMQ.Client.IModel.BasicGet(System.String,System.Boolean)
    name: BasicGet
    nameWithType: IModel.BasicGet
    fullName: RabbitMQ.Client.IModel.BasicGet
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: RabbitMQ.Client.IModel.BasicNack(System.UInt64,System.Boolean,System.Boolean)
  commentId: M:RabbitMQ.Client.IModel.BasicNack(System.UInt64,System.Boolean,System.Boolean)
  parent: RabbitMQ.Client.IModel
  isExternal: true
  name: BasicNack(UInt64, Boolean, Boolean)
  nameWithType: IModel.BasicNack(UInt64, Boolean, Boolean)
  fullName: RabbitMQ.Client.IModel.BasicNack(System.UInt64, System.Boolean, System.Boolean)
  spec.csharp:
  - uid: RabbitMQ.Client.IModel.BasicNack(System.UInt64,System.Boolean,System.Boolean)
    name: BasicNack
    nameWithType: IModel.BasicNack
    fullName: RabbitMQ.Client.IModel.BasicNack
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.UInt64
    name: UInt64
    nameWithType: UInt64
    fullName: System.UInt64
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: RabbitMQ.Client.IModel.BasicNack(System.UInt64,System.Boolean,System.Boolean)
    name: BasicNack
    nameWithType: IModel.BasicNack
    fullName: RabbitMQ.Client.IModel.BasicNack
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.UInt64
    name: UInt64
    nameWithType: UInt64
    fullName: System.UInt64
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: RabbitMQ.Client.IModel.BasicPublish(System.String,System.String,System.Boolean,RabbitMQ.Client.IBasicProperties,System.Byte[])
  commentId: M:RabbitMQ.Client.IModel.BasicPublish(System.String,System.String,System.Boolean,RabbitMQ.Client.IBasicProperties,System.Byte[])
  parent: RabbitMQ.Client.IModel
  isExternal: true
  name: BasicPublish(String, String, Boolean, IBasicProperties, Byte[])
  nameWithType: IModel.BasicPublish(String, String, Boolean, IBasicProperties, Byte[])
  fullName: RabbitMQ.Client.IModel.BasicPublish(System.String, System.String, System.Boolean, RabbitMQ.Client.IBasicProperties, System.Byte[])
  nameWithType.vb: IModel.BasicPublish(String, String, Boolean, IBasicProperties, Byte())
  fullName.vb: RabbitMQ.Client.IModel.BasicPublish(System.String, System.String, System.Boolean, RabbitMQ.Client.IBasicProperties, System.Byte())
  name.vb: BasicPublish(String, String, Boolean, IBasicProperties, Byte())
  spec.csharp:
  - uid: RabbitMQ.Client.IModel.BasicPublish(System.String,System.String,System.Boolean,RabbitMQ.Client.IBasicProperties,System.Byte[])
    name: BasicPublish
    nameWithType: IModel.BasicPublish
    fullName: RabbitMQ.Client.IModel.BasicPublish
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: RabbitMQ.Client.IBasicProperties
    name: IBasicProperties
    nameWithType: IBasicProperties
    fullName: RabbitMQ.Client.IBasicProperties
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: RabbitMQ.Client.IModel.BasicPublish(System.String,System.String,System.Boolean,RabbitMQ.Client.IBasicProperties,System.Byte[])
    name: BasicPublish
    nameWithType: IModel.BasicPublish
    fullName: RabbitMQ.Client.IModel.BasicPublish
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: RabbitMQ.Client.IBasicProperties
    name: IBasicProperties
    nameWithType: IBasicProperties
    fullName: RabbitMQ.Client.IBasicProperties
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: RabbitMQ.Client.IModel.BasicQos(System.UInt32,System.UInt16,System.Boolean)
  commentId: M:RabbitMQ.Client.IModel.BasicQos(System.UInt32,System.UInt16,System.Boolean)
  parent: RabbitMQ.Client.IModel
  isExternal: true
  name: BasicQos(UInt32, UInt16, Boolean)
  nameWithType: IModel.BasicQos(UInt32, UInt16, Boolean)
  fullName: RabbitMQ.Client.IModel.BasicQos(System.UInt32, System.UInt16, System.Boolean)
  spec.csharp:
  - uid: RabbitMQ.Client.IModel.BasicQos(System.UInt32,System.UInt16,System.Boolean)
    name: BasicQos
    nameWithType: IModel.BasicQos
    fullName: RabbitMQ.Client.IModel.BasicQos
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.UInt32
    name: UInt32
    nameWithType: UInt32
    fullName: System.UInt32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.UInt16
    name: UInt16
    nameWithType: UInt16
    fullName: System.UInt16
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: RabbitMQ.Client.IModel.BasicQos(System.UInt32,System.UInt16,System.Boolean)
    name: BasicQos
    nameWithType: IModel.BasicQos
    fullName: RabbitMQ.Client.IModel.BasicQos
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.UInt32
    name: UInt32
    nameWithType: UInt32
    fullName: System.UInt32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.UInt16
    name: UInt16
    nameWithType: UInt16
    fullName: System.UInt16
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: RabbitMQ.Client.IModel.BasicRecover(System.Boolean)
  commentId: M:RabbitMQ.Client.IModel.BasicRecover(System.Boolean)
  parent: RabbitMQ.Client.IModel
  isExternal: true
  name: BasicRecover(Boolean)
  nameWithType: IModel.BasicRecover(Boolean)
  fullName: RabbitMQ.Client.IModel.BasicRecover(System.Boolean)
  spec.csharp:
  - uid: RabbitMQ.Client.IModel.BasicRecover(System.Boolean)
    name: BasicRecover
    nameWithType: IModel.BasicRecover
    fullName: RabbitMQ.Client.IModel.BasicRecover
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: RabbitMQ.Client.IModel.BasicRecover(System.Boolean)
    name: BasicRecover
    nameWithType: IModel.BasicRecover
    fullName: RabbitMQ.Client.IModel.BasicRecover
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: RabbitMQ.Client.IModel.BasicRecoverAsync(System.Boolean)
  commentId: M:RabbitMQ.Client.IModel.BasicRecoverAsync(System.Boolean)
  parent: RabbitMQ.Client.IModel
  isExternal: true
  name: BasicRecoverAsync(Boolean)
  nameWithType: IModel.BasicRecoverAsync(Boolean)
  fullName: RabbitMQ.Client.IModel.BasicRecoverAsync(System.Boolean)
  spec.csharp:
  - uid: RabbitMQ.Client.IModel.BasicRecoverAsync(System.Boolean)
    name: BasicRecoverAsync
    nameWithType: IModel.BasicRecoverAsync
    fullName: RabbitMQ.Client.IModel.BasicRecoverAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: RabbitMQ.Client.IModel.BasicRecoverAsync(System.Boolean)
    name: BasicRecoverAsync
    nameWithType: IModel.BasicRecoverAsync
    fullName: RabbitMQ.Client.IModel.BasicRecoverAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: RabbitMQ.Client.IModel.BasicReject(System.UInt64,System.Boolean)
  commentId: M:RabbitMQ.Client.IModel.BasicReject(System.UInt64,System.Boolean)
  parent: RabbitMQ.Client.IModel
  isExternal: true
  name: BasicReject(UInt64, Boolean)
  nameWithType: IModel.BasicReject(UInt64, Boolean)
  fullName: RabbitMQ.Client.IModel.BasicReject(System.UInt64, System.Boolean)
  spec.csharp:
  - uid: RabbitMQ.Client.IModel.BasicReject(System.UInt64,System.Boolean)
    name: BasicReject
    nameWithType: IModel.BasicReject
    fullName: RabbitMQ.Client.IModel.BasicReject
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.UInt64
    name: UInt64
    nameWithType: UInt64
    fullName: System.UInt64
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: RabbitMQ.Client.IModel.BasicReject(System.UInt64,System.Boolean)
    name: BasicReject
    nameWithType: IModel.BasicReject
    fullName: RabbitMQ.Client.IModel.BasicReject
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.UInt64
    name: UInt64
    nameWithType: UInt64
    fullName: System.UInt64
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: RabbitMQ.Client.IModel.Close
  commentId: M:RabbitMQ.Client.IModel.Close
  parent: RabbitMQ.Client.IModel
  isExternal: true
  name: Close()
  nameWithType: IModel.Close()
  fullName: RabbitMQ.Client.IModel.Close()
  spec.csharp:
  - uid: RabbitMQ.Client.IModel.Close
    name: Close
    nameWithType: IModel.Close
    fullName: RabbitMQ.Client.IModel.Close
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: RabbitMQ.Client.IModel.Close
    name: Close
    nameWithType: IModel.Close
    fullName: RabbitMQ.Client.IModel.Close
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: RabbitMQ.Client.IModel.Close(System.UInt16,System.String)
  commentId: M:RabbitMQ.Client.IModel.Close(System.UInt16,System.String)
  parent: RabbitMQ.Client.IModel
  isExternal: true
  name: Close(UInt16, String)
  nameWithType: IModel.Close(UInt16, String)
  fullName: RabbitMQ.Client.IModel.Close(System.UInt16, System.String)
  spec.csharp:
  - uid: RabbitMQ.Client.IModel.Close(System.UInt16,System.String)
    name: Close
    nameWithType: IModel.Close
    fullName: RabbitMQ.Client.IModel.Close
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.UInt16
    name: UInt16
    nameWithType: UInt16
    fullName: System.UInt16
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: RabbitMQ.Client.IModel.Close(System.UInt16,System.String)
    name: Close
    nameWithType: IModel.Close
    fullName: RabbitMQ.Client.IModel.Close
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.UInt16
    name: UInt16
    nameWithType: UInt16
    fullName: System.UInt16
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: RabbitMQ.Client.IModel.ConfirmSelect
  commentId: M:RabbitMQ.Client.IModel.ConfirmSelect
  parent: RabbitMQ.Client.IModel
  isExternal: true
  name: ConfirmSelect()
  nameWithType: IModel.ConfirmSelect()
  fullName: RabbitMQ.Client.IModel.ConfirmSelect()
  spec.csharp:
  - uid: RabbitMQ.Client.IModel.ConfirmSelect
    name: ConfirmSelect
    nameWithType: IModel.ConfirmSelect
    fullName: RabbitMQ.Client.IModel.ConfirmSelect
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: RabbitMQ.Client.IModel.ConfirmSelect
    name: ConfirmSelect
    nameWithType: IModel.ConfirmSelect
    fullName: RabbitMQ.Client.IModel.ConfirmSelect
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: RabbitMQ.Client.IModel.CreateBasicPublishBatch
  commentId: M:RabbitMQ.Client.IModel.CreateBasicPublishBatch
  parent: RabbitMQ.Client.IModel
  isExternal: true
  name: CreateBasicPublishBatch()
  nameWithType: IModel.CreateBasicPublishBatch()
  fullName: RabbitMQ.Client.IModel.CreateBasicPublishBatch()
  spec.csharp:
  - uid: RabbitMQ.Client.IModel.CreateBasicPublishBatch
    name: CreateBasicPublishBatch
    nameWithType: IModel.CreateBasicPublishBatch
    fullName: RabbitMQ.Client.IModel.CreateBasicPublishBatch
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: RabbitMQ.Client.IModel.CreateBasicPublishBatch
    name: CreateBasicPublishBatch
    nameWithType: IModel.CreateBasicPublishBatch
    fullName: RabbitMQ.Client.IModel.CreateBasicPublishBatch
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: RabbitMQ.Client.IModel.CreateBasicProperties
  commentId: M:RabbitMQ.Client.IModel.CreateBasicProperties
  parent: RabbitMQ.Client.IModel
  isExternal: true
  name: CreateBasicProperties()
  nameWithType: IModel.CreateBasicProperties()
  fullName: RabbitMQ.Client.IModel.CreateBasicProperties()
  spec.csharp:
  - uid: RabbitMQ.Client.IModel.CreateBasicProperties
    name: CreateBasicProperties
    nameWithType: IModel.CreateBasicProperties
    fullName: RabbitMQ.Client.IModel.CreateBasicProperties
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: RabbitMQ.Client.IModel.CreateBasicProperties
    name: CreateBasicProperties
    nameWithType: IModel.CreateBasicProperties
    fullName: RabbitMQ.Client.IModel.CreateBasicProperties
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: RabbitMQ.Client.IModel.ExchangeBind(System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})
  commentId: M:RabbitMQ.Client.IModel.ExchangeBind(System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})
  parent: RabbitMQ.Client.IModel
  isExternal: true
  name: ExchangeBind(String, String, String, IDictionary<String, Object>)
  nameWithType: IModel.ExchangeBind(String, String, String, IDictionary<String, Object>)
  fullName: RabbitMQ.Client.IModel.ExchangeBind(System.String, System.String, System.String, System.Collections.Generic.IDictionary<System.String, System.Object>)
  nameWithType.vb: IModel.ExchangeBind(String, String, String, IDictionary(Of String, Object))
  fullName.vb: RabbitMQ.Client.IModel.ExchangeBind(System.String, System.String, System.String, System.Collections.Generic.IDictionary(Of System.String, System.Object))
  name.vb: ExchangeBind(String, String, String, IDictionary(Of String, Object))
  spec.csharp:
  - uid: RabbitMQ.Client.IModel.ExchangeBind(System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})
    name: ExchangeBind
    nameWithType: IModel.ExchangeBind
    fullName: RabbitMQ.Client.IModel.ExchangeBind
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: RabbitMQ.Client.IModel.ExchangeBind(System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})
    name: ExchangeBind
    nameWithType: IModel.ExchangeBind
    fullName: RabbitMQ.Client.IModel.ExchangeBind
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: RabbitMQ.Client.IModel.ExchangeBindNoWait(System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})
  commentId: M:RabbitMQ.Client.IModel.ExchangeBindNoWait(System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})
  parent: RabbitMQ.Client.IModel
  isExternal: true
  name: ExchangeBindNoWait(String, String, String, IDictionary<String, Object>)
  nameWithType: IModel.ExchangeBindNoWait(String, String, String, IDictionary<String, Object>)
  fullName: RabbitMQ.Client.IModel.ExchangeBindNoWait(System.String, System.String, System.String, System.Collections.Generic.IDictionary<System.String, System.Object>)
  nameWithType.vb: IModel.ExchangeBindNoWait(String, String, String, IDictionary(Of String, Object))
  fullName.vb: RabbitMQ.Client.IModel.ExchangeBindNoWait(System.String, System.String, System.String, System.Collections.Generic.IDictionary(Of System.String, System.Object))
  name.vb: ExchangeBindNoWait(String, String, String, IDictionary(Of String, Object))
  spec.csharp:
  - uid: RabbitMQ.Client.IModel.ExchangeBindNoWait(System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})
    name: ExchangeBindNoWait
    nameWithType: IModel.ExchangeBindNoWait
    fullName: RabbitMQ.Client.IModel.ExchangeBindNoWait
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: RabbitMQ.Client.IModel.ExchangeBindNoWait(System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})
    name: ExchangeBindNoWait
    nameWithType: IModel.ExchangeBindNoWait
    fullName: RabbitMQ.Client.IModel.ExchangeBindNoWait
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: RabbitMQ.Client.IModel.ExchangeDeclare(System.String,System.String,System.Boolean,System.Boolean,System.Collections.Generic.IDictionary{System.String,System.Object})
  commentId: M:RabbitMQ.Client.IModel.ExchangeDeclare(System.String,System.String,System.Boolean,System.Boolean,System.Collections.Generic.IDictionary{System.String,System.Object})
  parent: RabbitMQ.Client.IModel
  isExternal: true
  name: ExchangeDeclare(String, String, Boolean, Boolean, IDictionary<String, Object>)
  nameWithType: IModel.ExchangeDeclare(String, String, Boolean, Boolean, IDictionary<String, Object>)
  fullName: RabbitMQ.Client.IModel.ExchangeDeclare(System.String, System.String, System.Boolean, System.Boolean, System.Collections.Generic.IDictionary<System.String, System.Object>)
  nameWithType.vb: IModel.ExchangeDeclare(String, String, Boolean, Boolean, IDictionary(Of String, Object))
  fullName.vb: RabbitMQ.Client.IModel.ExchangeDeclare(System.String, System.String, System.Boolean, System.Boolean, System.Collections.Generic.IDictionary(Of System.String, System.Object))
  name.vb: ExchangeDeclare(String, String, Boolean, Boolean, IDictionary(Of String, Object))
  spec.csharp:
  - uid: RabbitMQ.Client.IModel.ExchangeDeclare(System.String,System.String,System.Boolean,System.Boolean,System.Collections.Generic.IDictionary{System.String,System.Object})
    name: ExchangeDeclare
    nameWithType: IModel.ExchangeDeclare
    fullName: RabbitMQ.Client.IModel.ExchangeDeclare
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: RabbitMQ.Client.IModel.ExchangeDeclare(System.String,System.String,System.Boolean,System.Boolean,System.Collections.Generic.IDictionary{System.String,System.Object})
    name: ExchangeDeclare
    nameWithType: IModel.ExchangeDeclare
    fullName: RabbitMQ.Client.IModel.ExchangeDeclare
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: RabbitMQ.Client.IModel.ExchangeDeclareNoWait(System.String,System.String,System.Boolean,System.Boolean,System.Collections.Generic.IDictionary{System.String,System.Object})
  commentId: M:RabbitMQ.Client.IModel.ExchangeDeclareNoWait(System.String,System.String,System.Boolean,System.Boolean,System.Collections.Generic.IDictionary{System.String,System.Object})
  parent: RabbitMQ.Client.IModel
  isExternal: true
  name: ExchangeDeclareNoWait(String, String, Boolean, Boolean, IDictionary<String, Object>)
  nameWithType: IModel.ExchangeDeclareNoWait(String, String, Boolean, Boolean, IDictionary<String, Object>)
  fullName: RabbitMQ.Client.IModel.ExchangeDeclareNoWait(System.String, System.String, System.Boolean, System.Boolean, System.Collections.Generic.IDictionary<System.String, System.Object>)
  nameWithType.vb: IModel.ExchangeDeclareNoWait(String, String, Boolean, Boolean, IDictionary(Of String, Object))
  fullName.vb: RabbitMQ.Client.IModel.ExchangeDeclareNoWait(System.String, System.String, System.Boolean, System.Boolean, System.Collections.Generic.IDictionary(Of System.String, System.Object))
  name.vb: ExchangeDeclareNoWait(String, String, Boolean, Boolean, IDictionary(Of String, Object))
  spec.csharp:
  - uid: RabbitMQ.Client.IModel.ExchangeDeclareNoWait(System.String,System.String,System.Boolean,System.Boolean,System.Collections.Generic.IDictionary{System.String,System.Object})
    name: ExchangeDeclareNoWait
    nameWithType: IModel.ExchangeDeclareNoWait
    fullName: RabbitMQ.Client.IModel.ExchangeDeclareNoWait
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: RabbitMQ.Client.IModel.ExchangeDeclareNoWait(System.String,System.String,System.Boolean,System.Boolean,System.Collections.Generic.IDictionary{System.String,System.Object})
    name: ExchangeDeclareNoWait
    nameWithType: IModel.ExchangeDeclareNoWait
    fullName: RabbitMQ.Client.IModel.ExchangeDeclareNoWait
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: RabbitMQ.Client.IModel.ExchangeDeclarePassive(System.String)
  commentId: M:RabbitMQ.Client.IModel.ExchangeDeclarePassive(System.String)
  parent: RabbitMQ.Client.IModel
  isExternal: true
  name: ExchangeDeclarePassive(String)
  nameWithType: IModel.ExchangeDeclarePassive(String)
  fullName: RabbitMQ.Client.IModel.ExchangeDeclarePassive(System.String)
  spec.csharp:
  - uid: RabbitMQ.Client.IModel.ExchangeDeclarePassive(System.String)
    name: ExchangeDeclarePassive
    nameWithType: IModel.ExchangeDeclarePassive
    fullName: RabbitMQ.Client.IModel.ExchangeDeclarePassive
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: RabbitMQ.Client.IModel.ExchangeDeclarePassive(System.String)
    name: ExchangeDeclarePassive
    nameWithType: IModel.ExchangeDeclarePassive
    fullName: RabbitMQ.Client.IModel.ExchangeDeclarePassive
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: RabbitMQ.Client.IModel.ExchangeDelete(System.String,System.Boolean)
  commentId: M:RabbitMQ.Client.IModel.ExchangeDelete(System.String,System.Boolean)
  parent: RabbitMQ.Client.IModel
  isExternal: true
  name: ExchangeDelete(String, Boolean)
  nameWithType: IModel.ExchangeDelete(String, Boolean)
  fullName: RabbitMQ.Client.IModel.ExchangeDelete(System.String, System.Boolean)
  spec.csharp:
  - uid: RabbitMQ.Client.IModel.ExchangeDelete(System.String,System.Boolean)
    name: ExchangeDelete
    nameWithType: IModel.ExchangeDelete
    fullName: RabbitMQ.Client.IModel.ExchangeDelete
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: RabbitMQ.Client.IModel.ExchangeDelete(System.String,System.Boolean)
    name: ExchangeDelete
    nameWithType: IModel.ExchangeDelete
    fullName: RabbitMQ.Client.IModel.ExchangeDelete
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: RabbitMQ.Client.IModel.ExchangeDeleteNoWait(System.String,System.Boolean)
  commentId: M:RabbitMQ.Client.IModel.ExchangeDeleteNoWait(System.String,System.Boolean)
  parent: RabbitMQ.Client.IModel
  isExternal: true
  name: ExchangeDeleteNoWait(String, Boolean)
  nameWithType: IModel.ExchangeDeleteNoWait(String, Boolean)
  fullName: RabbitMQ.Client.IModel.ExchangeDeleteNoWait(System.String, System.Boolean)
  spec.csharp:
  - uid: RabbitMQ.Client.IModel.ExchangeDeleteNoWait(System.String,System.Boolean)
    name: ExchangeDeleteNoWait
    nameWithType: IModel.ExchangeDeleteNoWait
    fullName: RabbitMQ.Client.IModel.ExchangeDeleteNoWait
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: RabbitMQ.Client.IModel.ExchangeDeleteNoWait(System.String,System.Boolean)
    name: ExchangeDeleteNoWait
    nameWithType: IModel.ExchangeDeleteNoWait
    fullName: RabbitMQ.Client.IModel.ExchangeDeleteNoWait
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: RabbitMQ.Client.IModel.ExchangeUnbind(System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})
  commentId: M:RabbitMQ.Client.IModel.ExchangeUnbind(System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})
  parent: RabbitMQ.Client.IModel
  isExternal: true
  name: ExchangeUnbind(String, String, String, IDictionary<String, Object>)
  nameWithType: IModel.ExchangeUnbind(String, String, String, IDictionary<String, Object>)
  fullName: RabbitMQ.Client.IModel.ExchangeUnbind(System.String, System.String, System.String, System.Collections.Generic.IDictionary<System.String, System.Object>)
  nameWithType.vb: IModel.ExchangeUnbind(String, String, String, IDictionary(Of String, Object))
  fullName.vb: RabbitMQ.Client.IModel.ExchangeUnbind(System.String, System.String, System.String, System.Collections.Generic.IDictionary(Of System.String, System.Object))
  name.vb: ExchangeUnbind(String, String, String, IDictionary(Of String, Object))
  spec.csharp:
  - uid: RabbitMQ.Client.IModel.ExchangeUnbind(System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})
    name: ExchangeUnbind
    nameWithType: IModel.ExchangeUnbind
    fullName: RabbitMQ.Client.IModel.ExchangeUnbind
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: RabbitMQ.Client.IModel.ExchangeUnbind(System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})
    name: ExchangeUnbind
    nameWithType: IModel.ExchangeUnbind
    fullName: RabbitMQ.Client.IModel.ExchangeUnbind
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: RabbitMQ.Client.IModel.ExchangeUnbindNoWait(System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})
  commentId: M:RabbitMQ.Client.IModel.ExchangeUnbindNoWait(System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})
  parent: RabbitMQ.Client.IModel
  isExternal: true
  name: ExchangeUnbindNoWait(String, String, String, IDictionary<String, Object>)
  nameWithType: IModel.ExchangeUnbindNoWait(String, String, String, IDictionary<String, Object>)
  fullName: RabbitMQ.Client.IModel.ExchangeUnbindNoWait(System.String, System.String, System.String, System.Collections.Generic.IDictionary<System.String, System.Object>)
  nameWithType.vb: IModel.ExchangeUnbindNoWait(String, String, String, IDictionary(Of String, Object))
  fullName.vb: RabbitMQ.Client.IModel.ExchangeUnbindNoWait(System.String, System.String, System.String, System.Collections.Generic.IDictionary(Of System.String, System.Object))
  name.vb: ExchangeUnbindNoWait(String, String, String, IDictionary(Of String, Object))
  spec.csharp:
  - uid: RabbitMQ.Client.IModel.ExchangeUnbindNoWait(System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})
    name: ExchangeUnbindNoWait
    nameWithType: IModel.ExchangeUnbindNoWait
    fullName: RabbitMQ.Client.IModel.ExchangeUnbindNoWait
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: RabbitMQ.Client.IModel.ExchangeUnbindNoWait(System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})
    name: ExchangeUnbindNoWait
    nameWithType: IModel.ExchangeUnbindNoWait
    fullName: RabbitMQ.Client.IModel.ExchangeUnbindNoWait
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: RabbitMQ.Client.IModel.QueueBind(System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})
  commentId: M:RabbitMQ.Client.IModel.QueueBind(System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})
  parent: RabbitMQ.Client.IModel
  isExternal: true
  name: QueueBind(String, String, String, IDictionary<String, Object>)
  nameWithType: IModel.QueueBind(String, String, String, IDictionary<String, Object>)
  fullName: RabbitMQ.Client.IModel.QueueBind(System.String, System.String, System.String, System.Collections.Generic.IDictionary<System.String, System.Object>)
  nameWithType.vb: IModel.QueueBind(String, String, String, IDictionary(Of String, Object))
  fullName.vb: RabbitMQ.Client.IModel.QueueBind(System.String, System.String, System.String, System.Collections.Generic.IDictionary(Of System.String, System.Object))
  name.vb: QueueBind(String, String, String, IDictionary(Of String, Object))
  spec.csharp:
  - uid: RabbitMQ.Client.IModel.QueueBind(System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})
    name: QueueBind
    nameWithType: IModel.QueueBind
    fullName: RabbitMQ.Client.IModel.QueueBind
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: RabbitMQ.Client.IModel.QueueBind(System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})
    name: QueueBind
    nameWithType: IModel.QueueBind
    fullName: RabbitMQ.Client.IModel.QueueBind
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: RabbitMQ.Client.IModel.QueueBindNoWait(System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})
  commentId: M:RabbitMQ.Client.IModel.QueueBindNoWait(System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})
  parent: RabbitMQ.Client.IModel
  isExternal: true
  name: QueueBindNoWait(String, String, String, IDictionary<String, Object>)
  nameWithType: IModel.QueueBindNoWait(String, String, String, IDictionary<String, Object>)
  fullName: RabbitMQ.Client.IModel.QueueBindNoWait(System.String, System.String, System.String, System.Collections.Generic.IDictionary<System.String, System.Object>)
  nameWithType.vb: IModel.QueueBindNoWait(String, String, String, IDictionary(Of String, Object))
  fullName.vb: RabbitMQ.Client.IModel.QueueBindNoWait(System.String, System.String, System.String, System.Collections.Generic.IDictionary(Of System.String, System.Object))
  name.vb: QueueBindNoWait(String, String, String, IDictionary(Of String, Object))
  spec.csharp:
  - uid: RabbitMQ.Client.IModel.QueueBindNoWait(System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})
    name: QueueBindNoWait
    nameWithType: IModel.QueueBindNoWait
    fullName: RabbitMQ.Client.IModel.QueueBindNoWait
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: RabbitMQ.Client.IModel.QueueBindNoWait(System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})
    name: QueueBindNoWait
    nameWithType: IModel.QueueBindNoWait
    fullName: RabbitMQ.Client.IModel.QueueBindNoWait
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: RabbitMQ.Client.IModel.QueueDeclare(System.String,System.Boolean,System.Boolean,System.Boolean,System.Collections.Generic.IDictionary{System.String,System.Object})
  commentId: M:RabbitMQ.Client.IModel.QueueDeclare(System.String,System.Boolean,System.Boolean,System.Boolean,System.Collections.Generic.IDictionary{System.String,System.Object})
  parent: RabbitMQ.Client.IModel
  isExternal: true
  name: QueueDeclare(String, Boolean, Boolean, Boolean, IDictionary<String, Object>)
  nameWithType: IModel.QueueDeclare(String, Boolean, Boolean, Boolean, IDictionary<String, Object>)
  fullName: RabbitMQ.Client.IModel.QueueDeclare(System.String, System.Boolean, System.Boolean, System.Boolean, System.Collections.Generic.IDictionary<System.String, System.Object>)
  nameWithType.vb: IModel.QueueDeclare(String, Boolean, Boolean, Boolean, IDictionary(Of String, Object))
  fullName.vb: RabbitMQ.Client.IModel.QueueDeclare(System.String, System.Boolean, System.Boolean, System.Boolean, System.Collections.Generic.IDictionary(Of System.String, System.Object))
  name.vb: QueueDeclare(String, Boolean, Boolean, Boolean, IDictionary(Of String, Object))
  spec.csharp:
  - uid: RabbitMQ.Client.IModel.QueueDeclare(System.String,System.Boolean,System.Boolean,System.Boolean,System.Collections.Generic.IDictionary{System.String,System.Object})
    name: QueueDeclare
    nameWithType: IModel.QueueDeclare
    fullName: RabbitMQ.Client.IModel.QueueDeclare
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: RabbitMQ.Client.IModel.QueueDeclare(System.String,System.Boolean,System.Boolean,System.Boolean,System.Collections.Generic.IDictionary{System.String,System.Object})
    name: QueueDeclare
    nameWithType: IModel.QueueDeclare
    fullName: RabbitMQ.Client.IModel.QueueDeclare
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: RabbitMQ.Client.IModel.QueueDeclareNoWait(System.String,System.Boolean,System.Boolean,System.Boolean,System.Collections.Generic.IDictionary{System.String,System.Object})
  commentId: M:RabbitMQ.Client.IModel.QueueDeclareNoWait(System.String,System.Boolean,System.Boolean,System.Boolean,System.Collections.Generic.IDictionary{System.String,System.Object})
  parent: RabbitMQ.Client.IModel
  isExternal: true
  name: QueueDeclareNoWait(String, Boolean, Boolean, Boolean, IDictionary<String, Object>)
  nameWithType: IModel.QueueDeclareNoWait(String, Boolean, Boolean, Boolean, IDictionary<String, Object>)
  fullName: RabbitMQ.Client.IModel.QueueDeclareNoWait(System.String, System.Boolean, System.Boolean, System.Boolean, System.Collections.Generic.IDictionary<System.String, System.Object>)
  nameWithType.vb: IModel.QueueDeclareNoWait(String, Boolean, Boolean, Boolean, IDictionary(Of String, Object))
  fullName.vb: RabbitMQ.Client.IModel.QueueDeclareNoWait(System.String, System.Boolean, System.Boolean, System.Boolean, System.Collections.Generic.IDictionary(Of System.String, System.Object))
  name.vb: QueueDeclareNoWait(String, Boolean, Boolean, Boolean, IDictionary(Of String, Object))
  spec.csharp:
  - uid: RabbitMQ.Client.IModel.QueueDeclareNoWait(System.String,System.Boolean,System.Boolean,System.Boolean,System.Collections.Generic.IDictionary{System.String,System.Object})
    name: QueueDeclareNoWait
    nameWithType: IModel.QueueDeclareNoWait
    fullName: RabbitMQ.Client.IModel.QueueDeclareNoWait
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: RabbitMQ.Client.IModel.QueueDeclareNoWait(System.String,System.Boolean,System.Boolean,System.Boolean,System.Collections.Generic.IDictionary{System.String,System.Object})
    name: QueueDeclareNoWait
    nameWithType: IModel.QueueDeclareNoWait
    fullName: RabbitMQ.Client.IModel.QueueDeclareNoWait
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: RabbitMQ.Client.IModel.QueueDeclarePassive(System.String)
  commentId: M:RabbitMQ.Client.IModel.QueueDeclarePassive(System.String)
  parent: RabbitMQ.Client.IModel
  isExternal: true
  name: QueueDeclarePassive(String)
  nameWithType: IModel.QueueDeclarePassive(String)
  fullName: RabbitMQ.Client.IModel.QueueDeclarePassive(System.String)
  spec.csharp:
  - uid: RabbitMQ.Client.IModel.QueueDeclarePassive(System.String)
    name: QueueDeclarePassive
    nameWithType: IModel.QueueDeclarePassive
    fullName: RabbitMQ.Client.IModel.QueueDeclarePassive
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: RabbitMQ.Client.IModel.QueueDeclarePassive(System.String)
    name: QueueDeclarePassive
    nameWithType: IModel.QueueDeclarePassive
    fullName: RabbitMQ.Client.IModel.QueueDeclarePassive
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: RabbitMQ.Client.IModel.MessageCount(System.String)
  commentId: M:RabbitMQ.Client.IModel.MessageCount(System.String)
  parent: RabbitMQ.Client.IModel
  isExternal: true
  name: MessageCount(String)
  nameWithType: IModel.MessageCount(String)
  fullName: RabbitMQ.Client.IModel.MessageCount(System.String)
  spec.csharp:
  - uid: RabbitMQ.Client.IModel.MessageCount(System.String)
    name: MessageCount
    nameWithType: IModel.MessageCount
    fullName: RabbitMQ.Client.IModel.MessageCount
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: RabbitMQ.Client.IModel.MessageCount(System.String)
    name: MessageCount
    nameWithType: IModel.MessageCount
    fullName: RabbitMQ.Client.IModel.MessageCount
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: RabbitMQ.Client.IModel.ConsumerCount(System.String)
  commentId: M:RabbitMQ.Client.IModel.ConsumerCount(System.String)
  parent: RabbitMQ.Client.IModel
  isExternal: true
  name: ConsumerCount(String)
  nameWithType: IModel.ConsumerCount(String)
  fullName: RabbitMQ.Client.IModel.ConsumerCount(System.String)
  spec.csharp:
  - uid: RabbitMQ.Client.IModel.ConsumerCount(System.String)
    name: ConsumerCount
    nameWithType: IModel.ConsumerCount
    fullName: RabbitMQ.Client.IModel.ConsumerCount
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: RabbitMQ.Client.IModel.ConsumerCount(System.String)
    name: ConsumerCount
    nameWithType: IModel.ConsumerCount
    fullName: RabbitMQ.Client.IModel.ConsumerCount
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: RabbitMQ.Client.IModel.QueueDelete(System.String,System.Boolean,System.Boolean)
  commentId: M:RabbitMQ.Client.IModel.QueueDelete(System.String,System.Boolean,System.Boolean)
  parent: RabbitMQ.Client.IModel
  isExternal: true
  name: QueueDelete(String, Boolean, Boolean)
  nameWithType: IModel.QueueDelete(String, Boolean, Boolean)
  fullName: RabbitMQ.Client.IModel.QueueDelete(System.String, System.Boolean, System.Boolean)
  spec.csharp:
  - uid: RabbitMQ.Client.IModel.QueueDelete(System.String,System.Boolean,System.Boolean)
    name: QueueDelete
    nameWithType: IModel.QueueDelete
    fullName: RabbitMQ.Client.IModel.QueueDelete
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: RabbitMQ.Client.IModel.QueueDelete(System.String,System.Boolean,System.Boolean)
    name: QueueDelete
    nameWithType: IModel.QueueDelete
    fullName: RabbitMQ.Client.IModel.QueueDelete
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: RabbitMQ.Client.IModel.QueueDeleteNoWait(System.String,System.Boolean,System.Boolean)
  commentId: M:RabbitMQ.Client.IModel.QueueDeleteNoWait(System.String,System.Boolean,System.Boolean)
  parent: RabbitMQ.Client.IModel
  isExternal: true
  name: QueueDeleteNoWait(String, Boolean, Boolean)
  nameWithType: IModel.QueueDeleteNoWait(String, Boolean, Boolean)
  fullName: RabbitMQ.Client.IModel.QueueDeleteNoWait(System.String, System.Boolean, System.Boolean)
  spec.csharp:
  - uid: RabbitMQ.Client.IModel.QueueDeleteNoWait(System.String,System.Boolean,System.Boolean)
    name: QueueDeleteNoWait
    nameWithType: IModel.QueueDeleteNoWait
    fullName: RabbitMQ.Client.IModel.QueueDeleteNoWait
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: RabbitMQ.Client.IModel.QueueDeleteNoWait(System.String,System.Boolean,System.Boolean)
    name: QueueDeleteNoWait
    nameWithType: IModel.QueueDeleteNoWait
    fullName: RabbitMQ.Client.IModel.QueueDeleteNoWait
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: RabbitMQ.Client.IModel.QueuePurge(System.String)
  commentId: M:RabbitMQ.Client.IModel.QueuePurge(System.String)
  parent: RabbitMQ.Client.IModel
  isExternal: true
  name: QueuePurge(String)
  nameWithType: IModel.QueuePurge(String)
  fullName: RabbitMQ.Client.IModel.QueuePurge(System.String)
  spec.csharp:
  - uid: RabbitMQ.Client.IModel.QueuePurge(System.String)
    name: QueuePurge
    nameWithType: IModel.QueuePurge
    fullName: RabbitMQ.Client.IModel.QueuePurge
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: RabbitMQ.Client.IModel.QueuePurge(System.String)
    name: QueuePurge
    nameWithType: IModel.QueuePurge
    fullName: RabbitMQ.Client.IModel.QueuePurge
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: RabbitMQ.Client.IModel.QueueUnbind(System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})
  commentId: M:RabbitMQ.Client.IModel.QueueUnbind(System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})
  parent: RabbitMQ.Client.IModel
  isExternal: true
  name: QueueUnbind(String, String, String, IDictionary<String, Object>)
  nameWithType: IModel.QueueUnbind(String, String, String, IDictionary<String, Object>)
  fullName: RabbitMQ.Client.IModel.QueueUnbind(System.String, System.String, System.String, System.Collections.Generic.IDictionary<System.String, System.Object>)
  nameWithType.vb: IModel.QueueUnbind(String, String, String, IDictionary(Of String, Object))
  fullName.vb: RabbitMQ.Client.IModel.QueueUnbind(System.String, System.String, System.String, System.Collections.Generic.IDictionary(Of System.String, System.Object))
  name.vb: QueueUnbind(String, String, String, IDictionary(Of String, Object))
  spec.csharp:
  - uid: RabbitMQ.Client.IModel.QueueUnbind(System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})
    name: QueueUnbind
    nameWithType: IModel.QueueUnbind
    fullName: RabbitMQ.Client.IModel.QueueUnbind
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: RabbitMQ.Client.IModel.QueueUnbind(System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})
    name: QueueUnbind
    nameWithType: IModel.QueueUnbind
    fullName: RabbitMQ.Client.IModel.QueueUnbind
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: RabbitMQ.Client.IModel.TxCommit
  commentId: M:RabbitMQ.Client.IModel.TxCommit
  parent: RabbitMQ.Client.IModel
  isExternal: true
  name: TxCommit()
  nameWithType: IModel.TxCommit()
  fullName: RabbitMQ.Client.IModel.TxCommit()
  spec.csharp:
  - uid: RabbitMQ.Client.IModel.TxCommit
    name: TxCommit
    nameWithType: IModel.TxCommit
    fullName: RabbitMQ.Client.IModel.TxCommit
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: RabbitMQ.Client.IModel.TxCommit
    name: TxCommit
    nameWithType: IModel.TxCommit
    fullName: RabbitMQ.Client.IModel.TxCommit
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: RabbitMQ.Client.IModel.TxRollback
  commentId: M:RabbitMQ.Client.IModel.TxRollback
  parent: RabbitMQ.Client.IModel
  isExternal: true
  name: TxRollback()
  nameWithType: IModel.TxRollback()
  fullName: RabbitMQ.Client.IModel.TxRollback()
  spec.csharp:
  - uid: RabbitMQ.Client.IModel.TxRollback
    name: TxRollback
    nameWithType: IModel.TxRollback
    fullName: RabbitMQ.Client.IModel.TxRollback
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: RabbitMQ.Client.IModel.TxRollback
    name: TxRollback
    nameWithType: IModel.TxRollback
    fullName: RabbitMQ.Client.IModel.TxRollback
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: RabbitMQ.Client.IModel.TxSelect
  commentId: M:RabbitMQ.Client.IModel.TxSelect
  parent: RabbitMQ.Client.IModel
  isExternal: true
  name: TxSelect()
  nameWithType: IModel.TxSelect()
  fullName: RabbitMQ.Client.IModel.TxSelect()
  spec.csharp:
  - uid: RabbitMQ.Client.IModel.TxSelect
    name: TxSelect
    nameWithType: IModel.TxSelect
    fullName: RabbitMQ.Client.IModel.TxSelect
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: RabbitMQ.Client.IModel.TxSelect
    name: TxSelect
    nameWithType: IModel.TxSelect
    fullName: RabbitMQ.Client.IModel.TxSelect
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: RabbitMQ.Client.IModel.WaitForConfirms
  commentId: M:RabbitMQ.Client.IModel.WaitForConfirms
  parent: RabbitMQ.Client.IModel
  isExternal: true
  name: WaitForConfirms()
  nameWithType: IModel.WaitForConfirms()
  fullName: RabbitMQ.Client.IModel.WaitForConfirms()
  spec.csharp:
  - uid: RabbitMQ.Client.IModel.WaitForConfirms
    name: WaitForConfirms
    nameWithType: IModel.WaitForConfirms
    fullName: RabbitMQ.Client.IModel.WaitForConfirms
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: RabbitMQ.Client.IModel.WaitForConfirms
    name: WaitForConfirms
    nameWithType: IModel.WaitForConfirms
    fullName: RabbitMQ.Client.IModel.WaitForConfirms
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: RabbitMQ.Client.IModel.WaitForConfirms(System.TimeSpan)
  commentId: M:RabbitMQ.Client.IModel.WaitForConfirms(System.TimeSpan)
  parent: RabbitMQ.Client.IModel
  isExternal: true
  name: WaitForConfirms(TimeSpan)
  nameWithType: IModel.WaitForConfirms(TimeSpan)
  fullName: RabbitMQ.Client.IModel.WaitForConfirms(System.TimeSpan)
  spec.csharp:
  - uid: RabbitMQ.Client.IModel.WaitForConfirms(System.TimeSpan)
    name: WaitForConfirms
    nameWithType: IModel.WaitForConfirms
    fullName: RabbitMQ.Client.IModel.WaitForConfirms
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: RabbitMQ.Client.IModel.WaitForConfirms(System.TimeSpan)
    name: WaitForConfirms
    nameWithType: IModel.WaitForConfirms
    fullName: RabbitMQ.Client.IModel.WaitForConfirms
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: RabbitMQ.Client.IModel.WaitForConfirms(System.TimeSpan,System.Boolean@)
  commentId: M:RabbitMQ.Client.IModel.WaitForConfirms(System.TimeSpan,System.Boolean@)
  parent: RabbitMQ.Client.IModel
  isExternal: true
  name: WaitForConfirms(TimeSpan, Boolean)
  nameWithType: IModel.WaitForConfirms(TimeSpan, Boolean)
  fullName: RabbitMQ.Client.IModel.WaitForConfirms(System.TimeSpan, System.Boolean)
  spec.csharp:
  - uid: RabbitMQ.Client.IModel.WaitForConfirms(System.TimeSpan,System.Boolean@)
    name: WaitForConfirms
    nameWithType: IModel.WaitForConfirms
    fullName: RabbitMQ.Client.IModel.WaitForConfirms
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: RabbitMQ.Client.IModel.WaitForConfirms(System.TimeSpan,System.Boolean@)
    name: WaitForConfirms
    nameWithType: IModel.WaitForConfirms
    fullName: RabbitMQ.Client.IModel.WaitForConfirms
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: RabbitMQ.Client.IModel.WaitForConfirmsOrDie
  commentId: M:RabbitMQ.Client.IModel.WaitForConfirmsOrDie
  parent: RabbitMQ.Client.IModel
  isExternal: true
  name: WaitForConfirmsOrDie()
  nameWithType: IModel.WaitForConfirmsOrDie()
  fullName: RabbitMQ.Client.IModel.WaitForConfirmsOrDie()
  spec.csharp:
  - uid: RabbitMQ.Client.IModel.WaitForConfirmsOrDie
    name: WaitForConfirmsOrDie
    nameWithType: IModel.WaitForConfirmsOrDie
    fullName: RabbitMQ.Client.IModel.WaitForConfirmsOrDie
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: RabbitMQ.Client.IModel.WaitForConfirmsOrDie
    name: WaitForConfirmsOrDie
    nameWithType: IModel.WaitForConfirmsOrDie
    fullName: RabbitMQ.Client.IModel.WaitForConfirmsOrDie
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: RabbitMQ.Client.IModel.WaitForConfirmsOrDie(System.TimeSpan)
  commentId: M:RabbitMQ.Client.IModel.WaitForConfirmsOrDie(System.TimeSpan)
  parent: RabbitMQ.Client.IModel
  isExternal: true
  name: WaitForConfirmsOrDie(TimeSpan)
  nameWithType: IModel.WaitForConfirmsOrDie(TimeSpan)
  fullName: RabbitMQ.Client.IModel.WaitForConfirmsOrDie(System.TimeSpan)
  spec.csharp:
  - uid: RabbitMQ.Client.IModel.WaitForConfirmsOrDie(System.TimeSpan)
    name: WaitForConfirmsOrDie
    nameWithType: IModel.WaitForConfirmsOrDie
    fullName: RabbitMQ.Client.IModel.WaitForConfirmsOrDie
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: RabbitMQ.Client.IModel.WaitForConfirmsOrDie(System.TimeSpan)
    name: WaitForConfirmsOrDie
    nameWithType: IModel.WaitForConfirmsOrDie
    fullName: RabbitMQ.Client.IModel.WaitForConfirmsOrDie
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: RabbitMQ.Client.IModel.ChannelNumber
  commentId: P:RabbitMQ.Client.IModel.ChannelNumber
  parent: RabbitMQ.Client.IModel
  isExternal: true
  name: ChannelNumber
  nameWithType: IModel.ChannelNumber
  fullName: RabbitMQ.Client.IModel.ChannelNumber
- uid: RabbitMQ.Client.IModel.CloseReason
  commentId: P:RabbitMQ.Client.IModel.CloseReason
  parent: RabbitMQ.Client.IModel
  isExternal: true
  name: CloseReason
  nameWithType: IModel.CloseReason
  fullName: RabbitMQ.Client.IModel.CloseReason
- uid: RabbitMQ.Client.IModel.DefaultConsumer
  commentId: P:RabbitMQ.Client.IModel.DefaultConsumer
  parent: RabbitMQ.Client.IModel
  isExternal: true
  name: DefaultConsumer
  nameWithType: IModel.DefaultConsumer
  fullName: RabbitMQ.Client.IModel.DefaultConsumer
- uid: RabbitMQ.Client.IModel.IsClosed
  commentId: P:RabbitMQ.Client.IModel.IsClosed
  parent: RabbitMQ.Client.IModel
  isExternal: true
  name: IsClosed
  nameWithType: IModel.IsClosed
  fullName: RabbitMQ.Client.IModel.IsClosed
- uid: RabbitMQ.Client.IModel.IsOpen
  commentId: P:RabbitMQ.Client.IModel.IsOpen
  parent: RabbitMQ.Client.IModel
  isExternal: true
  name: IsOpen
  nameWithType: IModel.IsOpen
  fullName: RabbitMQ.Client.IModel.IsOpen
- uid: RabbitMQ.Client.IModel.NextPublishSeqNo
  commentId: P:RabbitMQ.Client.IModel.NextPublishSeqNo
  parent: RabbitMQ.Client.IModel
  isExternal: true
  name: NextPublishSeqNo
  nameWithType: IModel.NextPublishSeqNo
  fullName: RabbitMQ.Client.IModel.NextPublishSeqNo
- uid: RabbitMQ.Client.IModel.ContinuationTimeout
  commentId: P:RabbitMQ.Client.IModel.ContinuationTimeout
  parent: RabbitMQ.Client.IModel
  isExternal: true
  name: ContinuationTimeout
  nameWithType: IModel.ContinuationTimeout
  fullName: RabbitMQ.Client.IModel.ContinuationTimeout
- uid: RabbitMQ.Client.IModel.BasicAcks
  commentId: E:RabbitMQ.Client.IModel.BasicAcks
  parent: RabbitMQ.Client.IModel
  isExternal: true
  name: BasicAcks
  nameWithType: IModel.BasicAcks
  fullName: RabbitMQ.Client.IModel.BasicAcks
- uid: RabbitMQ.Client.IModel.BasicNacks
  commentId: E:RabbitMQ.Client.IModel.BasicNacks
  parent: RabbitMQ.Client.IModel
  isExternal: true
  name: BasicNacks
  nameWithType: IModel.BasicNacks
  fullName: RabbitMQ.Client.IModel.BasicNacks
- uid: RabbitMQ.Client.IModel.BasicRecoverOk
  commentId: E:RabbitMQ.Client.IModel.BasicRecoverOk
  parent: RabbitMQ.Client.IModel
  isExternal: true
  name: BasicRecoverOk
  nameWithType: IModel.BasicRecoverOk
  fullName: RabbitMQ.Client.IModel.BasicRecoverOk
- uid: RabbitMQ.Client.IModel.BasicReturn
  commentId: E:RabbitMQ.Client.IModel.BasicReturn
  parent: RabbitMQ.Client.IModel
  isExternal: true
  name: BasicReturn
  nameWithType: IModel.BasicReturn
  fullName: RabbitMQ.Client.IModel.BasicReturn
- uid: RabbitMQ.Client.IModel.CallbackException
  commentId: E:RabbitMQ.Client.IModel.CallbackException
  parent: RabbitMQ.Client.IModel
  isExternal: true
  name: CallbackException
  nameWithType: IModel.CallbackException
  fullName: RabbitMQ.Client.IModel.CallbackException
- uid: RabbitMQ.Client.IModel.FlowControl
  commentId: E:RabbitMQ.Client.IModel.FlowControl
  parent: RabbitMQ.Client.IModel
  isExternal: true
  name: FlowControl
  nameWithType: IModel.FlowControl
  fullName: RabbitMQ.Client.IModel.FlowControl
- uid: RabbitMQ.Client.IModel.ModelShutdown
  commentId: E:RabbitMQ.Client.IModel.ModelShutdown
  parent: RabbitMQ.Client.IModel
  isExternal: true
  name: ModelShutdown
  nameWithType: IModel.ModelShutdown
  fullName: RabbitMQ.Client.IModel.ModelShutdown
- uid: System.IDisposable.Dispose
  commentId: M:System.IDisposable.Dispose
  parent: System.IDisposable
  isExternal: true
  name: Dispose()
  nameWithType: IDisposable.Dispose()
  fullName: System.IDisposable.Dispose()
  spec.csharp:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: RabbitMQ.Client.IModel
  commentId: T:RabbitMQ.Client.IModel
  parent: RabbitMQ.Client
  isExternal: true
  name: IModel
  nameWithType: IModel
  fullName: RabbitMQ.Client.IModel
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: RabbitMQ.Client
  commentId: N:RabbitMQ.Client
  isExternal: true
  name: RabbitMQ.Client
  nameWithType: RabbitMQ.Client
  fullName: RabbitMQ.Client
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Steeltoe.Messaging.RabbitMQ.Connection.IPublisherCallbackChannel.AddListener*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Connection.IPublisherCallbackChannel.AddListener
  name: AddListener
  nameWithType: IPublisherCallbackChannel.AddListener
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.IPublisherCallbackChannel.AddListener
- uid: Steeltoe.Messaging.RabbitMQ.Connection.IPublisherCallbackChannel.IListener
  commentId: T:Steeltoe.Messaging.RabbitMQ.Connection.IPublisherCallbackChannel.IListener
  parent: Steeltoe.Messaging.RabbitMQ.Connection
  name: IPublisherCallbackChannel.IListener
  nameWithType: IPublisherCallbackChannel.IListener
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.IPublisherCallbackChannel.IListener
- uid: Steeltoe.Messaging.RabbitMQ.Connection.IPublisherCallbackChannel.Expire*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Connection.IPublisherCallbackChannel.Expire
  name: Expire
  nameWithType: IPublisherCallbackChannel.Expire
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.IPublisherCallbackChannel.Expire
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.Collections.Generic.IList{Steeltoe.Messaging.RabbitMQ.Connection.PendingConfirm}
  commentId: T:System.Collections.Generic.IList{Steeltoe.Messaging.RabbitMQ.Connection.PendingConfirm}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<PendingConfirm>
  nameWithType: IList<PendingConfirm>
  fullName: System.Collections.Generic.IList<Steeltoe.Messaging.RabbitMQ.Connection.PendingConfirm>
  nameWithType.vb: IList(Of PendingConfirm)
  fullName.vb: System.Collections.Generic.IList(Of Steeltoe.Messaging.RabbitMQ.Connection.PendingConfirm)
  name.vb: IList(Of PendingConfirm)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Steeltoe.Messaging.RabbitMQ.Connection.PendingConfirm
    name: PendingConfirm
    nameWithType: PendingConfirm
    fullName: Steeltoe.Messaging.RabbitMQ.Connection.PendingConfirm
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Steeltoe.Messaging.RabbitMQ.Connection.PendingConfirm
    name: PendingConfirm
    nameWithType: PendingConfirm
    fullName: Steeltoe.Messaging.RabbitMQ.Connection.PendingConfirm
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullName.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Steeltoe.Messaging.RabbitMQ.Connection.IPublisherCallbackChannel.GetPendingConfirmsCount*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Connection.IPublisherCallbackChannel.GetPendingConfirmsCount
  name: GetPendingConfirmsCount
  nameWithType: IPublisherCallbackChannel.GetPendingConfirmsCount
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.IPublisherCallbackChannel.GetPendingConfirmsCount
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Steeltoe.Messaging.RabbitMQ.Connection.IPublisherCallbackChannel.AddPendingConfirm*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Connection.IPublisherCallbackChannel.AddPendingConfirm
  name: AddPendingConfirm
  nameWithType: IPublisherCallbackChannel.AddPendingConfirm
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.IPublisherCallbackChannel.AddPendingConfirm
- uid: System.UInt64
  commentId: T:System.UInt64
  parent: System
  isExternal: true
  name: UInt64
  nameWithType: UInt64
  fullName: System.UInt64
- uid: Steeltoe.Messaging.RabbitMQ.Connection.PendingConfirm
  commentId: T:Steeltoe.Messaging.RabbitMQ.Connection.PendingConfirm
  parent: Steeltoe.Messaging.RabbitMQ.Connection
  name: PendingConfirm
  nameWithType: PendingConfirm
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.PendingConfirm
- uid: Steeltoe.Messaging.RabbitMQ.Connection.IPublisherCallbackChannel.Channel*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Connection.IPublisherCallbackChannel.Channel
  name: Channel
  nameWithType: IPublisherCallbackChannel.Channel
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.IPublisherCallbackChannel.Channel
- uid: Steeltoe.Messaging.RabbitMQ.Connection.IPublisherCallbackChannel.SetAfterAckCallback*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Connection.IPublisherCallbackChannel.SetAfterAckCallback
  name: SetAfterAckCallback
  nameWithType: IPublisherCallbackChannel.SetAfterAckCallback
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.IPublisherCallbackChannel.SetAfterAckCallback
- uid: System.Action{RabbitMQ.Client.IModel}
  commentId: T:System.Action{RabbitMQ.Client.IModel}
  parent: System
  definition: System.Action`1
  name: Action<IModel>
  nameWithType: Action<IModel>
  fullName: System.Action<RabbitMQ.Client.IModel>
  nameWithType.vb: Action(Of IModel)
  fullName.vb: System.Action(Of RabbitMQ.Client.IModel)
  name.vb: Action(Of IModel)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: RabbitMQ.Client.IModel
    name: IModel
    nameWithType: IModel
    fullName: RabbitMQ.Client.IModel
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: RabbitMQ.Client.IModel
    name: IModel
    nameWithType: IModel
    fullName: RabbitMQ.Client.IModel
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Action`1
  commentId: T:System.Action`1
  isExternal: true
  name: Action<T>
  nameWithType: Action<T>
  fullName: System.Action<T>
  nameWithType.vb: Action(Of T)
  fullName.vb: System.Action(Of T)
  name.vb: Action(Of T)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
