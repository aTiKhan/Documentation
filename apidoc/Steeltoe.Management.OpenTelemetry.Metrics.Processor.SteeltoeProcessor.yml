### YamlMime:ManagedReference
items:
- uid: Steeltoe.Management.OpenTelemetry.Metrics.Processor.SteeltoeProcessor
  commentId: T:Steeltoe.Management.OpenTelemetry.Metrics.Processor.SteeltoeProcessor
  id: SteeltoeProcessor
  parent: Steeltoe.Management.OpenTelemetry.Metrics.Processor
  children:
  - Steeltoe.Management.OpenTelemetry.Metrics.Processor.SteeltoeProcessor.#ctor(MetricExporter)
  - Steeltoe.Management.OpenTelemetry.Metrics.Processor.SteeltoeProcessor.#ctor(MetricExporter,System.TimeSpan)
  - Steeltoe.Management.OpenTelemetry.Metrics.Processor.SteeltoeProcessor.Process(System.String,System.String,LabelSet,Aggregator{System.Double})
  - Steeltoe.Management.OpenTelemetry.Metrics.Processor.SteeltoeProcessor.Process(System.String,System.String,LabelSet,Aggregator{System.Int64})
  langs:
  - csharp
  - vb
  name: SteeltoeProcessor
  nameWithType: SteeltoeProcessor
  fullName: Steeltoe.Management.OpenTelemetry.Metrics.Processor.SteeltoeProcessor
  type: Class
  source:
    remote:
      path: src/Management/src/OpenTelemetryBase/Metrics/Processor/SteeltoeProcessor.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: SteeltoeProcessor
    path: ../Steeltoe/src/Management/src/OpenTelemetryBase/Metrics/Processor/SteeltoeProcessor.cs
    startLine: 17
  assemblies:
  - Steeltoe.Management.OpenTelemetryBase
  namespace: Steeltoe.Management.OpenTelemetry.Metrics.Processor
  syntax:
    content: 'public class SteeltoeProcessor : MetricProcessor'
    content.vb: >-
      Public Class SteeltoeProcessor

          Inherits MetricProcessor
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Steeltoe.Management.OpenTelemetry.Metrics.Processor.SteeltoeProcessor.#ctor(MetricExporter,System.TimeSpan)
  commentId: M:Steeltoe.Management.OpenTelemetry.Metrics.Processor.SteeltoeProcessor.#ctor(MetricExporter,System.TimeSpan)
  id: '#ctor(MetricExporter,System.TimeSpan)'
  parent: Steeltoe.Management.OpenTelemetry.Metrics.Processor.SteeltoeProcessor
  langs:
  - csharp
  - vb
  name: SteeltoeProcessor(MetricExporter, TimeSpan)
  nameWithType: SteeltoeProcessor.SteeltoeProcessor(MetricExporter, TimeSpan)
  fullName: Steeltoe.Management.OpenTelemetry.Metrics.Processor.SteeltoeProcessor.SteeltoeProcessor(MetricExporter, System.TimeSpan)
  type: Constructor
  source:
    remote:
      path: src/Management/src/OpenTelemetryBase/Metrics/Processor/SteeltoeProcessor.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: .ctor
    path: ../Steeltoe/src/Management/src/OpenTelemetryBase/Metrics/Processor/SteeltoeProcessor.cs
    startLine: 32
  assemblies:
  - Steeltoe.Management.OpenTelemetryBase
  namespace: Steeltoe.Management.OpenTelemetry.Metrics.Processor
  summary: "\nInitializes a new instance of the <xref href=\"Steeltoe.Management.OpenTelemetry.Metrics.Processor.SteeltoeProcessor\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  example: []
  syntax:
    content: public SteeltoeProcessor(MetricExporter exporter, TimeSpan exportInterval)
    parameters:
    - id: exporter
      type: MetricExporter
      description: Metric exporter instance.
    - id: exportInterval
      type: System.TimeSpan
      description: Interval at which metrics are pushed to Exporter.
    content.vb: Public Sub New(exporter As MetricExporter, exportInterval As TimeSpan)
  overload: Steeltoe.Management.OpenTelemetry.Metrics.Processor.SteeltoeProcessor.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Steeltoe.Management.OpenTelemetry.Metrics.Processor.SteeltoeProcessor.#ctor(MetricExporter)
  commentId: M:Steeltoe.Management.OpenTelemetry.Metrics.Processor.SteeltoeProcessor.#ctor(MetricExporter)
  id: '#ctor(MetricExporter)'
  parent: Steeltoe.Management.OpenTelemetry.Metrics.Processor.SteeltoeProcessor
  langs:
  - csharp
  - vb
  name: SteeltoeProcessor(MetricExporter)
  nameWithType: SteeltoeProcessor.SteeltoeProcessor(MetricExporter)
  fullName: Steeltoe.Management.OpenTelemetry.Metrics.Processor.SteeltoeProcessor.SteeltoeProcessor(MetricExporter)
  type: Constructor
  source:
    remote:
      path: src/Management/src/OpenTelemetryBase/Metrics/Processor/SteeltoeProcessor.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: .ctor
    path: ../Steeltoe/src/Management/src/OpenTelemetryBase/Metrics/Processor/SteeltoeProcessor.cs
    startLine: 52
  assemblies:
  - Steeltoe.Management.OpenTelemetryBase
  namespace: Steeltoe.Management.OpenTelemetry.Metrics.Processor
  summary: "\nInitializes a new instance of the <xref href=\"Steeltoe.Management.OpenTelemetry.Metrics.Processor.SteeltoeProcessor\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  example: []
  syntax:
    content: public SteeltoeProcessor(MetricExporter exporter)
    parameters:
    - id: exporter
      type: MetricExporter
      description: Metric exporter instance.
    content.vb: Public Sub New(exporter As MetricExporter)
  overload: Steeltoe.Management.OpenTelemetry.Metrics.Processor.SteeltoeProcessor.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Steeltoe.Management.OpenTelemetry.Metrics.Processor.SteeltoeProcessor.Process(System.String,System.String,LabelSet,Aggregator{System.Int64})
  commentId: M:Steeltoe.Management.OpenTelemetry.Metrics.Processor.SteeltoeProcessor.Process(System.String,System.String,LabelSet,Aggregator{System.Int64})
  id: Process(System.String,System.String,LabelSet,Aggregator{System.Int64})
  parent: Steeltoe.Management.OpenTelemetry.Metrics.Processor.SteeltoeProcessor
  langs:
  - csharp
  - vb
  name: Process(String, String, LabelSet, Aggregator<Int64>)
  nameWithType: SteeltoeProcessor.Process(String, String, LabelSet, Aggregator<Int64>)
  fullName: Steeltoe.Management.OpenTelemetry.Metrics.Processor.SteeltoeProcessor.Process(System.String, System.String, LabelSet, Aggregator<System.Int64>)
  type: Method
  source:
    remote:
      path: src/Management/src/OpenTelemetryBase/Metrics/Processor/SteeltoeProcessor.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Process
    path: ../Steeltoe/src/Management/src/OpenTelemetryBase/Metrics/Processor/SteeltoeProcessor.cs
    startLine: 57
  assemblies:
  - Steeltoe.Management.OpenTelemetryBase
  namespace: Steeltoe.Management.OpenTelemetry.Metrics.Processor
  syntax:
    content: public override void Process(string meterName, string metricName, LabelSet labelSet, Aggregator<long> aggregator)
    parameters:
    - id: meterName
      type: System.String
    - id: metricName
      type: System.String
    - id: labelSet
      type: LabelSet
    - id: aggregator
      type: Aggregator{System.Int64}
    content.vb: Public Overrides Sub Process(meterName As String, metricName As String, labelSet As LabelSet, aggregator As Aggregator(Of Long))
  overload: Steeltoe.Management.OpenTelemetry.Metrics.Processor.SteeltoeProcessor.Process*
  nameWithType.vb: SteeltoeProcessor.Process(String, String, LabelSet, Aggregator(Of Int64))
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: Steeltoe.Management.OpenTelemetry.Metrics.Processor.SteeltoeProcessor.Process(System.String, System.String, LabelSet, Aggregator(Of System.Int64))
  name.vb: Process(String, String, LabelSet, Aggregator(Of Int64))
- uid: Steeltoe.Management.OpenTelemetry.Metrics.Processor.SteeltoeProcessor.Process(System.String,System.String,LabelSet,Aggregator{System.Double})
  commentId: M:Steeltoe.Management.OpenTelemetry.Metrics.Processor.SteeltoeProcessor.Process(System.String,System.String,LabelSet,Aggregator{System.Double})
  id: Process(System.String,System.String,LabelSet,Aggregator{System.Double})
  parent: Steeltoe.Management.OpenTelemetry.Metrics.Processor.SteeltoeProcessor
  langs:
  - csharp
  - vb
  name: Process(String, String, LabelSet, Aggregator<Double>)
  nameWithType: SteeltoeProcessor.Process(String, String, LabelSet, Aggregator<Double>)
  fullName: Steeltoe.Management.OpenTelemetry.Metrics.Processor.SteeltoeProcessor.Process(System.String, System.String, LabelSet, Aggregator<System.Double>)
  type: Method
  source:
    remote:
      path: src/Management/src/OpenTelemetryBase/Metrics/Processor/SteeltoeProcessor.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Process
    path: ../Steeltoe/src/Management/src/OpenTelemetryBase/Metrics/Processor/SteeltoeProcessor.cs
    startLine: 66
  assemblies:
  - Steeltoe.Management.OpenTelemetryBase
  namespace: Steeltoe.Management.OpenTelemetry.Metrics.Processor
  syntax:
    content: public override void Process(string meterName, string metricName, LabelSet labelSet, Aggregator<double> aggregator)
    parameters:
    - id: meterName
      type: System.String
    - id: metricName
      type: System.String
    - id: labelSet
      type: LabelSet
    - id: aggregator
      type: Aggregator{System.Double}
    content.vb: Public Overrides Sub Process(meterName As String, metricName As String, labelSet As LabelSet, aggregator As Aggregator(Of Double))
  overload: Steeltoe.Management.OpenTelemetry.Metrics.Processor.SteeltoeProcessor.Process*
  nameWithType.vb: SteeltoeProcessor.Process(String, String, LabelSet, Aggregator(Of Double))
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: Steeltoe.Management.OpenTelemetry.Metrics.Processor.SteeltoeProcessor.Process(System.String, System.String, LabelSet, Aggregator(Of System.Double))
  name.vb: Process(String, String, LabelSet, Aggregator(Of Double))
references:
- uid: Steeltoe.Management.OpenTelemetry.Metrics.Processor
  commentId: N:Steeltoe.Management.OpenTelemetry.Metrics.Processor
  name: Steeltoe.Management.OpenTelemetry.Metrics.Processor
  nameWithType: Steeltoe.Management.OpenTelemetry.Metrics.Processor
  fullName: Steeltoe.Management.OpenTelemetry.Metrics.Processor
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Steeltoe.Management.OpenTelemetry.Metrics.Processor.SteeltoeProcessor
  commentId: T:Steeltoe.Management.OpenTelemetry.Metrics.Processor.SteeltoeProcessor
  name: SteeltoeProcessor
  nameWithType: SteeltoeProcessor
  fullName: Steeltoe.Management.OpenTelemetry.Metrics.Processor.SteeltoeProcessor
- uid: Steeltoe.Management.OpenTelemetry.Metrics.Processor.SteeltoeProcessor.#ctor*
  commentId: Overload:Steeltoe.Management.OpenTelemetry.Metrics.Processor.SteeltoeProcessor.#ctor
  name: SteeltoeProcessor
  nameWithType: SteeltoeProcessor.SteeltoeProcessor
  fullName: Steeltoe.Management.OpenTelemetry.Metrics.Processor.SteeltoeProcessor.SteeltoeProcessor
- uid: MetricExporter
  isExternal: true
  name: MetricExporter
  nameWithType: MetricExporter
  fullName: MetricExporter
- uid: System.TimeSpan
  commentId: T:System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: Steeltoe.Management.OpenTelemetry.Metrics.Processor.SteeltoeProcessor.Process*
  commentId: Overload:Steeltoe.Management.OpenTelemetry.Metrics.Processor.SteeltoeProcessor.Process
  name: Process
  nameWithType: SteeltoeProcessor.Process
  fullName: Steeltoe.Management.OpenTelemetry.Metrics.Processor.SteeltoeProcessor.Process
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: LabelSet
  isExternal: true
  name: LabelSet
  nameWithType: LabelSet
  fullName: LabelSet
- uid: Aggregator{System.Int64}
  commentId: '!:Aggregator{System.Int64}'
  definition: Aggregator`1
  name: Aggregator<Int64>
  nameWithType: Aggregator<Int64>
  fullName: Aggregator<System.Int64>
  nameWithType.vb: Aggregator(Of Int64)
  fullName.vb: Aggregator(Of System.Int64)
  name.vb: Aggregator(Of Int64)
  spec.csharp:
  - uid: Aggregator`1
    name: Aggregator
    nameWithType: Aggregator
    fullName: Aggregator
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Aggregator`1
    name: Aggregator
    nameWithType: Aggregator
    fullName: Aggregator
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Aggregator`1
  isExternal: true
  name: Aggregator<>
  nameWithType: Aggregator<>
  fullName: Aggregator<>
  nameWithType.vb: Aggregator(Of )
  fullName.vb: Aggregator(Of )
  name.vb: Aggregator(Of )
  spec.csharp:
  - uid: Aggregator`1
    name: Aggregator
    nameWithType: Aggregator
    fullName: Aggregator
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Aggregator`1
    name: Aggregator
    nameWithType: Aggregator
    fullName: Aggregator
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Aggregator{System.Double}
  commentId: '!:Aggregator{System.Double}'
  definition: Aggregator`1
  name: Aggregator<Double>
  nameWithType: Aggregator<Double>
  fullName: Aggregator<System.Double>
  nameWithType.vb: Aggregator(Of Double)
  fullName.vb: Aggregator(Of System.Double)
  name.vb: Aggregator(Of Double)
  spec.csharp:
  - uid: Aggregator`1
    name: Aggregator
    nameWithType: Aggregator
    fullName: Aggregator
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Aggregator`1
    name: Aggregator
    nameWithType: Aggregator
    fullName: Aggregator
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
