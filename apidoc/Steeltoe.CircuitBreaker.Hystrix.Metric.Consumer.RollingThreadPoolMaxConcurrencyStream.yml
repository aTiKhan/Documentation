### YamlMime:ManagedReference
items:
- uid: Steeltoe.CircuitBreaker.Hystrix.Metric.Consumer.RollingThreadPoolMaxConcurrencyStream
  commentId: T:Steeltoe.CircuitBreaker.Hystrix.Metric.Consumer.RollingThreadPoolMaxConcurrencyStream
  id: RollingThreadPoolMaxConcurrencyStream
  parent: Steeltoe.CircuitBreaker.Hystrix.Metric.Consumer
  children:
  - Steeltoe.CircuitBreaker.Hystrix.Metric.Consumer.RollingThreadPoolMaxConcurrencyStream.#ctor(Steeltoe.CircuitBreaker.Hystrix.IHystrixThreadPoolKey,System.Int32,System.Int32)
  - Steeltoe.CircuitBreaker.Hystrix.Metric.Consumer.RollingThreadPoolMaxConcurrencyStream.GetInstance(Steeltoe.CircuitBreaker.Hystrix.IHystrixThreadPoolKey,Steeltoe.CircuitBreaker.Hystrix.IHystrixThreadPoolOptions)
  - Steeltoe.CircuitBreaker.Hystrix.Metric.Consumer.RollingThreadPoolMaxConcurrencyStream.GetInstance(Steeltoe.CircuitBreaker.Hystrix.IHystrixThreadPoolKey,System.Int32,System.Int32)
  - Steeltoe.CircuitBreaker.Hystrix.Metric.Consumer.RollingThreadPoolMaxConcurrencyStream.Reset
  langs:
  - csharp
  - vb
  name: RollingThreadPoolMaxConcurrencyStream
  nameWithType: RollingThreadPoolMaxConcurrencyStream
  fullName: Steeltoe.CircuitBreaker.Hystrix.Metric.Consumer.RollingThreadPoolMaxConcurrencyStream
  type: Class
  source:
    remote:
      path: src/CircuitBreaker/src/HystrixBase/Metric/Consumer/RollingThreadPoolMaxConcurrencyStream.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: RollingThreadPoolMaxConcurrencyStream
    path: ../Steeltoe/src/CircuitBreaker/src/HystrixBase/Metric/Consumer/RollingThreadPoolMaxConcurrencyStream.cs
    startLine: 9
  assemblies:
  - Steeltoe.CircuitBreaker.HystrixBase
  namespace: Steeltoe.CircuitBreaker.Hystrix.Metric.Consumer
  syntax:
    content: 'public class RollingThreadPoolMaxConcurrencyStream : RollingConcurrencyStream'
    content.vb: >-
      Public Class RollingThreadPoolMaxConcurrencyStream

          Inherits RollingConcurrencyStream
  inheritance:
  - System.Object
  - Steeltoe.CircuitBreaker.Hystrix.Metric.Consumer.RollingConcurrencyStream
  inheritedMembers:
  - Steeltoe.CircuitBreaker.Hystrix.Metric.Consumer.RollingConcurrencyStream.StartCachingStreamValuesIfUnstarted
  - Steeltoe.CircuitBreaker.Hystrix.Metric.Consumer.RollingConcurrencyStream.LatestRollingMax
  - Steeltoe.CircuitBreaker.Hystrix.Metric.Consumer.RollingConcurrencyStream.Observe
  - Steeltoe.CircuitBreaker.Hystrix.Metric.Consumer.RollingConcurrencyStream.Unsubscribe
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Steeltoe.CircuitBreaker.Hystrix.Metric.Consumer.RollingThreadPoolMaxConcurrencyStream.GetInstance(Steeltoe.CircuitBreaker.Hystrix.IHystrixThreadPoolKey,Steeltoe.CircuitBreaker.Hystrix.IHystrixThreadPoolOptions)
  commentId: M:Steeltoe.CircuitBreaker.Hystrix.Metric.Consumer.RollingThreadPoolMaxConcurrencyStream.GetInstance(Steeltoe.CircuitBreaker.Hystrix.IHystrixThreadPoolKey,Steeltoe.CircuitBreaker.Hystrix.IHystrixThreadPoolOptions)
  id: GetInstance(Steeltoe.CircuitBreaker.Hystrix.IHystrixThreadPoolKey,Steeltoe.CircuitBreaker.Hystrix.IHystrixThreadPoolOptions)
  parent: Steeltoe.CircuitBreaker.Hystrix.Metric.Consumer.RollingThreadPoolMaxConcurrencyStream
  langs:
  - csharp
  - vb
  name: GetInstance(IHystrixThreadPoolKey, IHystrixThreadPoolOptions)
  nameWithType: RollingThreadPoolMaxConcurrencyStream.GetInstance(IHystrixThreadPoolKey, IHystrixThreadPoolOptions)
  fullName: Steeltoe.CircuitBreaker.Hystrix.Metric.Consumer.RollingThreadPoolMaxConcurrencyStream.GetInstance(Steeltoe.CircuitBreaker.Hystrix.IHystrixThreadPoolKey, Steeltoe.CircuitBreaker.Hystrix.IHystrixThreadPoolOptions)
  type: Method
  source:
    remote:
      path: src/CircuitBreaker/src/HystrixBase/Metric/Consumer/RollingThreadPoolMaxConcurrencyStream.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: GetInstance
    path: ../Steeltoe/src/CircuitBreaker/src/HystrixBase/Metric/Consumer/RollingThreadPoolMaxConcurrencyStream.cs
    startLine: 13
  assemblies:
  - Steeltoe.CircuitBreaker.HystrixBase
  namespace: Steeltoe.CircuitBreaker.Hystrix.Metric.Consumer
  syntax:
    content: public static RollingThreadPoolMaxConcurrencyStream GetInstance(IHystrixThreadPoolKey threadPoolKey, IHystrixThreadPoolOptions properties)
    parameters:
    - id: threadPoolKey
      type: Steeltoe.CircuitBreaker.Hystrix.IHystrixThreadPoolKey
    - id: properties
      type: Steeltoe.CircuitBreaker.Hystrix.IHystrixThreadPoolOptions
    return:
      type: Steeltoe.CircuitBreaker.Hystrix.Metric.Consumer.RollingThreadPoolMaxConcurrencyStream
    content.vb: Public Shared Function GetInstance(threadPoolKey As IHystrixThreadPoolKey, properties As IHystrixThreadPoolOptions) As RollingThreadPoolMaxConcurrencyStream
  overload: Steeltoe.CircuitBreaker.Hystrix.Metric.Consumer.RollingThreadPoolMaxConcurrencyStream.GetInstance*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Steeltoe.CircuitBreaker.Hystrix.Metric.Consumer.RollingThreadPoolMaxConcurrencyStream.GetInstance(Steeltoe.CircuitBreaker.Hystrix.IHystrixThreadPoolKey,System.Int32,System.Int32)
  commentId: M:Steeltoe.CircuitBreaker.Hystrix.Metric.Consumer.RollingThreadPoolMaxConcurrencyStream.GetInstance(Steeltoe.CircuitBreaker.Hystrix.IHystrixThreadPoolKey,System.Int32,System.Int32)
  id: GetInstance(Steeltoe.CircuitBreaker.Hystrix.IHystrixThreadPoolKey,System.Int32,System.Int32)
  parent: Steeltoe.CircuitBreaker.Hystrix.Metric.Consumer.RollingThreadPoolMaxConcurrencyStream
  langs:
  - csharp
  - vb
  name: GetInstance(IHystrixThreadPoolKey, Int32, Int32)
  nameWithType: RollingThreadPoolMaxConcurrencyStream.GetInstance(IHystrixThreadPoolKey, Int32, Int32)
  fullName: Steeltoe.CircuitBreaker.Hystrix.Metric.Consumer.RollingThreadPoolMaxConcurrencyStream.GetInstance(Steeltoe.CircuitBreaker.Hystrix.IHystrixThreadPoolKey, System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: src/CircuitBreaker/src/HystrixBase/Metric/Consumer/RollingThreadPoolMaxConcurrencyStream.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: GetInstance
    path: ../Steeltoe/src/CircuitBreaker/src/HystrixBase/Metric/Consumer/RollingThreadPoolMaxConcurrencyStream.cs
    startLine: 22
  assemblies:
  - Steeltoe.CircuitBreaker.HystrixBase
  namespace: Steeltoe.CircuitBreaker.Hystrix.Metric.Consumer
  syntax:
    content: public static RollingThreadPoolMaxConcurrencyStream GetInstance(IHystrixThreadPoolKey threadPoolKey, int numBuckets, int bucketSizeInMs)
    parameters:
    - id: threadPoolKey
      type: Steeltoe.CircuitBreaker.Hystrix.IHystrixThreadPoolKey
    - id: numBuckets
      type: System.Int32
    - id: bucketSizeInMs
      type: System.Int32
    return:
      type: Steeltoe.CircuitBreaker.Hystrix.Metric.Consumer.RollingThreadPoolMaxConcurrencyStream
    content.vb: Public Shared Function GetInstance(threadPoolKey As IHystrixThreadPoolKey, numBuckets As Integer, bucketSizeInMs As Integer) As RollingThreadPoolMaxConcurrencyStream
  overload: Steeltoe.CircuitBreaker.Hystrix.Metric.Consumer.RollingThreadPoolMaxConcurrencyStream.GetInstance*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Steeltoe.CircuitBreaker.Hystrix.Metric.Consumer.RollingThreadPoolMaxConcurrencyStream.Reset
  commentId: M:Steeltoe.CircuitBreaker.Hystrix.Metric.Consumer.RollingThreadPoolMaxConcurrencyStream.Reset
  id: Reset
  parent: Steeltoe.CircuitBreaker.Hystrix.Metric.Consumer.RollingThreadPoolMaxConcurrencyStream
  langs:
  - csharp
  - vb
  name: Reset()
  nameWithType: RollingThreadPoolMaxConcurrencyStream.Reset()
  fullName: Steeltoe.CircuitBreaker.Hystrix.Metric.Consumer.RollingThreadPoolMaxConcurrencyStream.Reset()
  type: Method
  source:
    remote:
      path: src/CircuitBreaker/src/HystrixBase/Metric/Consumer/RollingThreadPoolMaxConcurrencyStream.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Reset
    path: ../Steeltoe/src/CircuitBreaker/src/HystrixBase/Metric/Consumer/RollingThreadPoolMaxConcurrencyStream.cs
    startLine: 32
  assemblies:
  - Steeltoe.CircuitBreaker.HystrixBase
  namespace: Steeltoe.CircuitBreaker.Hystrix.Metric.Consumer
  syntax:
    content: public static void Reset()
    content.vb: Public Shared Sub Reset
  overload: Steeltoe.CircuitBreaker.Hystrix.Metric.Consumer.RollingThreadPoolMaxConcurrencyStream.Reset*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Steeltoe.CircuitBreaker.Hystrix.Metric.Consumer.RollingThreadPoolMaxConcurrencyStream.#ctor(Steeltoe.CircuitBreaker.Hystrix.IHystrixThreadPoolKey,System.Int32,System.Int32)
  commentId: M:Steeltoe.CircuitBreaker.Hystrix.Metric.Consumer.RollingThreadPoolMaxConcurrencyStream.#ctor(Steeltoe.CircuitBreaker.Hystrix.IHystrixThreadPoolKey,System.Int32,System.Int32)
  id: '#ctor(Steeltoe.CircuitBreaker.Hystrix.IHystrixThreadPoolKey,System.Int32,System.Int32)'
  parent: Steeltoe.CircuitBreaker.Hystrix.Metric.Consumer.RollingThreadPoolMaxConcurrencyStream
  langs:
  - csharp
  - vb
  name: RollingThreadPoolMaxConcurrencyStream(IHystrixThreadPoolKey, Int32, Int32)
  nameWithType: RollingThreadPoolMaxConcurrencyStream.RollingThreadPoolMaxConcurrencyStream(IHystrixThreadPoolKey, Int32, Int32)
  fullName: Steeltoe.CircuitBreaker.Hystrix.Metric.Consumer.RollingThreadPoolMaxConcurrencyStream.RollingThreadPoolMaxConcurrencyStream(Steeltoe.CircuitBreaker.Hystrix.IHystrixThreadPoolKey, System.Int32, System.Int32)
  type: Constructor
  source:
    remote:
      path: src/CircuitBreaker/src/HystrixBase/Metric/Consumer/RollingThreadPoolMaxConcurrencyStream.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: .ctor
    path: ../Steeltoe/src/CircuitBreaker/src/HystrixBase/Metric/Consumer/RollingThreadPoolMaxConcurrencyStream.cs
    startLine: 44
  assemblies:
  - Steeltoe.CircuitBreaker.HystrixBase
  namespace: Steeltoe.CircuitBreaker.Hystrix.Metric.Consumer
  syntax:
    content: public RollingThreadPoolMaxConcurrencyStream(IHystrixThreadPoolKey threadPoolKey, int numBuckets, int bucketSizeInMs)
    parameters:
    - id: threadPoolKey
      type: Steeltoe.CircuitBreaker.Hystrix.IHystrixThreadPoolKey
    - id: numBuckets
      type: System.Int32
    - id: bucketSizeInMs
      type: System.Int32
    content.vb: Public Sub New(threadPoolKey As IHystrixThreadPoolKey, numBuckets As Integer, bucketSizeInMs As Integer)
  overload: Steeltoe.CircuitBreaker.Hystrix.Metric.Consumer.RollingThreadPoolMaxConcurrencyStream.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Steeltoe.CircuitBreaker.Hystrix.Metric.Consumer
  commentId: N:Steeltoe.CircuitBreaker.Hystrix.Metric.Consumer
  name: Steeltoe.CircuitBreaker.Hystrix.Metric.Consumer
  nameWithType: Steeltoe.CircuitBreaker.Hystrix.Metric.Consumer
  fullName: Steeltoe.CircuitBreaker.Hystrix.Metric.Consumer
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Steeltoe.CircuitBreaker.Hystrix.Metric.Consumer.RollingConcurrencyStream
  commentId: T:Steeltoe.CircuitBreaker.Hystrix.Metric.Consumer.RollingConcurrencyStream
  parent: Steeltoe.CircuitBreaker.Hystrix.Metric.Consumer
  name: RollingConcurrencyStream
  nameWithType: RollingConcurrencyStream
  fullName: Steeltoe.CircuitBreaker.Hystrix.Metric.Consumer.RollingConcurrencyStream
- uid: Steeltoe.CircuitBreaker.Hystrix.Metric.Consumer.RollingConcurrencyStream.StartCachingStreamValuesIfUnstarted
  commentId: M:Steeltoe.CircuitBreaker.Hystrix.Metric.Consumer.RollingConcurrencyStream.StartCachingStreamValuesIfUnstarted
  parent: Steeltoe.CircuitBreaker.Hystrix.Metric.Consumer.RollingConcurrencyStream
  name: StartCachingStreamValuesIfUnstarted()
  nameWithType: RollingConcurrencyStream.StartCachingStreamValuesIfUnstarted()
  fullName: Steeltoe.CircuitBreaker.Hystrix.Metric.Consumer.RollingConcurrencyStream.StartCachingStreamValuesIfUnstarted()
  spec.csharp:
  - uid: Steeltoe.CircuitBreaker.Hystrix.Metric.Consumer.RollingConcurrencyStream.StartCachingStreamValuesIfUnstarted
    name: StartCachingStreamValuesIfUnstarted
    nameWithType: RollingConcurrencyStream.StartCachingStreamValuesIfUnstarted
    fullName: Steeltoe.CircuitBreaker.Hystrix.Metric.Consumer.RollingConcurrencyStream.StartCachingStreamValuesIfUnstarted
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.CircuitBreaker.Hystrix.Metric.Consumer.RollingConcurrencyStream.StartCachingStreamValuesIfUnstarted
    name: StartCachingStreamValuesIfUnstarted
    nameWithType: RollingConcurrencyStream.StartCachingStreamValuesIfUnstarted
    fullName: Steeltoe.CircuitBreaker.Hystrix.Metric.Consumer.RollingConcurrencyStream.StartCachingStreamValuesIfUnstarted
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.CircuitBreaker.Hystrix.Metric.Consumer.RollingConcurrencyStream.LatestRollingMax
  commentId: P:Steeltoe.CircuitBreaker.Hystrix.Metric.Consumer.RollingConcurrencyStream.LatestRollingMax
  parent: Steeltoe.CircuitBreaker.Hystrix.Metric.Consumer.RollingConcurrencyStream
  name: LatestRollingMax
  nameWithType: RollingConcurrencyStream.LatestRollingMax
  fullName: Steeltoe.CircuitBreaker.Hystrix.Metric.Consumer.RollingConcurrencyStream.LatestRollingMax
- uid: Steeltoe.CircuitBreaker.Hystrix.Metric.Consumer.RollingConcurrencyStream.Observe
  commentId: M:Steeltoe.CircuitBreaker.Hystrix.Metric.Consumer.RollingConcurrencyStream.Observe
  parent: Steeltoe.CircuitBreaker.Hystrix.Metric.Consumer.RollingConcurrencyStream
  name: Observe()
  nameWithType: RollingConcurrencyStream.Observe()
  fullName: Steeltoe.CircuitBreaker.Hystrix.Metric.Consumer.RollingConcurrencyStream.Observe()
  spec.csharp:
  - uid: Steeltoe.CircuitBreaker.Hystrix.Metric.Consumer.RollingConcurrencyStream.Observe
    name: Observe
    nameWithType: RollingConcurrencyStream.Observe
    fullName: Steeltoe.CircuitBreaker.Hystrix.Metric.Consumer.RollingConcurrencyStream.Observe
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.CircuitBreaker.Hystrix.Metric.Consumer.RollingConcurrencyStream.Observe
    name: Observe
    nameWithType: RollingConcurrencyStream.Observe
    fullName: Steeltoe.CircuitBreaker.Hystrix.Metric.Consumer.RollingConcurrencyStream.Observe
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.CircuitBreaker.Hystrix.Metric.Consumer.RollingConcurrencyStream.Unsubscribe
  commentId: M:Steeltoe.CircuitBreaker.Hystrix.Metric.Consumer.RollingConcurrencyStream.Unsubscribe
  parent: Steeltoe.CircuitBreaker.Hystrix.Metric.Consumer.RollingConcurrencyStream
  name: Unsubscribe()
  nameWithType: RollingConcurrencyStream.Unsubscribe()
  fullName: Steeltoe.CircuitBreaker.Hystrix.Metric.Consumer.RollingConcurrencyStream.Unsubscribe()
  spec.csharp:
  - uid: Steeltoe.CircuitBreaker.Hystrix.Metric.Consumer.RollingConcurrencyStream.Unsubscribe
    name: Unsubscribe
    nameWithType: RollingConcurrencyStream.Unsubscribe
    fullName: Steeltoe.CircuitBreaker.Hystrix.Metric.Consumer.RollingConcurrencyStream.Unsubscribe
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.CircuitBreaker.Hystrix.Metric.Consumer.RollingConcurrencyStream.Unsubscribe
    name: Unsubscribe
    nameWithType: RollingConcurrencyStream.Unsubscribe
    fullName: Steeltoe.CircuitBreaker.Hystrix.Metric.Consumer.RollingConcurrencyStream.Unsubscribe
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Steeltoe.CircuitBreaker.Hystrix.Metric.Consumer.RollingThreadPoolMaxConcurrencyStream.GetInstance*
  commentId: Overload:Steeltoe.CircuitBreaker.Hystrix.Metric.Consumer.RollingThreadPoolMaxConcurrencyStream.GetInstance
  name: GetInstance
  nameWithType: RollingThreadPoolMaxConcurrencyStream.GetInstance
  fullName: Steeltoe.CircuitBreaker.Hystrix.Metric.Consumer.RollingThreadPoolMaxConcurrencyStream.GetInstance
- uid: Steeltoe.CircuitBreaker.Hystrix.IHystrixThreadPoolKey
  commentId: T:Steeltoe.CircuitBreaker.Hystrix.IHystrixThreadPoolKey
  parent: Steeltoe.CircuitBreaker.Hystrix
  name: IHystrixThreadPoolKey
  nameWithType: IHystrixThreadPoolKey
  fullName: Steeltoe.CircuitBreaker.Hystrix.IHystrixThreadPoolKey
- uid: Steeltoe.CircuitBreaker.Hystrix.IHystrixThreadPoolOptions
  commentId: T:Steeltoe.CircuitBreaker.Hystrix.IHystrixThreadPoolOptions
  parent: Steeltoe.CircuitBreaker.Hystrix
  name: IHystrixThreadPoolOptions
  nameWithType: IHystrixThreadPoolOptions
  fullName: Steeltoe.CircuitBreaker.Hystrix.IHystrixThreadPoolOptions
- uid: Steeltoe.CircuitBreaker.Hystrix.Metric.Consumer.RollingThreadPoolMaxConcurrencyStream
  commentId: T:Steeltoe.CircuitBreaker.Hystrix.Metric.Consumer.RollingThreadPoolMaxConcurrencyStream
  parent: Steeltoe.CircuitBreaker.Hystrix.Metric.Consumer
  name: RollingThreadPoolMaxConcurrencyStream
  nameWithType: RollingThreadPoolMaxConcurrencyStream
  fullName: Steeltoe.CircuitBreaker.Hystrix.Metric.Consumer.RollingThreadPoolMaxConcurrencyStream
- uid: Steeltoe.CircuitBreaker.Hystrix
  commentId: N:Steeltoe.CircuitBreaker.Hystrix
  name: Steeltoe.CircuitBreaker.Hystrix
  nameWithType: Steeltoe.CircuitBreaker.Hystrix
  fullName: Steeltoe.CircuitBreaker.Hystrix
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Steeltoe.CircuitBreaker.Hystrix.Metric.Consumer.RollingThreadPoolMaxConcurrencyStream.Reset*
  commentId: Overload:Steeltoe.CircuitBreaker.Hystrix.Metric.Consumer.RollingThreadPoolMaxConcurrencyStream.Reset
  name: Reset
  nameWithType: RollingThreadPoolMaxConcurrencyStream.Reset
  fullName: Steeltoe.CircuitBreaker.Hystrix.Metric.Consumer.RollingThreadPoolMaxConcurrencyStream.Reset
- uid: Steeltoe.CircuitBreaker.Hystrix.Metric.Consumer.RollingThreadPoolMaxConcurrencyStream.#ctor*
  commentId: Overload:Steeltoe.CircuitBreaker.Hystrix.Metric.Consumer.RollingThreadPoolMaxConcurrencyStream.#ctor
  name: RollingThreadPoolMaxConcurrencyStream
  nameWithType: RollingThreadPoolMaxConcurrencyStream.RollingThreadPoolMaxConcurrencyStream
  fullName: Steeltoe.CircuitBreaker.Hystrix.Metric.Consumer.RollingThreadPoolMaxConcurrencyStream.RollingThreadPoolMaxConcurrencyStream
