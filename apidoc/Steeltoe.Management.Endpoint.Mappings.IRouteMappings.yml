### YamlMime:ManagedReference
items:
- uid: Steeltoe.Management.Endpoint.Mappings.IRouteMappings
  commentId: T:Steeltoe.Management.Endpoint.Mappings.IRouteMappings
  id: IRouteMappings
  parent: Steeltoe.Management.Endpoint.Mappings
  children:
  - Steeltoe.Management.Endpoint.Mappings.IRouteMappings.Routers
  langs:
  - csharp
  - vb
  name: IRouteMappings
  nameWithType: IRouteMappings
  fullName: Steeltoe.Management.Endpoint.Mappings.IRouteMappings
  type: Interface
  source:
    remote:
      path: src/Management/src/EndpointCore/Mappings/IRouteMappings.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: IRouteMappings
    path: ../Steeltoe/src/Management/src/EndpointCore/Mappings/IRouteMappings.cs
    startLine: 9
  assemblies:
  - Steeltoe.Management.EndpointCore
  namespace: Steeltoe.Management.Endpoint.Mappings
  syntax:
    content: public interface IRouteMappings
    content.vb: Public Interface IRouteMappings
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Steeltoe.Management.Endpoint.Mappings.IRouteMappings.Routers
  commentId: P:Steeltoe.Management.Endpoint.Mappings.IRouteMappings.Routers
  id: Routers
  parent: Steeltoe.Management.Endpoint.Mappings.IRouteMappings
  langs:
  - csharp
  - vb
  name: Routers
  nameWithType: IRouteMappings.Routers
  fullName: Steeltoe.Management.Endpoint.Mappings.IRouteMappings.Routers
  type: Property
  source:
    remote:
      path: src/Management/src/EndpointCore/Mappings/IRouteMappings.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Routers
    path: ../Steeltoe/src/Management/src/EndpointCore/Mappings/IRouteMappings.cs
    startLine: 11
  assemblies:
  - Steeltoe.Management.EndpointCore
  namespace: Steeltoe.Management.Endpoint.Mappings
  syntax:
    content: IList<IRouter> Routers { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IList{Microsoft.AspNetCore.Routing.IRouter}
    content.vb: ReadOnly Property Routers As IList(Of IRouter)
  overload: Steeltoe.Management.Endpoint.Mappings.IRouteMappings.Routers*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
references:
- uid: Steeltoe.Management.Endpoint.Mappings
  commentId: N:Steeltoe.Management.Endpoint.Mappings
  name: Steeltoe.Management.Endpoint.Mappings
  nameWithType: Steeltoe.Management.Endpoint.Mappings
  fullName: Steeltoe.Management.Endpoint.Mappings
- uid: Steeltoe.Management.Endpoint.Mappings.IRouteMappings.Routers*
  commentId: Overload:Steeltoe.Management.Endpoint.Mappings.IRouteMappings.Routers
  name: Routers
  nameWithType: IRouteMappings.Routers
  fullName: Steeltoe.Management.Endpoint.Mappings.IRouteMappings.Routers
- uid: System.Collections.Generic.IList{Microsoft.AspNetCore.Routing.IRouter}
  commentId: T:System.Collections.Generic.IList{Microsoft.AspNetCore.Routing.IRouter}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<IRouter>
  nameWithType: IList<IRouter>
  fullName: System.Collections.Generic.IList<Microsoft.AspNetCore.Routing.IRouter>
  nameWithType.vb: IList(Of IRouter)
  fullName.vb: System.Collections.Generic.IList(Of Microsoft.AspNetCore.Routing.IRouter)
  name.vb: IList(Of IRouter)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.AspNetCore.Routing.IRouter
    name: IRouter
    nameWithType: IRouter
    fullName: Microsoft.AspNetCore.Routing.IRouter
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.AspNetCore.Routing.IRouter
    name: IRouter
    nameWithType: IRouter
    fullName: Microsoft.AspNetCore.Routing.IRouter
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullName.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
