### YamlMime:ManagedReference
items:
- uid: Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryTokenKeyResolver
  commentId: T:Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryTokenKeyResolver
  id: CloudFoundryTokenKeyResolver
  parent: Steeltoe.Security.Authentication.CloudFoundry
  children:
  - Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryTokenKeyResolver.#ctor(System.String,System.Net.Http.HttpMessageHandler,System.Boolean)
  - Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryTokenKeyResolver.FetchKeySet
  - Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryTokenKeyResolver.FixupKey(JsonWebKey)
  - Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryTokenKeyResolver.GetHttpClient
  - Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryTokenKeyResolver.GetJsonWebKeySet(System.String)
  - Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryTokenKeyResolver.ResolveSigningKey(System.String,SecurityToken,System.String,TokenValidationParameters)
  langs:
  - csharp
  - vb
  name: CloudFoundryTokenKeyResolver
  nameWithType: CloudFoundryTokenKeyResolver
  fullName: Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryTokenKeyResolver
  type: Class
  source:
    remote:
      path: src/Security/src/Authentication.CloudFoundryBase/CloudFoundryTokenKeyResolver.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: CloudFoundryTokenKeyResolver
    path: ../Steeltoe/src/Security/src/Authentication.CloudFoundryBase/CloudFoundryTokenKeyResolver.cs
    startLine: 16
  assemblies:
  - Steeltoe.Security.Authentication.CloudFoundryBase
  namespace: Steeltoe.Security.Authentication.CloudFoundry
  syntax:
    content: public class CloudFoundryTokenKeyResolver
    content.vb: Public Class CloudFoundryTokenKeyResolver
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryTokenKeyResolver.#ctor(System.String,System.Net.Http.HttpMessageHandler,System.Boolean)
  commentId: M:Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryTokenKeyResolver.#ctor(System.String,System.Net.Http.HttpMessageHandler,System.Boolean)
  id: '#ctor(System.String,System.Net.Http.HttpMessageHandler,System.Boolean)'
  parent: Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryTokenKeyResolver
  langs:
  - csharp
  - vb
  name: CloudFoundryTokenKeyResolver(String, HttpMessageHandler, Boolean)
  nameWithType: CloudFoundryTokenKeyResolver.CloudFoundryTokenKeyResolver(String, HttpMessageHandler, Boolean)
  fullName: Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryTokenKeyResolver.CloudFoundryTokenKeyResolver(System.String, System.Net.Http.HttpMessageHandler, System.Boolean)
  type: Constructor
  source:
    remote:
      path: src/Security/src/Authentication.CloudFoundryBase/CloudFoundryTokenKeyResolver.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: .ctor
    path: ../Steeltoe/src/Security/src/Authentication.CloudFoundryBase/CloudFoundryTokenKeyResolver.cs
    startLine: 25
  assemblies:
  - Steeltoe.Security.Authentication.CloudFoundryBase
  namespace: Steeltoe.Security.Authentication.CloudFoundry
  syntax:
    content: public CloudFoundryTokenKeyResolver(string jwtKeyUrl, HttpMessageHandler httpHandler, bool validateCertificates)
    parameters:
    - id: jwtKeyUrl
      type: System.String
    - id: httpHandler
      type: System.Net.Http.HttpMessageHandler
    - id: validateCertificates
      type: System.Boolean
    content.vb: Public Sub New(jwtKeyUrl As String, httpHandler As HttpMessageHandler, validateCertificates As Boolean)
  overload: Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryTokenKeyResolver.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryTokenKeyResolver.ResolveSigningKey(System.String,SecurityToken,System.String,TokenValidationParameters)
  commentId: M:Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryTokenKeyResolver.ResolveSigningKey(System.String,SecurityToken,System.String,TokenValidationParameters)
  id: ResolveSigningKey(System.String,SecurityToken,System.String,TokenValidationParameters)
  parent: Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryTokenKeyResolver
  langs:
  - csharp
  - vb
  name: ResolveSigningKey(String, SecurityToken, String, TokenValidationParameters)
  nameWithType: CloudFoundryTokenKeyResolver.ResolveSigningKey(String, SecurityToken, String, TokenValidationParameters)
  fullName: Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryTokenKeyResolver.ResolveSigningKey(System.String, SecurityToken, System.String, TokenValidationParameters)
  type: Method
  source:
    remote:
      path: src/Security/src/Authentication.CloudFoundryBase/CloudFoundryTokenKeyResolver.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: ResolveSigningKey
    path: ../Steeltoe/src/Security/src/Authentication.CloudFoundryBase/CloudFoundryTokenKeyResolver.cs
    startLine: 37
  assemblies:
  - Steeltoe.Security.Authentication.CloudFoundryBase
  namespace: Steeltoe.Security.Authentication.CloudFoundry
  syntax:
    content: public virtual IEnumerable<SecurityKey> ResolveSigningKey(string token, SecurityToken securityToken, string kid, TokenValidationParameters validationParameters)
    parameters:
    - id: token
      type: System.String
    - id: securityToken
      type: SecurityToken
    - id: kid
      type: System.String
    - id: validationParameters
      type: TokenValidationParameters
    return:
      type: System.Collections.Generic.IEnumerable{SecurityKey}
    content.vb: Public Overridable Function ResolveSigningKey(token As String, securityToken As SecurityToken, kid As String, validationParameters As TokenValidationParameters) As IEnumerable(Of SecurityKey)
  overload: Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryTokenKeyResolver.ResolveSigningKey*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryTokenKeyResolver.FixupKey(JsonWebKey)
  commentId: M:Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryTokenKeyResolver.FixupKey(JsonWebKey)
  id: FixupKey(JsonWebKey)
  parent: Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryTokenKeyResolver
  langs:
  - csharp
  - vb
  name: FixupKey(JsonWebKey)
  nameWithType: CloudFoundryTokenKeyResolver.FixupKey(JsonWebKey)
  fullName: Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryTokenKeyResolver.FixupKey(JsonWebKey)
  type: Method
  source:
    remote:
      path: src/Security/src/Authentication.CloudFoundryBase/CloudFoundryTokenKeyResolver.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: FixupKey
    path: ../Steeltoe/src/Security/src/Authentication.CloudFoundryBase/CloudFoundryTokenKeyResolver.cs
    startLine: 62
  assemblies:
  - Steeltoe.Security.Authentication.CloudFoundryBase
  namespace: Steeltoe.Security.Authentication.CloudFoundry
  syntax:
    content: public JsonWebKey FixupKey(JsonWebKey key)
    parameters:
    - id: key
      type: JsonWebKey
    return:
      type: JsonWebKey
    content.vb: Public Function FixupKey(key As JsonWebKey) As JsonWebKey
  overload: Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryTokenKeyResolver.FixupKey*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryTokenKeyResolver.FetchKeySet
  commentId: M:Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryTokenKeyResolver.FetchKeySet
  id: FetchKeySet
  parent: Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryTokenKeyResolver
  langs:
  - csharp
  - vb
  name: FetchKeySet()
  nameWithType: CloudFoundryTokenKeyResolver.FetchKeySet()
  fullName: Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryTokenKeyResolver.FetchKeySet()
  type: Method
  source:
    remote:
      path: src/Security/src/Authentication.CloudFoundryBase/CloudFoundryTokenKeyResolver.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: FetchKeySet
    path: ../Steeltoe/src/Security/src/Authentication.CloudFoundryBase/CloudFoundryTokenKeyResolver.cs
    startLine: 73
  assemblies:
  - Steeltoe.Security.Authentication.CloudFoundryBase
  namespace: Steeltoe.Security.Authentication.CloudFoundry
  syntax:
    content: public virtual Task<JsonWebKeySet> FetchKeySet()
    return:
      type: System.Threading.Tasks.Task{JsonWebKeySet}
    content.vb: Public Overridable Function FetchKeySet As Task(Of JsonWebKeySet)
  overload: Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryTokenKeyResolver.FetchKeySet*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryTokenKeyResolver.GetJsonWebKeySet(System.String)
  commentId: M:Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryTokenKeyResolver.GetJsonWebKeySet(System.String)
  id: GetJsonWebKeySet(System.String)
  parent: Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryTokenKeyResolver
  langs:
  - csharp
  - vb
  name: GetJsonWebKeySet(String)
  nameWithType: CloudFoundryTokenKeyResolver.GetJsonWebKeySet(String)
  fullName: Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryTokenKeyResolver.GetJsonWebKeySet(System.String)
  type: Method
  source:
    remote:
      path: src/Security/src/Authentication.CloudFoundryBase/CloudFoundryTokenKeyResolver.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: GetJsonWebKeySet
    path: ../Steeltoe/src/Security/src/Authentication.CloudFoundryBase/CloudFoundryTokenKeyResolver.cs
    startLine: 104
  assemblies:
  - Steeltoe.Security.Authentication.CloudFoundryBase
  namespace: Steeltoe.Security.Authentication.CloudFoundry
  syntax:
    content: public virtual JsonWebKeySet GetJsonWebKeySet(string json)
    parameters:
    - id: json
      type: System.String
    return:
      type: JsonWebKeySet
    content.vb: Public Overridable Function GetJsonWebKeySet(json As String) As JsonWebKeySet
  overload: Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryTokenKeyResolver.GetJsonWebKeySet*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryTokenKeyResolver.GetHttpClient
  commentId: M:Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryTokenKeyResolver.GetHttpClient
  id: GetHttpClient
  parent: Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryTokenKeyResolver
  langs:
  - csharp
  - vb
  name: GetHttpClient()
  nameWithType: CloudFoundryTokenKeyResolver.GetHttpClient()
  fullName: Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryTokenKeyResolver.GetHttpClient()
  type: Method
  source:
    remote:
      path: src/Security/src/Authentication.CloudFoundryBase/CloudFoundryTokenKeyResolver.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: GetHttpClient
    path: ../Steeltoe/src/Security/src/Authentication.CloudFoundryBase/CloudFoundryTokenKeyResolver.cs
    startLine: 109
  assemblies:
  - Steeltoe.Security.Authentication.CloudFoundryBase
  namespace: Steeltoe.Security.Authentication.CloudFoundry
  syntax:
    content: public virtual HttpClient GetHttpClient()
    return:
      type: System.Net.Http.HttpClient
    content.vb: Public Overridable Function GetHttpClient As HttpClient
  overload: Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryTokenKeyResolver.GetHttpClient*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
references:
- uid: Steeltoe.Security.Authentication.CloudFoundry
  commentId: N:Steeltoe.Security.Authentication.CloudFoundry
  name: Steeltoe.Security.Authentication.CloudFoundry
  nameWithType: Steeltoe.Security.Authentication.CloudFoundry
  fullName: Steeltoe.Security.Authentication.CloudFoundry
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryTokenKeyResolver.#ctor*
  commentId: Overload:Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryTokenKeyResolver.#ctor
  name: CloudFoundryTokenKeyResolver
  nameWithType: CloudFoundryTokenKeyResolver.CloudFoundryTokenKeyResolver
  fullName: Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryTokenKeyResolver.CloudFoundryTokenKeyResolver
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Net.Http.HttpMessageHandler
  commentId: T:System.Net.Http.HttpMessageHandler
  parent: System.Net.Http
  isExternal: true
  name: HttpMessageHandler
  nameWithType: HttpMessageHandler
  fullName: System.Net.Http.HttpMessageHandler
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Net.Http
  commentId: N:System.Net.Http
  isExternal: true
  name: System.Net.Http
  nameWithType: System.Net.Http
  fullName: System.Net.Http
- uid: Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryTokenKeyResolver.ResolveSigningKey*
  commentId: Overload:Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryTokenKeyResolver.ResolveSigningKey
  name: ResolveSigningKey
  nameWithType: CloudFoundryTokenKeyResolver.ResolveSigningKey
  fullName: Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryTokenKeyResolver.ResolveSigningKey
- uid: SecurityToken
  isExternal: true
  name: SecurityToken
  nameWithType: SecurityToken
  fullName: SecurityToken
- uid: TokenValidationParameters
  isExternal: true
  name: TokenValidationParameters
  nameWithType: TokenValidationParameters
  fullName: TokenValidationParameters
- uid: System.Collections.Generic.IEnumerable{SecurityKey}
  commentId: T:System.Collections.Generic.IEnumerable{SecurityKey}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<SecurityKey>
  nameWithType: IEnumerable<SecurityKey>
  fullName: System.Collections.Generic.IEnumerable<SecurityKey>
  nameWithType.vb: IEnumerable(Of SecurityKey)
  fullName.vb: System.Collections.Generic.IEnumerable(Of SecurityKey)
  name.vb: IEnumerable(Of SecurityKey)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SecurityKey
    name: SecurityKey
    nameWithType: SecurityKey
    fullName: SecurityKey
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SecurityKey
    name: SecurityKey
    nameWithType: SecurityKey
    fullName: SecurityKey
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryTokenKeyResolver.FixupKey*
  commentId: Overload:Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryTokenKeyResolver.FixupKey
  name: FixupKey
  nameWithType: CloudFoundryTokenKeyResolver.FixupKey
  fullName: Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryTokenKeyResolver.FixupKey
- uid: JsonWebKey
  isExternal: true
  name: JsonWebKey
  nameWithType: JsonWebKey
  fullName: JsonWebKey
- uid: Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryTokenKeyResolver.FetchKeySet*
  commentId: Overload:Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryTokenKeyResolver.FetchKeySet
  name: FetchKeySet
  nameWithType: CloudFoundryTokenKeyResolver.FetchKeySet
  fullName: Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryTokenKeyResolver.FetchKeySet
- uid: System.Threading.Tasks.Task{JsonWebKeySet}
  commentId: T:System.Threading.Tasks.Task{JsonWebKeySet}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<JsonWebKeySet>
  nameWithType: Task<JsonWebKeySet>
  fullName: System.Threading.Tasks.Task<JsonWebKeySet>
  nameWithType.vb: Task(Of JsonWebKeySet)
  fullName.vb: System.Threading.Tasks.Task(Of JsonWebKeySet)
  name.vb: Task(Of JsonWebKeySet)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: JsonWebKeySet
    name: JsonWebKeySet
    nameWithType: JsonWebKeySet
    fullName: JsonWebKeySet
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: JsonWebKeySet
    name: JsonWebKeySet
    nameWithType: JsonWebKeySet
    fullName: JsonWebKeySet
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryTokenKeyResolver.GetJsonWebKeySet*
  commentId: Overload:Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryTokenKeyResolver.GetJsonWebKeySet
  name: GetJsonWebKeySet
  nameWithType: CloudFoundryTokenKeyResolver.GetJsonWebKeySet
  fullName: Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryTokenKeyResolver.GetJsonWebKeySet
- uid: JsonWebKeySet
  commentId: '!:JsonWebKeySet'
  isExternal: true
  name: JsonWebKeySet
  nameWithType: JsonWebKeySet
  fullName: JsonWebKeySet
- uid: Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryTokenKeyResolver.GetHttpClient*
  commentId: Overload:Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryTokenKeyResolver.GetHttpClient
  name: GetHttpClient
  nameWithType: CloudFoundryTokenKeyResolver.GetHttpClient
  fullName: Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryTokenKeyResolver.GetHttpClient
- uid: System.Net.Http.HttpClient
  commentId: T:System.Net.Http.HttpClient
  parent: System.Net.Http
  isExternal: true
  name: HttpClient
  nameWithType: HttpClient
  fullName: System.Net.Http.HttpClient
