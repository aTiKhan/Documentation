### YamlMime:ManagedReference
items:
- uid: Steeltoe.Connector.Services.Tags
  commentId: T:Steeltoe.Connector.Services.Tags
  id: Tags
  parent: Steeltoe.Connector.Services
  children:
  - Steeltoe.Connector.Services.Tags.#ctor(System.String)
  - Steeltoe.Connector.Services.Tags.#ctor(System.String[])
  - Steeltoe.Connector.Services.Tags.Contains(System.String)
  - Steeltoe.Connector.Services.Tags.ContainsOne(System.Collections.Generic.IEnumerable{System.String})
  - Steeltoe.Connector.Services.Tags.StartsWith(System.String)
  - Steeltoe.Connector.Services.Tags.Values
  langs:
  - csharp
  - vb
  name: Tags
  nameWithType: Tags
  fullName: Steeltoe.Connector.Services.Tags
  type: Class
  source:
    remote:
      path: src/Connectors/src/ConnectorBase/Services/Tags.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Tags
    path: ../Steeltoe/src/Connectors/src/ConnectorBase/Services/Tags.cs
    startLine: 9
  assemblies:
  - Steeltoe.Connector.ConnectorBase
  namespace: Steeltoe.Connector.Services
  syntax:
    content: public class Tags
    content.vb: Public Class Tags
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Steeltoe.Connector.Services.Tags.#ctor(System.String)
  commentId: M:Steeltoe.Connector.Services.Tags.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: Steeltoe.Connector.Services.Tags
  langs:
  - csharp
  - vb
  name: Tags(String)
  nameWithType: Tags.Tags(String)
  fullName: Steeltoe.Connector.Services.Tags.Tags(System.String)
  type: Constructor
  source:
    remote:
      path: src/Connectors/src/ConnectorBase/Services/Tags.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: .ctor
    path: ../Steeltoe/src/Connectors/src/ConnectorBase/Services/Tags.cs
    startLine: 11
  assemblies:
  - Steeltoe.Connector.ConnectorBase
  namespace: Steeltoe.Connector.Services
  syntax:
    content: public Tags(string tag)
    parameters:
    - id: tag
      type: System.String
    content.vb: Public Sub New(tag As String)
  overload: Steeltoe.Connector.Services.Tags.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Steeltoe.Connector.Services.Tags.#ctor(System.String[])
  commentId: M:Steeltoe.Connector.Services.Tags.#ctor(System.String[])
  id: '#ctor(System.String[])'
  parent: Steeltoe.Connector.Services.Tags
  langs:
  - csharp
  - vb
  name: Tags(String[])
  nameWithType: Tags.Tags(String[])
  fullName: Steeltoe.Connector.Services.Tags.Tags(System.String[])
  type: Constructor
  source:
    remote:
      path: src/Connectors/src/ConnectorBase/Services/Tags.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: .ctor
    path: ../Steeltoe/src/Connectors/src/ConnectorBase/Services/Tags.cs
    startLine: 16
  assemblies:
  - Steeltoe.Connector.ConnectorBase
  namespace: Steeltoe.Connector.Services
  syntax:
    content: public Tags(string[] tags)
    parameters:
    - id: tags
      type: System.String[]
    content.vb: Public Sub New(tags As String())
  overload: Steeltoe.Connector.Services.Tags.#ctor*
  nameWithType.vb: Tags.Tags(String())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Steeltoe.Connector.Services.Tags.Tags(System.String())
  name.vb: Tags(String())
- uid: Steeltoe.Connector.Services.Tags.Values
  commentId: P:Steeltoe.Connector.Services.Tags.Values
  id: Values
  parent: Steeltoe.Connector.Services.Tags
  langs:
  - csharp
  - vb
  name: Values
  nameWithType: Tags.Values
  fullName: Steeltoe.Connector.Services.Tags.Values
  type: Property
  source:
    remote:
      path: src/Connectors/src/ConnectorBase/Services/Tags.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Values
    path: ../Steeltoe/src/Connectors/src/ConnectorBase/Services/Tags.cs
    startLine: 32
  assemblies:
  - Steeltoe.Connector.ConnectorBase
  namespace: Steeltoe.Connector.Services
  syntax:
    content: public IEnumerable<string> Values { get; protected set; }
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{System.String}
    content.vb: Public Property Values As IEnumerable(Of String)
  overload: Steeltoe.Connector.Services.Tags.Values*
  modifiers.csharp:
  - public
  - get
  - protected set
  modifiers.vb:
  - Public
  - Get
  - Protected Set
- uid: Steeltoe.Connector.Services.Tags.ContainsOne(System.Collections.Generic.IEnumerable{System.String})
  commentId: M:Steeltoe.Connector.Services.Tags.ContainsOne(System.Collections.Generic.IEnumerable{System.String})
  id: ContainsOne(System.Collections.Generic.IEnumerable{System.String})
  parent: Steeltoe.Connector.Services.Tags
  langs:
  - csharp
  - vb
  name: ContainsOne(IEnumerable<String>)
  nameWithType: Tags.ContainsOne(IEnumerable<String>)
  fullName: Steeltoe.Connector.Services.Tags.ContainsOne(System.Collections.Generic.IEnumerable<System.String>)
  type: Method
  source:
    remote:
      path: src/Connectors/src/ConnectorBase/Services/Tags.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: ContainsOne
    path: ../Steeltoe/src/Connectors/src/ConnectorBase/Services/Tags.cs
    startLine: 34
  assemblies:
  - Steeltoe.Connector.ConnectorBase
  namespace: Steeltoe.Connector.Services
  syntax:
    content: public bool ContainsOne(IEnumerable<string> tags)
    parameters:
    - id: tags
      type: System.Collections.Generic.IEnumerable{System.String}
    return:
      type: System.Boolean
    content.vb: Public Function ContainsOne(tags As IEnumerable(Of String)) As Boolean
  overload: Steeltoe.Connector.Services.Tags.ContainsOne*
  nameWithType.vb: Tags.ContainsOne(IEnumerable(Of String))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Steeltoe.Connector.Services.Tags.ContainsOne(System.Collections.Generic.IEnumerable(Of System.String))
  name.vb: ContainsOne(IEnumerable(Of String))
- uid: Steeltoe.Connector.Services.Tags.Contains(System.String)
  commentId: M:Steeltoe.Connector.Services.Tags.Contains(System.String)
  id: Contains(System.String)
  parent: Steeltoe.Connector.Services.Tags
  langs:
  - csharp
  - vb
  name: Contains(String)
  nameWithType: Tags.Contains(String)
  fullName: Steeltoe.Connector.Services.Tags.Contains(System.String)
  type: Method
  source:
    remote:
      path: src/Connectors/src/ConnectorBase/Services/Tags.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Contains
    path: ../Steeltoe/src/Connectors/src/ConnectorBase/Services/Tags.cs
    startLine: 39
  assemblies:
  - Steeltoe.Connector.ConnectorBase
  namespace: Steeltoe.Connector.Services
  syntax:
    content: public bool Contains(string tag)
    parameters:
    - id: tag
      type: System.String
    return:
      type: System.Boolean
    content.vb: Public Function Contains(tag As String) As Boolean
  overload: Steeltoe.Connector.Services.Tags.Contains*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Steeltoe.Connector.Services.Tags.StartsWith(System.String)
  commentId: M:Steeltoe.Connector.Services.Tags.StartsWith(System.String)
  id: StartsWith(System.String)
  parent: Steeltoe.Connector.Services.Tags
  langs:
  - csharp
  - vb
  name: StartsWith(String)
  nameWithType: Tags.StartsWith(String)
  fullName: Steeltoe.Connector.Services.Tags.StartsWith(System.String)
  type: Method
  source:
    remote:
      path: src/Connectors/src/ConnectorBase/Services/Tags.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: StartsWith
    path: ../Steeltoe/src/Connectors/src/ConnectorBase/Services/Tags.cs
    startLine: 49
  assemblies:
  - Steeltoe.Connector.ConnectorBase
  namespace: Steeltoe.Connector.Services
  syntax:
    content: public bool StartsWith(string tag)
    parameters:
    - id: tag
      type: System.String
    return:
      type: System.Boolean
    content.vb: Public Function StartsWith(tag As String) As Boolean
  overload: Steeltoe.Connector.Services.Tags.StartsWith*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Steeltoe.Connector.Services
  commentId: N:Steeltoe.Connector.Services
  name: Steeltoe.Connector.Services
  nameWithType: Steeltoe.Connector.Services
  fullName: Steeltoe.Connector.Services
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Steeltoe.Connector.Services.Tags.#ctor*
  commentId: Overload:Steeltoe.Connector.Services.Tags.#ctor
  name: Tags
  nameWithType: Tags.Tags
  fullName: Steeltoe.Connector.Services.Tags.Tags
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.String[]
  isExternal: true
  name: String[]
  nameWithType: String[]
  fullName: System.String[]
  nameWithType.vb: String()
  fullName.vb: System.String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Steeltoe.Connector.Services.Tags.Values*
  commentId: Overload:Steeltoe.Connector.Services.Tags.Values
  name: Values
  nameWithType: Tags.Values
  fullName: Steeltoe.Connector.Services.Tags.Values
- uid: System.Collections.Generic.IEnumerable{System.String}
  commentId: T:System.Collections.Generic.IEnumerable{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<String>
  nameWithType: IEnumerable<String>
  fullName: System.Collections.Generic.IEnumerable<System.String>
  nameWithType.vb: IEnumerable(Of String)
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.String)
  name.vb: IEnumerable(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Steeltoe.Connector.Services.Tags.ContainsOne*
  commentId: Overload:Steeltoe.Connector.Services.Tags.ContainsOne
  name: ContainsOne
  nameWithType: Tags.ContainsOne
  fullName: Steeltoe.Connector.Services.Tags.ContainsOne
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Steeltoe.Connector.Services.Tags.Contains*
  commentId: Overload:Steeltoe.Connector.Services.Tags.Contains
  name: Contains
  nameWithType: Tags.Contains
  fullName: Steeltoe.Connector.Services.Tags.Contains
- uid: Steeltoe.Connector.Services.Tags.StartsWith*
  commentId: Overload:Steeltoe.Connector.Services.Tags.StartsWith
  name: StartsWith
  nameWithType: Tags.StartsWith
  fullName: Steeltoe.Connector.Services.Tags.StartsWith
