### YamlMime:ManagedReference
items:
- uid: Steeltoe.Extensions.Configuration.ConfigServer.ConfigServerConfigurationSource
  commentId: T:Steeltoe.Extensions.Configuration.ConfigServer.ConfigServerConfigurationSource
  id: ConfigServerConfigurationSource
  parent: Steeltoe.Extensions.Configuration.ConfigServer
  children:
  - Steeltoe.Extensions.Configuration.ConfigServer.ConfigServerConfigurationSource.#ctor(IConfiguration,ILoggerFactory)
  - Steeltoe.Extensions.Configuration.ConfigServer.ConfigServerConfigurationSource.#ctor(Steeltoe.Extensions.Configuration.ConfigServer.ConfigServerClientSettings,IConfiguration,ILoggerFactory)
  - Steeltoe.Extensions.Configuration.ConfigServer.ConfigServerConfigurationSource.#ctor(Steeltoe.Extensions.Configuration.ConfigServer.ConfigServerClientSettings,System.Collections.Generic.IList{IConfigurationSource},System.Collections.Generic.IDictionary{System.String,System.Object},ILoggerFactory)
  - Steeltoe.Extensions.Configuration.ConfigServer.ConfigServerConfigurationSource.#ctor(System.Collections.Generic.IList{IConfigurationSource},System.Collections.Generic.IDictionary{System.String,System.Object},ILoggerFactory)
  - Steeltoe.Extensions.Configuration.ConfigServer.ConfigServerConfigurationSource._properties
  - Steeltoe.Extensions.Configuration.ConfigServer.ConfigServerConfigurationSource._sources
  - Steeltoe.Extensions.Configuration.ConfigServer.ConfigServerConfigurationSource.Build(IConfigurationBuilder)
  - Steeltoe.Extensions.Configuration.ConfigServer.ConfigServerConfigurationSource.Configuration
  - Steeltoe.Extensions.Configuration.ConfigServer.ConfigServerConfigurationSource.DefaultSettings
  - Steeltoe.Extensions.Configuration.ConfigServer.ConfigServerConfigurationSource.LogFactory
  langs:
  - csharp
  - vb
  name: ConfigServerConfigurationSource
  nameWithType: ConfigServerConfigurationSource
  fullName: Steeltoe.Extensions.Configuration.ConfigServer.ConfigServerConfigurationSource
  type: Class
  source:
    remote:
      path: src/Configuration/src/ConfigServerBase/ConfigServerConfigurationSource.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: ConfigServerConfigurationSource
    path: ../Steeltoe/src/Configuration/src/ConfigServerBase/ConfigServerConfigurationSource.cs
    startLine: 15
  assemblies:
  - Steeltoe.Extensions.Configuration.ConfigServerBase
  namespace: Steeltoe.Extensions.Configuration.ConfigServer
  syntax:
    content: 'public class ConfigServerConfigurationSource : IConfigurationSource'
    content.vb: >-
      Public Class ConfigServerConfigurationSource

          Inherits IConfigurationSource
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Steeltoe.Extensions.Configuration.ConfigServer.ConfigServerConfigurationSource._sources
  commentId: F:Steeltoe.Extensions.Configuration.ConfigServer.ConfigServerConfigurationSource._sources
  id: _sources
  parent: Steeltoe.Extensions.Configuration.ConfigServer.ConfigServerConfigurationSource
  langs:
  - csharp
  - vb
  name: _sources
  nameWithType: ConfigServerConfigurationSource._sources
  fullName: Steeltoe.Extensions.Configuration.ConfigServer.ConfigServerConfigurationSource._sources
  type: Field
  source:
    remote:
      path: src/Configuration/src/ConfigServerBase/ConfigServerConfigurationSource.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: _sources
    path: ../Steeltoe/src/Configuration/src/ConfigServerBase/ConfigServerConfigurationSource.cs
    startLine: 17
  assemblies:
  - Steeltoe.Extensions.Configuration.ConfigServerBase
  namespace: Steeltoe.Extensions.Configuration.ConfigServer
  syntax:
    content: protected IList<IConfigurationSource> _sources
    return:
      type: System.Collections.Generic.IList{IConfigurationSource}
    content.vb: Protected _sources As IList(Of IConfigurationSource)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Steeltoe.Extensions.Configuration.ConfigServer.ConfigServerConfigurationSource._properties
  commentId: F:Steeltoe.Extensions.Configuration.ConfigServer.ConfigServerConfigurationSource._properties
  id: _properties
  parent: Steeltoe.Extensions.Configuration.ConfigServer.ConfigServerConfigurationSource
  langs:
  - csharp
  - vb
  name: _properties
  nameWithType: ConfigServerConfigurationSource._properties
  fullName: Steeltoe.Extensions.Configuration.ConfigServer.ConfigServerConfigurationSource._properties
  type: Field
  source:
    remote:
      path: src/Configuration/src/ConfigServerBase/ConfigServerConfigurationSource.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: _properties
    path: ../Steeltoe/src/Configuration/src/ConfigServerBase/ConfigServerConfigurationSource.cs
    startLine: 19
  assemblies:
  - Steeltoe.Extensions.Configuration.ConfigServerBase
  namespace: Steeltoe.Extensions.Configuration.ConfigServer
  syntax:
    content: protected IDictionary<string, object> _properties
    return:
      type: System.Collections.Generic.IDictionary{System.String,System.Object}
    content.vb: Protected _properties As IDictionary(Of String, Object)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Steeltoe.Extensions.Configuration.ConfigServer.ConfigServerConfigurationSource.DefaultSettings
  commentId: P:Steeltoe.Extensions.Configuration.ConfigServer.ConfigServerConfigurationSource.DefaultSettings
  id: DefaultSettings
  parent: Steeltoe.Extensions.Configuration.ConfigServer.ConfigServerConfigurationSource
  langs:
  - csharp
  - vb
  name: DefaultSettings
  nameWithType: ConfigServerConfigurationSource.DefaultSettings
  fullName: Steeltoe.Extensions.Configuration.ConfigServer.ConfigServerConfigurationSource.DefaultSettings
  type: Property
  source:
    remote:
      path: src/Configuration/src/ConfigServerBase/ConfigServerConfigurationSource.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: DefaultSettings
    path: ../Steeltoe/src/Configuration/src/ConfigServerBase/ConfigServerConfigurationSource.cs
    startLine: 24
  assemblies:
  - Steeltoe.Extensions.Configuration.ConfigServerBase
  namespace: Steeltoe.Extensions.Configuration.ConfigServer
  summary: "\nGets the default settings the Config Server client uses to contact the Config Server\n"
  example: []
  syntax:
    content: public ConfigServerClientSettings DefaultSettings { get; }
    parameters: []
    return:
      type: Steeltoe.Extensions.Configuration.ConfigServer.ConfigServerClientSettings
    content.vb: Public ReadOnly Property DefaultSettings As ConfigServerClientSettings
  overload: Steeltoe.Extensions.Configuration.ConfigServer.ConfigServerConfigurationSource.DefaultSettings*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Steeltoe.Extensions.Configuration.ConfigServer.ConfigServerConfigurationSource.Configuration
  commentId: P:Steeltoe.Extensions.Configuration.ConfigServer.ConfigServerConfigurationSource.Configuration
  id: Configuration
  parent: Steeltoe.Extensions.Configuration.ConfigServer.ConfigServerConfigurationSource
  langs:
  - csharp
  - vb
  name: Configuration
  nameWithType: ConfigServerConfigurationSource.Configuration
  fullName: Steeltoe.Extensions.Configuration.ConfigServer.ConfigServerConfigurationSource.Configuration
  type: Property
  source:
    remote:
      path: src/Configuration/src/ConfigServerBase/ConfigServerConfigurationSource.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Configuration
    path: ../Steeltoe/src/Configuration/src/ConfigServerBase/ConfigServerConfigurationSource.cs
    startLine: 30
  assemblies:
  - Steeltoe.Extensions.Configuration.ConfigServerBase
  namespace: Steeltoe.Extensions.Configuration.ConfigServer
  summary: "\nGets or sets gets the configuration the Config Server client uses to contact the Config Server.\nValues returned override the default values provided in <xref href=\"Steeltoe.Extensions.Configuration.ConfigServer.ConfigServerConfigurationSource.DefaultSettings\" data-throw-if-not-resolved=\"false\"></xref>\n"
  example: []
  syntax:
    content: public IConfiguration Configuration { get; protected set; }
    parameters: []
    return:
      type: IConfiguration
    content.vb: Public Property Configuration As IConfiguration
  overload: Steeltoe.Extensions.Configuration.ConfigServer.ConfigServerConfigurationSource.Configuration*
  modifiers.csharp:
  - public
  - get
  - protected set
  modifiers.vb:
  - Public
  - Get
  - Protected Set
- uid: Steeltoe.Extensions.Configuration.ConfigServer.ConfigServerConfigurationSource.LogFactory
  commentId: P:Steeltoe.Extensions.Configuration.ConfigServer.ConfigServerConfigurationSource.LogFactory
  id: LogFactory
  parent: Steeltoe.Extensions.Configuration.ConfigServer.ConfigServerConfigurationSource
  langs:
  - csharp
  - vb
  name: LogFactory
  nameWithType: ConfigServerConfigurationSource.LogFactory
  fullName: Steeltoe.Extensions.Configuration.ConfigServer.ConfigServerConfigurationSource.LogFactory
  type: Property
  source:
    remote:
      path: src/Configuration/src/ConfigServerBase/ConfigServerConfigurationSource.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: LogFactory
    path: ../Steeltoe/src/Configuration/src/ConfigServerBase/ConfigServerConfigurationSource.cs
    startLine: 35
  assemblies:
  - Steeltoe.Extensions.Configuration.ConfigServerBase
  namespace: Steeltoe.Extensions.Configuration.ConfigServer
  summary: "\nGets the logger factory used by the Config Server client\n"
  example: []
  syntax:
    content: public ILoggerFactory LogFactory { get; }
    parameters: []
    return:
      type: ILoggerFactory
    content.vb: Public ReadOnly Property LogFactory As ILoggerFactory
  overload: Steeltoe.Extensions.Configuration.ConfigServer.ConfigServerConfigurationSource.LogFactory*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Steeltoe.Extensions.Configuration.ConfigServer.ConfigServerConfigurationSource.#ctor(IConfiguration,ILoggerFactory)
  commentId: M:Steeltoe.Extensions.Configuration.ConfigServer.ConfigServerConfigurationSource.#ctor(IConfiguration,ILoggerFactory)
  id: '#ctor(IConfiguration,ILoggerFactory)'
  parent: Steeltoe.Extensions.Configuration.ConfigServer.ConfigServerConfigurationSource
  langs:
  - csharp
  - vb
  name: ConfigServerConfigurationSource(IConfiguration, ILoggerFactory)
  nameWithType: ConfigServerConfigurationSource.ConfigServerConfigurationSource(IConfiguration, ILoggerFactory)
  fullName: Steeltoe.Extensions.Configuration.ConfigServer.ConfigServerConfigurationSource.ConfigServerConfigurationSource(IConfiguration, ILoggerFactory)
  type: Constructor
  source:
    remote:
      path: src/Configuration/src/ConfigServerBase/ConfigServerConfigurationSource.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: .ctor
    path: ../Steeltoe/src/Configuration/src/ConfigServerBase/ConfigServerConfigurationSource.cs
    startLine: 42
  assemblies:
  - Steeltoe.Extensions.Configuration.ConfigServerBase
  namespace: Steeltoe.Extensions.Configuration.ConfigServer
  summary: "\nInitializes a new instance of the <xref href=\"Steeltoe.Extensions.Configuration.ConfigServer.ConfigServerConfigurationSource\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  example: []
  syntax:
    content: public ConfigServerConfigurationSource(IConfiguration configuration, ILoggerFactory logFactory = null)
    parameters:
    - id: configuration
      type: IConfiguration
      description: configuration used by the Config Server client. Values will override those found in default settings
    - id: logFactory
      type: ILoggerFactory
      description: optional logger factory used by the client
    content.vb: Public Sub New(configuration As IConfiguration, logFactory As ILoggerFactory = Nothing)
  overload: Steeltoe.Extensions.Configuration.ConfigServer.ConfigServerConfigurationSource.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Steeltoe.Extensions.Configuration.ConfigServer.ConfigServerConfigurationSource.#ctor(Steeltoe.Extensions.Configuration.ConfigServer.ConfigServerClientSettings,IConfiguration,ILoggerFactory)
  commentId: M:Steeltoe.Extensions.Configuration.ConfigServer.ConfigServerConfigurationSource.#ctor(Steeltoe.Extensions.Configuration.ConfigServer.ConfigServerClientSettings,IConfiguration,ILoggerFactory)
  id: '#ctor(Steeltoe.Extensions.Configuration.ConfigServer.ConfigServerClientSettings,IConfiguration,ILoggerFactory)'
  parent: Steeltoe.Extensions.Configuration.ConfigServer.ConfigServerConfigurationSource
  langs:
  - csharp
  - vb
  name: ConfigServerConfigurationSource(ConfigServerClientSettings, IConfiguration, ILoggerFactory)
  nameWithType: ConfigServerConfigurationSource.ConfigServerConfigurationSource(ConfigServerClientSettings, IConfiguration, ILoggerFactory)
  fullName: Steeltoe.Extensions.Configuration.ConfigServer.ConfigServerConfigurationSource.ConfigServerConfigurationSource(Steeltoe.Extensions.Configuration.ConfigServer.ConfigServerClientSettings, IConfiguration, ILoggerFactory)
  type: Constructor
  source:
    remote:
      path: src/Configuration/src/ConfigServerBase/ConfigServerConfigurationSource.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: .ctor
    path: ../Steeltoe/src/Configuration/src/ConfigServerBase/ConfigServerConfigurationSource.cs
    startLine: 53
  assemblies:
  - Steeltoe.Extensions.Configuration.ConfigServerBase
  namespace: Steeltoe.Extensions.Configuration.ConfigServer
  summary: "\nInitializes a new instance of the <xref href=\"Steeltoe.Extensions.Configuration.ConfigServer.ConfigServerConfigurationSource\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  example: []
  syntax:
    content: public ConfigServerConfigurationSource(ConfigServerClientSettings defaultSettings, IConfiguration configuration, ILoggerFactory logFactory = null)
    parameters:
    - id: defaultSettings
      type: Steeltoe.Extensions.Configuration.ConfigServer.ConfigServerClientSettings
      description: the default settings used by the Config Server client
    - id: configuration
      type: IConfiguration
      description: configuration used by the Config Server client. Values will override those found in default settings
    - id: logFactory
      type: ILoggerFactory
      description: optional logger factory used by the client
    content.vb: Public Sub New(defaultSettings As ConfigServerClientSettings, configuration As IConfiguration, logFactory As ILoggerFactory = Nothing)
  overload: Steeltoe.Extensions.Configuration.ConfigServer.ConfigServerConfigurationSource.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Steeltoe.Extensions.Configuration.ConfigServer.ConfigServerConfigurationSource.#ctor(System.Collections.Generic.IList{IConfigurationSource},System.Collections.Generic.IDictionary{System.String,System.Object},ILoggerFactory)
  commentId: M:Steeltoe.Extensions.Configuration.ConfigServer.ConfigServerConfigurationSource.#ctor(System.Collections.Generic.IList{IConfigurationSource},System.Collections.Generic.IDictionary{System.String,System.Object},ILoggerFactory)
  id: '#ctor(System.Collections.Generic.IList{IConfigurationSource},System.Collections.Generic.IDictionary{System.String,System.Object},ILoggerFactory)'
  parent: Steeltoe.Extensions.Configuration.ConfigServer.ConfigServerConfigurationSource
  langs:
  - csharp
  - vb
  name: ConfigServerConfigurationSource(IList<IConfigurationSource>, IDictionary<String, Object>, ILoggerFactory)
  nameWithType: ConfigServerConfigurationSource.ConfigServerConfigurationSource(IList<IConfigurationSource>, IDictionary<String, Object>, ILoggerFactory)
  fullName: Steeltoe.Extensions.Configuration.ConfigServer.ConfigServerConfigurationSource.ConfigServerConfigurationSource(System.Collections.Generic.IList<IConfigurationSource>, System.Collections.Generic.IDictionary<System.String, System.Object>, ILoggerFactory)
  type: Constructor
  source:
    remote:
      path: src/Configuration/src/ConfigServerBase/ConfigServerConfigurationSource.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: .ctor
    path: ../Steeltoe/src/Configuration/src/ConfigServerBase/ConfigServerConfigurationSource.cs
    startLine: 67
  assemblies:
  - Steeltoe.Extensions.Configuration.ConfigServerBase
  namespace: Steeltoe.Extensions.Configuration.ConfigServer
  summary: "\nInitializes a new instance of the <xref href=\"Steeltoe.Extensions.Configuration.ConfigServer.ConfigServerConfigurationSource\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  example: []
  syntax:
    content: public ConfigServerConfigurationSource(IList<IConfigurationSource> sources, IDictionary<string, object> properties = null, ILoggerFactory logFactory = null)
    parameters:
    - id: sources
      type: System.Collections.Generic.IList{IConfigurationSource}
      description: >-
        configuration sources used by the Config Server client. The <xref href="Steeltoe.Extensions.Configuration.ConfigServer.ConfigServerConfigurationSource.Configuration" data-throw-if-not-resolved="false"></xref> will be built from these sources and the

        values will override those found in <xref href="Steeltoe.Extensions.Configuration.ConfigServer.ConfigServerConfigurationSource.DefaultSettings" data-throw-if-not-resolved="false"></xref>
    - id: properties
      type: System.Collections.Generic.IDictionary{System.String,System.Object}
      description: properties to be used when sources are built
    - id: logFactory
      type: ILoggerFactory
      description: optional logger factory used by the client
    content.vb: Public Sub New(sources As IList(Of IConfigurationSource), properties As IDictionary(Of String, Object) = Nothing, logFactory As ILoggerFactory = Nothing)
  overload: Steeltoe.Extensions.Configuration.ConfigServer.ConfigServerConfigurationSource.#ctor*
  nameWithType.vb: ConfigServerConfigurationSource.ConfigServerConfigurationSource(IList(Of IConfigurationSource), IDictionary(Of String, Object), ILoggerFactory)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Steeltoe.Extensions.Configuration.ConfigServer.ConfigServerConfigurationSource.ConfigServerConfigurationSource(System.Collections.Generic.IList(Of IConfigurationSource), System.Collections.Generic.IDictionary(Of System.String, System.Object), ILoggerFactory)
  name.vb: ConfigServerConfigurationSource(IList(Of IConfigurationSource), IDictionary(Of String, Object), ILoggerFactory)
- uid: Steeltoe.Extensions.Configuration.ConfigServer.ConfigServerConfigurationSource.#ctor(Steeltoe.Extensions.Configuration.ConfigServer.ConfigServerClientSettings,System.Collections.Generic.IList{IConfigurationSource},System.Collections.Generic.IDictionary{System.String,System.Object},ILoggerFactory)
  commentId: M:Steeltoe.Extensions.Configuration.ConfigServer.ConfigServerConfigurationSource.#ctor(Steeltoe.Extensions.Configuration.ConfigServer.ConfigServerClientSettings,System.Collections.Generic.IList{IConfigurationSource},System.Collections.Generic.IDictionary{System.String,System.Object},ILoggerFactory)
  id: '#ctor(Steeltoe.Extensions.Configuration.ConfigServer.ConfigServerClientSettings,System.Collections.Generic.IList{IConfigurationSource},System.Collections.Generic.IDictionary{System.String,System.Object},ILoggerFactory)'
  parent: Steeltoe.Extensions.Configuration.ConfigServer.ConfigServerConfigurationSource
  langs:
  - csharp
  - vb
  name: ConfigServerConfigurationSource(ConfigServerClientSettings, IList<IConfigurationSource>, IDictionary<String, Object>, ILoggerFactory)
  nameWithType: ConfigServerConfigurationSource.ConfigServerConfigurationSource(ConfigServerClientSettings, IList<IConfigurationSource>, IDictionary<String, Object>, ILoggerFactory)
  fullName: Steeltoe.Extensions.Configuration.ConfigServer.ConfigServerConfigurationSource.ConfigServerConfigurationSource(Steeltoe.Extensions.Configuration.ConfigServer.ConfigServerClientSettings, System.Collections.Generic.IList<IConfigurationSource>, System.Collections.Generic.IDictionary<System.String, System.Object>, ILoggerFactory)
  type: Constructor
  source:
    remote:
      path: src/Configuration/src/ConfigServerBase/ConfigServerConfigurationSource.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: .ctor
    path: ../Steeltoe/src/Configuration/src/ConfigServerBase/ConfigServerConfigurationSource.cs
    startLine: 80
  assemblies:
  - Steeltoe.Extensions.Configuration.ConfigServerBase
  namespace: Steeltoe.Extensions.Configuration.ConfigServer
  summary: "\nInitializes a new instance of the <xref href=\"Steeltoe.Extensions.Configuration.ConfigServer.ConfigServerConfigurationSource\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  example: []
  syntax:
    content: public ConfigServerConfigurationSource(ConfigServerClientSettings defaultSettings, IList<IConfigurationSource> sources, IDictionary<string, object> properties = null, ILoggerFactory logFactory = null)
    parameters:
    - id: defaultSettings
      type: Steeltoe.Extensions.Configuration.ConfigServer.ConfigServerClientSettings
      description: the default settings used by the Config Server client
    - id: sources
      type: System.Collections.Generic.IList{IConfigurationSource}
      description: >-
        configuration sources used by the Config Server client. The <xref href="Steeltoe.Extensions.Configuration.ConfigServer.ConfigServerConfigurationSource.Configuration" data-throw-if-not-resolved="false"></xref> will be built from these sources and the

        values will override those found in <xref href="Steeltoe.Extensions.Configuration.ConfigServer.ConfigServerConfigurationSource.DefaultSettings" data-throw-if-not-resolved="false"></xref>
    - id: properties
      type: System.Collections.Generic.IDictionary{System.String,System.Object}
      description: properties to be used when sources are built
    - id: logFactory
      type: ILoggerFactory
      description: optional logger factory used by the client
    content.vb: Public Sub New(defaultSettings As ConfigServerClientSettings, sources As IList(Of IConfigurationSource), properties As IDictionary(Of String, Object) = Nothing, logFactory As ILoggerFactory = Nothing)
  overload: Steeltoe.Extensions.Configuration.ConfigServer.ConfigServerConfigurationSource.#ctor*
  nameWithType.vb: ConfigServerConfigurationSource.ConfigServerConfigurationSource(ConfigServerClientSettings, IList(Of IConfigurationSource), IDictionary(Of String, Object), ILoggerFactory)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Steeltoe.Extensions.Configuration.ConfigServer.ConfigServerConfigurationSource.ConfigServerConfigurationSource(Steeltoe.Extensions.Configuration.ConfigServer.ConfigServerClientSettings, System.Collections.Generic.IList(Of IConfigurationSource), System.Collections.Generic.IDictionary(Of System.String, System.Object), ILoggerFactory)
  name.vb: ConfigServerConfigurationSource(ConfigServerClientSettings, IList(Of IConfigurationSource), IDictionary(Of String, Object), ILoggerFactory)
- uid: Steeltoe.Extensions.Configuration.ConfigServer.ConfigServerConfigurationSource.Build(IConfigurationBuilder)
  commentId: M:Steeltoe.Extensions.Configuration.ConfigServer.ConfigServerConfigurationSource.Build(IConfigurationBuilder)
  id: Build(IConfigurationBuilder)
  parent: Steeltoe.Extensions.Configuration.ConfigServer.ConfigServerConfigurationSource
  langs:
  - csharp
  - vb
  name: Build(IConfigurationBuilder)
  nameWithType: ConfigServerConfigurationSource.Build(IConfigurationBuilder)
  fullName: Steeltoe.Extensions.Configuration.ConfigServer.ConfigServerConfigurationSource.Build(IConfigurationBuilder)
  type: Method
  source:
    remote:
      path: src/Configuration/src/ConfigServerBase/ConfigServerConfigurationSource.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Build
    path: ../Steeltoe/src/Configuration/src/ConfigServerBase/ConfigServerConfigurationSource.cs
    startLine: 103
  assemblies:
  - Steeltoe.Extensions.Configuration.ConfigServerBase
  namespace: Steeltoe.Extensions.Configuration.ConfigServer
  summary: "\nReturns a <xref href=\"Steeltoe.Extensions.Configuration.ConfigServer.ConfigServerConfigurationProvider\" data-throw-if-not-resolved=\"false\"></xref> configured using the values from this <xref href=\"Steeltoe.Extensions.Configuration.ConfigServer.ConfigServerConfigurationSource\" data-throw-if-not-resolved=\"false\"></xref>\n"
  example: []
  syntax:
    content: public virtual IConfigurationProvider Build(IConfigurationBuilder builder)
    parameters:
    - id: builder
      type: IConfigurationBuilder
      description: not required
    return:
      type: IConfigurationProvider
      description: configuration provider
    content.vb: Public Overridable Function Build(builder As IConfigurationBuilder) As IConfigurationProvider
  overload: Steeltoe.Extensions.Configuration.ConfigServer.ConfigServerConfigurationSource.Build*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
references:
- uid: Steeltoe.Extensions.Configuration.ConfigServer
  commentId: N:Steeltoe.Extensions.Configuration.ConfigServer
  name: Steeltoe.Extensions.Configuration.ConfigServer
  nameWithType: Steeltoe.Extensions.Configuration.ConfigServer
  fullName: Steeltoe.Extensions.Configuration.ConfigServer
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Collections.Generic.IList{IConfigurationSource}
  commentId: T:System.Collections.Generic.IList{IConfigurationSource}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<IConfigurationSource>
  nameWithType: IList<IConfigurationSource>
  fullName: System.Collections.Generic.IList<IConfigurationSource>
  nameWithType.vb: IList(Of IConfigurationSource)
  fullName.vb: System.Collections.Generic.IList(Of IConfigurationSource)
  name.vb: IList(Of IConfigurationSource)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: IConfigurationSource
    name: IConfigurationSource
    nameWithType: IConfigurationSource
    fullName: IConfigurationSource
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: IConfigurationSource
    name: IConfigurationSource
    nameWithType: IConfigurationSource
    fullName: IConfigurationSource
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullName.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Collections.Generic.IDictionary{System.String,System.Object}
  commentId: T:System.Collections.Generic.IDictionary{System.String,System.Object}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IDictionary`2
  name: IDictionary<String, Object>
  nameWithType: IDictionary<String, Object>
  fullName: System.Collections.Generic.IDictionary<System.String, System.Object>
  nameWithType.vb: IDictionary(Of String, Object)
  fullName.vb: System.Collections.Generic.IDictionary(Of System.String, System.Object)
  name.vb: IDictionary(Of String, Object)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IDictionary`2
  commentId: T:System.Collections.Generic.IDictionary`2
  isExternal: true
  name: IDictionary<TKey, TValue>
  nameWithType: IDictionary<TKey, TValue>
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>
  nameWithType.vb: IDictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.IDictionary(Of TKey, TValue)
  name.vb: IDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Extensions.Configuration.ConfigServer.ConfigServerConfigurationSource.DefaultSettings*
  commentId: Overload:Steeltoe.Extensions.Configuration.ConfigServer.ConfigServerConfigurationSource.DefaultSettings
  name: DefaultSettings
  nameWithType: ConfigServerConfigurationSource.DefaultSettings
  fullName: Steeltoe.Extensions.Configuration.ConfigServer.ConfigServerConfigurationSource.DefaultSettings
- uid: Steeltoe.Extensions.Configuration.ConfigServer.ConfigServerClientSettings
  commentId: T:Steeltoe.Extensions.Configuration.ConfigServer.ConfigServerClientSettings
  parent: Steeltoe.Extensions.Configuration.ConfigServer
  name: ConfigServerClientSettings
  nameWithType: ConfigServerClientSettings
  fullName: Steeltoe.Extensions.Configuration.ConfigServer.ConfigServerClientSettings
- uid: Steeltoe.Extensions.Configuration.ConfigServer.ConfigServerConfigurationSource.DefaultSettings
  commentId: P:Steeltoe.Extensions.Configuration.ConfigServer.ConfigServerConfigurationSource.DefaultSettings
  isExternal: true
- uid: Steeltoe.Extensions.Configuration.ConfigServer.ConfigServerConfigurationSource.Configuration*
  commentId: Overload:Steeltoe.Extensions.Configuration.ConfigServer.ConfigServerConfigurationSource.Configuration
  name: Configuration
  nameWithType: ConfigServerConfigurationSource.Configuration
  fullName: Steeltoe.Extensions.Configuration.ConfigServer.ConfigServerConfigurationSource.Configuration
- uid: IConfiguration
  isExternal: true
  name: IConfiguration
  nameWithType: IConfiguration
  fullName: IConfiguration
- uid: Steeltoe.Extensions.Configuration.ConfigServer.ConfigServerConfigurationSource.LogFactory*
  commentId: Overload:Steeltoe.Extensions.Configuration.ConfigServer.ConfigServerConfigurationSource.LogFactory
  name: LogFactory
  nameWithType: ConfigServerConfigurationSource.LogFactory
  fullName: Steeltoe.Extensions.Configuration.ConfigServer.ConfigServerConfigurationSource.LogFactory
- uid: ILoggerFactory
  isExternal: true
  name: ILoggerFactory
  nameWithType: ILoggerFactory
  fullName: ILoggerFactory
- uid: Steeltoe.Extensions.Configuration.ConfigServer.ConfigServerConfigurationSource
  commentId: T:Steeltoe.Extensions.Configuration.ConfigServer.ConfigServerConfigurationSource
  parent: Steeltoe.Extensions.Configuration.ConfigServer
  name: ConfigServerConfigurationSource
  nameWithType: ConfigServerConfigurationSource
  fullName: Steeltoe.Extensions.Configuration.ConfigServer.ConfigServerConfigurationSource
- uid: Steeltoe.Extensions.Configuration.ConfigServer.ConfigServerConfigurationSource.#ctor*
  commentId: Overload:Steeltoe.Extensions.Configuration.ConfigServer.ConfigServerConfigurationSource.#ctor
  name: ConfigServerConfigurationSource
  nameWithType: ConfigServerConfigurationSource.ConfigServerConfigurationSource
  fullName: Steeltoe.Extensions.Configuration.ConfigServer.ConfigServerConfigurationSource.ConfigServerConfigurationSource
- uid: Steeltoe.Extensions.Configuration.ConfigServer.ConfigServerConfigurationSource.Configuration
  commentId: P:Steeltoe.Extensions.Configuration.ConfigServer.ConfigServerConfigurationSource.Configuration
  isExternal: true
- uid: Steeltoe.Extensions.Configuration.ConfigServer.ConfigServerConfigurationProvider
  commentId: T:Steeltoe.Extensions.Configuration.ConfigServer.ConfigServerConfigurationProvider
  name: ConfigServerConfigurationProvider
  nameWithType: ConfigServerConfigurationProvider
  fullName: Steeltoe.Extensions.Configuration.ConfigServer.ConfigServerConfigurationProvider
- uid: Steeltoe.Extensions.Configuration.ConfigServer.ConfigServerConfigurationSource.Build*
  commentId: Overload:Steeltoe.Extensions.Configuration.ConfigServer.ConfigServerConfigurationSource.Build
  name: Build
  nameWithType: ConfigServerConfigurationSource.Build
  fullName: Steeltoe.Extensions.Configuration.ConfigServer.ConfigServerConfigurationSource.Build
- uid: IConfigurationBuilder
  isExternal: true
  name: IConfigurationBuilder
  nameWithType: IConfigurationBuilder
  fullName: IConfigurationBuilder
- uid: IConfigurationProvider
  isExternal: true
  name: IConfigurationProvider
  nameWithType: IConfigurationProvider
  fullName: IConfigurationProvider
