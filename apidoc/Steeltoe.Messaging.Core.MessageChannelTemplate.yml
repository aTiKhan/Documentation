### YamlMime:ManagedReference
items:
- uid: Steeltoe.Messaging.Core.MessageChannelTemplate
  commentId: T:Steeltoe.Messaging.Core.MessageChannelTemplate
  id: MessageChannelTemplate
  parent: Steeltoe.Messaging.Core
  children:
  - Steeltoe.Messaging.Core.MessageChannelTemplate.#ctor(Microsoft.Extensions.Logging.ILogger)
  - Steeltoe.Messaging.Core.MessageChannelTemplate.#ctor(Steeltoe.Common.Contexts.IApplicationContext,Microsoft.Extensions.Logging.ILogger)
  - Steeltoe.Messaging.Core.MessageChannelTemplate.DEFAULT_RECEIVE_TIMEOUT_HEADER
  - Steeltoe.Messaging.Core.MessageChannelTemplate.DEFAULT_SEND_TIMEOUT_HEADER
  - Steeltoe.Messaging.Core.MessageChannelTemplate.DoReceive(Steeltoe.Messaging.IMessageChannel)
  - Steeltoe.Messaging.Core.MessageChannelTemplate.DoReceive(Steeltoe.Messaging.IMessageChannel,System.Int32)
  - Steeltoe.Messaging.Core.MessageChannelTemplate.DoReceiveAsync(Steeltoe.Messaging.IMessageChannel,System.Int32,System.Threading.CancellationToken)
  - Steeltoe.Messaging.Core.MessageChannelTemplate.DoReceiveAsync(Steeltoe.Messaging.IMessageChannel,System.Threading.CancellationToken)
  - Steeltoe.Messaging.Core.MessageChannelTemplate.DoReceiveInternalAsync(Steeltoe.Messaging.IMessageChannel,System.Int32,System.Threading.CancellationToken)
  - Steeltoe.Messaging.Core.MessageChannelTemplate.DoSend(Steeltoe.Messaging.IMessageChannel,Steeltoe.Messaging.IMessage)
  - Steeltoe.Messaging.Core.MessageChannelTemplate.DoSend(Steeltoe.Messaging.IMessageChannel,Steeltoe.Messaging.IMessage,System.Int32)
  - Steeltoe.Messaging.Core.MessageChannelTemplate.DoSendAndReceive(Steeltoe.Messaging.IMessageChannel,Steeltoe.Messaging.IMessage)
  - Steeltoe.Messaging.Core.MessageChannelTemplate.DoSendAndReceiveAsync(Steeltoe.Messaging.IMessageChannel,Steeltoe.Messaging.IMessage,System.Threading.CancellationToken)
  - Steeltoe.Messaging.Core.MessageChannelTemplate.DoSendAndReceiveInternalAsync(Steeltoe.Messaging.IMessageChannel,Steeltoe.Messaging.IMessage,System.Threading.CancellationToken)
  - Steeltoe.Messaging.Core.MessageChannelTemplate.DoSendAsync(Steeltoe.Messaging.IMessageChannel,Steeltoe.Messaging.IMessage,System.Int32,System.Threading.CancellationToken)
  - Steeltoe.Messaging.Core.MessageChannelTemplate.DoSendAsync(Steeltoe.Messaging.IMessageChannel,Steeltoe.Messaging.IMessage,System.Threading.CancellationToken)
  - Steeltoe.Messaging.Core.MessageChannelTemplate.DoSendInternalAsync(Steeltoe.Messaging.IMessageChannel,Steeltoe.Messaging.IMessage,System.Int32,System.Threading.CancellationToken)
  - Steeltoe.Messaging.Core.MessageChannelTemplate.ProcessMessageBeforeSend(Steeltoe.Messaging.IMessage)
  - Steeltoe.Messaging.Core.MessageChannelTemplate.ReceiveTimeout
  - Steeltoe.Messaging.Core.MessageChannelTemplate.ReceiveTimeoutHeader
  - Steeltoe.Messaging.Core.MessageChannelTemplate.SendTimeout
  - Steeltoe.Messaging.Core.MessageChannelTemplate.SendTimeoutHeader
  - Steeltoe.Messaging.Core.MessageChannelTemplate.ThrowExceptionOnLateReply
  langs:
  - csharp
  - vb
  name: MessageChannelTemplate
  nameWithType: MessageChannelTemplate
  fullName: Steeltoe.Messaging.Core.MessageChannelTemplate
  type: Class
  source:
    remote:
      path: src/Messaging/src/MessagingBase/Core/MessageChannelTemplate.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: MessageChannelTemplate
    path: ../Steeltoe/src/Messaging/src/MessagingBase/Core/MessageChannelTemplate.cs
    startLine: 13
  assemblies:
  - Steeltoe.Messaging.MessagingBase
  namespace: Steeltoe.Messaging.Core
  syntax:
    content: 'public class MessageChannelTemplate : AbstractDestinationResolvingMessagingTemplate<IMessageChannel>, IDestinationResolvingMessageSendingOperations<IMessageChannel>, IMessageSendingOperations<IMessageChannel>, IDestinationResolvingMessageReceivingOperations<IMessageChannel>, IMessageReceivingOperations<IMessageChannel>, IDestinationResolvingMessageRequestReplyOperations<IMessageChannel>, IMessageRequestReplyOperations<IMessageChannel>'
    content.vb: >-
      Public Class MessageChannelTemplate

          Inherits AbstractDestinationResolvingMessagingTemplate(Of IMessageChannel)

          Implements IDestinationResolvingMessageSendingOperations(Of IMessageChannel), IMessageSendingOperations(Of IMessageChannel), IDestinationResolvingMessageReceivingOperations(Of IMessageChannel), IMessageReceivingOperations(Of IMessageChannel), IDestinationResolvingMessageRequestReplyOperations(Of IMessageChannel), IMessageRequestReplyOperations(Of IMessageChannel)
  inheritance:
  - System.Object
  - Steeltoe.Messaging.Core.AbstractMessageSendingTemplate{Steeltoe.Messaging.IMessageChannel}
  - Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate{Steeltoe.Messaging.IMessageChannel}
  - Steeltoe.Messaging.Core.AbstractMessagingTemplate{Steeltoe.Messaging.IMessageChannel}
  - Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate{Steeltoe.Messaging.IMessageChannel}
  derivedClasses:
  - Steeltoe.Integration.MessagingTemplate
  implements:
  - Steeltoe.Messaging.Core.IDestinationResolvingMessageSendingOperations{Steeltoe.Messaging.IMessageChannel}
  - Steeltoe.Messaging.Core.IMessageSendingOperations{Steeltoe.Messaging.IMessageChannel}
  - Steeltoe.Messaging.Core.IDestinationResolvingMessageReceivingOperations{Steeltoe.Messaging.IMessageChannel}
  - Steeltoe.Messaging.Core.IMessageReceivingOperations{Steeltoe.Messaging.IMessageChannel}
  - Steeltoe.Messaging.Core.IDestinationResolvingMessageRequestReplyOperations{Steeltoe.Messaging.IMessageChannel}
  - Steeltoe.Messaging.Core.IMessageRequestReplyOperations{Steeltoe.Messaging.IMessageChannel}
  inheritedMembers:
  - Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate{Steeltoe.Messaging.IMessageChannel}.ApplicationContext
  - Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate{Steeltoe.Messaging.IMessageChannel}.DestinationResolver
  - Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate{Steeltoe.Messaging.IMessageChannel}.ConvertAndSendAsync(System.String,System.Object,System.Threading.CancellationToken)
  - Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate{Steeltoe.Messaging.IMessageChannel}.ConvertAndSendAsync(System.String,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object},System.Threading.CancellationToken)
  - Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate{Steeltoe.Messaging.IMessageChannel}.ConvertAndSendAsync(System.String,System.Object,Steeltoe.Messaging.Core.IMessagePostProcessor,System.Threading.CancellationToken)
  - Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate{Steeltoe.Messaging.IMessageChannel}.ConvertAndSendAsync(System.String,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object},Steeltoe.Messaging.Core.IMessagePostProcessor,System.Threading.CancellationToken)
  - Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate{Steeltoe.Messaging.IMessageChannel}.ConvertSendAndReceiveAsync``1(System.String,System.Object,System.Threading.CancellationToken)
  - Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate{Steeltoe.Messaging.IMessageChannel}.ConvertSendAndReceiveAsync``1(System.String,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object},System.Threading.CancellationToken)
  - Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate{Steeltoe.Messaging.IMessageChannel}.ConvertSendAndReceiveAsync``1(System.String,System.Object,Steeltoe.Messaging.Core.IMessagePostProcessor,System.Threading.CancellationToken)
  - Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate{Steeltoe.Messaging.IMessageChannel}.ConvertSendAndReceiveAsync``1(System.String,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object},Steeltoe.Messaging.Core.IMessagePostProcessor,System.Threading.CancellationToken)
  - Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate{Steeltoe.Messaging.IMessageChannel}.ReceiveAsync(System.String,System.Threading.CancellationToken)
  - Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate{Steeltoe.Messaging.IMessageChannel}.ReceiveAndConvertAsync``1(System.String,System.Threading.CancellationToken)
  - Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate{Steeltoe.Messaging.IMessageChannel}.SendAsync(System.String,Steeltoe.Messaging.IMessage,System.Threading.CancellationToken)
  - Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate{Steeltoe.Messaging.IMessageChannel}.SendAndReceiveAsync(System.String,Steeltoe.Messaging.IMessage,System.Threading.CancellationToken)
  - Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate{Steeltoe.Messaging.IMessageChannel}.ConvertAndSend(System.String,System.Object)
  - Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate{Steeltoe.Messaging.IMessageChannel}.ConvertAndSend(System.String,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object})
  - Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate{Steeltoe.Messaging.IMessageChannel}.ConvertAndSend(System.String,System.Object,Steeltoe.Messaging.Core.IMessagePostProcessor)
  - Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate{Steeltoe.Messaging.IMessageChannel}.ConvertAndSend(System.String,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object},Steeltoe.Messaging.Core.IMessagePostProcessor)
  - Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate{Steeltoe.Messaging.IMessageChannel}.ConvertSendAndReceive``1(System.String,System.Object)
  - Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate{Steeltoe.Messaging.IMessageChannel}.ConvertSendAndReceive``1(System.String,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object})
  - Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate{Steeltoe.Messaging.IMessageChannel}.ConvertSendAndReceive``1(System.String,System.Object,Steeltoe.Messaging.Core.IMessagePostProcessor)
  - Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate{Steeltoe.Messaging.IMessageChannel}.ConvertSendAndReceive``1(System.String,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object},Steeltoe.Messaging.Core.IMessagePostProcessor)
  - Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate{Steeltoe.Messaging.IMessageChannel}.Receive(System.String)
  - Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate{Steeltoe.Messaging.IMessageChannel}.ReceiveAndConvert``1(System.String)
  - Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate{Steeltoe.Messaging.IMessageChannel}.Send(System.String,Steeltoe.Messaging.IMessage)
  - Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate{Steeltoe.Messaging.IMessageChannel}.SendAndReceive(System.String,Steeltoe.Messaging.IMessage)
  - Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate{Steeltoe.Messaging.IMessageChannel}.ResolveDestination(System.String)
  - Steeltoe.Messaging.Core.AbstractMessagingTemplate{Steeltoe.Messaging.IMessageChannel}.ConvertSendAndReceiveAsync``1(System.Object,System.Threading.CancellationToken)
  - Steeltoe.Messaging.Core.AbstractMessagingTemplate{Steeltoe.Messaging.IMessageChannel}.ConvertSendAndReceiveAsync``1(Steeltoe.Messaging.IMessageChannel,System.Object,System.Threading.CancellationToken)
  - Steeltoe.Messaging.Core.AbstractMessagingTemplate{Steeltoe.Messaging.IMessageChannel}.ConvertSendAndReceiveAsync``1(Steeltoe.Messaging.IMessageChannel,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object},System.Threading.CancellationToken)
  - Steeltoe.Messaging.Core.AbstractMessagingTemplate{Steeltoe.Messaging.IMessageChannel}.ConvertSendAndReceiveAsync``1(System.Object,Steeltoe.Messaging.Core.IMessagePostProcessor,System.Threading.CancellationToken)
  - Steeltoe.Messaging.Core.AbstractMessagingTemplate{Steeltoe.Messaging.IMessageChannel}.ConvertSendAndReceiveAsync``1(Steeltoe.Messaging.IMessageChannel,System.Object,Steeltoe.Messaging.Core.IMessagePostProcessor,System.Threading.CancellationToken)
  - Steeltoe.Messaging.Core.AbstractMessagingTemplate{Steeltoe.Messaging.IMessageChannel}.ConvertSendAndReceiveAsync``1(Steeltoe.Messaging.IMessageChannel,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object},Steeltoe.Messaging.Core.IMessagePostProcessor,System.Threading.CancellationToken)
  - Steeltoe.Messaging.Core.AbstractMessagingTemplate{Steeltoe.Messaging.IMessageChannel}.SendAndReceiveAsync(Steeltoe.Messaging.IMessage,System.Threading.CancellationToken)
  - Steeltoe.Messaging.Core.AbstractMessagingTemplate{Steeltoe.Messaging.IMessageChannel}.SendAndReceiveAsync(Steeltoe.Messaging.IMessageChannel,Steeltoe.Messaging.IMessage,System.Threading.CancellationToken)
  - Steeltoe.Messaging.Core.AbstractMessagingTemplate{Steeltoe.Messaging.IMessageChannel}.ConvertSendAndReceive``1(System.Object)
  - Steeltoe.Messaging.Core.AbstractMessagingTemplate{Steeltoe.Messaging.IMessageChannel}.ConvertSendAndReceive``1(Steeltoe.Messaging.IMessageChannel,System.Object)
  - Steeltoe.Messaging.Core.AbstractMessagingTemplate{Steeltoe.Messaging.IMessageChannel}.ConvertSendAndReceive``1(Steeltoe.Messaging.IMessageChannel,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object})
  - Steeltoe.Messaging.Core.AbstractMessagingTemplate{Steeltoe.Messaging.IMessageChannel}.ConvertSendAndReceive``1(System.Object,Steeltoe.Messaging.Core.IMessagePostProcessor)
  - Steeltoe.Messaging.Core.AbstractMessagingTemplate{Steeltoe.Messaging.IMessageChannel}.ConvertSendAndReceive``1(Steeltoe.Messaging.IMessageChannel,System.Object,Steeltoe.Messaging.Core.IMessagePostProcessor)
  - Steeltoe.Messaging.Core.AbstractMessagingTemplate{Steeltoe.Messaging.IMessageChannel}.ConvertSendAndReceive``1(Steeltoe.Messaging.IMessageChannel,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object},Steeltoe.Messaging.Core.IMessagePostProcessor)
  - Steeltoe.Messaging.Core.AbstractMessagingTemplate{Steeltoe.Messaging.IMessageChannel}.SendAndReceive(Steeltoe.Messaging.IMessage)
  - Steeltoe.Messaging.Core.AbstractMessagingTemplate{Steeltoe.Messaging.IMessageChannel}.SendAndReceive(Steeltoe.Messaging.IMessageChannel,Steeltoe.Messaging.IMessage)
  - Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate{Steeltoe.Messaging.IMessageChannel}.DefaultReceiveDestination
  - Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate{Steeltoe.Messaging.IMessageChannel}.ThrowReceivedExceptions
  - Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate{Steeltoe.Messaging.IMessageChannel}.ReceiveAsync(System.Threading.CancellationToken)
  - Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate{Steeltoe.Messaging.IMessageChannel}.ReceiveAsync(Steeltoe.Messaging.IMessageChannel,System.Threading.CancellationToken)
  - Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate{Steeltoe.Messaging.IMessageChannel}.ReceiveAndConvertAsync``1(System.Threading.CancellationToken)
  - Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate{Steeltoe.Messaging.IMessageChannel}.ReceiveAndConvertAsync``1(Steeltoe.Messaging.IMessageChannel,System.Threading.CancellationToken)
  - Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate{Steeltoe.Messaging.IMessageChannel}.Receive
  - Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate{Steeltoe.Messaging.IMessageChannel}.Receive(Steeltoe.Messaging.IMessageChannel)
  - Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate{Steeltoe.Messaging.IMessageChannel}.ReceiveAndConvert``1
  - Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate{Steeltoe.Messaging.IMessageChannel}.ReceiveAndConvert``1(Steeltoe.Messaging.IMessageChannel)
  - Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate{Steeltoe.Messaging.IMessageChannel}.RequiredDefaultReceiveDestination
  - Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate{Steeltoe.Messaging.IMessageChannel}.DoConvert``1(Steeltoe.Messaging.IMessage)
  - Steeltoe.Messaging.Core.AbstractMessageSendingTemplate{Steeltoe.Messaging.IMessageChannel}.CONVERSION_HINT_HEADER
  - Steeltoe.Messaging.Core.AbstractMessageSendingTemplate{Steeltoe.Messaging.IMessageChannel}.DefaultSendDestination
  - Steeltoe.Messaging.Core.AbstractMessageSendingTemplate{Steeltoe.Messaging.IMessageChannel}.MessageConverter
  - Steeltoe.Messaging.Core.AbstractMessageSendingTemplate{Steeltoe.Messaging.IMessageChannel}.ConvertAndSendAsync(System.Object,System.Threading.CancellationToken)
  - Steeltoe.Messaging.Core.AbstractMessageSendingTemplate{Steeltoe.Messaging.IMessageChannel}.ConvertAndSendAsync(Steeltoe.Messaging.IMessageChannel,System.Object,System.Threading.CancellationToken)
  - Steeltoe.Messaging.Core.AbstractMessageSendingTemplate{Steeltoe.Messaging.IMessageChannel}.ConvertAndSendAsync(Steeltoe.Messaging.IMessageChannel,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object},System.Threading.CancellationToken)
  - Steeltoe.Messaging.Core.AbstractMessageSendingTemplate{Steeltoe.Messaging.IMessageChannel}.ConvertAndSendAsync(System.Object,Steeltoe.Messaging.Core.IMessagePostProcessor,System.Threading.CancellationToken)
  - Steeltoe.Messaging.Core.AbstractMessageSendingTemplate{Steeltoe.Messaging.IMessageChannel}.ConvertAndSendAsync(Steeltoe.Messaging.IMessageChannel,System.Object,Steeltoe.Messaging.Core.IMessagePostProcessor,System.Threading.CancellationToken)
  - Steeltoe.Messaging.Core.AbstractMessageSendingTemplate{Steeltoe.Messaging.IMessageChannel}.ConvertAndSendAsync(Steeltoe.Messaging.IMessageChannel,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object},Steeltoe.Messaging.Core.IMessagePostProcessor,System.Threading.CancellationToken)
  - Steeltoe.Messaging.Core.AbstractMessageSendingTemplate{Steeltoe.Messaging.IMessageChannel}.SendAsync(Steeltoe.Messaging.IMessage,System.Threading.CancellationToken)
  - Steeltoe.Messaging.Core.AbstractMessageSendingTemplate{Steeltoe.Messaging.IMessageChannel}.SendAsync(Steeltoe.Messaging.IMessageChannel,Steeltoe.Messaging.IMessage,System.Threading.CancellationToken)
  - Steeltoe.Messaging.Core.AbstractMessageSendingTemplate{Steeltoe.Messaging.IMessageChannel}.ConvertAndSend(System.Object)
  - Steeltoe.Messaging.Core.AbstractMessageSendingTemplate{Steeltoe.Messaging.IMessageChannel}.ConvertAndSend(Steeltoe.Messaging.IMessageChannel,System.Object)
  - Steeltoe.Messaging.Core.AbstractMessageSendingTemplate{Steeltoe.Messaging.IMessageChannel}.ConvertAndSend(Steeltoe.Messaging.IMessageChannel,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object})
  - Steeltoe.Messaging.Core.AbstractMessageSendingTemplate{Steeltoe.Messaging.IMessageChannel}.ConvertAndSend(System.Object,Steeltoe.Messaging.Core.IMessagePostProcessor)
  - Steeltoe.Messaging.Core.AbstractMessageSendingTemplate{Steeltoe.Messaging.IMessageChannel}.ConvertAndSend(Steeltoe.Messaging.IMessageChannel,System.Object,Steeltoe.Messaging.Core.IMessagePostProcessor)
  - Steeltoe.Messaging.Core.AbstractMessageSendingTemplate{Steeltoe.Messaging.IMessageChannel}.ConvertAndSend(Steeltoe.Messaging.IMessageChannel,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object},Steeltoe.Messaging.Core.IMessagePostProcessor)
  - Steeltoe.Messaging.Core.AbstractMessageSendingTemplate{Steeltoe.Messaging.IMessageChannel}.Send(Steeltoe.Messaging.IMessage)
  - Steeltoe.Messaging.Core.AbstractMessageSendingTemplate{Steeltoe.Messaging.IMessageChannel}.Send(Steeltoe.Messaging.IMessageChannel,Steeltoe.Messaging.IMessage)
  - Steeltoe.Messaging.Core.AbstractMessageSendingTemplate{Steeltoe.Messaging.IMessageChannel}.RequiredDefaultSendDestination
  - Steeltoe.Messaging.Core.AbstractMessageSendingTemplate{Steeltoe.Messaging.IMessageChannel}.DoConvert(System.Object,System.Collections.Generic.IDictionary{System.String,System.Object},Steeltoe.Messaging.Core.IMessagePostProcessor)
  - Steeltoe.Messaging.Core.AbstractMessageSendingTemplate{Steeltoe.Messaging.IMessageChannel}.ProcessHeadersToSend(System.Collections.Generic.IDictionary{System.String,System.Object})
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Steeltoe.Messaging.Core.MessageChannelTemplate.DEFAULT_SEND_TIMEOUT_HEADER
  commentId: F:Steeltoe.Messaging.Core.MessageChannelTemplate.DEFAULT_SEND_TIMEOUT_HEADER
  id: DEFAULT_SEND_TIMEOUT_HEADER
  parent: Steeltoe.Messaging.Core.MessageChannelTemplate
  langs:
  - csharp
  - vb
  name: DEFAULT_SEND_TIMEOUT_HEADER
  nameWithType: MessageChannelTemplate.DEFAULT_SEND_TIMEOUT_HEADER
  fullName: Steeltoe.Messaging.Core.MessageChannelTemplate.DEFAULT_SEND_TIMEOUT_HEADER
  type: Field
  source:
    remote:
      path: src/Messaging/src/MessagingBase/Core/MessageChannelTemplate.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: DEFAULT_SEND_TIMEOUT_HEADER
    path: ../Steeltoe/src/Messaging/src/MessagingBase/Core/MessageChannelTemplate.cs
    startLine: 15
  assemblies:
  - Steeltoe.Messaging.MessagingBase
  namespace: Steeltoe.Messaging.Core
  syntax:
    content: public const string DEFAULT_SEND_TIMEOUT_HEADER = "sendTimeout"
    return:
      type: System.String
    content.vb: Public Const DEFAULT_SEND_TIMEOUT_HEADER As String = "sendTimeout"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Steeltoe.Messaging.Core.MessageChannelTemplate.DEFAULT_RECEIVE_TIMEOUT_HEADER
  commentId: F:Steeltoe.Messaging.Core.MessageChannelTemplate.DEFAULT_RECEIVE_TIMEOUT_HEADER
  id: DEFAULT_RECEIVE_TIMEOUT_HEADER
  parent: Steeltoe.Messaging.Core.MessageChannelTemplate
  langs:
  - csharp
  - vb
  name: DEFAULT_RECEIVE_TIMEOUT_HEADER
  nameWithType: MessageChannelTemplate.DEFAULT_RECEIVE_TIMEOUT_HEADER
  fullName: Steeltoe.Messaging.Core.MessageChannelTemplate.DEFAULT_RECEIVE_TIMEOUT_HEADER
  type: Field
  source:
    remote:
      path: src/Messaging/src/MessagingBase/Core/MessageChannelTemplate.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: DEFAULT_RECEIVE_TIMEOUT_HEADER
    path: ../Steeltoe/src/Messaging/src/MessagingBase/Core/MessageChannelTemplate.cs
    startLine: 17
  assemblies:
  - Steeltoe.Messaging.MessagingBase
  namespace: Steeltoe.Messaging.Core
  syntax:
    content: public const string DEFAULT_RECEIVE_TIMEOUT_HEADER = "receiveTimeout"
    return:
      type: System.String
    content.vb: Public Const DEFAULT_RECEIVE_TIMEOUT_HEADER As String = "receiveTimeout"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Steeltoe.Messaging.Core.MessageChannelTemplate.#ctor(Microsoft.Extensions.Logging.ILogger)
  commentId: M:Steeltoe.Messaging.Core.MessageChannelTemplate.#ctor(Microsoft.Extensions.Logging.ILogger)
  id: '#ctor(Microsoft.Extensions.Logging.ILogger)'
  parent: Steeltoe.Messaging.Core.MessageChannelTemplate
  langs:
  - csharp
  - vb
  name: MessageChannelTemplate(ILogger)
  nameWithType: MessageChannelTemplate.MessageChannelTemplate(ILogger)
  fullName: Steeltoe.Messaging.Core.MessageChannelTemplate.MessageChannelTemplate(Microsoft.Extensions.Logging.ILogger)
  type: Constructor
  source:
    remote:
      path: src/Messaging/src/MessagingBase/Core/MessageChannelTemplate.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: .ctor
    path: ../Steeltoe/src/Messaging/src/MessagingBase/Core/MessageChannelTemplate.cs
    startLine: 31
  assemblies:
  - Steeltoe.Messaging.MessagingBase
  namespace: Steeltoe.Messaging.Core
  syntax:
    content: public MessageChannelTemplate(ILogger logger = null)
    parameters:
    - id: logger
      type: Microsoft.Extensions.Logging.ILogger
    content.vb: Public Sub New(logger As ILogger = Nothing)
  overload: Steeltoe.Messaging.Core.MessageChannelTemplate.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Steeltoe.Messaging.Core.MessageChannelTemplate.#ctor(Steeltoe.Common.Contexts.IApplicationContext,Microsoft.Extensions.Logging.ILogger)
  commentId: M:Steeltoe.Messaging.Core.MessageChannelTemplate.#ctor(Steeltoe.Common.Contexts.IApplicationContext,Microsoft.Extensions.Logging.ILogger)
  id: '#ctor(Steeltoe.Common.Contexts.IApplicationContext,Microsoft.Extensions.Logging.ILogger)'
  parent: Steeltoe.Messaging.Core.MessageChannelTemplate
  langs:
  - csharp
  - vb
  name: MessageChannelTemplate(IApplicationContext, ILogger)
  nameWithType: MessageChannelTemplate.MessageChannelTemplate(IApplicationContext, ILogger)
  fullName: Steeltoe.Messaging.Core.MessageChannelTemplate.MessageChannelTemplate(Steeltoe.Common.Contexts.IApplicationContext, Microsoft.Extensions.Logging.ILogger)
  type: Constructor
  source:
    remote:
      path: src/Messaging/src/MessagingBase/Core/MessageChannelTemplate.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: .ctor
    path: ../Steeltoe/src/Messaging/src/MessagingBase/Core/MessageChannelTemplate.cs
    startLine: 37
  assemblies:
  - Steeltoe.Messaging.MessagingBase
  namespace: Steeltoe.Messaging.Core
  syntax:
    content: public MessageChannelTemplate(IApplicationContext context, ILogger logger = null)
    parameters:
    - id: context
      type: Steeltoe.Common.Contexts.IApplicationContext
    - id: logger
      type: Microsoft.Extensions.Logging.ILogger
    content.vb: Public Sub New(context As IApplicationContext, logger As ILogger = Nothing)
  overload: Steeltoe.Messaging.Core.MessageChannelTemplate.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Steeltoe.Messaging.Core.MessageChannelTemplate.SendTimeout
  commentId: P:Steeltoe.Messaging.Core.MessageChannelTemplate.SendTimeout
  id: SendTimeout
  parent: Steeltoe.Messaging.Core.MessageChannelTemplate
  langs:
  - csharp
  - vb
  name: SendTimeout
  nameWithType: MessageChannelTemplate.SendTimeout
  fullName: Steeltoe.Messaging.Core.MessageChannelTemplate.SendTimeout
  type: Property
  source:
    remote:
      path: src/Messaging/src/MessagingBase/Core/MessageChannelTemplate.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: SendTimeout
    path: ../Steeltoe/src/Messaging/src/MessagingBase/Core/MessageChannelTemplate.cs
    startLine: 43
  assemblies:
  - Steeltoe.Messaging.MessagingBase
  namespace: Steeltoe.Messaging.Core
  syntax:
    content: public virtual int SendTimeout { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Overridable Property SendTimeout As Integer
  overload: Steeltoe.Messaging.Core.MessageChannelTemplate.SendTimeout*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Steeltoe.Messaging.Core.MessageChannelTemplate.ReceiveTimeout
  commentId: P:Steeltoe.Messaging.Core.MessageChannelTemplate.ReceiveTimeout
  id: ReceiveTimeout
  parent: Steeltoe.Messaging.Core.MessageChannelTemplate
  langs:
  - csharp
  - vb
  name: ReceiveTimeout
  nameWithType: MessageChannelTemplate.ReceiveTimeout
  fullName: Steeltoe.Messaging.Core.MessageChannelTemplate.ReceiveTimeout
  type: Property
  source:
    remote:
      path: src/Messaging/src/MessagingBase/Core/MessageChannelTemplate.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: ReceiveTimeout
    path: ../Steeltoe/src/Messaging/src/MessagingBase/Core/MessageChannelTemplate.cs
    startLine: 56
  assemblies:
  - Steeltoe.Messaging.MessagingBase
  namespace: Steeltoe.Messaging.Core
  syntax:
    content: public virtual int ReceiveTimeout { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Overridable Property ReceiveTimeout As Integer
  overload: Steeltoe.Messaging.Core.MessageChannelTemplate.ReceiveTimeout*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Steeltoe.Messaging.Core.MessageChannelTemplate.SendTimeoutHeader
  commentId: P:Steeltoe.Messaging.Core.MessageChannelTemplate.SendTimeoutHeader
  id: SendTimeoutHeader
  parent: Steeltoe.Messaging.Core.MessageChannelTemplate
  langs:
  - csharp
  - vb
  name: SendTimeoutHeader
  nameWithType: MessageChannelTemplate.SendTimeoutHeader
  fullName: Steeltoe.Messaging.Core.MessageChannelTemplate.SendTimeoutHeader
  type: Property
  source:
    remote:
      path: src/Messaging/src/MessagingBase/Core/MessageChannelTemplate.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: SendTimeoutHeader
    path: ../Steeltoe/src/Messaging/src/MessagingBase/Core/MessageChannelTemplate.cs
    startLine: 69
  assemblies:
  - Steeltoe.Messaging.MessagingBase
  namespace: Steeltoe.Messaging.Core
  syntax:
    content: public virtual string SendTimeoutHeader { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Overridable Property SendTimeoutHeader As String
  overload: Steeltoe.Messaging.Core.MessageChannelTemplate.SendTimeoutHeader*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Steeltoe.Messaging.Core.MessageChannelTemplate.ReceiveTimeoutHeader
  commentId: P:Steeltoe.Messaging.Core.MessageChannelTemplate.ReceiveTimeoutHeader
  id: ReceiveTimeoutHeader
  parent: Steeltoe.Messaging.Core.MessageChannelTemplate
  langs:
  - csharp
  - vb
  name: ReceiveTimeoutHeader
  nameWithType: MessageChannelTemplate.ReceiveTimeoutHeader
  fullName: Steeltoe.Messaging.Core.MessageChannelTemplate.ReceiveTimeoutHeader
  type: Property
  source:
    remote:
      path: src/Messaging/src/MessagingBase/Core/MessageChannelTemplate.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: ReceiveTimeoutHeader
    path: ../Steeltoe/src/Messaging/src/MessagingBase/Core/MessageChannelTemplate.cs
    startLine: 82
  assemblies:
  - Steeltoe.Messaging.MessagingBase
  namespace: Steeltoe.Messaging.Core
  syntax:
    content: public virtual string ReceiveTimeoutHeader { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Overridable Property ReceiveTimeoutHeader As String
  overload: Steeltoe.Messaging.Core.MessageChannelTemplate.ReceiveTimeoutHeader*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Steeltoe.Messaging.Core.MessageChannelTemplate.ThrowExceptionOnLateReply
  commentId: P:Steeltoe.Messaging.Core.MessageChannelTemplate.ThrowExceptionOnLateReply
  id: ThrowExceptionOnLateReply
  parent: Steeltoe.Messaging.Core.MessageChannelTemplate
  langs:
  - csharp
  - vb
  name: ThrowExceptionOnLateReply
  nameWithType: MessageChannelTemplate.ThrowExceptionOnLateReply
  fullName: Steeltoe.Messaging.Core.MessageChannelTemplate.ThrowExceptionOnLateReply
  type: Property
  source:
    remote:
      path: src/Messaging/src/MessagingBase/Core/MessageChannelTemplate.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: ThrowExceptionOnLateReply
    path: ../Steeltoe/src/Messaging/src/MessagingBase/Core/MessageChannelTemplate.cs
    startLine: 95
  assemblies:
  - Steeltoe.Messaging.MessagingBase
  namespace: Steeltoe.Messaging.Core
  syntax:
    content: public virtual bool ThrowExceptionOnLateReply { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Overridable Property ThrowExceptionOnLateReply As Boolean
  overload: Steeltoe.Messaging.Core.MessageChannelTemplate.ThrowExceptionOnLateReply*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Steeltoe.Messaging.Core.MessageChannelTemplate.ProcessMessageBeforeSend(Steeltoe.Messaging.IMessage)
  commentId: M:Steeltoe.Messaging.Core.MessageChannelTemplate.ProcessMessageBeforeSend(Steeltoe.Messaging.IMessage)
  id: ProcessMessageBeforeSend(Steeltoe.Messaging.IMessage)
  parent: Steeltoe.Messaging.Core.MessageChannelTemplate
  langs:
  - csharp
  - vb
  name: ProcessMessageBeforeSend(IMessage)
  nameWithType: MessageChannelTemplate.ProcessMessageBeforeSend(IMessage)
  fullName: Steeltoe.Messaging.Core.MessageChannelTemplate.ProcessMessageBeforeSend(Steeltoe.Messaging.IMessage)
  type: Method
  source:
    remote:
      path: src/Messaging/src/MessagingBase/Core/MessageChannelTemplate.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: ProcessMessageBeforeSend
    path: ../Steeltoe/src/Messaging/src/MessagingBase/Core/MessageChannelTemplate.cs
    startLine: 108
  assemblies:
  - Steeltoe.Messaging.MessagingBase
  namespace: Steeltoe.Messaging.Core
  syntax:
    content: protected virtual IMessage ProcessMessageBeforeSend(IMessage message)
    parameters:
    - id: message
      type: Steeltoe.Messaging.IMessage
    return:
      type: Steeltoe.Messaging.IMessage
    content.vb: Protected Overridable Function ProcessMessageBeforeSend(message As IMessage) As IMessage
  overload: Steeltoe.Messaging.Core.MessageChannelTemplate.ProcessMessageBeforeSend*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: Steeltoe.Messaging.Core.MessageChannelTemplate.DoSend(Steeltoe.Messaging.IMessageChannel,Steeltoe.Messaging.IMessage)
  commentId: M:Steeltoe.Messaging.Core.MessageChannelTemplate.DoSend(Steeltoe.Messaging.IMessageChannel,Steeltoe.Messaging.IMessage)
  id: DoSend(Steeltoe.Messaging.IMessageChannel,Steeltoe.Messaging.IMessage)
  parent: Steeltoe.Messaging.Core.MessageChannelTemplate
  langs:
  - csharp
  - vb
  name: DoSend(IMessageChannel, IMessage)
  nameWithType: MessageChannelTemplate.DoSend(IMessageChannel, IMessage)
  fullName: Steeltoe.Messaging.Core.MessageChannelTemplate.DoSend(Steeltoe.Messaging.IMessageChannel, Steeltoe.Messaging.IMessage)
  type: Method
  source:
    remote:
      path: src/Messaging/src/MessagingBase/Core/MessageChannelTemplate.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: DoSend
    path: ../Steeltoe/src/Messaging/src/MessagingBase/Core/MessageChannelTemplate.cs
    startLine: 130
  assemblies:
  - Steeltoe.Messaging.MessagingBase
  namespace: Steeltoe.Messaging.Core
  syntax:
    content: protected override void DoSend(IMessageChannel channel, IMessage message)
    parameters:
    - id: channel
      type: Steeltoe.Messaging.IMessageChannel
    - id: message
      type: Steeltoe.Messaging.IMessage
    content.vb: Protected Overrides Sub DoSend(channel As IMessageChannel, message As IMessage)
  overridden: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate{Steeltoe.Messaging.IMessageChannel}.DoSend(Steeltoe.Messaging.IMessageChannel,Steeltoe.Messaging.IMessage)
  overload: Steeltoe.Messaging.Core.MessageChannelTemplate.DoSend*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: Steeltoe.Messaging.Core.MessageChannelTemplate.DoSend(Steeltoe.Messaging.IMessageChannel,Steeltoe.Messaging.IMessage,System.Int32)
  commentId: M:Steeltoe.Messaging.Core.MessageChannelTemplate.DoSend(Steeltoe.Messaging.IMessageChannel,Steeltoe.Messaging.IMessage,System.Int32)
  id: DoSend(Steeltoe.Messaging.IMessageChannel,Steeltoe.Messaging.IMessage,System.Int32)
  parent: Steeltoe.Messaging.Core.MessageChannelTemplate
  langs:
  - csharp
  - vb
  name: DoSend(IMessageChannel, IMessage, Int32)
  nameWithType: MessageChannelTemplate.DoSend(IMessageChannel, IMessage, Int32)
  fullName: Steeltoe.Messaging.Core.MessageChannelTemplate.DoSend(Steeltoe.Messaging.IMessageChannel, Steeltoe.Messaging.IMessage, System.Int32)
  type: Method
  source:
    remote:
      path: src/Messaging/src/MessagingBase/Core/MessageChannelTemplate.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: DoSend
    path: ../Steeltoe/src/Messaging/src/MessagingBase/Core/MessageChannelTemplate.cs
    startLine: 135
  assemblies:
  - Steeltoe.Messaging.MessagingBase
  namespace: Steeltoe.Messaging.Core
  syntax:
    content: protected void DoSend(IMessageChannel channel, IMessage message, int timeout)
    parameters:
    - id: channel
      type: Steeltoe.Messaging.IMessageChannel
    - id: message
      type: Steeltoe.Messaging.IMessage
    - id: timeout
      type: System.Int32
    content.vb: Protected Sub DoSend(channel As IMessageChannel, message As IMessage, timeout As Integer)
  overload: Steeltoe.Messaging.Core.MessageChannelTemplate.DoSend*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Steeltoe.Messaging.Core.MessageChannelTemplate.DoSendAsync(Steeltoe.Messaging.IMessageChannel,Steeltoe.Messaging.IMessage,System.Threading.CancellationToken)
  commentId: M:Steeltoe.Messaging.Core.MessageChannelTemplate.DoSendAsync(Steeltoe.Messaging.IMessageChannel,Steeltoe.Messaging.IMessage,System.Threading.CancellationToken)
  id: DoSendAsync(Steeltoe.Messaging.IMessageChannel,Steeltoe.Messaging.IMessage,System.Threading.CancellationToken)
  parent: Steeltoe.Messaging.Core.MessageChannelTemplate
  langs:
  - csharp
  - vb
  name: DoSendAsync(IMessageChannel, IMessage, CancellationToken)
  nameWithType: MessageChannelTemplate.DoSendAsync(IMessageChannel, IMessage, CancellationToken)
  fullName: Steeltoe.Messaging.Core.MessageChannelTemplate.DoSendAsync(Steeltoe.Messaging.IMessageChannel, Steeltoe.Messaging.IMessage, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Messaging/src/MessagingBase/Core/MessageChannelTemplate.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: DoSendAsync
    path: ../Steeltoe/src/Messaging/src/MessagingBase/Core/MessageChannelTemplate.cs
    startLine: 151
  assemblies:
  - Steeltoe.Messaging.MessagingBase
  namespace: Steeltoe.Messaging.Core
  syntax:
    content: protected override Task DoSendAsync(IMessageChannel channel, IMessage message, CancellationToken cancellationToken)
    parameters:
    - id: channel
      type: Steeltoe.Messaging.IMessageChannel
    - id: message
      type: Steeltoe.Messaging.IMessage
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
    content.vb: Protected Overrides Function DoSendAsync(channel As IMessageChannel, message As IMessage, cancellationToken As CancellationToken) As Task
  overridden: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate{Steeltoe.Messaging.IMessageChannel}.DoSendAsync(Steeltoe.Messaging.IMessageChannel,Steeltoe.Messaging.IMessage,System.Threading.CancellationToken)
  overload: Steeltoe.Messaging.Core.MessageChannelTemplate.DoSendAsync*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: Steeltoe.Messaging.Core.MessageChannelTemplate.DoSendAsync(Steeltoe.Messaging.IMessageChannel,Steeltoe.Messaging.IMessage,System.Int32,System.Threading.CancellationToken)
  commentId: M:Steeltoe.Messaging.Core.MessageChannelTemplate.DoSendAsync(Steeltoe.Messaging.IMessageChannel,Steeltoe.Messaging.IMessage,System.Int32,System.Threading.CancellationToken)
  id: DoSendAsync(Steeltoe.Messaging.IMessageChannel,Steeltoe.Messaging.IMessage,System.Int32,System.Threading.CancellationToken)
  parent: Steeltoe.Messaging.Core.MessageChannelTemplate
  langs:
  - csharp
  - vb
  name: DoSendAsync(IMessageChannel, IMessage, Int32, CancellationToken)
  nameWithType: MessageChannelTemplate.DoSendAsync(IMessageChannel, IMessage, Int32, CancellationToken)
  fullName: Steeltoe.Messaging.Core.MessageChannelTemplate.DoSendAsync(Steeltoe.Messaging.IMessageChannel, Steeltoe.Messaging.IMessage, System.Int32, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Messaging/src/MessagingBase/Core/MessageChannelTemplate.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: DoSendAsync
    path: ../Steeltoe/src/Messaging/src/MessagingBase/Core/MessageChannelTemplate.cs
    startLine: 156
  assemblies:
  - Steeltoe.Messaging.MessagingBase
  namespace: Steeltoe.Messaging.Core
  syntax:
    content: protected Task DoSendAsync(IMessageChannel channel, IMessage message, int timeout, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: channel
      type: Steeltoe.Messaging.IMessageChannel
    - id: message
      type: Steeltoe.Messaging.IMessage
    - id: timeout
      type: System.Int32
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
    content.vb: Protected Function DoSendAsync(channel As IMessageChannel, message As IMessage, timeout As Integer, cancellationToken As CancellationToken = Nothing) As Task
  overload: Steeltoe.Messaging.Core.MessageChannelTemplate.DoSendAsync*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Steeltoe.Messaging.Core.MessageChannelTemplate.DoSendInternalAsync(Steeltoe.Messaging.IMessageChannel,Steeltoe.Messaging.IMessage,System.Int32,System.Threading.CancellationToken)
  commentId: M:Steeltoe.Messaging.Core.MessageChannelTemplate.DoSendInternalAsync(Steeltoe.Messaging.IMessageChannel,Steeltoe.Messaging.IMessage,System.Int32,System.Threading.CancellationToken)
  id: DoSendInternalAsync(Steeltoe.Messaging.IMessageChannel,Steeltoe.Messaging.IMessage,System.Int32,System.Threading.CancellationToken)
  parent: Steeltoe.Messaging.Core.MessageChannelTemplate
  langs:
  - csharp
  - vb
  name: DoSendInternalAsync(IMessageChannel, IMessage, Int32, CancellationToken)
  nameWithType: MessageChannelTemplate.DoSendInternalAsync(IMessageChannel, IMessage, Int32, CancellationToken)
  fullName: Steeltoe.Messaging.Core.MessageChannelTemplate.DoSendInternalAsync(Steeltoe.Messaging.IMessageChannel, Steeltoe.Messaging.IMessage, System.Int32, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Messaging/src/MessagingBase/Core/MessageChannelTemplate.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: DoSendInternalAsync
    path: ../Steeltoe/src/Messaging/src/MessagingBase/Core/MessageChannelTemplate.cs
    startLine: 166
  assemblies:
  - Steeltoe.Messaging.MessagingBase
  namespace: Steeltoe.Messaging.Core
  syntax:
    content: protected Task DoSendInternalAsync(IMessageChannel channel, IMessage message, int timeout, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: channel
      type: Steeltoe.Messaging.IMessageChannel
    - id: message
      type: Steeltoe.Messaging.IMessage
    - id: timeout
      type: System.Int32
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
    content.vb: Protected Function DoSendInternalAsync(channel As IMessageChannel, message As IMessage, timeout As Integer, cancellationToken As CancellationToken = Nothing) As Task
  overload: Steeltoe.Messaging.Core.MessageChannelTemplate.DoSendInternalAsync*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Steeltoe.Messaging.Core.MessageChannelTemplate.DoReceive(Steeltoe.Messaging.IMessageChannel)
  commentId: M:Steeltoe.Messaging.Core.MessageChannelTemplate.DoReceive(Steeltoe.Messaging.IMessageChannel)
  id: DoReceive(Steeltoe.Messaging.IMessageChannel)
  parent: Steeltoe.Messaging.Core.MessageChannelTemplate
  langs:
  - csharp
  - vb
  name: DoReceive(IMessageChannel)
  nameWithType: MessageChannelTemplate.DoReceive(IMessageChannel)
  fullName: Steeltoe.Messaging.Core.MessageChannelTemplate.DoReceive(Steeltoe.Messaging.IMessageChannel)
  type: Method
  source:
    remote:
      path: src/Messaging/src/MessagingBase/Core/MessageChannelTemplate.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: DoReceive
    path: ../Steeltoe/src/Messaging/src/MessagingBase/Core/MessageChannelTemplate.cs
    startLine: 190
  assemblies:
  - Steeltoe.Messaging.MessagingBase
  namespace: Steeltoe.Messaging.Core
  syntax:
    content: protected override IMessage DoReceive(IMessageChannel channel)
    parameters:
    - id: channel
      type: Steeltoe.Messaging.IMessageChannel
    return:
      type: Steeltoe.Messaging.IMessage
    content.vb: Protected Overrides Function DoReceive(channel As IMessageChannel) As IMessage
  overridden: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate{Steeltoe.Messaging.IMessageChannel}.DoReceive(Steeltoe.Messaging.IMessageChannel)
  overload: Steeltoe.Messaging.Core.MessageChannelTemplate.DoReceive*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: Steeltoe.Messaging.Core.MessageChannelTemplate.DoReceive(Steeltoe.Messaging.IMessageChannel,System.Int32)
  commentId: M:Steeltoe.Messaging.Core.MessageChannelTemplate.DoReceive(Steeltoe.Messaging.IMessageChannel,System.Int32)
  id: DoReceive(Steeltoe.Messaging.IMessageChannel,System.Int32)
  parent: Steeltoe.Messaging.Core.MessageChannelTemplate
  langs:
  - csharp
  - vb
  name: DoReceive(IMessageChannel, Int32)
  nameWithType: MessageChannelTemplate.DoReceive(IMessageChannel, Int32)
  fullName: Steeltoe.Messaging.Core.MessageChannelTemplate.DoReceive(Steeltoe.Messaging.IMessageChannel, System.Int32)
  type: Method
  source:
    remote:
      path: src/Messaging/src/MessagingBase/Core/MessageChannelTemplate.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: DoReceive
    path: ../Steeltoe/src/Messaging/src/MessagingBase/Core/MessageChannelTemplate.cs
    startLine: 195
  assemblies:
  - Steeltoe.Messaging.MessagingBase
  namespace: Steeltoe.Messaging.Core
  syntax:
    content: protected IMessage DoReceive(IMessageChannel channel, int timeout)
    parameters:
    - id: channel
      type: Steeltoe.Messaging.IMessageChannel
    - id: timeout
      type: System.Int32
    return:
      type: Steeltoe.Messaging.IMessage
    content.vb: Protected Function DoReceive(channel As IMessageChannel, timeout As Integer) As IMessage
  overload: Steeltoe.Messaging.Core.MessageChannelTemplate.DoReceive*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Steeltoe.Messaging.Core.MessageChannelTemplate.DoReceiveAsync(Steeltoe.Messaging.IMessageChannel,System.Threading.CancellationToken)
  commentId: M:Steeltoe.Messaging.Core.MessageChannelTemplate.DoReceiveAsync(Steeltoe.Messaging.IMessageChannel,System.Threading.CancellationToken)
  id: DoReceiveAsync(Steeltoe.Messaging.IMessageChannel,System.Threading.CancellationToken)
  parent: Steeltoe.Messaging.Core.MessageChannelTemplate
  langs:
  - csharp
  - vb
  name: DoReceiveAsync(IMessageChannel, CancellationToken)
  nameWithType: MessageChannelTemplate.DoReceiveAsync(IMessageChannel, CancellationToken)
  fullName: Steeltoe.Messaging.Core.MessageChannelTemplate.DoReceiveAsync(Steeltoe.Messaging.IMessageChannel, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Messaging/src/MessagingBase/Core/MessageChannelTemplate.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: DoReceiveAsync
    path: ../Steeltoe/src/Messaging/src/MessagingBase/Core/MessageChannelTemplate.cs
    startLine: 217
  assemblies:
  - Steeltoe.Messaging.MessagingBase
  namespace: Steeltoe.Messaging.Core
  syntax:
    content: protected override Task<IMessage> DoReceiveAsync(IMessageChannel channel, CancellationToken cancellationToken)
    parameters:
    - id: channel
      type: Steeltoe.Messaging.IMessageChannel
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{Steeltoe.Messaging.IMessage}
    content.vb: Protected Overrides Function DoReceiveAsync(channel As IMessageChannel, cancellationToken As CancellationToken) As Task(Of IMessage)
  overridden: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate{Steeltoe.Messaging.IMessageChannel}.DoReceiveAsync(Steeltoe.Messaging.IMessageChannel,System.Threading.CancellationToken)
  overload: Steeltoe.Messaging.Core.MessageChannelTemplate.DoReceiveAsync*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: Steeltoe.Messaging.Core.MessageChannelTemplate.DoReceiveAsync(Steeltoe.Messaging.IMessageChannel,System.Int32,System.Threading.CancellationToken)
  commentId: M:Steeltoe.Messaging.Core.MessageChannelTemplate.DoReceiveAsync(Steeltoe.Messaging.IMessageChannel,System.Int32,System.Threading.CancellationToken)
  id: DoReceiveAsync(Steeltoe.Messaging.IMessageChannel,System.Int32,System.Threading.CancellationToken)
  parent: Steeltoe.Messaging.Core.MessageChannelTemplate
  langs:
  - csharp
  - vb
  name: DoReceiveAsync(IMessageChannel, Int32, CancellationToken)
  nameWithType: MessageChannelTemplate.DoReceiveAsync(IMessageChannel, Int32, CancellationToken)
  fullName: Steeltoe.Messaging.Core.MessageChannelTemplate.DoReceiveAsync(Steeltoe.Messaging.IMessageChannel, System.Int32, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Messaging/src/MessagingBase/Core/MessageChannelTemplate.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: DoReceiveAsync
    path: ../Steeltoe/src/Messaging/src/MessagingBase/Core/MessageChannelTemplate.cs
    startLine: 222
  assemblies:
  - Steeltoe.Messaging.MessagingBase
  namespace: Steeltoe.Messaging.Core
  syntax:
    content: protected Task<IMessage> DoReceiveAsync(IMessageChannel channel, int timeout, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: channel
      type: Steeltoe.Messaging.IMessageChannel
    - id: timeout
      type: System.Int32
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{Steeltoe.Messaging.IMessage}
    content.vb: Protected Function DoReceiveAsync(channel As IMessageChannel, timeout As Integer, cancellationToken As CancellationToken = Nothing) As Task(Of IMessage)
  overload: Steeltoe.Messaging.Core.MessageChannelTemplate.DoReceiveAsync*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Steeltoe.Messaging.Core.MessageChannelTemplate.DoReceiveInternalAsync(Steeltoe.Messaging.IMessageChannel,System.Int32,System.Threading.CancellationToken)
  commentId: M:Steeltoe.Messaging.Core.MessageChannelTemplate.DoReceiveInternalAsync(Steeltoe.Messaging.IMessageChannel,System.Int32,System.Threading.CancellationToken)
  id: DoReceiveInternalAsync(Steeltoe.Messaging.IMessageChannel,System.Int32,System.Threading.CancellationToken)
  parent: Steeltoe.Messaging.Core.MessageChannelTemplate
  langs:
  - csharp
  - vb
  name: DoReceiveInternalAsync(IMessageChannel, Int32, CancellationToken)
  nameWithType: MessageChannelTemplate.DoReceiveInternalAsync(IMessageChannel, Int32, CancellationToken)
  fullName: Steeltoe.Messaging.Core.MessageChannelTemplate.DoReceiveInternalAsync(Steeltoe.Messaging.IMessageChannel, System.Int32, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Messaging/src/MessagingBase/Core/MessageChannelTemplate.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: DoReceiveInternalAsync
    path: ../Steeltoe/src/Messaging/src/MessagingBase/Core/MessageChannelTemplate.cs
    startLine: 237
  assemblies:
  - Steeltoe.Messaging.MessagingBase
  namespace: Steeltoe.Messaging.Core
  syntax:
    content: protected Task<IMessage> DoReceiveInternalAsync(IMessageChannel channel, int timeout, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: channel
      type: Steeltoe.Messaging.IMessageChannel
    - id: timeout
      type: System.Int32
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{Steeltoe.Messaging.IMessage}
    content.vb: Protected Function DoReceiveInternalAsync(channel As IMessageChannel, timeout As Integer, cancellationToken As CancellationToken = Nothing) As Task(Of IMessage)
  overload: Steeltoe.Messaging.Core.MessageChannelTemplate.DoReceiveInternalAsync*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Steeltoe.Messaging.Core.MessageChannelTemplate.DoSendAndReceiveAsync(Steeltoe.Messaging.IMessageChannel,Steeltoe.Messaging.IMessage,System.Threading.CancellationToken)
  commentId: M:Steeltoe.Messaging.Core.MessageChannelTemplate.DoSendAndReceiveAsync(Steeltoe.Messaging.IMessageChannel,Steeltoe.Messaging.IMessage,System.Threading.CancellationToken)
  id: DoSendAndReceiveAsync(Steeltoe.Messaging.IMessageChannel,Steeltoe.Messaging.IMessage,System.Threading.CancellationToken)
  parent: Steeltoe.Messaging.Core.MessageChannelTemplate
  langs:
  - csharp
  - vb
  name: DoSendAndReceiveAsync(IMessageChannel, IMessage, CancellationToken)
  nameWithType: MessageChannelTemplate.DoSendAndReceiveAsync(IMessageChannel, IMessage, CancellationToken)
  fullName: Steeltoe.Messaging.Core.MessageChannelTemplate.DoSendAndReceiveAsync(Steeltoe.Messaging.IMessageChannel, Steeltoe.Messaging.IMessage, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Messaging/src/MessagingBase/Core/MessageChannelTemplate.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: DoSendAndReceiveAsync
    path: ../Steeltoe/src/Messaging/src/MessagingBase/Core/MessageChannelTemplate.cs
    startLine: 262
  assemblies:
  - Steeltoe.Messaging.MessagingBase
  namespace: Steeltoe.Messaging.Core
  syntax:
    content: protected override Task<IMessage> DoSendAndReceiveAsync(IMessageChannel channel, IMessage requestMessage, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: channel
      type: Steeltoe.Messaging.IMessageChannel
    - id: requestMessage
      type: Steeltoe.Messaging.IMessage
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{Steeltoe.Messaging.IMessage}
    content.vb: Protected Overrides Function DoSendAndReceiveAsync(channel As IMessageChannel, requestMessage As IMessage, cancellationToken As CancellationToken = Nothing) As Task(Of IMessage)
  overridden: Steeltoe.Messaging.Core.AbstractMessagingTemplate{Steeltoe.Messaging.IMessageChannel}.DoSendAndReceiveAsync(Steeltoe.Messaging.IMessageChannel,Steeltoe.Messaging.IMessage,System.Threading.CancellationToken)
  overload: Steeltoe.Messaging.Core.MessageChannelTemplate.DoSendAndReceiveAsync*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: Steeltoe.Messaging.Core.MessageChannelTemplate.DoSendAndReceiveInternalAsync(Steeltoe.Messaging.IMessageChannel,Steeltoe.Messaging.IMessage,System.Threading.CancellationToken)
  commentId: M:Steeltoe.Messaging.Core.MessageChannelTemplate.DoSendAndReceiveInternalAsync(Steeltoe.Messaging.IMessageChannel,Steeltoe.Messaging.IMessage,System.Threading.CancellationToken)
  id: DoSendAndReceiveInternalAsync(Steeltoe.Messaging.IMessageChannel,Steeltoe.Messaging.IMessage,System.Threading.CancellationToken)
  parent: Steeltoe.Messaging.Core.MessageChannelTemplate
  langs:
  - csharp
  - vb
  name: DoSendAndReceiveInternalAsync(IMessageChannel, IMessage, CancellationToken)
  nameWithType: MessageChannelTemplate.DoSendAndReceiveInternalAsync(IMessageChannel, IMessage, CancellationToken)
  fullName: Steeltoe.Messaging.Core.MessageChannelTemplate.DoSendAndReceiveInternalAsync(Steeltoe.Messaging.IMessageChannel, Steeltoe.Messaging.IMessage, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Messaging/src/MessagingBase/Core/MessageChannelTemplate.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: DoSendAndReceiveInternalAsync
    path: ../Steeltoe/src/Messaging/src/MessagingBase/Core/MessageChannelTemplate.cs
    startLine: 272
  assemblies:
  - Steeltoe.Messaging.MessagingBase
  namespace: Steeltoe.Messaging.Core
  syntax:
    content: protected Task<IMessage> DoSendAndReceiveInternalAsync(IMessageChannel channel, IMessage requestMessage, CancellationToken cancellationToken = default(CancellationToken))
    parameters:
    - id: channel
      type: Steeltoe.Messaging.IMessageChannel
    - id: requestMessage
      type: Steeltoe.Messaging.IMessage
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{Steeltoe.Messaging.IMessage}
    content.vb: Protected Function DoSendAndReceiveInternalAsync(channel As IMessageChannel, requestMessage As IMessage, cancellationToken As CancellationToken = Nothing) As Task(Of IMessage)
  overload: Steeltoe.Messaging.Core.MessageChannelTemplate.DoSendAndReceiveInternalAsync*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Steeltoe.Messaging.Core.MessageChannelTemplate.DoSendAndReceive(Steeltoe.Messaging.IMessageChannel,Steeltoe.Messaging.IMessage)
  commentId: M:Steeltoe.Messaging.Core.MessageChannelTemplate.DoSendAndReceive(Steeltoe.Messaging.IMessageChannel,Steeltoe.Messaging.IMessage)
  id: DoSendAndReceive(Steeltoe.Messaging.IMessageChannel,Steeltoe.Messaging.IMessage)
  parent: Steeltoe.Messaging.Core.MessageChannelTemplate
  langs:
  - csharp
  - vb
  name: DoSendAndReceive(IMessageChannel, IMessage)
  nameWithType: MessageChannelTemplate.DoSendAndReceive(IMessageChannel, IMessage)
  fullName: Steeltoe.Messaging.Core.MessageChannelTemplate.DoSendAndReceive(Steeltoe.Messaging.IMessageChannel, Steeltoe.Messaging.IMessage)
  type: Method
  source:
    remote:
      path: src/Messaging/src/MessagingBase/Core/MessageChannelTemplate.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: DoSendAndReceive
    path: ../Steeltoe/src/Messaging/src/MessagingBase/Core/MessageChannelTemplate.cs
    startLine: 308
  assemblies:
  - Steeltoe.Messaging.MessagingBase
  namespace: Steeltoe.Messaging.Core
  syntax:
    content: protected override IMessage DoSendAndReceive(IMessageChannel channel, IMessage requestMessage)
    parameters:
    - id: channel
      type: Steeltoe.Messaging.IMessageChannel
    - id: requestMessage
      type: Steeltoe.Messaging.IMessage
    return:
      type: Steeltoe.Messaging.IMessage
    content.vb: Protected Overrides Function DoSendAndReceive(channel As IMessageChannel, requestMessage As IMessage) As IMessage
  overridden: Steeltoe.Messaging.Core.AbstractMessagingTemplate{Steeltoe.Messaging.IMessageChannel}.DoSendAndReceive(Steeltoe.Messaging.IMessageChannel,Steeltoe.Messaging.IMessage)
  overload: Steeltoe.Messaging.Core.MessageChannelTemplate.DoSendAndReceive*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
references:
- uid: Steeltoe.Messaging.Core
  commentId: N:Steeltoe.Messaging.Core
  name: Steeltoe.Messaging.Core
  nameWithType: Steeltoe.Messaging.Core
  fullName: Steeltoe.Messaging.Core
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate{Steeltoe.Messaging.IMessageChannel}
  commentId: T:Steeltoe.Messaging.Core.AbstractMessageSendingTemplate{Steeltoe.Messaging.IMessageChannel}
  parent: Steeltoe.Messaging.Core
  definition: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1
  name: AbstractMessageSendingTemplate<IMessageChannel>
  nameWithType: AbstractMessageSendingTemplate<IMessageChannel>
  fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate<Steeltoe.Messaging.IMessageChannel>
  nameWithType.vb: AbstractMessageSendingTemplate(Of IMessageChannel)
  fullName.vb: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate(Of Steeltoe.Messaging.IMessageChannel)
  name.vb: AbstractMessageSendingTemplate(Of IMessageChannel)
  spec.csharp:
  - uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1
    name: AbstractMessageSendingTemplate
    nameWithType: AbstractMessageSendingTemplate
    fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate
  - name: <
    nameWithType: <
    fullName: <
  - uid: Steeltoe.Messaging.IMessageChannel
    name: IMessageChannel
    nameWithType: IMessageChannel
    fullName: Steeltoe.Messaging.IMessageChannel
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1
    name: AbstractMessageSendingTemplate
    nameWithType: AbstractMessageSendingTemplate
    fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Steeltoe.Messaging.IMessageChannel
    name: IMessageChannel
    nameWithType: IMessageChannel
    fullName: Steeltoe.Messaging.IMessageChannel
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate{Steeltoe.Messaging.IMessageChannel}
  commentId: T:Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate{Steeltoe.Messaging.IMessageChannel}
  parent: Steeltoe.Messaging.Core
  definition: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate`1
  name: AbstractMessageReceivingTemplate<IMessageChannel>
  nameWithType: AbstractMessageReceivingTemplate<IMessageChannel>
  fullName: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate<Steeltoe.Messaging.IMessageChannel>
  nameWithType.vb: AbstractMessageReceivingTemplate(Of IMessageChannel)
  fullName.vb: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate(Of Steeltoe.Messaging.IMessageChannel)
  name.vb: AbstractMessageReceivingTemplate(Of IMessageChannel)
  spec.csharp:
  - uid: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate`1
    name: AbstractMessageReceivingTemplate
    nameWithType: AbstractMessageReceivingTemplate
    fullName: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate
  - name: <
    nameWithType: <
    fullName: <
  - uid: Steeltoe.Messaging.IMessageChannel
    name: IMessageChannel
    nameWithType: IMessageChannel
    fullName: Steeltoe.Messaging.IMessageChannel
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate`1
    name: AbstractMessageReceivingTemplate
    nameWithType: AbstractMessageReceivingTemplate
    fullName: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Steeltoe.Messaging.IMessageChannel
    name: IMessageChannel
    nameWithType: IMessageChannel
    fullName: Steeltoe.Messaging.IMessageChannel
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Core.AbstractMessagingTemplate{Steeltoe.Messaging.IMessageChannel}
  commentId: T:Steeltoe.Messaging.Core.AbstractMessagingTemplate{Steeltoe.Messaging.IMessageChannel}
  parent: Steeltoe.Messaging.Core
  definition: Steeltoe.Messaging.Core.AbstractMessagingTemplate`1
  name: AbstractMessagingTemplate<IMessageChannel>
  nameWithType: AbstractMessagingTemplate<IMessageChannel>
  fullName: Steeltoe.Messaging.Core.AbstractMessagingTemplate<Steeltoe.Messaging.IMessageChannel>
  nameWithType.vb: AbstractMessagingTemplate(Of IMessageChannel)
  fullName.vb: Steeltoe.Messaging.Core.AbstractMessagingTemplate(Of Steeltoe.Messaging.IMessageChannel)
  name.vb: AbstractMessagingTemplate(Of IMessageChannel)
  spec.csharp:
  - uid: Steeltoe.Messaging.Core.AbstractMessagingTemplate`1
    name: AbstractMessagingTemplate
    nameWithType: AbstractMessagingTemplate
    fullName: Steeltoe.Messaging.Core.AbstractMessagingTemplate
  - name: <
    nameWithType: <
    fullName: <
  - uid: Steeltoe.Messaging.IMessageChannel
    name: IMessageChannel
    nameWithType: IMessageChannel
    fullName: Steeltoe.Messaging.IMessageChannel
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Steeltoe.Messaging.Core.AbstractMessagingTemplate`1
    name: AbstractMessagingTemplate
    nameWithType: AbstractMessagingTemplate
    fullName: Steeltoe.Messaging.Core.AbstractMessagingTemplate
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Steeltoe.Messaging.IMessageChannel
    name: IMessageChannel
    nameWithType: IMessageChannel
    fullName: Steeltoe.Messaging.IMessageChannel
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate{Steeltoe.Messaging.IMessageChannel}
  commentId: T:Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate{Steeltoe.Messaging.IMessageChannel}
  parent: Steeltoe.Messaging.Core
  definition: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate`1
  name: AbstractDestinationResolvingMessagingTemplate<IMessageChannel>
  nameWithType: AbstractDestinationResolvingMessagingTemplate<IMessageChannel>
  fullName: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate<Steeltoe.Messaging.IMessageChannel>
  nameWithType.vb: AbstractDestinationResolvingMessagingTemplate(Of IMessageChannel)
  fullName.vb: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate(Of Steeltoe.Messaging.IMessageChannel)
  name.vb: AbstractDestinationResolvingMessagingTemplate(Of IMessageChannel)
  spec.csharp:
  - uid: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate`1
    name: AbstractDestinationResolvingMessagingTemplate
    nameWithType: AbstractDestinationResolvingMessagingTemplate
    fullName: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate
  - name: <
    nameWithType: <
    fullName: <
  - uid: Steeltoe.Messaging.IMessageChannel
    name: IMessageChannel
    nameWithType: IMessageChannel
    fullName: Steeltoe.Messaging.IMessageChannel
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate`1
    name: AbstractDestinationResolvingMessagingTemplate
    nameWithType: AbstractDestinationResolvingMessagingTemplate
    fullName: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Steeltoe.Messaging.IMessageChannel
    name: IMessageChannel
    nameWithType: IMessageChannel
    fullName: Steeltoe.Messaging.IMessageChannel
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Core.IDestinationResolvingMessageSendingOperations{Steeltoe.Messaging.IMessageChannel}
  commentId: T:Steeltoe.Messaging.Core.IDestinationResolvingMessageSendingOperations{Steeltoe.Messaging.IMessageChannel}
  parent: Steeltoe.Messaging.Core
  definition: Steeltoe.Messaging.Core.IDestinationResolvingMessageSendingOperations`1
  name: IDestinationResolvingMessageSendingOperations<IMessageChannel>
  nameWithType: IDestinationResolvingMessageSendingOperations<IMessageChannel>
  fullName: Steeltoe.Messaging.Core.IDestinationResolvingMessageSendingOperations<Steeltoe.Messaging.IMessageChannel>
  nameWithType.vb: IDestinationResolvingMessageSendingOperations(Of IMessageChannel)
  fullName.vb: Steeltoe.Messaging.Core.IDestinationResolvingMessageSendingOperations(Of Steeltoe.Messaging.IMessageChannel)
  name.vb: IDestinationResolvingMessageSendingOperations(Of IMessageChannel)
  spec.csharp:
  - uid: Steeltoe.Messaging.Core.IDestinationResolvingMessageSendingOperations`1
    name: IDestinationResolvingMessageSendingOperations
    nameWithType: IDestinationResolvingMessageSendingOperations
    fullName: Steeltoe.Messaging.Core.IDestinationResolvingMessageSendingOperations
  - name: <
    nameWithType: <
    fullName: <
  - uid: Steeltoe.Messaging.IMessageChannel
    name: IMessageChannel
    nameWithType: IMessageChannel
    fullName: Steeltoe.Messaging.IMessageChannel
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Steeltoe.Messaging.Core.IDestinationResolvingMessageSendingOperations`1
    name: IDestinationResolvingMessageSendingOperations
    nameWithType: IDestinationResolvingMessageSendingOperations
    fullName: Steeltoe.Messaging.Core.IDestinationResolvingMessageSendingOperations
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Steeltoe.Messaging.IMessageChannel
    name: IMessageChannel
    nameWithType: IMessageChannel
    fullName: Steeltoe.Messaging.IMessageChannel
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Core.IMessageSendingOperations{Steeltoe.Messaging.IMessageChannel}
  commentId: T:Steeltoe.Messaging.Core.IMessageSendingOperations{Steeltoe.Messaging.IMessageChannel}
  parent: Steeltoe.Messaging.Core
  definition: Steeltoe.Messaging.Core.IMessageSendingOperations`1
  name: IMessageSendingOperations<IMessageChannel>
  nameWithType: IMessageSendingOperations<IMessageChannel>
  fullName: Steeltoe.Messaging.Core.IMessageSendingOperations<Steeltoe.Messaging.IMessageChannel>
  nameWithType.vb: IMessageSendingOperations(Of IMessageChannel)
  fullName.vb: Steeltoe.Messaging.Core.IMessageSendingOperations(Of Steeltoe.Messaging.IMessageChannel)
  name.vb: IMessageSendingOperations(Of IMessageChannel)
  spec.csharp:
  - uid: Steeltoe.Messaging.Core.IMessageSendingOperations`1
    name: IMessageSendingOperations
    nameWithType: IMessageSendingOperations
    fullName: Steeltoe.Messaging.Core.IMessageSendingOperations
  - name: <
    nameWithType: <
    fullName: <
  - uid: Steeltoe.Messaging.IMessageChannel
    name: IMessageChannel
    nameWithType: IMessageChannel
    fullName: Steeltoe.Messaging.IMessageChannel
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Steeltoe.Messaging.Core.IMessageSendingOperations`1
    name: IMessageSendingOperations
    nameWithType: IMessageSendingOperations
    fullName: Steeltoe.Messaging.Core.IMessageSendingOperations
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Steeltoe.Messaging.IMessageChannel
    name: IMessageChannel
    nameWithType: IMessageChannel
    fullName: Steeltoe.Messaging.IMessageChannel
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Core.IDestinationResolvingMessageReceivingOperations{Steeltoe.Messaging.IMessageChannel}
  commentId: T:Steeltoe.Messaging.Core.IDestinationResolvingMessageReceivingOperations{Steeltoe.Messaging.IMessageChannel}
  parent: Steeltoe.Messaging.Core
  definition: Steeltoe.Messaging.Core.IDestinationResolvingMessageReceivingOperations`1
  name: IDestinationResolvingMessageReceivingOperations<IMessageChannel>
  nameWithType: IDestinationResolvingMessageReceivingOperations<IMessageChannel>
  fullName: Steeltoe.Messaging.Core.IDestinationResolvingMessageReceivingOperations<Steeltoe.Messaging.IMessageChannel>
  nameWithType.vb: IDestinationResolvingMessageReceivingOperations(Of IMessageChannel)
  fullName.vb: Steeltoe.Messaging.Core.IDestinationResolvingMessageReceivingOperations(Of Steeltoe.Messaging.IMessageChannel)
  name.vb: IDestinationResolvingMessageReceivingOperations(Of IMessageChannel)
  spec.csharp:
  - uid: Steeltoe.Messaging.Core.IDestinationResolvingMessageReceivingOperations`1
    name: IDestinationResolvingMessageReceivingOperations
    nameWithType: IDestinationResolvingMessageReceivingOperations
    fullName: Steeltoe.Messaging.Core.IDestinationResolvingMessageReceivingOperations
  - name: <
    nameWithType: <
    fullName: <
  - uid: Steeltoe.Messaging.IMessageChannel
    name: IMessageChannel
    nameWithType: IMessageChannel
    fullName: Steeltoe.Messaging.IMessageChannel
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Steeltoe.Messaging.Core.IDestinationResolvingMessageReceivingOperations`1
    name: IDestinationResolvingMessageReceivingOperations
    nameWithType: IDestinationResolvingMessageReceivingOperations
    fullName: Steeltoe.Messaging.Core.IDestinationResolvingMessageReceivingOperations
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Steeltoe.Messaging.IMessageChannel
    name: IMessageChannel
    nameWithType: IMessageChannel
    fullName: Steeltoe.Messaging.IMessageChannel
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Core.IMessageReceivingOperations{Steeltoe.Messaging.IMessageChannel}
  commentId: T:Steeltoe.Messaging.Core.IMessageReceivingOperations{Steeltoe.Messaging.IMessageChannel}
  parent: Steeltoe.Messaging.Core
  definition: Steeltoe.Messaging.Core.IMessageReceivingOperations`1
  name: IMessageReceivingOperations<IMessageChannel>
  nameWithType: IMessageReceivingOperations<IMessageChannel>
  fullName: Steeltoe.Messaging.Core.IMessageReceivingOperations<Steeltoe.Messaging.IMessageChannel>
  nameWithType.vb: IMessageReceivingOperations(Of IMessageChannel)
  fullName.vb: Steeltoe.Messaging.Core.IMessageReceivingOperations(Of Steeltoe.Messaging.IMessageChannel)
  name.vb: IMessageReceivingOperations(Of IMessageChannel)
  spec.csharp:
  - uid: Steeltoe.Messaging.Core.IMessageReceivingOperations`1
    name: IMessageReceivingOperations
    nameWithType: IMessageReceivingOperations
    fullName: Steeltoe.Messaging.Core.IMessageReceivingOperations
  - name: <
    nameWithType: <
    fullName: <
  - uid: Steeltoe.Messaging.IMessageChannel
    name: IMessageChannel
    nameWithType: IMessageChannel
    fullName: Steeltoe.Messaging.IMessageChannel
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Steeltoe.Messaging.Core.IMessageReceivingOperations`1
    name: IMessageReceivingOperations
    nameWithType: IMessageReceivingOperations
    fullName: Steeltoe.Messaging.Core.IMessageReceivingOperations
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Steeltoe.Messaging.IMessageChannel
    name: IMessageChannel
    nameWithType: IMessageChannel
    fullName: Steeltoe.Messaging.IMessageChannel
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Core.IDestinationResolvingMessageRequestReplyOperations{Steeltoe.Messaging.IMessageChannel}
  commentId: T:Steeltoe.Messaging.Core.IDestinationResolvingMessageRequestReplyOperations{Steeltoe.Messaging.IMessageChannel}
  parent: Steeltoe.Messaging.Core
  definition: Steeltoe.Messaging.Core.IDestinationResolvingMessageRequestReplyOperations`1
  name: IDestinationResolvingMessageRequestReplyOperations<IMessageChannel>
  nameWithType: IDestinationResolvingMessageRequestReplyOperations<IMessageChannel>
  fullName: Steeltoe.Messaging.Core.IDestinationResolvingMessageRequestReplyOperations<Steeltoe.Messaging.IMessageChannel>
  nameWithType.vb: IDestinationResolvingMessageRequestReplyOperations(Of IMessageChannel)
  fullName.vb: Steeltoe.Messaging.Core.IDestinationResolvingMessageRequestReplyOperations(Of Steeltoe.Messaging.IMessageChannel)
  name.vb: IDestinationResolvingMessageRequestReplyOperations(Of IMessageChannel)
  spec.csharp:
  - uid: Steeltoe.Messaging.Core.IDestinationResolvingMessageRequestReplyOperations`1
    name: IDestinationResolvingMessageRequestReplyOperations
    nameWithType: IDestinationResolvingMessageRequestReplyOperations
    fullName: Steeltoe.Messaging.Core.IDestinationResolvingMessageRequestReplyOperations
  - name: <
    nameWithType: <
    fullName: <
  - uid: Steeltoe.Messaging.IMessageChannel
    name: IMessageChannel
    nameWithType: IMessageChannel
    fullName: Steeltoe.Messaging.IMessageChannel
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Steeltoe.Messaging.Core.IDestinationResolvingMessageRequestReplyOperations`1
    name: IDestinationResolvingMessageRequestReplyOperations
    nameWithType: IDestinationResolvingMessageRequestReplyOperations
    fullName: Steeltoe.Messaging.Core.IDestinationResolvingMessageRequestReplyOperations
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Steeltoe.Messaging.IMessageChannel
    name: IMessageChannel
    nameWithType: IMessageChannel
    fullName: Steeltoe.Messaging.IMessageChannel
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Core.IMessageRequestReplyOperations{Steeltoe.Messaging.IMessageChannel}
  commentId: T:Steeltoe.Messaging.Core.IMessageRequestReplyOperations{Steeltoe.Messaging.IMessageChannel}
  parent: Steeltoe.Messaging.Core
  definition: Steeltoe.Messaging.Core.IMessageRequestReplyOperations`1
  name: IMessageRequestReplyOperations<IMessageChannel>
  nameWithType: IMessageRequestReplyOperations<IMessageChannel>
  fullName: Steeltoe.Messaging.Core.IMessageRequestReplyOperations<Steeltoe.Messaging.IMessageChannel>
  nameWithType.vb: IMessageRequestReplyOperations(Of IMessageChannel)
  fullName.vb: Steeltoe.Messaging.Core.IMessageRequestReplyOperations(Of Steeltoe.Messaging.IMessageChannel)
  name.vb: IMessageRequestReplyOperations(Of IMessageChannel)
  spec.csharp:
  - uid: Steeltoe.Messaging.Core.IMessageRequestReplyOperations`1
    name: IMessageRequestReplyOperations
    nameWithType: IMessageRequestReplyOperations
    fullName: Steeltoe.Messaging.Core.IMessageRequestReplyOperations
  - name: <
    nameWithType: <
    fullName: <
  - uid: Steeltoe.Messaging.IMessageChannel
    name: IMessageChannel
    nameWithType: IMessageChannel
    fullName: Steeltoe.Messaging.IMessageChannel
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Steeltoe.Messaging.Core.IMessageRequestReplyOperations`1
    name: IMessageRequestReplyOperations
    nameWithType: IMessageRequestReplyOperations
    fullName: Steeltoe.Messaging.Core.IMessageRequestReplyOperations
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Steeltoe.Messaging.IMessageChannel
    name: IMessageChannel
    nameWithType: IMessageChannel
    fullName: Steeltoe.Messaging.IMessageChannel
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate{Steeltoe.Messaging.IMessageChannel}.ApplicationContext
  commentId: P:Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate{Steeltoe.Messaging.IMessageChannel}.ApplicationContext
  parent: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate{Steeltoe.Messaging.IMessageChannel}
  definition: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate`1.ApplicationContext
  name: ApplicationContext
  nameWithType: AbstractDestinationResolvingMessagingTemplate<IMessageChannel>.ApplicationContext
  fullName: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate<Steeltoe.Messaging.IMessageChannel>.ApplicationContext
  nameWithType.vb: AbstractDestinationResolvingMessagingTemplate(Of IMessageChannel).ApplicationContext
  fullName.vb: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate(Of Steeltoe.Messaging.IMessageChannel).ApplicationContext
- uid: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate{Steeltoe.Messaging.IMessageChannel}.DestinationResolver
  commentId: P:Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate{Steeltoe.Messaging.IMessageChannel}.DestinationResolver
  parent: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate{Steeltoe.Messaging.IMessageChannel}
  definition: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate`1.DestinationResolver
  name: DestinationResolver
  nameWithType: AbstractDestinationResolvingMessagingTemplate<IMessageChannel>.DestinationResolver
  fullName: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate<Steeltoe.Messaging.IMessageChannel>.DestinationResolver
  nameWithType.vb: AbstractDestinationResolvingMessagingTemplate(Of IMessageChannel).DestinationResolver
  fullName.vb: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate(Of Steeltoe.Messaging.IMessageChannel).DestinationResolver
- uid: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate{Steeltoe.Messaging.IMessageChannel}.ConvertAndSendAsync(System.String,System.Object,System.Threading.CancellationToken)
  commentId: M:Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate{Steeltoe.Messaging.IMessageChannel}.ConvertAndSendAsync(System.String,System.Object,System.Threading.CancellationToken)
  parent: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate{Steeltoe.Messaging.IMessageChannel}
  definition: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate`1.ConvertAndSendAsync(System.String,System.Object,System.Threading.CancellationToken)
  name: ConvertAndSendAsync(String, Object, CancellationToken)
  nameWithType: AbstractDestinationResolvingMessagingTemplate<IMessageChannel>.ConvertAndSendAsync(String, Object, CancellationToken)
  fullName: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate<Steeltoe.Messaging.IMessageChannel>.ConvertAndSendAsync(System.String, System.Object, System.Threading.CancellationToken)
  nameWithType.vb: AbstractDestinationResolvingMessagingTemplate(Of IMessageChannel).ConvertAndSendAsync(String, Object, CancellationToken)
  fullName.vb: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate(Of Steeltoe.Messaging.IMessageChannel).ConvertAndSendAsync(System.String, System.Object, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate`1.ConvertAndSendAsync(System.String,System.Object,System.Threading.CancellationToken)
    name: ConvertAndSendAsync
    nameWithType: AbstractDestinationResolvingMessagingTemplate<IMessageChannel>.ConvertAndSendAsync
    fullName: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate<Steeltoe.Messaging.IMessageChannel>.ConvertAndSendAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate`1.ConvertAndSendAsync(System.String,System.Object,System.Threading.CancellationToken)
    name: ConvertAndSendAsync
    nameWithType: AbstractDestinationResolvingMessagingTemplate(Of IMessageChannel).ConvertAndSendAsync
    fullName: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate(Of Steeltoe.Messaging.IMessageChannel).ConvertAndSendAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate{Steeltoe.Messaging.IMessageChannel}.ConvertAndSendAsync(System.String,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object},System.Threading.CancellationToken)
  commentId: M:Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate{Steeltoe.Messaging.IMessageChannel}.ConvertAndSendAsync(System.String,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object},System.Threading.CancellationToken)
  parent: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate{Steeltoe.Messaging.IMessageChannel}
  definition: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate`1.ConvertAndSendAsync(System.String,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object},System.Threading.CancellationToken)
  name: ConvertAndSendAsync(String, Object, IDictionary<String, Object>, CancellationToken)
  nameWithType: AbstractDestinationResolvingMessagingTemplate<IMessageChannel>.ConvertAndSendAsync(String, Object, IDictionary<String, Object>, CancellationToken)
  fullName: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate<Steeltoe.Messaging.IMessageChannel>.ConvertAndSendAsync(System.String, System.Object, System.Collections.Generic.IDictionary<System.String, System.Object>, System.Threading.CancellationToken)
  nameWithType.vb: AbstractDestinationResolvingMessagingTemplate(Of IMessageChannel).ConvertAndSendAsync(String, Object, IDictionary(Of String, Object), CancellationToken)
  fullName.vb: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate(Of Steeltoe.Messaging.IMessageChannel).ConvertAndSendAsync(System.String, System.Object, System.Collections.Generic.IDictionary(Of System.String, System.Object), System.Threading.CancellationToken)
  name.vb: ConvertAndSendAsync(String, Object, IDictionary(Of String, Object), CancellationToken)
  spec.csharp:
  - uid: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate`1.ConvertAndSendAsync(System.String,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object},System.Threading.CancellationToken)
    name: ConvertAndSendAsync
    nameWithType: AbstractDestinationResolvingMessagingTemplate<IMessageChannel>.ConvertAndSendAsync
    fullName: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate<Steeltoe.Messaging.IMessageChannel>.ConvertAndSendAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate`1.ConvertAndSendAsync(System.String,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object},System.Threading.CancellationToken)
    name: ConvertAndSendAsync
    nameWithType: AbstractDestinationResolvingMessagingTemplate(Of IMessageChannel).ConvertAndSendAsync
    fullName: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate(Of Steeltoe.Messaging.IMessageChannel).ConvertAndSendAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate{Steeltoe.Messaging.IMessageChannel}.ConvertAndSendAsync(System.String,System.Object,Steeltoe.Messaging.Core.IMessagePostProcessor,System.Threading.CancellationToken)
  commentId: M:Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate{Steeltoe.Messaging.IMessageChannel}.ConvertAndSendAsync(System.String,System.Object,Steeltoe.Messaging.Core.IMessagePostProcessor,System.Threading.CancellationToken)
  parent: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate{Steeltoe.Messaging.IMessageChannel}
  definition: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate`1.ConvertAndSendAsync(System.String,System.Object,Steeltoe.Messaging.Core.IMessagePostProcessor,System.Threading.CancellationToken)
  name: ConvertAndSendAsync(String, Object, IMessagePostProcessor, CancellationToken)
  nameWithType: AbstractDestinationResolvingMessagingTemplate<IMessageChannel>.ConvertAndSendAsync(String, Object, IMessagePostProcessor, CancellationToken)
  fullName: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate<Steeltoe.Messaging.IMessageChannel>.ConvertAndSendAsync(System.String, System.Object, Steeltoe.Messaging.Core.IMessagePostProcessor, System.Threading.CancellationToken)
  nameWithType.vb: AbstractDestinationResolvingMessagingTemplate(Of IMessageChannel).ConvertAndSendAsync(String, Object, IMessagePostProcessor, CancellationToken)
  fullName.vb: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate(Of Steeltoe.Messaging.IMessageChannel).ConvertAndSendAsync(System.String, System.Object, Steeltoe.Messaging.Core.IMessagePostProcessor, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate`1.ConvertAndSendAsync(System.String,System.Object,Steeltoe.Messaging.Core.IMessagePostProcessor,System.Threading.CancellationToken)
    name: ConvertAndSendAsync
    nameWithType: AbstractDestinationResolvingMessagingTemplate<IMessageChannel>.ConvertAndSendAsync
    fullName: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate<Steeltoe.Messaging.IMessageChannel>.ConvertAndSendAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.Core.IMessagePostProcessor
    name: IMessagePostProcessor
    nameWithType: IMessagePostProcessor
    fullName: Steeltoe.Messaging.Core.IMessagePostProcessor
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate`1.ConvertAndSendAsync(System.String,System.Object,Steeltoe.Messaging.Core.IMessagePostProcessor,System.Threading.CancellationToken)
    name: ConvertAndSendAsync
    nameWithType: AbstractDestinationResolvingMessagingTemplate(Of IMessageChannel).ConvertAndSendAsync
    fullName: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate(Of Steeltoe.Messaging.IMessageChannel).ConvertAndSendAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.Core.IMessagePostProcessor
    name: IMessagePostProcessor
    nameWithType: IMessagePostProcessor
    fullName: Steeltoe.Messaging.Core.IMessagePostProcessor
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate{Steeltoe.Messaging.IMessageChannel}.ConvertAndSendAsync(System.String,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object},Steeltoe.Messaging.Core.IMessagePostProcessor,System.Threading.CancellationToken)
  commentId: M:Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate{Steeltoe.Messaging.IMessageChannel}.ConvertAndSendAsync(System.String,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object},Steeltoe.Messaging.Core.IMessagePostProcessor,System.Threading.CancellationToken)
  parent: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate{Steeltoe.Messaging.IMessageChannel}
  definition: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate`1.ConvertAndSendAsync(System.String,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object},Steeltoe.Messaging.Core.IMessagePostProcessor,System.Threading.CancellationToken)
  name: ConvertAndSendAsync(String, Object, IDictionary<String, Object>, IMessagePostProcessor, CancellationToken)
  nameWithType: AbstractDestinationResolvingMessagingTemplate<IMessageChannel>.ConvertAndSendAsync(String, Object, IDictionary<String, Object>, IMessagePostProcessor, CancellationToken)
  fullName: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate<Steeltoe.Messaging.IMessageChannel>.ConvertAndSendAsync(System.String, System.Object, System.Collections.Generic.IDictionary<System.String, System.Object>, Steeltoe.Messaging.Core.IMessagePostProcessor, System.Threading.CancellationToken)
  nameWithType.vb: AbstractDestinationResolvingMessagingTemplate(Of IMessageChannel).ConvertAndSendAsync(String, Object, IDictionary(Of String, Object), IMessagePostProcessor, CancellationToken)
  fullName.vb: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate(Of Steeltoe.Messaging.IMessageChannel).ConvertAndSendAsync(System.String, System.Object, System.Collections.Generic.IDictionary(Of System.String, System.Object), Steeltoe.Messaging.Core.IMessagePostProcessor, System.Threading.CancellationToken)
  name.vb: ConvertAndSendAsync(String, Object, IDictionary(Of String, Object), IMessagePostProcessor, CancellationToken)
  spec.csharp:
  - uid: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate`1.ConvertAndSendAsync(System.String,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object},Steeltoe.Messaging.Core.IMessagePostProcessor,System.Threading.CancellationToken)
    name: ConvertAndSendAsync
    nameWithType: AbstractDestinationResolvingMessagingTemplate<IMessageChannel>.ConvertAndSendAsync
    fullName: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate<Steeltoe.Messaging.IMessageChannel>.ConvertAndSendAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.Core.IMessagePostProcessor
    name: IMessagePostProcessor
    nameWithType: IMessagePostProcessor
    fullName: Steeltoe.Messaging.Core.IMessagePostProcessor
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate`1.ConvertAndSendAsync(System.String,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object},Steeltoe.Messaging.Core.IMessagePostProcessor,System.Threading.CancellationToken)
    name: ConvertAndSendAsync
    nameWithType: AbstractDestinationResolvingMessagingTemplate(Of IMessageChannel).ConvertAndSendAsync
    fullName: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate(Of Steeltoe.Messaging.IMessageChannel).ConvertAndSendAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.Core.IMessagePostProcessor
    name: IMessagePostProcessor
    nameWithType: IMessagePostProcessor
    fullName: Steeltoe.Messaging.Core.IMessagePostProcessor
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate{Steeltoe.Messaging.IMessageChannel}.ConvertSendAndReceiveAsync``1(System.String,System.Object,System.Threading.CancellationToken)
  commentId: M:Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate{Steeltoe.Messaging.IMessageChannel}.ConvertSendAndReceiveAsync``1(System.String,System.Object,System.Threading.CancellationToken)
  parent: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate{Steeltoe.Messaging.IMessageChannel}
  definition: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate`1.ConvertSendAndReceiveAsync``1(System.String,System.Object,System.Threading.CancellationToken)
  name: ConvertSendAndReceiveAsync<T>(String, Object, CancellationToken)
  nameWithType: AbstractDestinationResolvingMessagingTemplate<IMessageChannel>.ConvertSendAndReceiveAsync<T>(String, Object, CancellationToken)
  fullName: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate<Steeltoe.Messaging.IMessageChannel>.ConvertSendAndReceiveAsync<T>(System.String, System.Object, System.Threading.CancellationToken)
  nameWithType.vb: AbstractDestinationResolvingMessagingTemplate(Of IMessageChannel).ConvertSendAndReceiveAsync(Of T)(String, Object, CancellationToken)
  fullName.vb: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate(Of Steeltoe.Messaging.IMessageChannel).ConvertSendAndReceiveAsync(Of T)(System.String, System.Object, System.Threading.CancellationToken)
  name.vb: ConvertSendAndReceiveAsync(Of T)(String, Object, CancellationToken)
  spec.csharp:
  - uid: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate`1.ConvertSendAndReceiveAsync``1(System.String,System.Object,System.Threading.CancellationToken)
    name: ConvertSendAndReceiveAsync<T>
    nameWithType: AbstractDestinationResolvingMessagingTemplate<IMessageChannel>.ConvertSendAndReceiveAsync<T>
    fullName: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate<Steeltoe.Messaging.IMessageChannel>.ConvertSendAndReceiveAsync<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate`1.ConvertSendAndReceiveAsync``1(System.String,System.Object,System.Threading.CancellationToken)
    name: ConvertSendAndReceiveAsync(Of T)
    nameWithType: AbstractDestinationResolvingMessagingTemplate(Of IMessageChannel).ConvertSendAndReceiveAsync(Of T)
    fullName: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate(Of Steeltoe.Messaging.IMessageChannel).ConvertSendAndReceiveAsync(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate{Steeltoe.Messaging.IMessageChannel}.ConvertSendAndReceiveAsync``1(System.String,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object},System.Threading.CancellationToken)
  commentId: M:Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate{Steeltoe.Messaging.IMessageChannel}.ConvertSendAndReceiveAsync``1(System.String,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object},System.Threading.CancellationToken)
  parent: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate{Steeltoe.Messaging.IMessageChannel}
  definition: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate`1.ConvertSendAndReceiveAsync``1(System.String,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object},System.Threading.CancellationToken)
  name: ConvertSendAndReceiveAsync<T>(String, Object, IDictionary<String, Object>, CancellationToken)
  nameWithType: AbstractDestinationResolvingMessagingTemplate<IMessageChannel>.ConvertSendAndReceiveAsync<T>(String, Object, IDictionary<String, Object>, CancellationToken)
  fullName: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate<Steeltoe.Messaging.IMessageChannel>.ConvertSendAndReceiveAsync<T>(System.String, System.Object, System.Collections.Generic.IDictionary<System.String, System.Object>, System.Threading.CancellationToken)
  nameWithType.vb: AbstractDestinationResolvingMessagingTemplate(Of IMessageChannel).ConvertSendAndReceiveAsync(Of T)(String, Object, IDictionary(Of String, Object), CancellationToken)
  fullName.vb: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate(Of Steeltoe.Messaging.IMessageChannel).ConvertSendAndReceiveAsync(Of T)(System.String, System.Object, System.Collections.Generic.IDictionary(Of System.String, System.Object), System.Threading.CancellationToken)
  name.vb: ConvertSendAndReceiveAsync(Of T)(String, Object, IDictionary(Of String, Object), CancellationToken)
  spec.csharp:
  - uid: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate`1.ConvertSendAndReceiveAsync``1(System.String,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object},System.Threading.CancellationToken)
    name: ConvertSendAndReceiveAsync<T>
    nameWithType: AbstractDestinationResolvingMessagingTemplate<IMessageChannel>.ConvertSendAndReceiveAsync<T>
    fullName: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate<Steeltoe.Messaging.IMessageChannel>.ConvertSendAndReceiveAsync<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate`1.ConvertSendAndReceiveAsync``1(System.String,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object},System.Threading.CancellationToken)
    name: ConvertSendAndReceiveAsync(Of T)
    nameWithType: AbstractDestinationResolvingMessagingTemplate(Of IMessageChannel).ConvertSendAndReceiveAsync(Of T)
    fullName: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate(Of Steeltoe.Messaging.IMessageChannel).ConvertSendAndReceiveAsync(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate{Steeltoe.Messaging.IMessageChannel}.ConvertSendAndReceiveAsync``1(System.String,System.Object,Steeltoe.Messaging.Core.IMessagePostProcessor,System.Threading.CancellationToken)
  commentId: M:Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate{Steeltoe.Messaging.IMessageChannel}.ConvertSendAndReceiveAsync``1(System.String,System.Object,Steeltoe.Messaging.Core.IMessagePostProcessor,System.Threading.CancellationToken)
  parent: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate{Steeltoe.Messaging.IMessageChannel}
  definition: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate`1.ConvertSendAndReceiveAsync``1(System.String,System.Object,Steeltoe.Messaging.Core.IMessagePostProcessor,System.Threading.CancellationToken)
  name: ConvertSendAndReceiveAsync<T>(String, Object, IMessagePostProcessor, CancellationToken)
  nameWithType: AbstractDestinationResolvingMessagingTemplate<IMessageChannel>.ConvertSendAndReceiveAsync<T>(String, Object, IMessagePostProcessor, CancellationToken)
  fullName: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate<Steeltoe.Messaging.IMessageChannel>.ConvertSendAndReceiveAsync<T>(System.String, System.Object, Steeltoe.Messaging.Core.IMessagePostProcessor, System.Threading.CancellationToken)
  nameWithType.vb: AbstractDestinationResolvingMessagingTemplate(Of IMessageChannel).ConvertSendAndReceiveAsync(Of T)(String, Object, IMessagePostProcessor, CancellationToken)
  fullName.vb: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate(Of Steeltoe.Messaging.IMessageChannel).ConvertSendAndReceiveAsync(Of T)(System.String, System.Object, Steeltoe.Messaging.Core.IMessagePostProcessor, System.Threading.CancellationToken)
  name.vb: ConvertSendAndReceiveAsync(Of T)(String, Object, IMessagePostProcessor, CancellationToken)
  spec.csharp:
  - uid: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate`1.ConvertSendAndReceiveAsync``1(System.String,System.Object,Steeltoe.Messaging.Core.IMessagePostProcessor,System.Threading.CancellationToken)
    name: ConvertSendAndReceiveAsync<T>
    nameWithType: AbstractDestinationResolvingMessagingTemplate<IMessageChannel>.ConvertSendAndReceiveAsync<T>
    fullName: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate<Steeltoe.Messaging.IMessageChannel>.ConvertSendAndReceiveAsync<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.Core.IMessagePostProcessor
    name: IMessagePostProcessor
    nameWithType: IMessagePostProcessor
    fullName: Steeltoe.Messaging.Core.IMessagePostProcessor
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate`1.ConvertSendAndReceiveAsync``1(System.String,System.Object,Steeltoe.Messaging.Core.IMessagePostProcessor,System.Threading.CancellationToken)
    name: ConvertSendAndReceiveAsync(Of T)
    nameWithType: AbstractDestinationResolvingMessagingTemplate(Of IMessageChannel).ConvertSendAndReceiveAsync(Of T)
    fullName: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate(Of Steeltoe.Messaging.IMessageChannel).ConvertSendAndReceiveAsync(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.Core.IMessagePostProcessor
    name: IMessagePostProcessor
    nameWithType: IMessagePostProcessor
    fullName: Steeltoe.Messaging.Core.IMessagePostProcessor
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate{Steeltoe.Messaging.IMessageChannel}.ConvertSendAndReceiveAsync``1(System.String,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object},Steeltoe.Messaging.Core.IMessagePostProcessor,System.Threading.CancellationToken)
  commentId: M:Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate{Steeltoe.Messaging.IMessageChannel}.ConvertSendAndReceiveAsync``1(System.String,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object},Steeltoe.Messaging.Core.IMessagePostProcessor,System.Threading.CancellationToken)
  parent: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate{Steeltoe.Messaging.IMessageChannel}
  definition: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate`1.ConvertSendAndReceiveAsync``1(System.String,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object},Steeltoe.Messaging.Core.IMessagePostProcessor,System.Threading.CancellationToken)
  name: ConvertSendAndReceiveAsync<T>(String, Object, IDictionary<String, Object>, IMessagePostProcessor, CancellationToken)
  nameWithType: AbstractDestinationResolvingMessagingTemplate<IMessageChannel>.ConvertSendAndReceiveAsync<T>(String, Object, IDictionary<String, Object>, IMessagePostProcessor, CancellationToken)
  fullName: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate<Steeltoe.Messaging.IMessageChannel>.ConvertSendAndReceiveAsync<T>(System.String, System.Object, System.Collections.Generic.IDictionary<System.String, System.Object>, Steeltoe.Messaging.Core.IMessagePostProcessor, System.Threading.CancellationToken)
  nameWithType.vb: AbstractDestinationResolvingMessagingTemplate(Of IMessageChannel).ConvertSendAndReceiveAsync(Of T)(String, Object, IDictionary(Of String, Object), IMessagePostProcessor, CancellationToken)
  fullName.vb: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate(Of Steeltoe.Messaging.IMessageChannel).ConvertSendAndReceiveAsync(Of T)(System.String, System.Object, System.Collections.Generic.IDictionary(Of System.String, System.Object), Steeltoe.Messaging.Core.IMessagePostProcessor, System.Threading.CancellationToken)
  name.vb: ConvertSendAndReceiveAsync(Of T)(String, Object, IDictionary(Of String, Object), IMessagePostProcessor, CancellationToken)
  spec.csharp:
  - uid: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate`1.ConvertSendAndReceiveAsync``1(System.String,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object},Steeltoe.Messaging.Core.IMessagePostProcessor,System.Threading.CancellationToken)
    name: ConvertSendAndReceiveAsync<T>
    nameWithType: AbstractDestinationResolvingMessagingTemplate<IMessageChannel>.ConvertSendAndReceiveAsync<T>
    fullName: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate<Steeltoe.Messaging.IMessageChannel>.ConvertSendAndReceiveAsync<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.Core.IMessagePostProcessor
    name: IMessagePostProcessor
    nameWithType: IMessagePostProcessor
    fullName: Steeltoe.Messaging.Core.IMessagePostProcessor
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate`1.ConvertSendAndReceiveAsync``1(System.String,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object},Steeltoe.Messaging.Core.IMessagePostProcessor,System.Threading.CancellationToken)
    name: ConvertSendAndReceiveAsync(Of T)
    nameWithType: AbstractDestinationResolvingMessagingTemplate(Of IMessageChannel).ConvertSendAndReceiveAsync(Of T)
    fullName: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate(Of Steeltoe.Messaging.IMessageChannel).ConvertSendAndReceiveAsync(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.Core.IMessagePostProcessor
    name: IMessagePostProcessor
    nameWithType: IMessagePostProcessor
    fullName: Steeltoe.Messaging.Core.IMessagePostProcessor
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate{Steeltoe.Messaging.IMessageChannel}.ReceiveAsync(System.String,System.Threading.CancellationToken)
  commentId: M:Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate{Steeltoe.Messaging.IMessageChannel}.ReceiveAsync(System.String,System.Threading.CancellationToken)
  parent: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate{Steeltoe.Messaging.IMessageChannel}
  definition: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate`1.ReceiveAsync(System.String,System.Threading.CancellationToken)
  name: ReceiveAsync(String, CancellationToken)
  nameWithType: AbstractDestinationResolvingMessagingTemplate<IMessageChannel>.ReceiveAsync(String, CancellationToken)
  fullName: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate<Steeltoe.Messaging.IMessageChannel>.ReceiveAsync(System.String, System.Threading.CancellationToken)
  nameWithType.vb: AbstractDestinationResolvingMessagingTemplate(Of IMessageChannel).ReceiveAsync(String, CancellationToken)
  fullName.vb: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate(Of Steeltoe.Messaging.IMessageChannel).ReceiveAsync(System.String, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate`1.ReceiveAsync(System.String,System.Threading.CancellationToken)
    name: ReceiveAsync
    nameWithType: AbstractDestinationResolvingMessagingTemplate<IMessageChannel>.ReceiveAsync
    fullName: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate<Steeltoe.Messaging.IMessageChannel>.ReceiveAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate`1.ReceiveAsync(System.String,System.Threading.CancellationToken)
    name: ReceiveAsync
    nameWithType: AbstractDestinationResolvingMessagingTemplate(Of IMessageChannel).ReceiveAsync
    fullName: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate(Of Steeltoe.Messaging.IMessageChannel).ReceiveAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate{Steeltoe.Messaging.IMessageChannel}.ReceiveAndConvertAsync``1(System.String,System.Threading.CancellationToken)
  commentId: M:Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate{Steeltoe.Messaging.IMessageChannel}.ReceiveAndConvertAsync``1(System.String,System.Threading.CancellationToken)
  parent: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate{Steeltoe.Messaging.IMessageChannel}
  definition: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate`1.ReceiveAndConvertAsync``1(System.String,System.Threading.CancellationToken)
  name: ReceiveAndConvertAsync<T>(String, CancellationToken)
  nameWithType: AbstractDestinationResolvingMessagingTemplate<IMessageChannel>.ReceiveAndConvertAsync<T>(String, CancellationToken)
  fullName: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate<Steeltoe.Messaging.IMessageChannel>.ReceiveAndConvertAsync<T>(System.String, System.Threading.CancellationToken)
  nameWithType.vb: AbstractDestinationResolvingMessagingTemplate(Of IMessageChannel).ReceiveAndConvertAsync(Of T)(String, CancellationToken)
  fullName.vb: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate(Of Steeltoe.Messaging.IMessageChannel).ReceiveAndConvertAsync(Of T)(System.String, System.Threading.CancellationToken)
  name.vb: ReceiveAndConvertAsync(Of T)(String, CancellationToken)
  spec.csharp:
  - uid: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate`1.ReceiveAndConvertAsync``1(System.String,System.Threading.CancellationToken)
    name: ReceiveAndConvertAsync<T>
    nameWithType: AbstractDestinationResolvingMessagingTemplate<IMessageChannel>.ReceiveAndConvertAsync<T>
    fullName: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate<Steeltoe.Messaging.IMessageChannel>.ReceiveAndConvertAsync<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate`1.ReceiveAndConvertAsync``1(System.String,System.Threading.CancellationToken)
    name: ReceiveAndConvertAsync(Of T)
    nameWithType: AbstractDestinationResolvingMessagingTemplate(Of IMessageChannel).ReceiveAndConvertAsync(Of T)
    fullName: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate(Of Steeltoe.Messaging.IMessageChannel).ReceiveAndConvertAsync(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate{Steeltoe.Messaging.IMessageChannel}.SendAsync(System.String,Steeltoe.Messaging.IMessage,System.Threading.CancellationToken)
  commentId: M:Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate{Steeltoe.Messaging.IMessageChannel}.SendAsync(System.String,Steeltoe.Messaging.IMessage,System.Threading.CancellationToken)
  parent: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate{Steeltoe.Messaging.IMessageChannel}
  definition: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate`1.SendAsync(System.String,Steeltoe.Messaging.IMessage,System.Threading.CancellationToken)
  name: SendAsync(String, IMessage, CancellationToken)
  nameWithType: AbstractDestinationResolvingMessagingTemplate<IMessageChannel>.SendAsync(String, IMessage, CancellationToken)
  fullName: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate<Steeltoe.Messaging.IMessageChannel>.SendAsync(System.String, Steeltoe.Messaging.IMessage, System.Threading.CancellationToken)
  nameWithType.vb: AbstractDestinationResolvingMessagingTemplate(Of IMessageChannel).SendAsync(String, IMessage, CancellationToken)
  fullName.vb: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate(Of Steeltoe.Messaging.IMessageChannel).SendAsync(System.String, Steeltoe.Messaging.IMessage, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate`1.SendAsync(System.String,Steeltoe.Messaging.IMessage,System.Threading.CancellationToken)
    name: SendAsync
    nameWithType: AbstractDestinationResolvingMessagingTemplate<IMessageChannel>.SendAsync
    fullName: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate<Steeltoe.Messaging.IMessageChannel>.SendAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate`1.SendAsync(System.String,Steeltoe.Messaging.IMessage,System.Threading.CancellationToken)
    name: SendAsync
    nameWithType: AbstractDestinationResolvingMessagingTemplate(Of IMessageChannel).SendAsync
    fullName: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate(Of Steeltoe.Messaging.IMessageChannel).SendAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate{Steeltoe.Messaging.IMessageChannel}.SendAndReceiveAsync(System.String,Steeltoe.Messaging.IMessage,System.Threading.CancellationToken)
  commentId: M:Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate{Steeltoe.Messaging.IMessageChannel}.SendAndReceiveAsync(System.String,Steeltoe.Messaging.IMessage,System.Threading.CancellationToken)
  parent: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate{Steeltoe.Messaging.IMessageChannel}
  definition: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate`1.SendAndReceiveAsync(System.String,Steeltoe.Messaging.IMessage,System.Threading.CancellationToken)
  name: SendAndReceiveAsync(String, IMessage, CancellationToken)
  nameWithType: AbstractDestinationResolvingMessagingTemplate<IMessageChannel>.SendAndReceiveAsync(String, IMessage, CancellationToken)
  fullName: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate<Steeltoe.Messaging.IMessageChannel>.SendAndReceiveAsync(System.String, Steeltoe.Messaging.IMessage, System.Threading.CancellationToken)
  nameWithType.vb: AbstractDestinationResolvingMessagingTemplate(Of IMessageChannel).SendAndReceiveAsync(String, IMessage, CancellationToken)
  fullName.vb: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate(Of Steeltoe.Messaging.IMessageChannel).SendAndReceiveAsync(System.String, Steeltoe.Messaging.IMessage, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate`1.SendAndReceiveAsync(System.String,Steeltoe.Messaging.IMessage,System.Threading.CancellationToken)
    name: SendAndReceiveAsync
    nameWithType: AbstractDestinationResolvingMessagingTemplate<IMessageChannel>.SendAndReceiveAsync
    fullName: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate<Steeltoe.Messaging.IMessageChannel>.SendAndReceiveAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate`1.SendAndReceiveAsync(System.String,Steeltoe.Messaging.IMessage,System.Threading.CancellationToken)
    name: SendAndReceiveAsync
    nameWithType: AbstractDestinationResolvingMessagingTemplate(Of IMessageChannel).SendAndReceiveAsync
    fullName: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate(Of Steeltoe.Messaging.IMessageChannel).SendAndReceiveAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate{Steeltoe.Messaging.IMessageChannel}.ConvertAndSend(System.String,System.Object)
  commentId: M:Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate{Steeltoe.Messaging.IMessageChannel}.ConvertAndSend(System.String,System.Object)
  parent: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate{Steeltoe.Messaging.IMessageChannel}
  definition: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate`1.ConvertAndSend(System.String,System.Object)
  name: ConvertAndSend(String, Object)
  nameWithType: AbstractDestinationResolvingMessagingTemplate<IMessageChannel>.ConvertAndSend(String, Object)
  fullName: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate<Steeltoe.Messaging.IMessageChannel>.ConvertAndSend(System.String, System.Object)
  nameWithType.vb: AbstractDestinationResolvingMessagingTemplate(Of IMessageChannel).ConvertAndSend(String, Object)
  fullName.vb: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate(Of Steeltoe.Messaging.IMessageChannel).ConvertAndSend(System.String, System.Object)
  spec.csharp:
  - uid: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate`1.ConvertAndSend(System.String,System.Object)
    name: ConvertAndSend
    nameWithType: AbstractDestinationResolvingMessagingTemplate<IMessageChannel>.ConvertAndSend
    fullName: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate<Steeltoe.Messaging.IMessageChannel>.ConvertAndSend
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate`1.ConvertAndSend(System.String,System.Object)
    name: ConvertAndSend
    nameWithType: AbstractDestinationResolvingMessagingTemplate(Of IMessageChannel).ConvertAndSend
    fullName: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate(Of Steeltoe.Messaging.IMessageChannel).ConvertAndSend
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate{Steeltoe.Messaging.IMessageChannel}.ConvertAndSend(System.String,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object})
  commentId: M:Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate{Steeltoe.Messaging.IMessageChannel}.ConvertAndSend(System.String,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object})
  parent: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate{Steeltoe.Messaging.IMessageChannel}
  definition: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate`1.ConvertAndSend(System.String,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object})
  name: ConvertAndSend(String, Object, IDictionary<String, Object>)
  nameWithType: AbstractDestinationResolvingMessagingTemplate<IMessageChannel>.ConvertAndSend(String, Object, IDictionary<String, Object>)
  fullName: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate<Steeltoe.Messaging.IMessageChannel>.ConvertAndSend(System.String, System.Object, System.Collections.Generic.IDictionary<System.String, System.Object>)
  nameWithType.vb: AbstractDestinationResolvingMessagingTemplate(Of IMessageChannel).ConvertAndSend(String, Object, IDictionary(Of String, Object))
  fullName.vb: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate(Of Steeltoe.Messaging.IMessageChannel).ConvertAndSend(System.String, System.Object, System.Collections.Generic.IDictionary(Of System.String, System.Object))
  name.vb: ConvertAndSend(String, Object, IDictionary(Of String, Object))
  spec.csharp:
  - uid: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate`1.ConvertAndSend(System.String,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object})
    name: ConvertAndSend
    nameWithType: AbstractDestinationResolvingMessagingTemplate<IMessageChannel>.ConvertAndSend
    fullName: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate<Steeltoe.Messaging.IMessageChannel>.ConvertAndSend
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate`1.ConvertAndSend(System.String,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object})
    name: ConvertAndSend
    nameWithType: AbstractDestinationResolvingMessagingTemplate(Of IMessageChannel).ConvertAndSend
    fullName: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate(Of Steeltoe.Messaging.IMessageChannel).ConvertAndSend
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate{Steeltoe.Messaging.IMessageChannel}.ConvertAndSend(System.String,System.Object,Steeltoe.Messaging.Core.IMessagePostProcessor)
  commentId: M:Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate{Steeltoe.Messaging.IMessageChannel}.ConvertAndSend(System.String,System.Object,Steeltoe.Messaging.Core.IMessagePostProcessor)
  parent: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate{Steeltoe.Messaging.IMessageChannel}
  definition: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate`1.ConvertAndSend(System.String,System.Object,Steeltoe.Messaging.Core.IMessagePostProcessor)
  name: ConvertAndSend(String, Object, IMessagePostProcessor)
  nameWithType: AbstractDestinationResolvingMessagingTemplate<IMessageChannel>.ConvertAndSend(String, Object, IMessagePostProcessor)
  fullName: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate<Steeltoe.Messaging.IMessageChannel>.ConvertAndSend(System.String, System.Object, Steeltoe.Messaging.Core.IMessagePostProcessor)
  nameWithType.vb: AbstractDestinationResolvingMessagingTemplate(Of IMessageChannel).ConvertAndSend(String, Object, IMessagePostProcessor)
  fullName.vb: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate(Of Steeltoe.Messaging.IMessageChannel).ConvertAndSend(System.String, System.Object, Steeltoe.Messaging.Core.IMessagePostProcessor)
  spec.csharp:
  - uid: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate`1.ConvertAndSend(System.String,System.Object,Steeltoe.Messaging.Core.IMessagePostProcessor)
    name: ConvertAndSend
    nameWithType: AbstractDestinationResolvingMessagingTemplate<IMessageChannel>.ConvertAndSend
    fullName: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate<Steeltoe.Messaging.IMessageChannel>.ConvertAndSend
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.Core.IMessagePostProcessor
    name: IMessagePostProcessor
    nameWithType: IMessagePostProcessor
    fullName: Steeltoe.Messaging.Core.IMessagePostProcessor
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate`1.ConvertAndSend(System.String,System.Object,Steeltoe.Messaging.Core.IMessagePostProcessor)
    name: ConvertAndSend
    nameWithType: AbstractDestinationResolvingMessagingTemplate(Of IMessageChannel).ConvertAndSend
    fullName: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate(Of Steeltoe.Messaging.IMessageChannel).ConvertAndSend
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.Core.IMessagePostProcessor
    name: IMessagePostProcessor
    nameWithType: IMessagePostProcessor
    fullName: Steeltoe.Messaging.Core.IMessagePostProcessor
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate{Steeltoe.Messaging.IMessageChannel}.ConvertAndSend(System.String,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object},Steeltoe.Messaging.Core.IMessagePostProcessor)
  commentId: M:Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate{Steeltoe.Messaging.IMessageChannel}.ConvertAndSend(System.String,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object},Steeltoe.Messaging.Core.IMessagePostProcessor)
  parent: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate{Steeltoe.Messaging.IMessageChannel}
  definition: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate`1.ConvertAndSend(System.String,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object},Steeltoe.Messaging.Core.IMessagePostProcessor)
  name: ConvertAndSend(String, Object, IDictionary<String, Object>, IMessagePostProcessor)
  nameWithType: AbstractDestinationResolvingMessagingTemplate<IMessageChannel>.ConvertAndSend(String, Object, IDictionary<String, Object>, IMessagePostProcessor)
  fullName: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate<Steeltoe.Messaging.IMessageChannel>.ConvertAndSend(System.String, System.Object, System.Collections.Generic.IDictionary<System.String, System.Object>, Steeltoe.Messaging.Core.IMessagePostProcessor)
  nameWithType.vb: AbstractDestinationResolvingMessagingTemplate(Of IMessageChannel).ConvertAndSend(String, Object, IDictionary(Of String, Object), IMessagePostProcessor)
  fullName.vb: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate(Of Steeltoe.Messaging.IMessageChannel).ConvertAndSend(System.String, System.Object, System.Collections.Generic.IDictionary(Of System.String, System.Object), Steeltoe.Messaging.Core.IMessagePostProcessor)
  name.vb: ConvertAndSend(String, Object, IDictionary(Of String, Object), IMessagePostProcessor)
  spec.csharp:
  - uid: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate`1.ConvertAndSend(System.String,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object},Steeltoe.Messaging.Core.IMessagePostProcessor)
    name: ConvertAndSend
    nameWithType: AbstractDestinationResolvingMessagingTemplate<IMessageChannel>.ConvertAndSend
    fullName: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate<Steeltoe.Messaging.IMessageChannel>.ConvertAndSend
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.Core.IMessagePostProcessor
    name: IMessagePostProcessor
    nameWithType: IMessagePostProcessor
    fullName: Steeltoe.Messaging.Core.IMessagePostProcessor
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate`1.ConvertAndSend(System.String,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object},Steeltoe.Messaging.Core.IMessagePostProcessor)
    name: ConvertAndSend
    nameWithType: AbstractDestinationResolvingMessagingTemplate(Of IMessageChannel).ConvertAndSend
    fullName: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate(Of Steeltoe.Messaging.IMessageChannel).ConvertAndSend
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.Core.IMessagePostProcessor
    name: IMessagePostProcessor
    nameWithType: IMessagePostProcessor
    fullName: Steeltoe.Messaging.Core.IMessagePostProcessor
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate{Steeltoe.Messaging.IMessageChannel}.ConvertSendAndReceive``1(System.String,System.Object)
  commentId: M:Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate{Steeltoe.Messaging.IMessageChannel}.ConvertSendAndReceive``1(System.String,System.Object)
  parent: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate{Steeltoe.Messaging.IMessageChannel}
  definition: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate`1.ConvertSendAndReceive``1(System.String,System.Object)
  name: ConvertSendAndReceive<T>(String, Object)
  nameWithType: AbstractDestinationResolvingMessagingTemplate<IMessageChannel>.ConvertSendAndReceive<T>(String, Object)
  fullName: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate<Steeltoe.Messaging.IMessageChannel>.ConvertSendAndReceive<T>(System.String, System.Object)
  nameWithType.vb: AbstractDestinationResolvingMessagingTemplate(Of IMessageChannel).ConvertSendAndReceive(Of T)(String, Object)
  fullName.vb: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate(Of Steeltoe.Messaging.IMessageChannel).ConvertSendAndReceive(Of T)(System.String, System.Object)
  name.vb: ConvertSendAndReceive(Of T)(String, Object)
  spec.csharp:
  - uid: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate`1.ConvertSendAndReceive``1(System.String,System.Object)
    name: ConvertSendAndReceive<T>
    nameWithType: AbstractDestinationResolvingMessagingTemplate<IMessageChannel>.ConvertSendAndReceive<T>
    fullName: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate<Steeltoe.Messaging.IMessageChannel>.ConvertSendAndReceive<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate`1.ConvertSendAndReceive``1(System.String,System.Object)
    name: ConvertSendAndReceive(Of T)
    nameWithType: AbstractDestinationResolvingMessagingTemplate(Of IMessageChannel).ConvertSendAndReceive(Of T)
    fullName: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate(Of Steeltoe.Messaging.IMessageChannel).ConvertSendAndReceive(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate{Steeltoe.Messaging.IMessageChannel}.ConvertSendAndReceive``1(System.String,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object})
  commentId: M:Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate{Steeltoe.Messaging.IMessageChannel}.ConvertSendAndReceive``1(System.String,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object})
  parent: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate{Steeltoe.Messaging.IMessageChannel}
  definition: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate`1.ConvertSendAndReceive``1(System.String,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object})
  name: ConvertSendAndReceive<T>(String, Object, IDictionary<String, Object>)
  nameWithType: AbstractDestinationResolvingMessagingTemplate<IMessageChannel>.ConvertSendAndReceive<T>(String, Object, IDictionary<String, Object>)
  fullName: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate<Steeltoe.Messaging.IMessageChannel>.ConvertSendAndReceive<T>(System.String, System.Object, System.Collections.Generic.IDictionary<System.String, System.Object>)
  nameWithType.vb: AbstractDestinationResolvingMessagingTemplate(Of IMessageChannel).ConvertSendAndReceive(Of T)(String, Object, IDictionary(Of String, Object))
  fullName.vb: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate(Of Steeltoe.Messaging.IMessageChannel).ConvertSendAndReceive(Of T)(System.String, System.Object, System.Collections.Generic.IDictionary(Of System.String, System.Object))
  name.vb: ConvertSendAndReceive(Of T)(String, Object, IDictionary(Of String, Object))
  spec.csharp:
  - uid: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate`1.ConvertSendAndReceive``1(System.String,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object})
    name: ConvertSendAndReceive<T>
    nameWithType: AbstractDestinationResolvingMessagingTemplate<IMessageChannel>.ConvertSendAndReceive<T>
    fullName: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate<Steeltoe.Messaging.IMessageChannel>.ConvertSendAndReceive<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate`1.ConvertSendAndReceive``1(System.String,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object})
    name: ConvertSendAndReceive(Of T)
    nameWithType: AbstractDestinationResolvingMessagingTemplate(Of IMessageChannel).ConvertSendAndReceive(Of T)
    fullName: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate(Of Steeltoe.Messaging.IMessageChannel).ConvertSendAndReceive(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate{Steeltoe.Messaging.IMessageChannel}.ConvertSendAndReceive``1(System.String,System.Object,Steeltoe.Messaging.Core.IMessagePostProcessor)
  commentId: M:Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate{Steeltoe.Messaging.IMessageChannel}.ConvertSendAndReceive``1(System.String,System.Object,Steeltoe.Messaging.Core.IMessagePostProcessor)
  parent: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate{Steeltoe.Messaging.IMessageChannel}
  definition: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate`1.ConvertSendAndReceive``1(System.String,System.Object,Steeltoe.Messaging.Core.IMessagePostProcessor)
  name: ConvertSendAndReceive<T>(String, Object, IMessagePostProcessor)
  nameWithType: AbstractDestinationResolvingMessagingTemplate<IMessageChannel>.ConvertSendAndReceive<T>(String, Object, IMessagePostProcessor)
  fullName: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate<Steeltoe.Messaging.IMessageChannel>.ConvertSendAndReceive<T>(System.String, System.Object, Steeltoe.Messaging.Core.IMessagePostProcessor)
  nameWithType.vb: AbstractDestinationResolvingMessagingTemplate(Of IMessageChannel).ConvertSendAndReceive(Of T)(String, Object, IMessagePostProcessor)
  fullName.vb: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate(Of Steeltoe.Messaging.IMessageChannel).ConvertSendAndReceive(Of T)(System.String, System.Object, Steeltoe.Messaging.Core.IMessagePostProcessor)
  name.vb: ConvertSendAndReceive(Of T)(String, Object, IMessagePostProcessor)
  spec.csharp:
  - uid: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate`1.ConvertSendAndReceive``1(System.String,System.Object,Steeltoe.Messaging.Core.IMessagePostProcessor)
    name: ConvertSendAndReceive<T>
    nameWithType: AbstractDestinationResolvingMessagingTemplate<IMessageChannel>.ConvertSendAndReceive<T>
    fullName: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate<Steeltoe.Messaging.IMessageChannel>.ConvertSendAndReceive<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.Core.IMessagePostProcessor
    name: IMessagePostProcessor
    nameWithType: IMessagePostProcessor
    fullName: Steeltoe.Messaging.Core.IMessagePostProcessor
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate`1.ConvertSendAndReceive``1(System.String,System.Object,Steeltoe.Messaging.Core.IMessagePostProcessor)
    name: ConvertSendAndReceive(Of T)
    nameWithType: AbstractDestinationResolvingMessagingTemplate(Of IMessageChannel).ConvertSendAndReceive(Of T)
    fullName: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate(Of Steeltoe.Messaging.IMessageChannel).ConvertSendAndReceive(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.Core.IMessagePostProcessor
    name: IMessagePostProcessor
    nameWithType: IMessagePostProcessor
    fullName: Steeltoe.Messaging.Core.IMessagePostProcessor
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate{Steeltoe.Messaging.IMessageChannel}.ConvertSendAndReceive``1(System.String,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object},Steeltoe.Messaging.Core.IMessagePostProcessor)
  commentId: M:Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate{Steeltoe.Messaging.IMessageChannel}.ConvertSendAndReceive``1(System.String,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object},Steeltoe.Messaging.Core.IMessagePostProcessor)
  parent: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate{Steeltoe.Messaging.IMessageChannel}
  definition: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate`1.ConvertSendAndReceive``1(System.String,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object},Steeltoe.Messaging.Core.IMessagePostProcessor)
  name: ConvertSendAndReceive<T>(String, Object, IDictionary<String, Object>, IMessagePostProcessor)
  nameWithType: AbstractDestinationResolvingMessagingTemplate<IMessageChannel>.ConvertSendAndReceive<T>(String, Object, IDictionary<String, Object>, IMessagePostProcessor)
  fullName: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate<Steeltoe.Messaging.IMessageChannel>.ConvertSendAndReceive<T>(System.String, System.Object, System.Collections.Generic.IDictionary<System.String, System.Object>, Steeltoe.Messaging.Core.IMessagePostProcessor)
  nameWithType.vb: AbstractDestinationResolvingMessagingTemplate(Of IMessageChannel).ConvertSendAndReceive(Of T)(String, Object, IDictionary(Of String, Object), IMessagePostProcessor)
  fullName.vb: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate(Of Steeltoe.Messaging.IMessageChannel).ConvertSendAndReceive(Of T)(System.String, System.Object, System.Collections.Generic.IDictionary(Of System.String, System.Object), Steeltoe.Messaging.Core.IMessagePostProcessor)
  name.vb: ConvertSendAndReceive(Of T)(String, Object, IDictionary(Of String, Object), IMessagePostProcessor)
  spec.csharp:
  - uid: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate`1.ConvertSendAndReceive``1(System.String,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object},Steeltoe.Messaging.Core.IMessagePostProcessor)
    name: ConvertSendAndReceive<T>
    nameWithType: AbstractDestinationResolvingMessagingTemplate<IMessageChannel>.ConvertSendAndReceive<T>
    fullName: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate<Steeltoe.Messaging.IMessageChannel>.ConvertSendAndReceive<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.Core.IMessagePostProcessor
    name: IMessagePostProcessor
    nameWithType: IMessagePostProcessor
    fullName: Steeltoe.Messaging.Core.IMessagePostProcessor
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate`1.ConvertSendAndReceive``1(System.String,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object},Steeltoe.Messaging.Core.IMessagePostProcessor)
    name: ConvertSendAndReceive(Of T)
    nameWithType: AbstractDestinationResolvingMessagingTemplate(Of IMessageChannel).ConvertSendAndReceive(Of T)
    fullName: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate(Of Steeltoe.Messaging.IMessageChannel).ConvertSendAndReceive(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.Core.IMessagePostProcessor
    name: IMessagePostProcessor
    nameWithType: IMessagePostProcessor
    fullName: Steeltoe.Messaging.Core.IMessagePostProcessor
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate{Steeltoe.Messaging.IMessageChannel}.Receive(System.String)
  commentId: M:Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate{Steeltoe.Messaging.IMessageChannel}.Receive(System.String)
  parent: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate{Steeltoe.Messaging.IMessageChannel}
  definition: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate`1.Receive(System.String)
  name: Receive(String)
  nameWithType: AbstractDestinationResolvingMessagingTemplate<IMessageChannel>.Receive(String)
  fullName: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate<Steeltoe.Messaging.IMessageChannel>.Receive(System.String)
  nameWithType.vb: AbstractDestinationResolvingMessagingTemplate(Of IMessageChannel).Receive(String)
  fullName.vb: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate(Of Steeltoe.Messaging.IMessageChannel).Receive(System.String)
  spec.csharp:
  - uid: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate`1.Receive(System.String)
    name: Receive
    nameWithType: AbstractDestinationResolvingMessagingTemplate<IMessageChannel>.Receive
    fullName: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate<Steeltoe.Messaging.IMessageChannel>.Receive
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate`1.Receive(System.String)
    name: Receive
    nameWithType: AbstractDestinationResolvingMessagingTemplate(Of IMessageChannel).Receive
    fullName: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate(Of Steeltoe.Messaging.IMessageChannel).Receive
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate{Steeltoe.Messaging.IMessageChannel}.ReceiveAndConvert``1(System.String)
  commentId: M:Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate{Steeltoe.Messaging.IMessageChannel}.ReceiveAndConvert``1(System.String)
  parent: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate{Steeltoe.Messaging.IMessageChannel}
  definition: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate`1.ReceiveAndConvert``1(System.String)
  name: ReceiveAndConvert<T>(String)
  nameWithType: AbstractDestinationResolvingMessagingTemplate<IMessageChannel>.ReceiveAndConvert<T>(String)
  fullName: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate<Steeltoe.Messaging.IMessageChannel>.ReceiveAndConvert<T>(System.String)
  nameWithType.vb: AbstractDestinationResolvingMessagingTemplate(Of IMessageChannel).ReceiveAndConvert(Of T)(String)
  fullName.vb: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate(Of Steeltoe.Messaging.IMessageChannel).ReceiveAndConvert(Of T)(System.String)
  name.vb: ReceiveAndConvert(Of T)(String)
  spec.csharp:
  - uid: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate`1.ReceiveAndConvert``1(System.String)
    name: ReceiveAndConvert<T>
    nameWithType: AbstractDestinationResolvingMessagingTemplate<IMessageChannel>.ReceiveAndConvert<T>
    fullName: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate<Steeltoe.Messaging.IMessageChannel>.ReceiveAndConvert<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate`1.ReceiveAndConvert``1(System.String)
    name: ReceiveAndConvert(Of T)
    nameWithType: AbstractDestinationResolvingMessagingTemplate(Of IMessageChannel).ReceiveAndConvert(Of T)
    fullName: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate(Of Steeltoe.Messaging.IMessageChannel).ReceiveAndConvert(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate{Steeltoe.Messaging.IMessageChannel}.Send(System.String,Steeltoe.Messaging.IMessage)
  commentId: M:Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate{Steeltoe.Messaging.IMessageChannel}.Send(System.String,Steeltoe.Messaging.IMessage)
  parent: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate{Steeltoe.Messaging.IMessageChannel}
  definition: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate`1.Send(System.String,Steeltoe.Messaging.IMessage)
  name: Send(String, IMessage)
  nameWithType: AbstractDestinationResolvingMessagingTemplate<IMessageChannel>.Send(String, IMessage)
  fullName: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate<Steeltoe.Messaging.IMessageChannel>.Send(System.String, Steeltoe.Messaging.IMessage)
  nameWithType.vb: AbstractDestinationResolvingMessagingTemplate(Of IMessageChannel).Send(String, IMessage)
  fullName.vb: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate(Of Steeltoe.Messaging.IMessageChannel).Send(System.String, Steeltoe.Messaging.IMessage)
  spec.csharp:
  - uid: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate`1.Send(System.String,Steeltoe.Messaging.IMessage)
    name: Send
    nameWithType: AbstractDestinationResolvingMessagingTemplate<IMessageChannel>.Send
    fullName: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate<Steeltoe.Messaging.IMessageChannel>.Send
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate`1.Send(System.String,Steeltoe.Messaging.IMessage)
    name: Send
    nameWithType: AbstractDestinationResolvingMessagingTemplate(Of IMessageChannel).Send
    fullName: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate(Of Steeltoe.Messaging.IMessageChannel).Send
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate{Steeltoe.Messaging.IMessageChannel}.SendAndReceive(System.String,Steeltoe.Messaging.IMessage)
  commentId: M:Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate{Steeltoe.Messaging.IMessageChannel}.SendAndReceive(System.String,Steeltoe.Messaging.IMessage)
  parent: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate{Steeltoe.Messaging.IMessageChannel}
  definition: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate`1.SendAndReceive(System.String,Steeltoe.Messaging.IMessage)
  name: SendAndReceive(String, IMessage)
  nameWithType: AbstractDestinationResolvingMessagingTemplate<IMessageChannel>.SendAndReceive(String, IMessage)
  fullName: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate<Steeltoe.Messaging.IMessageChannel>.SendAndReceive(System.String, Steeltoe.Messaging.IMessage)
  nameWithType.vb: AbstractDestinationResolvingMessagingTemplate(Of IMessageChannel).SendAndReceive(String, IMessage)
  fullName.vb: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate(Of Steeltoe.Messaging.IMessageChannel).SendAndReceive(System.String, Steeltoe.Messaging.IMessage)
  spec.csharp:
  - uid: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate`1.SendAndReceive(System.String,Steeltoe.Messaging.IMessage)
    name: SendAndReceive
    nameWithType: AbstractDestinationResolvingMessagingTemplate<IMessageChannel>.SendAndReceive
    fullName: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate<Steeltoe.Messaging.IMessageChannel>.SendAndReceive
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate`1.SendAndReceive(System.String,Steeltoe.Messaging.IMessage)
    name: SendAndReceive
    nameWithType: AbstractDestinationResolvingMessagingTemplate(Of IMessageChannel).SendAndReceive
    fullName: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate(Of Steeltoe.Messaging.IMessageChannel).SendAndReceive
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate{Steeltoe.Messaging.IMessageChannel}.ResolveDestination(System.String)
  commentId: M:Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate{Steeltoe.Messaging.IMessageChannel}.ResolveDestination(System.String)
  parent: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate{Steeltoe.Messaging.IMessageChannel}
  definition: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate`1.ResolveDestination(System.String)
  name: ResolveDestination(String)
  nameWithType: AbstractDestinationResolvingMessagingTemplate<IMessageChannel>.ResolveDestination(String)
  fullName: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate<Steeltoe.Messaging.IMessageChannel>.ResolveDestination(System.String)
  nameWithType.vb: AbstractDestinationResolvingMessagingTemplate(Of IMessageChannel).ResolveDestination(String)
  fullName.vb: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate(Of Steeltoe.Messaging.IMessageChannel).ResolveDestination(System.String)
  spec.csharp:
  - uid: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate`1.ResolveDestination(System.String)
    name: ResolveDestination
    nameWithType: AbstractDestinationResolvingMessagingTemplate<IMessageChannel>.ResolveDestination
    fullName: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate<Steeltoe.Messaging.IMessageChannel>.ResolveDestination
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate`1.ResolveDestination(System.String)
    name: ResolveDestination
    nameWithType: AbstractDestinationResolvingMessagingTemplate(Of IMessageChannel).ResolveDestination
    fullName: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate(Of Steeltoe.Messaging.IMessageChannel).ResolveDestination
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Core.AbstractMessagingTemplate{Steeltoe.Messaging.IMessageChannel}.ConvertSendAndReceiveAsync``1(System.Object,System.Threading.CancellationToken)
  commentId: M:Steeltoe.Messaging.Core.AbstractMessagingTemplate{Steeltoe.Messaging.IMessageChannel}.ConvertSendAndReceiveAsync``1(System.Object,System.Threading.CancellationToken)
  parent: Steeltoe.Messaging.Core.AbstractMessagingTemplate{Steeltoe.Messaging.IMessageChannel}
  definition: Steeltoe.Messaging.Core.AbstractMessagingTemplate`1.ConvertSendAndReceiveAsync``1(System.Object,System.Threading.CancellationToken)
  name: ConvertSendAndReceiveAsync<T>(Object, CancellationToken)
  nameWithType: AbstractMessagingTemplate<IMessageChannel>.ConvertSendAndReceiveAsync<T>(Object, CancellationToken)
  fullName: Steeltoe.Messaging.Core.AbstractMessagingTemplate<Steeltoe.Messaging.IMessageChannel>.ConvertSendAndReceiveAsync<T>(System.Object, System.Threading.CancellationToken)
  nameWithType.vb: AbstractMessagingTemplate(Of IMessageChannel).ConvertSendAndReceiveAsync(Of T)(Object, CancellationToken)
  fullName.vb: Steeltoe.Messaging.Core.AbstractMessagingTemplate(Of Steeltoe.Messaging.IMessageChannel).ConvertSendAndReceiveAsync(Of T)(System.Object, System.Threading.CancellationToken)
  name.vb: ConvertSendAndReceiveAsync(Of T)(Object, CancellationToken)
  spec.csharp:
  - uid: Steeltoe.Messaging.Core.AbstractMessagingTemplate`1.ConvertSendAndReceiveAsync``1(System.Object,System.Threading.CancellationToken)
    name: ConvertSendAndReceiveAsync<T>
    nameWithType: AbstractMessagingTemplate<IMessageChannel>.ConvertSendAndReceiveAsync<T>
    fullName: Steeltoe.Messaging.Core.AbstractMessagingTemplate<Steeltoe.Messaging.IMessageChannel>.ConvertSendAndReceiveAsync<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Core.AbstractMessagingTemplate`1.ConvertSendAndReceiveAsync``1(System.Object,System.Threading.CancellationToken)
    name: ConvertSendAndReceiveAsync(Of T)
    nameWithType: AbstractMessagingTemplate(Of IMessageChannel).ConvertSendAndReceiveAsync(Of T)
    fullName: Steeltoe.Messaging.Core.AbstractMessagingTemplate(Of Steeltoe.Messaging.IMessageChannel).ConvertSendAndReceiveAsync(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Core.AbstractMessagingTemplate{Steeltoe.Messaging.IMessageChannel}.ConvertSendAndReceiveAsync``1(Steeltoe.Messaging.IMessageChannel,System.Object,System.Threading.CancellationToken)
  commentId: M:Steeltoe.Messaging.Core.AbstractMessagingTemplate{Steeltoe.Messaging.IMessageChannel}.ConvertSendAndReceiveAsync``1(Steeltoe.Messaging.IMessageChannel,System.Object,System.Threading.CancellationToken)
  parent: Steeltoe.Messaging.Core.AbstractMessagingTemplate{Steeltoe.Messaging.IMessageChannel}
  definition: Steeltoe.Messaging.Core.AbstractMessagingTemplate`1.ConvertSendAndReceiveAsync``1(`0,System.Object,System.Threading.CancellationToken)
  name: ConvertSendAndReceiveAsync<T>(IMessageChannel, Object, CancellationToken)
  nameWithType: AbstractMessagingTemplate<IMessageChannel>.ConvertSendAndReceiveAsync<T>(IMessageChannel, Object, CancellationToken)
  fullName: Steeltoe.Messaging.Core.AbstractMessagingTemplate<Steeltoe.Messaging.IMessageChannel>.ConvertSendAndReceiveAsync<T>(Steeltoe.Messaging.IMessageChannel, System.Object, System.Threading.CancellationToken)
  nameWithType.vb: AbstractMessagingTemplate(Of IMessageChannel).ConvertSendAndReceiveAsync(Of T)(IMessageChannel, Object, CancellationToken)
  fullName.vb: Steeltoe.Messaging.Core.AbstractMessagingTemplate(Of Steeltoe.Messaging.IMessageChannel).ConvertSendAndReceiveAsync(Of T)(Steeltoe.Messaging.IMessageChannel, System.Object, System.Threading.CancellationToken)
  name.vb: ConvertSendAndReceiveAsync(Of T)(IMessageChannel, Object, CancellationToken)
  spec.csharp:
  - uid: Steeltoe.Messaging.Core.AbstractMessagingTemplate`1.ConvertSendAndReceiveAsync``1(`0,System.Object,System.Threading.CancellationToken)
    name: ConvertSendAndReceiveAsync<T>
    nameWithType: AbstractMessagingTemplate<IMessageChannel>.ConvertSendAndReceiveAsync<T>
    fullName: Steeltoe.Messaging.Core.AbstractMessagingTemplate<Steeltoe.Messaging.IMessageChannel>.ConvertSendAndReceiveAsync<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.IMessageChannel
    name: IMessageChannel
    nameWithType: IMessageChannel
    fullName: Steeltoe.Messaging.IMessageChannel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Core.AbstractMessagingTemplate`1.ConvertSendAndReceiveAsync``1(`0,System.Object,System.Threading.CancellationToken)
    name: ConvertSendAndReceiveAsync(Of T)
    nameWithType: AbstractMessagingTemplate(Of IMessageChannel).ConvertSendAndReceiveAsync(Of T)
    fullName: Steeltoe.Messaging.Core.AbstractMessagingTemplate(Of Steeltoe.Messaging.IMessageChannel).ConvertSendAndReceiveAsync(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.IMessageChannel
    name: IMessageChannel
    nameWithType: IMessageChannel
    fullName: Steeltoe.Messaging.IMessageChannel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Core.AbstractMessagingTemplate{Steeltoe.Messaging.IMessageChannel}.ConvertSendAndReceiveAsync``1(Steeltoe.Messaging.IMessageChannel,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object},System.Threading.CancellationToken)
  commentId: M:Steeltoe.Messaging.Core.AbstractMessagingTemplate{Steeltoe.Messaging.IMessageChannel}.ConvertSendAndReceiveAsync``1(Steeltoe.Messaging.IMessageChannel,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object},System.Threading.CancellationToken)
  parent: Steeltoe.Messaging.Core.AbstractMessagingTemplate{Steeltoe.Messaging.IMessageChannel}
  definition: Steeltoe.Messaging.Core.AbstractMessagingTemplate`1.ConvertSendAndReceiveAsync``1(`0,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object},System.Threading.CancellationToken)
  name: ConvertSendAndReceiveAsync<T>(IMessageChannel, Object, IDictionary<String, Object>, CancellationToken)
  nameWithType: AbstractMessagingTemplate<IMessageChannel>.ConvertSendAndReceiveAsync<T>(IMessageChannel, Object, IDictionary<String, Object>, CancellationToken)
  fullName: Steeltoe.Messaging.Core.AbstractMessagingTemplate<Steeltoe.Messaging.IMessageChannel>.ConvertSendAndReceiveAsync<T>(Steeltoe.Messaging.IMessageChannel, System.Object, System.Collections.Generic.IDictionary<System.String, System.Object>, System.Threading.CancellationToken)
  nameWithType.vb: AbstractMessagingTemplate(Of IMessageChannel).ConvertSendAndReceiveAsync(Of T)(IMessageChannel, Object, IDictionary(Of String, Object), CancellationToken)
  fullName.vb: Steeltoe.Messaging.Core.AbstractMessagingTemplate(Of Steeltoe.Messaging.IMessageChannel).ConvertSendAndReceiveAsync(Of T)(Steeltoe.Messaging.IMessageChannel, System.Object, System.Collections.Generic.IDictionary(Of System.String, System.Object), System.Threading.CancellationToken)
  name.vb: ConvertSendAndReceiveAsync(Of T)(IMessageChannel, Object, IDictionary(Of String, Object), CancellationToken)
  spec.csharp:
  - uid: Steeltoe.Messaging.Core.AbstractMessagingTemplate`1.ConvertSendAndReceiveAsync``1(`0,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object},System.Threading.CancellationToken)
    name: ConvertSendAndReceiveAsync<T>
    nameWithType: AbstractMessagingTemplate<IMessageChannel>.ConvertSendAndReceiveAsync<T>
    fullName: Steeltoe.Messaging.Core.AbstractMessagingTemplate<Steeltoe.Messaging.IMessageChannel>.ConvertSendAndReceiveAsync<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.IMessageChannel
    name: IMessageChannel
    nameWithType: IMessageChannel
    fullName: Steeltoe.Messaging.IMessageChannel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Core.AbstractMessagingTemplate`1.ConvertSendAndReceiveAsync``1(`0,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object},System.Threading.CancellationToken)
    name: ConvertSendAndReceiveAsync(Of T)
    nameWithType: AbstractMessagingTemplate(Of IMessageChannel).ConvertSendAndReceiveAsync(Of T)
    fullName: Steeltoe.Messaging.Core.AbstractMessagingTemplate(Of Steeltoe.Messaging.IMessageChannel).ConvertSendAndReceiveAsync(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.IMessageChannel
    name: IMessageChannel
    nameWithType: IMessageChannel
    fullName: Steeltoe.Messaging.IMessageChannel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Core.AbstractMessagingTemplate{Steeltoe.Messaging.IMessageChannel}.ConvertSendAndReceiveAsync``1(System.Object,Steeltoe.Messaging.Core.IMessagePostProcessor,System.Threading.CancellationToken)
  commentId: M:Steeltoe.Messaging.Core.AbstractMessagingTemplate{Steeltoe.Messaging.IMessageChannel}.ConvertSendAndReceiveAsync``1(System.Object,Steeltoe.Messaging.Core.IMessagePostProcessor,System.Threading.CancellationToken)
  parent: Steeltoe.Messaging.Core.AbstractMessagingTemplate{Steeltoe.Messaging.IMessageChannel}
  definition: Steeltoe.Messaging.Core.AbstractMessagingTemplate`1.ConvertSendAndReceiveAsync``1(System.Object,Steeltoe.Messaging.Core.IMessagePostProcessor,System.Threading.CancellationToken)
  name: ConvertSendAndReceiveAsync<T>(Object, IMessagePostProcessor, CancellationToken)
  nameWithType: AbstractMessagingTemplate<IMessageChannel>.ConvertSendAndReceiveAsync<T>(Object, IMessagePostProcessor, CancellationToken)
  fullName: Steeltoe.Messaging.Core.AbstractMessagingTemplate<Steeltoe.Messaging.IMessageChannel>.ConvertSendAndReceiveAsync<T>(System.Object, Steeltoe.Messaging.Core.IMessagePostProcessor, System.Threading.CancellationToken)
  nameWithType.vb: AbstractMessagingTemplate(Of IMessageChannel).ConvertSendAndReceiveAsync(Of T)(Object, IMessagePostProcessor, CancellationToken)
  fullName.vb: Steeltoe.Messaging.Core.AbstractMessagingTemplate(Of Steeltoe.Messaging.IMessageChannel).ConvertSendAndReceiveAsync(Of T)(System.Object, Steeltoe.Messaging.Core.IMessagePostProcessor, System.Threading.CancellationToken)
  name.vb: ConvertSendAndReceiveAsync(Of T)(Object, IMessagePostProcessor, CancellationToken)
  spec.csharp:
  - uid: Steeltoe.Messaging.Core.AbstractMessagingTemplate`1.ConvertSendAndReceiveAsync``1(System.Object,Steeltoe.Messaging.Core.IMessagePostProcessor,System.Threading.CancellationToken)
    name: ConvertSendAndReceiveAsync<T>
    nameWithType: AbstractMessagingTemplate<IMessageChannel>.ConvertSendAndReceiveAsync<T>
    fullName: Steeltoe.Messaging.Core.AbstractMessagingTemplate<Steeltoe.Messaging.IMessageChannel>.ConvertSendAndReceiveAsync<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.Core.IMessagePostProcessor
    name: IMessagePostProcessor
    nameWithType: IMessagePostProcessor
    fullName: Steeltoe.Messaging.Core.IMessagePostProcessor
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Core.AbstractMessagingTemplate`1.ConvertSendAndReceiveAsync``1(System.Object,Steeltoe.Messaging.Core.IMessagePostProcessor,System.Threading.CancellationToken)
    name: ConvertSendAndReceiveAsync(Of T)
    nameWithType: AbstractMessagingTemplate(Of IMessageChannel).ConvertSendAndReceiveAsync(Of T)
    fullName: Steeltoe.Messaging.Core.AbstractMessagingTemplate(Of Steeltoe.Messaging.IMessageChannel).ConvertSendAndReceiveAsync(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.Core.IMessagePostProcessor
    name: IMessagePostProcessor
    nameWithType: IMessagePostProcessor
    fullName: Steeltoe.Messaging.Core.IMessagePostProcessor
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Core.AbstractMessagingTemplate{Steeltoe.Messaging.IMessageChannel}.ConvertSendAndReceiveAsync``1(Steeltoe.Messaging.IMessageChannel,System.Object,Steeltoe.Messaging.Core.IMessagePostProcessor,System.Threading.CancellationToken)
  commentId: M:Steeltoe.Messaging.Core.AbstractMessagingTemplate{Steeltoe.Messaging.IMessageChannel}.ConvertSendAndReceiveAsync``1(Steeltoe.Messaging.IMessageChannel,System.Object,Steeltoe.Messaging.Core.IMessagePostProcessor,System.Threading.CancellationToken)
  parent: Steeltoe.Messaging.Core.AbstractMessagingTemplate{Steeltoe.Messaging.IMessageChannel}
  definition: Steeltoe.Messaging.Core.AbstractMessagingTemplate`1.ConvertSendAndReceiveAsync``1(`0,System.Object,Steeltoe.Messaging.Core.IMessagePostProcessor,System.Threading.CancellationToken)
  name: ConvertSendAndReceiveAsync<T>(IMessageChannel, Object, IMessagePostProcessor, CancellationToken)
  nameWithType: AbstractMessagingTemplate<IMessageChannel>.ConvertSendAndReceiveAsync<T>(IMessageChannel, Object, IMessagePostProcessor, CancellationToken)
  fullName: Steeltoe.Messaging.Core.AbstractMessagingTemplate<Steeltoe.Messaging.IMessageChannel>.ConvertSendAndReceiveAsync<T>(Steeltoe.Messaging.IMessageChannel, System.Object, Steeltoe.Messaging.Core.IMessagePostProcessor, System.Threading.CancellationToken)
  nameWithType.vb: AbstractMessagingTemplate(Of IMessageChannel).ConvertSendAndReceiveAsync(Of T)(IMessageChannel, Object, IMessagePostProcessor, CancellationToken)
  fullName.vb: Steeltoe.Messaging.Core.AbstractMessagingTemplate(Of Steeltoe.Messaging.IMessageChannel).ConvertSendAndReceiveAsync(Of T)(Steeltoe.Messaging.IMessageChannel, System.Object, Steeltoe.Messaging.Core.IMessagePostProcessor, System.Threading.CancellationToken)
  name.vb: ConvertSendAndReceiveAsync(Of T)(IMessageChannel, Object, IMessagePostProcessor, CancellationToken)
  spec.csharp:
  - uid: Steeltoe.Messaging.Core.AbstractMessagingTemplate`1.ConvertSendAndReceiveAsync``1(`0,System.Object,Steeltoe.Messaging.Core.IMessagePostProcessor,System.Threading.CancellationToken)
    name: ConvertSendAndReceiveAsync<T>
    nameWithType: AbstractMessagingTemplate<IMessageChannel>.ConvertSendAndReceiveAsync<T>
    fullName: Steeltoe.Messaging.Core.AbstractMessagingTemplate<Steeltoe.Messaging.IMessageChannel>.ConvertSendAndReceiveAsync<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.IMessageChannel
    name: IMessageChannel
    nameWithType: IMessageChannel
    fullName: Steeltoe.Messaging.IMessageChannel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.Core.IMessagePostProcessor
    name: IMessagePostProcessor
    nameWithType: IMessagePostProcessor
    fullName: Steeltoe.Messaging.Core.IMessagePostProcessor
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Core.AbstractMessagingTemplate`1.ConvertSendAndReceiveAsync``1(`0,System.Object,Steeltoe.Messaging.Core.IMessagePostProcessor,System.Threading.CancellationToken)
    name: ConvertSendAndReceiveAsync(Of T)
    nameWithType: AbstractMessagingTemplate(Of IMessageChannel).ConvertSendAndReceiveAsync(Of T)
    fullName: Steeltoe.Messaging.Core.AbstractMessagingTemplate(Of Steeltoe.Messaging.IMessageChannel).ConvertSendAndReceiveAsync(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.IMessageChannel
    name: IMessageChannel
    nameWithType: IMessageChannel
    fullName: Steeltoe.Messaging.IMessageChannel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.Core.IMessagePostProcessor
    name: IMessagePostProcessor
    nameWithType: IMessagePostProcessor
    fullName: Steeltoe.Messaging.Core.IMessagePostProcessor
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Core.AbstractMessagingTemplate{Steeltoe.Messaging.IMessageChannel}.ConvertSendAndReceiveAsync``1(Steeltoe.Messaging.IMessageChannel,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object},Steeltoe.Messaging.Core.IMessagePostProcessor,System.Threading.CancellationToken)
  commentId: M:Steeltoe.Messaging.Core.AbstractMessagingTemplate{Steeltoe.Messaging.IMessageChannel}.ConvertSendAndReceiveAsync``1(Steeltoe.Messaging.IMessageChannel,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object},Steeltoe.Messaging.Core.IMessagePostProcessor,System.Threading.CancellationToken)
  parent: Steeltoe.Messaging.Core.AbstractMessagingTemplate{Steeltoe.Messaging.IMessageChannel}
  definition: Steeltoe.Messaging.Core.AbstractMessagingTemplate`1.ConvertSendAndReceiveAsync``1(`0,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object},Steeltoe.Messaging.Core.IMessagePostProcessor,System.Threading.CancellationToken)
  name: ConvertSendAndReceiveAsync<T>(IMessageChannel, Object, IDictionary<String, Object>, IMessagePostProcessor, CancellationToken)
  nameWithType: AbstractMessagingTemplate<IMessageChannel>.ConvertSendAndReceiveAsync<T>(IMessageChannel, Object, IDictionary<String, Object>, IMessagePostProcessor, CancellationToken)
  fullName: Steeltoe.Messaging.Core.AbstractMessagingTemplate<Steeltoe.Messaging.IMessageChannel>.ConvertSendAndReceiveAsync<T>(Steeltoe.Messaging.IMessageChannel, System.Object, System.Collections.Generic.IDictionary<System.String, System.Object>, Steeltoe.Messaging.Core.IMessagePostProcessor, System.Threading.CancellationToken)
  nameWithType.vb: AbstractMessagingTemplate(Of IMessageChannel).ConvertSendAndReceiveAsync(Of T)(IMessageChannel, Object, IDictionary(Of String, Object), IMessagePostProcessor, CancellationToken)
  fullName.vb: Steeltoe.Messaging.Core.AbstractMessagingTemplate(Of Steeltoe.Messaging.IMessageChannel).ConvertSendAndReceiveAsync(Of T)(Steeltoe.Messaging.IMessageChannel, System.Object, System.Collections.Generic.IDictionary(Of System.String, System.Object), Steeltoe.Messaging.Core.IMessagePostProcessor, System.Threading.CancellationToken)
  name.vb: ConvertSendAndReceiveAsync(Of T)(IMessageChannel, Object, IDictionary(Of String, Object), IMessagePostProcessor, CancellationToken)
  spec.csharp:
  - uid: Steeltoe.Messaging.Core.AbstractMessagingTemplate`1.ConvertSendAndReceiveAsync``1(`0,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object},Steeltoe.Messaging.Core.IMessagePostProcessor,System.Threading.CancellationToken)
    name: ConvertSendAndReceiveAsync<T>
    nameWithType: AbstractMessagingTemplate<IMessageChannel>.ConvertSendAndReceiveAsync<T>
    fullName: Steeltoe.Messaging.Core.AbstractMessagingTemplate<Steeltoe.Messaging.IMessageChannel>.ConvertSendAndReceiveAsync<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.IMessageChannel
    name: IMessageChannel
    nameWithType: IMessageChannel
    fullName: Steeltoe.Messaging.IMessageChannel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.Core.IMessagePostProcessor
    name: IMessagePostProcessor
    nameWithType: IMessagePostProcessor
    fullName: Steeltoe.Messaging.Core.IMessagePostProcessor
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Core.AbstractMessagingTemplate`1.ConvertSendAndReceiveAsync``1(`0,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object},Steeltoe.Messaging.Core.IMessagePostProcessor,System.Threading.CancellationToken)
    name: ConvertSendAndReceiveAsync(Of T)
    nameWithType: AbstractMessagingTemplate(Of IMessageChannel).ConvertSendAndReceiveAsync(Of T)
    fullName: Steeltoe.Messaging.Core.AbstractMessagingTemplate(Of Steeltoe.Messaging.IMessageChannel).ConvertSendAndReceiveAsync(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.IMessageChannel
    name: IMessageChannel
    nameWithType: IMessageChannel
    fullName: Steeltoe.Messaging.IMessageChannel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.Core.IMessagePostProcessor
    name: IMessagePostProcessor
    nameWithType: IMessagePostProcessor
    fullName: Steeltoe.Messaging.Core.IMessagePostProcessor
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Core.AbstractMessagingTemplate{Steeltoe.Messaging.IMessageChannel}.SendAndReceiveAsync(Steeltoe.Messaging.IMessage,System.Threading.CancellationToken)
  commentId: M:Steeltoe.Messaging.Core.AbstractMessagingTemplate{Steeltoe.Messaging.IMessageChannel}.SendAndReceiveAsync(Steeltoe.Messaging.IMessage,System.Threading.CancellationToken)
  parent: Steeltoe.Messaging.Core.AbstractMessagingTemplate{Steeltoe.Messaging.IMessageChannel}
  definition: Steeltoe.Messaging.Core.AbstractMessagingTemplate`1.SendAndReceiveAsync(Steeltoe.Messaging.IMessage,System.Threading.CancellationToken)
  name: SendAndReceiveAsync(IMessage, CancellationToken)
  nameWithType: AbstractMessagingTemplate<IMessageChannel>.SendAndReceiveAsync(IMessage, CancellationToken)
  fullName: Steeltoe.Messaging.Core.AbstractMessagingTemplate<Steeltoe.Messaging.IMessageChannel>.SendAndReceiveAsync(Steeltoe.Messaging.IMessage, System.Threading.CancellationToken)
  nameWithType.vb: AbstractMessagingTemplate(Of IMessageChannel).SendAndReceiveAsync(IMessage, CancellationToken)
  fullName.vb: Steeltoe.Messaging.Core.AbstractMessagingTemplate(Of Steeltoe.Messaging.IMessageChannel).SendAndReceiveAsync(Steeltoe.Messaging.IMessage, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Steeltoe.Messaging.Core.AbstractMessagingTemplate`1.SendAndReceiveAsync(Steeltoe.Messaging.IMessage,System.Threading.CancellationToken)
    name: SendAndReceiveAsync
    nameWithType: AbstractMessagingTemplate<IMessageChannel>.SendAndReceiveAsync
    fullName: Steeltoe.Messaging.Core.AbstractMessagingTemplate<Steeltoe.Messaging.IMessageChannel>.SendAndReceiveAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Core.AbstractMessagingTemplate`1.SendAndReceiveAsync(Steeltoe.Messaging.IMessage,System.Threading.CancellationToken)
    name: SendAndReceiveAsync
    nameWithType: AbstractMessagingTemplate(Of IMessageChannel).SendAndReceiveAsync
    fullName: Steeltoe.Messaging.Core.AbstractMessagingTemplate(Of Steeltoe.Messaging.IMessageChannel).SendAndReceiveAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Core.AbstractMessagingTemplate{Steeltoe.Messaging.IMessageChannel}.SendAndReceiveAsync(Steeltoe.Messaging.IMessageChannel,Steeltoe.Messaging.IMessage,System.Threading.CancellationToken)
  commentId: M:Steeltoe.Messaging.Core.AbstractMessagingTemplate{Steeltoe.Messaging.IMessageChannel}.SendAndReceiveAsync(Steeltoe.Messaging.IMessageChannel,Steeltoe.Messaging.IMessage,System.Threading.CancellationToken)
  parent: Steeltoe.Messaging.Core.AbstractMessagingTemplate{Steeltoe.Messaging.IMessageChannel}
  definition: Steeltoe.Messaging.Core.AbstractMessagingTemplate`1.SendAndReceiveAsync(`0,Steeltoe.Messaging.IMessage,System.Threading.CancellationToken)
  name: SendAndReceiveAsync(IMessageChannel, IMessage, CancellationToken)
  nameWithType: AbstractMessagingTemplate<IMessageChannel>.SendAndReceiveAsync(IMessageChannel, IMessage, CancellationToken)
  fullName: Steeltoe.Messaging.Core.AbstractMessagingTemplate<Steeltoe.Messaging.IMessageChannel>.SendAndReceiveAsync(Steeltoe.Messaging.IMessageChannel, Steeltoe.Messaging.IMessage, System.Threading.CancellationToken)
  nameWithType.vb: AbstractMessagingTemplate(Of IMessageChannel).SendAndReceiveAsync(IMessageChannel, IMessage, CancellationToken)
  fullName.vb: Steeltoe.Messaging.Core.AbstractMessagingTemplate(Of Steeltoe.Messaging.IMessageChannel).SendAndReceiveAsync(Steeltoe.Messaging.IMessageChannel, Steeltoe.Messaging.IMessage, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Steeltoe.Messaging.Core.AbstractMessagingTemplate`1.SendAndReceiveAsync(`0,Steeltoe.Messaging.IMessage,System.Threading.CancellationToken)
    name: SendAndReceiveAsync
    nameWithType: AbstractMessagingTemplate<IMessageChannel>.SendAndReceiveAsync
    fullName: Steeltoe.Messaging.Core.AbstractMessagingTemplate<Steeltoe.Messaging.IMessageChannel>.SendAndReceiveAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.IMessageChannel
    name: IMessageChannel
    nameWithType: IMessageChannel
    fullName: Steeltoe.Messaging.IMessageChannel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Core.AbstractMessagingTemplate`1.SendAndReceiveAsync(`0,Steeltoe.Messaging.IMessage,System.Threading.CancellationToken)
    name: SendAndReceiveAsync
    nameWithType: AbstractMessagingTemplate(Of IMessageChannel).SendAndReceiveAsync
    fullName: Steeltoe.Messaging.Core.AbstractMessagingTemplate(Of Steeltoe.Messaging.IMessageChannel).SendAndReceiveAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.IMessageChannel
    name: IMessageChannel
    nameWithType: IMessageChannel
    fullName: Steeltoe.Messaging.IMessageChannel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Core.AbstractMessagingTemplate{Steeltoe.Messaging.IMessageChannel}.ConvertSendAndReceive``1(System.Object)
  commentId: M:Steeltoe.Messaging.Core.AbstractMessagingTemplate{Steeltoe.Messaging.IMessageChannel}.ConvertSendAndReceive``1(System.Object)
  parent: Steeltoe.Messaging.Core.AbstractMessagingTemplate{Steeltoe.Messaging.IMessageChannel}
  definition: Steeltoe.Messaging.Core.AbstractMessagingTemplate`1.ConvertSendAndReceive``1(System.Object)
  name: ConvertSendAndReceive<T>(Object)
  nameWithType: AbstractMessagingTemplate<IMessageChannel>.ConvertSendAndReceive<T>(Object)
  fullName: Steeltoe.Messaging.Core.AbstractMessagingTemplate<Steeltoe.Messaging.IMessageChannel>.ConvertSendAndReceive<T>(System.Object)
  nameWithType.vb: AbstractMessagingTemplate(Of IMessageChannel).ConvertSendAndReceive(Of T)(Object)
  fullName.vb: Steeltoe.Messaging.Core.AbstractMessagingTemplate(Of Steeltoe.Messaging.IMessageChannel).ConvertSendAndReceive(Of T)(System.Object)
  name.vb: ConvertSendAndReceive(Of T)(Object)
  spec.csharp:
  - uid: Steeltoe.Messaging.Core.AbstractMessagingTemplate`1.ConvertSendAndReceive``1(System.Object)
    name: ConvertSendAndReceive<T>
    nameWithType: AbstractMessagingTemplate<IMessageChannel>.ConvertSendAndReceive<T>
    fullName: Steeltoe.Messaging.Core.AbstractMessagingTemplate<Steeltoe.Messaging.IMessageChannel>.ConvertSendAndReceive<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Core.AbstractMessagingTemplate`1.ConvertSendAndReceive``1(System.Object)
    name: ConvertSendAndReceive(Of T)
    nameWithType: AbstractMessagingTemplate(Of IMessageChannel).ConvertSendAndReceive(Of T)
    fullName: Steeltoe.Messaging.Core.AbstractMessagingTemplate(Of Steeltoe.Messaging.IMessageChannel).ConvertSendAndReceive(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Core.AbstractMessagingTemplate{Steeltoe.Messaging.IMessageChannel}.ConvertSendAndReceive``1(Steeltoe.Messaging.IMessageChannel,System.Object)
  commentId: M:Steeltoe.Messaging.Core.AbstractMessagingTemplate{Steeltoe.Messaging.IMessageChannel}.ConvertSendAndReceive``1(Steeltoe.Messaging.IMessageChannel,System.Object)
  parent: Steeltoe.Messaging.Core.AbstractMessagingTemplate{Steeltoe.Messaging.IMessageChannel}
  definition: Steeltoe.Messaging.Core.AbstractMessagingTemplate`1.ConvertSendAndReceive``1(`0,System.Object)
  name: ConvertSendAndReceive<T>(IMessageChannel, Object)
  nameWithType: AbstractMessagingTemplate<IMessageChannel>.ConvertSendAndReceive<T>(IMessageChannel, Object)
  fullName: Steeltoe.Messaging.Core.AbstractMessagingTemplate<Steeltoe.Messaging.IMessageChannel>.ConvertSendAndReceive<T>(Steeltoe.Messaging.IMessageChannel, System.Object)
  nameWithType.vb: AbstractMessagingTemplate(Of IMessageChannel).ConvertSendAndReceive(Of T)(IMessageChannel, Object)
  fullName.vb: Steeltoe.Messaging.Core.AbstractMessagingTemplate(Of Steeltoe.Messaging.IMessageChannel).ConvertSendAndReceive(Of T)(Steeltoe.Messaging.IMessageChannel, System.Object)
  name.vb: ConvertSendAndReceive(Of T)(IMessageChannel, Object)
  spec.csharp:
  - uid: Steeltoe.Messaging.Core.AbstractMessagingTemplate`1.ConvertSendAndReceive``1(`0,System.Object)
    name: ConvertSendAndReceive<T>
    nameWithType: AbstractMessagingTemplate<IMessageChannel>.ConvertSendAndReceive<T>
    fullName: Steeltoe.Messaging.Core.AbstractMessagingTemplate<Steeltoe.Messaging.IMessageChannel>.ConvertSendAndReceive<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.IMessageChannel
    name: IMessageChannel
    nameWithType: IMessageChannel
    fullName: Steeltoe.Messaging.IMessageChannel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Core.AbstractMessagingTemplate`1.ConvertSendAndReceive``1(`0,System.Object)
    name: ConvertSendAndReceive(Of T)
    nameWithType: AbstractMessagingTemplate(Of IMessageChannel).ConvertSendAndReceive(Of T)
    fullName: Steeltoe.Messaging.Core.AbstractMessagingTemplate(Of Steeltoe.Messaging.IMessageChannel).ConvertSendAndReceive(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.IMessageChannel
    name: IMessageChannel
    nameWithType: IMessageChannel
    fullName: Steeltoe.Messaging.IMessageChannel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Core.AbstractMessagingTemplate{Steeltoe.Messaging.IMessageChannel}.ConvertSendAndReceive``1(Steeltoe.Messaging.IMessageChannel,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object})
  commentId: M:Steeltoe.Messaging.Core.AbstractMessagingTemplate{Steeltoe.Messaging.IMessageChannel}.ConvertSendAndReceive``1(Steeltoe.Messaging.IMessageChannel,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object})
  parent: Steeltoe.Messaging.Core.AbstractMessagingTemplate{Steeltoe.Messaging.IMessageChannel}
  definition: Steeltoe.Messaging.Core.AbstractMessagingTemplate`1.ConvertSendAndReceive``1(`0,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object})
  name: ConvertSendAndReceive<T>(IMessageChannel, Object, IDictionary<String, Object>)
  nameWithType: AbstractMessagingTemplate<IMessageChannel>.ConvertSendAndReceive<T>(IMessageChannel, Object, IDictionary<String, Object>)
  fullName: Steeltoe.Messaging.Core.AbstractMessagingTemplate<Steeltoe.Messaging.IMessageChannel>.ConvertSendAndReceive<T>(Steeltoe.Messaging.IMessageChannel, System.Object, System.Collections.Generic.IDictionary<System.String, System.Object>)
  nameWithType.vb: AbstractMessagingTemplate(Of IMessageChannel).ConvertSendAndReceive(Of T)(IMessageChannel, Object, IDictionary(Of String, Object))
  fullName.vb: Steeltoe.Messaging.Core.AbstractMessagingTemplate(Of Steeltoe.Messaging.IMessageChannel).ConvertSendAndReceive(Of T)(Steeltoe.Messaging.IMessageChannel, System.Object, System.Collections.Generic.IDictionary(Of System.String, System.Object))
  name.vb: ConvertSendAndReceive(Of T)(IMessageChannel, Object, IDictionary(Of String, Object))
  spec.csharp:
  - uid: Steeltoe.Messaging.Core.AbstractMessagingTemplate`1.ConvertSendAndReceive``1(`0,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object})
    name: ConvertSendAndReceive<T>
    nameWithType: AbstractMessagingTemplate<IMessageChannel>.ConvertSendAndReceive<T>
    fullName: Steeltoe.Messaging.Core.AbstractMessagingTemplate<Steeltoe.Messaging.IMessageChannel>.ConvertSendAndReceive<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.IMessageChannel
    name: IMessageChannel
    nameWithType: IMessageChannel
    fullName: Steeltoe.Messaging.IMessageChannel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Core.AbstractMessagingTemplate`1.ConvertSendAndReceive``1(`0,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object})
    name: ConvertSendAndReceive(Of T)
    nameWithType: AbstractMessagingTemplate(Of IMessageChannel).ConvertSendAndReceive(Of T)
    fullName: Steeltoe.Messaging.Core.AbstractMessagingTemplate(Of Steeltoe.Messaging.IMessageChannel).ConvertSendAndReceive(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.IMessageChannel
    name: IMessageChannel
    nameWithType: IMessageChannel
    fullName: Steeltoe.Messaging.IMessageChannel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Core.AbstractMessagingTemplate{Steeltoe.Messaging.IMessageChannel}.ConvertSendAndReceive``1(System.Object,Steeltoe.Messaging.Core.IMessagePostProcessor)
  commentId: M:Steeltoe.Messaging.Core.AbstractMessagingTemplate{Steeltoe.Messaging.IMessageChannel}.ConvertSendAndReceive``1(System.Object,Steeltoe.Messaging.Core.IMessagePostProcessor)
  parent: Steeltoe.Messaging.Core.AbstractMessagingTemplate{Steeltoe.Messaging.IMessageChannel}
  definition: Steeltoe.Messaging.Core.AbstractMessagingTemplate`1.ConvertSendAndReceive``1(System.Object,Steeltoe.Messaging.Core.IMessagePostProcessor)
  name: ConvertSendAndReceive<T>(Object, IMessagePostProcessor)
  nameWithType: AbstractMessagingTemplate<IMessageChannel>.ConvertSendAndReceive<T>(Object, IMessagePostProcessor)
  fullName: Steeltoe.Messaging.Core.AbstractMessagingTemplate<Steeltoe.Messaging.IMessageChannel>.ConvertSendAndReceive<T>(System.Object, Steeltoe.Messaging.Core.IMessagePostProcessor)
  nameWithType.vb: AbstractMessagingTemplate(Of IMessageChannel).ConvertSendAndReceive(Of T)(Object, IMessagePostProcessor)
  fullName.vb: Steeltoe.Messaging.Core.AbstractMessagingTemplate(Of Steeltoe.Messaging.IMessageChannel).ConvertSendAndReceive(Of T)(System.Object, Steeltoe.Messaging.Core.IMessagePostProcessor)
  name.vb: ConvertSendAndReceive(Of T)(Object, IMessagePostProcessor)
  spec.csharp:
  - uid: Steeltoe.Messaging.Core.AbstractMessagingTemplate`1.ConvertSendAndReceive``1(System.Object,Steeltoe.Messaging.Core.IMessagePostProcessor)
    name: ConvertSendAndReceive<T>
    nameWithType: AbstractMessagingTemplate<IMessageChannel>.ConvertSendAndReceive<T>
    fullName: Steeltoe.Messaging.Core.AbstractMessagingTemplate<Steeltoe.Messaging.IMessageChannel>.ConvertSendAndReceive<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.Core.IMessagePostProcessor
    name: IMessagePostProcessor
    nameWithType: IMessagePostProcessor
    fullName: Steeltoe.Messaging.Core.IMessagePostProcessor
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Core.AbstractMessagingTemplate`1.ConvertSendAndReceive``1(System.Object,Steeltoe.Messaging.Core.IMessagePostProcessor)
    name: ConvertSendAndReceive(Of T)
    nameWithType: AbstractMessagingTemplate(Of IMessageChannel).ConvertSendAndReceive(Of T)
    fullName: Steeltoe.Messaging.Core.AbstractMessagingTemplate(Of Steeltoe.Messaging.IMessageChannel).ConvertSendAndReceive(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.Core.IMessagePostProcessor
    name: IMessagePostProcessor
    nameWithType: IMessagePostProcessor
    fullName: Steeltoe.Messaging.Core.IMessagePostProcessor
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Core.AbstractMessagingTemplate{Steeltoe.Messaging.IMessageChannel}.ConvertSendAndReceive``1(Steeltoe.Messaging.IMessageChannel,System.Object,Steeltoe.Messaging.Core.IMessagePostProcessor)
  commentId: M:Steeltoe.Messaging.Core.AbstractMessagingTemplate{Steeltoe.Messaging.IMessageChannel}.ConvertSendAndReceive``1(Steeltoe.Messaging.IMessageChannel,System.Object,Steeltoe.Messaging.Core.IMessagePostProcessor)
  parent: Steeltoe.Messaging.Core.AbstractMessagingTemplate{Steeltoe.Messaging.IMessageChannel}
  definition: Steeltoe.Messaging.Core.AbstractMessagingTemplate`1.ConvertSendAndReceive``1(`0,System.Object,Steeltoe.Messaging.Core.IMessagePostProcessor)
  name: ConvertSendAndReceive<T>(IMessageChannel, Object, IMessagePostProcessor)
  nameWithType: AbstractMessagingTemplate<IMessageChannel>.ConvertSendAndReceive<T>(IMessageChannel, Object, IMessagePostProcessor)
  fullName: Steeltoe.Messaging.Core.AbstractMessagingTemplate<Steeltoe.Messaging.IMessageChannel>.ConvertSendAndReceive<T>(Steeltoe.Messaging.IMessageChannel, System.Object, Steeltoe.Messaging.Core.IMessagePostProcessor)
  nameWithType.vb: AbstractMessagingTemplate(Of IMessageChannel).ConvertSendAndReceive(Of T)(IMessageChannel, Object, IMessagePostProcessor)
  fullName.vb: Steeltoe.Messaging.Core.AbstractMessagingTemplate(Of Steeltoe.Messaging.IMessageChannel).ConvertSendAndReceive(Of T)(Steeltoe.Messaging.IMessageChannel, System.Object, Steeltoe.Messaging.Core.IMessagePostProcessor)
  name.vb: ConvertSendAndReceive(Of T)(IMessageChannel, Object, IMessagePostProcessor)
  spec.csharp:
  - uid: Steeltoe.Messaging.Core.AbstractMessagingTemplate`1.ConvertSendAndReceive``1(`0,System.Object,Steeltoe.Messaging.Core.IMessagePostProcessor)
    name: ConvertSendAndReceive<T>
    nameWithType: AbstractMessagingTemplate<IMessageChannel>.ConvertSendAndReceive<T>
    fullName: Steeltoe.Messaging.Core.AbstractMessagingTemplate<Steeltoe.Messaging.IMessageChannel>.ConvertSendAndReceive<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.IMessageChannel
    name: IMessageChannel
    nameWithType: IMessageChannel
    fullName: Steeltoe.Messaging.IMessageChannel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.Core.IMessagePostProcessor
    name: IMessagePostProcessor
    nameWithType: IMessagePostProcessor
    fullName: Steeltoe.Messaging.Core.IMessagePostProcessor
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Core.AbstractMessagingTemplate`1.ConvertSendAndReceive``1(`0,System.Object,Steeltoe.Messaging.Core.IMessagePostProcessor)
    name: ConvertSendAndReceive(Of T)
    nameWithType: AbstractMessagingTemplate(Of IMessageChannel).ConvertSendAndReceive(Of T)
    fullName: Steeltoe.Messaging.Core.AbstractMessagingTemplate(Of Steeltoe.Messaging.IMessageChannel).ConvertSendAndReceive(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.IMessageChannel
    name: IMessageChannel
    nameWithType: IMessageChannel
    fullName: Steeltoe.Messaging.IMessageChannel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.Core.IMessagePostProcessor
    name: IMessagePostProcessor
    nameWithType: IMessagePostProcessor
    fullName: Steeltoe.Messaging.Core.IMessagePostProcessor
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Core.AbstractMessagingTemplate{Steeltoe.Messaging.IMessageChannel}.ConvertSendAndReceive``1(Steeltoe.Messaging.IMessageChannel,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object},Steeltoe.Messaging.Core.IMessagePostProcessor)
  commentId: M:Steeltoe.Messaging.Core.AbstractMessagingTemplate{Steeltoe.Messaging.IMessageChannel}.ConvertSendAndReceive``1(Steeltoe.Messaging.IMessageChannel,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object},Steeltoe.Messaging.Core.IMessagePostProcessor)
  parent: Steeltoe.Messaging.Core.AbstractMessagingTemplate{Steeltoe.Messaging.IMessageChannel}
  definition: Steeltoe.Messaging.Core.AbstractMessagingTemplate`1.ConvertSendAndReceive``1(`0,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object},Steeltoe.Messaging.Core.IMessagePostProcessor)
  name: ConvertSendAndReceive<T>(IMessageChannel, Object, IDictionary<String, Object>, IMessagePostProcessor)
  nameWithType: AbstractMessagingTemplate<IMessageChannel>.ConvertSendAndReceive<T>(IMessageChannel, Object, IDictionary<String, Object>, IMessagePostProcessor)
  fullName: Steeltoe.Messaging.Core.AbstractMessagingTemplate<Steeltoe.Messaging.IMessageChannel>.ConvertSendAndReceive<T>(Steeltoe.Messaging.IMessageChannel, System.Object, System.Collections.Generic.IDictionary<System.String, System.Object>, Steeltoe.Messaging.Core.IMessagePostProcessor)
  nameWithType.vb: AbstractMessagingTemplate(Of IMessageChannel).ConvertSendAndReceive(Of T)(IMessageChannel, Object, IDictionary(Of String, Object), IMessagePostProcessor)
  fullName.vb: Steeltoe.Messaging.Core.AbstractMessagingTemplate(Of Steeltoe.Messaging.IMessageChannel).ConvertSendAndReceive(Of T)(Steeltoe.Messaging.IMessageChannel, System.Object, System.Collections.Generic.IDictionary(Of System.String, System.Object), Steeltoe.Messaging.Core.IMessagePostProcessor)
  name.vb: ConvertSendAndReceive(Of T)(IMessageChannel, Object, IDictionary(Of String, Object), IMessagePostProcessor)
  spec.csharp:
  - uid: Steeltoe.Messaging.Core.AbstractMessagingTemplate`1.ConvertSendAndReceive``1(`0,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object},Steeltoe.Messaging.Core.IMessagePostProcessor)
    name: ConvertSendAndReceive<T>
    nameWithType: AbstractMessagingTemplate<IMessageChannel>.ConvertSendAndReceive<T>
    fullName: Steeltoe.Messaging.Core.AbstractMessagingTemplate<Steeltoe.Messaging.IMessageChannel>.ConvertSendAndReceive<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.IMessageChannel
    name: IMessageChannel
    nameWithType: IMessageChannel
    fullName: Steeltoe.Messaging.IMessageChannel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.Core.IMessagePostProcessor
    name: IMessagePostProcessor
    nameWithType: IMessagePostProcessor
    fullName: Steeltoe.Messaging.Core.IMessagePostProcessor
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Core.AbstractMessagingTemplate`1.ConvertSendAndReceive``1(`0,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object},Steeltoe.Messaging.Core.IMessagePostProcessor)
    name: ConvertSendAndReceive(Of T)
    nameWithType: AbstractMessagingTemplate(Of IMessageChannel).ConvertSendAndReceive(Of T)
    fullName: Steeltoe.Messaging.Core.AbstractMessagingTemplate(Of Steeltoe.Messaging.IMessageChannel).ConvertSendAndReceive(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.IMessageChannel
    name: IMessageChannel
    nameWithType: IMessageChannel
    fullName: Steeltoe.Messaging.IMessageChannel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.Core.IMessagePostProcessor
    name: IMessagePostProcessor
    nameWithType: IMessagePostProcessor
    fullName: Steeltoe.Messaging.Core.IMessagePostProcessor
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Core.AbstractMessagingTemplate{Steeltoe.Messaging.IMessageChannel}.SendAndReceive(Steeltoe.Messaging.IMessage)
  commentId: M:Steeltoe.Messaging.Core.AbstractMessagingTemplate{Steeltoe.Messaging.IMessageChannel}.SendAndReceive(Steeltoe.Messaging.IMessage)
  parent: Steeltoe.Messaging.Core.AbstractMessagingTemplate{Steeltoe.Messaging.IMessageChannel}
  definition: Steeltoe.Messaging.Core.AbstractMessagingTemplate`1.SendAndReceive(Steeltoe.Messaging.IMessage)
  name: SendAndReceive(IMessage)
  nameWithType: AbstractMessagingTemplate<IMessageChannel>.SendAndReceive(IMessage)
  fullName: Steeltoe.Messaging.Core.AbstractMessagingTemplate<Steeltoe.Messaging.IMessageChannel>.SendAndReceive(Steeltoe.Messaging.IMessage)
  nameWithType.vb: AbstractMessagingTemplate(Of IMessageChannel).SendAndReceive(IMessage)
  fullName.vb: Steeltoe.Messaging.Core.AbstractMessagingTemplate(Of Steeltoe.Messaging.IMessageChannel).SendAndReceive(Steeltoe.Messaging.IMessage)
  spec.csharp:
  - uid: Steeltoe.Messaging.Core.AbstractMessagingTemplate`1.SendAndReceive(Steeltoe.Messaging.IMessage)
    name: SendAndReceive
    nameWithType: AbstractMessagingTemplate<IMessageChannel>.SendAndReceive
    fullName: Steeltoe.Messaging.Core.AbstractMessagingTemplate<Steeltoe.Messaging.IMessageChannel>.SendAndReceive
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Core.AbstractMessagingTemplate`1.SendAndReceive(Steeltoe.Messaging.IMessage)
    name: SendAndReceive
    nameWithType: AbstractMessagingTemplate(Of IMessageChannel).SendAndReceive
    fullName: Steeltoe.Messaging.Core.AbstractMessagingTemplate(Of Steeltoe.Messaging.IMessageChannel).SendAndReceive
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Core.AbstractMessagingTemplate{Steeltoe.Messaging.IMessageChannel}.SendAndReceive(Steeltoe.Messaging.IMessageChannel,Steeltoe.Messaging.IMessage)
  commentId: M:Steeltoe.Messaging.Core.AbstractMessagingTemplate{Steeltoe.Messaging.IMessageChannel}.SendAndReceive(Steeltoe.Messaging.IMessageChannel,Steeltoe.Messaging.IMessage)
  parent: Steeltoe.Messaging.Core.AbstractMessagingTemplate{Steeltoe.Messaging.IMessageChannel}
  definition: Steeltoe.Messaging.Core.AbstractMessagingTemplate`1.SendAndReceive(`0,Steeltoe.Messaging.IMessage)
  name: SendAndReceive(IMessageChannel, IMessage)
  nameWithType: AbstractMessagingTemplate<IMessageChannel>.SendAndReceive(IMessageChannel, IMessage)
  fullName: Steeltoe.Messaging.Core.AbstractMessagingTemplate<Steeltoe.Messaging.IMessageChannel>.SendAndReceive(Steeltoe.Messaging.IMessageChannel, Steeltoe.Messaging.IMessage)
  nameWithType.vb: AbstractMessagingTemplate(Of IMessageChannel).SendAndReceive(IMessageChannel, IMessage)
  fullName.vb: Steeltoe.Messaging.Core.AbstractMessagingTemplate(Of Steeltoe.Messaging.IMessageChannel).SendAndReceive(Steeltoe.Messaging.IMessageChannel, Steeltoe.Messaging.IMessage)
  spec.csharp:
  - uid: Steeltoe.Messaging.Core.AbstractMessagingTemplate`1.SendAndReceive(`0,Steeltoe.Messaging.IMessage)
    name: SendAndReceive
    nameWithType: AbstractMessagingTemplate<IMessageChannel>.SendAndReceive
    fullName: Steeltoe.Messaging.Core.AbstractMessagingTemplate<Steeltoe.Messaging.IMessageChannel>.SendAndReceive
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.IMessageChannel
    name: IMessageChannel
    nameWithType: IMessageChannel
    fullName: Steeltoe.Messaging.IMessageChannel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Core.AbstractMessagingTemplate`1.SendAndReceive(`0,Steeltoe.Messaging.IMessage)
    name: SendAndReceive
    nameWithType: AbstractMessagingTemplate(Of IMessageChannel).SendAndReceive
    fullName: Steeltoe.Messaging.Core.AbstractMessagingTemplate(Of Steeltoe.Messaging.IMessageChannel).SendAndReceive
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.IMessageChannel
    name: IMessageChannel
    nameWithType: IMessageChannel
    fullName: Steeltoe.Messaging.IMessageChannel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate{Steeltoe.Messaging.IMessageChannel}.DefaultReceiveDestination
  commentId: P:Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate{Steeltoe.Messaging.IMessageChannel}.DefaultReceiveDestination
  parent: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate{Steeltoe.Messaging.IMessageChannel}
  definition: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate`1.DefaultReceiveDestination
  name: DefaultReceiveDestination
  nameWithType: AbstractMessageReceivingTemplate<IMessageChannel>.DefaultReceiveDestination
  fullName: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate<Steeltoe.Messaging.IMessageChannel>.DefaultReceiveDestination
  nameWithType.vb: AbstractMessageReceivingTemplate(Of IMessageChannel).DefaultReceiveDestination
  fullName.vb: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate(Of Steeltoe.Messaging.IMessageChannel).DefaultReceiveDestination
- uid: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate{Steeltoe.Messaging.IMessageChannel}.ThrowReceivedExceptions
  commentId: P:Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate{Steeltoe.Messaging.IMessageChannel}.ThrowReceivedExceptions
  parent: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate{Steeltoe.Messaging.IMessageChannel}
  definition: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate`1.ThrowReceivedExceptions
  name: ThrowReceivedExceptions
  nameWithType: AbstractMessageReceivingTemplate<IMessageChannel>.ThrowReceivedExceptions
  fullName: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate<Steeltoe.Messaging.IMessageChannel>.ThrowReceivedExceptions
  nameWithType.vb: AbstractMessageReceivingTemplate(Of IMessageChannel).ThrowReceivedExceptions
  fullName.vb: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate(Of Steeltoe.Messaging.IMessageChannel).ThrowReceivedExceptions
- uid: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate{Steeltoe.Messaging.IMessageChannel}.ReceiveAsync(System.Threading.CancellationToken)
  commentId: M:Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate{Steeltoe.Messaging.IMessageChannel}.ReceiveAsync(System.Threading.CancellationToken)
  parent: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate{Steeltoe.Messaging.IMessageChannel}
  definition: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate`1.ReceiveAsync(System.Threading.CancellationToken)
  name: ReceiveAsync(CancellationToken)
  nameWithType: AbstractMessageReceivingTemplate<IMessageChannel>.ReceiveAsync(CancellationToken)
  fullName: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate<Steeltoe.Messaging.IMessageChannel>.ReceiveAsync(System.Threading.CancellationToken)
  nameWithType.vb: AbstractMessageReceivingTemplate(Of IMessageChannel).ReceiveAsync(CancellationToken)
  fullName.vb: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate(Of Steeltoe.Messaging.IMessageChannel).ReceiveAsync(System.Threading.CancellationToken)
  spec.csharp:
  - uid: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate`1.ReceiveAsync(System.Threading.CancellationToken)
    name: ReceiveAsync
    nameWithType: AbstractMessageReceivingTemplate<IMessageChannel>.ReceiveAsync
    fullName: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate<Steeltoe.Messaging.IMessageChannel>.ReceiveAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate`1.ReceiveAsync(System.Threading.CancellationToken)
    name: ReceiveAsync
    nameWithType: AbstractMessageReceivingTemplate(Of IMessageChannel).ReceiveAsync
    fullName: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate(Of Steeltoe.Messaging.IMessageChannel).ReceiveAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate{Steeltoe.Messaging.IMessageChannel}.ReceiveAsync(Steeltoe.Messaging.IMessageChannel,System.Threading.CancellationToken)
  commentId: M:Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate{Steeltoe.Messaging.IMessageChannel}.ReceiveAsync(Steeltoe.Messaging.IMessageChannel,System.Threading.CancellationToken)
  parent: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate{Steeltoe.Messaging.IMessageChannel}
  definition: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate`1.ReceiveAsync(`0,System.Threading.CancellationToken)
  name: ReceiveAsync(IMessageChannel, CancellationToken)
  nameWithType: AbstractMessageReceivingTemplate<IMessageChannel>.ReceiveAsync(IMessageChannel, CancellationToken)
  fullName: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate<Steeltoe.Messaging.IMessageChannel>.ReceiveAsync(Steeltoe.Messaging.IMessageChannel, System.Threading.CancellationToken)
  nameWithType.vb: AbstractMessageReceivingTemplate(Of IMessageChannel).ReceiveAsync(IMessageChannel, CancellationToken)
  fullName.vb: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate(Of Steeltoe.Messaging.IMessageChannel).ReceiveAsync(Steeltoe.Messaging.IMessageChannel, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate`1.ReceiveAsync(`0,System.Threading.CancellationToken)
    name: ReceiveAsync
    nameWithType: AbstractMessageReceivingTemplate<IMessageChannel>.ReceiveAsync
    fullName: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate<Steeltoe.Messaging.IMessageChannel>.ReceiveAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.IMessageChannel
    name: IMessageChannel
    nameWithType: IMessageChannel
    fullName: Steeltoe.Messaging.IMessageChannel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate`1.ReceiveAsync(`0,System.Threading.CancellationToken)
    name: ReceiveAsync
    nameWithType: AbstractMessageReceivingTemplate(Of IMessageChannel).ReceiveAsync
    fullName: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate(Of Steeltoe.Messaging.IMessageChannel).ReceiveAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.IMessageChannel
    name: IMessageChannel
    nameWithType: IMessageChannel
    fullName: Steeltoe.Messaging.IMessageChannel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate{Steeltoe.Messaging.IMessageChannel}.ReceiveAndConvertAsync``1(System.Threading.CancellationToken)
  commentId: M:Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate{Steeltoe.Messaging.IMessageChannel}.ReceiveAndConvertAsync``1(System.Threading.CancellationToken)
  parent: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate{Steeltoe.Messaging.IMessageChannel}
  definition: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate`1.ReceiveAndConvertAsync``1(System.Threading.CancellationToken)
  name: ReceiveAndConvertAsync<T>(CancellationToken)
  nameWithType: AbstractMessageReceivingTemplate<IMessageChannel>.ReceiveAndConvertAsync<T>(CancellationToken)
  fullName: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate<Steeltoe.Messaging.IMessageChannel>.ReceiveAndConvertAsync<T>(System.Threading.CancellationToken)
  nameWithType.vb: AbstractMessageReceivingTemplate(Of IMessageChannel).ReceiveAndConvertAsync(Of T)(CancellationToken)
  fullName.vb: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate(Of Steeltoe.Messaging.IMessageChannel).ReceiveAndConvertAsync(Of T)(System.Threading.CancellationToken)
  name.vb: ReceiveAndConvertAsync(Of T)(CancellationToken)
  spec.csharp:
  - uid: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate`1.ReceiveAndConvertAsync``1(System.Threading.CancellationToken)
    name: ReceiveAndConvertAsync<T>
    nameWithType: AbstractMessageReceivingTemplate<IMessageChannel>.ReceiveAndConvertAsync<T>
    fullName: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate<Steeltoe.Messaging.IMessageChannel>.ReceiveAndConvertAsync<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate`1.ReceiveAndConvertAsync``1(System.Threading.CancellationToken)
    name: ReceiveAndConvertAsync(Of T)
    nameWithType: AbstractMessageReceivingTemplate(Of IMessageChannel).ReceiveAndConvertAsync(Of T)
    fullName: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate(Of Steeltoe.Messaging.IMessageChannel).ReceiveAndConvertAsync(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate{Steeltoe.Messaging.IMessageChannel}.ReceiveAndConvertAsync``1(Steeltoe.Messaging.IMessageChannel,System.Threading.CancellationToken)
  commentId: M:Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate{Steeltoe.Messaging.IMessageChannel}.ReceiveAndConvertAsync``1(Steeltoe.Messaging.IMessageChannel,System.Threading.CancellationToken)
  parent: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate{Steeltoe.Messaging.IMessageChannel}
  definition: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate`1.ReceiveAndConvertAsync``1(`0,System.Threading.CancellationToken)
  name: ReceiveAndConvertAsync<T>(IMessageChannel, CancellationToken)
  nameWithType: AbstractMessageReceivingTemplate<IMessageChannel>.ReceiveAndConvertAsync<T>(IMessageChannel, CancellationToken)
  fullName: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate<Steeltoe.Messaging.IMessageChannel>.ReceiveAndConvertAsync<T>(Steeltoe.Messaging.IMessageChannel, System.Threading.CancellationToken)
  nameWithType.vb: AbstractMessageReceivingTemplate(Of IMessageChannel).ReceiveAndConvertAsync(Of T)(IMessageChannel, CancellationToken)
  fullName.vb: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate(Of Steeltoe.Messaging.IMessageChannel).ReceiveAndConvertAsync(Of T)(Steeltoe.Messaging.IMessageChannel, System.Threading.CancellationToken)
  name.vb: ReceiveAndConvertAsync(Of T)(IMessageChannel, CancellationToken)
  spec.csharp:
  - uid: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate`1.ReceiveAndConvertAsync``1(`0,System.Threading.CancellationToken)
    name: ReceiveAndConvertAsync<T>
    nameWithType: AbstractMessageReceivingTemplate<IMessageChannel>.ReceiveAndConvertAsync<T>
    fullName: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate<Steeltoe.Messaging.IMessageChannel>.ReceiveAndConvertAsync<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.IMessageChannel
    name: IMessageChannel
    nameWithType: IMessageChannel
    fullName: Steeltoe.Messaging.IMessageChannel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate`1.ReceiveAndConvertAsync``1(`0,System.Threading.CancellationToken)
    name: ReceiveAndConvertAsync(Of T)
    nameWithType: AbstractMessageReceivingTemplate(Of IMessageChannel).ReceiveAndConvertAsync(Of T)
    fullName: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate(Of Steeltoe.Messaging.IMessageChannel).ReceiveAndConvertAsync(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.IMessageChannel
    name: IMessageChannel
    nameWithType: IMessageChannel
    fullName: Steeltoe.Messaging.IMessageChannel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate{Steeltoe.Messaging.IMessageChannel}.Receive
  commentId: M:Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate{Steeltoe.Messaging.IMessageChannel}.Receive
  parent: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate{Steeltoe.Messaging.IMessageChannel}
  definition: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate`1.Receive
  name: Receive()
  nameWithType: AbstractMessageReceivingTemplate<IMessageChannel>.Receive()
  fullName: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate<Steeltoe.Messaging.IMessageChannel>.Receive()
  nameWithType.vb: AbstractMessageReceivingTemplate(Of IMessageChannel).Receive()
  fullName.vb: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate(Of Steeltoe.Messaging.IMessageChannel).Receive()
  spec.csharp:
  - uid: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate`1.Receive
    name: Receive
    nameWithType: AbstractMessageReceivingTemplate<IMessageChannel>.Receive
    fullName: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate<Steeltoe.Messaging.IMessageChannel>.Receive
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate`1.Receive
    name: Receive
    nameWithType: AbstractMessageReceivingTemplate(Of IMessageChannel).Receive
    fullName: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate(Of Steeltoe.Messaging.IMessageChannel).Receive
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate{Steeltoe.Messaging.IMessageChannel}.Receive(Steeltoe.Messaging.IMessageChannel)
  commentId: M:Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate{Steeltoe.Messaging.IMessageChannel}.Receive(Steeltoe.Messaging.IMessageChannel)
  parent: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate{Steeltoe.Messaging.IMessageChannel}
  definition: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate`1.Receive(`0)
  name: Receive(IMessageChannel)
  nameWithType: AbstractMessageReceivingTemplate<IMessageChannel>.Receive(IMessageChannel)
  fullName: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate<Steeltoe.Messaging.IMessageChannel>.Receive(Steeltoe.Messaging.IMessageChannel)
  nameWithType.vb: AbstractMessageReceivingTemplate(Of IMessageChannel).Receive(IMessageChannel)
  fullName.vb: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate(Of Steeltoe.Messaging.IMessageChannel).Receive(Steeltoe.Messaging.IMessageChannel)
  spec.csharp:
  - uid: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate`1.Receive(`0)
    name: Receive
    nameWithType: AbstractMessageReceivingTemplate<IMessageChannel>.Receive
    fullName: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate<Steeltoe.Messaging.IMessageChannel>.Receive
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.IMessageChannel
    name: IMessageChannel
    nameWithType: IMessageChannel
    fullName: Steeltoe.Messaging.IMessageChannel
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate`1.Receive(`0)
    name: Receive
    nameWithType: AbstractMessageReceivingTemplate(Of IMessageChannel).Receive
    fullName: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate(Of Steeltoe.Messaging.IMessageChannel).Receive
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.IMessageChannel
    name: IMessageChannel
    nameWithType: IMessageChannel
    fullName: Steeltoe.Messaging.IMessageChannel
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate{Steeltoe.Messaging.IMessageChannel}.ReceiveAndConvert``1
  commentId: M:Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate{Steeltoe.Messaging.IMessageChannel}.ReceiveAndConvert``1
  parent: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate{Steeltoe.Messaging.IMessageChannel}
  definition: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate`1.ReceiveAndConvert``1
  name: ReceiveAndConvert<T>()
  nameWithType: AbstractMessageReceivingTemplate<IMessageChannel>.ReceiveAndConvert<T>()
  fullName: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate<Steeltoe.Messaging.IMessageChannel>.ReceiveAndConvert<T>()
  nameWithType.vb: AbstractMessageReceivingTemplate(Of IMessageChannel).ReceiveAndConvert(Of T)()
  fullName.vb: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate(Of Steeltoe.Messaging.IMessageChannel).ReceiveAndConvert(Of T)()
  name.vb: ReceiveAndConvert(Of T)()
  spec.csharp:
  - uid: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate`1.ReceiveAndConvert``1
    name: ReceiveAndConvert<T>
    nameWithType: AbstractMessageReceivingTemplate<IMessageChannel>.ReceiveAndConvert<T>
    fullName: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate<Steeltoe.Messaging.IMessageChannel>.ReceiveAndConvert<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate`1.ReceiveAndConvert``1
    name: ReceiveAndConvert(Of T)
    nameWithType: AbstractMessageReceivingTemplate(Of IMessageChannel).ReceiveAndConvert(Of T)
    fullName: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate(Of Steeltoe.Messaging.IMessageChannel).ReceiveAndConvert(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate{Steeltoe.Messaging.IMessageChannel}.ReceiveAndConvert``1(Steeltoe.Messaging.IMessageChannel)
  commentId: M:Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate{Steeltoe.Messaging.IMessageChannel}.ReceiveAndConvert``1(Steeltoe.Messaging.IMessageChannel)
  parent: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate{Steeltoe.Messaging.IMessageChannel}
  definition: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate`1.ReceiveAndConvert``1(`0)
  name: ReceiveAndConvert<T>(IMessageChannel)
  nameWithType: AbstractMessageReceivingTemplate<IMessageChannel>.ReceiveAndConvert<T>(IMessageChannel)
  fullName: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate<Steeltoe.Messaging.IMessageChannel>.ReceiveAndConvert<T>(Steeltoe.Messaging.IMessageChannel)
  nameWithType.vb: AbstractMessageReceivingTemplate(Of IMessageChannel).ReceiveAndConvert(Of T)(IMessageChannel)
  fullName.vb: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate(Of Steeltoe.Messaging.IMessageChannel).ReceiveAndConvert(Of T)(Steeltoe.Messaging.IMessageChannel)
  name.vb: ReceiveAndConvert(Of T)(IMessageChannel)
  spec.csharp:
  - uid: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate`1.ReceiveAndConvert``1(`0)
    name: ReceiveAndConvert<T>
    nameWithType: AbstractMessageReceivingTemplate<IMessageChannel>.ReceiveAndConvert<T>
    fullName: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate<Steeltoe.Messaging.IMessageChannel>.ReceiveAndConvert<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.IMessageChannel
    name: IMessageChannel
    nameWithType: IMessageChannel
    fullName: Steeltoe.Messaging.IMessageChannel
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate`1.ReceiveAndConvert``1(`0)
    name: ReceiveAndConvert(Of T)
    nameWithType: AbstractMessageReceivingTemplate(Of IMessageChannel).ReceiveAndConvert(Of T)
    fullName: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate(Of Steeltoe.Messaging.IMessageChannel).ReceiveAndConvert(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.IMessageChannel
    name: IMessageChannel
    nameWithType: IMessageChannel
    fullName: Steeltoe.Messaging.IMessageChannel
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate{Steeltoe.Messaging.IMessageChannel}.RequiredDefaultReceiveDestination
  commentId: P:Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate{Steeltoe.Messaging.IMessageChannel}.RequiredDefaultReceiveDestination
  parent: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate{Steeltoe.Messaging.IMessageChannel}
  definition: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate`1.RequiredDefaultReceiveDestination
  name: RequiredDefaultReceiveDestination
  nameWithType: AbstractMessageReceivingTemplate<IMessageChannel>.RequiredDefaultReceiveDestination
  fullName: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate<Steeltoe.Messaging.IMessageChannel>.RequiredDefaultReceiveDestination
  nameWithType.vb: AbstractMessageReceivingTemplate(Of IMessageChannel).RequiredDefaultReceiveDestination
  fullName.vb: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate(Of Steeltoe.Messaging.IMessageChannel).RequiredDefaultReceiveDestination
- uid: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate{Steeltoe.Messaging.IMessageChannel}.DoConvert``1(Steeltoe.Messaging.IMessage)
  commentId: M:Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate{Steeltoe.Messaging.IMessageChannel}.DoConvert``1(Steeltoe.Messaging.IMessage)
  parent: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate{Steeltoe.Messaging.IMessageChannel}
  definition: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate`1.DoConvert``1(Steeltoe.Messaging.IMessage)
  name: DoConvert<T>(IMessage)
  nameWithType: AbstractMessageReceivingTemplate<IMessageChannel>.DoConvert<T>(IMessage)
  fullName: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate<Steeltoe.Messaging.IMessageChannel>.DoConvert<T>(Steeltoe.Messaging.IMessage)
  nameWithType.vb: AbstractMessageReceivingTemplate(Of IMessageChannel).DoConvert(Of T)(IMessage)
  fullName.vb: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate(Of Steeltoe.Messaging.IMessageChannel).DoConvert(Of T)(Steeltoe.Messaging.IMessage)
  name.vb: DoConvert(Of T)(IMessage)
  spec.csharp:
  - uid: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate`1.DoConvert``1(Steeltoe.Messaging.IMessage)
    name: DoConvert<T>
    nameWithType: AbstractMessageReceivingTemplate<IMessageChannel>.DoConvert<T>
    fullName: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate<Steeltoe.Messaging.IMessageChannel>.DoConvert<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate`1.DoConvert``1(Steeltoe.Messaging.IMessage)
    name: DoConvert(Of T)
    nameWithType: AbstractMessageReceivingTemplate(Of IMessageChannel).DoConvert(Of T)
    fullName: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate(Of Steeltoe.Messaging.IMessageChannel).DoConvert(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate{Steeltoe.Messaging.IMessageChannel}.CONVERSION_HINT_HEADER
  commentId: F:Steeltoe.Messaging.Core.AbstractMessageSendingTemplate{Steeltoe.Messaging.IMessageChannel}.CONVERSION_HINT_HEADER
  parent: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate{Steeltoe.Messaging.IMessageChannel}
  definition: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.CONVERSION_HINT_HEADER
  name: CONVERSION_HINT_HEADER
  nameWithType: AbstractMessageSendingTemplate<IMessageChannel>.CONVERSION_HINT_HEADER
  fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate<Steeltoe.Messaging.IMessageChannel>.CONVERSION_HINT_HEADER
  nameWithType.vb: AbstractMessageSendingTemplate(Of IMessageChannel).CONVERSION_HINT_HEADER
  fullName.vb: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate(Of Steeltoe.Messaging.IMessageChannel).CONVERSION_HINT_HEADER
- uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate{Steeltoe.Messaging.IMessageChannel}.DefaultSendDestination
  commentId: P:Steeltoe.Messaging.Core.AbstractMessageSendingTemplate{Steeltoe.Messaging.IMessageChannel}.DefaultSendDestination
  parent: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate{Steeltoe.Messaging.IMessageChannel}
  definition: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.DefaultSendDestination
  name: DefaultSendDestination
  nameWithType: AbstractMessageSendingTemplate<IMessageChannel>.DefaultSendDestination
  fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate<Steeltoe.Messaging.IMessageChannel>.DefaultSendDestination
  nameWithType.vb: AbstractMessageSendingTemplate(Of IMessageChannel).DefaultSendDestination
  fullName.vb: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate(Of Steeltoe.Messaging.IMessageChannel).DefaultSendDestination
- uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate{Steeltoe.Messaging.IMessageChannel}.MessageConverter
  commentId: P:Steeltoe.Messaging.Core.AbstractMessageSendingTemplate{Steeltoe.Messaging.IMessageChannel}.MessageConverter
  parent: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate{Steeltoe.Messaging.IMessageChannel}
  definition: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.MessageConverter
  name: MessageConverter
  nameWithType: AbstractMessageSendingTemplate<IMessageChannel>.MessageConverter
  fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate<Steeltoe.Messaging.IMessageChannel>.MessageConverter
  nameWithType.vb: AbstractMessageSendingTemplate(Of IMessageChannel).MessageConverter
  fullName.vb: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate(Of Steeltoe.Messaging.IMessageChannel).MessageConverter
- uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate{Steeltoe.Messaging.IMessageChannel}.ConvertAndSendAsync(System.Object,System.Threading.CancellationToken)
  commentId: M:Steeltoe.Messaging.Core.AbstractMessageSendingTemplate{Steeltoe.Messaging.IMessageChannel}.ConvertAndSendAsync(System.Object,System.Threading.CancellationToken)
  parent: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate{Steeltoe.Messaging.IMessageChannel}
  definition: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.ConvertAndSendAsync(System.Object,System.Threading.CancellationToken)
  name: ConvertAndSendAsync(Object, CancellationToken)
  nameWithType: AbstractMessageSendingTemplate<IMessageChannel>.ConvertAndSendAsync(Object, CancellationToken)
  fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate<Steeltoe.Messaging.IMessageChannel>.ConvertAndSendAsync(System.Object, System.Threading.CancellationToken)
  nameWithType.vb: AbstractMessageSendingTemplate(Of IMessageChannel).ConvertAndSendAsync(Object, CancellationToken)
  fullName.vb: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate(Of Steeltoe.Messaging.IMessageChannel).ConvertAndSendAsync(System.Object, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.ConvertAndSendAsync(System.Object,System.Threading.CancellationToken)
    name: ConvertAndSendAsync
    nameWithType: AbstractMessageSendingTemplate<IMessageChannel>.ConvertAndSendAsync
    fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate<Steeltoe.Messaging.IMessageChannel>.ConvertAndSendAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.ConvertAndSendAsync(System.Object,System.Threading.CancellationToken)
    name: ConvertAndSendAsync
    nameWithType: AbstractMessageSendingTemplate(Of IMessageChannel).ConvertAndSendAsync
    fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate(Of Steeltoe.Messaging.IMessageChannel).ConvertAndSendAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate{Steeltoe.Messaging.IMessageChannel}.ConvertAndSendAsync(Steeltoe.Messaging.IMessageChannel,System.Object,System.Threading.CancellationToken)
  commentId: M:Steeltoe.Messaging.Core.AbstractMessageSendingTemplate{Steeltoe.Messaging.IMessageChannel}.ConvertAndSendAsync(Steeltoe.Messaging.IMessageChannel,System.Object,System.Threading.CancellationToken)
  parent: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate{Steeltoe.Messaging.IMessageChannel}
  definition: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.ConvertAndSendAsync(`0,System.Object,System.Threading.CancellationToken)
  name: ConvertAndSendAsync(IMessageChannel, Object, CancellationToken)
  nameWithType: AbstractMessageSendingTemplate<IMessageChannel>.ConvertAndSendAsync(IMessageChannel, Object, CancellationToken)
  fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate<Steeltoe.Messaging.IMessageChannel>.ConvertAndSendAsync(Steeltoe.Messaging.IMessageChannel, System.Object, System.Threading.CancellationToken)
  nameWithType.vb: AbstractMessageSendingTemplate(Of IMessageChannel).ConvertAndSendAsync(IMessageChannel, Object, CancellationToken)
  fullName.vb: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate(Of Steeltoe.Messaging.IMessageChannel).ConvertAndSendAsync(Steeltoe.Messaging.IMessageChannel, System.Object, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.ConvertAndSendAsync(`0,System.Object,System.Threading.CancellationToken)
    name: ConvertAndSendAsync
    nameWithType: AbstractMessageSendingTemplate<IMessageChannel>.ConvertAndSendAsync
    fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate<Steeltoe.Messaging.IMessageChannel>.ConvertAndSendAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.IMessageChannel
    name: IMessageChannel
    nameWithType: IMessageChannel
    fullName: Steeltoe.Messaging.IMessageChannel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.ConvertAndSendAsync(`0,System.Object,System.Threading.CancellationToken)
    name: ConvertAndSendAsync
    nameWithType: AbstractMessageSendingTemplate(Of IMessageChannel).ConvertAndSendAsync
    fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate(Of Steeltoe.Messaging.IMessageChannel).ConvertAndSendAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.IMessageChannel
    name: IMessageChannel
    nameWithType: IMessageChannel
    fullName: Steeltoe.Messaging.IMessageChannel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate{Steeltoe.Messaging.IMessageChannel}.ConvertAndSendAsync(Steeltoe.Messaging.IMessageChannel,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object},System.Threading.CancellationToken)
  commentId: M:Steeltoe.Messaging.Core.AbstractMessageSendingTemplate{Steeltoe.Messaging.IMessageChannel}.ConvertAndSendAsync(Steeltoe.Messaging.IMessageChannel,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object},System.Threading.CancellationToken)
  parent: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate{Steeltoe.Messaging.IMessageChannel}
  definition: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.ConvertAndSendAsync(`0,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object},System.Threading.CancellationToken)
  name: ConvertAndSendAsync(IMessageChannel, Object, IDictionary<String, Object>, CancellationToken)
  nameWithType: AbstractMessageSendingTemplate<IMessageChannel>.ConvertAndSendAsync(IMessageChannel, Object, IDictionary<String, Object>, CancellationToken)
  fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate<Steeltoe.Messaging.IMessageChannel>.ConvertAndSendAsync(Steeltoe.Messaging.IMessageChannel, System.Object, System.Collections.Generic.IDictionary<System.String, System.Object>, System.Threading.CancellationToken)
  nameWithType.vb: AbstractMessageSendingTemplate(Of IMessageChannel).ConvertAndSendAsync(IMessageChannel, Object, IDictionary(Of String, Object), CancellationToken)
  fullName.vb: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate(Of Steeltoe.Messaging.IMessageChannel).ConvertAndSendAsync(Steeltoe.Messaging.IMessageChannel, System.Object, System.Collections.Generic.IDictionary(Of System.String, System.Object), System.Threading.CancellationToken)
  name.vb: ConvertAndSendAsync(IMessageChannel, Object, IDictionary(Of String, Object), CancellationToken)
  spec.csharp:
  - uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.ConvertAndSendAsync(`0,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object},System.Threading.CancellationToken)
    name: ConvertAndSendAsync
    nameWithType: AbstractMessageSendingTemplate<IMessageChannel>.ConvertAndSendAsync
    fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate<Steeltoe.Messaging.IMessageChannel>.ConvertAndSendAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.IMessageChannel
    name: IMessageChannel
    nameWithType: IMessageChannel
    fullName: Steeltoe.Messaging.IMessageChannel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.ConvertAndSendAsync(`0,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object},System.Threading.CancellationToken)
    name: ConvertAndSendAsync
    nameWithType: AbstractMessageSendingTemplate(Of IMessageChannel).ConvertAndSendAsync
    fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate(Of Steeltoe.Messaging.IMessageChannel).ConvertAndSendAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.IMessageChannel
    name: IMessageChannel
    nameWithType: IMessageChannel
    fullName: Steeltoe.Messaging.IMessageChannel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate{Steeltoe.Messaging.IMessageChannel}.ConvertAndSendAsync(System.Object,Steeltoe.Messaging.Core.IMessagePostProcessor,System.Threading.CancellationToken)
  commentId: M:Steeltoe.Messaging.Core.AbstractMessageSendingTemplate{Steeltoe.Messaging.IMessageChannel}.ConvertAndSendAsync(System.Object,Steeltoe.Messaging.Core.IMessagePostProcessor,System.Threading.CancellationToken)
  parent: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate{Steeltoe.Messaging.IMessageChannel}
  definition: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.ConvertAndSendAsync(System.Object,Steeltoe.Messaging.Core.IMessagePostProcessor,System.Threading.CancellationToken)
  name: ConvertAndSendAsync(Object, IMessagePostProcessor, CancellationToken)
  nameWithType: AbstractMessageSendingTemplate<IMessageChannel>.ConvertAndSendAsync(Object, IMessagePostProcessor, CancellationToken)
  fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate<Steeltoe.Messaging.IMessageChannel>.ConvertAndSendAsync(System.Object, Steeltoe.Messaging.Core.IMessagePostProcessor, System.Threading.CancellationToken)
  nameWithType.vb: AbstractMessageSendingTemplate(Of IMessageChannel).ConvertAndSendAsync(Object, IMessagePostProcessor, CancellationToken)
  fullName.vb: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate(Of Steeltoe.Messaging.IMessageChannel).ConvertAndSendAsync(System.Object, Steeltoe.Messaging.Core.IMessagePostProcessor, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.ConvertAndSendAsync(System.Object,Steeltoe.Messaging.Core.IMessagePostProcessor,System.Threading.CancellationToken)
    name: ConvertAndSendAsync
    nameWithType: AbstractMessageSendingTemplate<IMessageChannel>.ConvertAndSendAsync
    fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate<Steeltoe.Messaging.IMessageChannel>.ConvertAndSendAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.Core.IMessagePostProcessor
    name: IMessagePostProcessor
    nameWithType: IMessagePostProcessor
    fullName: Steeltoe.Messaging.Core.IMessagePostProcessor
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.ConvertAndSendAsync(System.Object,Steeltoe.Messaging.Core.IMessagePostProcessor,System.Threading.CancellationToken)
    name: ConvertAndSendAsync
    nameWithType: AbstractMessageSendingTemplate(Of IMessageChannel).ConvertAndSendAsync
    fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate(Of Steeltoe.Messaging.IMessageChannel).ConvertAndSendAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.Core.IMessagePostProcessor
    name: IMessagePostProcessor
    nameWithType: IMessagePostProcessor
    fullName: Steeltoe.Messaging.Core.IMessagePostProcessor
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate{Steeltoe.Messaging.IMessageChannel}.ConvertAndSendAsync(Steeltoe.Messaging.IMessageChannel,System.Object,Steeltoe.Messaging.Core.IMessagePostProcessor,System.Threading.CancellationToken)
  commentId: M:Steeltoe.Messaging.Core.AbstractMessageSendingTemplate{Steeltoe.Messaging.IMessageChannel}.ConvertAndSendAsync(Steeltoe.Messaging.IMessageChannel,System.Object,Steeltoe.Messaging.Core.IMessagePostProcessor,System.Threading.CancellationToken)
  parent: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate{Steeltoe.Messaging.IMessageChannel}
  definition: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.ConvertAndSendAsync(`0,System.Object,Steeltoe.Messaging.Core.IMessagePostProcessor,System.Threading.CancellationToken)
  name: ConvertAndSendAsync(IMessageChannel, Object, IMessagePostProcessor, CancellationToken)
  nameWithType: AbstractMessageSendingTemplate<IMessageChannel>.ConvertAndSendAsync(IMessageChannel, Object, IMessagePostProcessor, CancellationToken)
  fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate<Steeltoe.Messaging.IMessageChannel>.ConvertAndSendAsync(Steeltoe.Messaging.IMessageChannel, System.Object, Steeltoe.Messaging.Core.IMessagePostProcessor, System.Threading.CancellationToken)
  nameWithType.vb: AbstractMessageSendingTemplate(Of IMessageChannel).ConvertAndSendAsync(IMessageChannel, Object, IMessagePostProcessor, CancellationToken)
  fullName.vb: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate(Of Steeltoe.Messaging.IMessageChannel).ConvertAndSendAsync(Steeltoe.Messaging.IMessageChannel, System.Object, Steeltoe.Messaging.Core.IMessagePostProcessor, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.ConvertAndSendAsync(`0,System.Object,Steeltoe.Messaging.Core.IMessagePostProcessor,System.Threading.CancellationToken)
    name: ConvertAndSendAsync
    nameWithType: AbstractMessageSendingTemplate<IMessageChannel>.ConvertAndSendAsync
    fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate<Steeltoe.Messaging.IMessageChannel>.ConvertAndSendAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.IMessageChannel
    name: IMessageChannel
    nameWithType: IMessageChannel
    fullName: Steeltoe.Messaging.IMessageChannel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.Core.IMessagePostProcessor
    name: IMessagePostProcessor
    nameWithType: IMessagePostProcessor
    fullName: Steeltoe.Messaging.Core.IMessagePostProcessor
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.ConvertAndSendAsync(`0,System.Object,Steeltoe.Messaging.Core.IMessagePostProcessor,System.Threading.CancellationToken)
    name: ConvertAndSendAsync
    nameWithType: AbstractMessageSendingTemplate(Of IMessageChannel).ConvertAndSendAsync
    fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate(Of Steeltoe.Messaging.IMessageChannel).ConvertAndSendAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.IMessageChannel
    name: IMessageChannel
    nameWithType: IMessageChannel
    fullName: Steeltoe.Messaging.IMessageChannel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.Core.IMessagePostProcessor
    name: IMessagePostProcessor
    nameWithType: IMessagePostProcessor
    fullName: Steeltoe.Messaging.Core.IMessagePostProcessor
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate{Steeltoe.Messaging.IMessageChannel}.ConvertAndSendAsync(Steeltoe.Messaging.IMessageChannel,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object},Steeltoe.Messaging.Core.IMessagePostProcessor,System.Threading.CancellationToken)
  commentId: M:Steeltoe.Messaging.Core.AbstractMessageSendingTemplate{Steeltoe.Messaging.IMessageChannel}.ConvertAndSendAsync(Steeltoe.Messaging.IMessageChannel,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object},Steeltoe.Messaging.Core.IMessagePostProcessor,System.Threading.CancellationToken)
  parent: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate{Steeltoe.Messaging.IMessageChannel}
  definition: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.ConvertAndSendAsync(`0,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object},Steeltoe.Messaging.Core.IMessagePostProcessor,System.Threading.CancellationToken)
  name: ConvertAndSendAsync(IMessageChannel, Object, IDictionary<String, Object>, IMessagePostProcessor, CancellationToken)
  nameWithType: AbstractMessageSendingTemplate<IMessageChannel>.ConvertAndSendAsync(IMessageChannel, Object, IDictionary<String, Object>, IMessagePostProcessor, CancellationToken)
  fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate<Steeltoe.Messaging.IMessageChannel>.ConvertAndSendAsync(Steeltoe.Messaging.IMessageChannel, System.Object, System.Collections.Generic.IDictionary<System.String, System.Object>, Steeltoe.Messaging.Core.IMessagePostProcessor, System.Threading.CancellationToken)
  nameWithType.vb: AbstractMessageSendingTemplate(Of IMessageChannel).ConvertAndSendAsync(IMessageChannel, Object, IDictionary(Of String, Object), IMessagePostProcessor, CancellationToken)
  fullName.vb: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate(Of Steeltoe.Messaging.IMessageChannel).ConvertAndSendAsync(Steeltoe.Messaging.IMessageChannel, System.Object, System.Collections.Generic.IDictionary(Of System.String, System.Object), Steeltoe.Messaging.Core.IMessagePostProcessor, System.Threading.CancellationToken)
  name.vb: ConvertAndSendAsync(IMessageChannel, Object, IDictionary(Of String, Object), IMessagePostProcessor, CancellationToken)
  spec.csharp:
  - uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.ConvertAndSendAsync(`0,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object},Steeltoe.Messaging.Core.IMessagePostProcessor,System.Threading.CancellationToken)
    name: ConvertAndSendAsync
    nameWithType: AbstractMessageSendingTemplate<IMessageChannel>.ConvertAndSendAsync
    fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate<Steeltoe.Messaging.IMessageChannel>.ConvertAndSendAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.IMessageChannel
    name: IMessageChannel
    nameWithType: IMessageChannel
    fullName: Steeltoe.Messaging.IMessageChannel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.Core.IMessagePostProcessor
    name: IMessagePostProcessor
    nameWithType: IMessagePostProcessor
    fullName: Steeltoe.Messaging.Core.IMessagePostProcessor
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.ConvertAndSendAsync(`0,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object},Steeltoe.Messaging.Core.IMessagePostProcessor,System.Threading.CancellationToken)
    name: ConvertAndSendAsync
    nameWithType: AbstractMessageSendingTemplate(Of IMessageChannel).ConvertAndSendAsync
    fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate(Of Steeltoe.Messaging.IMessageChannel).ConvertAndSendAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.IMessageChannel
    name: IMessageChannel
    nameWithType: IMessageChannel
    fullName: Steeltoe.Messaging.IMessageChannel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.Core.IMessagePostProcessor
    name: IMessagePostProcessor
    nameWithType: IMessagePostProcessor
    fullName: Steeltoe.Messaging.Core.IMessagePostProcessor
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate{Steeltoe.Messaging.IMessageChannel}.SendAsync(Steeltoe.Messaging.IMessage,System.Threading.CancellationToken)
  commentId: M:Steeltoe.Messaging.Core.AbstractMessageSendingTemplate{Steeltoe.Messaging.IMessageChannel}.SendAsync(Steeltoe.Messaging.IMessage,System.Threading.CancellationToken)
  parent: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate{Steeltoe.Messaging.IMessageChannel}
  definition: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.SendAsync(Steeltoe.Messaging.IMessage,System.Threading.CancellationToken)
  name: SendAsync(IMessage, CancellationToken)
  nameWithType: AbstractMessageSendingTemplate<IMessageChannel>.SendAsync(IMessage, CancellationToken)
  fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate<Steeltoe.Messaging.IMessageChannel>.SendAsync(Steeltoe.Messaging.IMessage, System.Threading.CancellationToken)
  nameWithType.vb: AbstractMessageSendingTemplate(Of IMessageChannel).SendAsync(IMessage, CancellationToken)
  fullName.vb: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate(Of Steeltoe.Messaging.IMessageChannel).SendAsync(Steeltoe.Messaging.IMessage, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.SendAsync(Steeltoe.Messaging.IMessage,System.Threading.CancellationToken)
    name: SendAsync
    nameWithType: AbstractMessageSendingTemplate<IMessageChannel>.SendAsync
    fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate<Steeltoe.Messaging.IMessageChannel>.SendAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.SendAsync(Steeltoe.Messaging.IMessage,System.Threading.CancellationToken)
    name: SendAsync
    nameWithType: AbstractMessageSendingTemplate(Of IMessageChannel).SendAsync
    fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate(Of Steeltoe.Messaging.IMessageChannel).SendAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate{Steeltoe.Messaging.IMessageChannel}.SendAsync(Steeltoe.Messaging.IMessageChannel,Steeltoe.Messaging.IMessage,System.Threading.CancellationToken)
  commentId: M:Steeltoe.Messaging.Core.AbstractMessageSendingTemplate{Steeltoe.Messaging.IMessageChannel}.SendAsync(Steeltoe.Messaging.IMessageChannel,Steeltoe.Messaging.IMessage,System.Threading.CancellationToken)
  parent: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate{Steeltoe.Messaging.IMessageChannel}
  definition: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.SendAsync(`0,Steeltoe.Messaging.IMessage,System.Threading.CancellationToken)
  name: SendAsync(IMessageChannel, IMessage, CancellationToken)
  nameWithType: AbstractMessageSendingTemplate<IMessageChannel>.SendAsync(IMessageChannel, IMessage, CancellationToken)
  fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate<Steeltoe.Messaging.IMessageChannel>.SendAsync(Steeltoe.Messaging.IMessageChannel, Steeltoe.Messaging.IMessage, System.Threading.CancellationToken)
  nameWithType.vb: AbstractMessageSendingTemplate(Of IMessageChannel).SendAsync(IMessageChannel, IMessage, CancellationToken)
  fullName.vb: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate(Of Steeltoe.Messaging.IMessageChannel).SendAsync(Steeltoe.Messaging.IMessageChannel, Steeltoe.Messaging.IMessage, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.SendAsync(`0,Steeltoe.Messaging.IMessage,System.Threading.CancellationToken)
    name: SendAsync
    nameWithType: AbstractMessageSendingTemplate<IMessageChannel>.SendAsync
    fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate<Steeltoe.Messaging.IMessageChannel>.SendAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.IMessageChannel
    name: IMessageChannel
    nameWithType: IMessageChannel
    fullName: Steeltoe.Messaging.IMessageChannel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.SendAsync(`0,Steeltoe.Messaging.IMessage,System.Threading.CancellationToken)
    name: SendAsync
    nameWithType: AbstractMessageSendingTemplate(Of IMessageChannel).SendAsync
    fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate(Of Steeltoe.Messaging.IMessageChannel).SendAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.IMessageChannel
    name: IMessageChannel
    nameWithType: IMessageChannel
    fullName: Steeltoe.Messaging.IMessageChannel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate{Steeltoe.Messaging.IMessageChannel}.ConvertAndSend(System.Object)
  commentId: M:Steeltoe.Messaging.Core.AbstractMessageSendingTemplate{Steeltoe.Messaging.IMessageChannel}.ConvertAndSend(System.Object)
  parent: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate{Steeltoe.Messaging.IMessageChannel}
  definition: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.ConvertAndSend(System.Object)
  name: ConvertAndSend(Object)
  nameWithType: AbstractMessageSendingTemplate<IMessageChannel>.ConvertAndSend(Object)
  fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate<Steeltoe.Messaging.IMessageChannel>.ConvertAndSend(System.Object)
  nameWithType.vb: AbstractMessageSendingTemplate(Of IMessageChannel).ConvertAndSend(Object)
  fullName.vb: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate(Of Steeltoe.Messaging.IMessageChannel).ConvertAndSend(System.Object)
  spec.csharp:
  - uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.ConvertAndSend(System.Object)
    name: ConvertAndSend
    nameWithType: AbstractMessageSendingTemplate<IMessageChannel>.ConvertAndSend
    fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate<Steeltoe.Messaging.IMessageChannel>.ConvertAndSend
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.ConvertAndSend(System.Object)
    name: ConvertAndSend
    nameWithType: AbstractMessageSendingTemplate(Of IMessageChannel).ConvertAndSend
    fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate(Of Steeltoe.Messaging.IMessageChannel).ConvertAndSend
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate{Steeltoe.Messaging.IMessageChannel}.ConvertAndSend(Steeltoe.Messaging.IMessageChannel,System.Object)
  commentId: M:Steeltoe.Messaging.Core.AbstractMessageSendingTemplate{Steeltoe.Messaging.IMessageChannel}.ConvertAndSend(Steeltoe.Messaging.IMessageChannel,System.Object)
  parent: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate{Steeltoe.Messaging.IMessageChannel}
  definition: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.ConvertAndSend(`0,System.Object)
  name: ConvertAndSend(IMessageChannel, Object)
  nameWithType: AbstractMessageSendingTemplate<IMessageChannel>.ConvertAndSend(IMessageChannel, Object)
  fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate<Steeltoe.Messaging.IMessageChannel>.ConvertAndSend(Steeltoe.Messaging.IMessageChannel, System.Object)
  nameWithType.vb: AbstractMessageSendingTemplate(Of IMessageChannel).ConvertAndSend(IMessageChannel, Object)
  fullName.vb: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate(Of Steeltoe.Messaging.IMessageChannel).ConvertAndSend(Steeltoe.Messaging.IMessageChannel, System.Object)
  spec.csharp:
  - uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.ConvertAndSend(`0,System.Object)
    name: ConvertAndSend
    nameWithType: AbstractMessageSendingTemplate<IMessageChannel>.ConvertAndSend
    fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate<Steeltoe.Messaging.IMessageChannel>.ConvertAndSend
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.IMessageChannel
    name: IMessageChannel
    nameWithType: IMessageChannel
    fullName: Steeltoe.Messaging.IMessageChannel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.ConvertAndSend(`0,System.Object)
    name: ConvertAndSend
    nameWithType: AbstractMessageSendingTemplate(Of IMessageChannel).ConvertAndSend
    fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate(Of Steeltoe.Messaging.IMessageChannel).ConvertAndSend
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.IMessageChannel
    name: IMessageChannel
    nameWithType: IMessageChannel
    fullName: Steeltoe.Messaging.IMessageChannel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate{Steeltoe.Messaging.IMessageChannel}.ConvertAndSend(Steeltoe.Messaging.IMessageChannel,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object})
  commentId: M:Steeltoe.Messaging.Core.AbstractMessageSendingTemplate{Steeltoe.Messaging.IMessageChannel}.ConvertAndSend(Steeltoe.Messaging.IMessageChannel,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object})
  parent: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate{Steeltoe.Messaging.IMessageChannel}
  definition: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.ConvertAndSend(`0,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object})
  name: ConvertAndSend(IMessageChannel, Object, IDictionary<String, Object>)
  nameWithType: AbstractMessageSendingTemplate<IMessageChannel>.ConvertAndSend(IMessageChannel, Object, IDictionary<String, Object>)
  fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate<Steeltoe.Messaging.IMessageChannel>.ConvertAndSend(Steeltoe.Messaging.IMessageChannel, System.Object, System.Collections.Generic.IDictionary<System.String, System.Object>)
  nameWithType.vb: AbstractMessageSendingTemplate(Of IMessageChannel).ConvertAndSend(IMessageChannel, Object, IDictionary(Of String, Object))
  fullName.vb: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate(Of Steeltoe.Messaging.IMessageChannel).ConvertAndSend(Steeltoe.Messaging.IMessageChannel, System.Object, System.Collections.Generic.IDictionary(Of System.String, System.Object))
  name.vb: ConvertAndSend(IMessageChannel, Object, IDictionary(Of String, Object))
  spec.csharp:
  - uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.ConvertAndSend(`0,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object})
    name: ConvertAndSend
    nameWithType: AbstractMessageSendingTemplate<IMessageChannel>.ConvertAndSend
    fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate<Steeltoe.Messaging.IMessageChannel>.ConvertAndSend
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.IMessageChannel
    name: IMessageChannel
    nameWithType: IMessageChannel
    fullName: Steeltoe.Messaging.IMessageChannel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.ConvertAndSend(`0,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object})
    name: ConvertAndSend
    nameWithType: AbstractMessageSendingTemplate(Of IMessageChannel).ConvertAndSend
    fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate(Of Steeltoe.Messaging.IMessageChannel).ConvertAndSend
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.IMessageChannel
    name: IMessageChannel
    nameWithType: IMessageChannel
    fullName: Steeltoe.Messaging.IMessageChannel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate{Steeltoe.Messaging.IMessageChannel}.ConvertAndSend(System.Object,Steeltoe.Messaging.Core.IMessagePostProcessor)
  commentId: M:Steeltoe.Messaging.Core.AbstractMessageSendingTemplate{Steeltoe.Messaging.IMessageChannel}.ConvertAndSend(System.Object,Steeltoe.Messaging.Core.IMessagePostProcessor)
  parent: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate{Steeltoe.Messaging.IMessageChannel}
  definition: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.ConvertAndSend(System.Object,Steeltoe.Messaging.Core.IMessagePostProcessor)
  name: ConvertAndSend(Object, IMessagePostProcessor)
  nameWithType: AbstractMessageSendingTemplate<IMessageChannel>.ConvertAndSend(Object, IMessagePostProcessor)
  fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate<Steeltoe.Messaging.IMessageChannel>.ConvertAndSend(System.Object, Steeltoe.Messaging.Core.IMessagePostProcessor)
  nameWithType.vb: AbstractMessageSendingTemplate(Of IMessageChannel).ConvertAndSend(Object, IMessagePostProcessor)
  fullName.vb: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate(Of Steeltoe.Messaging.IMessageChannel).ConvertAndSend(System.Object, Steeltoe.Messaging.Core.IMessagePostProcessor)
  spec.csharp:
  - uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.ConvertAndSend(System.Object,Steeltoe.Messaging.Core.IMessagePostProcessor)
    name: ConvertAndSend
    nameWithType: AbstractMessageSendingTemplate<IMessageChannel>.ConvertAndSend
    fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate<Steeltoe.Messaging.IMessageChannel>.ConvertAndSend
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.Core.IMessagePostProcessor
    name: IMessagePostProcessor
    nameWithType: IMessagePostProcessor
    fullName: Steeltoe.Messaging.Core.IMessagePostProcessor
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.ConvertAndSend(System.Object,Steeltoe.Messaging.Core.IMessagePostProcessor)
    name: ConvertAndSend
    nameWithType: AbstractMessageSendingTemplate(Of IMessageChannel).ConvertAndSend
    fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate(Of Steeltoe.Messaging.IMessageChannel).ConvertAndSend
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.Core.IMessagePostProcessor
    name: IMessagePostProcessor
    nameWithType: IMessagePostProcessor
    fullName: Steeltoe.Messaging.Core.IMessagePostProcessor
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate{Steeltoe.Messaging.IMessageChannel}.ConvertAndSend(Steeltoe.Messaging.IMessageChannel,System.Object,Steeltoe.Messaging.Core.IMessagePostProcessor)
  commentId: M:Steeltoe.Messaging.Core.AbstractMessageSendingTemplate{Steeltoe.Messaging.IMessageChannel}.ConvertAndSend(Steeltoe.Messaging.IMessageChannel,System.Object,Steeltoe.Messaging.Core.IMessagePostProcessor)
  parent: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate{Steeltoe.Messaging.IMessageChannel}
  definition: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.ConvertAndSend(`0,System.Object,Steeltoe.Messaging.Core.IMessagePostProcessor)
  name: ConvertAndSend(IMessageChannel, Object, IMessagePostProcessor)
  nameWithType: AbstractMessageSendingTemplate<IMessageChannel>.ConvertAndSend(IMessageChannel, Object, IMessagePostProcessor)
  fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate<Steeltoe.Messaging.IMessageChannel>.ConvertAndSend(Steeltoe.Messaging.IMessageChannel, System.Object, Steeltoe.Messaging.Core.IMessagePostProcessor)
  nameWithType.vb: AbstractMessageSendingTemplate(Of IMessageChannel).ConvertAndSend(IMessageChannel, Object, IMessagePostProcessor)
  fullName.vb: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate(Of Steeltoe.Messaging.IMessageChannel).ConvertAndSend(Steeltoe.Messaging.IMessageChannel, System.Object, Steeltoe.Messaging.Core.IMessagePostProcessor)
  spec.csharp:
  - uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.ConvertAndSend(`0,System.Object,Steeltoe.Messaging.Core.IMessagePostProcessor)
    name: ConvertAndSend
    nameWithType: AbstractMessageSendingTemplate<IMessageChannel>.ConvertAndSend
    fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate<Steeltoe.Messaging.IMessageChannel>.ConvertAndSend
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.IMessageChannel
    name: IMessageChannel
    nameWithType: IMessageChannel
    fullName: Steeltoe.Messaging.IMessageChannel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.Core.IMessagePostProcessor
    name: IMessagePostProcessor
    nameWithType: IMessagePostProcessor
    fullName: Steeltoe.Messaging.Core.IMessagePostProcessor
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.ConvertAndSend(`0,System.Object,Steeltoe.Messaging.Core.IMessagePostProcessor)
    name: ConvertAndSend
    nameWithType: AbstractMessageSendingTemplate(Of IMessageChannel).ConvertAndSend
    fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate(Of Steeltoe.Messaging.IMessageChannel).ConvertAndSend
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.IMessageChannel
    name: IMessageChannel
    nameWithType: IMessageChannel
    fullName: Steeltoe.Messaging.IMessageChannel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.Core.IMessagePostProcessor
    name: IMessagePostProcessor
    nameWithType: IMessagePostProcessor
    fullName: Steeltoe.Messaging.Core.IMessagePostProcessor
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate{Steeltoe.Messaging.IMessageChannel}.ConvertAndSend(Steeltoe.Messaging.IMessageChannel,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object},Steeltoe.Messaging.Core.IMessagePostProcessor)
  commentId: M:Steeltoe.Messaging.Core.AbstractMessageSendingTemplate{Steeltoe.Messaging.IMessageChannel}.ConvertAndSend(Steeltoe.Messaging.IMessageChannel,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object},Steeltoe.Messaging.Core.IMessagePostProcessor)
  parent: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate{Steeltoe.Messaging.IMessageChannel}
  definition: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.ConvertAndSend(`0,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object},Steeltoe.Messaging.Core.IMessagePostProcessor)
  name: ConvertAndSend(IMessageChannel, Object, IDictionary<String, Object>, IMessagePostProcessor)
  nameWithType: AbstractMessageSendingTemplate<IMessageChannel>.ConvertAndSend(IMessageChannel, Object, IDictionary<String, Object>, IMessagePostProcessor)
  fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate<Steeltoe.Messaging.IMessageChannel>.ConvertAndSend(Steeltoe.Messaging.IMessageChannel, System.Object, System.Collections.Generic.IDictionary<System.String, System.Object>, Steeltoe.Messaging.Core.IMessagePostProcessor)
  nameWithType.vb: AbstractMessageSendingTemplate(Of IMessageChannel).ConvertAndSend(IMessageChannel, Object, IDictionary(Of String, Object), IMessagePostProcessor)
  fullName.vb: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate(Of Steeltoe.Messaging.IMessageChannel).ConvertAndSend(Steeltoe.Messaging.IMessageChannel, System.Object, System.Collections.Generic.IDictionary(Of System.String, System.Object), Steeltoe.Messaging.Core.IMessagePostProcessor)
  name.vb: ConvertAndSend(IMessageChannel, Object, IDictionary(Of String, Object), IMessagePostProcessor)
  spec.csharp:
  - uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.ConvertAndSend(`0,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object},Steeltoe.Messaging.Core.IMessagePostProcessor)
    name: ConvertAndSend
    nameWithType: AbstractMessageSendingTemplate<IMessageChannel>.ConvertAndSend
    fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate<Steeltoe.Messaging.IMessageChannel>.ConvertAndSend
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.IMessageChannel
    name: IMessageChannel
    nameWithType: IMessageChannel
    fullName: Steeltoe.Messaging.IMessageChannel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.Core.IMessagePostProcessor
    name: IMessagePostProcessor
    nameWithType: IMessagePostProcessor
    fullName: Steeltoe.Messaging.Core.IMessagePostProcessor
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.ConvertAndSend(`0,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object},Steeltoe.Messaging.Core.IMessagePostProcessor)
    name: ConvertAndSend
    nameWithType: AbstractMessageSendingTemplate(Of IMessageChannel).ConvertAndSend
    fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate(Of Steeltoe.Messaging.IMessageChannel).ConvertAndSend
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.IMessageChannel
    name: IMessageChannel
    nameWithType: IMessageChannel
    fullName: Steeltoe.Messaging.IMessageChannel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.Core.IMessagePostProcessor
    name: IMessagePostProcessor
    nameWithType: IMessagePostProcessor
    fullName: Steeltoe.Messaging.Core.IMessagePostProcessor
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate{Steeltoe.Messaging.IMessageChannel}.Send(Steeltoe.Messaging.IMessage)
  commentId: M:Steeltoe.Messaging.Core.AbstractMessageSendingTemplate{Steeltoe.Messaging.IMessageChannel}.Send(Steeltoe.Messaging.IMessage)
  parent: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate{Steeltoe.Messaging.IMessageChannel}
  definition: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.Send(Steeltoe.Messaging.IMessage)
  name: Send(IMessage)
  nameWithType: AbstractMessageSendingTemplate<IMessageChannel>.Send(IMessage)
  fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate<Steeltoe.Messaging.IMessageChannel>.Send(Steeltoe.Messaging.IMessage)
  nameWithType.vb: AbstractMessageSendingTemplate(Of IMessageChannel).Send(IMessage)
  fullName.vb: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate(Of Steeltoe.Messaging.IMessageChannel).Send(Steeltoe.Messaging.IMessage)
  spec.csharp:
  - uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.Send(Steeltoe.Messaging.IMessage)
    name: Send
    nameWithType: AbstractMessageSendingTemplate<IMessageChannel>.Send
    fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate<Steeltoe.Messaging.IMessageChannel>.Send
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.Send(Steeltoe.Messaging.IMessage)
    name: Send
    nameWithType: AbstractMessageSendingTemplate(Of IMessageChannel).Send
    fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate(Of Steeltoe.Messaging.IMessageChannel).Send
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate{Steeltoe.Messaging.IMessageChannel}.Send(Steeltoe.Messaging.IMessageChannel,Steeltoe.Messaging.IMessage)
  commentId: M:Steeltoe.Messaging.Core.AbstractMessageSendingTemplate{Steeltoe.Messaging.IMessageChannel}.Send(Steeltoe.Messaging.IMessageChannel,Steeltoe.Messaging.IMessage)
  parent: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate{Steeltoe.Messaging.IMessageChannel}
  definition: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.Send(`0,Steeltoe.Messaging.IMessage)
  name: Send(IMessageChannel, IMessage)
  nameWithType: AbstractMessageSendingTemplate<IMessageChannel>.Send(IMessageChannel, IMessage)
  fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate<Steeltoe.Messaging.IMessageChannel>.Send(Steeltoe.Messaging.IMessageChannel, Steeltoe.Messaging.IMessage)
  nameWithType.vb: AbstractMessageSendingTemplate(Of IMessageChannel).Send(IMessageChannel, IMessage)
  fullName.vb: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate(Of Steeltoe.Messaging.IMessageChannel).Send(Steeltoe.Messaging.IMessageChannel, Steeltoe.Messaging.IMessage)
  spec.csharp:
  - uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.Send(`0,Steeltoe.Messaging.IMessage)
    name: Send
    nameWithType: AbstractMessageSendingTemplate<IMessageChannel>.Send
    fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate<Steeltoe.Messaging.IMessageChannel>.Send
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.IMessageChannel
    name: IMessageChannel
    nameWithType: IMessageChannel
    fullName: Steeltoe.Messaging.IMessageChannel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.Send(`0,Steeltoe.Messaging.IMessage)
    name: Send
    nameWithType: AbstractMessageSendingTemplate(Of IMessageChannel).Send
    fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate(Of Steeltoe.Messaging.IMessageChannel).Send
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.IMessageChannel
    name: IMessageChannel
    nameWithType: IMessageChannel
    fullName: Steeltoe.Messaging.IMessageChannel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate{Steeltoe.Messaging.IMessageChannel}.RequiredDefaultSendDestination
  commentId: P:Steeltoe.Messaging.Core.AbstractMessageSendingTemplate{Steeltoe.Messaging.IMessageChannel}.RequiredDefaultSendDestination
  parent: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate{Steeltoe.Messaging.IMessageChannel}
  definition: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.RequiredDefaultSendDestination
  name: RequiredDefaultSendDestination
  nameWithType: AbstractMessageSendingTemplate<IMessageChannel>.RequiredDefaultSendDestination
  fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate<Steeltoe.Messaging.IMessageChannel>.RequiredDefaultSendDestination
  nameWithType.vb: AbstractMessageSendingTemplate(Of IMessageChannel).RequiredDefaultSendDestination
  fullName.vb: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate(Of Steeltoe.Messaging.IMessageChannel).RequiredDefaultSendDestination
- uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate{Steeltoe.Messaging.IMessageChannel}.DoConvert(System.Object,System.Collections.Generic.IDictionary{System.String,System.Object},Steeltoe.Messaging.Core.IMessagePostProcessor)
  commentId: M:Steeltoe.Messaging.Core.AbstractMessageSendingTemplate{Steeltoe.Messaging.IMessageChannel}.DoConvert(System.Object,System.Collections.Generic.IDictionary{System.String,System.Object},Steeltoe.Messaging.Core.IMessagePostProcessor)
  parent: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate{Steeltoe.Messaging.IMessageChannel}
  definition: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.DoConvert(System.Object,System.Collections.Generic.IDictionary{System.String,System.Object},Steeltoe.Messaging.Core.IMessagePostProcessor)
  name: DoConvert(Object, IDictionary<String, Object>, IMessagePostProcessor)
  nameWithType: AbstractMessageSendingTemplate<IMessageChannel>.DoConvert(Object, IDictionary<String, Object>, IMessagePostProcessor)
  fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate<Steeltoe.Messaging.IMessageChannel>.DoConvert(System.Object, System.Collections.Generic.IDictionary<System.String, System.Object>, Steeltoe.Messaging.Core.IMessagePostProcessor)
  nameWithType.vb: AbstractMessageSendingTemplate(Of IMessageChannel).DoConvert(Object, IDictionary(Of String, Object), IMessagePostProcessor)
  fullName.vb: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate(Of Steeltoe.Messaging.IMessageChannel).DoConvert(System.Object, System.Collections.Generic.IDictionary(Of System.String, System.Object), Steeltoe.Messaging.Core.IMessagePostProcessor)
  name.vb: DoConvert(Object, IDictionary(Of String, Object), IMessagePostProcessor)
  spec.csharp:
  - uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.DoConvert(System.Object,System.Collections.Generic.IDictionary{System.String,System.Object},Steeltoe.Messaging.Core.IMessagePostProcessor)
    name: DoConvert
    nameWithType: AbstractMessageSendingTemplate<IMessageChannel>.DoConvert
    fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate<Steeltoe.Messaging.IMessageChannel>.DoConvert
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.Core.IMessagePostProcessor
    name: IMessagePostProcessor
    nameWithType: IMessagePostProcessor
    fullName: Steeltoe.Messaging.Core.IMessagePostProcessor
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.DoConvert(System.Object,System.Collections.Generic.IDictionary{System.String,System.Object},Steeltoe.Messaging.Core.IMessagePostProcessor)
    name: DoConvert
    nameWithType: AbstractMessageSendingTemplate(Of IMessageChannel).DoConvert
    fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate(Of Steeltoe.Messaging.IMessageChannel).DoConvert
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.Core.IMessagePostProcessor
    name: IMessagePostProcessor
    nameWithType: IMessagePostProcessor
    fullName: Steeltoe.Messaging.Core.IMessagePostProcessor
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate{Steeltoe.Messaging.IMessageChannel}.ProcessHeadersToSend(System.Collections.Generic.IDictionary{System.String,System.Object})
  commentId: M:Steeltoe.Messaging.Core.AbstractMessageSendingTemplate{Steeltoe.Messaging.IMessageChannel}.ProcessHeadersToSend(System.Collections.Generic.IDictionary{System.String,System.Object})
  parent: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate{Steeltoe.Messaging.IMessageChannel}
  definition: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.ProcessHeadersToSend(System.Collections.Generic.IDictionary{System.String,System.Object})
  name: ProcessHeadersToSend(IDictionary<String, Object>)
  nameWithType: AbstractMessageSendingTemplate<IMessageChannel>.ProcessHeadersToSend(IDictionary<String, Object>)
  fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate<Steeltoe.Messaging.IMessageChannel>.ProcessHeadersToSend(System.Collections.Generic.IDictionary<System.String, System.Object>)
  nameWithType.vb: AbstractMessageSendingTemplate(Of IMessageChannel).ProcessHeadersToSend(IDictionary(Of String, Object))
  fullName.vb: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate(Of Steeltoe.Messaging.IMessageChannel).ProcessHeadersToSend(System.Collections.Generic.IDictionary(Of System.String, System.Object))
  name.vb: ProcessHeadersToSend(IDictionary(Of String, Object))
  spec.csharp:
  - uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.ProcessHeadersToSend(System.Collections.Generic.IDictionary{System.String,System.Object})
    name: ProcessHeadersToSend
    nameWithType: AbstractMessageSendingTemplate<IMessageChannel>.ProcessHeadersToSend
    fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate<Steeltoe.Messaging.IMessageChannel>.ProcessHeadersToSend
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.ProcessHeadersToSend(System.Collections.Generic.IDictionary{System.String,System.Object})
    name: ProcessHeadersToSend
    nameWithType: AbstractMessageSendingTemplate(Of IMessageChannel).ProcessHeadersToSend
    fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate(Of Steeltoe.Messaging.IMessageChannel).ProcessHeadersToSend
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1
  commentId: T:Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1
  name: AbstractMessageSendingTemplate<D>
  nameWithType: AbstractMessageSendingTemplate<D>
  fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate<D>
  nameWithType.vb: AbstractMessageSendingTemplate(Of D)
  fullName.vb: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate(Of D)
  name.vb: AbstractMessageSendingTemplate(Of D)
  spec.csharp:
  - uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1
    name: AbstractMessageSendingTemplate
    nameWithType: AbstractMessageSendingTemplate
    fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate
  - name: <
    nameWithType: <
    fullName: <
  - name: D
    nameWithType: D
    fullName: D
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1
    name: AbstractMessageSendingTemplate
    nameWithType: AbstractMessageSendingTemplate
    fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: D
    nameWithType: D
    fullName: D
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate`1
  commentId: T:Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate`1
  name: AbstractMessageReceivingTemplate<D>
  nameWithType: AbstractMessageReceivingTemplate<D>
  fullName: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate<D>
  nameWithType.vb: AbstractMessageReceivingTemplate(Of D)
  fullName.vb: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate(Of D)
  name.vb: AbstractMessageReceivingTemplate(Of D)
  spec.csharp:
  - uid: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate`1
    name: AbstractMessageReceivingTemplate
    nameWithType: AbstractMessageReceivingTemplate
    fullName: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate
  - name: <
    nameWithType: <
    fullName: <
  - name: D
    nameWithType: D
    fullName: D
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate`1
    name: AbstractMessageReceivingTemplate
    nameWithType: AbstractMessageReceivingTemplate
    fullName: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: D
    nameWithType: D
    fullName: D
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Core.AbstractMessagingTemplate`1
  commentId: T:Steeltoe.Messaging.Core.AbstractMessagingTemplate`1
  name: AbstractMessagingTemplate<D>
  nameWithType: AbstractMessagingTemplate<D>
  fullName: Steeltoe.Messaging.Core.AbstractMessagingTemplate<D>
  nameWithType.vb: AbstractMessagingTemplate(Of D)
  fullName.vb: Steeltoe.Messaging.Core.AbstractMessagingTemplate(Of D)
  name.vb: AbstractMessagingTemplate(Of D)
  spec.csharp:
  - uid: Steeltoe.Messaging.Core.AbstractMessagingTemplate`1
    name: AbstractMessagingTemplate
    nameWithType: AbstractMessagingTemplate
    fullName: Steeltoe.Messaging.Core.AbstractMessagingTemplate
  - name: <
    nameWithType: <
    fullName: <
  - name: D
    nameWithType: D
    fullName: D
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Steeltoe.Messaging.Core.AbstractMessagingTemplate`1
    name: AbstractMessagingTemplate
    nameWithType: AbstractMessagingTemplate
    fullName: Steeltoe.Messaging.Core.AbstractMessagingTemplate
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: D
    nameWithType: D
    fullName: D
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate`1
  commentId: T:Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate`1
  name: AbstractDestinationResolvingMessagingTemplate<D>
  nameWithType: AbstractDestinationResolvingMessagingTemplate<D>
  fullName: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate<D>
  nameWithType.vb: AbstractDestinationResolvingMessagingTemplate(Of D)
  fullName.vb: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate(Of D)
  name.vb: AbstractDestinationResolvingMessagingTemplate(Of D)
  spec.csharp:
  - uid: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate`1
    name: AbstractDestinationResolvingMessagingTemplate
    nameWithType: AbstractDestinationResolvingMessagingTemplate
    fullName: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate
  - name: <
    nameWithType: <
    fullName: <
  - name: D
    nameWithType: D
    fullName: D
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate`1
    name: AbstractDestinationResolvingMessagingTemplate
    nameWithType: AbstractDestinationResolvingMessagingTemplate
    fullName: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: D
    nameWithType: D
    fullName: D
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Core.IDestinationResolvingMessageSendingOperations`1
  commentId: T:Steeltoe.Messaging.Core.IDestinationResolvingMessageSendingOperations`1
  name: IDestinationResolvingMessageSendingOperations<D>
  nameWithType: IDestinationResolvingMessageSendingOperations<D>
  fullName: Steeltoe.Messaging.Core.IDestinationResolvingMessageSendingOperations<D>
  nameWithType.vb: IDestinationResolvingMessageSendingOperations(Of D)
  fullName.vb: Steeltoe.Messaging.Core.IDestinationResolvingMessageSendingOperations(Of D)
  name.vb: IDestinationResolvingMessageSendingOperations(Of D)
  spec.csharp:
  - uid: Steeltoe.Messaging.Core.IDestinationResolvingMessageSendingOperations`1
    name: IDestinationResolvingMessageSendingOperations
    nameWithType: IDestinationResolvingMessageSendingOperations
    fullName: Steeltoe.Messaging.Core.IDestinationResolvingMessageSendingOperations
  - name: <
    nameWithType: <
    fullName: <
  - name: D
    nameWithType: D
    fullName: D
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Steeltoe.Messaging.Core.IDestinationResolvingMessageSendingOperations`1
    name: IDestinationResolvingMessageSendingOperations
    nameWithType: IDestinationResolvingMessageSendingOperations
    fullName: Steeltoe.Messaging.Core.IDestinationResolvingMessageSendingOperations
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: D
    nameWithType: D
    fullName: D
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Core.IMessageSendingOperations`1
  commentId: T:Steeltoe.Messaging.Core.IMessageSendingOperations`1
  name: IMessageSendingOperations<D>
  nameWithType: IMessageSendingOperations<D>
  fullName: Steeltoe.Messaging.Core.IMessageSendingOperations<D>
  nameWithType.vb: IMessageSendingOperations(Of D)
  fullName.vb: Steeltoe.Messaging.Core.IMessageSendingOperations(Of D)
  name.vb: IMessageSendingOperations(Of D)
  spec.csharp:
  - uid: Steeltoe.Messaging.Core.IMessageSendingOperations`1
    name: IMessageSendingOperations
    nameWithType: IMessageSendingOperations
    fullName: Steeltoe.Messaging.Core.IMessageSendingOperations
  - name: <
    nameWithType: <
    fullName: <
  - name: D
    nameWithType: D
    fullName: D
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Steeltoe.Messaging.Core.IMessageSendingOperations`1
    name: IMessageSendingOperations
    nameWithType: IMessageSendingOperations
    fullName: Steeltoe.Messaging.Core.IMessageSendingOperations
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: D
    nameWithType: D
    fullName: D
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Core.IDestinationResolvingMessageReceivingOperations`1
  commentId: T:Steeltoe.Messaging.Core.IDestinationResolvingMessageReceivingOperations`1
  name: IDestinationResolvingMessageReceivingOperations<D>
  nameWithType: IDestinationResolvingMessageReceivingOperations<D>
  fullName: Steeltoe.Messaging.Core.IDestinationResolvingMessageReceivingOperations<D>
  nameWithType.vb: IDestinationResolvingMessageReceivingOperations(Of D)
  fullName.vb: Steeltoe.Messaging.Core.IDestinationResolvingMessageReceivingOperations(Of D)
  name.vb: IDestinationResolvingMessageReceivingOperations(Of D)
  spec.csharp:
  - uid: Steeltoe.Messaging.Core.IDestinationResolvingMessageReceivingOperations`1
    name: IDestinationResolvingMessageReceivingOperations
    nameWithType: IDestinationResolvingMessageReceivingOperations
    fullName: Steeltoe.Messaging.Core.IDestinationResolvingMessageReceivingOperations
  - name: <
    nameWithType: <
    fullName: <
  - name: D
    nameWithType: D
    fullName: D
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Steeltoe.Messaging.Core.IDestinationResolvingMessageReceivingOperations`1
    name: IDestinationResolvingMessageReceivingOperations
    nameWithType: IDestinationResolvingMessageReceivingOperations
    fullName: Steeltoe.Messaging.Core.IDestinationResolvingMessageReceivingOperations
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: D
    nameWithType: D
    fullName: D
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Core.IMessageReceivingOperations`1
  commentId: T:Steeltoe.Messaging.Core.IMessageReceivingOperations`1
  name: IMessageReceivingOperations<D>
  nameWithType: IMessageReceivingOperations<D>
  fullName: Steeltoe.Messaging.Core.IMessageReceivingOperations<D>
  nameWithType.vb: IMessageReceivingOperations(Of D)
  fullName.vb: Steeltoe.Messaging.Core.IMessageReceivingOperations(Of D)
  name.vb: IMessageReceivingOperations(Of D)
  spec.csharp:
  - uid: Steeltoe.Messaging.Core.IMessageReceivingOperations`1
    name: IMessageReceivingOperations
    nameWithType: IMessageReceivingOperations
    fullName: Steeltoe.Messaging.Core.IMessageReceivingOperations
  - name: <
    nameWithType: <
    fullName: <
  - name: D
    nameWithType: D
    fullName: D
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Steeltoe.Messaging.Core.IMessageReceivingOperations`1
    name: IMessageReceivingOperations
    nameWithType: IMessageReceivingOperations
    fullName: Steeltoe.Messaging.Core.IMessageReceivingOperations
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: D
    nameWithType: D
    fullName: D
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Core.IDestinationResolvingMessageRequestReplyOperations`1
  commentId: T:Steeltoe.Messaging.Core.IDestinationResolvingMessageRequestReplyOperations`1
  name: IDestinationResolvingMessageRequestReplyOperations<D>
  nameWithType: IDestinationResolvingMessageRequestReplyOperations<D>
  fullName: Steeltoe.Messaging.Core.IDestinationResolvingMessageRequestReplyOperations<D>
  nameWithType.vb: IDestinationResolvingMessageRequestReplyOperations(Of D)
  fullName.vb: Steeltoe.Messaging.Core.IDestinationResolvingMessageRequestReplyOperations(Of D)
  name.vb: IDestinationResolvingMessageRequestReplyOperations(Of D)
  spec.csharp:
  - uid: Steeltoe.Messaging.Core.IDestinationResolvingMessageRequestReplyOperations`1
    name: IDestinationResolvingMessageRequestReplyOperations
    nameWithType: IDestinationResolvingMessageRequestReplyOperations
    fullName: Steeltoe.Messaging.Core.IDestinationResolvingMessageRequestReplyOperations
  - name: <
    nameWithType: <
    fullName: <
  - name: D
    nameWithType: D
    fullName: D
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Steeltoe.Messaging.Core.IDestinationResolvingMessageRequestReplyOperations`1
    name: IDestinationResolvingMessageRequestReplyOperations
    nameWithType: IDestinationResolvingMessageRequestReplyOperations
    fullName: Steeltoe.Messaging.Core.IDestinationResolvingMessageRequestReplyOperations
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: D
    nameWithType: D
    fullName: D
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Core.IMessageRequestReplyOperations`1
  commentId: T:Steeltoe.Messaging.Core.IMessageRequestReplyOperations`1
  name: IMessageRequestReplyOperations<D>
  nameWithType: IMessageRequestReplyOperations<D>
  fullName: Steeltoe.Messaging.Core.IMessageRequestReplyOperations<D>
  nameWithType.vb: IMessageRequestReplyOperations(Of D)
  fullName.vb: Steeltoe.Messaging.Core.IMessageRequestReplyOperations(Of D)
  name.vb: IMessageRequestReplyOperations(Of D)
  spec.csharp:
  - uid: Steeltoe.Messaging.Core.IMessageRequestReplyOperations`1
    name: IMessageRequestReplyOperations
    nameWithType: IMessageRequestReplyOperations
    fullName: Steeltoe.Messaging.Core.IMessageRequestReplyOperations
  - name: <
    nameWithType: <
    fullName: <
  - name: D
    nameWithType: D
    fullName: D
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Steeltoe.Messaging.Core.IMessageRequestReplyOperations`1
    name: IMessageRequestReplyOperations
    nameWithType: IMessageRequestReplyOperations
    fullName: Steeltoe.Messaging.Core.IMessageRequestReplyOperations
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: D
    nameWithType: D
    fullName: D
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate`1.ApplicationContext
  commentId: P:Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate`1.ApplicationContext
  name: ApplicationContext
  nameWithType: AbstractDestinationResolvingMessagingTemplate<D>.ApplicationContext
  fullName: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate<D>.ApplicationContext
  nameWithType.vb: AbstractDestinationResolvingMessagingTemplate(Of D).ApplicationContext
  fullName.vb: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate(Of D).ApplicationContext
- uid: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate`1.DestinationResolver
  commentId: P:Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate`1.DestinationResolver
  name: DestinationResolver
  nameWithType: AbstractDestinationResolvingMessagingTemplate<D>.DestinationResolver
  fullName: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate<D>.DestinationResolver
  nameWithType.vb: AbstractDestinationResolvingMessagingTemplate(Of D).DestinationResolver
  fullName.vb: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate(Of D).DestinationResolver
- uid: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate`1.ConvertAndSendAsync(System.String,System.Object,System.Threading.CancellationToken)
  commentId: M:Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate`1.ConvertAndSendAsync(System.String,System.Object,System.Threading.CancellationToken)
  isExternal: true
  name: ConvertAndSendAsync(String, Object, CancellationToken)
  nameWithType: AbstractDestinationResolvingMessagingTemplate<D>.ConvertAndSendAsync(String, Object, CancellationToken)
  fullName: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate<D>.ConvertAndSendAsync(System.String, System.Object, System.Threading.CancellationToken)
  nameWithType.vb: AbstractDestinationResolvingMessagingTemplate(Of D).ConvertAndSendAsync(String, Object, CancellationToken)
  fullName.vb: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate(Of D).ConvertAndSendAsync(System.String, System.Object, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate`1.ConvertAndSendAsync(System.String,System.Object,System.Threading.CancellationToken)
    name: ConvertAndSendAsync
    nameWithType: AbstractDestinationResolvingMessagingTemplate<D>.ConvertAndSendAsync
    fullName: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate<D>.ConvertAndSendAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate`1.ConvertAndSendAsync(System.String,System.Object,System.Threading.CancellationToken)
    name: ConvertAndSendAsync
    nameWithType: AbstractDestinationResolvingMessagingTemplate(Of D).ConvertAndSendAsync
    fullName: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate(Of D).ConvertAndSendAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate`1.ConvertAndSendAsync(System.String,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object},System.Threading.CancellationToken)
  commentId: M:Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate`1.ConvertAndSendAsync(System.String,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object},System.Threading.CancellationToken)
  isExternal: true
  name: ConvertAndSendAsync(String, Object, IDictionary<String, Object>, CancellationToken)
  nameWithType: AbstractDestinationResolvingMessagingTemplate<D>.ConvertAndSendAsync(String, Object, IDictionary<String, Object>, CancellationToken)
  fullName: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate<D>.ConvertAndSendAsync(System.String, System.Object, System.Collections.Generic.IDictionary<System.String, System.Object>, System.Threading.CancellationToken)
  nameWithType.vb: AbstractDestinationResolvingMessagingTemplate(Of D).ConvertAndSendAsync(String, Object, IDictionary(Of String, Object), CancellationToken)
  fullName.vb: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate(Of D).ConvertAndSendAsync(System.String, System.Object, System.Collections.Generic.IDictionary(Of System.String, System.Object), System.Threading.CancellationToken)
  name.vb: ConvertAndSendAsync(String, Object, IDictionary(Of String, Object), CancellationToken)
  spec.csharp:
  - uid: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate`1.ConvertAndSendAsync(System.String,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object},System.Threading.CancellationToken)
    name: ConvertAndSendAsync
    nameWithType: AbstractDestinationResolvingMessagingTemplate<D>.ConvertAndSendAsync
    fullName: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate<D>.ConvertAndSendAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate`1.ConvertAndSendAsync(System.String,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object},System.Threading.CancellationToken)
    name: ConvertAndSendAsync
    nameWithType: AbstractDestinationResolvingMessagingTemplate(Of D).ConvertAndSendAsync
    fullName: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate(Of D).ConvertAndSendAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate`1.ConvertAndSendAsync(System.String,System.Object,Steeltoe.Messaging.Core.IMessagePostProcessor,System.Threading.CancellationToken)
  commentId: M:Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate`1.ConvertAndSendAsync(System.String,System.Object,Steeltoe.Messaging.Core.IMessagePostProcessor,System.Threading.CancellationToken)
  isExternal: true
  name: ConvertAndSendAsync(String, Object, IMessagePostProcessor, CancellationToken)
  nameWithType: AbstractDestinationResolvingMessagingTemplate<D>.ConvertAndSendAsync(String, Object, IMessagePostProcessor, CancellationToken)
  fullName: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate<D>.ConvertAndSendAsync(System.String, System.Object, Steeltoe.Messaging.Core.IMessagePostProcessor, System.Threading.CancellationToken)
  nameWithType.vb: AbstractDestinationResolvingMessagingTemplate(Of D).ConvertAndSendAsync(String, Object, IMessagePostProcessor, CancellationToken)
  fullName.vb: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate(Of D).ConvertAndSendAsync(System.String, System.Object, Steeltoe.Messaging.Core.IMessagePostProcessor, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate`1.ConvertAndSendAsync(System.String,System.Object,Steeltoe.Messaging.Core.IMessagePostProcessor,System.Threading.CancellationToken)
    name: ConvertAndSendAsync
    nameWithType: AbstractDestinationResolvingMessagingTemplate<D>.ConvertAndSendAsync
    fullName: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate<D>.ConvertAndSendAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.Core.IMessagePostProcessor
    name: IMessagePostProcessor
    nameWithType: IMessagePostProcessor
    fullName: Steeltoe.Messaging.Core.IMessagePostProcessor
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate`1.ConvertAndSendAsync(System.String,System.Object,Steeltoe.Messaging.Core.IMessagePostProcessor,System.Threading.CancellationToken)
    name: ConvertAndSendAsync
    nameWithType: AbstractDestinationResolvingMessagingTemplate(Of D).ConvertAndSendAsync
    fullName: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate(Of D).ConvertAndSendAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.Core.IMessagePostProcessor
    name: IMessagePostProcessor
    nameWithType: IMessagePostProcessor
    fullName: Steeltoe.Messaging.Core.IMessagePostProcessor
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate`1.ConvertAndSendAsync(System.String,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object},Steeltoe.Messaging.Core.IMessagePostProcessor,System.Threading.CancellationToken)
  commentId: M:Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate`1.ConvertAndSendAsync(System.String,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object},Steeltoe.Messaging.Core.IMessagePostProcessor,System.Threading.CancellationToken)
  isExternal: true
  name: ConvertAndSendAsync(String, Object, IDictionary<String, Object>, IMessagePostProcessor, CancellationToken)
  nameWithType: AbstractDestinationResolvingMessagingTemplate<D>.ConvertAndSendAsync(String, Object, IDictionary<String, Object>, IMessagePostProcessor, CancellationToken)
  fullName: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate<D>.ConvertAndSendAsync(System.String, System.Object, System.Collections.Generic.IDictionary<System.String, System.Object>, Steeltoe.Messaging.Core.IMessagePostProcessor, System.Threading.CancellationToken)
  nameWithType.vb: AbstractDestinationResolvingMessagingTemplate(Of D).ConvertAndSendAsync(String, Object, IDictionary(Of String, Object), IMessagePostProcessor, CancellationToken)
  fullName.vb: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate(Of D).ConvertAndSendAsync(System.String, System.Object, System.Collections.Generic.IDictionary(Of System.String, System.Object), Steeltoe.Messaging.Core.IMessagePostProcessor, System.Threading.CancellationToken)
  name.vb: ConvertAndSendAsync(String, Object, IDictionary(Of String, Object), IMessagePostProcessor, CancellationToken)
  spec.csharp:
  - uid: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate`1.ConvertAndSendAsync(System.String,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object},Steeltoe.Messaging.Core.IMessagePostProcessor,System.Threading.CancellationToken)
    name: ConvertAndSendAsync
    nameWithType: AbstractDestinationResolvingMessagingTemplate<D>.ConvertAndSendAsync
    fullName: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate<D>.ConvertAndSendAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.Core.IMessagePostProcessor
    name: IMessagePostProcessor
    nameWithType: IMessagePostProcessor
    fullName: Steeltoe.Messaging.Core.IMessagePostProcessor
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate`1.ConvertAndSendAsync(System.String,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object},Steeltoe.Messaging.Core.IMessagePostProcessor,System.Threading.CancellationToken)
    name: ConvertAndSendAsync
    nameWithType: AbstractDestinationResolvingMessagingTemplate(Of D).ConvertAndSendAsync
    fullName: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate(Of D).ConvertAndSendAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.Core.IMessagePostProcessor
    name: IMessagePostProcessor
    nameWithType: IMessagePostProcessor
    fullName: Steeltoe.Messaging.Core.IMessagePostProcessor
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate`1.ConvertSendAndReceiveAsync``1(System.String,System.Object,System.Threading.CancellationToken)
  commentId: M:Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate`1.ConvertSendAndReceiveAsync``1(System.String,System.Object,System.Threading.CancellationToken)
  isExternal: true
  name: ConvertSendAndReceiveAsync<T>(String, Object, CancellationToken)
  nameWithType: AbstractDestinationResolvingMessagingTemplate<D>.ConvertSendAndReceiveAsync<T>(String, Object, CancellationToken)
  fullName: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate<D>.ConvertSendAndReceiveAsync<T>(System.String, System.Object, System.Threading.CancellationToken)
  nameWithType.vb: AbstractDestinationResolvingMessagingTemplate(Of D).ConvertSendAndReceiveAsync(Of T)(String, Object, CancellationToken)
  fullName.vb: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate(Of D).ConvertSendAndReceiveAsync(Of T)(System.String, System.Object, System.Threading.CancellationToken)
  name.vb: ConvertSendAndReceiveAsync(Of T)(String, Object, CancellationToken)
  spec.csharp:
  - uid: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate`1.ConvertSendAndReceiveAsync``1(System.String,System.Object,System.Threading.CancellationToken)
    name: ConvertSendAndReceiveAsync<T>
    nameWithType: AbstractDestinationResolvingMessagingTemplate<D>.ConvertSendAndReceiveAsync<T>
    fullName: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate<D>.ConvertSendAndReceiveAsync<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate`1.ConvertSendAndReceiveAsync``1(System.String,System.Object,System.Threading.CancellationToken)
    name: ConvertSendAndReceiveAsync(Of T)
    nameWithType: AbstractDestinationResolvingMessagingTemplate(Of D).ConvertSendAndReceiveAsync(Of T)
    fullName: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate(Of D).ConvertSendAndReceiveAsync(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate`1.ConvertSendAndReceiveAsync``1(System.String,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object},System.Threading.CancellationToken)
  commentId: M:Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate`1.ConvertSendAndReceiveAsync``1(System.String,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object},System.Threading.CancellationToken)
  isExternal: true
  name: ConvertSendAndReceiveAsync<T>(String, Object, IDictionary<String, Object>, CancellationToken)
  nameWithType: AbstractDestinationResolvingMessagingTemplate<D>.ConvertSendAndReceiveAsync<T>(String, Object, IDictionary<String, Object>, CancellationToken)
  fullName: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate<D>.ConvertSendAndReceiveAsync<T>(System.String, System.Object, System.Collections.Generic.IDictionary<System.String, System.Object>, System.Threading.CancellationToken)
  nameWithType.vb: AbstractDestinationResolvingMessagingTemplate(Of D).ConvertSendAndReceiveAsync(Of T)(String, Object, IDictionary(Of String, Object), CancellationToken)
  fullName.vb: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate(Of D).ConvertSendAndReceiveAsync(Of T)(System.String, System.Object, System.Collections.Generic.IDictionary(Of System.String, System.Object), System.Threading.CancellationToken)
  name.vb: ConvertSendAndReceiveAsync(Of T)(String, Object, IDictionary(Of String, Object), CancellationToken)
  spec.csharp:
  - uid: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate`1.ConvertSendAndReceiveAsync``1(System.String,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object},System.Threading.CancellationToken)
    name: ConvertSendAndReceiveAsync<T>
    nameWithType: AbstractDestinationResolvingMessagingTemplate<D>.ConvertSendAndReceiveAsync<T>
    fullName: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate<D>.ConvertSendAndReceiveAsync<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate`1.ConvertSendAndReceiveAsync``1(System.String,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object},System.Threading.CancellationToken)
    name: ConvertSendAndReceiveAsync(Of T)
    nameWithType: AbstractDestinationResolvingMessagingTemplate(Of D).ConvertSendAndReceiveAsync(Of T)
    fullName: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate(Of D).ConvertSendAndReceiveAsync(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate`1.ConvertSendAndReceiveAsync``1(System.String,System.Object,Steeltoe.Messaging.Core.IMessagePostProcessor,System.Threading.CancellationToken)
  commentId: M:Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate`1.ConvertSendAndReceiveAsync``1(System.String,System.Object,Steeltoe.Messaging.Core.IMessagePostProcessor,System.Threading.CancellationToken)
  isExternal: true
  name: ConvertSendAndReceiveAsync<T>(String, Object, IMessagePostProcessor, CancellationToken)
  nameWithType: AbstractDestinationResolvingMessagingTemplate<D>.ConvertSendAndReceiveAsync<T>(String, Object, IMessagePostProcessor, CancellationToken)
  fullName: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate<D>.ConvertSendAndReceiveAsync<T>(System.String, System.Object, Steeltoe.Messaging.Core.IMessagePostProcessor, System.Threading.CancellationToken)
  nameWithType.vb: AbstractDestinationResolvingMessagingTemplate(Of D).ConvertSendAndReceiveAsync(Of T)(String, Object, IMessagePostProcessor, CancellationToken)
  fullName.vb: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate(Of D).ConvertSendAndReceiveAsync(Of T)(System.String, System.Object, Steeltoe.Messaging.Core.IMessagePostProcessor, System.Threading.CancellationToken)
  name.vb: ConvertSendAndReceiveAsync(Of T)(String, Object, IMessagePostProcessor, CancellationToken)
  spec.csharp:
  - uid: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate`1.ConvertSendAndReceiveAsync``1(System.String,System.Object,Steeltoe.Messaging.Core.IMessagePostProcessor,System.Threading.CancellationToken)
    name: ConvertSendAndReceiveAsync<T>
    nameWithType: AbstractDestinationResolvingMessagingTemplate<D>.ConvertSendAndReceiveAsync<T>
    fullName: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate<D>.ConvertSendAndReceiveAsync<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.Core.IMessagePostProcessor
    name: IMessagePostProcessor
    nameWithType: IMessagePostProcessor
    fullName: Steeltoe.Messaging.Core.IMessagePostProcessor
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate`1.ConvertSendAndReceiveAsync``1(System.String,System.Object,Steeltoe.Messaging.Core.IMessagePostProcessor,System.Threading.CancellationToken)
    name: ConvertSendAndReceiveAsync(Of T)
    nameWithType: AbstractDestinationResolvingMessagingTemplate(Of D).ConvertSendAndReceiveAsync(Of T)
    fullName: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate(Of D).ConvertSendAndReceiveAsync(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.Core.IMessagePostProcessor
    name: IMessagePostProcessor
    nameWithType: IMessagePostProcessor
    fullName: Steeltoe.Messaging.Core.IMessagePostProcessor
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate`1.ConvertSendAndReceiveAsync``1(System.String,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object},Steeltoe.Messaging.Core.IMessagePostProcessor,System.Threading.CancellationToken)
  commentId: M:Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate`1.ConvertSendAndReceiveAsync``1(System.String,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object},Steeltoe.Messaging.Core.IMessagePostProcessor,System.Threading.CancellationToken)
  isExternal: true
  name: ConvertSendAndReceiveAsync<T>(String, Object, IDictionary<String, Object>, IMessagePostProcessor, CancellationToken)
  nameWithType: AbstractDestinationResolvingMessagingTemplate<D>.ConvertSendAndReceiveAsync<T>(String, Object, IDictionary<String, Object>, IMessagePostProcessor, CancellationToken)
  fullName: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate<D>.ConvertSendAndReceiveAsync<T>(System.String, System.Object, System.Collections.Generic.IDictionary<System.String, System.Object>, Steeltoe.Messaging.Core.IMessagePostProcessor, System.Threading.CancellationToken)
  nameWithType.vb: AbstractDestinationResolvingMessagingTemplate(Of D).ConvertSendAndReceiveAsync(Of T)(String, Object, IDictionary(Of String, Object), IMessagePostProcessor, CancellationToken)
  fullName.vb: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate(Of D).ConvertSendAndReceiveAsync(Of T)(System.String, System.Object, System.Collections.Generic.IDictionary(Of System.String, System.Object), Steeltoe.Messaging.Core.IMessagePostProcessor, System.Threading.CancellationToken)
  name.vb: ConvertSendAndReceiveAsync(Of T)(String, Object, IDictionary(Of String, Object), IMessagePostProcessor, CancellationToken)
  spec.csharp:
  - uid: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate`1.ConvertSendAndReceiveAsync``1(System.String,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object},Steeltoe.Messaging.Core.IMessagePostProcessor,System.Threading.CancellationToken)
    name: ConvertSendAndReceiveAsync<T>
    nameWithType: AbstractDestinationResolvingMessagingTemplate<D>.ConvertSendAndReceiveAsync<T>
    fullName: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate<D>.ConvertSendAndReceiveAsync<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.Core.IMessagePostProcessor
    name: IMessagePostProcessor
    nameWithType: IMessagePostProcessor
    fullName: Steeltoe.Messaging.Core.IMessagePostProcessor
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate`1.ConvertSendAndReceiveAsync``1(System.String,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object},Steeltoe.Messaging.Core.IMessagePostProcessor,System.Threading.CancellationToken)
    name: ConvertSendAndReceiveAsync(Of T)
    nameWithType: AbstractDestinationResolvingMessagingTemplate(Of D).ConvertSendAndReceiveAsync(Of T)
    fullName: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate(Of D).ConvertSendAndReceiveAsync(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.Core.IMessagePostProcessor
    name: IMessagePostProcessor
    nameWithType: IMessagePostProcessor
    fullName: Steeltoe.Messaging.Core.IMessagePostProcessor
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate`1.ReceiveAsync(System.String,System.Threading.CancellationToken)
  commentId: M:Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate`1.ReceiveAsync(System.String,System.Threading.CancellationToken)
  isExternal: true
  name: ReceiveAsync(String, CancellationToken)
  nameWithType: AbstractDestinationResolvingMessagingTemplate<D>.ReceiveAsync(String, CancellationToken)
  fullName: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate<D>.ReceiveAsync(System.String, System.Threading.CancellationToken)
  nameWithType.vb: AbstractDestinationResolvingMessagingTemplate(Of D).ReceiveAsync(String, CancellationToken)
  fullName.vb: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate(Of D).ReceiveAsync(System.String, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate`1.ReceiveAsync(System.String,System.Threading.CancellationToken)
    name: ReceiveAsync
    nameWithType: AbstractDestinationResolvingMessagingTemplate<D>.ReceiveAsync
    fullName: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate<D>.ReceiveAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate`1.ReceiveAsync(System.String,System.Threading.CancellationToken)
    name: ReceiveAsync
    nameWithType: AbstractDestinationResolvingMessagingTemplate(Of D).ReceiveAsync
    fullName: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate(Of D).ReceiveAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate`1.ReceiveAndConvertAsync``1(System.String,System.Threading.CancellationToken)
  commentId: M:Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate`1.ReceiveAndConvertAsync``1(System.String,System.Threading.CancellationToken)
  isExternal: true
  name: ReceiveAndConvertAsync<T>(String, CancellationToken)
  nameWithType: AbstractDestinationResolvingMessagingTemplate<D>.ReceiveAndConvertAsync<T>(String, CancellationToken)
  fullName: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate<D>.ReceiveAndConvertAsync<T>(System.String, System.Threading.CancellationToken)
  nameWithType.vb: AbstractDestinationResolvingMessagingTemplate(Of D).ReceiveAndConvertAsync(Of T)(String, CancellationToken)
  fullName.vb: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate(Of D).ReceiveAndConvertAsync(Of T)(System.String, System.Threading.CancellationToken)
  name.vb: ReceiveAndConvertAsync(Of T)(String, CancellationToken)
  spec.csharp:
  - uid: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate`1.ReceiveAndConvertAsync``1(System.String,System.Threading.CancellationToken)
    name: ReceiveAndConvertAsync<T>
    nameWithType: AbstractDestinationResolvingMessagingTemplate<D>.ReceiveAndConvertAsync<T>
    fullName: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate<D>.ReceiveAndConvertAsync<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate`1.ReceiveAndConvertAsync``1(System.String,System.Threading.CancellationToken)
    name: ReceiveAndConvertAsync(Of T)
    nameWithType: AbstractDestinationResolvingMessagingTemplate(Of D).ReceiveAndConvertAsync(Of T)
    fullName: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate(Of D).ReceiveAndConvertAsync(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate`1.SendAsync(System.String,Steeltoe.Messaging.IMessage,System.Threading.CancellationToken)
  commentId: M:Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate`1.SendAsync(System.String,Steeltoe.Messaging.IMessage,System.Threading.CancellationToken)
  isExternal: true
  name: SendAsync(String, IMessage, CancellationToken)
  nameWithType: AbstractDestinationResolvingMessagingTemplate<D>.SendAsync(String, IMessage, CancellationToken)
  fullName: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate<D>.SendAsync(System.String, Steeltoe.Messaging.IMessage, System.Threading.CancellationToken)
  nameWithType.vb: AbstractDestinationResolvingMessagingTemplate(Of D).SendAsync(String, IMessage, CancellationToken)
  fullName.vb: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate(Of D).SendAsync(System.String, Steeltoe.Messaging.IMessage, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate`1.SendAsync(System.String,Steeltoe.Messaging.IMessage,System.Threading.CancellationToken)
    name: SendAsync
    nameWithType: AbstractDestinationResolvingMessagingTemplate<D>.SendAsync
    fullName: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate<D>.SendAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate`1.SendAsync(System.String,Steeltoe.Messaging.IMessage,System.Threading.CancellationToken)
    name: SendAsync
    nameWithType: AbstractDestinationResolvingMessagingTemplate(Of D).SendAsync
    fullName: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate(Of D).SendAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate`1.SendAndReceiveAsync(System.String,Steeltoe.Messaging.IMessage,System.Threading.CancellationToken)
  commentId: M:Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate`1.SendAndReceiveAsync(System.String,Steeltoe.Messaging.IMessage,System.Threading.CancellationToken)
  isExternal: true
  name: SendAndReceiveAsync(String, IMessage, CancellationToken)
  nameWithType: AbstractDestinationResolvingMessagingTemplate<D>.SendAndReceiveAsync(String, IMessage, CancellationToken)
  fullName: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate<D>.SendAndReceiveAsync(System.String, Steeltoe.Messaging.IMessage, System.Threading.CancellationToken)
  nameWithType.vb: AbstractDestinationResolvingMessagingTemplate(Of D).SendAndReceiveAsync(String, IMessage, CancellationToken)
  fullName.vb: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate(Of D).SendAndReceiveAsync(System.String, Steeltoe.Messaging.IMessage, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate`1.SendAndReceiveAsync(System.String,Steeltoe.Messaging.IMessage,System.Threading.CancellationToken)
    name: SendAndReceiveAsync
    nameWithType: AbstractDestinationResolvingMessagingTemplate<D>.SendAndReceiveAsync
    fullName: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate<D>.SendAndReceiveAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate`1.SendAndReceiveAsync(System.String,Steeltoe.Messaging.IMessage,System.Threading.CancellationToken)
    name: SendAndReceiveAsync
    nameWithType: AbstractDestinationResolvingMessagingTemplate(Of D).SendAndReceiveAsync
    fullName: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate(Of D).SendAndReceiveAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate`1.ConvertAndSend(System.String,System.Object)
  commentId: M:Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate`1.ConvertAndSend(System.String,System.Object)
  isExternal: true
  name: ConvertAndSend(String, Object)
  nameWithType: AbstractDestinationResolvingMessagingTemplate<D>.ConvertAndSend(String, Object)
  fullName: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate<D>.ConvertAndSend(System.String, System.Object)
  nameWithType.vb: AbstractDestinationResolvingMessagingTemplate(Of D).ConvertAndSend(String, Object)
  fullName.vb: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate(Of D).ConvertAndSend(System.String, System.Object)
  spec.csharp:
  - uid: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate`1.ConvertAndSend(System.String,System.Object)
    name: ConvertAndSend
    nameWithType: AbstractDestinationResolvingMessagingTemplate<D>.ConvertAndSend
    fullName: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate<D>.ConvertAndSend
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate`1.ConvertAndSend(System.String,System.Object)
    name: ConvertAndSend
    nameWithType: AbstractDestinationResolvingMessagingTemplate(Of D).ConvertAndSend
    fullName: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate(Of D).ConvertAndSend
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate`1.ConvertAndSend(System.String,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object})
  commentId: M:Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate`1.ConvertAndSend(System.String,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object})
  isExternal: true
  name: ConvertAndSend(String, Object, IDictionary<String, Object>)
  nameWithType: AbstractDestinationResolvingMessagingTemplate<D>.ConvertAndSend(String, Object, IDictionary<String, Object>)
  fullName: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate<D>.ConvertAndSend(System.String, System.Object, System.Collections.Generic.IDictionary<System.String, System.Object>)
  nameWithType.vb: AbstractDestinationResolvingMessagingTemplate(Of D).ConvertAndSend(String, Object, IDictionary(Of String, Object))
  fullName.vb: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate(Of D).ConvertAndSend(System.String, System.Object, System.Collections.Generic.IDictionary(Of System.String, System.Object))
  name.vb: ConvertAndSend(String, Object, IDictionary(Of String, Object))
  spec.csharp:
  - uid: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate`1.ConvertAndSend(System.String,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object})
    name: ConvertAndSend
    nameWithType: AbstractDestinationResolvingMessagingTemplate<D>.ConvertAndSend
    fullName: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate<D>.ConvertAndSend
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate`1.ConvertAndSend(System.String,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object})
    name: ConvertAndSend
    nameWithType: AbstractDestinationResolvingMessagingTemplate(Of D).ConvertAndSend
    fullName: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate(Of D).ConvertAndSend
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate`1.ConvertAndSend(System.String,System.Object,Steeltoe.Messaging.Core.IMessagePostProcessor)
  commentId: M:Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate`1.ConvertAndSend(System.String,System.Object,Steeltoe.Messaging.Core.IMessagePostProcessor)
  isExternal: true
  name: ConvertAndSend(String, Object, IMessagePostProcessor)
  nameWithType: AbstractDestinationResolvingMessagingTemplate<D>.ConvertAndSend(String, Object, IMessagePostProcessor)
  fullName: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate<D>.ConvertAndSend(System.String, System.Object, Steeltoe.Messaging.Core.IMessagePostProcessor)
  nameWithType.vb: AbstractDestinationResolvingMessagingTemplate(Of D).ConvertAndSend(String, Object, IMessagePostProcessor)
  fullName.vb: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate(Of D).ConvertAndSend(System.String, System.Object, Steeltoe.Messaging.Core.IMessagePostProcessor)
  spec.csharp:
  - uid: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate`1.ConvertAndSend(System.String,System.Object,Steeltoe.Messaging.Core.IMessagePostProcessor)
    name: ConvertAndSend
    nameWithType: AbstractDestinationResolvingMessagingTemplate<D>.ConvertAndSend
    fullName: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate<D>.ConvertAndSend
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.Core.IMessagePostProcessor
    name: IMessagePostProcessor
    nameWithType: IMessagePostProcessor
    fullName: Steeltoe.Messaging.Core.IMessagePostProcessor
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate`1.ConvertAndSend(System.String,System.Object,Steeltoe.Messaging.Core.IMessagePostProcessor)
    name: ConvertAndSend
    nameWithType: AbstractDestinationResolvingMessagingTemplate(Of D).ConvertAndSend
    fullName: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate(Of D).ConvertAndSend
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.Core.IMessagePostProcessor
    name: IMessagePostProcessor
    nameWithType: IMessagePostProcessor
    fullName: Steeltoe.Messaging.Core.IMessagePostProcessor
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate`1.ConvertAndSend(System.String,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object},Steeltoe.Messaging.Core.IMessagePostProcessor)
  commentId: M:Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate`1.ConvertAndSend(System.String,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object},Steeltoe.Messaging.Core.IMessagePostProcessor)
  isExternal: true
  name: ConvertAndSend(String, Object, IDictionary<String, Object>, IMessagePostProcessor)
  nameWithType: AbstractDestinationResolvingMessagingTemplate<D>.ConvertAndSend(String, Object, IDictionary<String, Object>, IMessagePostProcessor)
  fullName: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate<D>.ConvertAndSend(System.String, System.Object, System.Collections.Generic.IDictionary<System.String, System.Object>, Steeltoe.Messaging.Core.IMessagePostProcessor)
  nameWithType.vb: AbstractDestinationResolvingMessagingTemplate(Of D).ConvertAndSend(String, Object, IDictionary(Of String, Object), IMessagePostProcessor)
  fullName.vb: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate(Of D).ConvertAndSend(System.String, System.Object, System.Collections.Generic.IDictionary(Of System.String, System.Object), Steeltoe.Messaging.Core.IMessagePostProcessor)
  name.vb: ConvertAndSend(String, Object, IDictionary(Of String, Object), IMessagePostProcessor)
  spec.csharp:
  - uid: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate`1.ConvertAndSend(System.String,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object},Steeltoe.Messaging.Core.IMessagePostProcessor)
    name: ConvertAndSend
    nameWithType: AbstractDestinationResolvingMessagingTemplate<D>.ConvertAndSend
    fullName: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate<D>.ConvertAndSend
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.Core.IMessagePostProcessor
    name: IMessagePostProcessor
    nameWithType: IMessagePostProcessor
    fullName: Steeltoe.Messaging.Core.IMessagePostProcessor
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate`1.ConvertAndSend(System.String,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object},Steeltoe.Messaging.Core.IMessagePostProcessor)
    name: ConvertAndSend
    nameWithType: AbstractDestinationResolvingMessagingTemplate(Of D).ConvertAndSend
    fullName: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate(Of D).ConvertAndSend
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.Core.IMessagePostProcessor
    name: IMessagePostProcessor
    nameWithType: IMessagePostProcessor
    fullName: Steeltoe.Messaging.Core.IMessagePostProcessor
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate`1.ConvertSendAndReceive``1(System.String,System.Object)
  commentId: M:Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate`1.ConvertSendAndReceive``1(System.String,System.Object)
  isExternal: true
  name: ConvertSendAndReceive<T>(String, Object)
  nameWithType: AbstractDestinationResolvingMessagingTemplate<D>.ConvertSendAndReceive<T>(String, Object)
  fullName: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate<D>.ConvertSendAndReceive<T>(System.String, System.Object)
  nameWithType.vb: AbstractDestinationResolvingMessagingTemplate(Of D).ConvertSendAndReceive(Of T)(String, Object)
  fullName.vb: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate(Of D).ConvertSendAndReceive(Of T)(System.String, System.Object)
  name.vb: ConvertSendAndReceive(Of T)(String, Object)
  spec.csharp:
  - uid: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate`1.ConvertSendAndReceive``1(System.String,System.Object)
    name: ConvertSendAndReceive<T>
    nameWithType: AbstractDestinationResolvingMessagingTemplate<D>.ConvertSendAndReceive<T>
    fullName: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate<D>.ConvertSendAndReceive<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate`1.ConvertSendAndReceive``1(System.String,System.Object)
    name: ConvertSendAndReceive(Of T)
    nameWithType: AbstractDestinationResolvingMessagingTemplate(Of D).ConvertSendAndReceive(Of T)
    fullName: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate(Of D).ConvertSendAndReceive(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate`1.ConvertSendAndReceive``1(System.String,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object})
  commentId: M:Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate`1.ConvertSendAndReceive``1(System.String,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object})
  isExternal: true
  name: ConvertSendAndReceive<T>(String, Object, IDictionary<String, Object>)
  nameWithType: AbstractDestinationResolvingMessagingTemplate<D>.ConvertSendAndReceive<T>(String, Object, IDictionary<String, Object>)
  fullName: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate<D>.ConvertSendAndReceive<T>(System.String, System.Object, System.Collections.Generic.IDictionary<System.String, System.Object>)
  nameWithType.vb: AbstractDestinationResolvingMessagingTemplate(Of D).ConvertSendAndReceive(Of T)(String, Object, IDictionary(Of String, Object))
  fullName.vb: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate(Of D).ConvertSendAndReceive(Of T)(System.String, System.Object, System.Collections.Generic.IDictionary(Of System.String, System.Object))
  name.vb: ConvertSendAndReceive(Of T)(String, Object, IDictionary(Of String, Object))
  spec.csharp:
  - uid: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate`1.ConvertSendAndReceive``1(System.String,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object})
    name: ConvertSendAndReceive<T>
    nameWithType: AbstractDestinationResolvingMessagingTemplate<D>.ConvertSendAndReceive<T>
    fullName: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate<D>.ConvertSendAndReceive<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate`1.ConvertSendAndReceive``1(System.String,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object})
    name: ConvertSendAndReceive(Of T)
    nameWithType: AbstractDestinationResolvingMessagingTemplate(Of D).ConvertSendAndReceive(Of T)
    fullName: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate(Of D).ConvertSendAndReceive(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate`1.ConvertSendAndReceive``1(System.String,System.Object,Steeltoe.Messaging.Core.IMessagePostProcessor)
  commentId: M:Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate`1.ConvertSendAndReceive``1(System.String,System.Object,Steeltoe.Messaging.Core.IMessagePostProcessor)
  isExternal: true
  name: ConvertSendAndReceive<T>(String, Object, IMessagePostProcessor)
  nameWithType: AbstractDestinationResolvingMessagingTemplate<D>.ConvertSendAndReceive<T>(String, Object, IMessagePostProcessor)
  fullName: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate<D>.ConvertSendAndReceive<T>(System.String, System.Object, Steeltoe.Messaging.Core.IMessagePostProcessor)
  nameWithType.vb: AbstractDestinationResolvingMessagingTemplate(Of D).ConvertSendAndReceive(Of T)(String, Object, IMessagePostProcessor)
  fullName.vb: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate(Of D).ConvertSendAndReceive(Of T)(System.String, System.Object, Steeltoe.Messaging.Core.IMessagePostProcessor)
  name.vb: ConvertSendAndReceive(Of T)(String, Object, IMessagePostProcessor)
  spec.csharp:
  - uid: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate`1.ConvertSendAndReceive``1(System.String,System.Object,Steeltoe.Messaging.Core.IMessagePostProcessor)
    name: ConvertSendAndReceive<T>
    nameWithType: AbstractDestinationResolvingMessagingTemplate<D>.ConvertSendAndReceive<T>
    fullName: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate<D>.ConvertSendAndReceive<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.Core.IMessagePostProcessor
    name: IMessagePostProcessor
    nameWithType: IMessagePostProcessor
    fullName: Steeltoe.Messaging.Core.IMessagePostProcessor
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate`1.ConvertSendAndReceive``1(System.String,System.Object,Steeltoe.Messaging.Core.IMessagePostProcessor)
    name: ConvertSendAndReceive(Of T)
    nameWithType: AbstractDestinationResolvingMessagingTemplate(Of D).ConvertSendAndReceive(Of T)
    fullName: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate(Of D).ConvertSendAndReceive(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.Core.IMessagePostProcessor
    name: IMessagePostProcessor
    nameWithType: IMessagePostProcessor
    fullName: Steeltoe.Messaging.Core.IMessagePostProcessor
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate`1.ConvertSendAndReceive``1(System.String,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object},Steeltoe.Messaging.Core.IMessagePostProcessor)
  commentId: M:Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate`1.ConvertSendAndReceive``1(System.String,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object},Steeltoe.Messaging.Core.IMessagePostProcessor)
  isExternal: true
  name: ConvertSendAndReceive<T>(String, Object, IDictionary<String, Object>, IMessagePostProcessor)
  nameWithType: AbstractDestinationResolvingMessagingTemplate<D>.ConvertSendAndReceive<T>(String, Object, IDictionary<String, Object>, IMessagePostProcessor)
  fullName: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate<D>.ConvertSendAndReceive<T>(System.String, System.Object, System.Collections.Generic.IDictionary<System.String, System.Object>, Steeltoe.Messaging.Core.IMessagePostProcessor)
  nameWithType.vb: AbstractDestinationResolvingMessagingTemplate(Of D).ConvertSendAndReceive(Of T)(String, Object, IDictionary(Of String, Object), IMessagePostProcessor)
  fullName.vb: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate(Of D).ConvertSendAndReceive(Of T)(System.String, System.Object, System.Collections.Generic.IDictionary(Of System.String, System.Object), Steeltoe.Messaging.Core.IMessagePostProcessor)
  name.vb: ConvertSendAndReceive(Of T)(String, Object, IDictionary(Of String, Object), IMessagePostProcessor)
  spec.csharp:
  - uid: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate`1.ConvertSendAndReceive``1(System.String,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object},Steeltoe.Messaging.Core.IMessagePostProcessor)
    name: ConvertSendAndReceive<T>
    nameWithType: AbstractDestinationResolvingMessagingTemplate<D>.ConvertSendAndReceive<T>
    fullName: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate<D>.ConvertSendAndReceive<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.Core.IMessagePostProcessor
    name: IMessagePostProcessor
    nameWithType: IMessagePostProcessor
    fullName: Steeltoe.Messaging.Core.IMessagePostProcessor
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate`1.ConvertSendAndReceive``1(System.String,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object},Steeltoe.Messaging.Core.IMessagePostProcessor)
    name: ConvertSendAndReceive(Of T)
    nameWithType: AbstractDestinationResolvingMessagingTemplate(Of D).ConvertSendAndReceive(Of T)
    fullName: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate(Of D).ConvertSendAndReceive(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.Core.IMessagePostProcessor
    name: IMessagePostProcessor
    nameWithType: IMessagePostProcessor
    fullName: Steeltoe.Messaging.Core.IMessagePostProcessor
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate`1.Receive(System.String)
  commentId: M:Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate`1.Receive(System.String)
  isExternal: true
  name: Receive(String)
  nameWithType: AbstractDestinationResolvingMessagingTemplate<D>.Receive(String)
  fullName: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate<D>.Receive(System.String)
  nameWithType.vb: AbstractDestinationResolvingMessagingTemplate(Of D).Receive(String)
  fullName.vb: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate(Of D).Receive(System.String)
  spec.csharp:
  - uid: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate`1.Receive(System.String)
    name: Receive
    nameWithType: AbstractDestinationResolvingMessagingTemplate<D>.Receive
    fullName: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate<D>.Receive
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate`1.Receive(System.String)
    name: Receive
    nameWithType: AbstractDestinationResolvingMessagingTemplate(Of D).Receive
    fullName: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate(Of D).Receive
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate`1.ReceiveAndConvert``1(System.String)
  commentId: M:Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate`1.ReceiveAndConvert``1(System.String)
  isExternal: true
  name: ReceiveAndConvert<T>(String)
  nameWithType: AbstractDestinationResolvingMessagingTemplate<D>.ReceiveAndConvert<T>(String)
  fullName: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate<D>.ReceiveAndConvert<T>(System.String)
  nameWithType.vb: AbstractDestinationResolvingMessagingTemplate(Of D).ReceiveAndConvert(Of T)(String)
  fullName.vb: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate(Of D).ReceiveAndConvert(Of T)(System.String)
  name.vb: ReceiveAndConvert(Of T)(String)
  spec.csharp:
  - uid: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate`1.ReceiveAndConvert``1(System.String)
    name: ReceiveAndConvert<T>
    nameWithType: AbstractDestinationResolvingMessagingTemplate<D>.ReceiveAndConvert<T>
    fullName: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate<D>.ReceiveAndConvert<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate`1.ReceiveAndConvert``1(System.String)
    name: ReceiveAndConvert(Of T)
    nameWithType: AbstractDestinationResolvingMessagingTemplate(Of D).ReceiveAndConvert(Of T)
    fullName: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate(Of D).ReceiveAndConvert(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate`1.Send(System.String,Steeltoe.Messaging.IMessage)
  commentId: M:Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate`1.Send(System.String,Steeltoe.Messaging.IMessage)
  isExternal: true
  name: Send(String, IMessage)
  nameWithType: AbstractDestinationResolvingMessagingTemplate<D>.Send(String, IMessage)
  fullName: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate<D>.Send(System.String, Steeltoe.Messaging.IMessage)
  nameWithType.vb: AbstractDestinationResolvingMessagingTemplate(Of D).Send(String, IMessage)
  fullName.vb: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate(Of D).Send(System.String, Steeltoe.Messaging.IMessage)
  spec.csharp:
  - uid: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate`1.Send(System.String,Steeltoe.Messaging.IMessage)
    name: Send
    nameWithType: AbstractDestinationResolvingMessagingTemplate<D>.Send
    fullName: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate<D>.Send
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate`1.Send(System.String,Steeltoe.Messaging.IMessage)
    name: Send
    nameWithType: AbstractDestinationResolvingMessagingTemplate(Of D).Send
    fullName: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate(Of D).Send
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate`1.SendAndReceive(System.String,Steeltoe.Messaging.IMessage)
  commentId: M:Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate`1.SendAndReceive(System.String,Steeltoe.Messaging.IMessage)
  isExternal: true
  name: SendAndReceive(String, IMessage)
  nameWithType: AbstractDestinationResolvingMessagingTemplate<D>.SendAndReceive(String, IMessage)
  fullName: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate<D>.SendAndReceive(System.String, Steeltoe.Messaging.IMessage)
  nameWithType.vb: AbstractDestinationResolvingMessagingTemplate(Of D).SendAndReceive(String, IMessage)
  fullName.vb: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate(Of D).SendAndReceive(System.String, Steeltoe.Messaging.IMessage)
  spec.csharp:
  - uid: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate`1.SendAndReceive(System.String,Steeltoe.Messaging.IMessage)
    name: SendAndReceive
    nameWithType: AbstractDestinationResolvingMessagingTemplate<D>.SendAndReceive
    fullName: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate<D>.SendAndReceive
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate`1.SendAndReceive(System.String,Steeltoe.Messaging.IMessage)
    name: SendAndReceive
    nameWithType: AbstractDestinationResolvingMessagingTemplate(Of D).SendAndReceive
    fullName: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate(Of D).SendAndReceive
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate`1.ResolveDestination(System.String)
  commentId: M:Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate`1.ResolveDestination(System.String)
  isExternal: true
  name: ResolveDestination(String)
  nameWithType: AbstractDestinationResolvingMessagingTemplate<D>.ResolveDestination(String)
  fullName: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate<D>.ResolveDestination(System.String)
  nameWithType.vb: AbstractDestinationResolvingMessagingTemplate(Of D).ResolveDestination(String)
  fullName.vb: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate(Of D).ResolveDestination(System.String)
  spec.csharp:
  - uid: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate`1.ResolveDestination(System.String)
    name: ResolveDestination
    nameWithType: AbstractDestinationResolvingMessagingTemplate<D>.ResolveDestination
    fullName: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate<D>.ResolveDestination
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate`1.ResolveDestination(System.String)
    name: ResolveDestination
    nameWithType: AbstractDestinationResolvingMessagingTemplate(Of D).ResolveDestination
    fullName: Steeltoe.Messaging.Core.AbstractDestinationResolvingMessagingTemplate(Of D).ResolveDestination
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Core.AbstractMessagingTemplate`1.ConvertSendAndReceiveAsync``1(System.Object,System.Threading.CancellationToken)
  commentId: M:Steeltoe.Messaging.Core.AbstractMessagingTemplate`1.ConvertSendAndReceiveAsync``1(System.Object,System.Threading.CancellationToken)
  isExternal: true
  name: ConvertSendAndReceiveAsync<T>(Object, CancellationToken)
  nameWithType: AbstractMessagingTemplate<D>.ConvertSendAndReceiveAsync<T>(Object, CancellationToken)
  fullName: Steeltoe.Messaging.Core.AbstractMessagingTemplate<D>.ConvertSendAndReceiveAsync<T>(System.Object, System.Threading.CancellationToken)
  nameWithType.vb: AbstractMessagingTemplate(Of D).ConvertSendAndReceiveAsync(Of T)(Object, CancellationToken)
  fullName.vb: Steeltoe.Messaging.Core.AbstractMessagingTemplate(Of D).ConvertSendAndReceiveAsync(Of T)(System.Object, System.Threading.CancellationToken)
  name.vb: ConvertSendAndReceiveAsync(Of T)(Object, CancellationToken)
  spec.csharp:
  - uid: Steeltoe.Messaging.Core.AbstractMessagingTemplate`1.ConvertSendAndReceiveAsync``1(System.Object,System.Threading.CancellationToken)
    name: ConvertSendAndReceiveAsync<T>
    nameWithType: AbstractMessagingTemplate<D>.ConvertSendAndReceiveAsync<T>
    fullName: Steeltoe.Messaging.Core.AbstractMessagingTemplate<D>.ConvertSendAndReceiveAsync<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Core.AbstractMessagingTemplate`1.ConvertSendAndReceiveAsync``1(System.Object,System.Threading.CancellationToken)
    name: ConvertSendAndReceiveAsync(Of T)
    nameWithType: AbstractMessagingTemplate(Of D).ConvertSendAndReceiveAsync(Of T)
    fullName: Steeltoe.Messaging.Core.AbstractMessagingTemplate(Of D).ConvertSendAndReceiveAsync(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Core.AbstractMessagingTemplate`1.ConvertSendAndReceiveAsync``1(`0,System.Object,System.Threading.CancellationToken)
  commentId: M:Steeltoe.Messaging.Core.AbstractMessagingTemplate`1.ConvertSendAndReceiveAsync``1(`0,System.Object,System.Threading.CancellationToken)
  isExternal: true
  name: ConvertSendAndReceiveAsync<T>(D, Object, CancellationToken)
  nameWithType: AbstractMessagingTemplate<D>.ConvertSendAndReceiveAsync<T>(D, Object, CancellationToken)
  fullName: Steeltoe.Messaging.Core.AbstractMessagingTemplate<D>.ConvertSendAndReceiveAsync<T>(D, System.Object, System.Threading.CancellationToken)
  nameWithType.vb: AbstractMessagingTemplate(Of D).ConvertSendAndReceiveAsync(Of T)(D, Object, CancellationToken)
  fullName.vb: Steeltoe.Messaging.Core.AbstractMessagingTemplate(Of D).ConvertSendAndReceiveAsync(Of T)(D, System.Object, System.Threading.CancellationToken)
  name.vb: ConvertSendAndReceiveAsync(Of T)(D, Object, CancellationToken)
  spec.csharp:
  - uid: Steeltoe.Messaging.Core.AbstractMessagingTemplate`1.ConvertSendAndReceiveAsync``1(`0,System.Object,System.Threading.CancellationToken)
    name: ConvertSendAndReceiveAsync<T>
    nameWithType: AbstractMessagingTemplate<D>.ConvertSendAndReceiveAsync<T>
    fullName: Steeltoe.Messaging.Core.AbstractMessagingTemplate<D>.ConvertSendAndReceiveAsync<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: D
    nameWithType: D
    fullName: D
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Core.AbstractMessagingTemplate`1.ConvertSendAndReceiveAsync``1(`0,System.Object,System.Threading.CancellationToken)
    name: ConvertSendAndReceiveAsync(Of T)
    nameWithType: AbstractMessagingTemplate(Of D).ConvertSendAndReceiveAsync(Of T)
    fullName: Steeltoe.Messaging.Core.AbstractMessagingTemplate(Of D).ConvertSendAndReceiveAsync(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: D
    nameWithType: D
    fullName: D
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Core.AbstractMessagingTemplate`1.ConvertSendAndReceiveAsync``1(`0,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object},System.Threading.CancellationToken)
  commentId: M:Steeltoe.Messaging.Core.AbstractMessagingTemplate`1.ConvertSendAndReceiveAsync``1(`0,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object},System.Threading.CancellationToken)
  isExternal: true
  name: ConvertSendAndReceiveAsync<T>(D, Object, IDictionary<String, Object>, CancellationToken)
  nameWithType: AbstractMessagingTemplate<D>.ConvertSendAndReceiveAsync<T>(D, Object, IDictionary<String, Object>, CancellationToken)
  fullName: Steeltoe.Messaging.Core.AbstractMessagingTemplate<D>.ConvertSendAndReceiveAsync<T>(D, System.Object, System.Collections.Generic.IDictionary<System.String, System.Object>, System.Threading.CancellationToken)
  nameWithType.vb: AbstractMessagingTemplate(Of D).ConvertSendAndReceiveAsync(Of T)(D, Object, IDictionary(Of String, Object), CancellationToken)
  fullName.vb: Steeltoe.Messaging.Core.AbstractMessagingTemplate(Of D).ConvertSendAndReceiveAsync(Of T)(D, System.Object, System.Collections.Generic.IDictionary(Of System.String, System.Object), System.Threading.CancellationToken)
  name.vb: ConvertSendAndReceiveAsync(Of T)(D, Object, IDictionary(Of String, Object), CancellationToken)
  spec.csharp:
  - uid: Steeltoe.Messaging.Core.AbstractMessagingTemplate`1.ConvertSendAndReceiveAsync``1(`0,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object},System.Threading.CancellationToken)
    name: ConvertSendAndReceiveAsync<T>
    nameWithType: AbstractMessagingTemplate<D>.ConvertSendAndReceiveAsync<T>
    fullName: Steeltoe.Messaging.Core.AbstractMessagingTemplate<D>.ConvertSendAndReceiveAsync<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: D
    nameWithType: D
    fullName: D
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Core.AbstractMessagingTemplate`1.ConvertSendAndReceiveAsync``1(`0,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object},System.Threading.CancellationToken)
    name: ConvertSendAndReceiveAsync(Of T)
    nameWithType: AbstractMessagingTemplate(Of D).ConvertSendAndReceiveAsync(Of T)
    fullName: Steeltoe.Messaging.Core.AbstractMessagingTemplate(Of D).ConvertSendAndReceiveAsync(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: D
    nameWithType: D
    fullName: D
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Core.AbstractMessagingTemplate`1.ConvertSendAndReceiveAsync``1(System.Object,Steeltoe.Messaging.Core.IMessagePostProcessor,System.Threading.CancellationToken)
  commentId: M:Steeltoe.Messaging.Core.AbstractMessagingTemplate`1.ConvertSendAndReceiveAsync``1(System.Object,Steeltoe.Messaging.Core.IMessagePostProcessor,System.Threading.CancellationToken)
  isExternal: true
  name: ConvertSendAndReceiveAsync<T>(Object, IMessagePostProcessor, CancellationToken)
  nameWithType: AbstractMessagingTemplate<D>.ConvertSendAndReceiveAsync<T>(Object, IMessagePostProcessor, CancellationToken)
  fullName: Steeltoe.Messaging.Core.AbstractMessagingTemplate<D>.ConvertSendAndReceiveAsync<T>(System.Object, Steeltoe.Messaging.Core.IMessagePostProcessor, System.Threading.CancellationToken)
  nameWithType.vb: AbstractMessagingTemplate(Of D).ConvertSendAndReceiveAsync(Of T)(Object, IMessagePostProcessor, CancellationToken)
  fullName.vb: Steeltoe.Messaging.Core.AbstractMessagingTemplate(Of D).ConvertSendAndReceiveAsync(Of T)(System.Object, Steeltoe.Messaging.Core.IMessagePostProcessor, System.Threading.CancellationToken)
  name.vb: ConvertSendAndReceiveAsync(Of T)(Object, IMessagePostProcessor, CancellationToken)
  spec.csharp:
  - uid: Steeltoe.Messaging.Core.AbstractMessagingTemplate`1.ConvertSendAndReceiveAsync``1(System.Object,Steeltoe.Messaging.Core.IMessagePostProcessor,System.Threading.CancellationToken)
    name: ConvertSendAndReceiveAsync<T>
    nameWithType: AbstractMessagingTemplate<D>.ConvertSendAndReceiveAsync<T>
    fullName: Steeltoe.Messaging.Core.AbstractMessagingTemplate<D>.ConvertSendAndReceiveAsync<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.Core.IMessagePostProcessor
    name: IMessagePostProcessor
    nameWithType: IMessagePostProcessor
    fullName: Steeltoe.Messaging.Core.IMessagePostProcessor
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Core.AbstractMessagingTemplate`1.ConvertSendAndReceiveAsync``1(System.Object,Steeltoe.Messaging.Core.IMessagePostProcessor,System.Threading.CancellationToken)
    name: ConvertSendAndReceiveAsync(Of T)
    nameWithType: AbstractMessagingTemplate(Of D).ConvertSendAndReceiveAsync(Of T)
    fullName: Steeltoe.Messaging.Core.AbstractMessagingTemplate(Of D).ConvertSendAndReceiveAsync(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.Core.IMessagePostProcessor
    name: IMessagePostProcessor
    nameWithType: IMessagePostProcessor
    fullName: Steeltoe.Messaging.Core.IMessagePostProcessor
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Core.AbstractMessagingTemplate`1.ConvertSendAndReceiveAsync``1(`0,System.Object,Steeltoe.Messaging.Core.IMessagePostProcessor,System.Threading.CancellationToken)
  commentId: M:Steeltoe.Messaging.Core.AbstractMessagingTemplate`1.ConvertSendAndReceiveAsync``1(`0,System.Object,Steeltoe.Messaging.Core.IMessagePostProcessor,System.Threading.CancellationToken)
  isExternal: true
  name: ConvertSendAndReceiveAsync<T>(D, Object, IMessagePostProcessor, CancellationToken)
  nameWithType: AbstractMessagingTemplate<D>.ConvertSendAndReceiveAsync<T>(D, Object, IMessagePostProcessor, CancellationToken)
  fullName: Steeltoe.Messaging.Core.AbstractMessagingTemplate<D>.ConvertSendAndReceiveAsync<T>(D, System.Object, Steeltoe.Messaging.Core.IMessagePostProcessor, System.Threading.CancellationToken)
  nameWithType.vb: AbstractMessagingTemplate(Of D).ConvertSendAndReceiveAsync(Of T)(D, Object, IMessagePostProcessor, CancellationToken)
  fullName.vb: Steeltoe.Messaging.Core.AbstractMessagingTemplate(Of D).ConvertSendAndReceiveAsync(Of T)(D, System.Object, Steeltoe.Messaging.Core.IMessagePostProcessor, System.Threading.CancellationToken)
  name.vb: ConvertSendAndReceiveAsync(Of T)(D, Object, IMessagePostProcessor, CancellationToken)
  spec.csharp:
  - uid: Steeltoe.Messaging.Core.AbstractMessagingTemplate`1.ConvertSendAndReceiveAsync``1(`0,System.Object,Steeltoe.Messaging.Core.IMessagePostProcessor,System.Threading.CancellationToken)
    name: ConvertSendAndReceiveAsync<T>
    nameWithType: AbstractMessagingTemplate<D>.ConvertSendAndReceiveAsync<T>
    fullName: Steeltoe.Messaging.Core.AbstractMessagingTemplate<D>.ConvertSendAndReceiveAsync<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: D
    nameWithType: D
    fullName: D
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.Core.IMessagePostProcessor
    name: IMessagePostProcessor
    nameWithType: IMessagePostProcessor
    fullName: Steeltoe.Messaging.Core.IMessagePostProcessor
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Core.AbstractMessagingTemplate`1.ConvertSendAndReceiveAsync``1(`0,System.Object,Steeltoe.Messaging.Core.IMessagePostProcessor,System.Threading.CancellationToken)
    name: ConvertSendAndReceiveAsync(Of T)
    nameWithType: AbstractMessagingTemplate(Of D).ConvertSendAndReceiveAsync(Of T)
    fullName: Steeltoe.Messaging.Core.AbstractMessagingTemplate(Of D).ConvertSendAndReceiveAsync(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: D
    nameWithType: D
    fullName: D
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.Core.IMessagePostProcessor
    name: IMessagePostProcessor
    nameWithType: IMessagePostProcessor
    fullName: Steeltoe.Messaging.Core.IMessagePostProcessor
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Core.AbstractMessagingTemplate`1.ConvertSendAndReceiveAsync``1(`0,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object},Steeltoe.Messaging.Core.IMessagePostProcessor,System.Threading.CancellationToken)
  commentId: M:Steeltoe.Messaging.Core.AbstractMessagingTemplate`1.ConvertSendAndReceiveAsync``1(`0,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object},Steeltoe.Messaging.Core.IMessagePostProcessor,System.Threading.CancellationToken)
  isExternal: true
  name: ConvertSendAndReceiveAsync<T>(D, Object, IDictionary<String, Object>, IMessagePostProcessor, CancellationToken)
  nameWithType: AbstractMessagingTemplate<D>.ConvertSendAndReceiveAsync<T>(D, Object, IDictionary<String, Object>, IMessagePostProcessor, CancellationToken)
  fullName: Steeltoe.Messaging.Core.AbstractMessagingTemplate<D>.ConvertSendAndReceiveAsync<T>(D, System.Object, System.Collections.Generic.IDictionary<System.String, System.Object>, Steeltoe.Messaging.Core.IMessagePostProcessor, System.Threading.CancellationToken)
  nameWithType.vb: AbstractMessagingTemplate(Of D).ConvertSendAndReceiveAsync(Of T)(D, Object, IDictionary(Of String, Object), IMessagePostProcessor, CancellationToken)
  fullName.vb: Steeltoe.Messaging.Core.AbstractMessagingTemplate(Of D).ConvertSendAndReceiveAsync(Of T)(D, System.Object, System.Collections.Generic.IDictionary(Of System.String, System.Object), Steeltoe.Messaging.Core.IMessagePostProcessor, System.Threading.CancellationToken)
  name.vb: ConvertSendAndReceiveAsync(Of T)(D, Object, IDictionary(Of String, Object), IMessagePostProcessor, CancellationToken)
  spec.csharp:
  - uid: Steeltoe.Messaging.Core.AbstractMessagingTemplate`1.ConvertSendAndReceiveAsync``1(`0,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object},Steeltoe.Messaging.Core.IMessagePostProcessor,System.Threading.CancellationToken)
    name: ConvertSendAndReceiveAsync<T>
    nameWithType: AbstractMessagingTemplate<D>.ConvertSendAndReceiveAsync<T>
    fullName: Steeltoe.Messaging.Core.AbstractMessagingTemplate<D>.ConvertSendAndReceiveAsync<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: D
    nameWithType: D
    fullName: D
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.Core.IMessagePostProcessor
    name: IMessagePostProcessor
    nameWithType: IMessagePostProcessor
    fullName: Steeltoe.Messaging.Core.IMessagePostProcessor
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Core.AbstractMessagingTemplate`1.ConvertSendAndReceiveAsync``1(`0,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object},Steeltoe.Messaging.Core.IMessagePostProcessor,System.Threading.CancellationToken)
    name: ConvertSendAndReceiveAsync(Of T)
    nameWithType: AbstractMessagingTemplate(Of D).ConvertSendAndReceiveAsync(Of T)
    fullName: Steeltoe.Messaging.Core.AbstractMessagingTemplate(Of D).ConvertSendAndReceiveAsync(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: D
    nameWithType: D
    fullName: D
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.Core.IMessagePostProcessor
    name: IMessagePostProcessor
    nameWithType: IMessagePostProcessor
    fullName: Steeltoe.Messaging.Core.IMessagePostProcessor
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Core.AbstractMessagingTemplate`1.SendAndReceiveAsync(Steeltoe.Messaging.IMessage,System.Threading.CancellationToken)
  commentId: M:Steeltoe.Messaging.Core.AbstractMessagingTemplate`1.SendAndReceiveAsync(Steeltoe.Messaging.IMessage,System.Threading.CancellationToken)
  isExternal: true
  name: SendAndReceiveAsync(IMessage, CancellationToken)
  nameWithType: AbstractMessagingTemplate<D>.SendAndReceiveAsync(IMessage, CancellationToken)
  fullName: Steeltoe.Messaging.Core.AbstractMessagingTemplate<D>.SendAndReceiveAsync(Steeltoe.Messaging.IMessage, System.Threading.CancellationToken)
  nameWithType.vb: AbstractMessagingTemplate(Of D).SendAndReceiveAsync(IMessage, CancellationToken)
  fullName.vb: Steeltoe.Messaging.Core.AbstractMessagingTemplate(Of D).SendAndReceiveAsync(Steeltoe.Messaging.IMessage, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Steeltoe.Messaging.Core.AbstractMessagingTemplate`1.SendAndReceiveAsync(Steeltoe.Messaging.IMessage,System.Threading.CancellationToken)
    name: SendAndReceiveAsync
    nameWithType: AbstractMessagingTemplate<D>.SendAndReceiveAsync
    fullName: Steeltoe.Messaging.Core.AbstractMessagingTemplate<D>.SendAndReceiveAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Core.AbstractMessagingTemplate`1.SendAndReceiveAsync(Steeltoe.Messaging.IMessage,System.Threading.CancellationToken)
    name: SendAndReceiveAsync
    nameWithType: AbstractMessagingTemplate(Of D).SendAndReceiveAsync
    fullName: Steeltoe.Messaging.Core.AbstractMessagingTemplate(Of D).SendAndReceiveAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Core.AbstractMessagingTemplate`1.SendAndReceiveAsync(`0,Steeltoe.Messaging.IMessage,System.Threading.CancellationToken)
  commentId: M:Steeltoe.Messaging.Core.AbstractMessagingTemplate`1.SendAndReceiveAsync(`0,Steeltoe.Messaging.IMessage,System.Threading.CancellationToken)
  isExternal: true
  name: SendAndReceiveAsync(D, IMessage, CancellationToken)
  nameWithType: AbstractMessagingTemplate<D>.SendAndReceiveAsync(D, IMessage, CancellationToken)
  fullName: Steeltoe.Messaging.Core.AbstractMessagingTemplate<D>.SendAndReceiveAsync(D, Steeltoe.Messaging.IMessage, System.Threading.CancellationToken)
  nameWithType.vb: AbstractMessagingTemplate(Of D).SendAndReceiveAsync(D, IMessage, CancellationToken)
  fullName.vb: Steeltoe.Messaging.Core.AbstractMessagingTemplate(Of D).SendAndReceiveAsync(D, Steeltoe.Messaging.IMessage, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Steeltoe.Messaging.Core.AbstractMessagingTemplate`1.SendAndReceiveAsync(`0,Steeltoe.Messaging.IMessage,System.Threading.CancellationToken)
    name: SendAndReceiveAsync
    nameWithType: AbstractMessagingTemplate<D>.SendAndReceiveAsync
    fullName: Steeltoe.Messaging.Core.AbstractMessagingTemplate<D>.SendAndReceiveAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: D
    nameWithType: D
    fullName: D
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Core.AbstractMessagingTemplate`1.SendAndReceiveAsync(`0,Steeltoe.Messaging.IMessage,System.Threading.CancellationToken)
    name: SendAndReceiveAsync
    nameWithType: AbstractMessagingTemplate(Of D).SendAndReceiveAsync
    fullName: Steeltoe.Messaging.Core.AbstractMessagingTemplate(Of D).SendAndReceiveAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: D
    nameWithType: D
    fullName: D
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Core.AbstractMessagingTemplate`1.ConvertSendAndReceive``1(System.Object)
  commentId: M:Steeltoe.Messaging.Core.AbstractMessagingTemplate`1.ConvertSendAndReceive``1(System.Object)
  isExternal: true
  name: ConvertSendAndReceive<T>(Object)
  nameWithType: AbstractMessagingTemplate<D>.ConvertSendAndReceive<T>(Object)
  fullName: Steeltoe.Messaging.Core.AbstractMessagingTemplate<D>.ConvertSendAndReceive<T>(System.Object)
  nameWithType.vb: AbstractMessagingTemplate(Of D).ConvertSendAndReceive(Of T)(Object)
  fullName.vb: Steeltoe.Messaging.Core.AbstractMessagingTemplate(Of D).ConvertSendAndReceive(Of T)(System.Object)
  name.vb: ConvertSendAndReceive(Of T)(Object)
  spec.csharp:
  - uid: Steeltoe.Messaging.Core.AbstractMessagingTemplate`1.ConvertSendAndReceive``1(System.Object)
    name: ConvertSendAndReceive<T>
    nameWithType: AbstractMessagingTemplate<D>.ConvertSendAndReceive<T>
    fullName: Steeltoe.Messaging.Core.AbstractMessagingTemplate<D>.ConvertSendAndReceive<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Core.AbstractMessagingTemplate`1.ConvertSendAndReceive``1(System.Object)
    name: ConvertSendAndReceive(Of T)
    nameWithType: AbstractMessagingTemplate(Of D).ConvertSendAndReceive(Of T)
    fullName: Steeltoe.Messaging.Core.AbstractMessagingTemplate(Of D).ConvertSendAndReceive(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Core.AbstractMessagingTemplate`1.ConvertSendAndReceive``1(`0,System.Object)
  commentId: M:Steeltoe.Messaging.Core.AbstractMessagingTemplate`1.ConvertSendAndReceive``1(`0,System.Object)
  isExternal: true
  name: ConvertSendAndReceive<T>(D, Object)
  nameWithType: AbstractMessagingTemplate<D>.ConvertSendAndReceive<T>(D, Object)
  fullName: Steeltoe.Messaging.Core.AbstractMessagingTemplate<D>.ConvertSendAndReceive<T>(D, System.Object)
  nameWithType.vb: AbstractMessagingTemplate(Of D).ConvertSendAndReceive(Of T)(D, Object)
  fullName.vb: Steeltoe.Messaging.Core.AbstractMessagingTemplate(Of D).ConvertSendAndReceive(Of T)(D, System.Object)
  name.vb: ConvertSendAndReceive(Of T)(D, Object)
  spec.csharp:
  - uid: Steeltoe.Messaging.Core.AbstractMessagingTemplate`1.ConvertSendAndReceive``1(`0,System.Object)
    name: ConvertSendAndReceive<T>
    nameWithType: AbstractMessagingTemplate<D>.ConvertSendAndReceive<T>
    fullName: Steeltoe.Messaging.Core.AbstractMessagingTemplate<D>.ConvertSendAndReceive<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: D
    nameWithType: D
    fullName: D
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Core.AbstractMessagingTemplate`1.ConvertSendAndReceive``1(`0,System.Object)
    name: ConvertSendAndReceive(Of T)
    nameWithType: AbstractMessagingTemplate(Of D).ConvertSendAndReceive(Of T)
    fullName: Steeltoe.Messaging.Core.AbstractMessagingTemplate(Of D).ConvertSendAndReceive(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: D
    nameWithType: D
    fullName: D
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Core.AbstractMessagingTemplate`1.ConvertSendAndReceive``1(`0,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object})
  commentId: M:Steeltoe.Messaging.Core.AbstractMessagingTemplate`1.ConvertSendAndReceive``1(`0,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object})
  isExternal: true
  name: ConvertSendAndReceive<T>(D, Object, IDictionary<String, Object>)
  nameWithType: AbstractMessagingTemplate<D>.ConvertSendAndReceive<T>(D, Object, IDictionary<String, Object>)
  fullName: Steeltoe.Messaging.Core.AbstractMessagingTemplate<D>.ConvertSendAndReceive<T>(D, System.Object, System.Collections.Generic.IDictionary<System.String, System.Object>)
  nameWithType.vb: AbstractMessagingTemplate(Of D).ConvertSendAndReceive(Of T)(D, Object, IDictionary(Of String, Object))
  fullName.vb: Steeltoe.Messaging.Core.AbstractMessagingTemplate(Of D).ConvertSendAndReceive(Of T)(D, System.Object, System.Collections.Generic.IDictionary(Of System.String, System.Object))
  name.vb: ConvertSendAndReceive(Of T)(D, Object, IDictionary(Of String, Object))
  spec.csharp:
  - uid: Steeltoe.Messaging.Core.AbstractMessagingTemplate`1.ConvertSendAndReceive``1(`0,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object})
    name: ConvertSendAndReceive<T>
    nameWithType: AbstractMessagingTemplate<D>.ConvertSendAndReceive<T>
    fullName: Steeltoe.Messaging.Core.AbstractMessagingTemplate<D>.ConvertSendAndReceive<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: D
    nameWithType: D
    fullName: D
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Core.AbstractMessagingTemplate`1.ConvertSendAndReceive``1(`0,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object})
    name: ConvertSendAndReceive(Of T)
    nameWithType: AbstractMessagingTemplate(Of D).ConvertSendAndReceive(Of T)
    fullName: Steeltoe.Messaging.Core.AbstractMessagingTemplate(Of D).ConvertSendAndReceive(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: D
    nameWithType: D
    fullName: D
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Core.AbstractMessagingTemplate`1.ConvertSendAndReceive``1(System.Object,Steeltoe.Messaging.Core.IMessagePostProcessor)
  commentId: M:Steeltoe.Messaging.Core.AbstractMessagingTemplate`1.ConvertSendAndReceive``1(System.Object,Steeltoe.Messaging.Core.IMessagePostProcessor)
  isExternal: true
  name: ConvertSendAndReceive<T>(Object, IMessagePostProcessor)
  nameWithType: AbstractMessagingTemplate<D>.ConvertSendAndReceive<T>(Object, IMessagePostProcessor)
  fullName: Steeltoe.Messaging.Core.AbstractMessagingTemplate<D>.ConvertSendAndReceive<T>(System.Object, Steeltoe.Messaging.Core.IMessagePostProcessor)
  nameWithType.vb: AbstractMessagingTemplate(Of D).ConvertSendAndReceive(Of T)(Object, IMessagePostProcessor)
  fullName.vb: Steeltoe.Messaging.Core.AbstractMessagingTemplate(Of D).ConvertSendAndReceive(Of T)(System.Object, Steeltoe.Messaging.Core.IMessagePostProcessor)
  name.vb: ConvertSendAndReceive(Of T)(Object, IMessagePostProcessor)
  spec.csharp:
  - uid: Steeltoe.Messaging.Core.AbstractMessagingTemplate`1.ConvertSendAndReceive``1(System.Object,Steeltoe.Messaging.Core.IMessagePostProcessor)
    name: ConvertSendAndReceive<T>
    nameWithType: AbstractMessagingTemplate<D>.ConvertSendAndReceive<T>
    fullName: Steeltoe.Messaging.Core.AbstractMessagingTemplate<D>.ConvertSendAndReceive<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.Core.IMessagePostProcessor
    name: IMessagePostProcessor
    nameWithType: IMessagePostProcessor
    fullName: Steeltoe.Messaging.Core.IMessagePostProcessor
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Core.AbstractMessagingTemplate`1.ConvertSendAndReceive``1(System.Object,Steeltoe.Messaging.Core.IMessagePostProcessor)
    name: ConvertSendAndReceive(Of T)
    nameWithType: AbstractMessagingTemplate(Of D).ConvertSendAndReceive(Of T)
    fullName: Steeltoe.Messaging.Core.AbstractMessagingTemplate(Of D).ConvertSendAndReceive(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.Core.IMessagePostProcessor
    name: IMessagePostProcessor
    nameWithType: IMessagePostProcessor
    fullName: Steeltoe.Messaging.Core.IMessagePostProcessor
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Core.AbstractMessagingTemplate`1.ConvertSendAndReceive``1(`0,System.Object,Steeltoe.Messaging.Core.IMessagePostProcessor)
  commentId: M:Steeltoe.Messaging.Core.AbstractMessagingTemplate`1.ConvertSendAndReceive``1(`0,System.Object,Steeltoe.Messaging.Core.IMessagePostProcessor)
  isExternal: true
  name: ConvertSendAndReceive<T>(D, Object, IMessagePostProcessor)
  nameWithType: AbstractMessagingTemplate<D>.ConvertSendAndReceive<T>(D, Object, IMessagePostProcessor)
  fullName: Steeltoe.Messaging.Core.AbstractMessagingTemplate<D>.ConvertSendAndReceive<T>(D, System.Object, Steeltoe.Messaging.Core.IMessagePostProcessor)
  nameWithType.vb: AbstractMessagingTemplate(Of D).ConvertSendAndReceive(Of T)(D, Object, IMessagePostProcessor)
  fullName.vb: Steeltoe.Messaging.Core.AbstractMessagingTemplate(Of D).ConvertSendAndReceive(Of T)(D, System.Object, Steeltoe.Messaging.Core.IMessagePostProcessor)
  name.vb: ConvertSendAndReceive(Of T)(D, Object, IMessagePostProcessor)
  spec.csharp:
  - uid: Steeltoe.Messaging.Core.AbstractMessagingTemplate`1.ConvertSendAndReceive``1(`0,System.Object,Steeltoe.Messaging.Core.IMessagePostProcessor)
    name: ConvertSendAndReceive<T>
    nameWithType: AbstractMessagingTemplate<D>.ConvertSendAndReceive<T>
    fullName: Steeltoe.Messaging.Core.AbstractMessagingTemplate<D>.ConvertSendAndReceive<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: D
    nameWithType: D
    fullName: D
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.Core.IMessagePostProcessor
    name: IMessagePostProcessor
    nameWithType: IMessagePostProcessor
    fullName: Steeltoe.Messaging.Core.IMessagePostProcessor
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Core.AbstractMessagingTemplate`1.ConvertSendAndReceive``1(`0,System.Object,Steeltoe.Messaging.Core.IMessagePostProcessor)
    name: ConvertSendAndReceive(Of T)
    nameWithType: AbstractMessagingTemplate(Of D).ConvertSendAndReceive(Of T)
    fullName: Steeltoe.Messaging.Core.AbstractMessagingTemplate(Of D).ConvertSendAndReceive(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: D
    nameWithType: D
    fullName: D
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.Core.IMessagePostProcessor
    name: IMessagePostProcessor
    nameWithType: IMessagePostProcessor
    fullName: Steeltoe.Messaging.Core.IMessagePostProcessor
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Core.AbstractMessagingTemplate`1.ConvertSendAndReceive``1(`0,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object},Steeltoe.Messaging.Core.IMessagePostProcessor)
  commentId: M:Steeltoe.Messaging.Core.AbstractMessagingTemplate`1.ConvertSendAndReceive``1(`0,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object},Steeltoe.Messaging.Core.IMessagePostProcessor)
  isExternal: true
  name: ConvertSendAndReceive<T>(D, Object, IDictionary<String, Object>, IMessagePostProcessor)
  nameWithType: AbstractMessagingTemplate<D>.ConvertSendAndReceive<T>(D, Object, IDictionary<String, Object>, IMessagePostProcessor)
  fullName: Steeltoe.Messaging.Core.AbstractMessagingTemplate<D>.ConvertSendAndReceive<T>(D, System.Object, System.Collections.Generic.IDictionary<System.String, System.Object>, Steeltoe.Messaging.Core.IMessagePostProcessor)
  nameWithType.vb: AbstractMessagingTemplate(Of D).ConvertSendAndReceive(Of T)(D, Object, IDictionary(Of String, Object), IMessagePostProcessor)
  fullName.vb: Steeltoe.Messaging.Core.AbstractMessagingTemplate(Of D).ConvertSendAndReceive(Of T)(D, System.Object, System.Collections.Generic.IDictionary(Of System.String, System.Object), Steeltoe.Messaging.Core.IMessagePostProcessor)
  name.vb: ConvertSendAndReceive(Of T)(D, Object, IDictionary(Of String, Object), IMessagePostProcessor)
  spec.csharp:
  - uid: Steeltoe.Messaging.Core.AbstractMessagingTemplate`1.ConvertSendAndReceive``1(`0,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object},Steeltoe.Messaging.Core.IMessagePostProcessor)
    name: ConvertSendAndReceive<T>
    nameWithType: AbstractMessagingTemplate<D>.ConvertSendAndReceive<T>
    fullName: Steeltoe.Messaging.Core.AbstractMessagingTemplate<D>.ConvertSendAndReceive<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: D
    nameWithType: D
    fullName: D
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.Core.IMessagePostProcessor
    name: IMessagePostProcessor
    nameWithType: IMessagePostProcessor
    fullName: Steeltoe.Messaging.Core.IMessagePostProcessor
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Core.AbstractMessagingTemplate`1.ConvertSendAndReceive``1(`0,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object},Steeltoe.Messaging.Core.IMessagePostProcessor)
    name: ConvertSendAndReceive(Of T)
    nameWithType: AbstractMessagingTemplate(Of D).ConvertSendAndReceive(Of T)
    fullName: Steeltoe.Messaging.Core.AbstractMessagingTemplate(Of D).ConvertSendAndReceive(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: D
    nameWithType: D
    fullName: D
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.Core.IMessagePostProcessor
    name: IMessagePostProcessor
    nameWithType: IMessagePostProcessor
    fullName: Steeltoe.Messaging.Core.IMessagePostProcessor
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Core.AbstractMessagingTemplate`1.SendAndReceive(Steeltoe.Messaging.IMessage)
  commentId: M:Steeltoe.Messaging.Core.AbstractMessagingTemplate`1.SendAndReceive(Steeltoe.Messaging.IMessage)
  name: SendAndReceive(IMessage)
  nameWithType: AbstractMessagingTemplate<D>.SendAndReceive(IMessage)
  fullName: Steeltoe.Messaging.Core.AbstractMessagingTemplate<D>.SendAndReceive(Steeltoe.Messaging.IMessage)
  nameWithType.vb: AbstractMessagingTemplate(Of D).SendAndReceive(IMessage)
  fullName.vb: Steeltoe.Messaging.Core.AbstractMessagingTemplate(Of D).SendAndReceive(Steeltoe.Messaging.IMessage)
  spec.csharp:
  - uid: Steeltoe.Messaging.Core.AbstractMessagingTemplate`1.SendAndReceive(Steeltoe.Messaging.IMessage)
    name: SendAndReceive
    nameWithType: AbstractMessagingTemplate<D>.SendAndReceive
    fullName: Steeltoe.Messaging.Core.AbstractMessagingTemplate<D>.SendAndReceive
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Core.AbstractMessagingTemplate`1.SendAndReceive(Steeltoe.Messaging.IMessage)
    name: SendAndReceive
    nameWithType: AbstractMessagingTemplate(Of D).SendAndReceive
    fullName: Steeltoe.Messaging.Core.AbstractMessagingTemplate(Of D).SendAndReceive
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Core.AbstractMessagingTemplate`1.SendAndReceive(`0,Steeltoe.Messaging.IMessage)
  commentId: M:Steeltoe.Messaging.Core.AbstractMessagingTemplate`1.SendAndReceive(`0,Steeltoe.Messaging.IMessage)
  name: SendAndReceive(D, IMessage)
  nameWithType: AbstractMessagingTemplate<D>.SendAndReceive(D, IMessage)
  fullName: Steeltoe.Messaging.Core.AbstractMessagingTemplate<D>.SendAndReceive(D, Steeltoe.Messaging.IMessage)
  nameWithType.vb: AbstractMessagingTemplate(Of D).SendAndReceive(D, IMessage)
  fullName.vb: Steeltoe.Messaging.Core.AbstractMessagingTemplate(Of D).SendAndReceive(D, Steeltoe.Messaging.IMessage)
  spec.csharp:
  - uid: Steeltoe.Messaging.Core.AbstractMessagingTemplate`1.SendAndReceive(`0,Steeltoe.Messaging.IMessage)
    name: SendAndReceive
    nameWithType: AbstractMessagingTemplate<D>.SendAndReceive
    fullName: Steeltoe.Messaging.Core.AbstractMessagingTemplate<D>.SendAndReceive
  - name: (
    nameWithType: (
    fullName: (
  - name: D
    nameWithType: D
    fullName: D
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Core.AbstractMessagingTemplate`1.SendAndReceive(`0,Steeltoe.Messaging.IMessage)
    name: SendAndReceive
    nameWithType: AbstractMessagingTemplate(Of D).SendAndReceive
    fullName: Steeltoe.Messaging.Core.AbstractMessagingTemplate(Of D).SendAndReceive
  - name: (
    nameWithType: (
    fullName: (
  - name: D
    nameWithType: D
    fullName: D
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate`1.DefaultReceiveDestination
  commentId: P:Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate`1.DefaultReceiveDestination
  name: DefaultReceiveDestination
  nameWithType: AbstractMessageReceivingTemplate<D>.DefaultReceiveDestination
  fullName: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate<D>.DefaultReceiveDestination
  nameWithType.vb: AbstractMessageReceivingTemplate(Of D).DefaultReceiveDestination
  fullName.vb: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate(Of D).DefaultReceiveDestination
- uid: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate`1.ThrowReceivedExceptions
  commentId: P:Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate`1.ThrowReceivedExceptions
  name: ThrowReceivedExceptions
  nameWithType: AbstractMessageReceivingTemplate<D>.ThrowReceivedExceptions
  fullName: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate<D>.ThrowReceivedExceptions
  nameWithType.vb: AbstractMessageReceivingTemplate(Of D).ThrowReceivedExceptions
  fullName.vb: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate(Of D).ThrowReceivedExceptions
- uid: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate`1.ReceiveAsync(System.Threading.CancellationToken)
  commentId: M:Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate`1.ReceiveAsync(System.Threading.CancellationToken)
  isExternal: true
  name: ReceiveAsync(CancellationToken)
  nameWithType: AbstractMessageReceivingTemplate<D>.ReceiveAsync(CancellationToken)
  fullName: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate<D>.ReceiveAsync(System.Threading.CancellationToken)
  nameWithType.vb: AbstractMessageReceivingTemplate(Of D).ReceiveAsync(CancellationToken)
  fullName.vb: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate(Of D).ReceiveAsync(System.Threading.CancellationToken)
  spec.csharp:
  - uid: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate`1.ReceiveAsync(System.Threading.CancellationToken)
    name: ReceiveAsync
    nameWithType: AbstractMessageReceivingTemplate<D>.ReceiveAsync
    fullName: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate<D>.ReceiveAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate`1.ReceiveAsync(System.Threading.CancellationToken)
    name: ReceiveAsync
    nameWithType: AbstractMessageReceivingTemplate(Of D).ReceiveAsync
    fullName: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate(Of D).ReceiveAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate`1.ReceiveAsync(`0,System.Threading.CancellationToken)
  commentId: M:Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate`1.ReceiveAsync(`0,System.Threading.CancellationToken)
  isExternal: true
  name: ReceiveAsync(D, CancellationToken)
  nameWithType: AbstractMessageReceivingTemplate<D>.ReceiveAsync(D, CancellationToken)
  fullName: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate<D>.ReceiveAsync(D, System.Threading.CancellationToken)
  nameWithType.vb: AbstractMessageReceivingTemplate(Of D).ReceiveAsync(D, CancellationToken)
  fullName.vb: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate(Of D).ReceiveAsync(D, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate`1.ReceiveAsync(`0,System.Threading.CancellationToken)
    name: ReceiveAsync
    nameWithType: AbstractMessageReceivingTemplate<D>.ReceiveAsync
    fullName: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate<D>.ReceiveAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: D
    nameWithType: D
    fullName: D
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate`1.ReceiveAsync(`0,System.Threading.CancellationToken)
    name: ReceiveAsync
    nameWithType: AbstractMessageReceivingTemplate(Of D).ReceiveAsync
    fullName: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate(Of D).ReceiveAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: D
    nameWithType: D
    fullName: D
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate`1.ReceiveAndConvertAsync``1(System.Threading.CancellationToken)
  commentId: M:Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate`1.ReceiveAndConvertAsync``1(System.Threading.CancellationToken)
  isExternal: true
  name: ReceiveAndConvertAsync<T>(CancellationToken)
  nameWithType: AbstractMessageReceivingTemplate<D>.ReceiveAndConvertAsync<T>(CancellationToken)
  fullName: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate<D>.ReceiveAndConvertAsync<T>(System.Threading.CancellationToken)
  nameWithType.vb: AbstractMessageReceivingTemplate(Of D).ReceiveAndConvertAsync(Of T)(CancellationToken)
  fullName.vb: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate(Of D).ReceiveAndConvertAsync(Of T)(System.Threading.CancellationToken)
  name.vb: ReceiveAndConvertAsync(Of T)(CancellationToken)
  spec.csharp:
  - uid: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate`1.ReceiveAndConvertAsync``1(System.Threading.CancellationToken)
    name: ReceiveAndConvertAsync<T>
    nameWithType: AbstractMessageReceivingTemplate<D>.ReceiveAndConvertAsync<T>
    fullName: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate<D>.ReceiveAndConvertAsync<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate`1.ReceiveAndConvertAsync``1(System.Threading.CancellationToken)
    name: ReceiveAndConvertAsync(Of T)
    nameWithType: AbstractMessageReceivingTemplate(Of D).ReceiveAndConvertAsync(Of T)
    fullName: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate(Of D).ReceiveAndConvertAsync(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate`1.ReceiveAndConvertAsync``1(`0,System.Threading.CancellationToken)
  commentId: M:Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate`1.ReceiveAndConvertAsync``1(`0,System.Threading.CancellationToken)
  isExternal: true
  name: ReceiveAndConvertAsync<T>(D, CancellationToken)
  nameWithType: AbstractMessageReceivingTemplate<D>.ReceiveAndConvertAsync<T>(D, CancellationToken)
  fullName: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate<D>.ReceiveAndConvertAsync<T>(D, System.Threading.CancellationToken)
  nameWithType.vb: AbstractMessageReceivingTemplate(Of D).ReceiveAndConvertAsync(Of T)(D, CancellationToken)
  fullName.vb: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate(Of D).ReceiveAndConvertAsync(Of T)(D, System.Threading.CancellationToken)
  name.vb: ReceiveAndConvertAsync(Of T)(D, CancellationToken)
  spec.csharp:
  - uid: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate`1.ReceiveAndConvertAsync``1(`0,System.Threading.CancellationToken)
    name: ReceiveAndConvertAsync<T>
    nameWithType: AbstractMessageReceivingTemplate<D>.ReceiveAndConvertAsync<T>
    fullName: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate<D>.ReceiveAndConvertAsync<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: D
    nameWithType: D
    fullName: D
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate`1.ReceiveAndConvertAsync``1(`0,System.Threading.CancellationToken)
    name: ReceiveAndConvertAsync(Of T)
    nameWithType: AbstractMessageReceivingTemplate(Of D).ReceiveAndConvertAsync(Of T)
    fullName: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate(Of D).ReceiveAndConvertAsync(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: D
    nameWithType: D
    fullName: D
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate`1.Receive
  commentId: M:Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate`1.Receive
  name: Receive()
  nameWithType: AbstractMessageReceivingTemplate<D>.Receive()
  fullName: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate<D>.Receive()
  nameWithType.vb: AbstractMessageReceivingTemplate(Of D).Receive()
  fullName.vb: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate(Of D).Receive()
  spec.csharp:
  - uid: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate`1.Receive
    name: Receive
    nameWithType: AbstractMessageReceivingTemplate<D>.Receive
    fullName: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate<D>.Receive
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate`1.Receive
    name: Receive
    nameWithType: AbstractMessageReceivingTemplate(Of D).Receive
    fullName: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate(Of D).Receive
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate`1.Receive(`0)
  commentId: M:Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate`1.Receive(`0)
  name: Receive(D)
  nameWithType: AbstractMessageReceivingTemplate<D>.Receive(D)
  fullName: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate<D>.Receive(D)
  nameWithType.vb: AbstractMessageReceivingTemplate(Of D).Receive(D)
  fullName.vb: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate(Of D).Receive(D)
  spec.csharp:
  - uid: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate`1.Receive(`0)
    name: Receive
    nameWithType: AbstractMessageReceivingTemplate<D>.Receive
    fullName: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate<D>.Receive
  - name: (
    nameWithType: (
    fullName: (
  - name: D
    nameWithType: D
    fullName: D
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate`1.Receive(`0)
    name: Receive
    nameWithType: AbstractMessageReceivingTemplate(Of D).Receive
    fullName: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate(Of D).Receive
  - name: (
    nameWithType: (
    fullName: (
  - name: D
    nameWithType: D
    fullName: D
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate`1.ReceiveAndConvert``1
  commentId: M:Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate`1.ReceiveAndConvert``1
  name: ReceiveAndConvert<T>()
  nameWithType: AbstractMessageReceivingTemplate<D>.ReceiveAndConvert<T>()
  fullName: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate<D>.ReceiveAndConvert<T>()
  nameWithType.vb: AbstractMessageReceivingTemplate(Of D).ReceiveAndConvert(Of T)()
  fullName.vb: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate(Of D).ReceiveAndConvert(Of T)()
  name.vb: ReceiveAndConvert(Of T)()
  spec.csharp:
  - uid: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate`1.ReceiveAndConvert``1
    name: ReceiveAndConvert<T>
    nameWithType: AbstractMessageReceivingTemplate<D>.ReceiveAndConvert<T>
    fullName: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate<D>.ReceiveAndConvert<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate`1.ReceiveAndConvert``1
    name: ReceiveAndConvert(Of T)
    nameWithType: AbstractMessageReceivingTemplate(Of D).ReceiveAndConvert(Of T)
    fullName: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate(Of D).ReceiveAndConvert(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate`1.ReceiveAndConvert``1(`0)
  commentId: M:Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate`1.ReceiveAndConvert``1(`0)
  name: ReceiveAndConvert<T>(D)
  nameWithType: AbstractMessageReceivingTemplate<D>.ReceiveAndConvert<T>(D)
  fullName: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate<D>.ReceiveAndConvert<T>(D)
  nameWithType.vb: AbstractMessageReceivingTemplate(Of D).ReceiveAndConvert(Of T)(D)
  fullName.vb: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate(Of D).ReceiveAndConvert(Of T)(D)
  name.vb: ReceiveAndConvert(Of T)(D)
  spec.csharp:
  - uid: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate`1.ReceiveAndConvert``1(`0)
    name: ReceiveAndConvert<T>
    nameWithType: AbstractMessageReceivingTemplate<D>.ReceiveAndConvert<T>
    fullName: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate<D>.ReceiveAndConvert<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: D
    nameWithType: D
    fullName: D
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate`1.ReceiveAndConvert``1(`0)
    name: ReceiveAndConvert(Of T)
    nameWithType: AbstractMessageReceivingTemplate(Of D).ReceiveAndConvert(Of T)
    fullName: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate(Of D).ReceiveAndConvert(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: D
    nameWithType: D
    fullName: D
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate`1.RequiredDefaultReceiveDestination
  commentId: P:Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate`1.RequiredDefaultReceiveDestination
  name: RequiredDefaultReceiveDestination
  nameWithType: AbstractMessageReceivingTemplate<D>.RequiredDefaultReceiveDestination
  fullName: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate<D>.RequiredDefaultReceiveDestination
  nameWithType.vb: AbstractMessageReceivingTemplate(Of D).RequiredDefaultReceiveDestination
  fullName.vb: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate(Of D).RequiredDefaultReceiveDestination
- uid: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate`1.DoConvert``1(Steeltoe.Messaging.IMessage)
  commentId: M:Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate`1.DoConvert``1(Steeltoe.Messaging.IMessage)
  name: DoConvert<T>(IMessage)
  nameWithType: AbstractMessageReceivingTemplate<D>.DoConvert<T>(IMessage)
  fullName: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate<D>.DoConvert<T>(Steeltoe.Messaging.IMessage)
  nameWithType.vb: AbstractMessageReceivingTemplate(Of D).DoConvert(Of T)(IMessage)
  fullName.vb: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate(Of D).DoConvert(Of T)(Steeltoe.Messaging.IMessage)
  name.vb: DoConvert(Of T)(IMessage)
  spec.csharp:
  - uid: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate`1.DoConvert``1(Steeltoe.Messaging.IMessage)
    name: DoConvert<T>
    nameWithType: AbstractMessageReceivingTemplate<D>.DoConvert<T>
    fullName: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate<D>.DoConvert<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate`1.DoConvert``1(Steeltoe.Messaging.IMessage)
    name: DoConvert(Of T)
    nameWithType: AbstractMessageReceivingTemplate(Of D).DoConvert(Of T)
    fullName: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate(Of D).DoConvert(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.CONVERSION_HINT_HEADER
  commentId: F:Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.CONVERSION_HINT_HEADER
  name: CONVERSION_HINT_HEADER
  nameWithType: AbstractMessageSendingTemplate<D>.CONVERSION_HINT_HEADER
  fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate<D>.CONVERSION_HINT_HEADER
  nameWithType.vb: AbstractMessageSendingTemplate(Of D).CONVERSION_HINT_HEADER
  fullName.vb: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate(Of D).CONVERSION_HINT_HEADER
- uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.DefaultSendDestination
  commentId: P:Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.DefaultSendDestination
  name: DefaultSendDestination
  nameWithType: AbstractMessageSendingTemplate<D>.DefaultSendDestination
  fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate<D>.DefaultSendDestination
  nameWithType.vb: AbstractMessageSendingTemplate(Of D).DefaultSendDestination
  fullName.vb: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate(Of D).DefaultSendDestination
- uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.MessageConverter
  commentId: P:Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.MessageConverter
  name: MessageConverter
  nameWithType: AbstractMessageSendingTemplate<D>.MessageConverter
  fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate<D>.MessageConverter
  nameWithType.vb: AbstractMessageSendingTemplate(Of D).MessageConverter
  fullName.vb: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate(Of D).MessageConverter
- uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.ConvertAndSendAsync(System.Object,System.Threading.CancellationToken)
  commentId: M:Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.ConvertAndSendAsync(System.Object,System.Threading.CancellationToken)
  isExternal: true
  name: ConvertAndSendAsync(Object, CancellationToken)
  nameWithType: AbstractMessageSendingTemplate<D>.ConvertAndSendAsync(Object, CancellationToken)
  fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate<D>.ConvertAndSendAsync(System.Object, System.Threading.CancellationToken)
  nameWithType.vb: AbstractMessageSendingTemplate(Of D).ConvertAndSendAsync(Object, CancellationToken)
  fullName.vb: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate(Of D).ConvertAndSendAsync(System.Object, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.ConvertAndSendAsync(System.Object,System.Threading.CancellationToken)
    name: ConvertAndSendAsync
    nameWithType: AbstractMessageSendingTemplate<D>.ConvertAndSendAsync
    fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate<D>.ConvertAndSendAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.ConvertAndSendAsync(System.Object,System.Threading.CancellationToken)
    name: ConvertAndSendAsync
    nameWithType: AbstractMessageSendingTemplate(Of D).ConvertAndSendAsync
    fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate(Of D).ConvertAndSendAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.ConvertAndSendAsync(`0,System.Object,System.Threading.CancellationToken)
  commentId: M:Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.ConvertAndSendAsync(`0,System.Object,System.Threading.CancellationToken)
  isExternal: true
  name: ConvertAndSendAsync(D, Object, CancellationToken)
  nameWithType: AbstractMessageSendingTemplate<D>.ConvertAndSendAsync(D, Object, CancellationToken)
  fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate<D>.ConvertAndSendAsync(D, System.Object, System.Threading.CancellationToken)
  nameWithType.vb: AbstractMessageSendingTemplate(Of D).ConvertAndSendAsync(D, Object, CancellationToken)
  fullName.vb: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate(Of D).ConvertAndSendAsync(D, System.Object, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.ConvertAndSendAsync(`0,System.Object,System.Threading.CancellationToken)
    name: ConvertAndSendAsync
    nameWithType: AbstractMessageSendingTemplate<D>.ConvertAndSendAsync
    fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate<D>.ConvertAndSendAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: D
    nameWithType: D
    fullName: D
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.ConvertAndSendAsync(`0,System.Object,System.Threading.CancellationToken)
    name: ConvertAndSendAsync
    nameWithType: AbstractMessageSendingTemplate(Of D).ConvertAndSendAsync
    fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate(Of D).ConvertAndSendAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: D
    nameWithType: D
    fullName: D
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.ConvertAndSendAsync(`0,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object},System.Threading.CancellationToken)
  commentId: M:Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.ConvertAndSendAsync(`0,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object},System.Threading.CancellationToken)
  isExternal: true
  name: ConvertAndSendAsync(D, Object, IDictionary<String, Object>, CancellationToken)
  nameWithType: AbstractMessageSendingTemplate<D>.ConvertAndSendAsync(D, Object, IDictionary<String, Object>, CancellationToken)
  fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate<D>.ConvertAndSendAsync(D, System.Object, System.Collections.Generic.IDictionary<System.String, System.Object>, System.Threading.CancellationToken)
  nameWithType.vb: AbstractMessageSendingTemplate(Of D).ConvertAndSendAsync(D, Object, IDictionary(Of String, Object), CancellationToken)
  fullName.vb: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate(Of D).ConvertAndSendAsync(D, System.Object, System.Collections.Generic.IDictionary(Of System.String, System.Object), System.Threading.CancellationToken)
  name.vb: ConvertAndSendAsync(D, Object, IDictionary(Of String, Object), CancellationToken)
  spec.csharp:
  - uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.ConvertAndSendAsync(`0,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object},System.Threading.CancellationToken)
    name: ConvertAndSendAsync
    nameWithType: AbstractMessageSendingTemplate<D>.ConvertAndSendAsync
    fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate<D>.ConvertAndSendAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: D
    nameWithType: D
    fullName: D
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.ConvertAndSendAsync(`0,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object},System.Threading.CancellationToken)
    name: ConvertAndSendAsync
    nameWithType: AbstractMessageSendingTemplate(Of D).ConvertAndSendAsync
    fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate(Of D).ConvertAndSendAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: D
    nameWithType: D
    fullName: D
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.ConvertAndSendAsync(System.Object,Steeltoe.Messaging.Core.IMessagePostProcessor,System.Threading.CancellationToken)
  commentId: M:Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.ConvertAndSendAsync(System.Object,Steeltoe.Messaging.Core.IMessagePostProcessor,System.Threading.CancellationToken)
  isExternal: true
  name: ConvertAndSendAsync(Object, IMessagePostProcessor, CancellationToken)
  nameWithType: AbstractMessageSendingTemplate<D>.ConvertAndSendAsync(Object, IMessagePostProcessor, CancellationToken)
  fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate<D>.ConvertAndSendAsync(System.Object, Steeltoe.Messaging.Core.IMessagePostProcessor, System.Threading.CancellationToken)
  nameWithType.vb: AbstractMessageSendingTemplate(Of D).ConvertAndSendAsync(Object, IMessagePostProcessor, CancellationToken)
  fullName.vb: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate(Of D).ConvertAndSendAsync(System.Object, Steeltoe.Messaging.Core.IMessagePostProcessor, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.ConvertAndSendAsync(System.Object,Steeltoe.Messaging.Core.IMessagePostProcessor,System.Threading.CancellationToken)
    name: ConvertAndSendAsync
    nameWithType: AbstractMessageSendingTemplate<D>.ConvertAndSendAsync
    fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate<D>.ConvertAndSendAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.Core.IMessagePostProcessor
    name: IMessagePostProcessor
    nameWithType: IMessagePostProcessor
    fullName: Steeltoe.Messaging.Core.IMessagePostProcessor
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.ConvertAndSendAsync(System.Object,Steeltoe.Messaging.Core.IMessagePostProcessor,System.Threading.CancellationToken)
    name: ConvertAndSendAsync
    nameWithType: AbstractMessageSendingTemplate(Of D).ConvertAndSendAsync
    fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate(Of D).ConvertAndSendAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.Core.IMessagePostProcessor
    name: IMessagePostProcessor
    nameWithType: IMessagePostProcessor
    fullName: Steeltoe.Messaging.Core.IMessagePostProcessor
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.ConvertAndSendAsync(`0,System.Object,Steeltoe.Messaging.Core.IMessagePostProcessor,System.Threading.CancellationToken)
  commentId: M:Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.ConvertAndSendAsync(`0,System.Object,Steeltoe.Messaging.Core.IMessagePostProcessor,System.Threading.CancellationToken)
  isExternal: true
  name: ConvertAndSendAsync(D, Object, IMessagePostProcessor, CancellationToken)
  nameWithType: AbstractMessageSendingTemplate<D>.ConvertAndSendAsync(D, Object, IMessagePostProcessor, CancellationToken)
  fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate<D>.ConvertAndSendAsync(D, System.Object, Steeltoe.Messaging.Core.IMessagePostProcessor, System.Threading.CancellationToken)
  nameWithType.vb: AbstractMessageSendingTemplate(Of D).ConvertAndSendAsync(D, Object, IMessagePostProcessor, CancellationToken)
  fullName.vb: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate(Of D).ConvertAndSendAsync(D, System.Object, Steeltoe.Messaging.Core.IMessagePostProcessor, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.ConvertAndSendAsync(`0,System.Object,Steeltoe.Messaging.Core.IMessagePostProcessor,System.Threading.CancellationToken)
    name: ConvertAndSendAsync
    nameWithType: AbstractMessageSendingTemplate<D>.ConvertAndSendAsync
    fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate<D>.ConvertAndSendAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: D
    nameWithType: D
    fullName: D
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.Core.IMessagePostProcessor
    name: IMessagePostProcessor
    nameWithType: IMessagePostProcessor
    fullName: Steeltoe.Messaging.Core.IMessagePostProcessor
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.ConvertAndSendAsync(`0,System.Object,Steeltoe.Messaging.Core.IMessagePostProcessor,System.Threading.CancellationToken)
    name: ConvertAndSendAsync
    nameWithType: AbstractMessageSendingTemplate(Of D).ConvertAndSendAsync
    fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate(Of D).ConvertAndSendAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: D
    nameWithType: D
    fullName: D
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.Core.IMessagePostProcessor
    name: IMessagePostProcessor
    nameWithType: IMessagePostProcessor
    fullName: Steeltoe.Messaging.Core.IMessagePostProcessor
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.ConvertAndSendAsync(`0,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object},Steeltoe.Messaging.Core.IMessagePostProcessor,System.Threading.CancellationToken)
  commentId: M:Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.ConvertAndSendAsync(`0,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object},Steeltoe.Messaging.Core.IMessagePostProcessor,System.Threading.CancellationToken)
  isExternal: true
  name: ConvertAndSendAsync(D, Object, IDictionary<String, Object>, IMessagePostProcessor, CancellationToken)
  nameWithType: AbstractMessageSendingTemplate<D>.ConvertAndSendAsync(D, Object, IDictionary<String, Object>, IMessagePostProcessor, CancellationToken)
  fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate<D>.ConvertAndSendAsync(D, System.Object, System.Collections.Generic.IDictionary<System.String, System.Object>, Steeltoe.Messaging.Core.IMessagePostProcessor, System.Threading.CancellationToken)
  nameWithType.vb: AbstractMessageSendingTemplate(Of D).ConvertAndSendAsync(D, Object, IDictionary(Of String, Object), IMessagePostProcessor, CancellationToken)
  fullName.vb: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate(Of D).ConvertAndSendAsync(D, System.Object, System.Collections.Generic.IDictionary(Of System.String, System.Object), Steeltoe.Messaging.Core.IMessagePostProcessor, System.Threading.CancellationToken)
  name.vb: ConvertAndSendAsync(D, Object, IDictionary(Of String, Object), IMessagePostProcessor, CancellationToken)
  spec.csharp:
  - uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.ConvertAndSendAsync(`0,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object},Steeltoe.Messaging.Core.IMessagePostProcessor,System.Threading.CancellationToken)
    name: ConvertAndSendAsync
    nameWithType: AbstractMessageSendingTemplate<D>.ConvertAndSendAsync
    fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate<D>.ConvertAndSendAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: D
    nameWithType: D
    fullName: D
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.Core.IMessagePostProcessor
    name: IMessagePostProcessor
    nameWithType: IMessagePostProcessor
    fullName: Steeltoe.Messaging.Core.IMessagePostProcessor
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.ConvertAndSendAsync(`0,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object},Steeltoe.Messaging.Core.IMessagePostProcessor,System.Threading.CancellationToken)
    name: ConvertAndSendAsync
    nameWithType: AbstractMessageSendingTemplate(Of D).ConvertAndSendAsync
    fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate(Of D).ConvertAndSendAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: D
    nameWithType: D
    fullName: D
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.Core.IMessagePostProcessor
    name: IMessagePostProcessor
    nameWithType: IMessagePostProcessor
    fullName: Steeltoe.Messaging.Core.IMessagePostProcessor
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.SendAsync(Steeltoe.Messaging.IMessage,System.Threading.CancellationToken)
  commentId: M:Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.SendAsync(Steeltoe.Messaging.IMessage,System.Threading.CancellationToken)
  isExternal: true
  name: SendAsync(IMessage, CancellationToken)
  nameWithType: AbstractMessageSendingTemplate<D>.SendAsync(IMessage, CancellationToken)
  fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate<D>.SendAsync(Steeltoe.Messaging.IMessage, System.Threading.CancellationToken)
  nameWithType.vb: AbstractMessageSendingTemplate(Of D).SendAsync(IMessage, CancellationToken)
  fullName.vb: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate(Of D).SendAsync(Steeltoe.Messaging.IMessage, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.SendAsync(Steeltoe.Messaging.IMessage,System.Threading.CancellationToken)
    name: SendAsync
    nameWithType: AbstractMessageSendingTemplate<D>.SendAsync
    fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate<D>.SendAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.SendAsync(Steeltoe.Messaging.IMessage,System.Threading.CancellationToken)
    name: SendAsync
    nameWithType: AbstractMessageSendingTemplate(Of D).SendAsync
    fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate(Of D).SendAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.SendAsync(`0,Steeltoe.Messaging.IMessage,System.Threading.CancellationToken)
  commentId: M:Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.SendAsync(`0,Steeltoe.Messaging.IMessage,System.Threading.CancellationToken)
  isExternal: true
  name: SendAsync(D, IMessage, CancellationToken)
  nameWithType: AbstractMessageSendingTemplate<D>.SendAsync(D, IMessage, CancellationToken)
  fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate<D>.SendAsync(D, Steeltoe.Messaging.IMessage, System.Threading.CancellationToken)
  nameWithType.vb: AbstractMessageSendingTemplate(Of D).SendAsync(D, IMessage, CancellationToken)
  fullName.vb: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate(Of D).SendAsync(D, Steeltoe.Messaging.IMessage, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.SendAsync(`0,Steeltoe.Messaging.IMessage,System.Threading.CancellationToken)
    name: SendAsync
    nameWithType: AbstractMessageSendingTemplate<D>.SendAsync
    fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate<D>.SendAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: D
    nameWithType: D
    fullName: D
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.SendAsync(`0,Steeltoe.Messaging.IMessage,System.Threading.CancellationToken)
    name: SendAsync
    nameWithType: AbstractMessageSendingTemplate(Of D).SendAsync
    fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate(Of D).SendAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: D
    nameWithType: D
    fullName: D
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.ConvertAndSend(System.Object)
  commentId: M:Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.ConvertAndSend(System.Object)
  isExternal: true
  name: ConvertAndSend(Object)
  nameWithType: AbstractMessageSendingTemplate<D>.ConvertAndSend(Object)
  fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate<D>.ConvertAndSend(System.Object)
  nameWithType.vb: AbstractMessageSendingTemplate(Of D).ConvertAndSend(Object)
  fullName.vb: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate(Of D).ConvertAndSend(System.Object)
  spec.csharp:
  - uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.ConvertAndSend(System.Object)
    name: ConvertAndSend
    nameWithType: AbstractMessageSendingTemplate<D>.ConvertAndSend
    fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate<D>.ConvertAndSend
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.ConvertAndSend(System.Object)
    name: ConvertAndSend
    nameWithType: AbstractMessageSendingTemplate(Of D).ConvertAndSend
    fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate(Of D).ConvertAndSend
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.ConvertAndSend(`0,System.Object)
  commentId: M:Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.ConvertAndSend(`0,System.Object)
  isExternal: true
  name: ConvertAndSend(D, Object)
  nameWithType: AbstractMessageSendingTemplate<D>.ConvertAndSend(D, Object)
  fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate<D>.ConvertAndSend(D, System.Object)
  nameWithType.vb: AbstractMessageSendingTemplate(Of D).ConvertAndSend(D, Object)
  fullName.vb: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate(Of D).ConvertAndSend(D, System.Object)
  spec.csharp:
  - uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.ConvertAndSend(`0,System.Object)
    name: ConvertAndSend
    nameWithType: AbstractMessageSendingTemplate<D>.ConvertAndSend
    fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate<D>.ConvertAndSend
  - name: (
    nameWithType: (
    fullName: (
  - name: D
    nameWithType: D
    fullName: D
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.ConvertAndSend(`0,System.Object)
    name: ConvertAndSend
    nameWithType: AbstractMessageSendingTemplate(Of D).ConvertAndSend
    fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate(Of D).ConvertAndSend
  - name: (
    nameWithType: (
    fullName: (
  - name: D
    nameWithType: D
    fullName: D
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.ConvertAndSend(`0,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object})
  commentId: M:Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.ConvertAndSend(`0,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object})
  isExternal: true
  name: ConvertAndSend(D, Object, IDictionary<String, Object>)
  nameWithType: AbstractMessageSendingTemplate<D>.ConvertAndSend(D, Object, IDictionary<String, Object>)
  fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate<D>.ConvertAndSend(D, System.Object, System.Collections.Generic.IDictionary<System.String, System.Object>)
  nameWithType.vb: AbstractMessageSendingTemplate(Of D).ConvertAndSend(D, Object, IDictionary(Of String, Object))
  fullName.vb: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate(Of D).ConvertAndSend(D, System.Object, System.Collections.Generic.IDictionary(Of System.String, System.Object))
  name.vb: ConvertAndSend(D, Object, IDictionary(Of String, Object))
  spec.csharp:
  - uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.ConvertAndSend(`0,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object})
    name: ConvertAndSend
    nameWithType: AbstractMessageSendingTemplate<D>.ConvertAndSend
    fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate<D>.ConvertAndSend
  - name: (
    nameWithType: (
    fullName: (
  - name: D
    nameWithType: D
    fullName: D
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.ConvertAndSend(`0,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object})
    name: ConvertAndSend
    nameWithType: AbstractMessageSendingTemplate(Of D).ConvertAndSend
    fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate(Of D).ConvertAndSend
  - name: (
    nameWithType: (
    fullName: (
  - name: D
    nameWithType: D
    fullName: D
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.ConvertAndSend(System.Object,Steeltoe.Messaging.Core.IMessagePostProcessor)
  commentId: M:Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.ConvertAndSend(System.Object,Steeltoe.Messaging.Core.IMessagePostProcessor)
  isExternal: true
  name: ConvertAndSend(Object, IMessagePostProcessor)
  nameWithType: AbstractMessageSendingTemplate<D>.ConvertAndSend(Object, IMessagePostProcessor)
  fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate<D>.ConvertAndSend(System.Object, Steeltoe.Messaging.Core.IMessagePostProcessor)
  nameWithType.vb: AbstractMessageSendingTemplate(Of D).ConvertAndSend(Object, IMessagePostProcessor)
  fullName.vb: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate(Of D).ConvertAndSend(System.Object, Steeltoe.Messaging.Core.IMessagePostProcessor)
  spec.csharp:
  - uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.ConvertAndSend(System.Object,Steeltoe.Messaging.Core.IMessagePostProcessor)
    name: ConvertAndSend
    nameWithType: AbstractMessageSendingTemplate<D>.ConvertAndSend
    fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate<D>.ConvertAndSend
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.Core.IMessagePostProcessor
    name: IMessagePostProcessor
    nameWithType: IMessagePostProcessor
    fullName: Steeltoe.Messaging.Core.IMessagePostProcessor
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.ConvertAndSend(System.Object,Steeltoe.Messaging.Core.IMessagePostProcessor)
    name: ConvertAndSend
    nameWithType: AbstractMessageSendingTemplate(Of D).ConvertAndSend
    fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate(Of D).ConvertAndSend
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.Core.IMessagePostProcessor
    name: IMessagePostProcessor
    nameWithType: IMessagePostProcessor
    fullName: Steeltoe.Messaging.Core.IMessagePostProcessor
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.ConvertAndSend(`0,System.Object,Steeltoe.Messaging.Core.IMessagePostProcessor)
  commentId: M:Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.ConvertAndSend(`0,System.Object,Steeltoe.Messaging.Core.IMessagePostProcessor)
  isExternal: true
  name: ConvertAndSend(D, Object, IMessagePostProcessor)
  nameWithType: AbstractMessageSendingTemplate<D>.ConvertAndSend(D, Object, IMessagePostProcessor)
  fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate<D>.ConvertAndSend(D, System.Object, Steeltoe.Messaging.Core.IMessagePostProcessor)
  nameWithType.vb: AbstractMessageSendingTemplate(Of D).ConvertAndSend(D, Object, IMessagePostProcessor)
  fullName.vb: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate(Of D).ConvertAndSend(D, System.Object, Steeltoe.Messaging.Core.IMessagePostProcessor)
  spec.csharp:
  - uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.ConvertAndSend(`0,System.Object,Steeltoe.Messaging.Core.IMessagePostProcessor)
    name: ConvertAndSend
    nameWithType: AbstractMessageSendingTemplate<D>.ConvertAndSend
    fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate<D>.ConvertAndSend
  - name: (
    nameWithType: (
    fullName: (
  - name: D
    nameWithType: D
    fullName: D
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.Core.IMessagePostProcessor
    name: IMessagePostProcessor
    nameWithType: IMessagePostProcessor
    fullName: Steeltoe.Messaging.Core.IMessagePostProcessor
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.ConvertAndSend(`0,System.Object,Steeltoe.Messaging.Core.IMessagePostProcessor)
    name: ConvertAndSend
    nameWithType: AbstractMessageSendingTemplate(Of D).ConvertAndSend
    fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate(Of D).ConvertAndSend
  - name: (
    nameWithType: (
    fullName: (
  - name: D
    nameWithType: D
    fullName: D
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.Core.IMessagePostProcessor
    name: IMessagePostProcessor
    nameWithType: IMessagePostProcessor
    fullName: Steeltoe.Messaging.Core.IMessagePostProcessor
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.ConvertAndSend(`0,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object},Steeltoe.Messaging.Core.IMessagePostProcessor)
  commentId: M:Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.ConvertAndSend(`0,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object},Steeltoe.Messaging.Core.IMessagePostProcessor)
  isExternal: true
  name: ConvertAndSend(D, Object, IDictionary<String, Object>, IMessagePostProcessor)
  nameWithType: AbstractMessageSendingTemplate<D>.ConvertAndSend(D, Object, IDictionary<String, Object>, IMessagePostProcessor)
  fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate<D>.ConvertAndSend(D, System.Object, System.Collections.Generic.IDictionary<System.String, System.Object>, Steeltoe.Messaging.Core.IMessagePostProcessor)
  nameWithType.vb: AbstractMessageSendingTemplate(Of D).ConvertAndSend(D, Object, IDictionary(Of String, Object), IMessagePostProcessor)
  fullName.vb: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate(Of D).ConvertAndSend(D, System.Object, System.Collections.Generic.IDictionary(Of System.String, System.Object), Steeltoe.Messaging.Core.IMessagePostProcessor)
  name.vb: ConvertAndSend(D, Object, IDictionary(Of String, Object), IMessagePostProcessor)
  spec.csharp:
  - uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.ConvertAndSend(`0,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object},Steeltoe.Messaging.Core.IMessagePostProcessor)
    name: ConvertAndSend
    nameWithType: AbstractMessageSendingTemplate<D>.ConvertAndSend
    fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate<D>.ConvertAndSend
  - name: (
    nameWithType: (
    fullName: (
  - name: D
    nameWithType: D
    fullName: D
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.Core.IMessagePostProcessor
    name: IMessagePostProcessor
    nameWithType: IMessagePostProcessor
    fullName: Steeltoe.Messaging.Core.IMessagePostProcessor
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.ConvertAndSend(`0,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object},Steeltoe.Messaging.Core.IMessagePostProcessor)
    name: ConvertAndSend
    nameWithType: AbstractMessageSendingTemplate(Of D).ConvertAndSend
    fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate(Of D).ConvertAndSend
  - name: (
    nameWithType: (
    fullName: (
  - name: D
    nameWithType: D
    fullName: D
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.Core.IMessagePostProcessor
    name: IMessagePostProcessor
    nameWithType: IMessagePostProcessor
    fullName: Steeltoe.Messaging.Core.IMessagePostProcessor
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.Send(Steeltoe.Messaging.IMessage)
  commentId: M:Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.Send(Steeltoe.Messaging.IMessage)
  name: Send(IMessage)
  nameWithType: AbstractMessageSendingTemplate<D>.Send(IMessage)
  fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate<D>.Send(Steeltoe.Messaging.IMessage)
  nameWithType.vb: AbstractMessageSendingTemplate(Of D).Send(IMessage)
  fullName.vb: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate(Of D).Send(Steeltoe.Messaging.IMessage)
  spec.csharp:
  - uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.Send(Steeltoe.Messaging.IMessage)
    name: Send
    nameWithType: AbstractMessageSendingTemplate<D>.Send
    fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate<D>.Send
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.Send(Steeltoe.Messaging.IMessage)
    name: Send
    nameWithType: AbstractMessageSendingTemplate(Of D).Send
    fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate(Of D).Send
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.Send(`0,Steeltoe.Messaging.IMessage)
  commentId: M:Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.Send(`0,Steeltoe.Messaging.IMessage)
  name: Send(D, IMessage)
  nameWithType: AbstractMessageSendingTemplate<D>.Send(D, IMessage)
  fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate<D>.Send(D, Steeltoe.Messaging.IMessage)
  nameWithType.vb: AbstractMessageSendingTemplate(Of D).Send(D, IMessage)
  fullName.vb: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate(Of D).Send(D, Steeltoe.Messaging.IMessage)
  spec.csharp:
  - uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.Send(`0,Steeltoe.Messaging.IMessage)
    name: Send
    nameWithType: AbstractMessageSendingTemplate<D>.Send
    fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate<D>.Send
  - name: (
    nameWithType: (
    fullName: (
  - name: D
    nameWithType: D
    fullName: D
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.Send(`0,Steeltoe.Messaging.IMessage)
    name: Send
    nameWithType: AbstractMessageSendingTemplate(Of D).Send
    fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate(Of D).Send
  - name: (
    nameWithType: (
    fullName: (
  - name: D
    nameWithType: D
    fullName: D
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.RequiredDefaultSendDestination
  commentId: P:Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.RequiredDefaultSendDestination
  name: RequiredDefaultSendDestination
  nameWithType: AbstractMessageSendingTemplate<D>.RequiredDefaultSendDestination
  fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate<D>.RequiredDefaultSendDestination
  nameWithType.vb: AbstractMessageSendingTemplate(Of D).RequiredDefaultSendDestination
  fullName.vb: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate(Of D).RequiredDefaultSendDestination
- uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.DoConvert(System.Object,System.Collections.Generic.IDictionary{System.String,System.Object},Steeltoe.Messaging.Core.IMessagePostProcessor)
  commentId: M:Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.DoConvert(System.Object,System.Collections.Generic.IDictionary{System.String,System.Object},Steeltoe.Messaging.Core.IMessagePostProcessor)
  isExternal: true
  name: DoConvert(Object, IDictionary<String, Object>, IMessagePostProcessor)
  nameWithType: AbstractMessageSendingTemplate<D>.DoConvert(Object, IDictionary<String, Object>, IMessagePostProcessor)
  fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate<D>.DoConvert(System.Object, System.Collections.Generic.IDictionary<System.String, System.Object>, Steeltoe.Messaging.Core.IMessagePostProcessor)
  nameWithType.vb: AbstractMessageSendingTemplate(Of D).DoConvert(Object, IDictionary(Of String, Object), IMessagePostProcessor)
  fullName.vb: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate(Of D).DoConvert(System.Object, System.Collections.Generic.IDictionary(Of System.String, System.Object), Steeltoe.Messaging.Core.IMessagePostProcessor)
  name.vb: DoConvert(Object, IDictionary(Of String, Object), IMessagePostProcessor)
  spec.csharp:
  - uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.DoConvert(System.Object,System.Collections.Generic.IDictionary{System.String,System.Object},Steeltoe.Messaging.Core.IMessagePostProcessor)
    name: DoConvert
    nameWithType: AbstractMessageSendingTemplate<D>.DoConvert
    fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate<D>.DoConvert
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.Core.IMessagePostProcessor
    name: IMessagePostProcessor
    nameWithType: IMessagePostProcessor
    fullName: Steeltoe.Messaging.Core.IMessagePostProcessor
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.DoConvert(System.Object,System.Collections.Generic.IDictionary{System.String,System.Object},Steeltoe.Messaging.Core.IMessagePostProcessor)
    name: DoConvert
    nameWithType: AbstractMessageSendingTemplate(Of D).DoConvert
    fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate(Of D).DoConvert
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.Core.IMessagePostProcessor
    name: IMessagePostProcessor
    nameWithType: IMessagePostProcessor
    fullName: Steeltoe.Messaging.Core.IMessagePostProcessor
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.ProcessHeadersToSend(System.Collections.Generic.IDictionary{System.String,System.Object})
  commentId: M:Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.ProcessHeadersToSend(System.Collections.Generic.IDictionary{System.String,System.Object})
  isExternal: true
  name: ProcessHeadersToSend(IDictionary<String, Object>)
  nameWithType: AbstractMessageSendingTemplate<D>.ProcessHeadersToSend(IDictionary<String, Object>)
  fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate<D>.ProcessHeadersToSend(System.Collections.Generic.IDictionary<System.String, System.Object>)
  nameWithType.vb: AbstractMessageSendingTemplate(Of D).ProcessHeadersToSend(IDictionary(Of String, Object))
  fullName.vb: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate(Of D).ProcessHeadersToSend(System.Collections.Generic.IDictionary(Of System.String, System.Object))
  name.vb: ProcessHeadersToSend(IDictionary(Of String, Object))
  spec.csharp:
  - uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.ProcessHeadersToSend(System.Collections.Generic.IDictionary{System.String,System.Object})
    name: ProcessHeadersToSend
    nameWithType: AbstractMessageSendingTemplate<D>.ProcessHeadersToSend
    fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate<D>.ProcessHeadersToSend
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.ProcessHeadersToSend(System.Collections.Generic.IDictionary{System.String,System.Object})
    name: ProcessHeadersToSend
    nameWithType: AbstractMessageSendingTemplate(Of D).ProcessHeadersToSend
    fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate(Of D).ProcessHeadersToSend
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Steeltoe.Messaging.Core.MessageChannelTemplate.#ctor*
  commentId: Overload:Steeltoe.Messaging.Core.MessageChannelTemplate.#ctor
  name: MessageChannelTemplate
  nameWithType: MessageChannelTemplate.MessageChannelTemplate
  fullName: Steeltoe.Messaging.Core.MessageChannelTemplate.MessageChannelTemplate
- uid: Microsoft.Extensions.Logging.ILogger
  commentId: T:Microsoft.Extensions.Logging.ILogger
  parent: Microsoft.Extensions.Logging
  isExternal: true
  name: ILogger
  nameWithType: ILogger
  fullName: Microsoft.Extensions.Logging.ILogger
- uid: Microsoft.Extensions.Logging
  commentId: N:Microsoft.Extensions.Logging
  isExternal: true
  name: Microsoft.Extensions.Logging
  nameWithType: Microsoft.Extensions.Logging
  fullName: Microsoft.Extensions.Logging
- uid: Steeltoe.Common.Contexts.IApplicationContext
  commentId: T:Steeltoe.Common.Contexts.IApplicationContext
  parent: Steeltoe.Common.Contexts
  name: IApplicationContext
  nameWithType: IApplicationContext
  fullName: Steeltoe.Common.Contexts.IApplicationContext
- uid: Steeltoe.Common.Contexts
  commentId: N:Steeltoe.Common.Contexts
  name: Steeltoe.Common.Contexts
  nameWithType: Steeltoe.Common.Contexts
  fullName: Steeltoe.Common.Contexts
- uid: Steeltoe.Messaging.Core.MessageChannelTemplate.SendTimeout*
  commentId: Overload:Steeltoe.Messaging.Core.MessageChannelTemplate.SendTimeout
  name: SendTimeout
  nameWithType: MessageChannelTemplate.SendTimeout
  fullName: Steeltoe.Messaging.Core.MessageChannelTemplate.SendTimeout
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Steeltoe.Messaging.Core.MessageChannelTemplate.ReceiveTimeout*
  commentId: Overload:Steeltoe.Messaging.Core.MessageChannelTemplate.ReceiveTimeout
  name: ReceiveTimeout
  nameWithType: MessageChannelTemplate.ReceiveTimeout
  fullName: Steeltoe.Messaging.Core.MessageChannelTemplate.ReceiveTimeout
- uid: Steeltoe.Messaging.Core.MessageChannelTemplate.SendTimeoutHeader*
  commentId: Overload:Steeltoe.Messaging.Core.MessageChannelTemplate.SendTimeoutHeader
  name: SendTimeoutHeader
  nameWithType: MessageChannelTemplate.SendTimeoutHeader
  fullName: Steeltoe.Messaging.Core.MessageChannelTemplate.SendTimeoutHeader
- uid: Steeltoe.Messaging.Core.MessageChannelTemplate.ReceiveTimeoutHeader*
  commentId: Overload:Steeltoe.Messaging.Core.MessageChannelTemplate.ReceiveTimeoutHeader
  name: ReceiveTimeoutHeader
  nameWithType: MessageChannelTemplate.ReceiveTimeoutHeader
  fullName: Steeltoe.Messaging.Core.MessageChannelTemplate.ReceiveTimeoutHeader
- uid: Steeltoe.Messaging.Core.MessageChannelTemplate.ThrowExceptionOnLateReply*
  commentId: Overload:Steeltoe.Messaging.Core.MessageChannelTemplate.ThrowExceptionOnLateReply
  name: ThrowExceptionOnLateReply
  nameWithType: MessageChannelTemplate.ThrowExceptionOnLateReply
  fullName: Steeltoe.Messaging.Core.MessageChannelTemplate.ThrowExceptionOnLateReply
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Steeltoe.Messaging.Core.MessageChannelTemplate.ProcessMessageBeforeSend*
  commentId: Overload:Steeltoe.Messaging.Core.MessageChannelTemplate.ProcessMessageBeforeSend
  name: ProcessMessageBeforeSend
  nameWithType: MessageChannelTemplate.ProcessMessageBeforeSend
  fullName: Steeltoe.Messaging.Core.MessageChannelTemplate.ProcessMessageBeforeSend
- uid: Steeltoe.Messaging.IMessage
  commentId: T:Steeltoe.Messaging.IMessage
  parent: Steeltoe.Messaging
  name: IMessage
  nameWithType: IMessage
  fullName: Steeltoe.Messaging.IMessage
- uid: Steeltoe.Messaging
  commentId: N:Steeltoe.Messaging
  name: Steeltoe.Messaging
  nameWithType: Steeltoe.Messaging
  fullName: Steeltoe.Messaging
- uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate{Steeltoe.Messaging.IMessageChannel}.DoSend(Steeltoe.Messaging.IMessageChannel,Steeltoe.Messaging.IMessage)
  commentId: M:Steeltoe.Messaging.Core.AbstractMessageSendingTemplate{Steeltoe.Messaging.IMessageChannel}.DoSend(Steeltoe.Messaging.IMessageChannel,Steeltoe.Messaging.IMessage)
  parent: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate{Steeltoe.Messaging.IMessageChannel}
  definition: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.DoSend(`0,Steeltoe.Messaging.IMessage)
  name: DoSend(IMessageChannel, IMessage)
  nameWithType: AbstractMessageSendingTemplate<IMessageChannel>.DoSend(IMessageChannel, IMessage)
  fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate<Steeltoe.Messaging.IMessageChannel>.DoSend(Steeltoe.Messaging.IMessageChannel, Steeltoe.Messaging.IMessage)
  nameWithType.vb: AbstractMessageSendingTemplate(Of IMessageChannel).DoSend(IMessageChannel, IMessage)
  fullName.vb: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate(Of Steeltoe.Messaging.IMessageChannel).DoSend(Steeltoe.Messaging.IMessageChannel, Steeltoe.Messaging.IMessage)
  spec.csharp:
  - uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.DoSend(`0,Steeltoe.Messaging.IMessage)
    name: DoSend
    nameWithType: AbstractMessageSendingTemplate<IMessageChannel>.DoSend
    fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate<Steeltoe.Messaging.IMessageChannel>.DoSend
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.IMessageChannel
    name: IMessageChannel
    nameWithType: IMessageChannel
    fullName: Steeltoe.Messaging.IMessageChannel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.DoSend(`0,Steeltoe.Messaging.IMessage)
    name: DoSend
    nameWithType: AbstractMessageSendingTemplate(Of IMessageChannel).DoSend
    fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate(Of Steeltoe.Messaging.IMessageChannel).DoSend
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.IMessageChannel
    name: IMessageChannel
    nameWithType: IMessageChannel
    fullName: Steeltoe.Messaging.IMessageChannel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Core.MessageChannelTemplate.DoSend*
  commentId: Overload:Steeltoe.Messaging.Core.MessageChannelTemplate.DoSend
  name: DoSend
  nameWithType: MessageChannelTemplate.DoSend
  fullName: Steeltoe.Messaging.Core.MessageChannelTemplate.DoSend
- uid: Steeltoe.Messaging.IMessageChannel
  commentId: T:Steeltoe.Messaging.IMessageChannel
  parent: Steeltoe.Messaging
  name: IMessageChannel
  nameWithType: IMessageChannel
  fullName: Steeltoe.Messaging.IMessageChannel
- uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.DoSend(`0,Steeltoe.Messaging.IMessage)
  commentId: M:Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.DoSend(`0,Steeltoe.Messaging.IMessage)
  name: DoSend(D, IMessage)
  nameWithType: AbstractMessageSendingTemplate<D>.DoSend(D, IMessage)
  fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate<D>.DoSend(D, Steeltoe.Messaging.IMessage)
  nameWithType.vb: AbstractMessageSendingTemplate(Of D).DoSend(D, IMessage)
  fullName.vb: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate(Of D).DoSend(D, Steeltoe.Messaging.IMessage)
  spec.csharp:
  - uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.DoSend(`0,Steeltoe.Messaging.IMessage)
    name: DoSend
    nameWithType: AbstractMessageSendingTemplate<D>.DoSend
    fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate<D>.DoSend
  - name: (
    nameWithType: (
    fullName: (
  - name: D
    nameWithType: D
    fullName: D
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.DoSend(`0,Steeltoe.Messaging.IMessage)
    name: DoSend
    nameWithType: AbstractMessageSendingTemplate(Of D).DoSend
    fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate(Of D).DoSend
  - name: (
    nameWithType: (
    fullName: (
  - name: D
    nameWithType: D
    fullName: D
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate{Steeltoe.Messaging.IMessageChannel}.DoSendAsync(Steeltoe.Messaging.IMessageChannel,Steeltoe.Messaging.IMessage,System.Threading.CancellationToken)
  commentId: M:Steeltoe.Messaging.Core.AbstractMessageSendingTemplate{Steeltoe.Messaging.IMessageChannel}.DoSendAsync(Steeltoe.Messaging.IMessageChannel,Steeltoe.Messaging.IMessage,System.Threading.CancellationToken)
  parent: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate{Steeltoe.Messaging.IMessageChannel}
  definition: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.DoSendAsync(`0,Steeltoe.Messaging.IMessage,System.Threading.CancellationToken)
  name: DoSendAsync(IMessageChannel, IMessage, CancellationToken)
  nameWithType: AbstractMessageSendingTemplate<IMessageChannel>.DoSendAsync(IMessageChannel, IMessage, CancellationToken)
  fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate<Steeltoe.Messaging.IMessageChannel>.DoSendAsync(Steeltoe.Messaging.IMessageChannel, Steeltoe.Messaging.IMessage, System.Threading.CancellationToken)
  nameWithType.vb: AbstractMessageSendingTemplate(Of IMessageChannel).DoSendAsync(IMessageChannel, IMessage, CancellationToken)
  fullName.vb: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate(Of Steeltoe.Messaging.IMessageChannel).DoSendAsync(Steeltoe.Messaging.IMessageChannel, Steeltoe.Messaging.IMessage, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.DoSendAsync(`0,Steeltoe.Messaging.IMessage,System.Threading.CancellationToken)
    name: DoSendAsync
    nameWithType: AbstractMessageSendingTemplate<IMessageChannel>.DoSendAsync
    fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate<Steeltoe.Messaging.IMessageChannel>.DoSendAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.IMessageChannel
    name: IMessageChannel
    nameWithType: IMessageChannel
    fullName: Steeltoe.Messaging.IMessageChannel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.DoSendAsync(`0,Steeltoe.Messaging.IMessage,System.Threading.CancellationToken)
    name: DoSendAsync
    nameWithType: AbstractMessageSendingTemplate(Of IMessageChannel).DoSendAsync
    fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate(Of Steeltoe.Messaging.IMessageChannel).DoSendAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.IMessageChannel
    name: IMessageChannel
    nameWithType: IMessageChannel
    fullName: Steeltoe.Messaging.IMessageChannel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Core.MessageChannelTemplate.DoSendAsync*
  commentId: Overload:Steeltoe.Messaging.Core.MessageChannelTemplate.DoSendAsync
  name: DoSendAsync
  nameWithType: MessageChannelTemplate.DoSendAsync
  fullName: Steeltoe.Messaging.Core.MessageChannelTemplate.DoSendAsync
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.DoSendAsync(`0,Steeltoe.Messaging.IMessage,System.Threading.CancellationToken)
  commentId: M:Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.DoSendAsync(`0,Steeltoe.Messaging.IMessage,System.Threading.CancellationToken)
  isExternal: true
  name: DoSendAsync(D, IMessage, CancellationToken)
  nameWithType: AbstractMessageSendingTemplate<D>.DoSendAsync(D, IMessage, CancellationToken)
  fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate<D>.DoSendAsync(D, Steeltoe.Messaging.IMessage, System.Threading.CancellationToken)
  nameWithType.vb: AbstractMessageSendingTemplate(Of D).DoSendAsync(D, IMessage, CancellationToken)
  fullName.vb: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate(Of D).DoSendAsync(D, Steeltoe.Messaging.IMessage, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.DoSendAsync(`0,Steeltoe.Messaging.IMessage,System.Threading.CancellationToken)
    name: DoSendAsync
    nameWithType: AbstractMessageSendingTemplate<D>.DoSendAsync
    fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate<D>.DoSendAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: D
    nameWithType: D
    fullName: D
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.DoSendAsync(`0,Steeltoe.Messaging.IMessage,System.Threading.CancellationToken)
    name: DoSendAsync
    nameWithType: AbstractMessageSendingTemplate(Of D).DoSendAsync
    fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate(Of D).DoSendAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: D
    nameWithType: D
    fullName: D
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: true
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: Steeltoe.Messaging.Core.MessageChannelTemplate.DoSendInternalAsync*
  commentId: Overload:Steeltoe.Messaging.Core.MessageChannelTemplate.DoSendInternalAsync
  name: DoSendInternalAsync
  nameWithType: MessageChannelTemplate.DoSendInternalAsync
  fullName: Steeltoe.Messaging.Core.MessageChannelTemplate.DoSendInternalAsync
- uid: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate{Steeltoe.Messaging.IMessageChannel}.DoReceive(Steeltoe.Messaging.IMessageChannel)
  commentId: M:Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate{Steeltoe.Messaging.IMessageChannel}.DoReceive(Steeltoe.Messaging.IMessageChannel)
  parent: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate{Steeltoe.Messaging.IMessageChannel}
  definition: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate`1.DoReceive(`0)
  name: DoReceive(IMessageChannel)
  nameWithType: AbstractMessageReceivingTemplate<IMessageChannel>.DoReceive(IMessageChannel)
  fullName: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate<Steeltoe.Messaging.IMessageChannel>.DoReceive(Steeltoe.Messaging.IMessageChannel)
  nameWithType.vb: AbstractMessageReceivingTemplate(Of IMessageChannel).DoReceive(IMessageChannel)
  fullName.vb: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate(Of Steeltoe.Messaging.IMessageChannel).DoReceive(Steeltoe.Messaging.IMessageChannel)
  spec.csharp:
  - uid: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate`1.DoReceive(`0)
    name: DoReceive
    nameWithType: AbstractMessageReceivingTemplate<IMessageChannel>.DoReceive
    fullName: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate<Steeltoe.Messaging.IMessageChannel>.DoReceive
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.IMessageChannel
    name: IMessageChannel
    nameWithType: IMessageChannel
    fullName: Steeltoe.Messaging.IMessageChannel
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate`1.DoReceive(`0)
    name: DoReceive
    nameWithType: AbstractMessageReceivingTemplate(Of IMessageChannel).DoReceive
    fullName: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate(Of Steeltoe.Messaging.IMessageChannel).DoReceive
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.IMessageChannel
    name: IMessageChannel
    nameWithType: IMessageChannel
    fullName: Steeltoe.Messaging.IMessageChannel
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Core.MessageChannelTemplate.DoReceive*
  commentId: Overload:Steeltoe.Messaging.Core.MessageChannelTemplate.DoReceive
  name: DoReceive
  nameWithType: MessageChannelTemplate.DoReceive
  fullName: Steeltoe.Messaging.Core.MessageChannelTemplate.DoReceive
- uid: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate`1.DoReceive(`0)
  commentId: M:Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate`1.DoReceive(`0)
  name: DoReceive(D)
  nameWithType: AbstractMessageReceivingTemplate<D>.DoReceive(D)
  fullName: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate<D>.DoReceive(D)
  nameWithType.vb: AbstractMessageReceivingTemplate(Of D).DoReceive(D)
  fullName.vb: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate(Of D).DoReceive(D)
  spec.csharp:
  - uid: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate`1.DoReceive(`0)
    name: DoReceive
    nameWithType: AbstractMessageReceivingTemplate<D>.DoReceive
    fullName: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate<D>.DoReceive
  - name: (
    nameWithType: (
    fullName: (
  - name: D
    nameWithType: D
    fullName: D
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate`1.DoReceive(`0)
    name: DoReceive
    nameWithType: AbstractMessageReceivingTemplate(Of D).DoReceive
    fullName: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate(Of D).DoReceive
  - name: (
    nameWithType: (
    fullName: (
  - name: D
    nameWithType: D
    fullName: D
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate{Steeltoe.Messaging.IMessageChannel}.DoReceiveAsync(Steeltoe.Messaging.IMessageChannel,System.Threading.CancellationToken)
  commentId: M:Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate{Steeltoe.Messaging.IMessageChannel}.DoReceiveAsync(Steeltoe.Messaging.IMessageChannel,System.Threading.CancellationToken)
  parent: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate{Steeltoe.Messaging.IMessageChannel}
  definition: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate`1.DoReceiveAsync(`0,System.Threading.CancellationToken)
  name: DoReceiveAsync(IMessageChannel, CancellationToken)
  nameWithType: AbstractMessageReceivingTemplate<IMessageChannel>.DoReceiveAsync(IMessageChannel, CancellationToken)
  fullName: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate<Steeltoe.Messaging.IMessageChannel>.DoReceiveAsync(Steeltoe.Messaging.IMessageChannel, System.Threading.CancellationToken)
  nameWithType.vb: AbstractMessageReceivingTemplate(Of IMessageChannel).DoReceiveAsync(IMessageChannel, CancellationToken)
  fullName.vb: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate(Of Steeltoe.Messaging.IMessageChannel).DoReceiveAsync(Steeltoe.Messaging.IMessageChannel, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate`1.DoReceiveAsync(`0,System.Threading.CancellationToken)
    name: DoReceiveAsync
    nameWithType: AbstractMessageReceivingTemplate<IMessageChannel>.DoReceiveAsync
    fullName: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate<Steeltoe.Messaging.IMessageChannel>.DoReceiveAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.IMessageChannel
    name: IMessageChannel
    nameWithType: IMessageChannel
    fullName: Steeltoe.Messaging.IMessageChannel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate`1.DoReceiveAsync(`0,System.Threading.CancellationToken)
    name: DoReceiveAsync
    nameWithType: AbstractMessageReceivingTemplate(Of IMessageChannel).DoReceiveAsync
    fullName: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate(Of Steeltoe.Messaging.IMessageChannel).DoReceiveAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.IMessageChannel
    name: IMessageChannel
    nameWithType: IMessageChannel
    fullName: Steeltoe.Messaging.IMessageChannel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Core.MessageChannelTemplate.DoReceiveAsync*
  commentId: Overload:Steeltoe.Messaging.Core.MessageChannelTemplate.DoReceiveAsync
  name: DoReceiveAsync
  nameWithType: MessageChannelTemplate.DoReceiveAsync
  fullName: Steeltoe.Messaging.Core.MessageChannelTemplate.DoReceiveAsync
- uid: System.Threading.Tasks.Task{Steeltoe.Messaging.IMessage}
  commentId: T:System.Threading.Tasks.Task{Steeltoe.Messaging.IMessage}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<IMessage>
  nameWithType: Task<IMessage>
  fullName: System.Threading.Tasks.Task<Steeltoe.Messaging.IMessage>
  nameWithType.vb: Task(Of IMessage)
  fullName.vb: System.Threading.Tasks.Task(Of Steeltoe.Messaging.IMessage)
  name.vb: Task(Of IMessage)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate`1.DoReceiveAsync(`0,System.Threading.CancellationToken)
  commentId: M:Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate`1.DoReceiveAsync(`0,System.Threading.CancellationToken)
  isExternal: true
  name: DoReceiveAsync(D, CancellationToken)
  nameWithType: AbstractMessageReceivingTemplate<D>.DoReceiveAsync(D, CancellationToken)
  fullName: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate<D>.DoReceiveAsync(D, System.Threading.CancellationToken)
  nameWithType.vb: AbstractMessageReceivingTemplate(Of D).DoReceiveAsync(D, CancellationToken)
  fullName.vb: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate(Of D).DoReceiveAsync(D, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate`1.DoReceiveAsync(`0,System.Threading.CancellationToken)
    name: DoReceiveAsync
    nameWithType: AbstractMessageReceivingTemplate<D>.DoReceiveAsync
    fullName: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate<D>.DoReceiveAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: D
    nameWithType: D
    fullName: D
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate`1.DoReceiveAsync(`0,System.Threading.CancellationToken)
    name: DoReceiveAsync
    nameWithType: AbstractMessageReceivingTemplate(Of D).DoReceiveAsync
    fullName: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate(Of D).DoReceiveAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: D
    nameWithType: D
    fullName: D
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Core.MessageChannelTemplate.DoReceiveInternalAsync*
  commentId: Overload:Steeltoe.Messaging.Core.MessageChannelTemplate.DoReceiveInternalAsync
  name: DoReceiveInternalAsync
  nameWithType: MessageChannelTemplate.DoReceiveInternalAsync
  fullName: Steeltoe.Messaging.Core.MessageChannelTemplate.DoReceiveInternalAsync
- uid: Steeltoe.Messaging.Core.AbstractMessagingTemplate{Steeltoe.Messaging.IMessageChannel}.DoSendAndReceiveAsync(Steeltoe.Messaging.IMessageChannel,Steeltoe.Messaging.IMessage,System.Threading.CancellationToken)
  commentId: M:Steeltoe.Messaging.Core.AbstractMessagingTemplate{Steeltoe.Messaging.IMessageChannel}.DoSendAndReceiveAsync(Steeltoe.Messaging.IMessageChannel,Steeltoe.Messaging.IMessage,System.Threading.CancellationToken)
  parent: Steeltoe.Messaging.Core.AbstractMessagingTemplate{Steeltoe.Messaging.IMessageChannel}
  definition: Steeltoe.Messaging.Core.AbstractMessagingTemplate`1.DoSendAndReceiveAsync(`0,Steeltoe.Messaging.IMessage,System.Threading.CancellationToken)
  name: DoSendAndReceiveAsync(IMessageChannel, IMessage, CancellationToken)
  nameWithType: AbstractMessagingTemplate<IMessageChannel>.DoSendAndReceiveAsync(IMessageChannel, IMessage, CancellationToken)
  fullName: Steeltoe.Messaging.Core.AbstractMessagingTemplate<Steeltoe.Messaging.IMessageChannel>.DoSendAndReceiveAsync(Steeltoe.Messaging.IMessageChannel, Steeltoe.Messaging.IMessage, System.Threading.CancellationToken)
  nameWithType.vb: AbstractMessagingTemplate(Of IMessageChannel).DoSendAndReceiveAsync(IMessageChannel, IMessage, CancellationToken)
  fullName.vb: Steeltoe.Messaging.Core.AbstractMessagingTemplate(Of Steeltoe.Messaging.IMessageChannel).DoSendAndReceiveAsync(Steeltoe.Messaging.IMessageChannel, Steeltoe.Messaging.IMessage, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Steeltoe.Messaging.Core.AbstractMessagingTemplate`1.DoSendAndReceiveAsync(`0,Steeltoe.Messaging.IMessage,System.Threading.CancellationToken)
    name: DoSendAndReceiveAsync
    nameWithType: AbstractMessagingTemplate<IMessageChannel>.DoSendAndReceiveAsync
    fullName: Steeltoe.Messaging.Core.AbstractMessagingTemplate<Steeltoe.Messaging.IMessageChannel>.DoSendAndReceiveAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.IMessageChannel
    name: IMessageChannel
    nameWithType: IMessageChannel
    fullName: Steeltoe.Messaging.IMessageChannel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Core.AbstractMessagingTemplate`1.DoSendAndReceiveAsync(`0,Steeltoe.Messaging.IMessage,System.Threading.CancellationToken)
    name: DoSendAndReceiveAsync
    nameWithType: AbstractMessagingTemplate(Of IMessageChannel).DoSendAndReceiveAsync
    fullName: Steeltoe.Messaging.Core.AbstractMessagingTemplate(Of Steeltoe.Messaging.IMessageChannel).DoSendAndReceiveAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.IMessageChannel
    name: IMessageChannel
    nameWithType: IMessageChannel
    fullName: Steeltoe.Messaging.IMessageChannel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Core.MessageChannelTemplate.DoSendAndReceiveAsync*
  commentId: Overload:Steeltoe.Messaging.Core.MessageChannelTemplate.DoSendAndReceiveAsync
  name: DoSendAndReceiveAsync
  nameWithType: MessageChannelTemplate.DoSendAndReceiveAsync
  fullName: Steeltoe.Messaging.Core.MessageChannelTemplate.DoSendAndReceiveAsync
- uid: Steeltoe.Messaging.Core.AbstractMessagingTemplate`1.DoSendAndReceiveAsync(`0,Steeltoe.Messaging.IMessage,System.Threading.CancellationToken)
  commentId: M:Steeltoe.Messaging.Core.AbstractMessagingTemplate`1.DoSendAndReceiveAsync(`0,Steeltoe.Messaging.IMessage,System.Threading.CancellationToken)
  isExternal: true
  name: DoSendAndReceiveAsync(D, IMessage, CancellationToken)
  nameWithType: AbstractMessagingTemplate<D>.DoSendAndReceiveAsync(D, IMessage, CancellationToken)
  fullName: Steeltoe.Messaging.Core.AbstractMessagingTemplate<D>.DoSendAndReceiveAsync(D, Steeltoe.Messaging.IMessage, System.Threading.CancellationToken)
  nameWithType.vb: AbstractMessagingTemplate(Of D).DoSendAndReceiveAsync(D, IMessage, CancellationToken)
  fullName.vb: Steeltoe.Messaging.Core.AbstractMessagingTemplate(Of D).DoSendAndReceiveAsync(D, Steeltoe.Messaging.IMessage, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Steeltoe.Messaging.Core.AbstractMessagingTemplate`1.DoSendAndReceiveAsync(`0,Steeltoe.Messaging.IMessage,System.Threading.CancellationToken)
    name: DoSendAndReceiveAsync
    nameWithType: AbstractMessagingTemplate<D>.DoSendAndReceiveAsync
    fullName: Steeltoe.Messaging.Core.AbstractMessagingTemplate<D>.DoSendAndReceiveAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: D
    nameWithType: D
    fullName: D
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Core.AbstractMessagingTemplate`1.DoSendAndReceiveAsync(`0,Steeltoe.Messaging.IMessage,System.Threading.CancellationToken)
    name: DoSendAndReceiveAsync
    nameWithType: AbstractMessagingTemplate(Of D).DoSendAndReceiveAsync
    fullName: Steeltoe.Messaging.Core.AbstractMessagingTemplate(Of D).DoSendAndReceiveAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: D
    nameWithType: D
    fullName: D
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Core.MessageChannelTemplate.DoSendAndReceiveInternalAsync*
  commentId: Overload:Steeltoe.Messaging.Core.MessageChannelTemplate.DoSendAndReceiveInternalAsync
  name: DoSendAndReceiveInternalAsync
  nameWithType: MessageChannelTemplate.DoSendAndReceiveInternalAsync
  fullName: Steeltoe.Messaging.Core.MessageChannelTemplate.DoSendAndReceiveInternalAsync
- uid: Steeltoe.Messaging.Core.AbstractMessagingTemplate{Steeltoe.Messaging.IMessageChannel}.DoSendAndReceive(Steeltoe.Messaging.IMessageChannel,Steeltoe.Messaging.IMessage)
  commentId: M:Steeltoe.Messaging.Core.AbstractMessagingTemplate{Steeltoe.Messaging.IMessageChannel}.DoSendAndReceive(Steeltoe.Messaging.IMessageChannel,Steeltoe.Messaging.IMessage)
  parent: Steeltoe.Messaging.Core.AbstractMessagingTemplate{Steeltoe.Messaging.IMessageChannel}
  definition: Steeltoe.Messaging.Core.AbstractMessagingTemplate`1.DoSendAndReceive(`0,Steeltoe.Messaging.IMessage)
  name: DoSendAndReceive(IMessageChannel, IMessage)
  nameWithType: AbstractMessagingTemplate<IMessageChannel>.DoSendAndReceive(IMessageChannel, IMessage)
  fullName: Steeltoe.Messaging.Core.AbstractMessagingTemplate<Steeltoe.Messaging.IMessageChannel>.DoSendAndReceive(Steeltoe.Messaging.IMessageChannel, Steeltoe.Messaging.IMessage)
  nameWithType.vb: AbstractMessagingTemplate(Of IMessageChannel).DoSendAndReceive(IMessageChannel, IMessage)
  fullName.vb: Steeltoe.Messaging.Core.AbstractMessagingTemplate(Of Steeltoe.Messaging.IMessageChannel).DoSendAndReceive(Steeltoe.Messaging.IMessageChannel, Steeltoe.Messaging.IMessage)
  spec.csharp:
  - uid: Steeltoe.Messaging.Core.AbstractMessagingTemplate`1.DoSendAndReceive(`0,Steeltoe.Messaging.IMessage)
    name: DoSendAndReceive
    nameWithType: AbstractMessagingTemplate<IMessageChannel>.DoSendAndReceive
    fullName: Steeltoe.Messaging.Core.AbstractMessagingTemplate<Steeltoe.Messaging.IMessageChannel>.DoSendAndReceive
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.IMessageChannel
    name: IMessageChannel
    nameWithType: IMessageChannel
    fullName: Steeltoe.Messaging.IMessageChannel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Core.AbstractMessagingTemplate`1.DoSendAndReceive(`0,Steeltoe.Messaging.IMessage)
    name: DoSendAndReceive
    nameWithType: AbstractMessagingTemplate(Of IMessageChannel).DoSendAndReceive
    fullName: Steeltoe.Messaging.Core.AbstractMessagingTemplate(Of Steeltoe.Messaging.IMessageChannel).DoSendAndReceive
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.IMessageChannel
    name: IMessageChannel
    nameWithType: IMessageChannel
    fullName: Steeltoe.Messaging.IMessageChannel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Core.MessageChannelTemplate.DoSendAndReceive*
  commentId: Overload:Steeltoe.Messaging.Core.MessageChannelTemplate.DoSendAndReceive
  name: DoSendAndReceive
  nameWithType: MessageChannelTemplate.DoSendAndReceive
  fullName: Steeltoe.Messaging.Core.MessageChannelTemplate.DoSendAndReceive
- uid: Steeltoe.Messaging.Core.AbstractMessagingTemplate`1.DoSendAndReceive(`0,Steeltoe.Messaging.IMessage)
  commentId: M:Steeltoe.Messaging.Core.AbstractMessagingTemplate`1.DoSendAndReceive(`0,Steeltoe.Messaging.IMessage)
  name: DoSendAndReceive(D, IMessage)
  nameWithType: AbstractMessagingTemplate<D>.DoSendAndReceive(D, IMessage)
  fullName: Steeltoe.Messaging.Core.AbstractMessagingTemplate<D>.DoSendAndReceive(D, Steeltoe.Messaging.IMessage)
  nameWithType.vb: AbstractMessagingTemplate(Of D).DoSendAndReceive(D, IMessage)
  fullName.vb: Steeltoe.Messaging.Core.AbstractMessagingTemplate(Of D).DoSendAndReceive(D, Steeltoe.Messaging.IMessage)
  spec.csharp:
  - uid: Steeltoe.Messaging.Core.AbstractMessagingTemplate`1.DoSendAndReceive(`0,Steeltoe.Messaging.IMessage)
    name: DoSendAndReceive
    nameWithType: AbstractMessagingTemplate<D>.DoSendAndReceive
    fullName: Steeltoe.Messaging.Core.AbstractMessagingTemplate<D>.DoSendAndReceive
  - name: (
    nameWithType: (
    fullName: (
  - name: D
    nameWithType: D
    fullName: D
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Core.AbstractMessagingTemplate`1.DoSendAndReceive(`0,Steeltoe.Messaging.IMessage)
    name: DoSendAndReceive
    nameWithType: AbstractMessagingTemplate(Of D).DoSendAndReceive
    fullName: Steeltoe.Messaging.Core.AbstractMessagingTemplate(Of D).DoSendAndReceive
  - name: (
    nameWithType: (
    fullName: (
  - name: D
    nameWithType: D
    fullName: D
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: )
    nameWithType: )
    fullName: )
