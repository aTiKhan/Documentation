### YamlMime:ManagedReference
items:
- uid: Steeltoe.Messaging.Handler.Invocation.IHandlerMethodReturnValueHandler
  commentId: T:Steeltoe.Messaging.Handler.Invocation.IHandlerMethodReturnValueHandler
  id: IHandlerMethodReturnValueHandler
  parent: Steeltoe.Messaging.Handler.Invocation
  children:
  - Steeltoe.Messaging.Handler.Invocation.IHandlerMethodReturnValueHandler.HandleReturnValue(System.Object,System.Reflection.ParameterInfo,Steeltoe.Messaging.IMessage)
  - Steeltoe.Messaging.Handler.Invocation.IHandlerMethodReturnValueHandler.SupportsReturnType(System.Reflection.ParameterInfo)
  langs:
  - csharp
  - vb
  name: IHandlerMethodReturnValueHandler
  nameWithType: IHandlerMethodReturnValueHandler
  fullName: Steeltoe.Messaging.Handler.Invocation.IHandlerMethodReturnValueHandler
  type: Interface
  source:
    remote:
      path: src/Messaging/src/Abstractions/Handler/Invocation/IHandlerMethodReturnValueHandler.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: IHandlerMethodReturnValueHandler
    path: ../Steeltoe/src/Messaging/src/Abstractions/Handler/Invocation/IHandlerMethodReturnValueHandler.cs
    startLine: 11
  assemblies:
  - Steeltoe.Messaging.Abstractions
  namespace: Steeltoe.Messaging.Handler.Invocation
  summary: "\nStrategy interface to handle the value returned from the invocation of a method handling a Message.\n"
  example: []
  syntax:
    content: public interface IHandlerMethodReturnValueHandler
    content.vb: Public Interface IHandlerMethodReturnValueHandler
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Steeltoe.Messaging.Handler.Invocation.IHandlerMethodReturnValueHandler.SupportsReturnType(System.Reflection.ParameterInfo)
  commentId: M:Steeltoe.Messaging.Handler.Invocation.IHandlerMethodReturnValueHandler.SupportsReturnType(System.Reflection.ParameterInfo)
  id: SupportsReturnType(System.Reflection.ParameterInfo)
  parent: Steeltoe.Messaging.Handler.Invocation.IHandlerMethodReturnValueHandler
  langs:
  - csharp
  - vb
  name: SupportsReturnType(ParameterInfo)
  nameWithType: IHandlerMethodReturnValueHandler.SupportsReturnType(ParameterInfo)
  fullName: Steeltoe.Messaging.Handler.Invocation.IHandlerMethodReturnValueHandler.SupportsReturnType(System.Reflection.ParameterInfo)
  type: Method
  source:
    remote:
      path: src/Messaging/src/Abstractions/Handler/Invocation/IHandlerMethodReturnValueHandler.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: SupportsReturnType
    path: ../Steeltoe/src/Messaging/src/Abstractions/Handler/Invocation/IHandlerMethodReturnValueHandler.cs
    startLine: 18
  assemblies:
  - Steeltoe.Messaging.Abstractions
  namespace: Steeltoe.Messaging.Handler.Invocation
  summary: "\nDetermine whether the given method return type is supported by this handler.\n"
  example: []
  syntax:
    content: bool SupportsReturnType(ParameterInfo returnType)
    parameters:
    - id: returnType
      type: System.Reflection.ParameterInfo
      description: the return parameter info
    return:
      type: System.Boolean
      description: true if it supports the supplied return type
    content.vb: Function SupportsReturnType(returnType As ParameterInfo) As Boolean
  overload: Steeltoe.Messaging.Handler.Invocation.IHandlerMethodReturnValueHandler.SupportsReturnType*
- uid: Steeltoe.Messaging.Handler.Invocation.IHandlerMethodReturnValueHandler.HandleReturnValue(System.Object,System.Reflection.ParameterInfo,Steeltoe.Messaging.IMessage)
  commentId: M:Steeltoe.Messaging.Handler.Invocation.IHandlerMethodReturnValueHandler.HandleReturnValue(System.Object,System.Reflection.ParameterInfo,Steeltoe.Messaging.IMessage)
  id: HandleReturnValue(System.Object,System.Reflection.ParameterInfo,Steeltoe.Messaging.IMessage)
  parent: Steeltoe.Messaging.Handler.Invocation.IHandlerMethodReturnValueHandler
  langs:
  - csharp
  - vb
  name: HandleReturnValue(Object, ParameterInfo, IMessage)
  nameWithType: IHandlerMethodReturnValueHandler.HandleReturnValue(Object, ParameterInfo, IMessage)
  fullName: Steeltoe.Messaging.Handler.Invocation.IHandlerMethodReturnValueHandler.HandleReturnValue(System.Object, System.Reflection.ParameterInfo, Steeltoe.Messaging.IMessage)
  type: Method
  source:
    remote:
      path: src/Messaging/src/Abstractions/Handler/Invocation/IHandlerMethodReturnValueHandler.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: HandleReturnValue
    path: ../Steeltoe/src/Messaging/src/Abstractions/Handler/Invocation/IHandlerMethodReturnValueHandler.cs
    startLine: 26
  assemblies:
  - Steeltoe.Messaging.Abstractions
  namespace: Steeltoe.Messaging.Handler.Invocation
  summary: "\nHandle the given return value.\n"
  example: []
  syntax:
    content: void HandleReturnValue(object returnValue, ParameterInfo returnType, IMessage message)
    parameters:
    - id: returnValue
      type: System.Object
      description: the value returned from the handler method
    - id: returnType
      type: System.Reflection.ParameterInfo
      description: the type of the return value
    - id: message
      type: Steeltoe.Messaging.IMessage
      description: the message that was passed to the handler
    content.vb: Sub HandleReturnValue(returnValue As Object, returnType As ParameterInfo, message As IMessage)
  overload: Steeltoe.Messaging.Handler.Invocation.IHandlerMethodReturnValueHandler.HandleReturnValue*
references:
- uid: Steeltoe.Messaging.Handler.Invocation
  commentId: N:Steeltoe.Messaging.Handler.Invocation
  name: Steeltoe.Messaging.Handler.Invocation
  nameWithType: Steeltoe.Messaging.Handler.Invocation
  fullName: Steeltoe.Messaging.Handler.Invocation
- uid: Steeltoe.Messaging.Handler.Invocation.IHandlerMethodReturnValueHandler.SupportsReturnType*
  commentId: Overload:Steeltoe.Messaging.Handler.Invocation.IHandlerMethodReturnValueHandler.SupportsReturnType
  name: SupportsReturnType
  nameWithType: IHandlerMethodReturnValueHandler.SupportsReturnType
  fullName: Steeltoe.Messaging.Handler.Invocation.IHandlerMethodReturnValueHandler.SupportsReturnType
- uid: System.Reflection.ParameterInfo
  commentId: T:System.Reflection.ParameterInfo
  parent: System.Reflection
  isExternal: true
  name: ParameterInfo
  nameWithType: ParameterInfo
  fullName: System.Reflection.ParameterInfo
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Reflection
  commentId: N:System.Reflection
  isExternal: true
  name: System.Reflection
  nameWithType: System.Reflection
  fullName: System.Reflection
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Steeltoe.Messaging.Handler.Invocation.IHandlerMethodReturnValueHandler.HandleReturnValue*
  commentId: Overload:Steeltoe.Messaging.Handler.Invocation.IHandlerMethodReturnValueHandler.HandleReturnValue
  name: HandleReturnValue
  nameWithType: IHandlerMethodReturnValueHandler.HandleReturnValue
  fullName: Steeltoe.Messaging.Handler.Invocation.IHandlerMethodReturnValueHandler.HandleReturnValue
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Steeltoe.Messaging.IMessage
  commentId: T:Steeltoe.Messaging.IMessage
  parent: Steeltoe.Messaging
  name: IMessage
  nameWithType: IMessage
  fullName: Steeltoe.Messaging.IMessage
- uid: Steeltoe.Messaging
  commentId: N:Steeltoe.Messaging
  name: Steeltoe.Messaging
  nameWithType: Steeltoe.Messaging
  fullName: Steeltoe.Messaging
