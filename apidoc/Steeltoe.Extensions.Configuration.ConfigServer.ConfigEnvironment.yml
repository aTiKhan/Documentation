### YamlMime:ManagedReference
items:
- uid: Steeltoe.Extensions.Configuration.ConfigServer.ConfigEnvironment
  commentId: T:Steeltoe.Extensions.Configuration.ConfigServer.ConfigEnvironment
  id: ConfigEnvironment
  parent: Steeltoe.Extensions.Configuration.ConfigServer
  children:
  - Steeltoe.Extensions.Configuration.ConfigServer.ConfigEnvironment.Label
  - Steeltoe.Extensions.Configuration.ConfigServer.ConfigEnvironment.Name
  - Steeltoe.Extensions.Configuration.ConfigServer.ConfigEnvironment.Profiles
  - Steeltoe.Extensions.Configuration.ConfigServer.ConfigEnvironment.PropertySources
  - Steeltoe.Extensions.Configuration.ConfigServer.ConfigEnvironment.State
  - Steeltoe.Extensions.Configuration.ConfigServer.ConfigEnvironment.Version
  langs:
  - csharp
  - vb
  name: ConfigEnvironment
  nameWithType: ConfigEnvironment
  fullName: Steeltoe.Extensions.Configuration.ConfigServer.ConfigEnvironment
  type: Class
  source:
    remote:
      path: src/Configuration/src/ConfigServerBase/ConfigEnvironment.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: ConfigEnvironment
    path: ../Steeltoe/src/Configuration/src/ConfigServerBase/ConfigEnvironment.cs
    startLine: 8
  assemblies:
  - Steeltoe.Extensions.Configuration.ConfigServerBase
  namespace: Steeltoe.Extensions.Configuration.ConfigServer
  syntax:
    content: public class ConfigEnvironment
    content.vb: Public Class ConfigEnvironment
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Steeltoe.Extensions.Configuration.ConfigServer.ConfigEnvironment.Name
  commentId: P:Steeltoe.Extensions.Configuration.ConfigServer.ConfigEnvironment.Name
  id: Name
  parent: Steeltoe.Extensions.Configuration.ConfigServer.ConfigEnvironment
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: ConfigEnvironment.Name
  fullName: Steeltoe.Extensions.Configuration.ConfigServer.ConfigEnvironment.Name
  type: Property
  source:
    remote:
      path: src/Configuration/src/ConfigServerBase/ConfigEnvironment.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Name
    path: ../Steeltoe/src/Configuration/src/ConfigServerBase/ConfigEnvironment.cs
    startLine: 10
  assemblies:
  - Steeltoe.Extensions.Configuration.ConfigServerBase
  namespace: Steeltoe.Extensions.Configuration.ConfigServer
  syntax:
    content: public string Name { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Name As String
  overload: Steeltoe.Extensions.Configuration.ConfigServer.ConfigEnvironment.Name*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Steeltoe.Extensions.Configuration.ConfigServer.ConfigEnvironment.Label
  commentId: P:Steeltoe.Extensions.Configuration.ConfigServer.ConfigEnvironment.Label
  id: Label
  parent: Steeltoe.Extensions.Configuration.ConfigServer.ConfigEnvironment
  langs:
  - csharp
  - vb
  name: Label
  nameWithType: ConfigEnvironment.Label
  fullName: Steeltoe.Extensions.Configuration.ConfigServer.ConfigEnvironment.Label
  type: Property
  source:
    remote:
      path: src/Configuration/src/ConfigServerBase/ConfigEnvironment.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Label
    path: ../Steeltoe/src/Configuration/src/ConfigServerBase/ConfigEnvironment.cs
    startLine: 12
  assemblies:
  - Steeltoe.Extensions.Configuration.ConfigServerBase
  namespace: Steeltoe.Extensions.Configuration.ConfigServer
  syntax:
    content: public string Label { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Label As String
  overload: Steeltoe.Extensions.Configuration.ConfigServer.ConfigEnvironment.Label*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Steeltoe.Extensions.Configuration.ConfigServer.ConfigEnvironment.Profiles
  commentId: P:Steeltoe.Extensions.Configuration.ConfigServer.ConfigEnvironment.Profiles
  id: Profiles
  parent: Steeltoe.Extensions.Configuration.ConfigServer.ConfigEnvironment
  langs:
  - csharp
  - vb
  name: Profiles
  nameWithType: ConfigEnvironment.Profiles
  fullName: Steeltoe.Extensions.Configuration.ConfigServer.ConfigEnvironment.Profiles
  type: Property
  source:
    remote:
      path: src/Configuration/src/ConfigServerBase/ConfigEnvironment.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Profiles
    path: ../Steeltoe/src/Configuration/src/ConfigServerBase/ConfigEnvironment.cs
    startLine: 14
  assemblies:
  - Steeltoe.Extensions.Configuration.ConfigServerBase
  namespace: Steeltoe.Extensions.Configuration.ConfigServer
  syntax:
    content: public IList<string> Profiles { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.IList{System.String}
    content.vb: Public Property Profiles As IList(Of String)
  overload: Steeltoe.Extensions.Configuration.ConfigServer.ConfigEnvironment.Profiles*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Steeltoe.Extensions.Configuration.ConfigServer.ConfigEnvironment.PropertySources
  commentId: P:Steeltoe.Extensions.Configuration.ConfigServer.ConfigEnvironment.PropertySources
  id: PropertySources
  parent: Steeltoe.Extensions.Configuration.ConfigServer.ConfigEnvironment
  langs:
  - csharp
  - vb
  name: PropertySources
  nameWithType: ConfigEnvironment.PropertySources
  fullName: Steeltoe.Extensions.Configuration.ConfigServer.ConfigEnvironment.PropertySources
  type: Property
  source:
    remote:
      path: src/Configuration/src/ConfigServerBase/ConfigEnvironment.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: PropertySources
    path: ../Steeltoe/src/Configuration/src/ConfigServerBase/ConfigEnvironment.cs
    startLine: 16
  assemblies:
  - Steeltoe.Extensions.Configuration.ConfigServerBase
  namespace: Steeltoe.Extensions.Configuration.ConfigServer
  syntax:
    content: public IList<PropertySource> PropertySources { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.IList{Steeltoe.Extensions.Configuration.ConfigServer.PropertySource}
    content.vb: Public Property PropertySources As IList(Of PropertySource)
  overload: Steeltoe.Extensions.Configuration.ConfigServer.ConfigEnvironment.PropertySources*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Steeltoe.Extensions.Configuration.ConfigServer.ConfigEnvironment.Version
  commentId: P:Steeltoe.Extensions.Configuration.ConfigServer.ConfigEnvironment.Version
  id: Version
  parent: Steeltoe.Extensions.Configuration.ConfigServer.ConfigEnvironment
  langs:
  - csharp
  - vb
  name: Version
  nameWithType: ConfigEnvironment.Version
  fullName: Steeltoe.Extensions.Configuration.ConfigServer.ConfigEnvironment.Version
  type: Property
  source:
    remote:
      path: src/Configuration/src/ConfigServerBase/ConfigEnvironment.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Version
    path: ../Steeltoe/src/Configuration/src/ConfigServerBase/ConfigEnvironment.cs
    startLine: 18
  assemblies:
  - Steeltoe.Extensions.Configuration.ConfigServerBase
  namespace: Steeltoe.Extensions.Configuration.ConfigServer
  syntax:
    content: public string Version { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Version As String
  overload: Steeltoe.Extensions.Configuration.ConfigServer.ConfigEnvironment.Version*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Steeltoe.Extensions.Configuration.ConfigServer.ConfigEnvironment.State
  commentId: P:Steeltoe.Extensions.Configuration.ConfigServer.ConfigEnvironment.State
  id: State
  parent: Steeltoe.Extensions.Configuration.ConfigServer.ConfigEnvironment
  langs:
  - csharp
  - vb
  name: State
  nameWithType: ConfigEnvironment.State
  fullName: Steeltoe.Extensions.Configuration.ConfigServer.ConfigEnvironment.State
  type: Property
  source:
    remote:
      path: src/Configuration/src/ConfigServerBase/ConfigEnvironment.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: State
    path: ../Steeltoe/src/Configuration/src/ConfigServerBase/ConfigEnvironment.cs
    startLine: 20
  assemblies:
  - Steeltoe.Extensions.Configuration.ConfigServerBase
  namespace: Steeltoe.Extensions.Configuration.ConfigServer
  syntax:
    content: public string State { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property State As String
  overload: Steeltoe.Extensions.Configuration.ConfigServer.ConfigEnvironment.State*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Steeltoe.Extensions.Configuration.ConfigServer
  commentId: N:Steeltoe.Extensions.Configuration.ConfigServer
  name: Steeltoe.Extensions.Configuration.ConfigServer
  nameWithType: Steeltoe.Extensions.Configuration.ConfigServer
  fullName: Steeltoe.Extensions.Configuration.ConfigServer
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Steeltoe.Extensions.Configuration.ConfigServer.ConfigEnvironment.Name*
  commentId: Overload:Steeltoe.Extensions.Configuration.ConfigServer.ConfigEnvironment.Name
  name: Name
  nameWithType: ConfigEnvironment.Name
  fullName: Steeltoe.Extensions.Configuration.ConfigServer.ConfigEnvironment.Name
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Steeltoe.Extensions.Configuration.ConfigServer.ConfigEnvironment.Label*
  commentId: Overload:Steeltoe.Extensions.Configuration.ConfigServer.ConfigEnvironment.Label
  name: Label
  nameWithType: ConfigEnvironment.Label
  fullName: Steeltoe.Extensions.Configuration.ConfigServer.ConfigEnvironment.Label
- uid: Steeltoe.Extensions.Configuration.ConfigServer.ConfigEnvironment.Profiles*
  commentId: Overload:Steeltoe.Extensions.Configuration.ConfigServer.ConfigEnvironment.Profiles
  name: Profiles
  nameWithType: ConfigEnvironment.Profiles
  fullName: Steeltoe.Extensions.Configuration.ConfigServer.ConfigEnvironment.Profiles
- uid: System.Collections.Generic.IList{System.String}
  commentId: T:System.Collections.Generic.IList{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<String>
  nameWithType: IList<String>
  fullName: System.Collections.Generic.IList<System.String>
  nameWithType.vb: IList(Of String)
  fullName.vb: System.Collections.Generic.IList(Of System.String)
  name.vb: IList(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullName.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Steeltoe.Extensions.Configuration.ConfigServer.ConfigEnvironment.PropertySources*
  commentId: Overload:Steeltoe.Extensions.Configuration.ConfigServer.ConfigEnvironment.PropertySources
  name: PropertySources
  nameWithType: ConfigEnvironment.PropertySources
  fullName: Steeltoe.Extensions.Configuration.ConfigServer.ConfigEnvironment.PropertySources
- uid: System.Collections.Generic.IList{Steeltoe.Extensions.Configuration.ConfigServer.PropertySource}
  commentId: T:System.Collections.Generic.IList{Steeltoe.Extensions.Configuration.ConfigServer.PropertySource}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<PropertySource>
  nameWithType: IList<PropertySource>
  fullName: System.Collections.Generic.IList<Steeltoe.Extensions.Configuration.ConfigServer.PropertySource>
  nameWithType.vb: IList(Of PropertySource)
  fullName.vb: System.Collections.Generic.IList(Of Steeltoe.Extensions.Configuration.ConfigServer.PropertySource)
  name.vb: IList(Of PropertySource)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Steeltoe.Extensions.Configuration.ConfigServer.PropertySource
    name: PropertySource
    nameWithType: PropertySource
    fullName: Steeltoe.Extensions.Configuration.ConfigServer.PropertySource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Steeltoe.Extensions.Configuration.ConfigServer.PropertySource
    name: PropertySource
    nameWithType: PropertySource
    fullName: Steeltoe.Extensions.Configuration.ConfigServer.PropertySource
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Extensions.Configuration.ConfigServer.ConfigEnvironment.Version*
  commentId: Overload:Steeltoe.Extensions.Configuration.ConfigServer.ConfigEnvironment.Version
  name: Version
  nameWithType: ConfigEnvironment.Version
  fullName: Steeltoe.Extensions.Configuration.ConfigServer.ConfigEnvironment.Version
- uid: Steeltoe.Extensions.Configuration.ConfigServer.ConfigEnvironment.State*
  commentId: Overload:Steeltoe.Extensions.Configuration.ConfigServer.ConfigEnvironment.State
  name: State
  nameWithType: ConfigEnvironment.State
  fullName: Steeltoe.Extensions.Configuration.ConfigServer.ConfigEnvironment.State
