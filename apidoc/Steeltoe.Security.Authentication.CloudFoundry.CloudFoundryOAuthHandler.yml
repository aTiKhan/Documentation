### YamlMime:ManagedReference
items:
- uid: Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthHandler
  commentId: T:Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthHandler
  id: CloudFoundryOAuthHandler
  parent: Steeltoe.Security.Authentication.CloudFoundry
  children:
  - Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthHandler.#ctor(Microsoft.Extensions.Options.IOptionsMonitor{Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions},Microsoft.Extensions.Logging.ILoggerFactory,System.Text.Encodings.Web.UrlEncoder,Microsoft.AspNetCore.Authentication.ISystemClock)
  - Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthHandler.BuildChallengeUrl(Microsoft.AspNetCore.Authentication.AuthenticationProperties,System.String)
  - Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthHandler.CreateTicketAsync(System.Security.Claims.ClaimsIdentity,Microsoft.AspNetCore.Authentication.AuthenticationProperties,Microsoft.AspNetCore.Authentication.OAuth.OAuthTokenResponse)
  - Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthHandler.ExchangeCodeAsync(Microsoft.AspNetCore.Authentication.OAuth.OAuthCodeExchangeContext)
  - Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthHandler.GetEncoded(System.String,System.String)
  - Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthHandler.GetHttpClient
  - Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthHandler.GetTokenInfoRequestMessage(Microsoft.AspNetCore.Authentication.OAuth.OAuthTokenResponse)
  - Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthHandler.GetTokenInfoRequestParameters(Microsoft.AspNetCore.Authentication.OAuth.OAuthTokenResponse)
  langs:
  - csharp
  - vb
  name: CloudFoundryOAuthHandler
  nameWithType: CloudFoundryOAuthHandler
  fullName: Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthHandler
  type: Class
  source:
    remote:
      path: src/Security/src/Authentication.CloudFoundryCore/CloudFoundryOAuthHandler.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: CloudFoundryOAuthHandler
    path: ../Steeltoe/src/Security/src/Authentication.CloudFoundryCore/CloudFoundryOAuthHandler.cs
    startLine: 22
  assemblies:
  - Steeltoe.Security.Authentication.CloudFoundryCore
  namespace: Steeltoe.Security.Authentication.CloudFoundry
  syntax:
    content: 'public class CloudFoundryOAuthHandler : OAuthHandler<CloudFoundryOAuthOptions>, IAuthenticationRequestHandler, IAuthenticationHandler'
    content.vb: >-
      Public Class CloudFoundryOAuthHandler

          Inherits OAuthHandler(Of CloudFoundryOAuthOptions)

          Implements IAuthenticationRequestHandler, IAuthenticationHandler
  inheritance:
  - System.Object
  - Microsoft.AspNetCore.Authentication.AuthenticationHandler{Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions}
  - Microsoft.AspNetCore.Authentication.RemoteAuthenticationHandler{Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions}
  - Microsoft.AspNetCore.Authentication.OAuth.OAuthHandler{Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions}
  implements:
  - Microsoft.AspNetCore.Authentication.IAuthenticationRequestHandler
  - Microsoft.AspNetCore.Authentication.IAuthenticationHandler
  inheritedMembers:
  - Microsoft.AspNetCore.Authentication.OAuth.OAuthHandler{Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions}.CreateEventsAsync
  - Microsoft.AspNetCore.Authentication.OAuth.OAuthHandler{Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions}.HandleRemoteAuthenticateAsync
  - Microsoft.AspNetCore.Authentication.OAuth.OAuthHandler{Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions}.HandleChallengeAsync(Microsoft.AspNetCore.Authentication.AuthenticationProperties)
  - Microsoft.AspNetCore.Authentication.OAuth.OAuthHandler{Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions}.FormatScope(System.Collections.Generic.IEnumerable{System.String})
  - Microsoft.AspNetCore.Authentication.OAuth.OAuthHandler{Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions}.FormatScope
  - Microsoft.AspNetCore.Authentication.OAuth.OAuthHandler{Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions}.Backchannel
  - Microsoft.AspNetCore.Authentication.OAuth.OAuthHandler{Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions}.Events
  - Microsoft.AspNetCore.Authentication.RemoteAuthenticationHandler{Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions}.ShouldHandleRequestAsync
  - Microsoft.AspNetCore.Authentication.RemoteAuthenticationHandler{Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions}.HandleRequestAsync
  - Microsoft.AspNetCore.Authentication.RemoteAuthenticationHandler{Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions}.HandleAuthenticateAsync
  - Microsoft.AspNetCore.Authentication.RemoteAuthenticationHandler{Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions}.HandleForbiddenAsync(Microsoft.AspNetCore.Authentication.AuthenticationProperties)
  - Microsoft.AspNetCore.Authentication.RemoteAuthenticationHandler{Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions}.GenerateCorrelationId(Microsoft.AspNetCore.Authentication.AuthenticationProperties)
  - Microsoft.AspNetCore.Authentication.RemoteAuthenticationHandler{Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions}.ValidateCorrelationId(Microsoft.AspNetCore.Authentication.AuthenticationProperties)
  - Microsoft.AspNetCore.Authentication.RemoteAuthenticationHandler{Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions}.HandleAccessDeniedErrorAsync(Microsoft.AspNetCore.Authentication.AuthenticationProperties)
  - Microsoft.AspNetCore.Authentication.RemoteAuthenticationHandler{Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions}.SignInScheme
  - Microsoft.AspNetCore.Authentication.AuthenticationHandler{Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions}.InitializeAsync(Microsoft.AspNetCore.Authentication.AuthenticationScheme,Microsoft.AspNetCore.Http.HttpContext)
  - Microsoft.AspNetCore.Authentication.AuthenticationHandler{Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions}.InitializeEventsAsync
  - Microsoft.AspNetCore.Authentication.AuthenticationHandler{Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions}.InitializeHandlerAsync
  - Microsoft.AspNetCore.Authentication.AuthenticationHandler{Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions}.BuildRedirectUri(System.String)
  - Microsoft.AspNetCore.Authentication.AuthenticationHandler{Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions}.ResolveTarget(System.String)
  - Microsoft.AspNetCore.Authentication.AuthenticationHandler{Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions}.AuthenticateAsync
  - Microsoft.AspNetCore.Authentication.AuthenticationHandler{Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions}.HandleAuthenticateOnceAsync
  - Microsoft.AspNetCore.Authentication.AuthenticationHandler{Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions}.HandleAuthenticateOnceSafeAsync
  - Microsoft.AspNetCore.Authentication.AuthenticationHandler{Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions}.ChallengeAsync(Microsoft.AspNetCore.Authentication.AuthenticationProperties)
  - Microsoft.AspNetCore.Authentication.AuthenticationHandler{Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions}.ForbidAsync(Microsoft.AspNetCore.Authentication.AuthenticationProperties)
  - Microsoft.AspNetCore.Authentication.AuthenticationHandler{Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions}.Scheme
  - Microsoft.AspNetCore.Authentication.AuthenticationHandler{Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions}.Options
  - Microsoft.AspNetCore.Authentication.AuthenticationHandler{Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions}.Context
  - Microsoft.AspNetCore.Authentication.AuthenticationHandler{Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions}.Request
  - Microsoft.AspNetCore.Authentication.AuthenticationHandler{Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions}.Response
  - Microsoft.AspNetCore.Authentication.AuthenticationHandler{Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions}.OriginalPath
  - Microsoft.AspNetCore.Authentication.AuthenticationHandler{Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions}.OriginalPathBase
  - Microsoft.AspNetCore.Authentication.AuthenticationHandler{Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions}.Logger
  - Microsoft.AspNetCore.Authentication.AuthenticationHandler{Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions}.UrlEncoder
  - Microsoft.AspNetCore.Authentication.AuthenticationHandler{Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions}.Clock
  - Microsoft.AspNetCore.Authentication.AuthenticationHandler{Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions}.OptionsMonitor
  - Microsoft.AspNetCore.Authentication.AuthenticationHandler{Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions}.ClaimsIssuer
  - Microsoft.AspNetCore.Authentication.AuthenticationHandler{Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions}.CurrentUri
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthHandler.#ctor(Microsoft.Extensions.Options.IOptionsMonitor{Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions},Microsoft.Extensions.Logging.ILoggerFactory,System.Text.Encodings.Web.UrlEncoder,Microsoft.AspNetCore.Authentication.ISystemClock)
  commentId: M:Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthHandler.#ctor(Microsoft.Extensions.Options.IOptionsMonitor{Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions},Microsoft.Extensions.Logging.ILoggerFactory,System.Text.Encodings.Web.UrlEncoder,Microsoft.AspNetCore.Authentication.ISystemClock)
  id: '#ctor(Microsoft.Extensions.Options.IOptionsMonitor{Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions},Microsoft.Extensions.Logging.ILoggerFactory,System.Text.Encodings.Web.UrlEncoder,Microsoft.AspNetCore.Authentication.ISystemClock)'
  parent: Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthHandler
  langs:
  - csharp
  - vb
  name: CloudFoundryOAuthHandler(IOptionsMonitor<CloudFoundryOAuthOptions>, ILoggerFactory, UrlEncoder, ISystemClock)
  nameWithType: CloudFoundryOAuthHandler.CloudFoundryOAuthHandler(IOptionsMonitor<CloudFoundryOAuthOptions>, ILoggerFactory, UrlEncoder, ISystemClock)
  fullName: Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthHandler.CloudFoundryOAuthHandler(Microsoft.Extensions.Options.IOptionsMonitor<Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions>, Microsoft.Extensions.Logging.ILoggerFactory, System.Text.Encodings.Web.UrlEncoder, Microsoft.AspNetCore.Authentication.ISystemClock)
  type: Constructor
  source:
    remote:
      path: src/Security/src/Authentication.CloudFoundryCore/CloudFoundryOAuthHandler.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: .ctor
    path: ../Steeltoe/src/Security/src/Authentication.CloudFoundryCore/CloudFoundryOAuthHandler.cs
    startLine: 26
  assemblies:
  - Steeltoe.Security.Authentication.CloudFoundryCore
  namespace: Steeltoe.Security.Authentication.CloudFoundry
  syntax:
    content: public CloudFoundryOAuthHandler(IOptionsMonitor<CloudFoundryOAuthOptions> options, ILoggerFactory logger, UrlEncoder encoder, ISystemClock clock)
    parameters:
    - id: options
      type: Microsoft.Extensions.Options.IOptionsMonitor{Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions}
    - id: logger
      type: Microsoft.Extensions.Logging.ILoggerFactory
    - id: encoder
      type: System.Text.Encodings.Web.UrlEncoder
    - id: clock
      type: Microsoft.AspNetCore.Authentication.ISystemClock
    content.vb: Public Sub New(options As IOptionsMonitor(Of CloudFoundryOAuthOptions), logger As ILoggerFactory, encoder As UrlEncoder, clock As ISystemClock)
  overload: Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthHandler.#ctor*
  nameWithType.vb: CloudFoundryOAuthHandler.CloudFoundryOAuthHandler(IOptionsMonitor(Of CloudFoundryOAuthOptions), ILoggerFactory, UrlEncoder, ISystemClock)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthHandler.CloudFoundryOAuthHandler(Microsoft.Extensions.Options.IOptionsMonitor(Of Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions), Microsoft.Extensions.Logging.ILoggerFactory, System.Text.Encodings.Web.UrlEncoder, Microsoft.AspNetCore.Authentication.ISystemClock)
  name.vb: CloudFoundryOAuthHandler(IOptionsMonitor(Of CloudFoundryOAuthOptions), ILoggerFactory, UrlEncoder, ISystemClock)
- uid: Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthHandler.GetTokenInfoRequestParameters(Microsoft.AspNetCore.Authentication.OAuth.OAuthTokenResponse)
  commentId: M:Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthHandler.GetTokenInfoRequestParameters(Microsoft.AspNetCore.Authentication.OAuth.OAuthTokenResponse)
  id: GetTokenInfoRequestParameters(Microsoft.AspNetCore.Authentication.OAuth.OAuthTokenResponse)
  parent: Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthHandler
  langs:
  - csharp
  - vb
  name: GetTokenInfoRequestParameters(OAuthTokenResponse)
  nameWithType: CloudFoundryOAuthHandler.GetTokenInfoRequestParameters(OAuthTokenResponse)
  fullName: Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthHandler.GetTokenInfoRequestParameters(Microsoft.AspNetCore.Authentication.OAuth.OAuthTokenResponse)
  type: Method
  source:
    remote:
      path: src/Security/src/Authentication.CloudFoundryCore/CloudFoundryOAuthHandler.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: GetTokenInfoRequestParameters
    path: ../Steeltoe/src/Security/src/Authentication.CloudFoundryCore/CloudFoundryOAuthHandler.cs
    startLine: 36
  assemblies:
  - Steeltoe.Security.Authentication.CloudFoundryCore
  namespace: Steeltoe.Security.Authentication.CloudFoundry
  syntax:
    content: protected virtual Dictionary<string, string> GetTokenInfoRequestParameters(OAuthTokenResponse tokens)
    parameters:
    - id: tokens
      type: Microsoft.AspNetCore.Authentication.OAuth.OAuthTokenResponse
    return:
      type: System.Collections.Generic.Dictionary{System.String,System.String}
    content.vb: Protected Overridable Function GetTokenInfoRequestParameters(tokens As OAuthTokenResponse) As Dictionary(Of String, String)
  overload: Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthHandler.GetTokenInfoRequestParameters*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthHandler.GetTokenInfoRequestMessage(Microsoft.AspNetCore.Authentication.OAuth.OAuthTokenResponse)
  commentId: M:Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthHandler.GetTokenInfoRequestMessage(Microsoft.AspNetCore.Authentication.OAuth.OAuthTokenResponse)
  id: GetTokenInfoRequestMessage(Microsoft.AspNetCore.Authentication.OAuth.OAuthTokenResponse)
  parent: Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthHandler
  langs:
  - csharp
  - vb
  name: GetTokenInfoRequestMessage(OAuthTokenResponse)
  nameWithType: CloudFoundryOAuthHandler.GetTokenInfoRequestMessage(OAuthTokenResponse)
  fullName: Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthHandler.GetTokenInfoRequestMessage(Microsoft.AspNetCore.Authentication.OAuth.OAuthTokenResponse)
  type: Method
  source:
    remote:
      path: src/Security/src/Authentication.CloudFoundryCore/CloudFoundryOAuthHandler.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: GetTokenInfoRequestMessage
    path: ../Steeltoe/src/Security/src/Authentication.CloudFoundryCore/CloudFoundryOAuthHandler.cs
    startLine: 46
  assemblies:
  - Steeltoe.Security.Authentication.CloudFoundryCore
  namespace: Steeltoe.Security.Authentication.CloudFoundry
  syntax:
    content: protected virtual HttpRequestMessage GetTokenInfoRequestMessage(OAuthTokenResponse tokens)
    parameters:
    - id: tokens
      type: Microsoft.AspNetCore.Authentication.OAuth.OAuthTokenResponse
    return:
      type: System.Net.Http.HttpRequestMessage
    content.vb: Protected Overridable Function GetTokenInfoRequestMessage(tokens As OAuthTokenResponse) As HttpRequestMessage
  overload: Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthHandler.GetTokenInfoRequestMessage*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthHandler.GetEncoded(System.String,System.String)
  commentId: M:Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthHandler.GetEncoded(System.String,System.String)
  id: GetEncoded(System.String,System.String)
  parent: Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthHandler
  langs:
  - csharp
  - vb
  name: GetEncoded(String, String)
  nameWithType: CloudFoundryOAuthHandler.GetEncoded(String, String)
  fullName: Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthHandler.GetEncoded(System.String, System.String)
  type: Method
  source:
    remote:
      path: src/Security/src/Authentication.CloudFoundryCore/CloudFoundryOAuthHandler.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: GetEncoded
    path: ../Steeltoe/src/Security/src/Authentication.CloudFoundryCore/CloudFoundryOAuthHandler.cs
    startLine: 60
  assemblies:
  - Steeltoe.Security.Authentication.CloudFoundryCore
  namespace: Steeltoe.Security.Authentication.CloudFoundry
  syntax:
    content: protected string GetEncoded(string user, string password)
    parameters:
    - id: user
      type: System.String
    - id: password
      type: System.String
    return:
      type: System.String
    content.vb: Protected Function GetEncoded(user As String, password As String) As String
  overload: Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthHandler.GetEncoded*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthHandler.GetHttpClient
  commentId: M:Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthHandler.GetHttpClient
  id: GetHttpClient
  parent: Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthHandler
  langs:
  - csharp
  - vb
  name: GetHttpClient()
  nameWithType: CloudFoundryOAuthHandler.GetHttpClient()
  fullName: Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthHandler.GetHttpClient()
  type: Method
  source:
    remote:
      path: src/Security/src/Authentication.CloudFoundryCore/CloudFoundryOAuthHandler.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: GetHttpClient
    path: ../Steeltoe/src/Security/src/Authentication.CloudFoundryCore/CloudFoundryOAuthHandler.cs
    startLine: 75
  assemblies:
  - Steeltoe.Security.Authentication.CloudFoundryCore
  namespace: Steeltoe.Security.Authentication.CloudFoundry
  syntax:
    content: protected virtual HttpClient GetHttpClient()
    return:
      type: System.Net.Http.HttpClient
    content.vb: Protected Overridable Function GetHttpClient As HttpClient
  overload: Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthHandler.GetHttpClient*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthHandler.ExchangeCodeAsync(Microsoft.AspNetCore.Authentication.OAuth.OAuthCodeExchangeContext)
  commentId: M:Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthHandler.ExchangeCodeAsync(Microsoft.AspNetCore.Authentication.OAuth.OAuthCodeExchangeContext)
  id: ExchangeCodeAsync(Microsoft.AspNetCore.Authentication.OAuth.OAuthCodeExchangeContext)
  parent: Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthHandler
  langs:
  - csharp
  - vb
  name: ExchangeCodeAsync(OAuthCodeExchangeContext)
  nameWithType: CloudFoundryOAuthHandler.ExchangeCodeAsync(OAuthCodeExchangeContext)
  fullName: Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthHandler.ExchangeCodeAsync(Microsoft.AspNetCore.Authentication.OAuth.OAuthCodeExchangeContext)
  type: Method
  source:
    remote:
      path: src/Security/src/Authentication.CloudFoundryCore/CloudFoundryOAuthHandler.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: ExchangeCodeAsync
    path: ../Steeltoe/src/Security/src/Authentication.CloudFoundryCore/CloudFoundryOAuthHandler.cs
    startLine: 80
  assemblies:
  - Steeltoe.Security.Authentication.CloudFoundryCore
  namespace: Steeltoe.Security.Authentication.CloudFoundry
  syntax:
    content: protected override Task<OAuthTokenResponse> ExchangeCodeAsync(OAuthCodeExchangeContext context)
    parameters:
    - id: context
      type: Microsoft.AspNetCore.Authentication.OAuth.OAuthCodeExchangeContext
    return:
      type: System.Threading.Tasks.Task{Microsoft.AspNetCore.Authentication.OAuth.OAuthTokenResponse}
    content.vb: Protected Overrides Function ExchangeCodeAsync(context As OAuthCodeExchangeContext) As Task(Of OAuthTokenResponse)
  overridden: Microsoft.AspNetCore.Authentication.OAuth.OAuthHandler{Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions}.ExchangeCodeAsync(Microsoft.AspNetCore.Authentication.OAuth.OAuthCodeExchangeContext)
  overload: Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthHandler.ExchangeCodeAsync*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthHandler.CreateTicketAsync(System.Security.Claims.ClaimsIdentity,Microsoft.AspNetCore.Authentication.AuthenticationProperties,Microsoft.AspNetCore.Authentication.OAuth.OAuthTokenResponse)
  commentId: M:Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthHandler.CreateTicketAsync(System.Security.Claims.ClaimsIdentity,Microsoft.AspNetCore.Authentication.AuthenticationProperties,Microsoft.AspNetCore.Authentication.OAuth.OAuthTokenResponse)
  id: CreateTicketAsync(System.Security.Claims.ClaimsIdentity,Microsoft.AspNetCore.Authentication.AuthenticationProperties,Microsoft.AspNetCore.Authentication.OAuth.OAuthTokenResponse)
  parent: Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthHandler
  langs:
  - csharp
  - vb
  name: CreateTicketAsync(ClaimsIdentity, AuthenticationProperties, OAuthTokenResponse)
  nameWithType: CloudFoundryOAuthHandler.CreateTicketAsync(ClaimsIdentity, AuthenticationProperties, OAuthTokenResponse)
  fullName: Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthHandler.CreateTicketAsync(System.Security.Claims.ClaimsIdentity, Microsoft.AspNetCore.Authentication.AuthenticationProperties, Microsoft.AspNetCore.Authentication.OAuth.OAuthTokenResponse)
  type: Method
  source:
    remote:
      path: src/Security/src/Authentication.CloudFoundryCore/CloudFoundryOAuthHandler.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: CreateTicketAsync
    path: ../Steeltoe/src/Security/src/Authentication.CloudFoundryCore/CloudFoundryOAuthHandler.cs
    startLine: 107
  assemblies:
  - Steeltoe.Security.Authentication.CloudFoundryCore
  namespace: Steeltoe.Security.Authentication.CloudFoundry
  syntax:
    content: protected override Task<AuthenticationTicket> CreateTicketAsync(ClaimsIdentity identity, AuthenticationProperties properties, OAuthTokenResponse tokens)
    parameters:
    - id: identity
      type: System.Security.Claims.ClaimsIdentity
    - id: properties
      type: Microsoft.AspNetCore.Authentication.AuthenticationProperties
    - id: tokens
      type: Microsoft.AspNetCore.Authentication.OAuth.OAuthTokenResponse
    return:
      type: System.Threading.Tasks.Task{Microsoft.AspNetCore.Authentication.AuthenticationTicket}
    content.vb: Protected Overrides Function CreateTicketAsync(identity As ClaimsIdentity, properties As AuthenticationProperties, tokens As OAuthTokenResponse) As Task(Of AuthenticationTicket)
  overridden: Microsoft.AspNetCore.Authentication.OAuth.OAuthHandler{Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions}.CreateTicketAsync(System.Security.Claims.ClaimsIdentity,Microsoft.AspNetCore.Authentication.AuthenticationProperties,Microsoft.AspNetCore.Authentication.OAuth.OAuthTokenResponse)
  overload: Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthHandler.CreateTicketAsync*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthHandler.BuildChallengeUrl(Microsoft.AspNetCore.Authentication.AuthenticationProperties,System.String)
  commentId: M:Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthHandler.BuildChallengeUrl(Microsoft.AspNetCore.Authentication.AuthenticationProperties,System.String)
  id: BuildChallengeUrl(Microsoft.AspNetCore.Authentication.AuthenticationProperties,System.String)
  parent: Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthHandler
  langs:
  - csharp
  - vb
  name: BuildChallengeUrl(AuthenticationProperties, String)
  nameWithType: CloudFoundryOAuthHandler.BuildChallengeUrl(AuthenticationProperties, String)
  fullName: Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthHandler.BuildChallengeUrl(Microsoft.AspNetCore.Authentication.AuthenticationProperties, System.String)
  type: Method
  source:
    remote:
      path: src/Security/src/Authentication.CloudFoundryCore/CloudFoundryOAuthHandler.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: BuildChallengeUrl
    path: ../Steeltoe/src/Security/src/Authentication.CloudFoundryCore/CloudFoundryOAuthHandler.cs
    startLine: 154
  assemblies:
  - Steeltoe.Security.Authentication.CloudFoundryCore
  namespace: Steeltoe.Security.Authentication.CloudFoundry
  syntax:
    content: protected override string BuildChallengeUrl(AuthenticationProperties properties, string redirectUri)
    parameters:
    - id: properties
      type: Microsoft.AspNetCore.Authentication.AuthenticationProperties
    - id: redirectUri
      type: System.String
    return:
      type: System.String
    content.vb: Protected Overrides Function BuildChallengeUrl(properties As AuthenticationProperties, redirectUri As String) As String
  overridden: Microsoft.AspNetCore.Authentication.OAuth.OAuthHandler{Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions}.BuildChallengeUrl(Microsoft.AspNetCore.Authentication.AuthenticationProperties,System.String)
  overload: Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthHandler.BuildChallengeUrl*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
references:
- uid: Steeltoe.Security.Authentication.CloudFoundry
  commentId: N:Steeltoe.Security.Authentication.CloudFoundry
  name: Steeltoe.Security.Authentication.CloudFoundry
  nameWithType: Steeltoe.Security.Authentication.CloudFoundry
  fullName: Steeltoe.Security.Authentication.CloudFoundry
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.AspNetCore.Authentication.AuthenticationHandler{Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions}
  commentId: T:Microsoft.AspNetCore.Authentication.AuthenticationHandler{Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions}
  parent: Microsoft.AspNetCore.Authentication
  definition: Microsoft.AspNetCore.Authentication.AuthenticationHandler`1
  name: AuthenticationHandler<CloudFoundryOAuthOptions>
  nameWithType: AuthenticationHandler<CloudFoundryOAuthOptions>
  fullName: Microsoft.AspNetCore.Authentication.AuthenticationHandler<Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions>
  nameWithType.vb: AuthenticationHandler(Of CloudFoundryOAuthOptions)
  fullName.vb: Microsoft.AspNetCore.Authentication.AuthenticationHandler(Of Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions)
  name.vb: AuthenticationHandler(Of CloudFoundryOAuthOptions)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Authentication.AuthenticationHandler`1
    name: AuthenticationHandler
    nameWithType: AuthenticationHandler
    fullName: Microsoft.AspNetCore.Authentication.AuthenticationHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions
    name: CloudFoundryOAuthOptions
    nameWithType: CloudFoundryOAuthOptions
    fullName: Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.AspNetCore.Authentication.AuthenticationHandler`1
    name: AuthenticationHandler
    nameWithType: AuthenticationHandler
    fullName: Microsoft.AspNetCore.Authentication.AuthenticationHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions
    name: CloudFoundryOAuthOptions
    nameWithType: CloudFoundryOAuthOptions
    fullName: Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Authentication.RemoteAuthenticationHandler{Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions}
  commentId: T:Microsoft.AspNetCore.Authentication.RemoteAuthenticationHandler{Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions}
  parent: Microsoft.AspNetCore.Authentication
  definition: Microsoft.AspNetCore.Authentication.RemoteAuthenticationHandler`1
  name: RemoteAuthenticationHandler<CloudFoundryOAuthOptions>
  nameWithType: RemoteAuthenticationHandler<CloudFoundryOAuthOptions>
  fullName: Microsoft.AspNetCore.Authentication.RemoteAuthenticationHandler<Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions>
  nameWithType.vb: RemoteAuthenticationHandler(Of CloudFoundryOAuthOptions)
  fullName.vb: Microsoft.AspNetCore.Authentication.RemoteAuthenticationHandler(Of Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions)
  name.vb: RemoteAuthenticationHandler(Of CloudFoundryOAuthOptions)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Authentication.RemoteAuthenticationHandler`1
    name: RemoteAuthenticationHandler
    nameWithType: RemoteAuthenticationHandler
    fullName: Microsoft.AspNetCore.Authentication.RemoteAuthenticationHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions
    name: CloudFoundryOAuthOptions
    nameWithType: CloudFoundryOAuthOptions
    fullName: Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.AspNetCore.Authentication.RemoteAuthenticationHandler`1
    name: RemoteAuthenticationHandler
    nameWithType: RemoteAuthenticationHandler
    fullName: Microsoft.AspNetCore.Authentication.RemoteAuthenticationHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions
    name: CloudFoundryOAuthOptions
    nameWithType: CloudFoundryOAuthOptions
    fullName: Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Authentication.OAuth.OAuthHandler{Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions}
  commentId: T:Microsoft.AspNetCore.Authentication.OAuth.OAuthHandler{Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions}
  parent: Microsoft.AspNetCore.Authentication.OAuth
  definition: Microsoft.AspNetCore.Authentication.OAuth.OAuthHandler`1
  name: OAuthHandler<CloudFoundryOAuthOptions>
  nameWithType: OAuthHandler<CloudFoundryOAuthOptions>
  fullName: Microsoft.AspNetCore.Authentication.OAuth.OAuthHandler<Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions>
  nameWithType.vb: OAuthHandler(Of CloudFoundryOAuthOptions)
  fullName.vb: Microsoft.AspNetCore.Authentication.OAuth.OAuthHandler(Of Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions)
  name.vb: OAuthHandler(Of CloudFoundryOAuthOptions)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Authentication.OAuth.OAuthHandler`1
    name: OAuthHandler
    nameWithType: OAuthHandler
    fullName: Microsoft.AspNetCore.Authentication.OAuth.OAuthHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions
    name: CloudFoundryOAuthOptions
    nameWithType: CloudFoundryOAuthOptions
    fullName: Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.AspNetCore.Authentication.OAuth.OAuthHandler`1
    name: OAuthHandler
    nameWithType: OAuthHandler
    fullName: Microsoft.AspNetCore.Authentication.OAuth.OAuthHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions
    name: CloudFoundryOAuthOptions
    nameWithType: CloudFoundryOAuthOptions
    fullName: Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Authentication.IAuthenticationRequestHandler
  commentId: T:Microsoft.AspNetCore.Authentication.IAuthenticationRequestHandler
  parent: Microsoft.AspNetCore.Authentication
  isExternal: true
  name: IAuthenticationRequestHandler
  nameWithType: IAuthenticationRequestHandler
  fullName: Microsoft.AspNetCore.Authentication.IAuthenticationRequestHandler
- uid: Microsoft.AspNetCore.Authentication.IAuthenticationHandler
  commentId: T:Microsoft.AspNetCore.Authentication.IAuthenticationHandler
  parent: Microsoft.AspNetCore.Authentication
  isExternal: true
  name: IAuthenticationHandler
  nameWithType: IAuthenticationHandler
  fullName: Microsoft.AspNetCore.Authentication.IAuthenticationHandler
- uid: Microsoft.AspNetCore.Authentication.OAuth.OAuthHandler{Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions}.CreateEventsAsync
  commentId: M:Microsoft.AspNetCore.Authentication.OAuth.OAuthHandler{Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions}.CreateEventsAsync
  parent: Microsoft.AspNetCore.Authentication.OAuth.OAuthHandler{Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions}
  definition: Microsoft.AspNetCore.Authentication.OAuth.OAuthHandler`1.CreateEventsAsync
  name: CreateEventsAsync()
  nameWithType: OAuthHandler<CloudFoundryOAuthOptions>.CreateEventsAsync()
  fullName: Microsoft.AspNetCore.Authentication.OAuth.OAuthHandler<Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions>.CreateEventsAsync()
  nameWithType.vb: OAuthHandler(Of CloudFoundryOAuthOptions).CreateEventsAsync()
  fullName.vb: Microsoft.AspNetCore.Authentication.OAuth.OAuthHandler(Of Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions).CreateEventsAsync()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Authentication.OAuth.OAuthHandler`1.CreateEventsAsync
    name: CreateEventsAsync
    nameWithType: OAuthHandler<CloudFoundryOAuthOptions>.CreateEventsAsync
    fullName: Microsoft.AspNetCore.Authentication.OAuth.OAuthHandler<Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions>.CreateEventsAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Authentication.OAuth.OAuthHandler`1.CreateEventsAsync
    name: CreateEventsAsync
    nameWithType: OAuthHandler(Of CloudFoundryOAuthOptions).CreateEventsAsync
    fullName: Microsoft.AspNetCore.Authentication.OAuth.OAuthHandler(Of Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions).CreateEventsAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Authentication.OAuth.OAuthHandler{Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions}.HandleRemoteAuthenticateAsync
  commentId: M:Microsoft.AspNetCore.Authentication.OAuth.OAuthHandler{Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions}.HandleRemoteAuthenticateAsync
  parent: Microsoft.AspNetCore.Authentication.OAuth.OAuthHandler{Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions}
  definition: Microsoft.AspNetCore.Authentication.OAuth.OAuthHandler`1.HandleRemoteAuthenticateAsync
  name: HandleRemoteAuthenticateAsync()
  nameWithType: OAuthHandler<CloudFoundryOAuthOptions>.HandleRemoteAuthenticateAsync()
  fullName: Microsoft.AspNetCore.Authentication.OAuth.OAuthHandler<Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions>.HandleRemoteAuthenticateAsync()
  nameWithType.vb: OAuthHandler(Of CloudFoundryOAuthOptions).HandleRemoteAuthenticateAsync()
  fullName.vb: Microsoft.AspNetCore.Authentication.OAuth.OAuthHandler(Of Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions).HandleRemoteAuthenticateAsync()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Authentication.OAuth.OAuthHandler`1.HandleRemoteAuthenticateAsync
    name: HandleRemoteAuthenticateAsync
    nameWithType: OAuthHandler<CloudFoundryOAuthOptions>.HandleRemoteAuthenticateAsync
    fullName: Microsoft.AspNetCore.Authentication.OAuth.OAuthHandler<Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions>.HandleRemoteAuthenticateAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Authentication.OAuth.OAuthHandler`1.HandleRemoteAuthenticateAsync
    name: HandleRemoteAuthenticateAsync
    nameWithType: OAuthHandler(Of CloudFoundryOAuthOptions).HandleRemoteAuthenticateAsync
    fullName: Microsoft.AspNetCore.Authentication.OAuth.OAuthHandler(Of Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions).HandleRemoteAuthenticateAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Authentication.OAuth.OAuthHandler{Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions}.HandleChallengeAsync(Microsoft.AspNetCore.Authentication.AuthenticationProperties)
  commentId: M:Microsoft.AspNetCore.Authentication.OAuth.OAuthHandler{Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions}.HandleChallengeAsync(Microsoft.AspNetCore.Authentication.AuthenticationProperties)
  parent: Microsoft.AspNetCore.Authentication.OAuth.OAuthHandler{Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions}
  definition: Microsoft.AspNetCore.Authentication.OAuth.OAuthHandler`1.HandleChallengeAsync(Microsoft.AspNetCore.Authentication.AuthenticationProperties)
  name: HandleChallengeAsync(AuthenticationProperties)
  nameWithType: OAuthHandler<CloudFoundryOAuthOptions>.HandleChallengeAsync(AuthenticationProperties)
  fullName: Microsoft.AspNetCore.Authentication.OAuth.OAuthHandler<Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions>.HandleChallengeAsync(Microsoft.AspNetCore.Authentication.AuthenticationProperties)
  nameWithType.vb: OAuthHandler(Of CloudFoundryOAuthOptions).HandleChallengeAsync(AuthenticationProperties)
  fullName.vb: Microsoft.AspNetCore.Authentication.OAuth.OAuthHandler(Of Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions).HandleChallengeAsync(Microsoft.AspNetCore.Authentication.AuthenticationProperties)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Authentication.OAuth.OAuthHandler`1.HandleChallengeAsync(Microsoft.AspNetCore.Authentication.AuthenticationProperties)
    name: HandleChallengeAsync
    nameWithType: OAuthHandler<CloudFoundryOAuthOptions>.HandleChallengeAsync
    fullName: Microsoft.AspNetCore.Authentication.OAuth.OAuthHandler<Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions>.HandleChallengeAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Authentication.AuthenticationProperties
    name: AuthenticationProperties
    nameWithType: AuthenticationProperties
    fullName: Microsoft.AspNetCore.Authentication.AuthenticationProperties
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Authentication.OAuth.OAuthHandler`1.HandleChallengeAsync(Microsoft.AspNetCore.Authentication.AuthenticationProperties)
    name: HandleChallengeAsync
    nameWithType: OAuthHandler(Of CloudFoundryOAuthOptions).HandleChallengeAsync
    fullName: Microsoft.AspNetCore.Authentication.OAuth.OAuthHandler(Of Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions).HandleChallengeAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Authentication.AuthenticationProperties
    name: AuthenticationProperties
    nameWithType: AuthenticationProperties
    fullName: Microsoft.AspNetCore.Authentication.AuthenticationProperties
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Authentication.OAuth.OAuthHandler{Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions}.FormatScope(System.Collections.Generic.IEnumerable{System.String})
  commentId: M:Microsoft.AspNetCore.Authentication.OAuth.OAuthHandler{Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions}.FormatScope(System.Collections.Generic.IEnumerable{System.String})
  parent: Microsoft.AspNetCore.Authentication.OAuth.OAuthHandler{Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions}
  definition: Microsoft.AspNetCore.Authentication.OAuth.OAuthHandler`1.FormatScope(System.Collections.Generic.IEnumerable{System.String})
  name: FormatScope(IEnumerable<String>)
  nameWithType: OAuthHandler<CloudFoundryOAuthOptions>.FormatScope(IEnumerable<String>)
  fullName: Microsoft.AspNetCore.Authentication.OAuth.OAuthHandler<Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions>.FormatScope(System.Collections.Generic.IEnumerable<System.String>)
  nameWithType.vb: OAuthHandler(Of CloudFoundryOAuthOptions).FormatScope(IEnumerable(Of String))
  fullName.vb: Microsoft.AspNetCore.Authentication.OAuth.OAuthHandler(Of Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions).FormatScope(System.Collections.Generic.IEnumerable(Of System.String))
  name.vb: FormatScope(IEnumerable(Of String))
  spec.csharp:
  - uid: Microsoft.AspNetCore.Authentication.OAuth.OAuthHandler`1.FormatScope(System.Collections.Generic.IEnumerable{System.String})
    name: FormatScope
    nameWithType: OAuthHandler<CloudFoundryOAuthOptions>.FormatScope
    fullName: Microsoft.AspNetCore.Authentication.OAuth.OAuthHandler<Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions>.FormatScope
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Authentication.OAuth.OAuthHandler`1.FormatScope(System.Collections.Generic.IEnumerable{System.String})
    name: FormatScope
    nameWithType: OAuthHandler(Of CloudFoundryOAuthOptions).FormatScope
    fullName: Microsoft.AspNetCore.Authentication.OAuth.OAuthHandler(Of Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions).FormatScope
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Authentication.OAuth.OAuthHandler{Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions}.FormatScope
  commentId: M:Microsoft.AspNetCore.Authentication.OAuth.OAuthHandler{Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions}.FormatScope
  parent: Microsoft.AspNetCore.Authentication.OAuth.OAuthHandler{Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions}
  definition: Microsoft.AspNetCore.Authentication.OAuth.OAuthHandler`1.FormatScope
  name: FormatScope()
  nameWithType: OAuthHandler<CloudFoundryOAuthOptions>.FormatScope()
  fullName: Microsoft.AspNetCore.Authentication.OAuth.OAuthHandler<Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions>.FormatScope()
  nameWithType.vb: OAuthHandler(Of CloudFoundryOAuthOptions).FormatScope()
  fullName.vb: Microsoft.AspNetCore.Authentication.OAuth.OAuthHandler(Of Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions).FormatScope()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Authentication.OAuth.OAuthHandler`1.FormatScope
    name: FormatScope
    nameWithType: OAuthHandler<CloudFoundryOAuthOptions>.FormatScope
    fullName: Microsoft.AspNetCore.Authentication.OAuth.OAuthHandler<Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions>.FormatScope
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Authentication.OAuth.OAuthHandler`1.FormatScope
    name: FormatScope
    nameWithType: OAuthHandler(Of CloudFoundryOAuthOptions).FormatScope
    fullName: Microsoft.AspNetCore.Authentication.OAuth.OAuthHandler(Of Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions).FormatScope
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Authentication.OAuth.OAuthHandler{Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions}.Backchannel
  commentId: P:Microsoft.AspNetCore.Authentication.OAuth.OAuthHandler{Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions}.Backchannel
  parent: Microsoft.AspNetCore.Authentication.OAuth.OAuthHandler{Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions}
  definition: Microsoft.AspNetCore.Authentication.OAuth.OAuthHandler`1.Backchannel
  name: Backchannel
  nameWithType: OAuthHandler<CloudFoundryOAuthOptions>.Backchannel
  fullName: Microsoft.AspNetCore.Authentication.OAuth.OAuthHandler<Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions>.Backchannel
  nameWithType.vb: OAuthHandler(Of CloudFoundryOAuthOptions).Backchannel
  fullName.vb: Microsoft.AspNetCore.Authentication.OAuth.OAuthHandler(Of Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions).Backchannel
- uid: Microsoft.AspNetCore.Authentication.OAuth.OAuthHandler{Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions}.Events
  commentId: P:Microsoft.AspNetCore.Authentication.OAuth.OAuthHandler{Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions}.Events
  parent: Microsoft.AspNetCore.Authentication.OAuth.OAuthHandler{Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions}
  definition: Microsoft.AspNetCore.Authentication.OAuth.OAuthHandler`1.Events
  name: Events
  nameWithType: OAuthHandler<CloudFoundryOAuthOptions>.Events
  fullName: Microsoft.AspNetCore.Authentication.OAuth.OAuthHandler<Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions>.Events
  nameWithType.vb: OAuthHandler(Of CloudFoundryOAuthOptions).Events
  fullName.vb: Microsoft.AspNetCore.Authentication.OAuth.OAuthHandler(Of Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions).Events
- uid: Microsoft.AspNetCore.Authentication.RemoteAuthenticationHandler{Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions}.ShouldHandleRequestAsync
  commentId: M:Microsoft.AspNetCore.Authentication.RemoteAuthenticationHandler{Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions}.ShouldHandleRequestAsync
  parent: Microsoft.AspNetCore.Authentication.RemoteAuthenticationHandler{Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions}
  definition: Microsoft.AspNetCore.Authentication.RemoteAuthenticationHandler`1.ShouldHandleRequestAsync
  name: ShouldHandleRequestAsync()
  nameWithType: RemoteAuthenticationHandler<CloudFoundryOAuthOptions>.ShouldHandleRequestAsync()
  fullName: Microsoft.AspNetCore.Authentication.RemoteAuthenticationHandler<Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions>.ShouldHandleRequestAsync()
  nameWithType.vb: RemoteAuthenticationHandler(Of CloudFoundryOAuthOptions).ShouldHandleRequestAsync()
  fullName.vb: Microsoft.AspNetCore.Authentication.RemoteAuthenticationHandler(Of Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions).ShouldHandleRequestAsync()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Authentication.RemoteAuthenticationHandler`1.ShouldHandleRequestAsync
    name: ShouldHandleRequestAsync
    nameWithType: RemoteAuthenticationHandler<CloudFoundryOAuthOptions>.ShouldHandleRequestAsync
    fullName: Microsoft.AspNetCore.Authentication.RemoteAuthenticationHandler<Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions>.ShouldHandleRequestAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Authentication.RemoteAuthenticationHandler`1.ShouldHandleRequestAsync
    name: ShouldHandleRequestAsync
    nameWithType: RemoteAuthenticationHandler(Of CloudFoundryOAuthOptions).ShouldHandleRequestAsync
    fullName: Microsoft.AspNetCore.Authentication.RemoteAuthenticationHandler(Of Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions).ShouldHandleRequestAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Authentication.RemoteAuthenticationHandler{Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions}.HandleRequestAsync
  commentId: M:Microsoft.AspNetCore.Authentication.RemoteAuthenticationHandler{Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions}.HandleRequestAsync
  parent: Microsoft.AspNetCore.Authentication.RemoteAuthenticationHandler{Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions}
  definition: Microsoft.AspNetCore.Authentication.RemoteAuthenticationHandler`1.HandleRequestAsync
  name: HandleRequestAsync()
  nameWithType: RemoteAuthenticationHandler<CloudFoundryOAuthOptions>.HandleRequestAsync()
  fullName: Microsoft.AspNetCore.Authentication.RemoteAuthenticationHandler<Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions>.HandleRequestAsync()
  nameWithType.vb: RemoteAuthenticationHandler(Of CloudFoundryOAuthOptions).HandleRequestAsync()
  fullName.vb: Microsoft.AspNetCore.Authentication.RemoteAuthenticationHandler(Of Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions).HandleRequestAsync()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Authentication.RemoteAuthenticationHandler`1.HandleRequestAsync
    name: HandleRequestAsync
    nameWithType: RemoteAuthenticationHandler<CloudFoundryOAuthOptions>.HandleRequestAsync
    fullName: Microsoft.AspNetCore.Authentication.RemoteAuthenticationHandler<Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions>.HandleRequestAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Authentication.RemoteAuthenticationHandler`1.HandleRequestAsync
    name: HandleRequestAsync
    nameWithType: RemoteAuthenticationHandler(Of CloudFoundryOAuthOptions).HandleRequestAsync
    fullName: Microsoft.AspNetCore.Authentication.RemoteAuthenticationHandler(Of Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions).HandleRequestAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Authentication.RemoteAuthenticationHandler{Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions}.HandleAuthenticateAsync
  commentId: M:Microsoft.AspNetCore.Authentication.RemoteAuthenticationHandler{Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions}.HandleAuthenticateAsync
  parent: Microsoft.AspNetCore.Authentication.RemoteAuthenticationHandler{Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions}
  definition: Microsoft.AspNetCore.Authentication.RemoteAuthenticationHandler`1.HandleAuthenticateAsync
  name: HandleAuthenticateAsync()
  nameWithType: RemoteAuthenticationHandler<CloudFoundryOAuthOptions>.HandleAuthenticateAsync()
  fullName: Microsoft.AspNetCore.Authentication.RemoteAuthenticationHandler<Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions>.HandleAuthenticateAsync()
  nameWithType.vb: RemoteAuthenticationHandler(Of CloudFoundryOAuthOptions).HandleAuthenticateAsync()
  fullName.vb: Microsoft.AspNetCore.Authentication.RemoteAuthenticationHandler(Of Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions).HandleAuthenticateAsync()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Authentication.RemoteAuthenticationHandler`1.HandleAuthenticateAsync
    name: HandleAuthenticateAsync
    nameWithType: RemoteAuthenticationHandler<CloudFoundryOAuthOptions>.HandleAuthenticateAsync
    fullName: Microsoft.AspNetCore.Authentication.RemoteAuthenticationHandler<Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions>.HandleAuthenticateAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Authentication.RemoteAuthenticationHandler`1.HandleAuthenticateAsync
    name: HandleAuthenticateAsync
    nameWithType: RemoteAuthenticationHandler(Of CloudFoundryOAuthOptions).HandleAuthenticateAsync
    fullName: Microsoft.AspNetCore.Authentication.RemoteAuthenticationHandler(Of Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions).HandleAuthenticateAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Authentication.RemoteAuthenticationHandler{Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions}.HandleForbiddenAsync(Microsoft.AspNetCore.Authentication.AuthenticationProperties)
  commentId: M:Microsoft.AspNetCore.Authentication.RemoteAuthenticationHandler{Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions}.HandleForbiddenAsync(Microsoft.AspNetCore.Authentication.AuthenticationProperties)
  parent: Microsoft.AspNetCore.Authentication.RemoteAuthenticationHandler{Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions}
  definition: Microsoft.AspNetCore.Authentication.RemoteAuthenticationHandler`1.HandleForbiddenAsync(Microsoft.AspNetCore.Authentication.AuthenticationProperties)
  name: HandleForbiddenAsync(AuthenticationProperties)
  nameWithType: RemoteAuthenticationHandler<CloudFoundryOAuthOptions>.HandleForbiddenAsync(AuthenticationProperties)
  fullName: Microsoft.AspNetCore.Authentication.RemoteAuthenticationHandler<Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions>.HandleForbiddenAsync(Microsoft.AspNetCore.Authentication.AuthenticationProperties)
  nameWithType.vb: RemoteAuthenticationHandler(Of CloudFoundryOAuthOptions).HandleForbiddenAsync(AuthenticationProperties)
  fullName.vb: Microsoft.AspNetCore.Authentication.RemoteAuthenticationHandler(Of Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions).HandleForbiddenAsync(Microsoft.AspNetCore.Authentication.AuthenticationProperties)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Authentication.RemoteAuthenticationHandler`1.HandleForbiddenAsync(Microsoft.AspNetCore.Authentication.AuthenticationProperties)
    name: HandleForbiddenAsync
    nameWithType: RemoteAuthenticationHandler<CloudFoundryOAuthOptions>.HandleForbiddenAsync
    fullName: Microsoft.AspNetCore.Authentication.RemoteAuthenticationHandler<Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions>.HandleForbiddenAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Authentication.AuthenticationProperties
    name: AuthenticationProperties
    nameWithType: AuthenticationProperties
    fullName: Microsoft.AspNetCore.Authentication.AuthenticationProperties
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Authentication.RemoteAuthenticationHandler`1.HandleForbiddenAsync(Microsoft.AspNetCore.Authentication.AuthenticationProperties)
    name: HandleForbiddenAsync
    nameWithType: RemoteAuthenticationHandler(Of CloudFoundryOAuthOptions).HandleForbiddenAsync
    fullName: Microsoft.AspNetCore.Authentication.RemoteAuthenticationHandler(Of Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions).HandleForbiddenAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Authentication.AuthenticationProperties
    name: AuthenticationProperties
    nameWithType: AuthenticationProperties
    fullName: Microsoft.AspNetCore.Authentication.AuthenticationProperties
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Authentication.RemoteAuthenticationHandler{Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions}.GenerateCorrelationId(Microsoft.AspNetCore.Authentication.AuthenticationProperties)
  commentId: M:Microsoft.AspNetCore.Authentication.RemoteAuthenticationHandler{Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions}.GenerateCorrelationId(Microsoft.AspNetCore.Authentication.AuthenticationProperties)
  parent: Microsoft.AspNetCore.Authentication.RemoteAuthenticationHandler{Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions}
  definition: Microsoft.AspNetCore.Authentication.RemoteAuthenticationHandler`1.GenerateCorrelationId(Microsoft.AspNetCore.Authentication.AuthenticationProperties)
  name: GenerateCorrelationId(AuthenticationProperties)
  nameWithType: RemoteAuthenticationHandler<CloudFoundryOAuthOptions>.GenerateCorrelationId(AuthenticationProperties)
  fullName: Microsoft.AspNetCore.Authentication.RemoteAuthenticationHandler<Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions>.GenerateCorrelationId(Microsoft.AspNetCore.Authentication.AuthenticationProperties)
  nameWithType.vb: RemoteAuthenticationHandler(Of CloudFoundryOAuthOptions).GenerateCorrelationId(AuthenticationProperties)
  fullName.vb: Microsoft.AspNetCore.Authentication.RemoteAuthenticationHandler(Of Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions).GenerateCorrelationId(Microsoft.AspNetCore.Authentication.AuthenticationProperties)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Authentication.RemoteAuthenticationHandler`1.GenerateCorrelationId(Microsoft.AspNetCore.Authentication.AuthenticationProperties)
    name: GenerateCorrelationId
    nameWithType: RemoteAuthenticationHandler<CloudFoundryOAuthOptions>.GenerateCorrelationId
    fullName: Microsoft.AspNetCore.Authentication.RemoteAuthenticationHandler<Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions>.GenerateCorrelationId
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Authentication.AuthenticationProperties
    name: AuthenticationProperties
    nameWithType: AuthenticationProperties
    fullName: Microsoft.AspNetCore.Authentication.AuthenticationProperties
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Authentication.RemoteAuthenticationHandler`1.GenerateCorrelationId(Microsoft.AspNetCore.Authentication.AuthenticationProperties)
    name: GenerateCorrelationId
    nameWithType: RemoteAuthenticationHandler(Of CloudFoundryOAuthOptions).GenerateCorrelationId
    fullName: Microsoft.AspNetCore.Authentication.RemoteAuthenticationHandler(Of Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions).GenerateCorrelationId
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Authentication.AuthenticationProperties
    name: AuthenticationProperties
    nameWithType: AuthenticationProperties
    fullName: Microsoft.AspNetCore.Authentication.AuthenticationProperties
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Authentication.RemoteAuthenticationHandler{Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions}.ValidateCorrelationId(Microsoft.AspNetCore.Authentication.AuthenticationProperties)
  commentId: M:Microsoft.AspNetCore.Authentication.RemoteAuthenticationHandler{Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions}.ValidateCorrelationId(Microsoft.AspNetCore.Authentication.AuthenticationProperties)
  parent: Microsoft.AspNetCore.Authentication.RemoteAuthenticationHandler{Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions}
  definition: Microsoft.AspNetCore.Authentication.RemoteAuthenticationHandler`1.ValidateCorrelationId(Microsoft.AspNetCore.Authentication.AuthenticationProperties)
  name: ValidateCorrelationId(AuthenticationProperties)
  nameWithType: RemoteAuthenticationHandler<CloudFoundryOAuthOptions>.ValidateCorrelationId(AuthenticationProperties)
  fullName: Microsoft.AspNetCore.Authentication.RemoteAuthenticationHandler<Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions>.ValidateCorrelationId(Microsoft.AspNetCore.Authentication.AuthenticationProperties)
  nameWithType.vb: RemoteAuthenticationHandler(Of CloudFoundryOAuthOptions).ValidateCorrelationId(AuthenticationProperties)
  fullName.vb: Microsoft.AspNetCore.Authentication.RemoteAuthenticationHandler(Of Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions).ValidateCorrelationId(Microsoft.AspNetCore.Authentication.AuthenticationProperties)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Authentication.RemoteAuthenticationHandler`1.ValidateCorrelationId(Microsoft.AspNetCore.Authentication.AuthenticationProperties)
    name: ValidateCorrelationId
    nameWithType: RemoteAuthenticationHandler<CloudFoundryOAuthOptions>.ValidateCorrelationId
    fullName: Microsoft.AspNetCore.Authentication.RemoteAuthenticationHandler<Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions>.ValidateCorrelationId
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Authentication.AuthenticationProperties
    name: AuthenticationProperties
    nameWithType: AuthenticationProperties
    fullName: Microsoft.AspNetCore.Authentication.AuthenticationProperties
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Authentication.RemoteAuthenticationHandler`1.ValidateCorrelationId(Microsoft.AspNetCore.Authentication.AuthenticationProperties)
    name: ValidateCorrelationId
    nameWithType: RemoteAuthenticationHandler(Of CloudFoundryOAuthOptions).ValidateCorrelationId
    fullName: Microsoft.AspNetCore.Authentication.RemoteAuthenticationHandler(Of Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions).ValidateCorrelationId
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Authentication.AuthenticationProperties
    name: AuthenticationProperties
    nameWithType: AuthenticationProperties
    fullName: Microsoft.AspNetCore.Authentication.AuthenticationProperties
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Authentication.RemoteAuthenticationHandler{Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions}.HandleAccessDeniedErrorAsync(Microsoft.AspNetCore.Authentication.AuthenticationProperties)
  commentId: M:Microsoft.AspNetCore.Authentication.RemoteAuthenticationHandler{Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions}.HandleAccessDeniedErrorAsync(Microsoft.AspNetCore.Authentication.AuthenticationProperties)
  parent: Microsoft.AspNetCore.Authentication.RemoteAuthenticationHandler{Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions}
  definition: Microsoft.AspNetCore.Authentication.RemoteAuthenticationHandler`1.HandleAccessDeniedErrorAsync(Microsoft.AspNetCore.Authentication.AuthenticationProperties)
  name: HandleAccessDeniedErrorAsync(AuthenticationProperties)
  nameWithType: RemoteAuthenticationHandler<CloudFoundryOAuthOptions>.HandleAccessDeniedErrorAsync(AuthenticationProperties)
  fullName: Microsoft.AspNetCore.Authentication.RemoteAuthenticationHandler<Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions>.HandleAccessDeniedErrorAsync(Microsoft.AspNetCore.Authentication.AuthenticationProperties)
  nameWithType.vb: RemoteAuthenticationHandler(Of CloudFoundryOAuthOptions).HandleAccessDeniedErrorAsync(AuthenticationProperties)
  fullName.vb: Microsoft.AspNetCore.Authentication.RemoteAuthenticationHandler(Of Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions).HandleAccessDeniedErrorAsync(Microsoft.AspNetCore.Authentication.AuthenticationProperties)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Authentication.RemoteAuthenticationHandler`1.HandleAccessDeniedErrorAsync(Microsoft.AspNetCore.Authentication.AuthenticationProperties)
    name: HandleAccessDeniedErrorAsync
    nameWithType: RemoteAuthenticationHandler<CloudFoundryOAuthOptions>.HandleAccessDeniedErrorAsync
    fullName: Microsoft.AspNetCore.Authentication.RemoteAuthenticationHandler<Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions>.HandleAccessDeniedErrorAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Authentication.AuthenticationProperties
    name: AuthenticationProperties
    nameWithType: AuthenticationProperties
    fullName: Microsoft.AspNetCore.Authentication.AuthenticationProperties
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Authentication.RemoteAuthenticationHandler`1.HandleAccessDeniedErrorAsync(Microsoft.AspNetCore.Authentication.AuthenticationProperties)
    name: HandleAccessDeniedErrorAsync
    nameWithType: RemoteAuthenticationHandler(Of CloudFoundryOAuthOptions).HandleAccessDeniedErrorAsync
    fullName: Microsoft.AspNetCore.Authentication.RemoteAuthenticationHandler(Of Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions).HandleAccessDeniedErrorAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Authentication.AuthenticationProperties
    name: AuthenticationProperties
    nameWithType: AuthenticationProperties
    fullName: Microsoft.AspNetCore.Authentication.AuthenticationProperties
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Authentication.RemoteAuthenticationHandler{Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions}.SignInScheme
  commentId: P:Microsoft.AspNetCore.Authentication.RemoteAuthenticationHandler{Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions}.SignInScheme
  parent: Microsoft.AspNetCore.Authentication.RemoteAuthenticationHandler{Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions}
  definition: Microsoft.AspNetCore.Authentication.RemoteAuthenticationHandler`1.SignInScheme
  name: SignInScheme
  nameWithType: RemoteAuthenticationHandler<CloudFoundryOAuthOptions>.SignInScheme
  fullName: Microsoft.AspNetCore.Authentication.RemoteAuthenticationHandler<Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions>.SignInScheme
  nameWithType.vb: RemoteAuthenticationHandler(Of CloudFoundryOAuthOptions).SignInScheme
  fullName.vb: Microsoft.AspNetCore.Authentication.RemoteAuthenticationHandler(Of Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions).SignInScheme
- uid: Microsoft.AspNetCore.Authentication.AuthenticationHandler{Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions}.InitializeAsync(Microsoft.AspNetCore.Authentication.AuthenticationScheme,Microsoft.AspNetCore.Http.HttpContext)
  commentId: M:Microsoft.AspNetCore.Authentication.AuthenticationHandler{Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions}.InitializeAsync(Microsoft.AspNetCore.Authentication.AuthenticationScheme,Microsoft.AspNetCore.Http.HttpContext)
  parent: Microsoft.AspNetCore.Authentication.AuthenticationHandler{Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions}
  definition: Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.InitializeAsync(Microsoft.AspNetCore.Authentication.AuthenticationScheme,Microsoft.AspNetCore.Http.HttpContext)
  name: InitializeAsync(AuthenticationScheme, HttpContext)
  nameWithType: AuthenticationHandler<CloudFoundryOAuthOptions>.InitializeAsync(AuthenticationScheme, HttpContext)
  fullName: Microsoft.AspNetCore.Authentication.AuthenticationHandler<Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions>.InitializeAsync(Microsoft.AspNetCore.Authentication.AuthenticationScheme, Microsoft.AspNetCore.Http.HttpContext)
  nameWithType.vb: AuthenticationHandler(Of CloudFoundryOAuthOptions).InitializeAsync(AuthenticationScheme, HttpContext)
  fullName.vb: Microsoft.AspNetCore.Authentication.AuthenticationHandler(Of Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions).InitializeAsync(Microsoft.AspNetCore.Authentication.AuthenticationScheme, Microsoft.AspNetCore.Http.HttpContext)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.InitializeAsync(Microsoft.AspNetCore.Authentication.AuthenticationScheme,Microsoft.AspNetCore.Http.HttpContext)
    name: InitializeAsync
    nameWithType: AuthenticationHandler<CloudFoundryOAuthOptions>.InitializeAsync
    fullName: Microsoft.AspNetCore.Authentication.AuthenticationHandler<Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions>.InitializeAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Authentication.AuthenticationScheme
    name: AuthenticationScheme
    nameWithType: AuthenticationScheme
    fullName: Microsoft.AspNetCore.Authentication.AuthenticationScheme
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.AspNetCore.Http.HttpContext
    name: HttpContext
    nameWithType: HttpContext
    fullName: Microsoft.AspNetCore.Http.HttpContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.InitializeAsync(Microsoft.AspNetCore.Authentication.AuthenticationScheme,Microsoft.AspNetCore.Http.HttpContext)
    name: InitializeAsync
    nameWithType: AuthenticationHandler(Of CloudFoundryOAuthOptions).InitializeAsync
    fullName: Microsoft.AspNetCore.Authentication.AuthenticationHandler(Of Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions).InitializeAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Authentication.AuthenticationScheme
    name: AuthenticationScheme
    nameWithType: AuthenticationScheme
    fullName: Microsoft.AspNetCore.Authentication.AuthenticationScheme
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.AspNetCore.Http.HttpContext
    name: HttpContext
    nameWithType: HttpContext
    fullName: Microsoft.AspNetCore.Http.HttpContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Authentication.AuthenticationHandler{Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions}.InitializeEventsAsync
  commentId: M:Microsoft.AspNetCore.Authentication.AuthenticationHandler{Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions}.InitializeEventsAsync
  parent: Microsoft.AspNetCore.Authentication.AuthenticationHandler{Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions}
  definition: Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.InitializeEventsAsync
  name: InitializeEventsAsync()
  nameWithType: AuthenticationHandler<CloudFoundryOAuthOptions>.InitializeEventsAsync()
  fullName: Microsoft.AspNetCore.Authentication.AuthenticationHandler<Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions>.InitializeEventsAsync()
  nameWithType.vb: AuthenticationHandler(Of CloudFoundryOAuthOptions).InitializeEventsAsync()
  fullName.vb: Microsoft.AspNetCore.Authentication.AuthenticationHandler(Of Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions).InitializeEventsAsync()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.InitializeEventsAsync
    name: InitializeEventsAsync
    nameWithType: AuthenticationHandler<CloudFoundryOAuthOptions>.InitializeEventsAsync
    fullName: Microsoft.AspNetCore.Authentication.AuthenticationHandler<Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions>.InitializeEventsAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.InitializeEventsAsync
    name: InitializeEventsAsync
    nameWithType: AuthenticationHandler(Of CloudFoundryOAuthOptions).InitializeEventsAsync
    fullName: Microsoft.AspNetCore.Authentication.AuthenticationHandler(Of Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions).InitializeEventsAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Authentication.AuthenticationHandler{Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions}.InitializeHandlerAsync
  commentId: M:Microsoft.AspNetCore.Authentication.AuthenticationHandler{Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions}.InitializeHandlerAsync
  parent: Microsoft.AspNetCore.Authentication.AuthenticationHandler{Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions}
  definition: Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.InitializeHandlerAsync
  name: InitializeHandlerAsync()
  nameWithType: AuthenticationHandler<CloudFoundryOAuthOptions>.InitializeHandlerAsync()
  fullName: Microsoft.AspNetCore.Authentication.AuthenticationHandler<Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions>.InitializeHandlerAsync()
  nameWithType.vb: AuthenticationHandler(Of CloudFoundryOAuthOptions).InitializeHandlerAsync()
  fullName.vb: Microsoft.AspNetCore.Authentication.AuthenticationHandler(Of Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions).InitializeHandlerAsync()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.InitializeHandlerAsync
    name: InitializeHandlerAsync
    nameWithType: AuthenticationHandler<CloudFoundryOAuthOptions>.InitializeHandlerAsync
    fullName: Microsoft.AspNetCore.Authentication.AuthenticationHandler<Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions>.InitializeHandlerAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.InitializeHandlerAsync
    name: InitializeHandlerAsync
    nameWithType: AuthenticationHandler(Of CloudFoundryOAuthOptions).InitializeHandlerAsync
    fullName: Microsoft.AspNetCore.Authentication.AuthenticationHandler(Of Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions).InitializeHandlerAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Authentication.AuthenticationHandler{Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions}.BuildRedirectUri(System.String)
  commentId: M:Microsoft.AspNetCore.Authentication.AuthenticationHandler{Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions}.BuildRedirectUri(System.String)
  parent: Microsoft.AspNetCore.Authentication.AuthenticationHandler{Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions}
  definition: Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.BuildRedirectUri(System.String)
  name: BuildRedirectUri(String)
  nameWithType: AuthenticationHandler<CloudFoundryOAuthOptions>.BuildRedirectUri(String)
  fullName: Microsoft.AspNetCore.Authentication.AuthenticationHandler<Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions>.BuildRedirectUri(System.String)
  nameWithType.vb: AuthenticationHandler(Of CloudFoundryOAuthOptions).BuildRedirectUri(String)
  fullName.vb: Microsoft.AspNetCore.Authentication.AuthenticationHandler(Of Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions).BuildRedirectUri(System.String)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.BuildRedirectUri(System.String)
    name: BuildRedirectUri
    nameWithType: AuthenticationHandler<CloudFoundryOAuthOptions>.BuildRedirectUri
    fullName: Microsoft.AspNetCore.Authentication.AuthenticationHandler<Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions>.BuildRedirectUri
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.BuildRedirectUri(System.String)
    name: BuildRedirectUri
    nameWithType: AuthenticationHandler(Of CloudFoundryOAuthOptions).BuildRedirectUri
    fullName: Microsoft.AspNetCore.Authentication.AuthenticationHandler(Of Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions).BuildRedirectUri
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Authentication.AuthenticationHandler{Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions}.ResolveTarget(System.String)
  commentId: M:Microsoft.AspNetCore.Authentication.AuthenticationHandler{Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions}.ResolveTarget(System.String)
  parent: Microsoft.AspNetCore.Authentication.AuthenticationHandler{Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions}
  definition: Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.ResolveTarget(System.String)
  name: ResolveTarget(String)
  nameWithType: AuthenticationHandler<CloudFoundryOAuthOptions>.ResolveTarget(String)
  fullName: Microsoft.AspNetCore.Authentication.AuthenticationHandler<Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions>.ResolveTarget(System.String)
  nameWithType.vb: AuthenticationHandler(Of CloudFoundryOAuthOptions).ResolveTarget(String)
  fullName.vb: Microsoft.AspNetCore.Authentication.AuthenticationHandler(Of Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions).ResolveTarget(System.String)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.ResolveTarget(System.String)
    name: ResolveTarget
    nameWithType: AuthenticationHandler<CloudFoundryOAuthOptions>.ResolveTarget
    fullName: Microsoft.AspNetCore.Authentication.AuthenticationHandler<Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions>.ResolveTarget
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.ResolveTarget(System.String)
    name: ResolveTarget
    nameWithType: AuthenticationHandler(Of CloudFoundryOAuthOptions).ResolveTarget
    fullName: Microsoft.AspNetCore.Authentication.AuthenticationHandler(Of Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions).ResolveTarget
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Authentication.AuthenticationHandler{Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions}.AuthenticateAsync
  commentId: M:Microsoft.AspNetCore.Authentication.AuthenticationHandler{Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions}.AuthenticateAsync
  parent: Microsoft.AspNetCore.Authentication.AuthenticationHandler{Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions}
  definition: Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.AuthenticateAsync
  name: AuthenticateAsync()
  nameWithType: AuthenticationHandler<CloudFoundryOAuthOptions>.AuthenticateAsync()
  fullName: Microsoft.AspNetCore.Authentication.AuthenticationHandler<Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions>.AuthenticateAsync()
  nameWithType.vb: AuthenticationHandler(Of CloudFoundryOAuthOptions).AuthenticateAsync()
  fullName.vb: Microsoft.AspNetCore.Authentication.AuthenticationHandler(Of Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions).AuthenticateAsync()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.AuthenticateAsync
    name: AuthenticateAsync
    nameWithType: AuthenticationHandler<CloudFoundryOAuthOptions>.AuthenticateAsync
    fullName: Microsoft.AspNetCore.Authentication.AuthenticationHandler<Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions>.AuthenticateAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.AuthenticateAsync
    name: AuthenticateAsync
    nameWithType: AuthenticationHandler(Of CloudFoundryOAuthOptions).AuthenticateAsync
    fullName: Microsoft.AspNetCore.Authentication.AuthenticationHandler(Of Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions).AuthenticateAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Authentication.AuthenticationHandler{Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions}.HandleAuthenticateOnceAsync
  commentId: M:Microsoft.AspNetCore.Authentication.AuthenticationHandler{Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions}.HandleAuthenticateOnceAsync
  parent: Microsoft.AspNetCore.Authentication.AuthenticationHandler{Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions}
  definition: Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.HandleAuthenticateOnceAsync
  name: HandleAuthenticateOnceAsync()
  nameWithType: AuthenticationHandler<CloudFoundryOAuthOptions>.HandleAuthenticateOnceAsync()
  fullName: Microsoft.AspNetCore.Authentication.AuthenticationHandler<Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions>.HandleAuthenticateOnceAsync()
  nameWithType.vb: AuthenticationHandler(Of CloudFoundryOAuthOptions).HandleAuthenticateOnceAsync()
  fullName.vb: Microsoft.AspNetCore.Authentication.AuthenticationHandler(Of Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions).HandleAuthenticateOnceAsync()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.HandleAuthenticateOnceAsync
    name: HandleAuthenticateOnceAsync
    nameWithType: AuthenticationHandler<CloudFoundryOAuthOptions>.HandleAuthenticateOnceAsync
    fullName: Microsoft.AspNetCore.Authentication.AuthenticationHandler<Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions>.HandleAuthenticateOnceAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.HandleAuthenticateOnceAsync
    name: HandleAuthenticateOnceAsync
    nameWithType: AuthenticationHandler(Of CloudFoundryOAuthOptions).HandleAuthenticateOnceAsync
    fullName: Microsoft.AspNetCore.Authentication.AuthenticationHandler(Of Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions).HandleAuthenticateOnceAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Authentication.AuthenticationHandler{Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions}.HandleAuthenticateOnceSafeAsync
  commentId: M:Microsoft.AspNetCore.Authentication.AuthenticationHandler{Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions}.HandleAuthenticateOnceSafeAsync
  parent: Microsoft.AspNetCore.Authentication.AuthenticationHandler{Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions}
  definition: Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.HandleAuthenticateOnceSafeAsync
  name: HandleAuthenticateOnceSafeAsync()
  nameWithType: AuthenticationHandler<CloudFoundryOAuthOptions>.HandleAuthenticateOnceSafeAsync()
  fullName: Microsoft.AspNetCore.Authentication.AuthenticationHandler<Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions>.HandleAuthenticateOnceSafeAsync()
  nameWithType.vb: AuthenticationHandler(Of CloudFoundryOAuthOptions).HandleAuthenticateOnceSafeAsync()
  fullName.vb: Microsoft.AspNetCore.Authentication.AuthenticationHandler(Of Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions).HandleAuthenticateOnceSafeAsync()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.HandleAuthenticateOnceSafeAsync
    name: HandleAuthenticateOnceSafeAsync
    nameWithType: AuthenticationHandler<CloudFoundryOAuthOptions>.HandleAuthenticateOnceSafeAsync
    fullName: Microsoft.AspNetCore.Authentication.AuthenticationHandler<Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions>.HandleAuthenticateOnceSafeAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.HandleAuthenticateOnceSafeAsync
    name: HandleAuthenticateOnceSafeAsync
    nameWithType: AuthenticationHandler(Of CloudFoundryOAuthOptions).HandleAuthenticateOnceSafeAsync
    fullName: Microsoft.AspNetCore.Authentication.AuthenticationHandler(Of Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions).HandleAuthenticateOnceSafeAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Authentication.AuthenticationHandler{Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions}.ChallengeAsync(Microsoft.AspNetCore.Authentication.AuthenticationProperties)
  commentId: M:Microsoft.AspNetCore.Authentication.AuthenticationHandler{Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions}.ChallengeAsync(Microsoft.AspNetCore.Authentication.AuthenticationProperties)
  parent: Microsoft.AspNetCore.Authentication.AuthenticationHandler{Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions}
  definition: Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.ChallengeAsync(Microsoft.AspNetCore.Authentication.AuthenticationProperties)
  name: ChallengeAsync(AuthenticationProperties)
  nameWithType: AuthenticationHandler<CloudFoundryOAuthOptions>.ChallengeAsync(AuthenticationProperties)
  fullName: Microsoft.AspNetCore.Authentication.AuthenticationHandler<Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions>.ChallengeAsync(Microsoft.AspNetCore.Authentication.AuthenticationProperties)
  nameWithType.vb: AuthenticationHandler(Of CloudFoundryOAuthOptions).ChallengeAsync(AuthenticationProperties)
  fullName.vb: Microsoft.AspNetCore.Authentication.AuthenticationHandler(Of Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions).ChallengeAsync(Microsoft.AspNetCore.Authentication.AuthenticationProperties)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.ChallengeAsync(Microsoft.AspNetCore.Authentication.AuthenticationProperties)
    name: ChallengeAsync
    nameWithType: AuthenticationHandler<CloudFoundryOAuthOptions>.ChallengeAsync
    fullName: Microsoft.AspNetCore.Authentication.AuthenticationHandler<Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions>.ChallengeAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Authentication.AuthenticationProperties
    name: AuthenticationProperties
    nameWithType: AuthenticationProperties
    fullName: Microsoft.AspNetCore.Authentication.AuthenticationProperties
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.ChallengeAsync(Microsoft.AspNetCore.Authentication.AuthenticationProperties)
    name: ChallengeAsync
    nameWithType: AuthenticationHandler(Of CloudFoundryOAuthOptions).ChallengeAsync
    fullName: Microsoft.AspNetCore.Authentication.AuthenticationHandler(Of Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions).ChallengeAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Authentication.AuthenticationProperties
    name: AuthenticationProperties
    nameWithType: AuthenticationProperties
    fullName: Microsoft.AspNetCore.Authentication.AuthenticationProperties
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Authentication.AuthenticationHandler{Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions}.ForbidAsync(Microsoft.AspNetCore.Authentication.AuthenticationProperties)
  commentId: M:Microsoft.AspNetCore.Authentication.AuthenticationHandler{Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions}.ForbidAsync(Microsoft.AspNetCore.Authentication.AuthenticationProperties)
  parent: Microsoft.AspNetCore.Authentication.AuthenticationHandler{Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions}
  definition: Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.ForbidAsync(Microsoft.AspNetCore.Authentication.AuthenticationProperties)
  name: ForbidAsync(AuthenticationProperties)
  nameWithType: AuthenticationHandler<CloudFoundryOAuthOptions>.ForbidAsync(AuthenticationProperties)
  fullName: Microsoft.AspNetCore.Authentication.AuthenticationHandler<Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions>.ForbidAsync(Microsoft.AspNetCore.Authentication.AuthenticationProperties)
  nameWithType.vb: AuthenticationHandler(Of CloudFoundryOAuthOptions).ForbidAsync(AuthenticationProperties)
  fullName.vb: Microsoft.AspNetCore.Authentication.AuthenticationHandler(Of Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions).ForbidAsync(Microsoft.AspNetCore.Authentication.AuthenticationProperties)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.ForbidAsync(Microsoft.AspNetCore.Authentication.AuthenticationProperties)
    name: ForbidAsync
    nameWithType: AuthenticationHandler<CloudFoundryOAuthOptions>.ForbidAsync
    fullName: Microsoft.AspNetCore.Authentication.AuthenticationHandler<Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions>.ForbidAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Authentication.AuthenticationProperties
    name: AuthenticationProperties
    nameWithType: AuthenticationProperties
    fullName: Microsoft.AspNetCore.Authentication.AuthenticationProperties
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.ForbidAsync(Microsoft.AspNetCore.Authentication.AuthenticationProperties)
    name: ForbidAsync
    nameWithType: AuthenticationHandler(Of CloudFoundryOAuthOptions).ForbidAsync
    fullName: Microsoft.AspNetCore.Authentication.AuthenticationHandler(Of Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions).ForbidAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Authentication.AuthenticationProperties
    name: AuthenticationProperties
    nameWithType: AuthenticationProperties
    fullName: Microsoft.AspNetCore.Authentication.AuthenticationProperties
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Authentication.AuthenticationHandler{Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions}.Scheme
  commentId: P:Microsoft.AspNetCore.Authentication.AuthenticationHandler{Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions}.Scheme
  parent: Microsoft.AspNetCore.Authentication.AuthenticationHandler{Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions}
  definition: Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.Scheme
  name: Scheme
  nameWithType: AuthenticationHandler<CloudFoundryOAuthOptions>.Scheme
  fullName: Microsoft.AspNetCore.Authentication.AuthenticationHandler<Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions>.Scheme
  nameWithType.vb: AuthenticationHandler(Of CloudFoundryOAuthOptions).Scheme
  fullName.vb: Microsoft.AspNetCore.Authentication.AuthenticationHandler(Of Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions).Scheme
- uid: Microsoft.AspNetCore.Authentication.AuthenticationHandler{Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions}.Options
  commentId: P:Microsoft.AspNetCore.Authentication.AuthenticationHandler{Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions}.Options
  parent: Microsoft.AspNetCore.Authentication.AuthenticationHandler{Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions}
  definition: Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.Options
  name: Options
  nameWithType: AuthenticationHandler<CloudFoundryOAuthOptions>.Options
  fullName: Microsoft.AspNetCore.Authentication.AuthenticationHandler<Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions>.Options
  nameWithType.vb: AuthenticationHandler(Of CloudFoundryOAuthOptions).Options
  fullName.vb: Microsoft.AspNetCore.Authentication.AuthenticationHandler(Of Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions).Options
- uid: Microsoft.AspNetCore.Authentication.AuthenticationHandler{Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions}.Context
  commentId: P:Microsoft.AspNetCore.Authentication.AuthenticationHandler{Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions}.Context
  parent: Microsoft.AspNetCore.Authentication.AuthenticationHandler{Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions}
  definition: Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.Context
  name: Context
  nameWithType: AuthenticationHandler<CloudFoundryOAuthOptions>.Context
  fullName: Microsoft.AspNetCore.Authentication.AuthenticationHandler<Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions>.Context
  nameWithType.vb: AuthenticationHandler(Of CloudFoundryOAuthOptions).Context
  fullName.vb: Microsoft.AspNetCore.Authentication.AuthenticationHandler(Of Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions).Context
- uid: Microsoft.AspNetCore.Authentication.AuthenticationHandler{Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions}.Request
  commentId: P:Microsoft.AspNetCore.Authentication.AuthenticationHandler{Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions}.Request
  parent: Microsoft.AspNetCore.Authentication.AuthenticationHandler{Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions}
  definition: Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.Request
  name: Request
  nameWithType: AuthenticationHandler<CloudFoundryOAuthOptions>.Request
  fullName: Microsoft.AspNetCore.Authentication.AuthenticationHandler<Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions>.Request
  nameWithType.vb: AuthenticationHandler(Of CloudFoundryOAuthOptions).Request
  fullName.vb: Microsoft.AspNetCore.Authentication.AuthenticationHandler(Of Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions).Request
- uid: Microsoft.AspNetCore.Authentication.AuthenticationHandler{Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions}.Response
  commentId: P:Microsoft.AspNetCore.Authentication.AuthenticationHandler{Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions}.Response
  parent: Microsoft.AspNetCore.Authentication.AuthenticationHandler{Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions}
  definition: Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.Response
  name: Response
  nameWithType: AuthenticationHandler<CloudFoundryOAuthOptions>.Response
  fullName: Microsoft.AspNetCore.Authentication.AuthenticationHandler<Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions>.Response
  nameWithType.vb: AuthenticationHandler(Of CloudFoundryOAuthOptions).Response
  fullName.vb: Microsoft.AspNetCore.Authentication.AuthenticationHandler(Of Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions).Response
- uid: Microsoft.AspNetCore.Authentication.AuthenticationHandler{Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions}.OriginalPath
  commentId: P:Microsoft.AspNetCore.Authentication.AuthenticationHandler{Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions}.OriginalPath
  parent: Microsoft.AspNetCore.Authentication.AuthenticationHandler{Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions}
  definition: Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.OriginalPath
  name: OriginalPath
  nameWithType: AuthenticationHandler<CloudFoundryOAuthOptions>.OriginalPath
  fullName: Microsoft.AspNetCore.Authentication.AuthenticationHandler<Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions>.OriginalPath
  nameWithType.vb: AuthenticationHandler(Of CloudFoundryOAuthOptions).OriginalPath
  fullName.vb: Microsoft.AspNetCore.Authentication.AuthenticationHandler(Of Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions).OriginalPath
- uid: Microsoft.AspNetCore.Authentication.AuthenticationHandler{Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions}.OriginalPathBase
  commentId: P:Microsoft.AspNetCore.Authentication.AuthenticationHandler{Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions}.OriginalPathBase
  parent: Microsoft.AspNetCore.Authentication.AuthenticationHandler{Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions}
  definition: Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.OriginalPathBase
  name: OriginalPathBase
  nameWithType: AuthenticationHandler<CloudFoundryOAuthOptions>.OriginalPathBase
  fullName: Microsoft.AspNetCore.Authentication.AuthenticationHandler<Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions>.OriginalPathBase
  nameWithType.vb: AuthenticationHandler(Of CloudFoundryOAuthOptions).OriginalPathBase
  fullName.vb: Microsoft.AspNetCore.Authentication.AuthenticationHandler(Of Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions).OriginalPathBase
- uid: Microsoft.AspNetCore.Authentication.AuthenticationHandler{Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions}.Logger
  commentId: P:Microsoft.AspNetCore.Authentication.AuthenticationHandler{Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions}.Logger
  parent: Microsoft.AspNetCore.Authentication.AuthenticationHandler{Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions}
  definition: Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.Logger
  name: Logger
  nameWithType: AuthenticationHandler<CloudFoundryOAuthOptions>.Logger
  fullName: Microsoft.AspNetCore.Authentication.AuthenticationHandler<Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions>.Logger
  nameWithType.vb: AuthenticationHandler(Of CloudFoundryOAuthOptions).Logger
  fullName.vb: Microsoft.AspNetCore.Authentication.AuthenticationHandler(Of Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions).Logger
- uid: Microsoft.AspNetCore.Authentication.AuthenticationHandler{Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions}.UrlEncoder
  commentId: P:Microsoft.AspNetCore.Authentication.AuthenticationHandler{Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions}.UrlEncoder
  parent: Microsoft.AspNetCore.Authentication.AuthenticationHandler{Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions}
  definition: Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.UrlEncoder
  name: UrlEncoder
  nameWithType: AuthenticationHandler<CloudFoundryOAuthOptions>.UrlEncoder
  fullName: Microsoft.AspNetCore.Authentication.AuthenticationHandler<Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions>.UrlEncoder
  nameWithType.vb: AuthenticationHandler(Of CloudFoundryOAuthOptions).UrlEncoder
  fullName.vb: Microsoft.AspNetCore.Authentication.AuthenticationHandler(Of Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions).UrlEncoder
- uid: Microsoft.AspNetCore.Authentication.AuthenticationHandler{Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions}.Clock
  commentId: P:Microsoft.AspNetCore.Authentication.AuthenticationHandler{Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions}.Clock
  parent: Microsoft.AspNetCore.Authentication.AuthenticationHandler{Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions}
  definition: Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.Clock
  name: Clock
  nameWithType: AuthenticationHandler<CloudFoundryOAuthOptions>.Clock
  fullName: Microsoft.AspNetCore.Authentication.AuthenticationHandler<Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions>.Clock
  nameWithType.vb: AuthenticationHandler(Of CloudFoundryOAuthOptions).Clock
  fullName.vb: Microsoft.AspNetCore.Authentication.AuthenticationHandler(Of Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions).Clock
- uid: Microsoft.AspNetCore.Authentication.AuthenticationHandler{Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions}.OptionsMonitor
  commentId: P:Microsoft.AspNetCore.Authentication.AuthenticationHandler{Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions}.OptionsMonitor
  parent: Microsoft.AspNetCore.Authentication.AuthenticationHandler{Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions}
  definition: Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.OptionsMonitor
  name: OptionsMonitor
  nameWithType: AuthenticationHandler<CloudFoundryOAuthOptions>.OptionsMonitor
  fullName: Microsoft.AspNetCore.Authentication.AuthenticationHandler<Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions>.OptionsMonitor
  nameWithType.vb: AuthenticationHandler(Of CloudFoundryOAuthOptions).OptionsMonitor
  fullName.vb: Microsoft.AspNetCore.Authentication.AuthenticationHandler(Of Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions).OptionsMonitor
- uid: Microsoft.AspNetCore.Authentication.AuthenticationHandler{Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions}.ClaimsIssuer
  commentId: P:Microsoft.AspNetCore.Authentication.AuthenticationHandler{Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions}.ClaimsIssuer
  parent: Microsoft.AspNetCore.Authentication.AuthenticationHandler{Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions}
  definition: Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.ClaimsIssuer
  name: ClaimsIssuer
  nameWithType: AuthenticationHandler<CloudFoundryOAuthOptions>.ClaimsIssuer
  fullName: Microsoft.AspNetCore.Authentication.AuthenticationHandler<Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions>.ClaimsIssuer
  nameWithType.vb: AuthenticationHandler(Of CloudFoundryOAuthOptions).ClaimsIssuer
  fullName.vb: Microsoft.AspNetCore.Authentication.AuthenticationHandler(Of Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions).ClaimsIssuer
- uid: Microsoft.AspNetCore.Authentication.AuthenticationHandler{Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions}.CurrentUri
  commentId: P:Microsoft.AspNetCore.Authentication.AuthenticationHandler{Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions}.CurrentUri
  parent: Microsoft.AspNetCore.Authentication.AuthenticationHandler{Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions}
  definition: Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.CurrentUri
  name: CurrentUri
  nameWithType: AuthenticationHandler<CloudFoundryOAuthOptions>.CurrentUri
  fullName: Microsoft.AspNetCore.Authentication.AuthenticationHandler<Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions>.CurrentUri
  nameWithType.vb: AuthenticationHandler(Of CloudFoundryOAuthOptions).CurrentUri
  fullName.vb: Microsoft.AspNetCore.Authentication.AuthenticationHandler(Of Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions).CurrentUri
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.AspNetCore.Authentication.AuthenticationHandler`1
  commentId: T:Microsoft.AspNetCore.Authentication.AuthenticationHandler`1
  isExternal: true
  name: AuthenticationHandler<TOptions>
  nameWithType: AuthenticationHandler<TOptions>
  fullName: Microsoft.AspNetCore.Authentication.AuthenticationHandler<TOptions>
  nameWithType.vb: AuthenticationHandler(Of TOptions)
  fullName.vb: Microsoft.AspNetCore.Authentication.AuthenticationHandler(Of TOptions)
  name.vb: AuthenticationHandler(Of TOptions)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Authentication.AuthenticationHandler`1
    name: AuthenticationHandler
    nameWithType: AuthenticationHandler
    fullName: Microsoft.AspNetCore.Authentication.AuthenticationHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TOptions
    nameWithType: TOptions
    fullName: TOptions
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.AspNetCore.Authentication.AuthenticationHandler`1
    name: AuthenticationHandler
    nameWithType: AuthenticationHandler
    fullName: Microsoft.AspNetCore.Authentication.AuthenticationHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TOptions
    nameWithType: TOptions
    fullName: TOptions
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Authentication
  commentId: N:Microsoft.AspNetCore.Authentication
  isExternal: true
  name: Microsoft.AspNetCore.Authentication
  nameWithType: Microsoft.AspNetCore.Authentication
  fullName: Microsoft.AspNetCore.Authentication
- uid: Microsoft.AspNetCore.Authentication.RemoteAuthenticationHandler`1
  commentId: T:Microsoft.AspNetCore.Authentication.RemoteAuthenticationHandler`1
  isExternal: true
  name: RemoteAuthenticationHandler<TOptions>
  nameWithType: RemoteAuthenticationHandler<TOptions>
  fullName: Microsoft.AspNetCore.Authentication.RemoteAuthenticationHandler<TOptions>
  nameWithType.vb: RemoteAuthenticationHandler(Of TOptions)
  fullName.vb: Microsoft.AspNetCore.Authentication.RemoteAuthenticationHandler(Of TOptions)
  name.vb: RemoteAuthenticationHandler(Of TOptions)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Authentication.RemoteAuthenticationHandler`1
    name: RemoteAuthenticationHandler
    nameWithType: RemoteAuthenticationHandler
    fullName: Microsoft.AspNetCore.Authentication.RemoteAuthenticationHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TOptions
    nameWithType: TOptions
    fullName: TOptions
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.AspNetCore.Authentication.RemoteAuthenticationHandler`1
    name: RemoteAuthenticationHandler
    nameWithType: RemoteAuthenticationHandler
    fullName: Microsoft.AspNetCore.Authentication.RemoteAuthenticationHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TOptions
    nameWithType: TOptions
    fullName: TOptions
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Authentication.OAuth.OAuthHandler`1
  commentId: T:Microsoft.AspNetCore.Authentication.OAuth.OAuthHandler`1
  isExternal: true
  name: OAuthHandler<TOptions>
  nameWithType: OAuthHandler<TOptions>
  fullName: Microsoft.AspNetCore.Authentication.OAuth.OAuthHandler<TOptions>
  nameWithType.vb: OAuthHandler(Of TOptions)
  fullName.vb: Microsoft.AspNetCore.Authentication.OAuth.OAuthHandler(Of TOptions)
  name.vb: OAuthHandler(Of TOptions)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Authentication.OAuth.OAuthHandler`1
    name: OAuthHandler
    nameWithType: OAuthHandler
    fullName: Microsoft.AspNetCore.Authentication.OAuth.OAuthHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TOptions
    nameWithType: TOptions
    fullName: TOptions
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.AspNetCore.Authentication.OAuth.OAuthHandler`1
    name: OAuthHandler
    nameWithType: OAuthHandler
    fullName: Microsoft.AspNetCore.Authentication.OAuth.OAuthHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TOptions
    nameWithType: TOptions
    fullName: TOptions
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Authentication.OAuth
  commentId: N:Microsoft.AspNetCore.Authentication.OAuth
  isExternal: true
  name: Microsoft.AspNetCore.Authentication.OAuth
  nameWithType: Microsoft.AspNetCore.Authentication.OAuth
  fullName: Microsoft.AspNetCore.Authentication.OAuth
- uid: Microsoft.AspNetCore.Authentication.OAuth.OAuthHandler`1.CreateEventsAsync
  commentId: M:Microsoft.AspNetCore.Authentication.OAuth.OAuthHandler`1.CreateEventsAsync
  isExternal: true
  name: CreateEventsAsync()
  nameWithType: OAuthHandler<TOptions>.CreateEventsAsync()
  fullName: Microsoft.AspNetCore.Authentication.OAuth.OAuthHandler<TOptions>.CreateEventsAsync()
  nameWithType.vb: OAuthHandler(Of TOptions).CreateEventsAsync()
  fullName.vb: Microsoft.AspNetCore.Authentication.OAuth.OAuthHandler(Of TOptions).CreateEventsAsync()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Authentication.OAuth.OAuthHandler`1.CreateEventsAsync
    name: CreateEventsAsync
    nameWithType: OAuthHandler<TOptions>.CreateEventsAsync
    fullName: Microsoft.AspNetCore.Authentication.OAuth.OAuthHandler<TOptions>.CreateEventsAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Authentication.OAuth.OAuthHandler`1.CreateEventsAsync
    name: CreateEventsAsync
    nameWithType: OAuthHandler(Of TOptions).CreateEventsAsync
    fullName: Microsoft.AspNetCore.Authentication.OAuth.OAuthHandler(Of TOptions).CreateEventsAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Authentication.OAuth.OAuthHandler`1.HandleRemoteAuthenticateAsync
  commentId: M:Microsoft.AspNetCore.Authentication.OAuth.OAuthHandler`1.HandleRemoteAuthenticateAsync
  isExternal: true
  name: HandleRemoteAuthenticateAsync()
  nameWithType: OAuthHandler<TOptions>.HandleRemoteAuthenticateAsync()
  fullName: Microsoft.AspNetCore.Authentication.OAuth.OAuthHandler<TOptions>.HandleRemoteAuthenticateAsync()
  nameWithType.vb: OAuthHandler(Of TOptions).HandleRemoteAuthenticateAsync()
  fullName.vb: Microsoft.AspNetCore.Authentication.OAuth.OAuthHandler(Of TOptions).HandleRemoteAuthenticateAsync()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Authentication.OAuth.OAuthHandler`1.HandleRemoteAuthenticateAsync
    name: HandleRemoteAuthenticateAsync
    nameWithType: OAuthHandler<TOptions>.HandleRemoteAuthenticateAsync
    fullName: Microsoft.AspNetCore.Authentication.OAuth.OAuthHandler<TOptions>.HandleRemoteAuthenticateAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Authentication.OAuth.OAuthHandler`1.HandleRemoteAuthenticateAsync
    name: HandleRemoteAuthenticateAsync
    nameWithType: OAuthHandler(Of TOptions).HandleRemoteAuthenticateAsync
    fullName: Microsoft.AspNetCore.Authentication.OAuth.OAuthHandler(Of TOptions).HandleRemoteAuthenticateAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Authentication.OAuth.OAuthHandler`1.HandleChallengeAsync(Microsoft.AspNetCore.Authentication.AuthenticationProperties)
  commentId: M:Microsoft.AspNetCore.Authentication.OAuth.OAuthHandler`1.HandleChallengeAsync(Microsoft.AspNetCore.Authentication.AuthenticationProperties)
  isExternal: true
  name: HandleChallengeAsync(AuthenticationProperties)
  nameWithType: OAuthHandler<TOptions>.HandleChallengeAsync(AuthenticationProperties)
  fullName: Microsoft.AspNetCore.Authentication.OAuth.OAuthHandler<TOptions>.HandleChallengeAsync(Microsoft.AspNetCore.Authentication.AuthenticationProperties)
  nameWithType.vb: OAuthHandler(Of TOptions).HandleChallengeAsync(AuthenticationProperties)
  fullName.vb: Microsoft.AspNetCore.Authentication.OAuth.OAuthHandler(Of TOptions).HandleChallengeAsync(Microsoft.AspNetCore.Authentication.AuthenticationProperties)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Authentication.OAuth.OAuthHandler`1.HandleChallengeAsync(Microsoft.AspNetCore.Authentication.AuthenticationProperties)
    name: HandleChallengeAsync
    nameWithType: OAuthHandler<TOptions>.HandleChallengeAsync
    fullName: Microsoft.AspNetCore.Authentication.OAuth.OAuthHandler<TOptions>.HandleChallengeAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Authentication.AuthenticationProperties
    name: AuthenticationProperties
    nameWithType: AuthenticationProperties
    fullName: Microsoft.AspNetCore.Authentication.AuthenticationProperties
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Authentication.OAuth.OAuthHandler`1.HandleChallengeAsync(Microsoft.AspNetCore.Authentication.AuthenticationProperties)
    name: HandleChallengeAsync
    nameWithType: OAuthHandler(Of TOptions).HandleChallengeAsync
    fullName: Microsoft.AspNetCore.Authentication.OAuth.OAuthHandler(Of TOptions).HandleChallengeAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Authentication.AuthenticationProperties
    name: AuthenticationProperties
    nameWithType: AuthenticationProperties
    fullName: Microsoft.AspNetCore.Authentication.AuthenticationProperties
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Authentication.OAuth.OAuthHandler`1.FormatScope(System.Collections.Generic.IEnumerable{System.String})
  commentId: M:Microsoft.AspNetCore.Authentication.OAuth.OAuthHandler`1.FormatScope(System.Collections.Generic.IEnumerable{System.String})
  isExternal: true
  name: FormatScope(IEnumerable<String>)
  nameWithType: OAuthHandler<TOptions>.FormatScope(IEnumerable<String>)
  fullName: Microsoft.AspNetCore.Authentication.OAuth.OAuthHandler<TOptions>.FormatScope(System.Collections.Generic.IEnumerable<System.String>)
  nameWithType.vb: OAuthHandler(Of TOptions).FormatScope(IEnumerable(Of String))
  fullName.vb: Microsoft.AspNetCore.Authentication.OAuth.OAuthHandler(Of TOptions).FormatScope(System.Collections.Generic.IEnumerable(Of System.String))
  name.vb: FormatScope(IEnumerable(Of String))
  spec.csharp:
  - uid: Microsoft.AspNetCore.Authentication.OAuth.OAuthHandler`1.FormatScope(System.Collections.Generic.IEnumerable{System.String})
    name: FormatScope
    nameWithType: OAuthHandler<TOptions>.FormatScope
    fullName: Microsoft.AspNetCore.Authentication.OAuth.OAuthHandler<TOptions>.FormatScope
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Authentication.OAuth.OAuthHandler`1.FormatScope(System.Collections.Generic.IEnumerable{System.String})
    name: FormatScope
    nameWithType: OAuthHandler(Of TOptions).FormatScope
    fullName: Microsoft.AspNetCore.Authentication.OAuth.OAuthHandler(Of TOptions).FormatScope
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Authentication.OAuth.OAuthHandler`1.FormatScope
  commentId: M:Microsoft.AspNetCore.Authentication.OAuth.OAuthHandler`1.FormatScope
  isExternal: true
  name: FormatScope()
  nameWithType: OAuthHandler<TOptions>.FormatScope()
  fullName: Microsoft.AspNetCore.Authentication.OAuth.OAuthHandler<TOptions>.FormatScope()
  nameWithType.vb: OAuthHandler(Of TOptions).FormatScope()
  fullName.vb: Microsoft.AspNetCore.Authentication.OAuth.OAuthHandler(Of TOptions).FormatScope()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Authentication.OAuth.OAuthHandler`1.FormatScope
    name: FormatScope
    nameWithType: OAuthHandler<TOptions>.FormatScope
    fullName: Microsoft.AspNetCore.Authentication.OAuth.OAuthHandler<TOptions>.FormatScope
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Authentication.OAuth.OAuthHandler`1.FormatScope
    name: FormatScope
    nameWithType: OAuthHandler(Of TOptions).FormatScope
    fullName: Microsoft.AspNetCore.Authentication.OAuth.OAuthHandler(Of TOptions).FormatScope
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Authentication.OAuth.OAuthHandler`1.Backchannel
  commentId: P:Microsoft.AspNetCore.Authentication.OAuth.OAuthHandler`1.Backchannel
  isExternal: true
  name: Backchannel
  nameWithType: OAuthHandler<TOptions>.Backchannel
  fullName: Microsoft.AspNetCore.Authentication.OAuth.OAuthHandler<TOptions>.Backchannel
  nameWithType.vb: OAuthHandler(Of TOptions).Backchannel
  fullName.vb: Microsoft.AspNetCore.Authentication.OAuth.OAuthHandler(Of TOptions).Backchannel
- uid: Microsoft.AspNetCore.Authentication.OAuth.OAuthHandler`1.Events
  commentId: P:Microsoft.AspNetCore.Authentication.OAuth.OAuthHandler`1.Events
  isExternal: true
  name: Events
  nameWithType: OAuthHandler<TOptions>.Events
  fullName: Microsoft.AspNetCore.Authentication.OAuth.OAuthHandler<TOptions>.Events
  nameWithType.vb: OAuthHandler(Of TOptions).Events
  fullName.vb: Microsoft.AspNetCore.Authentication.OAuth.OAuthHandler(Of TOptions).Events
- uid: Microsoft.AspNetCore.Authentication.RemoteAuthenticationHandler`1.ShouldHandleRequestAsync
  commentId: M:Microsoft.AspNetCore.Authentication.RemoteAuthenticationHandler`1.ShouldHandleRequestAsync
  isExternal: true
  name: ShouldHandleRequestAsync()
  nameWithType: RemoteAuthenticationHandler<TOptions>.ShouldHandleRequestAsync()
  fullName: Microsoft.AspNetCore.Authentication.RemoteAuthenticationHandler<TOptions>.ShouldHandleRequestAsync()
  nameWithType.vb: RemoteAuthenticationHandler(Of TOptions).ShouldHandleRequestAsync()
  fullName.vb: Microsoft.AspNetCore.Authentication.RemoteAuthenticationHandler(Of TOptions).ShouldHandleRequestAsync()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Authentication.RemoteAuthenticationHandler`1.ShouldHandleRequestAsync
    name: ShouldHandleRequestAsync
    nameWithType: RemoteAuthenticationHandler<TOptions>.ShouldHandleRequestAsync
    fullName: Microsoft.AspNetCore.Authentication.RemoteAuthenticationHandler<TOptions>.ShouldHandleRequestAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Authentication.RemoteAuthenticationHandler`1.ShouldHandleRequestAsync
    name: ShouldHandleRequestAsync
    nameWithType: RemoteAuthenticationHandler(Of TOptions).ShouldHandleRequestAsync
    fullName: Microsoft.AspNetCore.Authentication.RemoteAuthenticationHandler(Of TOptions).ShouldHandleRequestAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Authentication.RemoteAuthenticationHandler`1.HandleRequestAsync
  commentId: M:Microsoft.AspNetCore.Authentication.RemoteAuthenticationHandler`1.HandleRequestAsync
  isExternal: true
  name: HandleRequestAsync()
  nameWithType: RemoteAuthenticationHandler<TOptions>.HandleRequestAsync()
  fullName: Microsoft.AspNetCore.Authentication.RemoteAuthenticationHandler<TOptions>.HandleRequestAsync()
  nameWithType.vb: RemoteAuthenticationHandler(Of TOptions).HandleRequestAsync()
  fullName.vb: Microsoft.AspNetCore.Authentication.RemoteAuthenticationHandler(Of TOptions).HandleRequestAsync()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Authentication.RemoteAuthenticationHandler`1.HandleRequestAsync
    name: HandleRequestAsync
    nameWithType: RemoteAuthenticationHandler<TOptions>.HandleRequestAsync
    fullName: Microsoft.AspNetCore.Authentication.RemoteAuthenticationHandler<TOptions>.HandleRequestAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Authentication.RemoteAuthenticationHandler`1.HandleRequestAsync
    name: HandleRequestAsync
    nameWithType: RemoteAuthenticationHandler(Of TOptions).HandleRequestAsync
    fullName: Microsoft.AspNetCore.Authentication.RemoteAuthenticationHandler(Of TOptions).HandleRequestAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Authentication.RemoteAuthenticationHandler`1.HandleAuthenticateAsync
  commentId: M:Microsoft.AspNetCore.Authentication.RemoteAuthenticationHandler`1.HandleAuthenticateAsync
  isExternal: true
  name: HandleAuthenticateAsync()
  nameWithType: RemoteAuthenticationHandler<TOptions>.HandleAuthenticateAsync()
  fullName: Microsoft.AspNetCore.Authentication.RemoteAuthenticationHandler<TOptions>.HandleAuthenticateAsync()
  nameWithType.vb: RemoteAuthenticationHandler(Of TOptions).HandleAuthenticateAsync()
  fullName.vb: Microsoft.AspNetCore.Authentication.RemoteAuthenticationHandler(Of TOptions).HandleAuthenticateAsync()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Authentication.RemoteAuthenticationHandler`1.HandleAuthenticateAsync
    name: HandleAuthenticateAsync
    nameWithType: RemoteAuthenticationHandler<TOptions>.HandleAuthenticateAsync
    fullName: Microsoft.AspNetCore.Authentication.RemoteAuthenticationHandler<TOptions>.HandleAuthenticateAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Authentication.RemoteAuthenticationHandler`1.HandleAuthenticateAsync
    name: HandleAuthenticateAsync
    nameWithType: RemoteAuthenticationHandler(Of TOptions).HandleAuthenticateAsync
    fullName: Microsoft.AspNetCore.Authentication.RemoteAuthenticationHandler(Of TOptions).HandleAuthenticateAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Authentication.RemoteAuthenticationHandler`1.HandleForbiddenAsync(Microsoft.AspNetCore.Authentication.AuthenticationProperties)
  commentId: M:Microsoft.AspNetCore.Authentication.RemoteAuthenticationHandler`1.HandleForbiddenAsync(Microsoft.AspNetCore.Authentication.AuthenticationProperties)
  isExternal: true
  name: HandleForbiddenAsync(AuthenticationProperties)
  nameWithType: RemoteAuthenticationHandler<TOptions>.HandleForbiddenAsync(AuthenticationProperties)
  fullName: Microsoft.AspNetCore.Authentication.RemoteAuthenticationHandler<TOptions>.HandleForbiddenAsync(Microsoft.AspNetCore.Authentication.AuthenticationProperties)
  nameWithType.vb: RemoteAuthenticationHandler(Of TOptions).HandleForbiddenAsync(AuthenticationProperties)
  fullName.vb: Microsoft.AspNetCore.Authentication.RemoteAuthenticationHandler(Of TOptions).HandleForbiddenAsync(Microsoft.AspNetCore.Authentication.AuthenticationProperties)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Authentication.RemoteAuthenticationHandler`1.HandleForbiddenAsync(Microsoft.AspNetCore.Authentication.AuthenticationProperties)
    name: HandleForbiddenAsync
    nameWithType: RemoteAuthenticationHandler<TOptions>.HandleForbiddenAsync
    fullName: Microsoft.AspNetCore.Authentication.RemoteAuthenticationHandler<TOptions>.HandleForbiddenAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Authentication.AuthenticationProperties
    name: AuthenticationProperties
    nameWithType: AuthenticationProperties
    fullName: Microsoft.AspNetCore.Authentication.AuthenticationProperties
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Authentication.RemoteAuthenticationHandler`1.HandleForbiddenAsync(Microsoft.AspNetCore.Authentication.AuthenticationProperties)
    name: HandleForbiddenAsync
    nameWithType: RemoteAuthenticationHandler(Of TOptions).HandleForbiddenAsync
    fullName: Microsoft.AspNetCore.Authentication.RemoteAuthenticationHandler(Of TOptions).HandleForbiddenAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Authentication.AuthenticationProperties
    name: AuthenticationProperties
    nameWithType: AuthenticationProperties
    fullName: Microsoft.AspNetCore.Authentication.AuthenticationProperties
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Authentication.RemoteAuthenticationHandler`1.GenerateCorrelationId(Microsoft.AspNetCore.Authentication.AuthenticationProperties)
  commentId: M:Microsoft.AspNetCore.Authentication.RemoteAuthenticationHandler`1.GenerateCorrelationId(Microsoft.AspNetCore.Authentication.AuthenticationProperties)
  isExternal: true
  name: GenerateCorrelationId(AuthenticationProperties)
  nameWithType: RemoteAuthenticationHandler<TOptions>.GenerateCorrelationId(AuthenticationProperties)
  fullName: Microsoft.AspNetCore.Authentication.RemoteAuthenticationHandler<TOptions>.GenerateCorrelationId(Microsoft.AspNetCore.Authentication.AuthenticationProperties)
  nameWithType.vb: RemoteAuthenticationHandler(Of TOptions).GenerateCorrelationId(AuthenticationProperties)
  fullName.vb: Microsoft.AspNetCore.Authentication.RemoteAuthenticationHandler(Of TOptions).GenerateCorrelationId(Microsoft.AspNetCore.Authentication.AuthenticationProperties)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Authentication.RemoteAuthenticationHandler`1.GenerateCorrelationId(Microsoft.AspNetCore.Authentication.AuthenticationProperties)
    name: GenerateCorrelationId
    nameWithType: RemoteAuthenticationHandler<TOptions>.GenerateCorrelationId
    fullName: Microsoft.AspNetCore.Authentication.RemoteAuthenticationHandler<TOptions>.GenerateCorrelationId
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Authentication.AuthenticationProperties
    name: AuthenticationProperties
    nameWithType: AuthenticationProperties
    fullName: Microsoft.AspNetCore.Authentication.AuthenticationProperties
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Authentication.RemoteAuthenticationHandler`1.GenerateCorrelationId(Microsoft.AspNetCore.Authentication.AuthenticationProperties)
    name: GenerateCorrelationId
    nameWithType: RemoteAuthenticationHandler(Of TOptions).GenerateCorrelationId
    fullName: Microsoft.AspNetCore.Authentication.RemoteAuthenticationHandler(Of TOptions).GenerateCorrelationId
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Authentication.AuthenticationProperties
    name: AuthenticationProperties
    nameWithType: AuthenticationProperties
    fullName: Microsoft.AspNetCore.Authentication.AuthenticationProperties
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Authentication.RemoteAuthenticationHandler`1.ValidateCorrelationId(Microsoft.AspNetCore.Authentication.AuthenticationProperties)
  commentId: M:Microsoft.AspNetCore.Authentication.RemoteAuthenticationHandler`1.ValidateCorrelationId(Microsoft.AspNetCore.Authentication.AuthenticationProperties)
  isExternal: true
  name: ValidateCorrelationId(AuthenticationProperties)
  nameWithType: RemoteAuthenticationHandler<TOptions>.ValidateCorrelationId(AuthenticationProperties)
  fullName: Microsoft.AspNetCore.Authentication.RemoteAuthenticationHandler<TOptions>.ValidateCorrelationId(Microsoft.AspNetCore.Authentication.AuthenticationProperties)
  nameWithType.vb: RemoteAuthenticationHandler(Of TOptions).ValidateCorrelationId(AuthenticationProperties)
  fullName.vb: Microsoft.AspNetCore.Authentication.RemoteAuthenticationHandler(Of TOptions).ValidateCorrelationId(Microsoft.AspNetCore.Authentication.AuthenticationProperties)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Authentication.RemoteAuthenticationHandler`1.ValidateCorrelationId(Microsoft.AspNetCore.Authentication.AuthenticationProperties)
    name: ValidateCorrelationId
    nameWithType: RemoteAuthenticationHandler<TOptions>.ValidateCorrelationId
    fullName: Microsoft.AspNetCore.Authentication.RemoteAuthenticationHandler<TOptions>.ValidateCorrelationId
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Authentication.AuthenticationProperties
    name: AuthenticationProperties
    nameWithType: AuthenticationProperties
    fullName: Microsoft.AspNetCore.Authentication.AuthenticationProperties
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Authentication.RemoteAuthenticationHandler`1.ValidateCorrelationId(Microsoft.AspNetCore.Authentication.AuthenticationProperties)
    name: ValidateCorrelationId
    nameWithType: RemoteAuthenticationHandler(Of TOptions).ValidateCorrelationId
    fullName: Microsoft.AspNetCore.Authentication.RemoteAuthenticationHandler(Of TOptions).ValidateCorrelationId
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Authentication.AuthenticationProperties
    name: AuthenticationProperties
    nameWithType: AuthenticationProperties
    fullName: Microsoft.AspNetCore.Authentication.AuthenticationProperties
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Authentication.RemoteAuthenticationHandler`1.HandleAccessDeniedErrorAsync(Microsoft.AspNetCore.Authentication.AuthenticationProperties)
  commentId: M:Microsoft.AspNetCore.Authentication.RemoteAuthenticationHandler`1.HandleAccessDeniedErrorAsync(Microsoft.AspNetCore.Authentication.AuthenticationProperties)
  isExternal: true
  name: HandleAccessDeniedErrorAsync(AuthenticationProperties)
  nameWithType: RemoteAuthenticationHandler<TOptions>.HandleAccessDeniedErrorAsync(AuthenticationProperties)
  fullName: Microsoft.AspNetCore.Authentication.RemoteAuthenticationHandler<TOptions>.HandleAccessDeniedErrorAsync(Microsoft.AspNetCore.Authentication.AuthenticationProperties)
  nameWithType.vb: RemoteAuthenticationHandler(Of TOptions).HandleAccessDeniedErrorAsync(AuthenticationProperties)
  fullName.vb: Microsoft.AspNetCore.Authentication.RemoteAuthenticationHandler(Of TOptions).HandleAccessDeniedErrorAsync(Microsoft.AspNetCore.Authentication.AuthenticationProperties)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Authentication.RemoteAuthenticationHandler`1.HandleAccessDeniedErrorAsync(Microsoft.AspNetCore.Authentication.AuthenticationProperties)
    name: HandleAccessDeniedErrorAsync
    nameWithType: RemoteAuthenticationHandler<TOptions>.HandleAccessDeniedErrorAsync
    fullName: Microsoft.AspNetCore.Authentication.RemoteAuthenticationHandler<TOptions>.HandleAccessDeniedErrorAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Authentication.AuthenticationProperties
    name: AuthenticationProperties
    nameWithType: AuthenticationProperties
    fullName: Microsoft.AspNetCore.Authentication.AuthenticationProperties
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Authentication.RemoteAuthenticationHandler`1.HandleAccessDeniedErrorAsync(Microsoft.AspNetCore.Authentication.AuthenticationProperties)
    name: HandleAccessDeniedErrorAsync
    nameWithType: RemoteAuthenticationHandler(Of TOptions).HandleAccessDeniedErrorAsync
    fullName: Microsoft.AspNetCore.Authentication.RemoteAuthenticationHandler(Of TOptions).HandleAccessDeniedErrorAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Authentication.AuthenticationProperties
    name: AuthenticationProperties
    nameWithType: AuthenticationProperties
    fullName: Microsoft.AspNetCore.Authentication.AuthenticationProperties
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Authentication.RemoteAuthenticationHandler`1.SignInScheme
  commentId: P:Microsoft.AspNetCore.Authentication.RemoteAuthenticationHandler`1.SignInScheme
  isExternal: true
  name: SignInScheme
  nameWithType: RemoteAuthenticationHandler<TOptions>.SignInScheme
  fullName: Microsoft.AspNetCore.Authentication.RemoteAuthenticationHandler<TOptions>.SignInScheme
  nameWithType.vb: RemoteAuthenticationHandler(Of TOptions).SignInScheme
  fullName.vb: Microsoft.AspNetCore.Authentication.RemoteAuthenticationHandler(Of TOptions).SignInScheme
- uid: Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.InitializeAsync(Microsoft.AspNetCore.Authentication.AuthenticationScheme,Microsoft.AspNetCore.Http.HttpContext)
  commentId: M:Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.InitializeAsync(Microsoft.AspNetCore.Authentication.AuthenticationScheme,Microsoft.AspNetCore.Http.HttpContext)
  isExternal: true
  name: InitializeAsync(AuthenticationScheme, HttpContext)
  nameWithType: AuthenticationHandler<TOptions>.InitializeAsync(AuthenticationScheme, HttpContext)
  fullName: Microsoft.AspNetCore.Authentication.AuthenticationHandler<TOptions>.InitializeAsync(Microsoft.AspNetCore.Authentication.AuthenticationScheme, Microsoft.AspNetCore.Http.HttpContext)
  nameWithType.vb: AuthenticationHandler(Of TOptions).InitializeAsync(AuthenticationScheme, HttpContext)
  fullName.vb: Microsoft.AspNetCore.Authentication.AuthenticationHandler(Of TOptions).InitializeAsync(Microsoft.AspNetCore.Authentication.AuthenticationScheme, Microsoft.AspNetCore.Http.HttpContext)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.InitializeAsync(Microsoft.AspNetCore.Authentication.AuthenticationScheme,Microsoft.AspNetCore.Http.HttpContext)
    name: InitializeAsync
    nameWithType: AuthenticationHandler<TOptions>.InitializeAsync
    fullName: Microsoft.AspNetCore.Authentication.AuthenticationHandler<TOptions>.InitializeAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Authentication.AuthenticationScheme
    name: AuthenticationScheme
    nameWithType: AuthenticationScheme
    fullName: Microsoft.AspNetCore.Authentication.AuthenticationScheme
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.AspNetCore.Http.HttpContext
    name: HttpContext
    nameWithType: HttpContext
    fullName: Microsoft.AspNetCore.Http.HttpContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.InitializeAsync(Microsoft.AspNetCore.Authentication.AuthenticationScheme,Microsoft.AspNetCore.Http.HttpContext)
    name: InitializeAsync
    nameWithType: AuthenticationHandler(Of TOptions).InitializeAsync
    fullName: Microsoft.AspNetCore.Authentication.AuthenticationHandler(Of TOptions).InitializeAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Authentication.AuthenticationScheme
    name: AuthenticationScheme
    nameWithType: AuthenticationScheme
    fullName: Microsoft.AspNetCore.Authentication.AuthenticationScheme
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.AspNetCore.Http.HttpContext
    name: HttpContext
    nameWithType: HttpContext
    fullName: Microsoft.AspNetCore.Http.HttpContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.InitializeEventsAsync
  commentId: M:Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.InitializeEventsAsync
  isExternal: true
  name: InitializeEventsAsync()
  nameWithType: AuthenticationHandler<TOptions>.InitializeEventsAsync()
  fullName: Microsoft.AspNetCore.Authentication.AuthenticationHandler<TOptions>.InitializeEventsAsync()
  nameWithType.vb: AuthenticationHandler(Of TOptions).InitializeEventsAsync()
  fullName.vb: Microsoft.AspNetCore.Authentication.AuthenticationHandler(Of TOptions).InitializeEventsAsync()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.InitializeEventsAsync
    name: InitializeEventsAsync
    nameWithType: AuthenticationHandler<TOptions>.InitializeEventsAsync
    fullName: Microsoft.AspNetCore.Authentication.AuthenticationHandler<TOptions>.InitializeEventsAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.InitializeEventsAsync
    name: InitializeEventsAsync
    nameWithType: AuthenticationHandler(Of TOptions).InitializeEventsAsync
    fullName: Microsoft.AspNetCore.Authentication.AuthenticationHandler(Of TOptions).InitializeEventsAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.InitializeHandlerAsync
  commentId: M:Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.InitializeHandlerAsync
  isExternal: true
  name: InitializeHandlerAsync()
  nameWithType: AuthenticationHandler<TOptions>.InitializeHandlerAsync()
  fullName: Microsoft.AspNetCore.Authentication.AuthenticationHandler<TOptions>.InitializeHandlerAsync()
  nameWithType.vb: AuthenticationHandler(Of TOptions).InitializeHandlerAsync()
  fullName.vb: Microsoft.AspNetCore.Authentication.AuthenticationHandler(Of TOptions).InitializeHandlerAsync()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.InitializeHandlerAsync
    name: InitializeHandlerAsync
    nameWithType: AuthenticationHandler<TOptions>.InitializeHandlerAsync
    fullName: Microsoft.AspNetCore.Authentication.AuthenticationHandler<TOptions>.InitializeHandlerAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.InitializeHandlerAsync
    name: InitializeHandlerAsync
    nameWithType: AuthenticationHandler(Of TOptions).InitializeHandlerAsync
    fullName: Microsoft.AspNetCore.Authentication.AuthenticationHandler(Of TOptions).InitializeHandlerAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.BuildRedirectUri(System.String)
  commentId: M:Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.BuildRedirectUri(System.String)
  isExternal: true
  name: BuildRedirectUri(String)
  nameWithType: AuthenticationHandler<TOptions>.BuildRedirectUri(String)
  fullName: Microsoft.AspNetCore.Authentication.AuthenticationHandler<TOptions>.BuildRedirectUri(System.String)
  nameWithType.vb: AuthenticationHandler(Of TOptions).BuildRedirectUri(String)
  fullName.vb: Microsoft.AspNetCore.Authentication.AuthenticationHandler(Of TOptions).BuildRedirectUri(System.String)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.BuildRedirectUri(System.String)
    name: BuildRedirectUri
    nameWithType: AuthenticationHandler<TOptions>.BuildRedirectUri
    fullName: Microsoft.AspNetCore.Authentication.AuthenticationHandler<TOptions>.BuildRedirectUri
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.BuildRedirectUri(System.String)
    name: BuildRedirectUri
    nameWithType: AuthenticationHandler(Of TOptions).BuildRedirectUri
    fullName: Microsoft.AspNetCore.Authentication.AuthenticationHandler(Of TOptions).BuildRedirectUri
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.ResolveTarget(System.String)
  commentId: M:Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.ResolveTarget(System.String)
  isExternal: true
  name: ResolveTarget(String)
  nameWithType: AuthenticationHandler<TOptions>.ResolveTarget(String)
  fullName: Microsoft.AspNetCore.Authentication.AuthenticationHandler<TOptions>.ResolveTarget(System.String)
  nameWithType.vb: AuthenticationHandler(Of TOptions).ResolveTarget(String)
  fullName.vb: Microsoft.AspNetCore.Authentication.AuthenticationHandler(Of TOptions).ResolveTarget(System.String)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.ResolveTarget(System.String)
    name: ResolveTarget
    nameWithType: AuthenticationHandler<TOptions>.ResolveTarget
    fullName: Microsoft.AspNetCore.Authentication.AuthenticationHandler<TOptions>.ResolveTarget
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.ResolveTarget(System.String)
    name: ResolveTarget
    nameWithType: AuthenticationHandler(Of TOptions).ResolveTarget
    fullName: Microsoft.AspNetCore.Authentication.AuthenticationHandler(Of TOptions).ResolveTarget
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.AuthenticateAsync
  commentId: M:Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.AuthenticateAsync
  isExternal: true
  name: AuthenticateAsync()
  nameWithType: AuthenticationHandler<TOptions>.AuthenticateAsync()
  fullName: Microsoft.AspNetCore.Authentication.AuthenticationHandler<TOptions>.AuthenticateAsync()
  nameWithType.vb: AuthenticationHandler(Of TOptions).AuthenticateAsync()
  fullName.vb: Microsoft.AspNetCore.Authentication.AuthenticationHandler(Of TOptions).AuthenticateAsync()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.AuthenticateAsync
    name: AuthenticateAsync
    nameWithType: AuthenticationHandler<TOptions>.AuthenticateAsync
    fullName: Microsoft.AspNetCore.Authentication.AuthenticationHandler<TOptions>.AuthenticateAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.AuthenticateAsync
    name: AuthenticateAsync
    nameWithType: AuthenticationHandler(Of TOptions).AuthenticateAsync
    fullName: Microsoft.AspNetCore.Authentication.AuthenticationHandler(Of TOptions).AuthenticateAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.HandleAuthenticateOnceAsync
  commentId: M:Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.HandleAuthenticateOnceAsync
  isExternal: true
  name: HandleAuthenticateOnceAsync()
  nameWithType: AuthenticationHandler<TOptions>.HandleAuthenticateOnceAsync()
  fullName: Microsoft.AspNetCore.Authentication.AuthenticationHandler<TOptions>.HandleAuthenticateOnceAsync()
  nameWithType.vb: AuthenticationHandler(Of TOptions).HandleAuthenticateOnceAsync()
  fullName.vb: Microsoft.AspNetCore.Authentication.AuthenticationHandler(Of TOptions).HandleAuthenticateOnceAsync()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.HandleAuthenticateOnceAsync
    name: HandleAuthenticateOnceAsync
    nameWithType: AuthenticationHandler<TOptions>.HandleAuthenticateOnceAsync
    fullName: Microsoft.AspNetCore.Authentication.AuthenticationHandler<TOptions>.HandleAuthenticateOnceAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.HandleAuthenticateOnceAsync
    name: HandleAuthenticateOnceAsync
    nameWithType: AuthenticationHandler(Of TOptions).HandleAuthenticateOnceAsync
    fullName: Microsoft.AspNetCore.Authentication.AuthenticationHandler(Of TOptions).HandleAuthenticateOnceAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.HandleAuthenticateOnceSafeAsync
  commentId: M:Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.HandleAuthenticateOnceSafeAsync
  isExternal: true
  name: HandleAuthenticateOnceSafeAsync()
  nameWithType: AuthenticationHandler<TOptions>.HandleAuthenticateOnceSafeAsync()
  fullName: Microsoft.AspNetCore.Authentication.AuthenticationHandler<TOptions>.HandleAuthenticateOnceSafeAsync()
  nameWithType.vb: AuthenticationHandler(Of TOptions).HandleAuthenticateOnceSafeAsync()
  fullName.vb: Microsoft.AspNetCore.Authentication.AuthenticationHandler(Of TOptions).HandleAuthenticateOnceSafeAsync()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.HandleAuthenticateOnceSafeAsync
    name: HandleAuthenticateOnceSafeAsync
    nameWithType: AuthenticationHandler<TOptions>.HandleAuthenticateOnceSafeAsync
    fullName: Microsoft.AspNetCore.Authentication.AuthenticationHandler<TOptions>.HandleAuthenticateOnceSafeAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.HandleAuthenticateOnceSafeAsync
    name: HandleAuthenticateOnceSafeAsync
    nameWithType: AuthenticationHandler(Of TOptions).HandleAuthenticateOnceSafeAsync
    fullName: Microsoft.AspNetCore.Authentication.AuthenticationHandler(Of TOptions).HandleAuthenticateOnceSafeAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.ChallengeAsync(Microsoft.AspNetCore.Authentication.AuthenticationProperties)
  commentId: M:Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.ChallengeAsync(Microsoft.AspNetCore.Authentication.AuthenticationProperties)
  isExternal: true
  name: ChallengeAsync(AuthenticationProperties)
  nameWithType: AuthenticationHandler<TOptions>.ChallengeAsync(AuthenticationProperties)
  fullName: Microsoft.AspNetCore.Authentication.AuthenticationHandler<TOptions>.ChallengeAsync(Microsoft.AspNetCore.Authentication.AuthenticationProperties)
  nameWithType.vb: AuthenticationHandler(Of TOptions).ChallengeAsync(AuthenticationProperties)
  fullName.vb: Microsoft.AspNetCore.Authentication.AuthenticationHandler(Of TOptions).ChallengeAsync(Microsoft.AspNetCore.Authentication.AuthenticationProperties)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.ChallengeAsync(Microsoft.AspNetCore.Authentication.AuthenticationProperties)
    name: ChallengeAsync
    nameWithType: AuthenticationHandler<TOptions>.ChallengeAsync
    fullName: Microsoft.AspNetCore.Authentication.AuthenticationHandler<TOptions>.ChallengeAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Authentication.AuthenticationProperties
    name: AuthenticationProperties
    nameWithType: AuthenticationProperties
    fullName: Microsoft.AspNetCore.Authentication.AuthenticationProperties
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.ChallengeAsync(Microsoft.AspNetCore.Authentication.AuthenticationProperties)
    name: ChallengeAsync
    nameWithType: AuthenticationHandler(Of TOptions).ChallengeAsync
    fullName: Microsoft.AspNetCore.Authentication.AuthenticationHandler(Of TOptions).ChallengeAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Authentication.AuthenticationProperties
    name: AuthenticationProperties
    nameWithType: AuthenticationProperties
    fullName: Microsoft.AspNetCore.Authentication.AuthenticationProperties
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.ForbidAsync(Microsoft.AspNetCore.Authentication.AuthenticationProperties)
  commentId: M:Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.ForbidAsync(Microsoft.AspNetCore.Authentication.AuthenticationProperties)
  isExternal: true
  name: ForbidAsync(AuthenticationProperties)
  nameWithType: AuthenticationHandler<TOptions>.ForbidAsync(AuthenticationProperties)
  fullName: Microsoft.AspNetCore.Authentication.AuthenticationHandler<TOptions>.ForbidAsync(Microsoft.AspNetCore.Authentication.AuthenticationProperties)
  nameWithType.vb: AuthenticationHandler(Of TOptions).ForbidAsync(AuthenticationProperties)
  fullName.vb: Microsoft.AspNetCore.Authentication.AuthenticationHandler(Of TOptions).ForbidAsync(Microsoft.AspNetCore.Authentication.AuthenticationProperties)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.ForbidAsync(Microsoft.AspNetCore.Authentication.AuthenticationProperties)
    name: ForbidAsync
    nameWithType: AuthenticationHandler<TOptions>.ForbidAsync
    fullName: Microsoft.AspNetCore.Authentication.AuthenticationHandler<TOptions>.ForbidAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Authentication.AuthenticationProperties
    name: AuthenticationProperties
    nameWithType: AuthenticationProperties
    fullName: Microsoft.AspNetCore.Authentication.AuthenticationProperties
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.ForbidAsync(Microsoft.AspNetCore.Authentication.AuthenticationProperties)
    name: ForbidAsync
    nameWithType: AuthenticationHandler(Of TOptions).ForbidAsync
    fullName: Microsoft.AspNetCore.Authentication.AuthenticationHandler(Of TOptions).ForbidAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Authentication.AuthenticationProperties
    name: AuthenticationProperties
    nameWithType: AuthenticationProperties
    fullName: Microsoft.AspNetCore.Authentication.AuthenticationProperties
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.Scheme
  commentId: P:Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.Scheme
  isExternal: true
  name: Scheme
  nameWithType: AuthenticationHandler<TOptions>.Scheme
  fullName: Microsoft.AspNetCore.Authentication.AuthenticationHandler<TOptions>.Scheme
  nameWithType.vb: AuthenticationHandler(Of TOptions).Scheme
  fullName.vb: Microsoft.AspNetCore.Authentication.AuthenticationHandler(Of TOptions).Scheme
- uid: Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.Options
  commentId: P:Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.Options
  isExternal: true
  name: Options
  nameWithType: AuthenticationHandler<TOptions>.Options
  fullName: Microsoft.AspNetCore.Authentication.AuthenticationHandler<TOptions>.Options
  nameWithType.vb: AuthenticationHandler(Of TOptions).Options
  fullName.vb: Microsoft.AspNetCore.Authentication.AuthenticationHandler(Of TOptions).Options
- uid: Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.Context
  commentId: P:Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.Context
  isExternal: true
  name: Context
  nameWithType: AuthenticationHandler<TOptions>.Context
  fullName: Microsoft.AspNetCore.Authentication.AuthenticationHandler<TOptions>.Context
  nameWithType.vb: AuthenticationHandler(Of TOptions).Context
  fullName.vb: Microsoft.AspNetCore.Authentication.AuthenticationHandler(Of TOptions).Context
- uid: Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.Request
  commentId: P:Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.Request
  isExternal: true
  name: Request
  nameWithType: AuthenticationHandler<TOptions>.Request
  fullName: Microsoft.AspNetCore.Authentication.AuthenticationHandler<TOptions>.Request
  nameWithType.vb: AuthenticationHandler(Of TOptions).Request
  fullName.vb: Microsoft.AspNetCore.Authentication.AuthenticationHandler(Of TOptions).Request
- uid: Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.Response
  commentId: P:Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.Response
  isExternal: true
  name: Response
  nameWithType: AuthenticationHandler<TOptions>.Response
  fullName: Microsoft.AspNetCore.Authentication.AuthenticationHandler<TOptions>.Response
  nameWithType.vb: AuthenticationHandler(Of TOptions).Response
  fullName.vb: Microsoft.AspNetCore.Authentication.AuthenticationHandler(Of TOptions).Response
- uid: Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.OriginalPath
  commentId: P:Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.OriginalPath
  isExternal: true
  name: OriginalPath
  nameWithType: AuthenticationHandler<TOptions>.OriginalPath
  fullName: Microsoft.AspNetCore.Authentication.AuthenticationHandler<TOptions>.OriginalPath
  nameWithType.vb: AuthenticationHandler(Of TOptions).OriginalPath
  fullName.vb: Microsoft.AspNetCore.Authentication.AuthenticationHandler(Of TOptions).OriginalPath
- uid: Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.OriginalPathBase
  commentId: P:Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.OriginalPathBase
  isExternal: true
  name: OriginalPathBase
  nameWithType: AuthenticationHandler<TOptions>.OriginalPathBase
  fullName: Microsoft.AspNetCore.Authentication.AuthenticationHandler<TOptions>.OriginalPathBase
  nameWithType.vb: AuthenticationHandler(Of TOptions).OriginalPathBase
  fullName.vb: Microsoft.AspNetCore.Authentication.AuthenticationHandler(Of TOptions).OriginalPathBase
- uid: Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.Logger
  commentId: P:Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.Logger
  isExternal: true
  name: Logger
  nameWithType: AuthenticationHandler<TOptions>.Logger
  fullName: Microsoft.AspNetCore.Authentication.AuthenticationHandler<TOptions>.Logger
  nameWithType.vb: AuthenticationHandler(Of TOptions).Logger
  fullName.vb: Microsoft.AspNetCore.Authentication.AuthenticationHandler(Of TOptions).Logger
- uid: Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.UrlEncoder
  commentId: P:Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.UrlEncoder
  isExternal: true
  name: UrlEncoder
  nameWithType: AuthenticationHandler<TOptions>.UrlEncoder
  fullName: Microsoft.AspNetCore.Authentication.AuthenticationHandler<TOptions>.UrlEncoder
  nameWithType.vb: AuthenticationHandler(Of TOptions).UrlEncoder
  fullName.vb: Microsoft.AspNetCore.Authentication.AuthenticationHandler(Of TOptions).UrlEncoder
- uid: Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.Clock
  commentId: P:Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.Clock
  isExternal: true
  name: Clock
  nameWithType: AuthenticationHandler<TOptions>.Clock
  fullName: Microsoft.AspNetCore.Authentication.AuthenticationHandler<TOptions>.Clock
  nameWithType.vb: AuthenticationHandler(Of TOptions).Clock
  fullName.vb: Microsoft.AspNetCore.Authentication.AuthenticationHandler(Of TOptions).Clock
- uid: Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.OptionsMonitor
  commentId: P:Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.OptionsMonitor
  isExternal: true
  name: OptionsMonitor
  nameWithType: AuthenticationHandler<TOptions>.OptionsMonitor
  fullName: Microsoft.AspNetCore.Authentication.AuthenticationHandler<TOptions>.OptionsMonitor
  nameWithType.vb: AuthenticationHandler(Of TOptions).OptionsMonitor
  fullName.vb: Microsoft.AspNetCore.Authentication.AuthenticationHandler(Of TOptions).OptionsMonitor
- uid: Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.ClaimsIssuer
  commentId: P:Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.ClaimsIssuer
  isExternal: true
  name: ClaimsIssuer
  nameWithType: AuthenticationHandler<TOptions>.ClaimsIssuer
  fullName: Microsoft.AspNetCore.Authentication.AuthenticationHandler<TOptions>.ClaimsIssuer
  nameWithType.vb: AuthenticationHandler(Of TOptions).ClaimsIssuer
  fullName.vb: Microsoft.AspNetCore.Authentication.AuthenticationHandler(Of TOptions).ClaimsIssuer
- uid: Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.CurrentUri
  commentId: P:Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.CurrentUri
  isExternal: true
  name: CurrentUri
  nameWithType: AuthenticationHandler<TOptions>.CurrentUri
  fullName: Microsoft.AspNetCore.Authentication.AuthenticationHandler<TOptions>.CurrentUri
  nameWithType.vb: AuthenticationHandler(Of TOptions).CurrentUri
  fullName.vb: Microsoft.AspNetCore.Authentication.AuthenticationHandler(Of TOptions).CurrentUri
- uid: Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthHandler.#ctor*
  commentId: Overload:Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthHandler.#ctor
  name: CloudFoundryOAuthHandler
  nameWithType: CloudFoundryOAuthHandler.CloudFoundryOAuthHandler
  fullName: Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthHandler.CloudFoundryOAuthHandler
- uid: Microsoft.Extensions.Options.IOptionsMonitor{Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions}
  commentId: T:Microsoft.Extensions.Options.IOptionsMonitor{Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions}
  parent: Microsoft.Extensions.Options
  definition: Microsoft.Extensions.Options.IOptionsMonitor`1
  name: IOptionsMonitor<CloudFoundryOAuthOptions>
  nameWithType: IOptionsMonitor<CloudFoundryOAuthOptions>
  fullName: Microsoft.Extensions.Options.IOptionsMonitor<Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions>
  nameWithType.vb: IOptionsMonitor(Of CloudFoundryOAuthOptions)
  fullName.vb: Microsoft.Extensions.Options.IOptionsMonitor(Of Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions)
  name.vb: IOptionsMonitor(Of CloudFoundryOAuthOptions)
  spec.csharp:
  - uid: Microsoft.Extensions.Options.IOptionsMonitor`1
    name: IOptionsMonitor
    nameWithType: IOptionsMonitor
    fullName: Microsoft.Extensions.Options.IOptionsMonitor
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions
    name: CloudFoundryOAuthOptions
    nameWithType: CloudFoundryOAuthOptions
    fullName: Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Extensions.Options.IOptionsMonitor`1
    name: IOptionsMonitor
    nameWithType: IOptionsMonitor
    fullName: Microsoft.Extensions.Options.IOptionsMonitor
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions
    name: CloudFoundryOAuthOptions
    nameWithType: CloudFoundryOAuthOptions
    fullName: Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.Logging.ILoggerFactory
  commentId: T:Microsoft.Extensions.Logging.ILoggerFactory
  parent: Microsoft.Extensions.Logging
  isExternal: true
  name: ILoggerFactory
  nameWithType: ILoggerFactory
  fullName: Microsoft.Extensions.Logging.ILoggerFactory
- uid: System.Text.Encodings.Web.UrlEncoder
  commentId: T:System.Text.Encodings.Web.UrlEncoder
  parent: System.Text.Encodings.Web
  isExternal: true
  name: UrlEncoder
  nameWithType: UrlEncoder
  fullName: System.Text.Encodings.Web.UrlEncoder
- uid: Microsoft.AspNetCore.Authentication.ISystemClock
  commentId: T:Microsoft.AspNetCore.Authentication.ISystemClock
  parent: Microsoft.AspNetCore.Authentication
  isExternal: true
  name: ISystemClock
  nameWithType: ISystemClock
  fullName: Microsoft.AspNetCore.Authentication.ISystemClock
- uid: Microsoft.Extensions.Options.IOptionsMonitor`1
  commentId: T:Microsoft.Extensions.Options.IOptionsMonitor`1
  isExternal: true
  name: IOptionsMonitor<TOptions>
  nameWithType: IOptionsMonitor<TOptions>
  fullName: Microsoft.Extensions.Options.IOptionsMonitor<TOptions>
  nameWithType.vb: IOptionsMonitor(Of TOptions)
  fullName.vb: Microsoft.Extensions.Options.IOptionsMonitor(Of TOptions)
  name.vb: IOptionsMonitor(Of TOptions)
  spec.csharp:
  - uid: Microsoft.Extensions.Options.IOptionsMonitor`1
    name: IOptionsMonitor
    nameWithType: IOptionsMonitor
    fullName: Microsoft.Extensions.Options.IOptionsMonitor
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TOptions
    nameWithType: TOptions
    fullName: TOptions
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Extensions.Options.IOptionsMonitor`1
    name: IOptionsMonitor
    nameWithType: IOptionsMonitor
    fullName: Microsoft.Extensions.Options.IOptionsMonitor
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TOptions
    nameWithType: TOptions
    fullName: TOptions
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.Options
  commentId: N:Microsoft.Extensions.Options
  isExternal: true
  name: Microsoft.Extensions.Options
  nameWithType: Microsoft.Extensions.Options
  fullName: Microsoft.Extensions.Options
- uid: Microsoft.Extensions.Logging
  commentId: N:Microsoft.Extensions.Logging
  isExternal: true
  name: Microsoft.Extensions.Logging
  nameWithType: Microsoft.Extensions.Logging
  fullName: Microsoft.Extensions.Logging
- uid: System.Text.Encodings.Web
  commentId: N:System.Text.Encodings.Web
  isExternal: true
  name: System.Text.Encodings.Web
  nameWithType: System.Text.Encodings.Web
  fullName: System.Text.Encodings.Web
- uid: Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthHandler.GetTokenInfoRequestParameters*
  commentId: Overload:Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthHandler.GetTokenInfoRequestParameters
  name: GetTokenInfoRequestParameters
  nameWithType: CloudFoundryOAuthHandler.GetTokenInfoRequestParameters
  fullName: Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthHandler.GetTokenInfoRequestParameters
- uid: Microsoft.AspNetCore.Authentication.OAuth.OAuthTokenResponse
  commentId: T:Microsoft.AspNetCore.Authentication.OAuth.OAuthTokenResponse
  parent: Microsoft.AspNetCore.Authentication.OAuth
  isExternal: true
  name: OAuthTokenResponse
  nameWithType: OAuthTokenResponse
  fullName: Microsoft.AspNetCore.Authentication.OAuth.OAuthTokenResponse
- uid: System.Collections.Generic.Dictionary{System.String,System.String}
  commentId: T:System.Collections.Generic.Dictionary{System.String,System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  name: Dictionary<String, String>
  nameWithType: Dictionary<String, String>
  fullName: System.Collections.Generic.Dictionary<System.String, System.String>
  nameWithType.vb: Dictionary(Of String, String)
  fullName.vb: System.Collections.Generic.Dictionary(Of System.String, System.String)
  name.vb: Dictionary(Of String, String)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Dictionary`2
  commentId: T:System.Collections.Generic.Dictionary`2
  isExternal: true
  name: Dictionary<TKey, TValue>
  nameWithType: Dictionary<TKey, TValue>
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>
  nameWithType.vb: Dictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue)
  name.vb: Dictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthHandler.GetTokenInfoRequestMessage*
  commentId: Overload:Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthHandler.GetTokenInfoRequestMessage
  name: GetTokenInfoRequestMessage
  nameWithType: CloudFoundryOAuthHandler.GetTokenInfoRequestMessage
  fullName: Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthHandler.GetTokenInfoRequestMessage
- uid: System.Net.Http.HttpRequestMessage
  commentId: T:System.Net.Http.HttpRequestMessage
  parent: System.Net.Http
  isExternal: true
  name: HttpRequestMessage
  nameWithType: HttpRequestMessage
  fullName: System.Net.Http.HttpRequestMessage
- uid: System.Net.Http
  commentId: N:System.Net.Http
  isExternal: true
  name: System.Net.Http
  nameWithType: System.Net.Http
  fullName: System.Net.Http
- uid: Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthHandler.GetEncoded*
  commentId: Overload:Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthHandler.GetEncoded
  name: GetEncoded
  nameWithType: CloudFoundryOAuthHandler.GetEncoded
  fullName: Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthHandler.GetEncoded
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthHandler.GetHttpClient*
  commentId: Overload:Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthHandler.GetHttpClient
  name: GetHttpClient
  nameWithType: CloudFoundryOAuthHandler.GetHttpClient
  fullName: Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthHandler.GetHttpClient
- uid: System.Net.Http.HttpClient
  commentId: T:System.Net.Http.HttpClient
  parent: System.Net.Http
  isExternal: true
  name: HttpClient
  nameWithType: HttpClient
  fullName: System.Net.Http.HttpClient
- uid: Microsoft.AspNetCore.Authentication.OAuth.OAuthHandler{Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions}.ExchangeCodeAsync(Microsoft.AspNetCore.Authentication.OAuth.OAuthCodeExchangeContext)
  commentId: M:Microsoft.AspNetCore.Authentication.OAuth.OAuthHandler{Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions}.ExchangeCodeAsync(Microsoft.AspNetCore.Authentication.OAuth.OAuthCodeExchangeContext)
  parent: Microsoft.AspNetCore.Authentication.OAuth.OAuthHandler{Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions}
  definition: Microsoft.AspNetCore.Authentication.OAuth.OAuthHandler`1.ExchangeCodeAsync(Microsoft.AspNetCore.Authentication.OAuth.OAuthCodeExchangeContext)
  name: ExchangeCodeAsync(OAuthCodeExchangeContext)
  nameWithType: OAuthHandler<CloudFoundryOAuthOptions>.ExchangeCodeAsync(OAuthCodeExchangeContext)
  fullName: Microsoft.AspNetCore.Authentication.OAuth.OAuthHandler<Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions>.ExchangeCodeAsync(Microsoft.AspNetCore.Authentication.OAuth.OAuthCodeExchangeContext)
  nameWithType.vb: OAuthHandler(Of CloudFoundryOAuthOptions).ExchangeCodeAsync(OAuthCodeExchangeContext)
  fullName.vb: Microsoft.AspNetCore.Authentication.OAuth.OAuthHandler(Of Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions).ExchangeCodeAsync(Microsoft.AspNetCore.Authentication.OAuth.OAuthCodeExchangeContext)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Authentication.OAuth.OAuthHandler`1.ExchangeCodeAsync(Microsoft.AspNetCore.Authentication.OAuth.OAuthCodeExchangeContext)
    name: ExchangeCodeAsync
    nameWithType: OAuthHandler<CloudFoundryOAuthOptions>.ExchangeCodeAsync
    fullName: Microsoft.AspNetCore.Authentication.OAuth.OAuthHandler<Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions>.ExchangeCodeAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Authentication.OAuth.OAuthCodeExchangeContext
    name: OAuthCodeExchangeContext
    nameWithType: OAuthCodeExchangeContext
    fullName: Microsoft.AspNetCore.Authentication.OAuth.OAuthCodeExchangeContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Authentication.OAuth.OAuthHandler`1.ExchangeCodeAsync(Microsoft.AspNetCore.Authentication.OAuth.OAuthCodeExchangeContext)
    name: ExchangeCodeAsync
    nameWithType: OAuthHandler(Of CloudFoundryOAuthOptions).ExchangeCodeAsync
    fullName: Microsoft.AspNetCore.Authentication.OAuth.OAuthHandler(Of Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions).ExchangeCodeAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Authentication.OAuth.OAuthCodeExchangeContext
    name: OAuthCodeExchangeContext
    nameWithType: OAuthCodeExchangeContext
    fullName: Microsoft.AspNetCore.Authentication.OAuth.OAuthCodeExchangeContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthHandler.ExchangeCodeAsync*
  commentId: Overload:Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthHandler.ExchangeCodeAsync
  name: ExchangeCodeAsync
  nameWithType: CloudFoundryOAuthHandler.ExchangeCodeAsync
  fullName: Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthHandler.ExchangeCodeAsync
- uid: Microsoft.AspNetCore.Authentication.OAuth.OAuthCodeExchangeContext
  commentId: T:Microsoft.AspNetCore.Authentication.OAuth.OAuthCodeExchangeContext
  parent: Microsoft.AspNetCore.Authentication.OAuth
  isExternal: true
  name: OAuthCodeExchangeContext
  nameWithType: OAuthCodeExchangeContext
  fullName: Microsoft.AspNetCore.Authentication.OAuth.OAuthCodeExchangeContext
- uid: System.Threading.Tasks.Task{Microsoft.AspNetCore.Authentication.OAuth.OAuthTokenResponse}
  commentId: T:System.Threading.Tasks.Task{Microsoft.AspNetCore.Authentication.OAuth.OAuthTokenResponse}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<OAuthTokenResponse>
  nameWithType: Task<OAuthTokenResponse>
  fullName: System.Threading.Tasks.Task<Microsoft.AspNetCore.Authentication.OAuth.OAuthTokenResponse>
  nameWithType.vb: Task(Of OAuthTokenResponse)
  fullName.vb: System.Threading.Tasks.Task(Of Microsoft.AspNetCore.Authentication.OAuth.OAuthTokenResponse)
  name.vb: Task(Of OAuthTokenResponse)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.AspNetCore.Authentication.OAuth.OAuthTokenResponse
    name: OAuthTokenResponse
    nameWithType: OAuthTokenResponse
    fullName: Microsoft.AspNetCore.Authentication.OAuth.OAuthTokenResponse
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.AspNetCore.Authentication.OAuth.OAuthTokenResponse
    name: OAuthTokenResponse
    nameWithType: OAuthTokenResponse
    fullName: Microsoft.AspNetCore.Authentication.OAuth.OAuthTokenResponse
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Authentication.OAuth.OAuthHandler`1.ExchangeCodeAsync(Microsoft.AspNetCore.Authentication.OAuth.OAuthCodeExchangeContext)
  commentId: M:Microsoft.AspNetCore.Authentication.OAuth.OAuthHandler`1.ExchangeCodeAsync(Microsoft.AspNetCore.Authentication.OAuth.OAuthCodeExchangeContext)
  isExternal: true
  name: ExchangeCodeAsync(OAuthCodeExchangeContext)
  nameWithType: OAuthHandler<TOptions>.ExchangeCodeAsync(OAuthCodeExchangeContext)
  fullName: Microsoft.AspNetCore.Authentication.OAuth.OAuthHandler<TOptions>.ExchangeCodeAsync(Microsoft.AspNetCore.Authentication.OAuth.OAuthCodeExchangeContext)
  nameWithType.vb: OAuthHandler(Of TOptions).ExchangeCodeAsync(OAuthCodeExchangeContext)
  fullName.vb: Microsoft.AspNetCore.Authentication.OAuth.OAuthHandler(Of TOptions).ExchangeCodeAsync(Microsoft.AspNetCore.Authentication.OAuth.OAuthCodeExchangeContext)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Authentication.OAuth.OAuthHandler`1.ExchangeCodeAsync(Microsoft.AspNetCore.Authentication.OAuth.OAuthCodeExchangeContext)
    name: ExchangeCodeAsync
    nameWithType: OAuthHandler<TOptions>.ExchangeCodeAsync
    fullName: Microsoft.AspNetCore.Authentication.OAuth.OAuthHandler<TOptions>.ExchangeCodeAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Authentication.OAuth.OAuthCodeExchangeContext
    name: OAuthCodeExchangeContext
    nameWithType: OAuthCodeExchangeContext
    fullName: Microsoft.AspNetCore.Authentication.OAuth.OAuthCodeExchangeContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Authentication.OAuth.OAuthHandler`1.ExchangeCodeAsync(Microsoft.AspNetCore.Authentication.OAuth.OAuthCodeExchangeContext)
    name: ExchangeCodeAsync
    nameWithType: OAuthHandler(Of TOptions).ExchangeCodeAsync
    fullName: Microsoft.AspNetCore.Authentication.OAuth.OAuthHandler(Of TOptions).ExchangeCodeAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Authentication.OAuth.OAuthCodeExchangeContext
    name: OAuthCodeExchangeContext
    nameWithType: OAuthCodeExchangeContext
    fullName: Microsoft.AspNetCore.Authentication.OAuth.OAuthCodeExchangeContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: Microsoft.AspNetCore.Authentication.OAuth.OAuthHandler{Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions}.CreateTicketAsync(System.Security.Claims.ClaimsIdentity,Microsoft.AspNetCore.Authentication.AuthenticationProperties,Microsoft.AspNetCore.Authentication.OAuth.OAuthTokenResponse)
  commentId: M:Microsoft.AspNetCore.Authentication.OAuth.OAuthHandler{Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions}.CreateTicketAsync(System.Security.Claims.ClaimsIdentity,Microsoft.AspNetCore.Authentication.AuthenticationProperties,Microsoft.AspNetCore.Authentication.OAuth.OAuthTokenResponse)
  parent: Microsoft.AspNetCore.Authentication.OAuth.OAuthHandler{Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions}
  definition: Microsoft.AspNetCore.Authentication.OAuth.OAuthHandler`1.CreateTicketAsync(System.Security.Claims.ClaimsIdentity,Microsoft.AspNetCore.Authentication.AuthenticationProperties,Microsoft.AspNetCore.Authentication.OAuth.OAuthTokenResponse)
  name: CreateTicketAsync(ClaimsIdentity, AuthenticationProperties, OAuthTokenResponse)
  nameWithType: OAuthHandler<CloudFoundryOAuthOptions>.CreateTicketAsync(ClaimsIdentity, AuthenticationProperties, OAuthTokenResponse)
  fullName: Microsoft.AspNetCore.Authentication.OAuth.OAuthHandler<Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions>.CreateTicketAsync(System.Security.Claims.ClaimsIdentity, Microsoft.AspNetCore.Authentication.AuthenticationProperties, Microsoft.AspNetCore.Authentication.OAuth.OAuthTokenResponse)
  nameWithType.vb: OAuthHandler(Of CloudFoundryOAuthOptions).CreateTicketAsync(ClaimsIdentity, AuthenticationProperties, OAuthTokenResponse)
  fullName.vb: Microsoft.AspNetCore.Authentication.OAuth.OAuthHandler(Of Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions).CreateTicketAsync(System.Security.Claims.ClaimsIdentity, Microsoft.AspNetCore.Authentication.AuthenticationProperties, Microsoft.AspNetCore.Authentication.OAuth.OAuthTokenResponse)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Authentication.OAuth.OAuthHandler`1.CreateTicketAsync(System.Security.Claims.ClaimsIdentity,Microsoft.AspNetCore.Authentication.AuthenticationProperties,Microsoft.AspNetCore.Authentication.OAuth.OAuthTokenResponse)
    name: CreateTicketAsync
    nameWithType: OAuthHandler<CloudFoundryOAuthOptions>.CreateTicketAsync
    fullName: Microsoft.AspNetCore.Authentication.OAuth.OAuthHandler<Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions>.CreateTicketAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Security.Claims.ClaimsIdentity
    name: ClaimsIdentity
    nameWithType: ClaimsIdentity
    fullName: System.Security.Claims.ClaimsIdentity
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.AspNetCore.Authentication.AuthenticationProperties
    name: AuthenticationProperties
    nameWithType: AuthenticationProperties
    fullName: Microsoft.AspNetCore.Authentication.AuthenticationProperties
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.AspNetCore.Authentication.OAuth.OAuthTokenResponse
    name: OAuthTokenResponse
    nameWithType: OAuthTokenResponse
    fullName: Microsoft.AspNetCore.Authentication.OAuth.OAuthTokenResponse
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Authentication.OAuth.OAuthHandler`1.CreateTicketAsync(System.Security.Claims.ClaimsIdentity,Microsoft.AspNetCore.Authentication.AuthenticationProperties,Microsoft.AspNetCore.Authentication.OAuth.OAuthTokenResponse)
    name: CreateTicketAsync
    nameWithType: OAuthHandler(Of CloudFoundryOAuthOptions).CreateTicketAsync
    fullName: Microsoft.AspNetCore.Authentication.OAuth.OAuthHandler(Of Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions).CreateTicketAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Security.Claims.ClaimsIdentity
    name: ClaimsIdentity
    nameWithType: ClaimsIdentity
    fullName: System.Security.Claims.ClaimsIdentity
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.AspNetCore.Authentication.AuthenticationProperties
    name: AuthenticationProperties
    nameWithType: AuthenticationProperties
    fullName: Microsoft.AspNetCore.Authentication.AuthenticationProperties
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.AspNetCore.Authentication.OAuth.OAuthTokenResponse
    name: OAuthTokenResponse
    nameWithType: OAuthTokenResponse
    fullName: Microsoft.AspNetCore.Authentication.OAuth.OAuthTokenResponse
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthHandler.CreateTicketAsync*
  commentId: Overload:Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthHandler.CreateTicketAsync
  name: CreateTicketAsync
  nameWithType: CloudFoundryOAuthHandler.CreateTicketAsync
  fullName: Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthHandler.CreateTicketAsync
- uid: System.Security.Claims.ClaimsIdentity
  commentId: T:System.Security.Claims.ClaimsIdentity
  parent: System.Security.Claims
  isExternal: true
  name: ClaimsIdentity
  nameWithType: ClaimsIdentity
  fullName: System.Security.Claims.ClaimsIdentity
- uid: Microsoft.AspNetCore.Authentication.AuthenticationProperties
  commentId: T:Microsoft.AspNetCore.Authentication.AuthenticationProperties
  parent: Microsoft.AspNetCore.Authentication
  isExternal: true
  name: AuthenticationProperties
  nameWithType: AuthenticationProperties
  fullName: Microsoft.AspNetCore.Authentication.AuthenticationProperties
- uid: System.Threading.Tasks.Task{Microsoft.AspNetCore.Authentication.AuthenticationTicket}
  commentId: T:System.Threading.Tasks.Task{Microsoft.AspNetCore.Authentication.AuthenticationTicket}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<AuthenticationTicket>
  nameWithType: Task<AuthenticationTicket>
  fullName: System.Threading.Tasks.Task<Microsoft.AspNetCore.Authentication.AuthenticationTicket>
  nameWithType.vb: Task(Of AuthenticationTicket)
  fullName.vb: System.Threading.Tasks.Task(Of Microsoft.AspNetCore.Authentication.AuthenticationTicket)
  name.vb: Task(Of AuthenticationTicket)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.AspNetCore.Authentication.AuthenticationTicket
    name: AuthenticationTicket
    nameWithType: AuthenticationTicket
    fullName: Microsoft.AspNetCore.Authentication.AuthenticationTicket
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.AspNetCore.Authentication.AuthenticationTicket
    name: AuthenticationTicket
    nameWithType: AuthenticationTicket
    fullName: Microsoft.AspNetCore.Authentication.AuthenticationTicket
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Authentication.OAuth.OAuthHandler`1.CreateTicketAsync(System.Security.Claims.ClaimsIdentity,Microsoft.AspNetCore.Authentication.AuthenticationProperties,Microsoft.AspNetCore.Authentication.OAuth.OAuthTokenResponse)
  commentId: M:Microsoft.AspNetCore.Authentication.OAuth.OAuthHandler`1.CreateTicketAsync(System.Security.Claims.ClaimsIdentity,Microsoft.AspNetCore.Authentication.AuthenticationProperties,Microsoft.AspNetCore.Authentication.OAuth.OAuthTokenResponse)
  isExternal: true
  name: CreateTicketAsync(ClaimsIdentity, AuthenticationProperties, OAuthTokenResponse)
  nameWithType: OAuthHandler<TOptions>.CreateTicketAsync(ClaimsIdentity, AuthenticationProperties, OAuthTokenResponse)
  fullName: Microsoft.AspNetCore.Authentication.OAuth.OAuthHandler<TOptions>.CreateTicketAsync(System.Security.Claims.ClaimsIdentity, Microsoft.AspNetCore.Authentication.AuthenticationProperties, Microsoft.AspNetCore.Authentication.OAuth.OAuthTokenResponse)
  nameWithType.vb: OAuthHandler(Of TOptions).CreateTicketAsync(ClaimsIdentity, AuthenticationProperties, OAuthTokenResponse)
  fullName.vb: Microsoft.AspNetCore.Authentication.OAuth.OAuthHandler(Of TOptions).CreateTicketAsync(System.Security.Claims.ClaimsIdentity, Microsoft.AspNetCore.Authentication.AuthenticationProperties, Microsoft.AspNetCore.Authentication.OAuth.OAuthTokenResponse)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Authentication.OAuth.OAuthHandler`1.CreateTicketAsync(System.Security.Claims.ClaimsIdentity,Microsoft.AspNetCore.Authentication.AuthenticationProperties,Microsoft.AspNetCore.Authentication.OAuth.OAuthTokenResponse)
    name: CreateTicketAsync
    nameWithType: OAuthHandler<TOptions>.CreateTicketAsync
    fullName: Microsoft.AspNetCore.Authentication.OAuth.OAuthHandler<TOptions>.CreateTicketAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Security.Claims.ClaimsIdentity
    name: ClaimsIdentity
    nameWithType: ClaimsIdentity
    fullName: System.Security.Claims.ClaimsIdentity
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.AspNetCore.Authentication.AuthenticationProperties
    name: AuthenticationProperties
    nameWithType: AuthenticationProperties
    fullName: Microsoft.AspNetCore.Authentication.AuthenticationProperties
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.AspNetCore.Authentication.OAuth.OAuthTokenResponse
    name: OAuthTokenResponse
    nameWithType: OAuthTokenResponse
    fullName: Microsoft.AspNetCore.Authentication.OAuth.OAuthTokenResponse
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Authentication.OAuth.OAuthHandler`1.CreateTicketAsync(System.Security.Claims.ClaimsIdentity,Microsoft.AspNetCore.Authentication.AuthenticationProperties,Microsoft.AspNetCore.Authentication.OAuth.OAuthTokenResponse)
    name: CreateTicketAsync
    nameWithType: OAuthHandler(Of TOptions).CreateTicketAsync
    fullName: Microsoft.AspNetCore.Authentication.OAuth.OAuthHandler(Of TOptions).CreateTicketAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Security.Claims.ClaimsIdentity
    name: ClaimsIdentity
    nameWithType: ClaimsIdentity
    fullName: System.Security.Claims.ClaimsIdentity
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.AspNetCore.Authentication.AuthenticationProperties
    name: AuthenticationProperties
    nameWithType: AuthenticationProperties
    fullName: Microsoft.AspNetCore.Authentication.AuthenticationProperties
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.AspNetCore.Authentication.OAuth.OAuthTokenResponse
    name: OAuthTokenResponse
    nameWithType: OAuthTokenResponse
    fullName: Microsoft.AspNetCore.Authentication.OAuth.OAuthTokenResponse
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Security.Claims
  commentId: N:System.Security.Claims
  isExternal: true
  name: System.Security.Claims
  nameWithType: System.Security.Claims
  fullName: System.Security.Claims
- uid: Microsoft.AspNetCore.Authentication.OAuth.OAuthHandler{Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions}.BuildChallengeUrl(Microsoft.AspNetCore.Authentication.AuthenticationProperties,System.String)
  commentId: M:Microsoft.AspNetCore.Authentication.OAuth.OAuthHandler{Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions}.BuildChallengeUrl(Microsoft.AspNetCore.Authentication.AuthenticationProperties,System.String)
  parent: Microsoft.AspNetCore.Authentication.OAuth.OAuthHandler{Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions}
  definition: Microsoft.AspNetCore.Authentication.OAuth.OAuthHandler`1.BuildChallengeUrl(Microsoft.AspNetCore.Authentication.AuthenticationProperties,System.String)
  name: BuildChallengeUrl(AuthenticationProperties, String)
  nameWithType: OAuthHandler<CloudFoundryOAuthOptions>.BuildChallengeUrl(AuthenticationProperties, String)
  fullName: Microsoft.AspNetCore.Authentication.OAuth.OAuthHandler<Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions>.BuildChallengeUrl(Microsoft.AspNetCore.Authentication.AuthenticationProperties, System.String)
  nameWithType.vb: OAuthHandler(Of CloudFoundryOAuthOptions).BuildChallengeUrl(AuthenticationProperties, String)
  fullName.vb: Microsoft.AspNetCore.Authentication.OAuth.OAuthHandler(Of Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions).BuildChallengeUrl(Microsoft.AspNetCore.Authentication.AuthenticationProperties, System.String)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Authentication.OAuth.OAuthHandler`1.BuildChallengeUrl(Microsoft.AspNetCore.Authentication.AuthenticationProperties,System.String)
    name: BuildChallengeUrl
    nameWithType: OAuthHandler<CloudFoundryOAuthOptions>.BuildChallengeUrl
    fullName: Microsoft.AspNetCore.Authentication.OAuth.OAuthHandler<Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions>.BuildChallengeUrl
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Authentication.AuthenticationProperties
    name: AuthenticationProperties
    nameWithType: AuthenticationProperties
    fullName: Microsoft.AspNetCore.Authentication.AuthenticationProperties
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Authentication.OAuth.OAuthHandler`1.BuildChallengeUrl(Microsoft.AspNetCore.Authentication.AuthenticationProperties,System.String)
    name: BuildChallengeUrl
    nameWithType: OAuthHandler(Of CloudFoundryOAuthOptions).BuildChallengeUrl
    fullName: Microsoft.AspNetCore.Authentication.OAuth.OAuthHandler(Of Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthOptions).BuildChallengeUrl
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Authentication.AuthenticationProperties
    name: AuthenticationProperties
    nameWithType: AuthenticationProperties
    fullName: Microsoft.AspNetCore.Authentication.AuthenticationProperties
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthHandler.BuildChallengeUrl*
  commentId: Overload:Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthHandler.BuildChallengeUrl
  name: BuildChallengeUrl
  nameWithType: CloudFoundryOAuthHandler.BuildChallengeUrl
  fullName: Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryOAuthHandler.BuildChallengeUrl
- uid: Microsoft.AspNetCore.Authentication.OAuth.OAuthHandler`1.BuildChallengeUrl(Microsoft.AspNetCore.Authentication.AuthenticationProperties,System.String)
  commentId: M:Microsoft.AspNetCore.Authentication.OAuth.OAuthHandler`1.BuildChallengeUrl(Microsoft.AspNetCore.Authentication.AuthenticationProperties,System.String)
  isExternal: true
  name: BuildChallengeUrl(AuthenticationProperties, String)
  nameWithType: OAuthHandler<TOptions>.BuildChallengeUrl(AuthenticationProperties, String)
  fullName: Microsoft.AspNetCore.Authentication.OAuth.OAuthHandler<TOptions>.BuildChallengeUrl(Microsoft.AspNetCore.Authentication.AuthenticationProperties, System.String)
  nameWithType.vb: OAuthHandler(Of TOptions).BuildChallengeUrl(AuthenticationProperties, String)
  fullName.vb: Microsoft.AspNetCore.Authentication.OAuth.OAuthHandler(Of TOptions).BuildChallengeUrl(Microsoft.AspNetCore.Authentication.AuthenticationProperties, System.String)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Authentication.OAuth.OAuthHandler`1.BuildChallengeUrl(Microsoft.AspNetCore.Authentication.AuthenticationProperties,System.String)
    name: BuildChallengeUrl
    nameWithType: OAuthHandler<TOptions>.BuildChallengeUrl
    fullName: Microsoft.AspNetCore.Authentication.OAuth.OAuthHandler<TOptions>.BuildChallengeUrl
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Authentication.AuthenticationProperties
    name: AuthenticationProperties
    nameWithType: AuthenticationProperties
    fullName: Microsoft.AspNetCore.Authentication.AuthenticationProperties
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Authentication.OAuth.OAuthHandler`1.BuildChallengeUrl(Microsoft.AspNetCore.Authentication.AuthenticationProperties,System.String)
    name: BuildChallengeUrl
    nameWithType: OAuthHandler(Of TOptions).BuildChallengeUrl
    fullName: Microsoft.AspNetCore.Authentication.OAuth.OAuthHandler(Of TOptions).BuildChallengeUrl
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Authentication.AuthenticationProperties
    name: AuthenticationProperties
    nameWithType: AuthenticationProperties
    fullName: Microsoft.AspNetCore.Authentication.AuthenticationProperties
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
