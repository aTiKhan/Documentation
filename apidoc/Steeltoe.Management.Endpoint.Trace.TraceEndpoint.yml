### YamlMime:ManagedReference
items:
- uid: Steeltoe.Management.Endpoint.Trace.TraceEndpoint
  commentId: T:Steeltoe.Management.Endpoint.Trace.TraceEndpoint
  id: TraceEndpoint
  parent: Steeltoe.Management.Endpoint.Trace
  children:
  - Steeltoe.Management.Endpoint.Trace.TraceEndpoint.#ctor(Steeltoe.Management.Endpoint.Trace.ITraceOptions,Steeltoe.Management.Endpoint.Trace.ITraceRepository,ILogger{Steeltoe.Management.Endpoint.Trace.TraceEndpoint})
  - Steeltoe.Management.Endpoint.Trace.TraceEndpoint.DoInvoke(Steeltoe.Management.Endpoint.Trace.ITraceRepository)
  - Steeltoe.Management.Endpoint.Trace.TraceEndpoint.Invoke
  - Steeltoe.Management.Endpoint.Trace.TraceEndpoint.Options
  langs:
  - csharp
  - vb
  name: TraceEndpoint
  nameWithType: TraceEndpoint
  fullName: Steeltoe.Management.Endpoint.Trace.TraceEndpoint
  type: Class
  source:
    remote:
      path: src/Management/src/EndpointBase/Trace/TraceEndpoint.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: TraceEndpoint
    path: ../Steeltoe/src/Management/src/EndpointBase/Trace/TraceEndpoint.cs
    startLine: 10
  assemblies:
  - Steeltoe.Management.EndpointBase
  namespace: Steeltoe.Management.Endpoint.Trace
  syntax:
    content: 'public class TraceEndpoint : AbstractEndpoint<List<TraceResult>>, IEndpoint<List<TraceResult>>, IEndpoint'
    content.vb: >-
      Public Class TraceEndpoint

          Inherits AbstractEndpoint(Of List(Of TraceResult))

          Implements IEndpoint(Of List(Of TraceResult)), IEndpoint
  inheritance:
  - System.Object
  - Steeltoe.Management.AbstractEndpoint
  - Steeltoe.Management.AbstractEndpoint{System.Collections.Generic.List{Steeltoe.Management.Endpoint.Trace.TraceResult}}
  implements:
  - Steeltoe.Management.IEndpoint{System.Collections.Generic.List{Steeltoe.Management.Endpoint.Trace.TraceResult}}
  - Steeltoe.Management.IEndpoint
  inheritedMembers:
  - Steeltoe.Management.AbstractEndpoint.options
  - Steeltoe.Management.AbstractEndpoint.Id
  - Steeltoe.Management.AbstractEndpoint.Enabled
  - Steeltoe.Management.AbstractEndpoint.Path
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - Steeltoe.Management.IEndpoint.Steeltoe.Management.Endpoint.EndPointExtensions.IsEnabled(Steeltoe.Management.IManagementOptions)
  - Steeltoe.Management.IEndpoint.Steeltoe.Management.Endpoint.EndPointExtensions.IsExposed(Steeltoe.Management.IManagementOptions)
  - Steeltoe.Management.IEndpoint.Steeltoe.Management.Endpoint.EndPointExtensions.ShouldInvoke(Steeltoe.Management.IManagementOptions,ILogger)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Steeltoe.Management.Endpoint.Trace.TraceEndpoint.#ctor(Steeltoe.Management.Endpoint.Trace.ITraceOptions,Steeltoe.Management.Endpoint.Trace.ITraceRepository,ILogger{Steeltoe.Management.Endpoint.Trace.TraceEndpoint})
  commentId: M:Steeltoe.Management.Endpoint.Trace.TraceEndpoint.#ctor(Steeltoe.Management.Endpoint.Trace.ITraceOptions,Steeltoe.Management.Endpoint.Trace.ITraceRepository,ILogger{Steeltoe.Management.Endpoint.Trace.TraceEndpoint})
  id: '#ctor(Steeltoe.Management.Endpoint.Trace.ITraceOptions,Steeltoe.Management.Endpoint.Trace.ITraceRepository,ILogger{Steeltoe.Management.Endpoint.Trace.TraceEndpoint})'
  parent: Steeltoe.Management.Endpoint.Trace.TraceEndpoint
  langs:
  - csharp
  - vb
  name: TraceEndpoint(ITraceOptions, ITraceRepository, ILogger<TraceEndpoint>)
  nameWithType: TraceEndpoint.TraceEndpoint(ITraceOptions, ITraceRepository, ILogger<TraceEndpoint>)
  fullName: Steeltoe.Management.Endpoint.Trace.TraceEndpoint.TraceEndpoint(Steeltoe.Management.Endpoint.Trace.ITraceOptions, Steeltoe.Management.Endpoint.Trace.ITraceRepository, ILogger<Steeltoe.Management.Endpoint.Trace.TraceEndpoint>)
  type: Constructor
  source:
    remote:
      path: src/Management/src/EndpointBase/Trace/TraceEndpoint.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: .ctor
    path: ../Steeltoe/src/Management/src/EndpointBase/Trace/TraceEndpoint.cs
    startLine: 15
  assemblies:
  - Steeltoe.Management.EndpointBase
  namespace: Steeltoe.Management.Endpoint.Trace
  syntax:
    content: public TraceEndpoint(ITraceOptions options, ITraceRepository traceRepository, ILogger<TraceEndpoint> logger = null)
    parameters:
    - id: options
      type: Steeltoe.Management.Endpoint.Trace.ITraceOptions
    - id: traceRepository
      type: Steeltoe.Management.Endpoint.Trace.ITraceRepository
    - id: logger
      type: ILogger{Steeltoe.Management.Endpoint.Trace.TraceEndpoint}
    content.vb: Public Sub New(options As ITraceOptions, traceRepository As ITraceRepository, logger As ILogger(Of TraceEndpoint) = Nothing)
  overload: Steeltoe.Management.Endpoint.Trace.TraceEndpoint.#ctor*
  nameWithType.vb: TraceEndpoint.TraceEndpoint(ITraceOptions, ITraceRepository, ILogger(Of TraceEndpoint))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Steeltoe.Management.Endpoint.Trace.TraceEndpoint.TraceEndpoint(Steeltoe.Management.Endpoint.Trace.ITraceOptions, Steeltoe.Management.Endpoint.Trace.ITraceRepository, ILogger(Of Steeltoe.Management.Endpoint.Trace.TraceEndpoint))
  name.vb: TraceEndpoint(ITraceOptions, ITraceRepository, ILogger(Of TraceEndpoint))
- uid: Steeltoe.Management.Endpoint.Trace.TraceEndpoint.Options
  commentId: P:Steeltoe.Management.Endpoint.Trace.TraceEndpoint.Options
  id: Options
  parent: Steeltoe.Management.Endpoint.Trace.TraceEndpoint
  langs:
  - csharp
  - vb
  name: Options
  nameWithType: TraceEndpoint.Options
  fullName: Steeltoe.Management.Endpoint.Trace.TraceEndpoint.Options
  type: Property
  source:
    remote:
      path: src/Management/src/EndpointBase/Trace/TraceEndpoint.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Options
    path: ../Steeltoe/src/Management/src/EndpointBase/Trace/TraceEndpoint.cs
    startLine: 22
  assemblies:
  - Steeltoe.Management.EndpointBase
  namespace: Steeltoe.Management.Endpoint.Trace
  syntax:
    content: public ITraceOptions Options { get; }
    parameters: []
    return:
      type: Steeltoe.Management.Endpoint.Trace.ITraceOptions
    content.vb: Public ReadOnly Property Options As ITraceOptions
  overload: Steeltoe.Management.Endpoint.Trace.TraceEndpoint.Options*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Steeltoe.Management.Endpoint.Trace.TraceEndpoint.Invoke
  commentId: M:Steeltoe.Management.Endpoint.Trace.TraceEndpoint.Invoke
  id: Invoke
  parent: Steeltoe.Management.Endpoint.Trace.TraceEndpoint
  langs:
  - csharp
  - vb
  name: Invoke()
  nameWithType: TraceEndpoint.Invoke()
  fullName: Steeltoe.Management.Endpoint.Trace.TraceEndpoint.Invoke()
  type: Method
  source:
    remote:
      path: src/Management/src/EndpointBase/Trace/TraceEndpoint.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Invoke
    path: ../Steeltoe/src/Management/src/EndpointBase/Trace/TraceEndpoint.cs
    startLine: 30
  assemblies:
  - Steeltoe.Management.EndpointBase
  namespace: Steeltoe.Management.Endpoint.Trace
  syntax:
    content: public override List<TraceResult> Invoke()
    return:
      type: System.Collections.Generic.List{Steeltoe.Management.Endpoint.Trace.TraceResult}
    content.vb: Public Overrides Function Invoke As List(Of TraceResult)
  overridden: Steeltoe.Management.AbstractEndpoint{System.Collections.Generic.List{Steeltoe.Management.Endpoint.Trace.TraceResult}}.Invoke
  overload: Steeltoe.Management.Endpoint.Trace.TraceEndpoint.Invoke*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Steeltoe.Management.Endpoint.Trace.TraceEndpoint.DoInvoke(Steeltoe.Management.Endpoint.Trace.ITraceRepository)
  commentId: M:Steeltoe.Management.Endpoint.Trace.TraceEndpoint.DoInvoke(Steeltoe.Management.Endpoint.Trace.ITraceRepository)
  id: DoInvoke(Steeltoe.Management.Endpoint.Trace.ITraceRepository)
  parent: Steeltoe.Management.Endpoint.Trace.TraceEndpoint
  langs:
  - csharp
  - vb
  name: DoInvoke(ITraceRepository)
  nameWithType: TraceEndpoint.DoInvoke(ITraceRepository)
  fullName: Steeltoe.Management.Endpoint.Trace.TraceEndpoint.DoInvoke(Steeltoe.Management.Endpoint.Trace.ITraceRepository)
  type: Method
  source:
    remote:
      path: src/Management/src/EndpointBase/Trace/TraceEndpoint.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: DoInvoke
    path: ../Steeltoe/src/Management/src/EndpointBase/Trace/TraceEndpoint.cs
    startLine: 35
  assemblies:
  - Steeltoe.Management.EndpointBase
  namespace: Steeltoe.Management.Endpoint.Trace
  syntax:
    content: public List<TraceResult> DoInvoke(ITraceRepository repo)
    parameters:
    - id: repo
      type: Steeltoe.Management.Endpoint.Trace.ITraceRepository
    return:
      type: System.Collections.Generic.List{Steeltoe.Management.Endpoint.Trace.TraceResult}
    content.vb: Public Function DoInvoke(repo As ITraceRepository) As List(Of TraceResult)
  overload: Steeltoe.Management.Endpoint.Trace.TraceEndpoint.DoInvoke*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Steeltoe.Management.Endpoint.Trace
  commentId: N:Steeltoe.Management.Endpoint.Trace
  name: Steeltoe.Management.Endpoint.Trace
  nameWithType: Steeltoe.Management.Endpoint.Trace
  fullName: Steeltoe.Management.Endpoint.Trace
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Steeltoe.Management.AbstractEndpoint
  commentId: T:Steeltoe.Management.AbstractEndpoint
  parent: Steeltoe.Management
  name: AbstractEndpoint
  nameWithType: AbstractEndpoint
  fullName: Steeltoe.Management.AbstractEndpoint
- uid: Steeltoe.Management.AbstractEndpoint{System.Collections.Generic.List{Steeltoe.Management.Endpoint.Trace.TraceResult}}
  commentId: T:Steeltoe.Management.AbstractEndpoint{System.Collections.Generic.List{Steeltoe.Management.Endpoint.Trace.TraceResult}}
  parent: Steeltoe.Management
  definition: Steeltoe.Management.AbstractEndpoint`1
  name: AbstractEndpoint<List<TraceResult>>
  nameWithType: AbstractEndpoint<List<TraceResult>>
  fullName: Steeltoe.Management.AbstractEndpoint<System.Collections.Generic.List<Steeltoe.Management.Endpoint.Trace.TraceResult>>
  nameWithType.vb: AbstractEndpoint(Of List(Of TraceResult))
  fullName.vb: Steeltoe.Management.AbstractEndpoint(Of System.Collections.Generic.List(Of Steeltoe.Management.Endpoint.Trace.TraceResult))
  name.vb: AbstractEndpoint(Of List(Of TraceResult))
  spec.csharp:
  - uid: Steeltoe.Management.AbstractEndpoint`1
    name: AbstractEndpoint
    nameWithType: AbstractEndpoint
    fullName: Steeltoe.Management.AbstractEndpoint
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Steeltoe.Management.Endpoint.Trace.TraceResult
    name: TraceResult
    nameWithType: TraceResult
    fullName: Steeltoe.Management.Endpoint.Trace.TraceResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Steeltoe.Management.AbstractEndpoint`1
    name: AbstractEndpoint
    nameWithType: AbstractEndpoint
    fullName: Steeltoe.Management.AbstractEndpoint
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Steeltoe.Management.Endpoint.Trace.TraceResult
    name: TraceResult
    nameWithType: TraceResult
    fullName: Steeltoe.Management.Endpoint.Trace.TraceResult
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Management.IEndpoint{System.Collections.Generic.List{Steeltoe.Management.Endpoint.Trace.TraceResult}}
  commentId: T:Steeltoe.Management.IEndpoint{System.Collections.Generic.List{Steeltoe.Management.Endpoint.Trace.TraceResult}}
  parent: Steeltoe.Management
  definition: Steeltoe.Management.IEndpoint`1
  name: IEndpoint<List<TraceResult>>
  nameWithType: IEndpoint<List<TraceResult>>
  fullName: Steeltoe.Management.IEndpoint<System.Collections.Generic.List<Steeltoe.Management.Endpoint.Trace.TraceResult>>
  nameWithType.vb: IEndpoint(Of List(Of TraceResult))
  fullName.vb: Steeltoe.Management.IEndpoint(Of System.Collections.Generic.List(Of Steeltoe.Management.Endpoint.Trace.TraceResult))
  name.vb: IEndpoint(Of List(Of TraceResult))
  spec.csharp:
  - uid: Steeltoe.Management.IEndpoint`1
    name: IEndpoint
    nameWithType: IEndpoint
    fullName: Steeltoe.Management.IEndpoint
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Steeltoe.Management.Endpoint.Trace.TraceResult
    name: TraceResult
    nameWithType: TraceResult
    fullName: Steeltoe.Management.Endpoint.Trace.TraceResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Steeltoe.Management.IEndpoint`1
    name: IEndpoint
    nameWithType: IEndpoint
    fullName: Steeltoe.Management.IEndpoint
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Steeltoe.Management.Endpoint.Trace.TraceResult
    name: TraceResult
    nameWithType: TraceResult
    fullName: Steeltoe.Management.Endpoint.Trace.TraceResult
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Management.IEndpoint
  commentId: T:Steeltoe.Management.IEndpoint
  parent: Steeltoe.Management
  name: IEndpoint
  nameWithType: IEndpoint
  fullName: Steeltoe.Management.IEndpoint
- uid: Steeltoe.Management.AbstractEndpoint.options
  commentId: F:Steeltoe.Management.AbstractEndpoint.options
  parent: Steeltoe.Management.AbstractEndpoint
  name: options
  nameWithType: AbstractEndpoint.options
  fullName: Steeltoe.Management.AbstractEndpoint.options
- uid: Steeltoe.Management.AbstractEndpoint.Id
  commentId: P:Steeltoe.Management.AbstractEndpoint.Id
  parent: Steeltoe.Management.AbstractEndpoint
  name: Id
  nameWithType: AbstractEndpoint.Id
  fullName: Steeltoe.Management.AbstractEndpoint.Id
- uid: Steeltoe.Management.AbstractEndpoint.Enabled
  commentId: P:Steeltoe.Management.AbstractEndpoint.Enabled
  parent: Steeltoe.Management.AbstractEndpoint
  name: Enabled
  nameWithType: AbstractEndpoint.Enabled
  fullName: Steeltoe.Management.AbstractEndpoint.Enabled
- uid: Steeltoe.Management.AbstractEndpoint.Path
  commentId: P:Steeltoe.Management.AbstractEndpoint.Path
  parent: Steeltoe.Management.AbstractEndpoint
  name: Path
  nameWithType: AbstractEndpoint.Path
  fullName: Steeltoe.Management.AbstractEndpoint.Path
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Management.IEndpoint.Steeltoe.Management.Endpoint.EndPointExtensions.IsEnabled(Steeltoe.Management.IManagementOptions)
  commentId: M:Steeltoe.Management.Endpoint.EndPointExtensions.IsEnabled(Steeltoe.Management.IEndpoint,Steeltoe.Management.IManagementOptions)
  parent: Steeltoe.Management.Endpoint.EndPointExtensions
  definition: Steeltoe.Management.Endpoint.EndPointExtensions.IsEnabled(Steeltoe.Management.IEndpoint,Steeltoe.Management.IManagementOptions)
  name: IsEnabled(IManagementOptions)
  nameWithType: EndPointExtensions.IsEnabled(IManagementOptions)
  fullName: Steeltoe.Management.Endpoint.EndPointExtensions.IsEnabled(Steeltoe.Management.IManagementOptions)
  spec.csharp:
  - uid: Steeltoe.Management.Endpoint.EndPointExtensions.IsEnabled(Steeltoe.Management.IManagementOptions)
    name: IsEnabled
    nameWithType: EndPointExtensions.IsEnabled
    fullName: Steeltoe.Management.Endpoint.EndPointExtensions.IsEnabled
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Management.IManagementOptions
    name: IManagementOptions
    nameWithType: IManagementOptions
    fullName: Steeltoe.Management.IManagementOptions
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Management.Endpoint.EndPointExtensions.IsEnabled(Steeltoe.Management.IManagementOptions)
    name: IsEnabled
    nameWithType: EndPointExtensions.IsEnabled
    fullName: Steeltoe.Management.Endpoint.EndPointExtensions.IsEnabled
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Management.IManagementOptions
    name: IManagementOptions
    nameWithType: IManagementOptions
    fullName: Steeltoe.Management.IManagementOptions
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Management.IEndpoint.Steeltoe.Management.Endpoint.EndPointExtensions.IsExposed(Steeltoe.Management.IManagementOptions)
  commentId: M:Steeltoe.Management.Endpoint.EndPointExtensions.IsExposed(Steeltoe.Management.IEndpoint,Steeltoe.Management.IManagementOptions)
  parent: Steeltoe.Management.Endpoint.EndPointExtensions
  definition: Steeltoe.Management.Endpoint.EndPointExtensions.IsExposed(Steeltoe.Management.IEndpoint,Steeltoe.Management.IManagementOptions)
  name: IsExposed(IManagementOptions)
  nameWithType: EndPointExtensions.IsExposed(IManagementOptions)
  fullName: Steeltoe.Management.Endpoint.EndPointExtensions.IsExposed(Steeltoe.Management.IManagementOptions)
  spec.csharp:
  - uid: Steeltoe.Management.Endpoint.EndPointExtensions.IsExposed(Steeltoe.Management.IManagementOptions)
    name: IsExposed
    nameWithType: EndPointExtensions.IsExposed
    fullName: Steeltoe.Management.Endpoint.EndPointExtensions.IsExposed
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Management.IManagementOptions
    name: IManagementOptions
    nameWithType: IManagementOptions
    fullName: Steeltoe.Management.IManagementOptions
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Management.Endpoint.EndPointExtensions.IsExposed(Steeltoe.Management.IManagementOptions)
    name: IsExposed
    nameWithType: EndPointExtensions.IsExposed
    fullName: Steeltoe.Management.Endpoint.EndPointExtensions.IsExposed
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Management.IManagementOptions
    name: IManagementOptions
    nameWithType: IManagementOptions
    fullName: Steeltoe.Management.IManagementOptions
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Management.IEndpoint.Steeltoe.Management.Endpoint.EndPointExtensions.ShouldInvoke(Steeltoe.Management.IManagementOptions,ILogger)
  commentId: M:Steeltoe.Management.Endpoint.EndPointExtensions.ShouldInvoke(Steeltoe.Management.IEndpoint,Steeltoe.Management.IManagementOptions,ILogger)
  parent: Steeltoe.Management.Endpoint.EndPointExtensions
  definition: Steeltoe.Management.Endpoint.EndPointExtensions.ShouldInvoke(Steeltoe.Management.IEndpoint,Steeltoe.Management.IManagementOptions,ILogger)
  name: ShouldInvoke(IManagementOptions, ILogger)
  nameWithType: EndPointExtensions.ShouldInvoke(IManagementOptions, ILogger)
  fullName: Steeltoe.Management.Endpoint.EndPointExtensions.ShouldInvoke(Steeltoe.Management.IManagementOptions, ILogger)
  spec.csharp:
  - uid: Steeltoe.Management.Endpoint.EndPointExtensions.ShouldInvoke(Steeltoe.Management.IManagementOptions,ILogger)
    name: ShouldInvoke
    nameWithType: EndPointExtensions.ShouldInvoke
    fullName: Steeltoe.Management.Endpoint.EndPointExtensions.ShouldInvoke
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Management.IManagementOptions
    name: IManagementOptions
    nameWithType: IManagementOptions
    fullName: Steeltoe.Management.IManagementOptions
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: ILogger
    name: ILogger
    nameWithType: ILogger
    fullName: ILogger
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Management.Endpoint.EndPointExtensions.ShouldInvoke(Steeltoe.Management.IManagementOptions,ILogger)
    name: ShouldInvoke
    nameWithType: EndPointExtensions.ShouldInvoke
    fullName: Steeltoe.Management.Endpoint.EndPointExtensions.ShouldInvoke
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Management.IManagementOptions
    name: IManagementOptions
    nameWithType: IManagementOptions
    fullName: Steeltoe.Management.IManagementOptions
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: ILogger
    name: ILogger
    nameWithType: ILogger
    fullName: ILogger
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Steeltoe.Management
  commentId: N:Steeltoe.Management
  name: Steeltoe.Management
  nameWithType: Steeltoe.Management
  fullName: Steeltoe.Management
- uid: Steeltoe.Management.AbstractEndpoint`1
  commentId: T:Steeltoe.Management.AbstractEndpoint`1
  name: AbstractEndpoint<TResult>
  nameWithType: AbstractEndpoint<TResult>
  fullName: Steeltoe.Management.AbstractEndpoint<TResult>
  nameWithType.vb: AbstractEndpoint(Of TResult)
  fullName.vb: Steeltoe.Management.AbstractEndpoint(Of TResult)
  name.vb: AbstractEndpoint(Of TResult)
  spec.csharp:
  - uid: Steeltoe.Management.AbstractEndpoint`1
    name: AbstractEndpoint
    nameWithType: AbstractEndpoint
    fullName: Steeltoe.Management.AbstractEndpoint
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Steeltoe.Management.AbstractEndpoint`1
    name: AbstractEndpoint
    nameWithType: AbstractEndpoint
    fullName: Steeltoe.Management.AbstractEndpoint
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Management.IEndpoint`1
  commentId: T:Steeltoe.Management.IEndpoint`1
  name: IEndpoint<TResult>
  nameWithType: IEndpoint<TResult>
  fullName: Steeltoe.Management.IEndpoint<TResult>
  nameWithType.vb: IEndpoint(Of TResult)
  fullName.vb: Steeltoe.Management.IEndpoint(Of TResult)
  name.vb: IEndpoint(Of TResult)
  spec.csharp:
  - uid: Steeltoe.Management.IEndpoint`1
    name: IEndpoint
    nameWithType: IEndpoint
    fullName: Steeltoe.Management.IEndpoint
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Steeltoe.Management.IEndpoint`1
    name: IEndpoint
    nameWithType: IEndpoint
    fullName: Steeltoe.Management.IEndpoint
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Management.Endpoint.EndPointExtensions.IsEnabled(Steeltoe.Management.IEndpoint,Steeltoe.Management.IManagementOptions)
  commentId: M:Steeltoe.Management.Endpoint.EndPointExtensions.IsEnabled(Steeltoe.Management.IEndpoint,Steeltoe.Management.IManagementOptions)
  name: IsEnabled(IEndpoint, IManagementOptions)
  nameWithType: EndPointExtensions.IsEnabled(IEndpoint, IManagementOptions)
  fullName: Steeltoe.Management.Endpoint.EndPointExtensions.IsEnabled(Steeltoe.Management.IEndpoint, Steeltoe.Management.IManagementOptions)
  spec.csharp:
  - uid: Steeltoe.Management.Endpoint.EndPointExtensions.IsEnabled(Steeltoe.Management.IEndpoint,Steeltoe.Management.IManagementOptions)
    name: IsEnabled
    nameWithType: EndPointExtensions.IsEnabled
    fullName: Steeltoe.Management.Endpoint.EndPointExtensions.IsEnabled
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Management.IEndpoint
    name: IEndpoint
    nameWithType: IEndpoint
    fullName: Steeltoe.Management.IEndpoint
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Management.IManagementOptions
    name: IManagementOptions
    nameWithType: IManagementOptions
    fullName: Steeltoe.Management.IManagementOptions
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Management.Endpoint.EndPointExtensions.IsEnabled(Steeltoe.Management.IEndpoint,Steeltoe.Management.IManagementOptions)
    name: IsEnabled
    nameWithType: EndPointExtensions.IsEnabled
    fullName: Steeltoe.Management.Endpoint.EndPointExtensions.IsEnabled
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Management.IEndpoint
    name: IEndpoint
    nameWithType: IEndpoint
    fullName: Steeltoe.Management.IEndpoint
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Management.IManagementOptions
    name: IManagementOptions
    nameWithType: IManagementOptions
    fullName: Steeltoe.Management.IManagementOptions
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Management.Endpoint.EndPointExtensions
  commentId: T:Steeltoe.Management.Endpoint.EndPointExtensions
  parent: Steeltoe.Management.Endpoint
  name: EndPointExtensions
  nameWithType: EndPointExtensions
  fullName: Steeltoe.Management.Endpoint.EndPointExtensions
- uid: Steeltoe.Management.Endpoint.EndPointExtensions.IsExposed(Steeltoe.Management.IEndpoint,Steeltoe.Management.IManagementOptions)
  commentId: M:Steeltoe.Management.Endpoint.EndPointExtensions.IsExposed(Steeltoe.Management.IEndpoint,Steeltoe.Management.IManagementOptions)
  name: IsExposed(IEndpoint, IManagementOptions)
  nameWithType: EndPointExtensions.IsExposed(IEndpoint, IManagementOptions)
  fullName: Steeltoe.Management.Endpoint.EndPointExtensions.IsExposed(Steeltoe.Management.IEndpoint, Steeltoe.Management.IManagementOptions)
  spec.csharp:
  - uid: Steeltoe.Management.Endpoint.EndPointExtensions.IsExposed(Steeltoe.Management.IEndpoint,Steeltoe.Management.IManagementOptions)
    name: IsExposed
    nameWithType: EndPointExtensions.IsExposed
    fullName: Steeltoe.Management.Endpoint.EndPointExtensions.IsExposed
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Management.IEndpoint
    name: IEndpoint
    nameWithType: IEndpoint
    fullName: Steeltoe.Management.IEndpoint
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Management.IManagementOptions
    name: IManagementOptions
    nameWithType: IManagementOptions
    fullName: Steeltoe.Management.IManagementOptions
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Management.Endpoint.EndPointExtensions.IsExposed(Steeltoe.Management.IEndpoint,Steeltoe.Management.IManagementOptions)
    name: IsExposed
    nameWithType: EndPointExtensions.IsExposed
    fullName: Steeltoe.Management.Endpoint.EndPointExtensions.IsExposed
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Management.IEndpoint
    name: IEndpoint
    nameWithType: IEndpoint
    fullName: Steeltoe.Management.IEndpoint
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Management.IManagementOptions
    name: IManagementOptions
    nameWithType: IManagementOptions
    fullName: Steeltoe.Management.IManagementOptions
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Management.Endpoint.EndPointExtensions.ShouldInvoke(Steeltoe.Management.IEndpoint,Steeltoe.Management.IManagementOptions,ILogger)
  commentId: M:Steeltoe.Management.Endpoint.EndPointExtensions.ShouldInvoke(Steeltoe.Management.IEndpoint,Steeltoe.Management.IManagementOptions,ILogger)
  isExternal: true
  name: ShouldInvoke(IEndpoint, IManagementOptions, ILogger)
  nameWithType: EndPointExtensions.ShouldInvoke(IEndpoint, IManagementOptions, ILogger)
  fullName: Steeltoe.Management.Endpoint.EndPointExtensions.ShouldInvoke(Steeltoe.Management.IEndpoint, Steeltoe.Management.IManagementOptions, ILogger)
  spec.csharp:
  - uid: Steeltoe.Management.Endpoint.EndPointExtensions.ShouldInvoke(Steeltoe.Management.IEndpoint,Steeltoe.Management.IManagementOptions,ILogger)
    name: ShouldInvoke
    nameWithType: EndPointExtensions.ShouldInvoke
    fullName: Steeltoe.Management.Endpoint.EndPointExtensions.ShouldInvoke
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Management.IEndpoint
    name: IEndpoint
    nameWithType: IEndpoint
    fullName: Steeltoe.Management.IEndpoint
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Management.IManagementOptions
    name: IManagementOptions
    nameWithType: IManagementOptions
    fullName: Steeltoe.Management.IManagementOptions
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: ILogger
    name: ILogger
    nameWithType: ILogger
    fullName: ILogger
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Management.Endpoint.EndPointExtensions.ShouldInvoke(Steeltoe.Management.IEndpoint,Steeltoe.Management.IManagementOptions,ILogger)
    name: ShouldInvoke
    nameWithType: EndPointExtensions.ShouldInvoke
    fullName: Steeltoe.Management.Endpoint.EndPointExtensions.ShouldInvoke
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Management.IEndpoint
    name: IEndpoint
    nameWithType: IEndpoint
    fullName: Steeltoe.Management.IEndpoint
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Management.IManagementOptions
    name: IManagementOptions
    nameWithType: IManagementOptions
    fullName: Steeltoe.Management.IManagementOptions
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: ILogger
    name: ILogger
    nameWithType: ILogger
    fullName: ILogger
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Management.Endpoint
  commentId: N:Steeltoe.Management.Endpoint
  name: Steeltoe.Management.Endpoint
  nameWithType: Steeltoe.Management.Endpoint
  fullName: Steeltoe.Management.Endpoint
- uid: Steeltoe.Management.Endpoint.Trace.TraceEndpoint.#ctor*
  commentId: Overload:Steeltoe.Management.Endpoint.Trace.TraceEndpoint.#ctor
  name: TraceEndpoint
  nameWithType: TraceEndpoint.TraceEndpoint
  fullName: Steeltoe.Management.Endpoint.Trace.TraceEndpoint.TraceEndpoint
- uid: Steeltoe.Management.Endpoint.Trace.ITraceOptions
  commentId: T:Steeltoe.Management.Endpoint.Trace.ITraceOptions
  parent: Steeltoe.Management.Endpoint.Trace
  name: ITraceOptions
  nameWithType: ITraceOptions
  fullName: Steeltoe.Management.Endpoint.Trace.ITraceOptions
- uid: Steeltoe.Management.Endpoint.Trace.ITraceRepository
  commentId: T:Steeltoe.Management.Endpoint.Trace.ITraceRepository
  parent: Steeltoe.Management.Endpoint.Trace
  name: ITraceRepository
  nameWithType: ITraceRepository
  fullName: Steeltoe.Management.Endpoint.Trace.ITraceRepository
- uid: ILogger{Steeltoe.Management.Endpoint.Trace.TraceEndpoint}
  commentId: '!:ILogger{Steeltoe.Management.Endpoint.Trace.TraceEndpoint}'
  definition: ILogger`1
  name: ILogger<TraceEndpoint>
  nameWithType: ILogger<TraceEndpoint>
  fullName: ILogger<Steeltoe.Management.Endpoint.Trace.TraceEndpoint>
  nameWithType.vb: ILogger(Of TraceEndpoint)
  fullName.vb: ILogger(Of Steeltoe.Management.Endpoint.Trace.TraceEndpoint)
  name.vb: ILogger(Of TraceEndpoint)
  spec.csharp:
  - uid: ILogger`1
    name: ILogger
    nameWithType: ILogger
    fullName: ILogger
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Steeltoe.Management.Endpoint.Trace.TraceEndpoint
    name: TraceEndpoint
    nameWithType: TraceEndpoint
    fullName: Steeltoe.Management.Endpoint.Trace.TraceEndpoint
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: ILogger`1
    name: ILogger
    nameWithType: ILogger
    fullName: ILogger
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Steeltoe.Management.Endpoint.Trace.TraceEndpoint
    name: TraceEndpoint
    nameWithType: TraceEndpoint
    fullName: Steeltoe.Management.Endpoint.Trace.TraceEndpoint
  - name: )
    nameWithType: )
    fullName: )
- uid: ILogger`1
  isExternal: true
  name: ILogger<>
  nameWithType: ILogger<>
  fullName: ILogger<>
  nameWithType.vb: ILogger(Of )
  fullName.vb: ILogger(Of )
  name.vb: ILogger(Of )
  spec.csharp:
  - uid: ILogger`1
    name: ILogger
    nameWithType: ILogger
    fullName: ILogger
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: ILogger`1
    name: ILogger
    nameWithType: ILogger
    fullName: ILogger
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Management.Endpoint.Trace.TraceEndpoint.Options*
  commentId: Overload:Steeltoe.Management.Endpoint.Trace.TraceEndpoint.Options
  name: Options
  nameWithType: TraceEndpoint.Options
  fullName: Steeltoe.Management.Endpoint.Trace.TraceEndpoint.Options
- uid: Steeltoe.Management.AbstractEndpoint{System.Collections.Generic.List{Steeltoe.Management.Endpoint.Trace.TraceResult}}.Invoke
  commentId: M:Steeltoe.Management.AbstractEndpoint{System.Collections.Generic.List{Steeltoe.Management.Endpoint.Trace.TraceResult}}.Invoke
  parent: Steeltoe.Management.AbstractEndpoint{System.Collections.Generic.List{Steeltoe.Management.Endpoint.Trace.TraceResult}}
  definition: Steeltoe.Management.AbstractEndpoint`1.Invoke
  name: Invoke()
  nameWithType: AbstractEndpoint<List<TraceResult>>.Invoke()
  fullName: Steeltoe.Management.AbstractEndpoint<System.Collections.Generic.List<Steeltoe.Management.Endpoint.Trace.TraceResult>>.Invoke()
  nameWithType.vb: AbstractEndpoint(Of List(Of TraceResult)).Invoke()
  fullName.vb: Steeltoe.Management.AbstractEndpoint(Of System.Collections.Generic.List(Of Steeltoe.Management.Endpoint.Trace.TraceResult)).Invoke()
  spec.csharp:
  - uid: Steeltoe.Management.AbstractEndpoint`1.Invoke
    name: Invoke
    nameWithType: AbstractEndpoint<List<TraceResult>>.Invoke
    fullName: Steeltoe.Management.AbstractEndpoint<System.Collections.Generic.List<Steeltoe.Management.Endpoint.Trace.TraceResult>>.Invoke
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Management.AbstractEndpoint`1.Invoke
    name: Invoke
    nameWithType: AbstractEndpoint(Of List(Of TraceResult)).Invoke
    fullName: Steeltoe.Management.AbstractEndpoint(Of System.Collections.Generic.List(Of Steeltoe.Management.Endpoint.Trace.TraceResult)).Invoke
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Management.Endpoint.Trace.TraceEndpoint.Invoke*
  commentId: Overload:Steeltoe.Management.Endpoint.Trace.TraceEndpoint.Invoke
  name: Invoke
  nameWithType: TraceEndpoint.Invoke
  fullName: Steeltoe.Management.Endpoint.Trace.TraceEndpoint.Invoke
- uid: System.Collections.Generic.List{Steeltoe.Management.Endpoint.Trace.TraceResult}
  commentId: T:System.Collections.Generic.List{Steeltoe.Management.Endpoint.Trace.TraceResult}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<TraceResult>
  nameWithType: List<TraceResult>
  fullName: System.Collections.Generic.List<Steeltoe.Management.Endpoint.Trace.TraceResult>
  nameWithType.vb: List(Of TraceResult)
  fullName.vb: System.Collections.Generic.List(Of Steeltoe.Management.Endpoint.Trace.TraceResult)
  name.vb: List(Of TraceResult)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Steeltoe.Management.Endpoint.Trace.TraceResult
    name: TraceResult
    nameWithType: TraceResult
    fullName: Steeltoe.Management.Endpoint.Trace.TraceResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Steeltoe.Management.Endpoint.Trace.TraceResult
    name: TraceResult
    nameWithType: TraceResult
    fullName: Steeltoe.Management.Endpoint.Trace.TraceResult
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Management.AbstractEndpoint`1.Invoke
  commentId: M:Steeltoe.Management.AbstractEndpoint`1.Invoke
  name: Invoke()
  nameWithType: AbstractEndpoint<TResult>.Invoke()
  fullName: Steeltoe.Management.AbstractEndpoint<TResult>.Invoke()
  nameWithType.vb: AbstractEndpoint(Of TResult).Invoke()
  fullName.vb: Steeltoe.Management.AbstractEndpoint(Of TResult).Invoke()
  spec.csharp:
  - uid: Steeltoe.Management.AbstractEndpoint`1.Invoke
    name: Invoke
    nameWithType: AbstractEndpoint<TResult>.Invoke
    fullName: Steeltoe.Management.AbstractEndpoint<TResult>.Invoke
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Management.AbstractEndpoint`1.Invoke
    name: Invoke
    nameWithType: AbstractEndpoint(Of TResult).Invoke
    fullName: Steeltoe.Management.AbstractEndpoint(Of TResult).Invoke
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Steeltoe.Management.Endpoint.Trace.TraceEndpoint.DoInvoke*
  commentId: Overload:Steeltoe.Management.Endpoint.Trace.TraceEndpoint.DoInvoke
  name: DoInvoke
  nameWithType: TraceEndpoint.DoInvoke
  fullName: Steeltoe.Management.Endpoint.Trace.TraceEndpoint.DoInvoke
