### YamlMime:ManagedReference
items:
- uid: Steeltoe.Messaging.Converter.NewtonJsonMessageConverter
  commentId: T:Steeltoe.Messaging.Converter.NewtonJsonMessageConverter
  id: NewtonJsonMessageConverter
  parent: Steeltoe.Messaging.Converter
  children:
  - Steeltoe.Messaging.Converter.NewtonJsonMessageConverter.#ctor
  - Steeltoe.Messaging.Converter.NewtonJsonMessageConverter.#ctor(Steeltoe.Common.Util.MimeType[])
  - Steeltoe.Messaging.Converter.NewtonJsonMessageConverter.CanConvertFrom(Steeltoe.Messaging.IMessage,System.Type)
  - Steeltoe.Messaging.Converter.NewtonJsonMessageConverter.CanConvertTo(System.Object,Steeltoe.Messaging.IMessageHeaders)
  - Steeltoe.Messaging.Converter.NewtonJsonMessageConverter.ConvertFromInternal(Steeltoe.Messaging.IMessage,System.Type,System.Object)
  - Steeltoe.Messaging.Converter.NewtonJsonMessageConverter.ConvertToInternal(System.Object,Steeltoe.Messaging.IMessageHeaders,System.Object)
  - Steeltoe.Messaging.Converter.NewtonJsonMessageConverter.DEFAULT_SERVICE_NAME
  - Steeltoe.Messaging.Converter.NewtonJsonMessageConverter.GetIMessageGenericType(System.Type)
  - Steeltoe.Messaging.Converter.NewtonJsonMessageConverter.GetJsonEncoding(Steeltoe.Common.Util.MimeType)
  - Steeltoe.Messaging.Converter.NewtonJsonMessageConverter.GetTargetType(System.Type,System.Object)
  - Steeltoe.Messaging.Converter.NewtonJsonMessageConverter.IsIMessageGenericType(System.Type)
  - Steeltoe.Messaging.Converter.NewtonJsonMessageConverter.ServiceName
  - Steeltoe.Messaging.Converter.NewtonJsonMessageConverter.Settings
  - Steeltoe.Messaging.Converter.NewtonJsonMessageConverter.Supports(System.Type)
  langs:
  - csharp
  - vb
  name: NewtonJsonMessageConverter
  nameWithType: NewtonJsonMessageConverter
  fullName: Steeltoe.Messaging.Converter.NewtonJsonMessageConverter
  type: Class
  source:
    remote:
      path: src/Messaging/src/MessagingBase/Converter/NewtonJsonMessageConverter.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: NewtonJsonMessageConverter
    path: ../Steeltoe/src/Messaging/src/MessagingBase/Converter/NewtonJsonMessageConverter.cs
    startLine: 15
  assemblies:
  - Steeltoe.Messaging.MessagingBase
  namespace: Steeltoe.Messaging.Converter
  syntax:
    content: 'public class NewtonJsonMessageConverter : AbstractMessageConverter, ISmartMessageConverter, IMessageConverter, IServiceNameAware'
    content.vb: >-
      Public Class NewtonJsonMessageConverter

          Inherits AbstractMessageConverter

          Implements ISmartMessageConverter, IMessageConverter, IServiceNameAware
  inheritance:
  - System.Object
  - Steeltoe.Messaging.Converter.AbstractMessageConverter
  derivedClasses:
  - Steeltoe.Stream.Converter.ApplicationJsonMessageMarshallingConverter
  implements:
  - Steeltoe.Messaging.Converter.ISmartMessageConverter
  - Steeltoe.Messaging.Converter.IMessageConverter
  - IServiceNameAware
  inheritedMembers:
  - Steeltoe.Messaging.Converter.AbstractMessageConverter.SupportedMimeTypes
  - Steeltoe.Messaging.Converter.AbstractMessageConverter.ContentTypeResolver
  - Steeltoe.Messaging.Converter.AbstractMessageConverter.StrictContentTypeMatch
  - Steeltoe.Messaging.Converter.AbstractMessageConverter.SerializedPayloadClass
  - Steeltoe.Messaging.Converter.AbstractMessageConverter.FromMessage``1(Steeltoe.Messaging.IMessage)
  - Steeltoe.Messaging.Converter.AbstractMessageConverter.FromMessage``1(Steeltoe.Messaging.IMessage,System.Object)
  - Steeltoe.Messaging.Converter.AbstractMessageConverter.FromMessage(Steeltoe.Messaging.IMessage,System.Type)
  - Steeltoe.Messaging.Converter.AbstractMessageConverter.FromMessage(Steeltoe.Messaging.IMessage,System.Type,System.Object)
  - Steeltoe.Messaging.Converter.AbstractMessageConverter.ToMessage(System.Object,Steeltoe.Messaging.IMessageHeaders)
  - Steeltoe.Messaging.Converter.AbstractMessageConverter.ToMessage(System.Object,Steeltoe.Messaging.IMessageHeaders,System.Object)
  - Steeltoe.Messaging.Converter.AbstractMessageConverter.GetDefaultContentType(System.Object)
  - Steeltoe.Messaging.Converter.AbstractMessageConverter.SupportsMimeType(Steeltoe.Messaging.IMessageHeaders)
  - Steeltoe.Messaging.Converter.AbstractMessageConverter.GetMimeType(Steeltoe.Messaging.IMessageHeaders)
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Steeltoe.Messaging.Converter.NewtonJsonMessageConverter.DEFAULT_SERVICE_NAME
  commentId: F:Steeltoe.Messaging.Converter.NewtonJsonMessageConverter.DEFAULT_SERVICE_NAME
  id: DEFAULT_SERVICE_NAME
  parent: Steeltoe.Messaging.Converter.NewtonJsonMessageConverter
  langs:
  - csharp
  - vb
  name: DEFAULT_SERVICE_NAME
  nameWithType: NewtonJsonMessageConverter.DEFAULT_SERVICE_NAME
  fullName: Steeltoe.Messaging.Converter.NewtonJsonMessageConverter.DEFAULT_SERVICE_NAME
  type: Field
  source:
    remote:
      path: src/Messaging/src/MessagingBase/Converter/NewtonJsonMessageConverter.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: DEFAULT_SERVICE_NAME
    path: ../Steeltoe/src/Messaging/src/MessagingBase/Converter/NewtonJsonMessageConverter.cs
    startLine: 17
  assemblies:
  - Steeltoe.Messaging.MessagingBase
  namespace: Steeltoe.Messaging.Converter
  syntax:
    content: public const string DEFAULT_SERVICE_NAME = "NewtonJsonMessageConverter"
    return:
      type: System.String
    content.vb: Public Const DEFAULT_SERVICE_NAME As String = "NewtonJsonMessageConverter"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Steeltoe.Messaging.Converter.NewtonJsonMessageConverter.Settings
  commentId: P:Steeltoe.Messaging.Converter.NewtonJsonMessageConverter.Settings
  id: Settings
  parent: Steeltoe.Messaging.Converter.NewtonJsonMessageConverter
  langs:
  - csharp
  - vb
  name: Settings
  nameWithType: NewtonJsonMessageConverter.Settings
  fullName: Steeltoe.Messaging.Converter.NewtonJsonMessageConverter.Settings
  type: Property
  source:
    remote:
      path: src/Messaging/src/MessagingBase/Converter/NewtonJsonMessageConverter.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Settings
    path: ../Steeltoe/src/Messaging/src/MessagingBase/Converter/NewtonJsonMessageConverter.cs
    startLine: 19
  assemblies:
  - Steeltoe.Messaging.MessagingBase
  namespace: Steeltoe.Messaging.Converter
  syntax:
    content: public JsonSerializerSettings Settings { get; }
    parameters: []
    return:
      type: Newtonsoft.Json.JsonSerializerSettings
    content.vb: Public ReadOnly Property Settings As JsonSerializerSettings
  overload: Steeltoe.Messaging.Converter.NewtonJsonMessageConverter.Settings*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Steeltoe.Messaging.Converter.NewtonJsonMessageConverter.ServiceName
  commentId: P:Steeltoe.Messaging.Converter.NewtonJsonMessageConverter.ServiceName
  id: ServiceName
  parent: Steeltoe.Messaging.Converter.NewtonJsonMessageConverter
  langs:
  - csharp
  - vb
  name: ServiceName
  nameWithType: NewtonJsonMessageConverter.ServiceName
  fullName: Steeltoe.Messaging.Converter.NewtonJsonMessageConverter.ServiceName
  type: Property
  source:
    remote:
      path: src/Messaging/src/MessagingBase/Converter/NewtonJsonMessageConverter.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: ServiceName
    path: ../Steeltoe/src/Messaging/src/MessagingBase/Converter/NewtonJsonMessageConverter.cs
    startLine: 21
  assemblies:
  - Steeltoe.Messaging.MessagingBase
  namespace: Steeltoe.Messaging.Converter
  syntax:
    content: public override string ServiceName { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Overrides Property ServiceName As String
  overridden: Steeltoe.Messaging.Converter.AbstractMessageConverter.ServiceName
  overload: Steeltoe.Messaging.Converter.NewtonJsonMessageConverter.ServiceName*
  modifiers.csharp:
  - public
  - override
  - get
  - set
  modifiers.vb:
  - Public
  - Overrides
- uid: Steeltoe.Messaging.Converter.NewtonJsonMessageConverter.#ctor
  commentId: M:Steeltoe.Messaging.Converter.NewtonJsonMessageConverter.#ctor
  id: '#ctor'
  parent: Steeltoe.Messaging.Converter.NewtonJsonMessageConverter
  langs:
  - csharp
  - vb
  name: NewtonJsonMessageConverter()
  nameWithType: NewtonJsonMessageConverter.NewtonJsonMessageConverter()
  fullName: Steeltoe.Messaging.Converter.NewtonJsonMessageConverter.NewtonJsonMessageConverter()
  type: Constructor
  source:
    remote:
      path: src/Messaging/src/MessagingBase/Converter/NewtonJsonMessageConverter.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: .ctor
    path: ../Steeltoe/src/Messaging/src/MessagingBase/Converter/NewtonJsonMessageConverter.cs
    startLine: 23
  assemblies:
  - Steeltoe.Messaging.MessagingBase
  namespace: Steeltoe.Messaging.Converter
  syntax:
    content: public NewtonJsonMessageConverter()
    content.vb: Public Sub New
  overload: Steeltoe.Messaging.Converter.NewtonJsonMessageConverter.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Steeltoe.Messaging.Converter.NewtonJsonMessageConverter.#ctor(Steeltoe.Common.Util.MimeType[])
  commentId: M:Steeltoe.Messaging.Converter.NewtonJsonMessageConverter.#ctor(Steeltoe.Common.Util.MimeType[])
  id: '#ctor(Steeltoe.Common.Util.MimeType[])'
  parent: Steeltoe.Messaging.Converter.NewtonJsonMessageConverter
  langs:
  - csharp
  - vb
  name: NewtonJsonMessageConverter(MimeType[])
  nameWithType: NewtonJsonMessageConverter.NewtonJsonMessageConverter(MimeType[])
  fullName: Steeltoe.Messaging.Converter.NewtonJsonMessageConverter.NewtonJsonMessageConverter(Steeltoe.Common.Util.MimeType[])
  type: Constructor
  source:
    remote:
      path: src/Messaging/src/MessagingBase/Converter/NewtonJsonMessageConverter.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: .ctor
    path: ../Steeltoe/src/Messaging/src/MessagingBase/Converter/NewtonJsonMessageConverter.cs
    startLine: 34
  assemblies:
  - Steeltoe.Messaging.MessagingBase
  namespace: Steeltoe.Messaging.Converter
  syntax:
    content: public NewtonJsonMessageConverter(params MimeType[] supportedMimeTypes)
    parameters:
    - id: supportedMimeTypes
      type: Steeltoe.Common.Util.MimeType[]
    content.vb: Public Sub New(ParamArray supportedMimeTypes As MimeType())
  overload: Steeltoe.Messaging.Converter.NewtonJsonMessageConverter.#ctor*
  nameWithType.vb: NewtonJsonMessageConverter.NewtonJsonMessageConverter(MimeType())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Steeltoe.Messaging.Converter.NewtonJsonMessageConverter.NewtonJsonMessageConverter(Steeltoe.Common.Util.MimeType())
  name.vb: NewtonJsonMessageConverter(MimeType())
- uid: Steeltoe.Messaging.Converter.NewtonJsonMessageConverter.CanConvertFrom(Steeltoe.Messaging.IMessage,System.Type)
  commentId: M:Steeltoe.Messaging.Converter.NewtonJsonMessageConverter.CanConvertFrom(Steeltoe.Messaging.IMessage,System.Type)
  id: CanConvertFrom(Steeltoe.Messaging.IMessage,System.Type)
  parent: Steeltoe.Messaging.Converter.NewtonJsonMessageConverter
  langs:
  - csharp
  - vb
  name: CanConvertFrom(IMessage, Type)
  nameWithType: NewtonJsonMessageConverter.CanConvertFrom(IMessage, Type)
  fullName: Steeltoe.Messaging.Converter.NewtonJsonMessageConverter.CanConvertFrom(Steeltoe.Messaging.IMessage, System.Type)
  type: Method
  source:
    remote:
      path: src/Messaging/src/MessagingBase/Converter/NewtonJsonMessageConverter.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: CanConvertFrom
    path: ../Steeltoe/src/Messaging/src/MessagingBase/Converter/NewtonJsonMessageConverter.cs
    startLine: 45
  assemblies:
  - Steeltoe.Messaging.MessagingBase
  namespace: Steeltoe.Messaging.Converter
  syntax:
    content: public override bool CanConvertFrom(IMessage message, Type targetClass)
    parameters:
    - id: message
      type: Steeltoe.Messaging.IMessage
    - id: targetClass
      type: System.Type
    return:
      type: System.Boolean
    content.vb: Public Overrides Function CanConvertFrom(message As IMessage, targetClass As Type) As Boolean
  overridden: Steeltoe.Messaging.Converter.AbstractMessageConverter.CanConvertFrom(Steeltoe.Messaging.IMessage,System.Type)
  overload: Steeltoe.Messaging.Converter.NewtonJsonMessageConverter.CanConvertFrom*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Steeltoe.Messaging.Converter.NewtonJsonMessageConverter.CanConvertTo(System.Object,Steeltoe.Messaging.IMessageHeaders)
  commentId: M:Steeltoe.Messaging.Converter.NewtonJsonMessageConverter.CanConvertTo(System.Object,Steeltoe.Messaging.IMessageHeaders)
  id: CanConvertTo(System.Object,Steeltoe.Messaging.IMessageHeaders)
  parent: Steeltoe.Messaging.Converter.NewtonJsonMessageConverter
  langs:
  - csharp
  - vb
  name: CanConvertTo(Object, IMessageHeaders)
  nameWithType: NewtonJsonMessageConverter.CanConvertTo(Object, IMessageHeaders)
  fullName: Steeltoe.Messaging.Converter.NewtonJsonMessageConverter.CanConvertTo(System.Object, Steeltoe.Messaging.IMessageHeaders)
  type: Method
  source:
    remote:
      path: src/Messaging/src/MessagingBase/Converter/NewtonJsonMessageConverter.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: CanConvertTo
    path: ../Steeltoe/src/Messaging/src/MessagingBase/Converter/NewtonJsonMessageConverter.cs
    startLine: 55
  assemblies:
  - Steeltoe.Messaging.MessagingBase
  namespace: Steeltoe.Messaging.Converter
  syntax:
    content: public override bool CanConvertTo(object payload, IMessageHeaders headers = null)
    parameters:
    - id: payload
      type: System.Object
    - id: headers
      type: Steeltoe.Messaging.IMessageHeaders
    return:
      type: System.Boolean
    content.vb: Public Overrides Function CanConvertTo(payload As Object, headers As IMessageHeaders = Nothing) As Boolean
  overridden: Steeltoe.Messaging.Converter.AbstractMessageConverter.CanConvertTo(System.Object,Steeltoe.Messaging.IMessageHeaders)
  overload: Steeltoe.Messaging.Converter.NewtonJsonMessageConverter.CanConvertTo*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Steeltoe.Messaging.Converter.NewtonJsonMessageConverter.IsIMessageGenericType(System.Type)
  commentId: M:Steeltoe.Messaging.Converter.NewtonJsonMessageConverter.IsIMessageGenericType(System.Type)
  id: IsIMessageGenericType(System.Type)
  parent: Steeltoe.Messaging.Converter.NewtonJsonMessageConverter
  langs:
  - csharp
  - vb
  name: IsIMessageGenericType(Type)
  nameWithType: NewtonJsonMessageConverter.IsIMessageGenericType(Type)
  fullName: Steeltoe.Messaging.Converter.NewtonJsonMessageConverter.IsIMessageGenericType(System.Type)
  type: Method
  source:
    remote:
      path: src/Messaging/src/MessagingBase/Converter/NewtonJsonMessageConverter.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: IsIMessageGenericType
    path: ../Steeltoe/src/Messaging/src/MessagingBase/Converter/NewtonJsonMessageConverter.cs
    startLine: 65
  assemblies:
  - Steeltoe.Messaging.MessagingBase
  namespace: Steeltoe.Messaging.Converter
  syntax:
    content: protected bool IsIMessageGenericType(Type type)
    parameters:
    - id: type
      type: System.Type
    return:
      type: System.Boolean
    content.vb: Protected Function IsIMessageGenericType(type As Type) As Boolean
  overload: Steeltoe.Messaging.Converter.NewtonJsonMessageConverter.IsIMessageGenericType*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Steeltoe.Messaging.Converter.NewtonJsonMessageConverter.GetIMessageGenericType(System.Type)
  commentId: M:Steeltoe.Messaging.Converter.NewtonJsonMessageConverter.GetIMessageGenericType(System.Type)
  id: GetIMessageGenericType(System.Type)
  parent: Steeltoe.Messaging.Converter.NewtonJsonMessageConverter
  langs:
  - csharp
  - vb
  name: GetIMessageGenericType(Type)
  nameWithType: NewtonJsonMessageConverter.GetIMessageGenericType(Type)
  fullName: Steeltoe.Messaging.Converter.NewtonJsonMessageConverter.GetIMessageGenericType(System.Type)
  type: Method
  source:
    remote:
      path: src/Messaging/src/MessagingBase/Converter/NewtonJsonMessageConverter.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: GetIMessageGenericType
    path: ../Steeltoe/src/Messaging/src/MessagingBase/Converter/NewtonJsonMessageConverter.cs
    startLine: 70
  assemblies:
  - Steeltoe.Messaging.MessagingBase
  namespace: Steeltoe.Messaging.Converter
  syntax:
    content: protected Type GetIMessageGenericType(Type type)
    parameters:
    - id: type
      type: System.Type
    return:
      type: System.Type
    content.vb: Protected Function GetIMessageGenericType(type As Type) As Type
  overload: Steeltoe.Messaging.Converter.NewtonJsonMessageConverter.GetIMessageGenericType*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Steeltoe.Messaging.Converter.NewtonJsonMessageConverter.GetTargetType(System.Type,System.Object)
  commentId: M:Steeltoe.Messaging.Converter.NewtonJsonMessageConverter.GetTargetType(System.Type,System.Object)
  id: GetTargetType(System.Type,System.Object)
  parent: Steeltoe.Messaging.Converter.NewtonJsonMessageConverter
  langs:
  - csharp
  - vb
  name: GetTargetType(Type, Object)
  nameWithType: NewtonJsonMessageConverter.GetTargetType(Type, Object)
  fullName: Steeltoe.Messaging.Converter.NewtonJsonMessageConverter.GetTargetType(System.Type, System.Object)
  type: Method
  source:
    remote:
      path: src/Messaging/src/MessagingBase/Converter/NewtonJsonMessageConverter.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: GetTargetType
    path: ../Steeltoe/src/Messaging/src/MessagingBase/Converter/NewtonJsonMessageConverter.cs
    startLine: 102
  assemblies:
  - Steeltoe.Messaging.MessagingBase
  namespace: Steeltoe.Messaging.Converter
  syntax:
    content: protected Type GetTargetType(Type targetClass, object conversionHint)
    parameters:
    - id: targetClass
      type: System.Type
    - id: conversionHint
      type: System.Object
    return:
      type: System.Type
    content.vb: Protected Function GetTargetType(targetClass As Type, conversionHint As Object) As Type
  overload: Steeltoe.Messaging.Converter.NewtonJsonMessageConverter.GetTargetType*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Steeltoe.Messaging.Converter.NewtonJsonMessageConverter.ConvertFromInternal(Steeltoe.Messaging.IMessage,System.Type,System.Object)
  commentId: M:Steeltoe.Messaging.Converter.NewtonJsonMessageConverter.ConvertFromInternal(Steeltoe.Messaging.IMessage,System.Type,System.Object)
  id: ConvertFromInternal(Steeltoe.Messaging.IMessage,System.Type,System.Object)
  parent: Steeltoe.Messaging.Converter.NewtonJsonMessageConverter
  langs:
  - csharp
  - vb
  name: ConvertFromInternal(IMessage, Type, Object)
  nameWithType: NewtonJsonMessageConverter.ConvertFromInternal(IMessage, Type, Object)
  fullName: Steeltoe.Messaging.Converter.NewtonJsonMessageConverter.ConvertFromInternal(Steeltoe.Messaging.IMessage, System.Type, System.Object)
  type: Method
  source:
    remote:
      path: src/Messaging/src/MessagingBase/Converter/NewtonJsonMessageConverter.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: ConvertFromInternal
    path: ../Steeltoe/src/Messaging/src/MessagingBase/Converter/NewtonJsonMessageConverter.cs
    startLine: 119
  assemblies:
  - Steeltoe.Messaging.MessagingBase
  namespace: Steeltoe.Messaging.Converter
  syntax:
    content: protected override object ConvertFromInternal(IMessage message, Type targetClass, object conversionHint)
    parameters:
    - id: message
      type: Steeltoe.Messaging.IMessage
    - id: targetClass
      type: System.Type
    - id: conversionHint
      type: System.Object
    return:
      type: System.Object
    content.vb: Protected Overrides Function ConvertFromInternal(message As IMessage, targetClass As Type, conversionHint As Object) As Object
  overridden: Steeltoe.Messaging.Converter.AbstractMessageConverter.ConvertFromInternal(Steeltoe.Messaging.IMessage,System.Type,System.Object)
  overload: Steeltoe.Messaging.Converter.NewtonJsonMessageConverter.ConvertFromInternal*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: Steeltoe.Messaging.Converter.NewtonJsonMessageConverter.ConvertToInternal(System.Object,Steeltoe.Messaging.IMessageHeaders,System.Object)
  commentId: M:Steeltoe.Messaging.Converter.NewtonJsonMessageConverter.ConvertToInternal(System.Object,Steeltoe.Messaging.IMessageHeaders,System.Object)
  id: ConvertToInternal(System.Object,Steeltoe.Messaging.IMessageHeaders,System.Object)
  parent: Steeltoe.Messaging.Converter.NewtonJsonMessageConverter
  langs:
  - csharp
  - vb
  name: ConvertToInternal(Object, IMessageHeaders, Object)
  nameWithType: NewtonJsonMessageConverter.ConvertToInternal(Object, IMessageHeaders, Object)
  fullName: Steeltoe.Messaging.Converter.NewtonJsonMessageConverter.ConvertToInternal(System.Object, Steeltoe.Messaging.IMessageHeaders, System.Object)
  type: Method
  source:
    remote:
      path: src/Messaging/src/MessagingBase/Converter/NewtonJsonMessageConverter.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: ConvertToInternal
    path: ../Steeltoe/src/Messaging/src/MessagingBase/Converter/NewtonJsonMessageConverter.cs
    startLine: 150
  assemblies:
  - Steeltoe.Messaging.MessagingBase
  namespace: Steeltoe.Messaging.Converter
  syntax:
    content: protected override object ConvertToInternal(object payload, IMessageHeaders headers, object conversionHint)
    parameters:
    - id: payload
      type: System.Object
    - id: headers
      type: Steeltoe.Messaging.IMessageHeaders
    - id: conversionHint
      type: System.Object
    return:
      type: System.Object
    content.vb: Protected Overrides Function ConvertToInternal(payload As Object, headers As IMessageHeaders, conversionHint As Object) As Object
  overridden: Steeltoe.Messaging.Converter.AbstractMessageConverter.ConvertToInternal(System.Object,Steeltoe.Messaging.IMessageHeaders,System.Object)
  overload: Steeltoe.Messaging.Converter.NewtonJsonMessageConverter.ConvertToInternal*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: Steeltoe.Messaging.Converter.NewtonJsonMessageConverter.Supports(System.Type)
  commentId: M:Steeltoe.Messaging.Converter.NewtonJsonMessageConverter.Supports(System.Type)
  id: Supports(System.Type)
  parent: Steeltoe.Messaging.Converter.NewtonJsonMessageConverter
  langs:
  - csharp
  - vb
  name: Supports(Type)
  nameWithType: NewtonJsonMessageConverter.Supports(Type)
  fullName: Steeltoe.Messaging.Converter.NewtonJsonMessageConverter.Supports(System.Type)
  type: Method
  source:
    remote:
      path: src/Messaging/src/MessagingBase/Converter/NewtonJsonMessageConverter.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Supports
    path: ../Steeltoe/src/Messaging/src/MessagingBase/Converter/NewtonJsonMessageConverter.cs
    startLine: 181
  assemblies:
  - Steeltoe.Messaging.MessagingBase
  namespace: Steeltoe.Messaging.Converter
  syntax:
    content: protected override bool Supports(Type clazz)
    parameters:
    - id: clazz
      type: System.Type
    return:
      type: System.Boolean
    content.vb: Protected Overrides Function Supports(clazz As Type) As Boolean
  overridden: Steeltoe.Messaging.Converter.AbstractMessageConverter.Supports(System.Type)
  overload: Steeltoe.Messaging.Converter.NewtonJsonMessageConverter.Supports*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: Steeltoe.Messaging.Converter.NewtonJsonMessageConverter.GetJsonEncoding(Steeltoe.Common.Util.MimeType)
  commentId: M:Steeltoe.Messaging.Converter.NewtonJsonMessageConverter.GetJsonEncoding(Steeltoe.Common.Util.MimeType)
  id: GetJsonEncoding(Steeltoe.Common.Util.MimeType)
  parent: Steeltoe.Messaging.Converter.NewtonJsonMessageConverter
  langs:
  - csharp
  - vb
  name: GetJsonEncoding(MimeType)
  nameWithType: NewtonJsonMessageConverter.GetJsonEncoding(MimeType)
  fullName: Steeltoe.Messaging.Converter.NewtonJsonMessageConverter.GetJsonEncoding(Steeltoe.Common.Util.MimeType)
  type: Method
  source:
    remote:
      path: src/Messaging/src/MessagingBase/Converter/NewtonJsonMessageConverter.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: GetJsonEncoding
    path: ../Steeltoe/src/Messaging/src/MessagingBase/Converter/NewtonJsonMessageConverter.cs
    startLine: 186
  assemblies:
  - Steeltoe.Messaging.MessagingBase
  namespace: Steeltoe.Messaging.Converter
  syntax:
    content: protected Encoding GetJsonEncoding(MimeType contentType)
    parameters:
    - id: contentType
      type: Steeltoe.Common.Util.MimeType
    return:
      type: System.Text.Encoding
    content.vb: Protected Function GetJsonEncoding(contentType As MimeType) As Encoding
  overload: Steeltoe.Messaging.Converter.NewtonJsonMessageConverter.GetJsonEncoding*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
references:
- uid: Steeltoe.Messaging.Converter
  commentId: N:Steeltoe.Messaging.Converter
  name: Steeltoe.Messaging.Converter
  nameWithType: Steeltoe.Messaging.Converter
  fullName: Steeltoe.Messaging.Converter
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Steeltoe.Messaging.Converter.AbstractMessageConverter
  commentId: T:Steeltoe.Messaging.Converter.AbstractMessageConverter
  parent: Steeltoe.Messaging.Converter
  name: AbstractMessageConverter
  nameWithType: AbstractMessageConverter
  fullName: Steeltoe.Messaging.Converter.AbstractMessageConverter
- uid: Steeltoe.Messaging.Converter.ISmartMessageConverter
  commentId: T:Steeltoe.Messaging.Converter.ISmartMessageConverter
  parent: Steeltoe.Messaging.Converter
  name: ISmartMessageConverter
  nameWithType: ISmartMessageConverter
  fullName: Steeltoe.Messaging.Converter.ISmartMessageConverter
- uid: Steeltoe.Messaging.Converter.IMessageConverter
  commentId: T:Steeltoe.Messaging.Converter.IMessageConverter
  parent: Steeltoe.Messaging.Converter
  name: IMessageConverter
  nameWithType: IMessageConverter
  fullName: Steeltoe.Messaging.Converter.IMessageConverter
- uid: IServiceNameAware
  isExternal: true
  name: IServiceNameAware
  nameWithType: IServiceNameAware
  fullName: IServiceNameAware
- uid: Steeltoe.Messaging.Converter.AbstractMessageConverter.SupportedMimeTypes
  commentId: P:Steeltoe.Messaging.Converter.AbstractMessageConverter.SupportedMimeTypes
  parent: Steeltoe.Messaging.Converter.AbstractMessageConverter
  name: SupportedMimeTypes
  nameWithType: AbstractMessageConverter.SupportedMimeTypes
  fullName: Steeltoe.Messaging.Converter.AbstractMessageConverter.SupportedMimeTypes
- uid: Steeltoe.Messaging.Converter.AbstractMessageConverter.ContentTypeResolver
  commentId: P:Steeltoe.Messaging.Converter.AbstractMessageConverter.ContentTypeResolver
  parent: Steeltoe.Messaging.Converter.AbstractMessageConverter
  name: ContentTypeResolver
  nameWithType: AbstractMessageConverter.ContentTypeResolver
  fullName: Steeltoe.Messaging.Converter.AbstractMessageConverter.ContentTypeResolver
- uid: Steeltoe.Messaging.Converter.AbstractMessageConverter.StrictContentTypeMatch
  commentId: P:Steeltoe.Messaging.Converter.AbstractMessageConverter.StrictContentTypeMatch
  parent: Steeltoe.Messaging.Converter.AbstractMessageConverter
  name: StrictContentTypeMatch
  nameWithType: AbstractMessageConverter.StrictContentTypeMatch
  fullName: Steeltoe.Messaging.Converter.AbstractMessageConverter.StrictContentTypeMatch
- uid: Steeltoe.Messaging.Converter.AbstractMessageConverter.SerializedPayloadClass
  commentId: P:Steeltoe.Messaging.Converter.AbstractMessageConverter.SerializedPayloadClass
  parent: Steeltoe.Messaging.Converter.AbstractMessageConverter
  name: SerializedPayloadClass
  nameWithType: AbstractMessageConverter.SerializedPayloadClass
  fullName: Steeltoe.Messaging.Converter.AbstractMessageConverter.SerializedPayloadClass
- uid: Steeltoe.Messaging.Converter.AbstractMessageConverter.FromMessage``1(Steeltoe.Messaging.IMessage)
  commentId: M:Steeltoe.Messaging.Converter.AbstractMessageConverter.FromMessage``1(Steeltoe.Messaging.IMessage)
  parent: Steeltoe.Messaging.Converter.AbstractMessageConverter
  name: FromMessage<T>(IMessage)
  nameWithType: AbstractMessageConverter.FromMessage<T>(IMessage)
  fullName: Steeltoe.Messaging.Converter.AbstractMessageConverter.FromMessage<T>(Steeltoe.Messaging.IMessage)
  nameWithType.vb: AbstractMessageConverter.FromMessage(Of T)(IMessage)
  fullName.vb: Steeltoe.Messaging.Converter.AbstractMessageConverter.FromMessage(Of T)(Steeltoe.Messaging.IMessage)
  name.vb: FromMessage(Of T)(IMessage)
  spec.csharp:
  - uid: Steeltoe.Messaging.Converter.AbstractMessageConverter.FromMessage``1(Steeltoe.Messaging.IMessage)
    name: FromMessage<T>
    nameWithType: AbstractMessageConverter.FromMessage<T>
    fullName: Steeltoe.Messaging.Converter.AbstractMessageConverter.FromMessage<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Converter.AbstractMessageConverter.FromMessage``1(Steeltoe.Messaging.IMessage)
    name: FromMessage(Of T)
    nameWithType: AbstractMessageConverter.FromMessage(Of T)
    fullName: Steeltoe.Messaging.Converter.AbstractMessageConverter.FromMessage(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Converter.AbstractMessageConverter.FromMessage``1(Steeltoe.Messaging.IMessage,System.Object)
  commentId: M:Steeltoe.Messaging.Converter.AbstractMessageConverter.FromMessage``1(Steeltoe.Messaging.IMessage,System.Object)
  parent: Steeltoe.Messaging.Converter.AbstractMessageConverter
  isExternal: true
  name: FromMessage<T>(IMessage, Object)
  nameWithType: AbstractMessageConverter.FromMessage<T>(IMessage, Object)
  fullName: Steeltoe.Messaging.Converter.AbstractMessageConverter.FromMessage<T>(Steeltoe.Messaging.IMessage, System.Object)
  nameWithType.vb: AbstractMessageConverter.FromMessage(Of T)(IMessage, Object)
  fullName.vb: Steeltoe.Messaging.Converter.AbstractMessageConverter.FromMessage(Of T)(Steeltoe.Messaging.IMessage, System.Object)
  name.vb: FromMessage(Of T)(IMessage, Object)
  spec.csharp:
  - uid: Steeltoe.Messaging.Converter.AbstractMessageConverter.FromMessage``1(Steeltoe.Messaging.IMessage,System.Object)
    name: FromMessage<T>
    nameWithType: AbstractMessageConverter.FromMessage<T>
    fullName: Steeltoe.Messaging.Converter.AbstractMessageConverter.FromMessage<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Converter.AbstractMessageConverter.FromMessage``1(Steeltoe.Messaging.IMessage,System.Object)
    name: FromMessage(Of T)
    nameWithType: AbstractMessageConverter.FromMessage(Of T)
    fullName: Steeltoe.Messaging.Converter.AbstractMessageConverter.FromMessage(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Converter.AbstractMessageConverter.FromMessage(Steeltoe.Messaging.IMessage,System.Type)
  commentId: M:Steeltoe.Messaging.Converter.AbstractMessageConverter.FromMessage(Steeltoe.Messaging.IMessage,System.Type)
  parent: Steeltoe.Messaging.Converter.AbstractMessageConverter
  isExternal: true
  name: FromMessage(IMessage, Type)
  nameWithType: AbstractMessageConverter.FromMessage(IMessage, Type)
  fullName: Steeltoe.Messaging.Converter.AbstractMessageConverter.FromMessage(Steeltoe.Messaging.IMessage, System.Type)
  spec.csharp:
  - uid: Steeltoe.Messaging.Converter.AbstractMessageConverter.FromMessage(Steeltoe.Messaging.IMessage,System.Type)
    name: FromMessage
    nameWithType: AbstractMessageConverter.FromMessage
    fullName: Steeltoe.Messaging.Converter.AbstractMessageConverter.FromMessage
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Converter.AbstractMessageConverter.FromMessage(Steeltoe.Messaging.IMessage,System.Type)
    name: FromMessage
    nameWithType: AbstractMessageConverter.FromMessage
    fullName: Steeltoe.Messaging.Converter.AbstractMessageConverter.FromMessage
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Converter.AbstractMessageConverter.FromMessage(Steeltoe.Messaging.IMessage,System.Type,System.Object)
  commentId: M:Steeltoe.Messaging.Converter.AbstractMessageConverter.FromMessage(Steeltoe.Messaging.IMessage,System.Type,System.Object)
  parent: Steeltoe.Messaging.Converter.AbstractMessageConverter
  isExternal: true
  name: FromMessage(IMessage, Type, Object)
  nameWithType: AbstractMessageConverter.FromMessage(IMessage, Type, Object)
  fullName: Steeltoe.Messaging.Converter.AbstractMessageConverter.FromMessage(Steeltoe.Messaging.IMessage, System.Type, System.Object)
  spec.csharp:
  - uid: Steeltoe.Messaging.Converter.AbstractMessageConverter.FromMessage(Steeltoe.Messaging.IMessage,System.Type,System.Object)
    name: FromMessage
    nameWithType: AbstractMessageConverter.FromMessage
    fullName: Steeltoe.Messaging.Converter.AbstractMessageConverter.FromMessage
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Converter.AbstractMessageConverter.FromMessage(Steeltoe.Messaging.IMessage,System.Type,System.Object)
    name: FromMessage
    nameWithType: AbstractMessageConverter.FromMessage
    fullName: Steeltoe.Messaging.Converter.AbstractMessageConverter.FromMessage
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Converter.AbstractMessageConverter.ToMessage(System.Object,Steeltoe.Messaging.IMessageHeaders)
  commentId: M:Steeltoe.Messaging.Converter.AbstractMessageConverter.ToMessage(System.Object,Steeltoe.Messaging.IMessageHeaders)
  parent: Steeltoe.Messaging.Converter.AbstractMessageConverter
  isExternal: true
  name: ToMessage(Object, IMessageHeaders)
  nameWithType: AbstractMessageConverter.ToMessage(Object, IMessageHeaders)
  fullName: Steeltoe.Messaging.Converter.AbstractMessageConverter.ToMessage(System.Object, Steeltoe.Messaging.IMessageHeaders)
  spec.csharp:
  - uid: Steeltoe.Messaging.Converter.AbstractMessageConverter.ToMessage(System.Object,Steeltoe.Messaging.IMessageHeaders)
    name: ToMessage
    nameWithType: AbstractMessageConverter.ToMessage
    fullName: Steeltoe.Messaging.Converter.AbstractMessageConverter.ToMessage
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.IMessageHeaders
    name: IMessageHeaders
    nameWithType: IMessageHeaders
    fullName: Steeltoe.Messaging.IMessageHeaders
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Converter.AbstractMessageConverter.ToMessage(System.Object,Steeltoe.Messaging.IMessageHeaders)
    name: ToMessage
    nameWithType: AbstractMessageConverter.ToMessage
    fullName: Steeltoe.Messaging.Converter.AbstractMessageConverter.ToMessage
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.IMessageHeaders
    name: IMessageHeaders
    nameWithType: IMessageHeaders
    fullName: Steeltoe.Messaging.IMessageHeaders
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Converter.AbstractMessageConverter.ToMessage(System.Object,Steeltoe.Messaging.IMessageHeaders,System.Object)
  commentId: M:Steeltoe.Messaging.Converter.AbstractMessageConverter.ToMessage(System.Object,Steeltoe.Messaging.IMessageHeaders,System.Object)
  parent: Steeltoe.Messaging.Converter.AbstractMessageConverter
  isExternal: true
  name: ToMessage(Object, IMessageHeaders, Object)
  nameWithType: AbstractMessageConverter.ToMessage(Object, IMessageHeaders, Object)
  fullName: Steeltoe.Messaging.Converter.AbstractMessageConverter.ToMessage(System.Object, Steeltoe.Messaging.IMessageHeaders, System.Object)
  spec.csharp:
  - uid: Steeltoe.Messaging.Converter.AbstractMessageConverter.ToMessage(System.Object,Steeltoe.Messaging.IMessageHeaders,System.Object)
    name: ToMessage
    nameWithType: AbstractMessageConverter.ToMessage
    fullName: Steeltoe.Messaging.Converter.AbstractMessageConverter.ToMessage
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.IMessageHeaders
    name: IMessageHeaders
    nameWithType: IMessageHeaders
    fullName: Steeltoe.Messaging.IMessageHeaders
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Converter.AbstractMessageConverter.ToMessage(System.Object,Steeltoe.Messaging.IMessageHeaders,System.Object)
    name: ToMessage
    nameWithType: AbstractMessageConverter.ToMessage
    fullName: Steeltoe.Messaging.Converter.AbstractMessageConverter.ToMessage
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.IMessageHeaders
    name: IMessageHeaders
    nameWithType: IMessageHeaders
    fullName: Steeltoe.Messaging.IMessageHeaders
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Converter.AbstractMessageConverter.GetDefaultContentType(System.Object)
  commentId: M:Steeltoe.Messaging.Converter.AbstractMessageConverter.GetDefaultContentType(System.Object)
  parent: Steeltoe.Messaging.Converter.AbstractMessageConverter
  isExternal: true
  name: GetDefaultContentType(Object)
  nameWithType: AbstractMessageConverter.GetDefaultContentType(Object)
  fullName: Steeltoe.Messaging.Converter.AbstractMessageConverter.GetDefaultContentType(System.Object)
  spec.csharp:
  - uid: Steeltoe.Messaging.Converter.AbstractMessageConverter.GetDefaultContentType(System.Object)
    name: GetDefaultContentType
    nameWithType: AbstractMessageConverter.GetDefaultContentType
    fullName: Steeltoe.Messaging.Converter.AbstractMessageConverter.GetDefaultContentType
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Converter.AbstractMessageConverter.GetDefaultContentType(System.Object)
    name: GetDefaultContentType
    nameWithType: AbstractMessageConverter.GetDefaultContentType
    fullName: Steeltoe.Messaging.Converter.AbstractMessageConverter.GetDefaultContentType
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Converter.AbstractMessageConverter.SupportsMimeType(Steeltoe.Messaging.IMessageHeaders)
  commentId: M:Steeltoe.Messaging.Converter.AbstractMessageConverter.SupportsMimeType(Steeltoe.Messaging.IMessageHeaders)
  parent: Steeltoe.Messaging.Converter.AbstractMessageConverter
  name: SupportsMimeType(IMessageHeaders)
  nameWithType: AbstractMessageConverter.SupportsMimeType(IMessageHeaders)
  fullName: Steeltoe.Messaging.Converter.AbstractMessageConverter.SupportsMimeType(Steeltoe.Messaging.IMessageHeaders)
  spec.csharp:
  - uid: Steeltoe.Messaging.Converter.AbstractMessageConverter.SupportsMimeType(Steeltoe.Messaging.IMessageHeaders)
    name: SupportsMimeType
    nameWithType: AbstractMessageConverter.SupportsMimeType
    fullName: Steeltoe.Messaging.Converter.AbstractMessageConverter.SupportsMimeType
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.IMessageHeaders
    name: IMessageHeaders
    nameWithType: IMessageHeaders
    fullName: Steeltoe.Messaging.IMessageHeaders
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Converter.AbstractMessageConverter.SupportsMimeType(Steeltoe.Messaging.IMessageHeaders)
    name: SupportsMimeType
    nameWithType: AbstractMessageConverter.SupportsMimeType
    fullName: Steeltoe.Messaging.Converter.AbstractMessageConverter.SupportsMimeType
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.IMessageHeaders
    name: IMessageHeaders
    nameWithType: IMessageHeaders
    fullName: Steeltoe.Messaging.IMessageHeaders
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Converter.AbstractMessageConverter.GetMimeType(Steeltoe.Messaging.IMessageHeaders)
  commentId: M:Steeltoe.Messaging.Converter.AbstractMessageConverter.GetMimeType(Steeltoe.Messaging.IMessageHeaders)
  parent: Steeltoe.Messaging.Converter.AbstractMessageConverter
  name: GetMimeType(IMessageHeaders)
  nameWithType: AbstractMessageConverter.GetMimeType(IMessageHeaders)
  fullName: Steeltoe.Messaging.Converter.AbstractMessageConverter.GetMimeType(Steeltoe.Messaging.IMessageHeaders)
  spec.csharp:
  - uid: Steeltoe.Messaging.Converter.AbstractMessageConverter.GetMimeType(Steeltoe.Messaging.IMessageHeaders)
    name: GetMimeType
    nameWithType: AbstractMessageConverter.GetMimeType
    fullName: Steeltoe.Messaging.Converter.AbstractMessageConverter.GetMimeType
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.IMessageHeaders
    name: IMessageHeaders
    nameWithType: IMessageHeaders
    fullName: Steeltoe.Messaging.IMessageHeaders
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Converter.AbstractMessageConverter.GetMimeType(Steeltoe.Messaging.IMessageHeaders)
    name: GetMimeType
    nameWithType: AbstractMessageConverter.GetMimeType
    fullName: Steeltoe.Messaging.Converter.AbstractMessageConverter.GetMimeType
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.IMessageHeaders
    name: IMessageHeaders
    nameWithType: IMessageHeaders
    fullName: Steeltoe.Messaging.IMessageHeaders
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Steeltoe.Messaging.Converter.NewtonJsonMessageConverter.Settings*
  commentId: Overload:Steeltoe.Messaging.Converter.NewtonJsonMessageConverter.Settings
  name: Settings
  nameWithType: NewtonJsonMessageConverter.Settings
  fullName: Steeltoe.Messaging.Converter.NewtonJsonMessageConverter.Settings
- uid: Newtonsoft.Json.JsonSerializerSettings
  commentId: T:Newtonsoft.Json.JsonSerializerSettings
  parent: Newtonsoft.Json
  isExternal: true
  name: JsonSerializerSettings
  nameWithType: JsonSerializerSettings
  fullName: Newtonsoft.Json.JsonSerializerSettings
- uid: Newtonsoft.Json
  commentId: N:Newtonsoft.Json
  isExternal: true
  name: Newtonsoft.Json
  nameWithType: Newtonsoft.Json
  fullName: Newtonsoft.Json
- uid: Steeltoe.Messaging.Converter.AbstractMessageConverter.ServiceName
  commentId: P:Steeltoe.Messaging.Converter.AbstractMessageConverter.ServiceName
  parent: Steeltoe.Messaging.Converter.AbstractMessageConverter
  name: ServiceName
  nameWithType: AbstractMessageConverter.ServiceName
  fullName: Steeltoe.Messaging.Converter.AbstractMessageConverter.ServiceName
- uid: Steeltoe.Messaging.Converter.NewtonJsonMessageConverter.ServiceName*
  commentId: Overload:Steeltoe.Messaging.Converter.NewtonJsonMessageConverter.ServiceName
  name: ServiceName
  nameWithType: NewtonJsonMessageConverter.ServiceName
  fullName: Steeltoe.Messaging.Converter.NewtonJsonMessageConverter.ServiceName
- uid: Steeltoe.Messaging.Converter.NewtonJsonMessageConverter.#ctor*
  commentId: Overload:Steeltoe.Messaging.Converter.NewtonJsonMessageConverter.#ctor
  name: NewtonJsonMessageConverter
  nameWithType: NewtonJsonMessageConverter.NewtonJsonMessageConverter
  fullName: Steeltoe.Messaging.Converter.NewtonJsonMessageConverter.NewtonJsonMessageConverter
- uid: Steeltoe.Common.Util.MimeType[]
  isExternal: true
  name: MimeType[]
  nameWithType: MimeType[]
  fullName: Steeltoe.Common.Util.MimeType[]
  nameWithType.vb: MimeType()
  fullName.vb: Steeltoe.Common.Util.MimeType()
  name.vb: MimeType()
  spec.csharp:
  - uid: Steeltoe.Common.Util.MimeType
    name: MimeType
    nameWithType: MimeType
    fullName: Steeltoe.Common.Util.MimeType
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: Steeltoe.Common.Util.MimeType
    name: MimeType
    nameWithType: MimeType
    fullName: Steeltoe.Common.Util.MimeType
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Steeltoe.Messaging.Converter.AbstractMessageConverter.CanConvertFrom(Steeltoe.Messaging.IMessage,System.Type)
  commentId: M:Steeltoe.Messaging.Converter.AbstractMessageConverter.CanConvertFrom(Steeltoe.Messaging.IMessage,System.Type)
  parent: Steeltoe.Messaging.Converter.AbstractMessageConverter
  isExternal: true
  name: CanConvertFrom(IMessage, Type)
  nameWithType: AbstractMessageConverter.CanConvertFrom(IMessage, Type)
  fullName: Steeltoe.Messaging.Converter.AbstractMessageConverter.CanConvertFrom(Steeltoe.Messaging.IMessage, System.Type)
  spec.csharp:
  - uid: Steeltoe.Messaging.Converter.AbstractMessageConverter.CanConvertFrom(Steeltoe.Messaging.IMessage,System.Type)
    name: CanConvertFrom
    nameWithType: AbstractMessageConverter.CanConvertFrom
    fullName: Steeltoe.Messaging.Converter.AbstractMessageConverter.CanConvertFrom
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Converter.AbstractMessageConverter.CanConvertFrom(Steeltoe.Messaging.IMessage,System.Type)
    name: CanConvertFrom
    nameWithType: AbstractMessageConverter.CanConvertFrom
    fullName: Steeltoe.Messaging.Converter.AbstractMessageConverter.CanConvertFrom
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Converter.NewtonJsonMessageConverter.CanConvertFrom*
  commentId: Overload:Steeltoe.Messaging.Converter.NewtonJsonMessageConverter.CanConvertFrom
  name: CanConvertFrom
  nameWithType: NewtonJsonMessageConverter.CanConvertFrom
  fullName: Steeltoe.Messaging.Converter.NewtonJsonMessageConverter.CanConvertFrom
- uid: Steeltoe.Messaging.IMessage
  commentId: T:Steeltoe.Messaging.IMessage
  parent: Steeltoe.Messaging
  name: IMessage
  nameWithType: IMessage
  fullName: Steeltoe.Messaging.IMessage
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Steeltoe.Messaging
  commentId: N:Steeltoe.Messaging
  name: Steeltoe.Messaging
  nameWithType: Steeltoe.Messaging
  fullName: Steeltoe.Messaging
- uid: Steeltoe.Messaging.Converter.AbstractMessageConverter.CanConvertTo(System.Object,Steeltoe.Messaging.IMessageHeaders)
  commentId: M:Steeltoe.Messaging.Converter.AbstractMessageConverter.CanConvertTo(System.Object,Steeltoe.Messaging.IMessageHeaders)
  parent: Steeltoe.Messaging.Converter.AbstractMessageConverter
  isExternal: true
  name: CanConvertTo(Object, IMessageHeaders)
  nameWithType: AbstractMessageConverter.CanConvertTo(Object, IMessageHeaders)
  fullName: Steeltoe.Messaging.Converter.AbstractMessageConverter.CanConvertTo(System.Object, Steeltoe.Messaging.IMessageHeaders)
  spec.csharp:
  - uid: Steeltoe.Messaging.Converter.AbstractMessageConverter.CanConvertTo(System.Object,Steeltoe.Messaging.IMessageHeaders)
    name: CanConvertTo
    nameWithType: AbstractMessageConverter.CanConvertTo
    fullName: Steeltoe.Messaging.Converter.AbstractMessageConverter.CanConvertTo
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.IMessageHeaders
    name: IMessageHeaders
    nameWithType: IMessageHeaders
    fullName: Steeltoe.Messaging.IMessageHeaders
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Converter.AbstractMessageConverter.CanConvertTo(System.Object,Steeltoe.Messaging.IMessageHeaders)
    name: CanConvertTo
    nameWithType: AbstractMessageConverter.CanConvertTo
    fullName: Steeltoe.Messaging.Converter.AbstractMessageConverter.CanConvertTo
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.IMessageHeaders
    name: IMessageHeaders
    nameWithType: IMessageHeaders
    fullName: Steeltoe.Messaging.IMessageHeaders
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Converter.NewtonJsonMessageConverter.CanConvertTo*
  commentId: Overload:Steeltoe.Messaging.Converter.NewtonJsonMessageConverter.CanConvertTo
  name: CanConvertTo
  nameWithType: NewtonJsonMessageConverter.CanConvertTo
  fullName: Steeltoe.Messaging.Converter.NewtonJsonMessageConverter.CanConvertTo
- uid: Steeltoe.Messaging.IMessageHeaders
  commentId: T:Steeltoe.Messaging.IMessageHeaders
  parent: Steeltoe.Messaging
  name: IMessageHeaders
  nameWithType: IMessageHeaders
  fullName: Steeltoe.Messaging.IMessageHeaders
- uid: Steeltoe.Messaging.Converter.NewtonJsonMessageConverter.IsIMessageGenericType*
  commentId: Overload:Steeltoe.Messaging.Converter.NewtonJsonMessageConverter.IsIMessageGenericType
  name: IsIMessageGenericType
  nameWithType: NewtonJsonMessageConverter.IsIMessageGenericType
  fullName: Steeltoe.Messaging.Converter.NewtonJsonMessageConverter.IsIMessageGenericType
- uid: Steeltoe.Messaging.Converter.NewtonJsonMessageConverter.GetIMessageGenericType*
  commentId: Overload:Steeltoe.Messaging.Converter.NewtonJsonMessageConverter.GetIMessageGenericType
  name: GetIMessageGenericType
  nameWithType: NewtonJsonMessageConverter.GetIMessageGenericType
  fullName: Steeltoe.Messaging.Converter.NewtonJsonMessageConverter.GetIMessageGenericType
- uid: Steeltoe.Messaging.Converter.NewtonJsonMessageConverter.GetTargetType*
  commentId: Overload:Steeltoe.Messaging.Converter.NewtonJsonMessageConverter.GetTargetType
  name: GetTargetType
  nameWithType: NewtonJsonMessageConverter.GetTargetType
  fullName: Steeltoe.Messaging.Converter.NewtonJsonMessageConverter.GetTargetType
- uid: Steeltoe.Messaging.Converter.AbstractMessageConverter.ConvertFromInternal(Steeltoe.Messaging.IMessage,System.Type,System.Object)
  commentId: M:Steeltoe.Messaging.Converter.AbstractMessageConverter.ConvertFromInternal(Steeltoe.Messaging.IMessage,System.Type,System.Object)
  parent: Steeltoe.Messaging.Converter.AbstractMessageConverter
  isExternal: true
  name: ConvertFromInternal(IMessage, Type, Object)
  nameWithType: AbstractMessageConverter.ConvertFromInternal(IMessage, Type, Object)
  fullName: Steeltoe.Messaging.Converter.AbstractMessageConverter.ConvertFromInternal(Steeltoe.Messaging.IMessage, System.Type, System.Object)
  spec.csharp:
  - uid: Steeltoe.Messaging.Converter.AbstractMessageConverter.ConvertFromInternal(Steeltoe.Messaging.IMessage,System.Type,System.Object)
    name: ConvertFromInternal
    nameWithType: AbstractMessageConverter.ConvertFromInternal
    fullName: Steeltoe.Messaging.Converter.AbstractMessageConverter.ConvertFromInternal
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Converter.AbstractMessageConverter.ConvertFromInternal(Steeltoe.Messaging.IMessage,System.Type,System.Object)
    name: ConvertFromInternal
    nameWithType: AbstractMessageConverter.ConvertFromInternal
    fullName: Steeltoe.Messaging.Converter.AbstractMessageConverter.ConvertFromInternal
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Converter.NewtonJsonMessageConverter.ConvertFromInternal*
  commentId: Overload:Steeltoe.Messaging.Converter.NewtonJsonMessageConverter.ConvertFromInternal
  name: ConvertFromInternal
  nameWithType: NewtonJsonMessageConverter.ConvertFromInternal
  fullName: Steeltoe.Messaging.Converter.NewtonJsonMessageConverter.ConvertFromInternal
- uid: Steeltoe.Messaging.Converter.AbstractMessageConverter.ConvertToInternal(System.Object,Steeltoe.Messaging.IMessageHeaders,System.Object)
  commentId: M:Steeltoe.Messaging.Converter.AbstractMessageConverter.ConvertToInternal(System.Object,Steeltoe.Messaging.IMessageHeaders,System.Object)
  parent: Steeltoe.Messaging.Converter.AbstractMessageConverter
  isExternal: true
  name: ConvertToInternal(Object, IMessageHeaders, Object)
  nameWithType: AbstractMessageConverter.ConvertToInternal(Object, IMessageHeaders, Object)
  fullName: Steeltoe.Messaging.Converter.AbstractMessageConverter.ConvertToInternal(System.Object, Steeltoe.Messaging.IMessageHeaders, System.Object)
  spec.csharp:
  - uid: Steeltoe.Messaging.Converter.AbstractMessageConverter.ConvertToInternal(System.Object,Steeltoe.Messaging.IMessageHeaders,System.Object)
    name: ConvertToInternal
    nameWithType: AbstractMessageConverter.ConvertToInternal
    fullName: Steeltoe.Messaging.Converter.AbstractMessageConverter.ConvertToInternal
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.IMessageHeaders
    name: IMessageHeaders
    nameWithType: IMessageHeaders
    fullName: Steeltoe.Messaging.IMessageHeaders
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Converter.AbstractMessageConverter.ConvertToInternal(System.Object,Steeltoe.Messaging.IMessageHeaders,System.Object)
    name: ConvertToInternal
    nameWithType: AbstractMessageConverter.ConvertToInternal
    fullName: Steeltoe.Messaging.Converter.AbstractMessageConverter.ConvertToInternal
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.IMessageHeaders
    name: IMessageHeaders
    nameWithType: IMessageHeaders
    fullName: Steeltoe.Messaging.IMessageHeaders
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Converter.NewtonJsonMessageConverter.ConvertToInternal*
  commentId: Overload:Steeltoe.Messaging.Converter.NewtonJsonMessageConverter.ConvertToInternal
  name: ConvertToInternal
  nameWithType: NewtonJsonMessageConverter.ConvertToInternal
  fullName: Steeltoe.Messaging.Converter.NewtonJsonMessageConverter.ConvertToInternal
- uid: Steeltoe.Messaging.Converter.AbstractMessageConverter.Supports(System.Type)
  commentId: M:Steeltoe.Messaging.Converter.AbstractMessageConverter.Supports(System.Type)
  parent: Steeltoe.Messaging.Converter.AbstractMessageConverter
  isExternal: true
  name: Supports(Type)
  nameWithType: AbstractMessageConverter.Supports(Type)
  fullName: Steeltoe.Messaging.Converter.AbstractMessageConverter.Supports(System.Type)
  spec.csharp:
  - uid: Steeltoe.Messaging.Converter.AbstractMessageConverter.Supports(System.Type)
    name: Supports
    nameWithType: AbstractMessageConverter.Supports
    fullName: Steeltoe.Messaging.Converter.AbstractMessageConverter.Supports
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Converter.AbstractMessageConverter.Supports(System.Type)
    name: Supports
    nameWithType: AbstractMessageConverter.Supports
    fullName: Steeltoe.Messaging.Converter.AbstractMessageConverter.Supports
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Converter.NewtonJsonMessageConverter.Supports*
  commentId: Overload:Steeltoe.Messaging.Converter.NewtonJsonMessageConverter.Supports
  name: Supports
  nameWithType: NewtonJsonMessageConverter.Supports
  fullName: Steeltoe.Messaging.Converter.NewtonJsonMessageConverter.Supports
- uid: Steeltoe.Messaging.Converter.NewtonJsonMessageConverter.GetJsonEncoding*
  commentId: Overload:Steeltoe.Messaging.Converter.NewtonJsonMessageConverter.GetJsonEncoding
  name: GetJsonEncoding
  nameWithType: NewtonJsonMessageConverter.GetJsonEncoding
  fullName: Steeltoe.Messaging.Converter.NewtonJsonMessageConverter.GetJsonEncoding
- uid: Steeltoe.Common.Util.MimeType
  commentId: T:Steeltoe.Common.Util.MimeType
  parent: Steeltoe.Common.Util
  name: MimeType
  nameWithType: MimeType
  fullName: Steeltoe.Common.Util.MimeType
- uid: System.Text.Encoding
  commentId: T:System.Text.Encoding
  parent: System.Text
  isExternal: true
  name: Encoding
  nameWithType: Encoding
  fullName: System.Text.Encoding
- uid: Steeltoe.Common.Util
  commentId: N:Steeltoe.Common.Util
  name: Steeltoe.Common.Util
  nameWithType: Steeltoe.Common.Util
  fullName: Steeltoe.Common.Util
- uid: System.Text
  commentId: N:System.Text
  isExternal: true
  name: System.Text
  nameWithType: System.Text
  fullName: System.Text
