### YamlMime:ManagedReference
items:
- uid: Steeltoe.Messaging.RabbitMQ.Listener.DirectReplyToMessageListenerContainer
  commentId: T:Steeltoe.Messaging.RabbitMQ.Listener.DirectReplyToMessageListenerContainer
  id: DirectReplyToMessageListenerContainer
  parent: Steeltoe.Messaging.RabbitMQ.Listener
  children:
  - Steeltoe.Messaging.RabbitMQ.Listener.DirectReplyToMessageListenerContainer.#ctor(Steeltoe.Common.Contexts.IApplicationContext,Steeltoe.Messaging.RabbitMQ.Connection.IConnectionFactory,System.String,Microsoft.Extensions.Logging.ILoggerFactory)
  - Steeltoe.Messaging.RabbitMQ.Listener.DirectReplyToMessageListenerContainer.#ctor(Steeltoe.Common.Contexts.IApplicationContext,System.String,Microsoft.Extensions.Logging.ILoggerFactory)
  - Steeltoe.Messaging.RabbitMQ.Listener.DirectReplyToMessageListenerContainer.#ctor(System.String,Microsoft.Extensions.Logging.ILoggerFactory)
  - Steeltoe.Messaging.RabbitMQ.Listener.DirectReplyToMessageListenerContainer.AddQueueNames(System.String[])
  - Steeltoe.Messaging.RabbitMQ.Listener.DirectReplyToMessageListenerContainer.ConsumerRemoved(Steeltoe.Messaging.RabbitMQ.Listener.DirectMessageListenerContainer.SimpleConsumer)
  - Steeltoe.Messaging.RabbitMQ.Listener.DirectReplyToMessageListenerContainer.ConsumersPerQueue
  - Steeltoe.Messaging.RabbitMQ.Listener.DirectReplyToMessageListenerContainer.DoStart
  - Steeltoe.Messaging.RabbitMQ.Listener.DirectReplyToMessageListenerContainer.FindIdleConsumer
  - Steeltoe.Messaging.RabbitMQ.Listener.DirectReplyToMessageListenerContainer.GetChannelHolder
  - Steeltoe.Messaging.RabbitMQ.Listener.DirectReplyToMessageListenerContainer.MessageListener
  - Steeltoe.Messaging.RabbitMQ.Listener.DirectReplyToMessageListenerContainer.MonitorInterval
  - Steeltoe.Messaging.RabbitMQ.Listener.DirectReplyToMessageListenerContainer.ProcessMonitorTask
  - Steeltoe.Messaging.RabbitMQ.Listener.DirectReplyToMessageListenerContainer.ReleaseConsumerFor(Steeltoe.Messaging.RabbitMQ.Listener.DirectReplyToMessageListenerContainer.ChannelHolder,System.Boolean,System.String)
  - Steeltoe.Messaging.RabbitMQ.Listener.DirectReplyToMessageListenerContainer.RemoveQueueNames(System.String[])
  - Steeltoe.Messaging.RabbitMQ.Listener.DirectReplyToMessageListenerContainer.SetQueueNames(System.String[])
  langs:
  - csharp
  - vb
  name: DirectReplyToMessageListenerContainer
  nameWithType: DirectReplyToMessageListenerContainer
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.DirectReplyToMessageListenerContainer
  type: Class
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Listener/DirectReplyToMessageListenerContainer.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: DirectReplyToMessageListenerContainer
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Listener/DirectReplyToMessageListenerContainer.cs
    startLine: 14
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Listener
  syntax:
    content: 'public class DirectReplyToMessageListenerContainer : DirectMessageListenerContainer, IMessageListenerContainer, ISmartLifecycle, ILifecycle, IPhased, IDisposable, IServiceNameAware'
    content.vb: >-
      Public Class DirectReplyToMessageListenerContainer

          Inherits DirectMessageListenerContainer

          Implements IMessageListenerContainer, ISmartLifecycle, ILifecycle, IPhased, IDisposable, IServiceNameAware
  inheritance:
  - System.Object
  - Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer
  - Steeltoe.Messaging.RabbitMQ.Listener.DirectMessageListenerContainer
  implements:
  - Steeltoe.Messaging.RabbitMQ.Listener.IMessageListenerContainer
  - Steeltoe.Common.Lifecycle.ISmartLifecycle
  - Steeltoe.Common.Lifecycle.ILifecycle
  - Steeltoe.Common.Lifecycle.IPhased
  - System.IDisposable
  - Steeltoe.Common.Services.IServiceNameAware
  inheritedMembers:
  - Steeltoe.Messaging.RabbitMQ.Listener.DirectMessageListenerContainer._consumers
  - Steeltoe.Messaging.RabbitMQ.Listener.DirectMessageListenerContainer._consumersByQueue
  - Steeltoe.Messaging.RabbitMQ.Listener.DirectMessageListenerContainer._cancellationLock
  - Steeltoe.Messaging.RabbitMQ.Listener.DirectMessageListenerContainer._consumersToRestart
  - Steeltoe.Messaging.RabbitMQ.Listener.DirectMessageListenerContainer.START_WAIT_TIME
  - Steeltoe.Messaging.RabbitMQ.Listener.DirectMessageListenerContainer.DEFAULT_MONITOR_INTERVAL
  - Steeltoe.Messaging.RabbitMQ.Listener.DirectMessageListenerContainer.DEFAULT_ACK_TIMEOUT
  - Steeltoe.Messaging.RabbitMQ.Listener.DirectMessageListenerContainer.Exclusive
  - Steeltoe.Messaging.RabbitMQ.Listener.DirectMessageListenerContainer.MessagesPerAck
  - Steeltoe.Messaging.RabbitMQ.Listener.DirectMessageListenerContainer.AckTimeout
  - Steeltoe.Messaging.RabbitMQ.Listener.DirectMessageListenerContainer.LastRestartAttempt
  - Steeltoe.Messaging.RabbitMQ.Listener.DirectMessageListenerContainer.AddQueues(Steeltoe.Messaging.RabbitMQ.Config.IQueue[])
  - Steeltoe.Messaging.RabbitMQ.Listener.DirectMessageListenerContainer.RemoveQueues(Steeltoe.Messaging.RabbitMQ.Config.IQueue[])
  - Steeltoe.Messaging.RabbitMQ.Listener.DirectMessageListenerContainer.DoInitialize
  - Steeltoe.Messaging.RabbitMQ.Listener.DirectMessageListenerContainer.ActualStart
  - Steeltoe.Messaging.RabbitMQ.Listener.DirectMessageListenerContainer.DoRedeclareElementsIfNecessary
  - Steeltoe.Messaging.RabbitMQ.Listener.DirectMessageListenerContainer.DoShutdown
  - Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.DEFAULT_FAILED_DECLARATION_RETRY_INTERVAL
  - Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.DEFAULT_SHUTDOWN_TIMEOUT
  - Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.DEFAULT_RECOVERY_INTERVAL
  - Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.DEFAULT_DEBATCHING_ENABLED
  - Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.DEFAULT_PREFETCH_COUNT
  - Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer._consumersMonitor
  - Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer._lock
  - Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer._lifecycleMonitor
  - Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer._logger
  - Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer._loggerFactory
  - Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer._recoveryInterval
  - Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.ConnectionFactory
  - Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.IsChannelTransacted
  - Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.ApplicationContext
  - Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.AcknowledgeMode
  - Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.ServiceName
  - Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.ExposeListenerChannel
  - Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.ErrorHandler
  - Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.IsDeBatchingEnabled
  - Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.AfterReceivePostProcessors
  - Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.IsAutoStartup
  - Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.Phase
  - Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.LookupKeyQualifier
  - Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.ListenerId
  - Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.ConsumerTagStrategy
  - Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.ConsumerArguments
  - Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.NoLocal
  - Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.DefaultRequeueRejected
  - Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.PrefetchCount
  - Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.ShutdownTimeout
  - Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.IdleEventInterval
  - Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.RecoveryInterval
  - Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.RecoveryBackOff
  - Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.MessageHeadersConverter
  - Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.RabbitAdmin
  - Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.MissingQueuesFatal
  - Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.MismatchedQueuesFatal
  - Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.PossibleAuthenticationFailureFatal
  - Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.AutoDeclare
  - Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.FailedDeclarationRetryInterval
  - Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.StatefulRetryFatalWithNullMessageId
  - Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.ExclusiveConsumerExceptionLogger
  - Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.AlwaysRequeueWithTxManagerRollback
  - Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.BatchingStrategy
  - Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.IsRunning
  - Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.IsActive
  - Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.IsLazyLoad
  - Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.Initialized
  - Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.TransactionManager
  - Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.TransactionAttribute
  - Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.GetQueueNames
  - Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.SetQueues(Steeltoe.Messaging.RabbitMQ.Config.IQueue[])
  - Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.SetAfterReceivePostProcessors(Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor[])
  - Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.AddAfterReceivePostProcessors(Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor[])
  - Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.RemoveAfterReceivePostProcessor(Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor)
  - Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.SetupMessageListener(Steeltoe.Messaging.RabbitMQ.Listener.IMessageListener)
  - Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.GetConnectionFactory
  - Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.Initialize
  - Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.Dispose
  - Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.Shutdown
  - Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.Start
  - Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.Stop
  - Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.Stop(System.Action)
  - Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.LazyLoad
  - Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.CreateConnection
  - Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.GetTransactionalResourceHolder
  - Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.ConvertRabbitAccessException(System.Exception)
  - Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.RedeclareElementsIfNecessary
  - Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.InvokeErrorHandler(System.Exception)
  - Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.ExecuteListener(RabbitMQ.Client.IModel,Steeltoe.Messaging.IMessage)
  - Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.ActualInvokeListener(RabbitMQ.Client.IModel,System.Collections.Generic.List{Steeltoe.Messaging.IMessage})
  - Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.ActualInvokeListener(RabbitMQ.Client.IModel,Steeltoe.Messaging.IMessage)
  - Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.DoInvokeListener(Steeltoe.Messaging.RabbitMQ.Listener.IChannelAwareMessageListener,RabbitMQ.Client.IModel,System.Collections.Generic.List{Steeltoe.Messaging.IMessage})
  - Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.DoInvokeListener(Steeltoe.Messaging.RabbitMQ.Listener.IChannelAwareMessageListener,RabbitMQ.Client.IModel,Steeltoe.Messaging.IMessage)
  - Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.DoInvokeListener(Steeltoe.Messaging.RabbitMQ.Listener.IMessageListener,System.Collections.Generic.List{Steeltoe.Messaging.IMessage})
  - Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.DoInvokeListener(Steeltoe.Messaging.RabbitMQ.Listener.IMessageListener,Steeltoe.Messaging.IMessage)
  - Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.HandleChannelAwareTransaction(RabbitMQ.Client.IModel,RabbitMQ.Client.IModel@,Steeltoe.Messaging.RabbitMQ.Connection.RabbitResourceHolder@)
  - Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.WrapToListenerExecutionFailedExceptionIfNeeded(System.Exception,System.Collections.Generic.List{Steeltoe.Messaging.IMessage})
  - Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.WrapToListenerExecutionFailedExceptionIfNeeded(System.Exception,Steeltoe.Messaging.IMessage)
  - Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.HandleListenerException(System.Exception)
  - Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.UpdateLastReceive
  - Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.ConfigureAdminIfNeeded
  - Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.CheckMismatchedQueues
  - Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.IsChannelLocallyTransacted
  - Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.DoStop
  - Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.ValidateConfiguration
  - Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.GetRoutingConnectionFactory
  - Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.LastReceive
  - Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.ForceCloseChannel
  - Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.GetRoutingLookupKey
  - Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.CheckMessageListener(System.Object)
  - Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.GetQueueNamesAsSet
  - Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.GetQueueNamesToQueues
  - Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.CauseChainHasImmediateAcknowledgeRabbitException(System.Exception)
  - Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.PrepareHolderForRollback(Steeltoe.Messaging.RabbitMQ.Connection.RabbitResourceHolder,System.Exception)
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Steeltoe.Messaging.RabbitMQ.Listener.DirectReplyToMessageListenerContainer.#ctor(System.String,Microsoft.Extensions.Logging.ILoggerFactory)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Listener.DirectReplyToMessageListenerContainer.#ctor(System.String,Microsoft.Extensions.Logging.ILoggerFactory)
  id: '#ctor(System.String,Microsoft.Extensions.Logging.ILoggerFactory)'
  parent: Steeltoe.Messaging.RabbitMQ.Listener.DirectReplyToMessageListenerContainer
  langs:
  - csharp
  - vb
  name: DirectReplyToMessageListenerContainer(String, ILoggerFactory)
  nameWithType: DirectReplyToMessageListenerContainer.DirectReplyToMessageListenerContainer(String, ILoggerFactory)
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.DirectReplyToMessageListenerContainer.DirectReplyToMessageListenerContainer(System.String, Microsoft.Extensions.Logging.ILoggerFactory)
  type: Constructor
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Listener/DirectReplyToMessageListenerContainer.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: .ctor
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Listener/DirectReplyToMessageListenerContainer.cs
    startLine: 21
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Listener
  syntax:
    content: public DirectReplyToMessageListenerContainer(string name = null, ILoggerFactory loggerFactory = null)
    parameters:
    - id: name
      type: System.String
    - id: loggerFactory
      type: Microsoft.Extensions.Logging.ILoggerFactory
    content.vb: Public Sub New(name As String = Nothing, loggerFactory As ILoggerFactory = Nothing)
  overload: Steeltoe.Messaging.RabbitMQ.Listener.DirectReplyToMessageListenerContainer.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Steeltoe.Messaging.RabbitMQ.Listener.DirectReplyToMessageListenerContainer.#ctor(Steeltoe.Common.Contexts.IApplicationContext,System.String,Microsoft.Extensions.Logging.ILoggerFactory)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Listener.DirectReplyToMessageListenerContainer.#ctor(Steeltoe.Common.Contexts.IApplicationContext,System.String,Microsoft.Extensions.Logging.ILoggerFactory)
  id: '#ctor(Steeltoe.Common.Contexts.IApplicationContext,System.String,Microsoft.Extensions.Logging.ILoggerFactory)'
  parent: Steeltoe.Messaging.RabbitMQ.Listener.DirectReplyToMessageListenerContainer
  langs:
  - csharp
  - vb
  name: DirectReplyToMessageListenerContainer(IApplicationContext, String, ILoggerFactory)
  nameWithType: DirectReplyToMessageListenerContainer.DirectReplyToMessageListenerContainer(IApplicationContext, String, ILoggerFactory)
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.DirectReplyToMessageListenerContainer.DirectReplyToMessageListenerContainer(Steeltoe.Common.Contexts.IApplicationContext, System.String, Microsoft.Extensions.Logging.ILoggerFactory)
  type: Constructor
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Listener/DirectReplyToMessageListenerContainer.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: .ctor
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Listener/DirectReplyToMessageListenerContainer.cs
    startLine: 26
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Listener
  syntax:
    content: public DirectReplyToMessageListenerContainer(IApplicationContext applicationContext, string name = null, ILoggerFactory loggerFactory = null)
    parameters:
    - id: applicationContext
      type: Steeltoe.Common.Contexts.IApplicationContext
    - id: name
      type: System.String
    - id: loggerFactory
      type: Microsoft.Extensions.Logging.ILoggerFactory
    content.vb: Public Sub New(applicationContext As IApplicationContext, name As String = Nothing, loggerFactory As ILoggerFactory = Nothing)
  overload: Steeltoe.Messaging.RabbitMQ.Listener.DirectReplyToMessageListenerContainer.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Steeltoe.Messaging.RabbitMQ.Listener.DirectReplyToMessageListenerContainer.#ctor(Steeltoe.Common.Contexts.IApplicationContext,Steeltoe.Messaging.RabbitMQ.Connection.IConnectionFactory,System.String,Microsoft.Extensions.Logging.ILoggerFactory)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Listener.DirectReplyToMessageListenerContainer.#ctor(Steeltoe.Common.Contexts.IApplicationContext,Steeltoe.Messaging.RabbitMQ.Connection.IConnectionFactory,System.String,Microsoft.Extensions.Logging.ILoggerFactory)
  id: '#ctor(Steeltoe.Common.Contexts.IApplicationContext,Steeltoe.Messaging.RabbitMQ.Connection.IConnectionFactory,System.String,Microsoft.Extensions.Logging.ILoggerFactory)'
  parent: Steeltoe.Messaging.RabbitMQ.Listener.DirectReplyToMessageListenerContainer
  langs:
  - csharp
  - vb
  name: DirectReplyToMessageListenerContainer(IApplicationContext, IConnectionFactory, String, ILoggerFactory)
  nameWithType: DirectReplyToMessageListenerContainer.DirectReplyToMessageListenerContainer(IApplicationContext, IConnectionFactory, String, ILoggerFactory)
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.DirectReplyToMessageListenerContainer.DirectReplyToMessageListenerContainer(Steeltoe.Common.Contexts.IApplicationContext, Steeltoe.Messaging.RabbitMQ.Connection.IConnectionFactory, System.String, Microsoft.Extensions.Logging.ILoggerFactory)
  type: Constructor
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Listener/DirectReplyToMessageListenerContainer.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: .ctor
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Listener/DirectReplyToMessageListenerContainer.cs
    startLine: 31
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Listener
  syntax:
    content: public DirectReplyToMessageListenerContainer(IApplicationContext applicationContext, IConnectionFactory connectionFactory, string name = null, ILoggerFactory loggerFactory = null)
    parameters:
    - id: applicationContext
      type: Steeltoe.Common.Contexts.IApplicationContext
    - id: connectionFactory
      type: Steeltoe.Messaging.RabbitMQ.Connection.IConnectionFactory
    - id: name
      type: System.String
    - id: loggerFactory
      type: Microsoft.Extensions.Logging.ILoggerFactory
    content.vb: Public Sub New(applicationContext As IApplicationContext, connectionFactory As IConnectionFactory, name As String = Nothing, loggerFactory As ILoggerFactory = Nothing)
  overload: Steeltoe.Messaging.RabbitMQ.Listener.DirectReplyToMessageListenerContainer.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Steeltoe.Messaging.RabbitMQ.Listener.DirectReplyToMessageListenerContainer.ConsumersPerQueue
  commentId: P:Steeltoe.Messaging.RabbitMQ.Listener.DirectReplyToMessageListenerContainer.ConsumersPerQueue
  id: ConsumersPerQueue
  parent: Steeltoe.Messaging.RabbitMQ.Listener.DirectReplyToMessageListenerContainer
  langs:
  - csharp
  - vb
  name: ConsumersPerQueue
  nameWithType: DirectReplyToMessageListenerContainer.ConsumersPerQueue
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.DirectReplyToMessageListenerContainer.ConsumersPerQueue
  type: Property
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Listener/DirectReplyToMessageListenerContainer.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: ConsumersPerQueue
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Listener/DirectReplyToMessageListenerContainer.cs
    startLine: 40
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Listener
  syntax:
    content: public override int ConsumersPerQueue { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Overrides Property ConsumersPerQueue As Integer
  overridden: Steeltoe.Messaging.RabbitMQ.Listener.DirectMessageListenerContainer.ConsumersPerQueue
  overload: Steeltoe.Messaging.RabbitMQ.Listener.DirectReplyToMessageListenerContainer.ConsumersPerQueue*
  modifiers.csharp:
  - public
  - override
  - get
  - set
  modifiers.vb:
  - Public
  - Overrides
- uid: Steeltoe.Messaging.RabbitMQ.Listener.DirectReplyToMessageListenerContainer.MonitorInterval
  commentId: P:Steeltoe.Messaging.RabbitMQ.Listener.DirectReplyToMessageListenerContainer.MonitorInterval
  id: MonitorInterval
  parent: Steeltoe.Messaging.RabbitMQ.Listener.DirectReplyToMessageListenerContainer
  langs:
  - csharp
  - vb
  name: MonitorInterval
  nameWithType: DirectReplyToMessageListenerContainer.MonitorInterval
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.DirectReplyToMessageListenerContainer.MonitorInterval
  type: Property
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Listener/DirectReplyToMessageListenerContainer.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: MonitorInterval
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Listener/DirectReplyToMessageListenerContainer.cs
    startLine: 53
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Listener
  syntax:
    content: public override long MonitorInterval { get; set; }
    parameters: []
    return:
      type: System.Int64
    content.vb: Public Overrides Property MonitorInterval As Long
  overridden: Steeltoe.Messaging.RabbitMQ.Listener.DirectMessageListenerContainer.MonitorInterval
  overload: Steeltoe.Messaging.RabbitMQ.Listener.DirectReplyToMessageListenerContainer.MonitorInterval*
  modifiers.csharp:
  - public
  - override
  - get
  - set
  modifiers.vb:
  - Public
  - Overrides
- uid: Steeltoe.Messaging.RabbitMQ.Listener.DirectReplyToMessageListenerContainer.SetQueueNames(System.String[])
  commentId: M:Steeltoe.Messaging.RabbitMQ.Listener.DirectReplyToMessageListenerContainer.SetQueueNames(System.String[])
  id: SetQueueNames(System.String[])
  parent: Steeltoe.Messaging.RabbitMQ.Listener.DirectReplyToMessageListenerContainer
  langs:
  - csharp
  - vb
  name: SetQueueNames(String[])
  nameWithType: DirectReplyToMessageListenerContainer.SetQueueNames(String[])
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.DirectReplyToMessageListenerContainer.SetQueueNames(System.String[])
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Listener/DirectReplyToMessageListenerContainer.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: SetQueueNames
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Listener/DirectReplyToMessageListenerContainer.cs
    startLine: 66
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Listener
  syntax:
    content: public override void SetQueueNames(params string[] queueName)
    parameters:
    - id: queueName
      type: System.String[]
    content.vb: Public Overrides Sub SetQueueNames(ParamArray queueName As String())
  overridden: Steeltoe.Messaging.RabbitMQ.Listener.DirectMessageListenerContainer.SetQueueNames(System.String[])
  overload: Steeltoe.Messaging.RabbitMQ.Listener.DirectReplyToMessageListenerContainer.SetQueueNames*
  nameWithType.vb: DirectReplyToMessageListenerContainer.SetQueueNames(String())
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: Steeltoe.Messaging.RabbitMQ.Listener.DirectReplyToMessageListenerContainer.SetQueueNames(System.String())
  name.vb: SetQueueNames(String())
- uid: Steeltoe.Messaging.RabbitMQ.Listener.DirectReplyToMessageListenerContainer.AddQueueNames(System.String[])
  commentId: M:Steeltoe.Messaging.RabbitMQ.Listener.DirectReplyToMessageListenerContainer.AddQueueNames(System.String[])
  id: AddQueueNames(System.String[])
  parent: Steeltoe.Messaging.RabbitMQ.Listener.DirectReplyToMessageListenerContainer
  langs:
  - csharp
  - vb
  name: AddQueueNames(String[])
  nameWithType: DirectReplyToMessageListenerContainer.AddQueueNames(String[])
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.DirectReplyToMessageListenerContainer.AddQueueNames(System.String[])
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Listener/DirectReplyToMessageListenerContainer.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: AddQueueNames
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Listener/DirectReplyToMessageListenerContainer.cs
    startLine: 71
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Listener
  syntax:
    content: public override void AddQueueNames(params string[] queueName)
    parameters:
    - id: queueName
      type: System.String[]
    content.vb: Public Overrides Sub AddQueueNames(ParamArray queueName As String())
  overridden: Steeltoe.Messaging.RabbitMQ.Listener.DirectMessageListenerContainer.AddQueueNames(System.String[])
  overload: Steeltoe.Messaging.RabbitMQ.Listener.DirectReplyToMessageListenerContainer.AddQueueNames*
  nameWithType.vb: DirectReplyToMessageListenerContainer.AddQueueNames(String())
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: Steeltoe.Messaging.RabbitMQ.Listener.DirectReplyToMessageListenerContainer.AddQueueNames(System.String())
  name.vb: AddQueueNames(String())
- uid: Steeltoe.Messaging.RabbitMQ.Listener.DirectReplyToMessageListenerContainer.RemoveQueueNames(System.String[])
  commentId: M:Steeltoe.Messaging.RabbitMQ.Listener.DirectReplyToMessageListenerContainer.RemoveQueueNames(System.String[])
  id: RemoveQueueNames(System.String[])
  parent: Steeltoe.Messaging.RabbitMQ.Listener.DirectReplyToMessageListenerContainer
  langs:
  - csharp
  - vb
  name: RemoveQueueNames(String[])
  nameWithType: DirectReplyToMessageListenerContainer.RemoveQueueNames(String[])
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.DirectReplyToMessageListenerContainer.RemoveQueueNames(System.String[])
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Listener/DirectReplyToMessageListenerContainer.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: RemoveQueueNames
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Listener/DirectReplyToMessageListenerContainer.cs
    startLine: 76
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Listener
  syntax:
    content: public override bool RemoveQueueNames(params string[] queueName)
    parameters:
    - id: queueName
      type: System.String[]
    return:
      type: System.Boolean
    content.vb: Public Overrides Function RemoveQueueNames(ParamArray queueName As String()) As Boolean
  overridden: Steeltoe.Messaging.RabbitMQ.Listener.DirectMessageListenerContainer.RemoveQueueNames(System.String[])
  overload: Steeltoe.Messaging.RabbitMQ.Listener.DirectReplyToMessageListenerContainer.RemoveQueueNames*
  nameWithType.vb: DirectReplyToMessageListenerContainer.RemoveQueueNames(String())
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: Steeltoe.Messaging.RabbitMQ.Listener.DirectReplyToMessageListenerContainer.RemoveQueueNames(System.String())
  name.vb: RemoveQueueNames(String())
- uid: Steeltoe.Messaging.RabbitMQ.Listener.DirectReplyToMessageListenerContainer.MessageListener
  commentId: P:Steeltoe.Messaging.RabbitMQ.Listener.DirectReplyToMessageListenerContainer.MessageListener
  id: MessageListener
  parent: Steeltoe.Messaging.RabbitMQ.Listener.DirectReplyToMessageListenerContainer
  langs:
  - csharp
  - vb
  name: MessageListener
  nameWithType: DirectReplyToMessageListenerContainer.MessageListener
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.DirectReplyToMessageListenerContainer.MessageListener
  type: Property
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Listener/DirectReplyToMessageListenerContainer.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: MessageListener
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Listener/DirectReplyToMessageListenerContainer.cs
    startLine: 81
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Listener
  syntax:
    content: public override IMessageListener MessageListener { get; set; }
    parameters: []
    return:
      type: Steeltoe.Messaging.RabbitMQ.Listener.IMessageListener
    content.vb: Public Overrides Property MessageListener As IMessageListener
  overridden: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.MessageListener
  overload: Steeltoe.Messaging.RabbitMQ.Listener.DirectReplyToMessageListenerContainer.MessageListener*
  modifiers.csharp:
  - public
  - override
  - get
  - set
  modifiers.vb:
  - Public
  - Overrides
- uid: Steeltoe.Messaging.RabbitMQ.Listener.DirectReplyToMessageListenerContainer.GetChannelHolder
  commentId: M:Steeltoe.Messaging.RabbitMQ.Listener.DirectReplyToMessageListenerContainer.GetChannelHolder
  id: GetChannelHolder
  parent: Steeltoe.Messaging.RabbitMQ.Listener.DirectReplyToMessageListenerContainer
  langs:
  - csharp
  - vb
  name: GetChannelHolder()
  nameWithType: DirectReplyToMessageListenerContainer.GetChannelHolder()
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.DirectReplyToMessageListenerContainer.GetChannelHolder()
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Listener/DirectReplyToMessageListenerContainer.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: GetChannelHolder
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Listener/DirectReplyToMessageListenerContainer.cs
    startLine: 94
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Listener
  syntax:
    content: public DirectReplyToMessageListenerContainer.ChannelHolder GetChannelHolder()
    return:
      type: Steeltoe.Messaging.RabbitMQ.Listener.DirectReplyToMessageListenerContainer.ChannelHolder
    content.vb: Public Function GetChannelHolder As DirectReplyToMessageListenerContainer.ChannelHolder
  overload: Steeltoe.Messaging.RabbitMQ.Listener.DirectReplyToMessageListenerContainer.GetChannelHolder*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Steeltoe.Messaging.RabbitMQ.Listener.DirectReplyToMessageListenerContainer.ReleaseConsumerFor(Steeltoe.Messaging.RabbitMQ.Listener.DirectReplyToMessageListenerContainer.ChannelHolder,System.Boolean,System.String)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Listener.DirectReplyToMessageListenerContainer.ReleaseConsumerFor(Steeltoe.Messaging.RabbitMQ.Listener.DirectReplyToMessageListenerContainer.ChannelHolder,System.Boolean,System.String)
  id: ReleaseConsumerFor(Steeltoe.Messaging.RabbitMQ.Listener.DirectReplyToMessageListenerContainer.ChannelHolder,System.Boolean,System.String)
  parent: Steeltoe.Messaging.RabbitMQ.Listener.DirectReplyToMessageListenerContainer
  langs:
  - csharp
  - vb
  name: ReleaseConsumerFor(DirectReplyToMessageListenerContainer.ChannelHolder, Boolean, String)
  nameWithType: DirectReplyToMessageListenerContainer.ReleaseConsumerFor(DirectReplyToMessageListenerContainer.ChannelHolder, Boolean, String)
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.DirectReplyToMessageListenerContainer.ReleaseConsumerFor(Steeltoe.Messaging.RabbitMQ.Listener.DirectReplyToMessageListenerContainer.ChannelHolder, System.Boolean, System.String)
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Listener/DirectReplyToMessageListenerContainer.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: ReleaseConsumerFor
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Listener/DirectReplyToMessageListenerContainer.cs
    startLine: 128
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Listener
  syntax:
    content: public void ReleaseConsumerFor(DirectReplyToMessageListenerContainer.ChannelHolder channelHolder, bool cancelConsumer, string message)
    parameters:
    - id: channelHolder
      type: Steeltoe.Messaging.RabbitMQ.Listener.DirectReplyToMessageListenerContainer.ChannelHolder
    - id: cancelConsumer
      type: System.Boolean
    - id: message
      type: System.String
    content.vb: Public Sub ReleaseConsumerFor(channelHolder As DirectReplyToMessageListenerContainer.ChannelHolder, cancelConsumer As Boolean, message As String)
  overload: Steeltoe.Messaging.RabbitMQ.Listener.DirectReplyToMessageListenerContainer.ReleaseConsumerFor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Steeltoe.Messaging.RabbitMQ.Listener.DirectReplyToMessageListenerContainer.DoStart
  commentId: M:Steeltoe.Messaging.RabbitMQ.Listener.DirectReplyToMessageListenerContainer.DoStart
  id: DoStart
  parent: Steeltoe.Messaging.RabbitMQ.Listener.DirectReplyToMessageListenerContainer
  langs:
  - csharp
  - vb
  name: DoStart()
  nameWithType: DirectReplyToMessageListenerContainer.DoStart()
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.DirectReplyToMessageListenerContainer.DoStart()
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Listener/DirectReplyToMessageListenerContainer.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: DoStart
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Listener/DirectReplyToMessageListenerContainer.cs
    startLine: 154
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Listener
  syntax:
    content: protected override void DoStart()
    content.vb: Protected Overrides Sub DoStart
  overridden: Steeltoe.Messaging.RabbitMQ.Listener.DirectMessageListenerContainer.DoStart
  overload: Steeltoe.Messaging.RabbitMQ.Listener.DirectReplyToMessageListenerContainer.DoStart*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: Steeltoe.Messaging.RabbitMQ.Listener.DirectReplyToMessageListenerContainer.ProcessMonitorTask
  commentId: M:Steeltoe.Messaging.RabbitMQ.Listener.DirectReplyToMessageListenerContainer.ProcessMonitorTask
  id: ProcessMonitorTask
  parent: Steeltoe.Messaging.RabbitMQ.Listener.DirectReplyToMessageListenerContainer
  langs:
  - csharp
  - vb
  name: ProcessMonitorTask()
  nameWithType: DirectReplyToMessageListenerContainer.ProcessMonitorTask()
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.DirectReplyToMessageListenerContainer.ProcessMonitorTask()
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Listener/DirectReplyToMessageListenerContainer.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: ProcessMonitorTask
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Listener/DirectReplyToMessageListenerContainer.cs
    startLine: 164
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Listener
  syntax:
    content: protected override void ProcessMonitorTask()
    content.vb: Protected Overrides Sub ProcessMonitorTask
  overridden: Steeltoe.Messaging.RabbitMQ.Listener.DirectMessageListenerContainer.ProcessMonitorTask
  overload: Steeltoe.Messaging.RabbitMQ.Listener.DirectReplyToMessageListenerContainer.ProcessMonitorTask*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: Steeltoe.Messaging.RabbitMQ.Listener.DirectReplyToMessageListenerContainer.FindIdleConsumer
  commentId: M:Steeltoe.Messaging.RabbitMQ.Listener.DirectReplyToMessageListenerContainer.FindIdleConsumer
  id: FindIdleConsumer
  parent: Steeltoe.Messaging.RabbitMQ.Listener.DirectReplyToMessageListenerContainer
  langs:
  - csharp
  - vb
  name: FindIdleConsumer()
  nameWithType: DirectReplyToMessageListenerContainer.FindIdleConsumer()
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.DirectReplyToMessageListenerContainer.FindIdleConsumer()
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Listener/DirectReplyToMessageListenerContainer.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: FindIdleConsumer
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Listener/DirectReplyToMessageListenerContainer.cs
    startLine: 189
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Listener
  syntax:
    content: protected override int FindIdleConsumer()
    return:
      type: System.Int32
    content.vb: Protected Overrides Function FindIdleConsumer As Integer
  overridden: Steeltoe.Messaging.RabbitMQ.Listener.DirectMessageListenerContainer.FindIdleConsumer
  overload: Steeltoe.Messaging.RabbitMQ.Listener.DirectReplyToMessageListenerContainer.FindIdleConsumer*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: Steeltoe.Messaging.RabbitMQ.Listener.DirectReplyToMessageListenerContainer.ConsumerRemoved(Steeltoe.Messaging.RabbitMQ.Listener.DirectMessageListenerContainer.SimpleConsumer)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Listener.DirectReplyToMessageListenerContainer.ConsumerRemoved(Steeltoe.Messaging.RabbitMQ.Listener.DirectMessageListenerContainer.SimpleConsumer)
  id: ConsumerRemoved(Steeltoe.Messaging.RabbitMQ.Listener.DirectMessageListenerContainer.SimpleConsumer)
  parent: Steeltoe.Messaging.RabbitMQ.Listener.DirectReplyToMessageListenerContainer
  langs:
  - csharp
  - vb
  name: ConsumerRemoved(DirectMessageListenerContainer.SimpleConsumer)
  nameWithType: DirectReplyToMessageListenerContainer.ConsumerRemoved(DirectMessageListenerContainer.SimpleConsumer)
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.DirectReplyToMessageListenerContainer.ConsumerRemoved(Steeltoe.Messaging.RabbitMQ.Listener.DirectMessageListenerContainer.SimpleConsumer)
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Listener/DirectReplyToMessageListenerContainer.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: ConsumerRemoved
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Listener/DirectReplyToMessageListenerContainer.cs
    startLine: 202
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Listener
  syntax:
    content: protected override void ConsumerRemoved(DirectMessageListenerContainer.SimpleConsumer consumer)
    parameters:
    - id: consumer
      type: Steeltoe.Messaging.RabbitMQ.Listener.DirectMessageListenerContainer.SimpleConsumer
    content.vb: Protected Overrides Sub ConsumerRemoved(consumer As DirectMessageListenerContainer.SimpleConsumer)
  overridden: Steeltoe.Messaging.RabbitMQ.Listener.DirectMessageListenerContainer.ConsumerRemoved(Steeltoe.Messaging.RabbitMQ.Listener.DirectMessageListenerContainer.SimpleConsumer)
  overload: Steeltoe.Messaging.RabbitMQ.Listener.DirectReplyToMessageListenerContainer.ConsumerRemoved*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
references:
- uid: Steeltoe.Messaging.RabbitMQ.Listener
  commentId: N:Steeltoe.Messaging.RabbitMQ.Listener
  name: Steeltoe.Messaging.RabbitMQ.Listener
  nameWithType: Steeltoe.Messaging.RabbitMQ.Listener
  fullName: Steeltoe.Messaging.RabbitMQ.Listener
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer
  commentId: T:Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer
  parent: Steeltoe.Messaging.RabbitMQ.Listener
  name: AbstractMessageListenerContainer
  nameWithType: AbstractMessageListenerContainer
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer
- uid: Steeltoe.Messaging.RabbitMQ.Listener.DirectMessageListenerContainer
  commentId: T:Steeltoe.Messaging.RabbitMQ.Listener.DirectMessageListenerContainer
  parent: Steeltoe.Messaging.RabbitMQ.Listener
  name: DirectMessageListenerContainer
  nameWithType: DirectMessageListenerContainer
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.DirectMessageListenerContainer
- uid: Steeltoe.Messaging.RabbitMQ.Listener.IMessageListenerContainer
  commentId: T:Steeltoe.Messaging.RabbitMQ.Listener.IMessageListenerContainer
  parent: Steeltoe.Messaging.RabbitMQ.Listener
  name: IMessageListenerContainer
  nameWithType: IMessageListenerContainer
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.IMessageListenerContainer
- uid: Steeltoe.Common.Lifecycle.ISmartLifecycle
  commentId: T:Steeltoe.Common.Lifecycle.ISmartLifecycle
  parent: Steeltoe.Common.Lifecycle
  name: ISmartLifecycle
  nameWithType: ISmartLifecycle
  fullName: Steeltoe.Common.Lifecycle.ISmartLifecycle
- uid: Steeltoe.Common.Lifecycle.ILifecycle
  commentId: T:Steeltoe.Common.Lifecycle.ILifecycle
  parent: Steeltoe.Common.Lifecycle
  name: ILifecycle
  nameWithType: ILifecycle
  fullName: Steeltoe.Common.Lifecycle.ILifecycle
- uid: Steeltoe.Common.Lifecycle.IPhased
  commentId: T:Steeltoe.Common.Lifecycle.IPhased
  parent: Steeltoe.Common.Lifecycle
  name: IPhased
  nameWithType: IPhased
  fullName: Steeltoe.Common.Lifecycle.IPhased
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: Steeltoe.Common.Services.IServiceNameAware
  commentId: T:Steeltoe.Common.Services.IServiceNameAware
  parent: Steeltoe.Common.Services
  name: IServiceNameAware
  nameWithType: IServiceNameAware
  fullName: Steeltoe.Common.Services.IServiceNameAware
- uid: Steeltoe.Messaging.RabbitMQ.Listener.DirectMessageListenerContainer._consumers
  commentId: F:Steeltoe.Messaging.RabbitMQ.Listener.DirectMessageListenerContainer._consumers
  parent: Steeltoe.Messaging.RabbitMQ.Listener.DirectMessageListenerContainer
  name: _consumers
  nameWithType: DirectMessageListenerContainer._consumers
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.DirectMessageListenerContainer._consumers
- uid: Steeltoe.Messaging.RabbitMQ.Listener.DirectMessageListenerContainer._consumersByQueue
  commentId: F:Steeltoe.Messaging.RabbitMQ.Listener.DirectMessageListenerContainer._consumersByQueue
  parent: Steeltoe.Messaging.RabbitMQ.Listener.DirectMessageListenerContainer
  name: _consumersByQueue
  nameWithType: DirectMessageListenerContainer._consumersByQueue
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.DirectMessageListenerContainer._consumersByQueue
- uid: Steeltoe.Messaging.RabbitMQ.Listener.DirectMessageListenerContainer._cancellationLock
  commentId: F:Steeltoe.Messaging.RabbitMQ.Listener.DirectMessageListenerContainer._cancellationLock
  parent: Steeltoe.Messaging.RabbitMQ.Listener.DirectMessageListenerContainer
  name: _cancellationLock
  nameWithType: DirectMessageListenerContainer._cancellationLock
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.DirectMessageListenerContainer._cancellationLock
- uid: Steeltoe.Messaging.RabbitMQ.Listener.DirectMessageListenerContainer._consumersToRestart
  commentId: F:Steeltoe.Messaging.RabbitMQ.Listener.DirectMessageListenerContainer._consumersToRestart
  parent: Steeltoe.Messaging.RabbitMQ.Listener.DirectMessageListenerContainer
  name: _consumersToRestart
  nameWithType: DirectMessageListenerContainer._consumersToRestart
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.DirectMessageListenerContainer._consumersToRestart
- uid: Steeltoe.Messaging.RabbitMQ.Listener.DirectMessageListenerContainer.START_WAIT_TIME
  commentId: F:Steeltoe.Messaging.RabbitMQ.Listener.DirectMessageListenerContainer.START_WAIT_TIME
  parent: Steeltoe.Messaging.RabbitMQ.Listener.DirectMessageListenerContainer
  name: START_WAIT_TIME
  nameWithType: DirectMessageListenerContainer.START_WAIT_TIME
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.DirectMessageListenerContainer.START_WAIT_TIME
- uid: Steeltoe.Messaging.RabbitMQ.Listener.DirectMessageListenerContainer.DEFAULT_MONITOR_INTERVAL
  commentId: F:Steeltoe.Messaging.RabbitMQ.Listener.DirectMessageListenerContainer.DEFAULT_MONITOR_INTERVAL
  parent: Steeltoe.Messaging.RabbitMQ.Listener.DirectMessageListenerContainer
  name: DEFAULT_MONITOR_INTERVAL
  nameWithType: DirectMessageListenerContainer.DEFAULT_MONITOR_INTERVAL
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.DirectMessageListenerContainer.DEFAULT_MONITOR_INTERVAL
- uid: Steeltoe.Messaging.RabbitMQ.Listener.DirectMessageListenerContainer.DEFAULT_ACK_TIMEOUT
  commentId: F:Steeltoe.Messaging.RabbitMQ.Listener.DirectMessageListenerContainer.DEFAULT_ACK_TIMEOUT
  parent: Steeltoe.Messaging.RabbitMQ.Listener.DirectMessageListenerContainer
  name: DEFAULT_ACK_TIMEOUT
  nameWithType: DirectMessageListenerContainer.DEFAULT_ACK_TIMEOUT
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.DirectMessageListenerContainer.DEFAULT_ACK_TIMEOUT
- uid: Steeltoe.Messaging.RabbitMQ.Listener.DirectMessageListenerContainer.Exclusive
  commentId: P:Steeltoe.Messaging.RabbitMQ.Listener.DirectMessageListenerContainer.Exclusive
  parent: Steeltoe.Messaging.RabbitMQ.Listener.DirectMessageListenerContainer
  name: Exclusive
  nameWithType: DirectMessageListenerContainer.Exclusive
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.DirectMessageListenerContainer.Exclusive
- uid: Steeltoe.Messaging.RabbitMQ.Listener.DirectMessageListenerContainer.MessagesPerAck
  commentId: P:Steeltoe.Messaging.RabbitMQ.Listener.DirectMessageListenerContainer.MessagesPerAck
  parent: Steeltoe.Messaging.RabbitMQ.Listener.DirectMessageListenerContainer
  name: MessagesPerAck
  nameWithType: DirectMessageListenerContainer.MessagesPerAck
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.DirectMessageListenerContainer.MessagesPerAck
- uid: Steeltoe.Messaging.RabbitMQ.Listener.DirectMessageListenerContainer.AckTimeout
  commentId: P:Steeltoe.Messaging.RabbitMQ.Listener.DirectMessageListenerContainer.AckTimeout
  parent: Steeltoe.Messaging.RabbitMQ.Listener.DirectMessageListenerContainer
  name: AckTimeout
  nameWithType: DirectMessageListenerContainer.AckTimeout
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.DirectMessageListenerContainer.AckTimeout
- uid: Steeltoe.Messaging.RabbitMQ.Listener.DirectMessageListenerContainer.LastRestartAttempt
  commentId: P:Steeltoe.Messaging.RabbitMQ.Listener.DirectMessageListenerContainer.LastRestartAttempt
  parent: Steeltoe.Messaging.RabbitMQ.Listener.DirectMessageListenerContainer
  name: LastRestartAttempt
  nameWithType: DirectMessageListenerContainer.LastRestartAttempt
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.DirectMessageListenerContainer.LastRestartAttempt
- uid: Steeltoe.Messaging.RabbitMQ.Listener.DirectMessageListenerContainer.AddQueues(Steeltoe.Messaging.RabbitMQ.Config.IQueue[])
  commentId: M:Steeltoe.Messaging.RabbitMQ.Listener.DirectMessageListenerContainer.AddQueues(Steeltoe.Messaging.RabbitMQ.Config.IQueue[])
  parent: Steeltoe.Messaging.RabbitMQ.Listener.DirectMessageListenerContainer
  name: AddQueues(IQueue[])
  nameWithType: DirectMessageListenerContainer.AddQueues(IQueue[])
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.DirectMessageListenerContainer.AddQueues(Steeltoe.Messaging.RabbitMQ.Config.IQueue[])
  nameWithType.vb: DirectMessageListenerContainer.AddQueues(IQueue())
  fullName.vb: Steeltoe.Messaging.RabbitMQ.Listener.DirectMessageListenerContainer.AddQueues(Steeltoe.Messaging.RabbitMQ.Config.IQueue())
  name.vb: AddQueues(IQueue())
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Listener.DirectMessageListenerContainer.AddQueues(Steeltoe.Messaging.RabbitMQ.Config.IQueue[])
    name: AddQueues
    nameWithType: DirectMessageListenerContainer.AddQueues
    fullName: Steeltoe.Messaging.RabbitMQ.Listener.DirectMessageListenerContainer.AddQueues
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.RabbitMQ.Config.IQueue
    name: IQueue
    nameWithType: IQueue
    fullName: Steeltoe.Messaging.RabbitMQ.Config.IQueue
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Listener.DirectMessageListenerContainer.AddQueues(Steeltoe.Messaging.RabbitMQ.Config.IQueue[])
    name: AddQueues
    nameWithType: DirectMessageListenerContainer.AddQueues
    fullName: Steeltoe.Messaging.RabbitMQ.Listener.DirectMessageListenerContainer.AddQueues
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.RabbitMQ.Config.IQueue
    name: IQueue
    nameWithType: IQueue
    fullName: Steeltoe.Messaging.RabbitMQ.Config.IQueue
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Listener.DirectMessageListenerContainer.RemoveQueues(Steeltoe.Messaging.RabbitMQ.Config.IQueue[])
  commentId: M:Steeltoe.Messaging.RabbitMQ.Listener.DirectMessageListenerContainer.RemoveQueues(Steeltoe.Messaging.RabbitMQ.Config.IQueue[])
  parent: Steeltoe.Messaging.RabbitMQ.Listener.DirectMessageListenerContainer
  name: RemoveQueues(IQueue[])
  nameWithType: DirectMessageListenerContainer.RemoveQueues(IQueue[])
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.DirectMessageListenerContainer.RemoveQueues(Steeltoe.Messaging.RabbitMQ.Config.IQueue[])
  nameWithType.vb: DirectMessageListenerContainer.RemoveQueues(IQueue())
  fullName.vb: Steeltoe.Messaging.RabbitMQ.Listener.DirectMessageListenerContainer.RemoveQueues(Steeltoe.Messaging.RabbitMQ.Config.IQueue())
  name.vb: RemoveQueues(IQueue())
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Listener.DirectMessageListenerContainer.RemoveQueues(Steeltoe.Messaging.RabbitMQ.Config.IQueue[])
    name: RemoveQueues
    nameWithType: DirectMessageListenerContainer.RemoveQueues
    fullName: Steeltoe.Messaging.RabbitMQ.Listener.DirectMessageListenerContainer.RemoveQueues
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.RabbitMQ.Config.IQueue
    name: IQueue
    nameWithType: IQueue
    fullName: Steeltoe.Messaging.RabbitMQ.Config.IQueue
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Listener.DirectMessageListenerContainer.RemoveQueues(Steeltoe.Messaging.RabbitMQ.Config.IQueue[])
    name: RemoveQueues
    nameWithType: DirectMessageListenerContainer.RemoveQueues
    fullName: Steeltoe.Messaging.RabbitMQ.Listener.DirectMessageListenerContainer.RemoveQueues
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.RabbitMQ.Config.IQueue
    name: IQueue
    nameWithType: IQueue
    fullName: Steeltoe.Messaging.RabbitMQ.Config.IQueue
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Listener.DirectMessageListenerContainer.DoInitialize
  commentId: M:Steeltoe.Messaging.RabbitMQ.Listener.DirectMessageListenerContainer.DoInitialize
  parent: Steeltoe.Messaging.RabbitMQ.Listener.DirectMessageListenerContainer
  name: DoInitialize()
  nameWithType: DirectMessageListenerContainer.DoInitialize()
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.DirectMessageListenerContainer.DoInitialize()
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Listener.DirectMessageListenerContainer.DoInitialize
    name: DoInitialize
    nameWithType: DirectMessageListenerContainer.DoInitialize
    fullName: Steeltoe.Messaging.RabbitMQ.Listener.DirectMessageListenerContainer.DoInitialize
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Listener.DirectMessageListenerContainer.DoInitialize
    name: DoInitialize
    nameWithType: DirectMessageListenerContainer.DoInitialize
    fullName: Steeltoe.Messaging.RabbitMQ.Listener.DirectMessageListenerContainer.DoInitialize
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Listener.DirectMessageListenerContainer.ActualStart
  commentId: M:Steeltoe.Messaging.RabbitMQ.Listener.DirectMessageListenerContainer.ActualStart
  parent: Steeltoe.Messaging.RabbitMQ.Listener.DirectMessageListenerContainer
  name: ActualStart()
  nameWithType: DirectMessageListenerContainer.ActualStart()
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.DirectMessageListenerContainer.ActualStart()
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Listener.DirectMessageListenerContainer.ActualStart
    name: ActualStart
    nameWithType: DirectMessageListenerContainer.ActualStart
    fullName: Steeltoe.Messaging.RabbitMQ.Listener.DirectMessageListenerContainer.ActualStart
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Listener.DirectMessageListenerContainer.ActualStart
    name: ActualStart
    nameWithType: DirectMessageListenerContainer.ActualStart
    fullName: Steeltoe.Messaging.RabbitMQ.Listener.DirectMessageListenerContainer.ActualStart
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Listener.DirectMessageListenerContainer.DoRedeclareElementsIfNecessary
  commentId: M:Steeltoe.Messaging.RabbitMQ.Listener.DirectMessageListenerContainer.DoRedeclareElementsIfNecessary
  parent: Steeltoe.Messaging.RabbitMQ.Listener.DirectMessageListenerContainer
  name: DoRedeclareElementsIfNecessary()
  nameWithType: DirectMessageListenerContainer.DoRedeclareElementsIfNecessary()
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.DirectMessageListenerContainer.DoRedeclareElementsIfNecessary()
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Listener.DirectMessageListenerContainer.DoRedeclareElementsIfNecessary
    name: DoRedeclareElementsIfNecessary
    nameWithType: DirectMessageListenerContainer.DoRedeclareElementsIfNecessary
    fullName: Steeltoe.Messaging.RabbitMQ.Listener.DirectMessageListenerContainer.DoRedeclareElementsIfNecessary
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Listener.DirectMessageListenerContainer.DoRedeclareElementsIfNecessary
    name: DoRedeclareElementsIfNecessary
    nameWithType: DirectMessageListenerContainer.DoRedeclareElementsIfNecessary
    fullName: Steeltoe.Messaging.RabbitMQ.Listener.DirectMessageListenerContainer.DoRedeclareElementsIfNecessary
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Listener.DirectMessageListenerContainer.DoShutdown
  commentId: M:Steeltoe.Messaging.RabbitMQ.Listener.DirectMessageListenerContainer.DoShutdown
  parent: Steeltoe.Messaging.RabbitMQ.Listener.DirectMessageListenerContainer
  name: DoShutdown()
  nameWithType: DirectMessageListenerContainer.DoShutdown()
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.DirectMessageListenerContainer.DoShutdown()
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Listener.DirectMessageListenerContainer.DoShutdown
    name: DoShutdown
    nameWithType: DirectMessageListenerContainer.DoShutdown
    fullName: Steeltoe.Messaging.RabbitMQ.Listener.DirectMessageListenerContainer.DoShutdown
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Listener.DirectMessageListenerContainer.DoShutdown
    name: DoShutdown
    nameWithType: DirectMessageListenerContainer.DoShutdown
    fullName: Steeltoe.Messaging.RabbitMQ.Listener.DirectMessageListenerContainer.DoShutdown
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.DEFAULT_FAILED_DECLARATION_RETRY_INTERVAL
  commentId: F:Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.DEFAULT_FAILED_DECLARATION_RETRY_INTERVAL
  parent: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer
  name: DEFAULT_FAILED_DECLARATION_RETRY_INTERVAL
  nameWithType: AbstractMessageListenerContainer.DEFAULT_FAILED_DECLARATION_RETRY_INTERVAL
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.DEFAULT_FAILED_DECLARATION_RETRY_INTERVAL
- uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.DEFAULT_SHUTDOWN_TIMEOUT
  commentId: F:Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.DEFAULT_SHUTDOWN_TIMEOUT
  parent: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer
  name: DEFAULT_SHUTDOWN_TIMEOUT
  nameWithType: AbstractMessageListenerContainer.DEFAULT_SHUTDOWN_TIMEOUT
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.DEFAULT_SHUTDOWN_TIMEOUT
- uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.DEFAULT_RECOVERY_INTERVAL
  commentId: F:Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.DEFAULT_RECOVERY_INTERVAL
  parent: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer
  name: DEFAULT_RECOVERY_INTERVAL
  nameWithType: AbstractMessageListenerContainer.DEFAULT_RECOVERY_INTERVAL
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.DEFAULT_RECOVERY_INTERVAL
- uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.DEFAULT_DEBATCHING_ENABLED
  commentId: F:Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.DEFAULT_DEBATCHING_ENABLED
  parent: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer
  name: DEFAULT_DEBATCHING_ENABLED
  nameWithType: AbstractMessageListenerContainer.DEFAULT_DEBATCHING_ENABLED
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.DEFAULT_DEBATCHING_ENABLED
- uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.DEFAULT_PREFETCH_COUNT
  commentId: F:Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.DEFAULT_PREFETCH_COUNT
  parent: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer
  name: DEFAULT_PREFETCH_COUNT
  nameWithType: AbstractMessageListenerContainer.DEFAULT_PREFETCH_COUNT
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.DEFAULT_PREFETCH_COUNT
- uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer._consumersMonitor
  commentId: F:Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer._consumersMonitor
  parent: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer
  name: _consumersMonitor
  nameWithType: AbstractMessageListenerContainer._consumersMonitor
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer._consumersMonitor
- uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer._lock
  commentId: F:Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer._lock
  parent: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer
  name: _lock
  nameWithType: AbstractMessageListenerContainer._lock
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer._lock
- uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer._lifecycleMonitor
  commentId: F:Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer._lifecycleMonitor
  parent: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer
  name: _lifecycleMonitor
  nameWithType: AbstractMessageListenerContainer._lifecycleMonitor
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer._lifecycleMonitor
- uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer._logger
  commentId: F:Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer._logger
  parent: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer
  name: _logger
  nameWithType: AbstractMessageListenerContainer._logger
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer._logger
- uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer._loggerFactory
  commentId: F:Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer._loggerFactory
  parent: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer
  name: _loggerFactory
  nameWithType: AbstractMessageListenerContainer._loggerFactory
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer._loggerFactory
- uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer._recoveryInterval
  commentId: F:Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer._recoveryInterval
  parent: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer
  name: _recoveryInterval
  nameWithType: AbstractMessageListenerContainer._recoveryInterval
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer._recoveryInterval
- uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.ConnectionFactory
  commentId: P:Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.ConnectionFactory
  parent: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer
  name: ConnectionFactory
  nameWithType: AbstractMessageListenerContainer.ConnectionFactory
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.ConnectionFactory
- uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.IsChannelTransacted
  commentId: P:Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.IsChannelTransacted
  parent: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer
  name: IsChannelTransacted
  nameWithType: AbstractMessageListenerContainer.IsChannelTransacted
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.IsChannelTransacted
- uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.ApplicationContext
  commentId: P:Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.ApplicationContext
  parent: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer
  name: ApplicationContext
  nameWithType: AbstractMessageListenerContainer.ApplicationContext
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.ApplicationContext
- uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.AcknowledgeMode
  commentId: P:Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.AcknowledgeMode
  parent: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer
  name: AcknowledgeMode
  nameWithType: AbstractMessageListenerContainer.AcknowledgeMode
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.AcknowledgeMode
- uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.ServiceName
  commentId: P:Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.ServiceName
  parent: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer
  name: ServiceName
  nameWithType: AbstractMessageListenerContainer.ServiceName
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.ServiceName
- uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.ExposeListenerChannel
  commentId: P:Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.ExposeListenerChannel
  parent: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer
  name: ExposeListenerChannel
  nameWithType: AbstractMessageListenerContainer.ExposeListenerChannel
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.ExposeListenerChannel
- uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.ErrorHandler
  commentId: P:Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.ErrorHandler
  parent: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer
  name: ErrorHandler
  nameWithType: AbstractMessageListenerContainer.ErrorHandler
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.ErrorHandler
- uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.IsDeBatchingEnabled
  commentId: P:Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.IsDeBatchingEnabled
  parent: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer
  name: IsDeBatchingEnabled
  nameWithType: AbstractMessageListenerContainer.IsDeBatchingEnabled
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.IsDeBatchingEnabled
- uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.AfterReceivePostProcessors
  commentId: P:Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.AfterReceivePostProcessors
  parent: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer
  name: AfterReceivePostProcessors
  nameWithType: AbstractMessageListenerContainer.AfterReceivePostProcessors
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.AfterReceivePostProcessors
- uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.IsAutoStartup
  commentId: P:Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.IsAutoStartup
  parent: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer
  name: IsAutoStartup
  nameWithType: AbstractMessageListenerContainer.IsAutoStartup
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.IsAutoStartup
- uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.Phase
  commentId: P:Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.Phase
  parent: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer
  name: Phase
  nameWithType: AbstractMessageListenerContainer.Phase
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.Phase
- uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.LookupKeyQualifier
  commentId: P:Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.LookupKeyQualifier
  parent: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer
  name: LookupKeyQualifier
  nameWithType: AbstractMessageListenerContainer.LookupKeyQualifier
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.LookupKeyQualifier
- uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.ListenerId
  commentId: P:Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.ListenerId
  parent: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer
  name: ListenerId
  nameWithType: AbstractMessageListenerContainer.ListenerId
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.ListenerId
- uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.ConsumerTagStrategy
  commentId: P:Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.ConsumerTagStrategy
  parent: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer
  name: ConsumerTagStrategy
  nameWithType: AbstractMessageListenerContainer.ConsumerTagStrategy
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.ConsumerTagStrategy
- uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.ConsumerArguments
  commentId: P:Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.ConsumerArguments
  parent: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer
  name: ConsumerArguments
  nameWithType: AbstractMessageListenerContainer.ConsumerArguments
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.ConsumerArguments
- uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.NoLocal
  commentId: P:Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.NoLocal
  parent: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer
  name: NoLocal
  nameWithType: AbstractMessageListenerContainer.NoLocal
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.NoLocal
- uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.DefaultRequeueRejected
  commentId: P:Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.DefaultRequeueRejected
  parent: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer
  name: DefaultRequeueRejected
  nameWithType: AbstractMessageListenerContainer.DefaultRequeueRejected
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.DefaultRequeueRejected
- uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.PrefetchCount
  commentId: P:Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.PrefetchCount
  parent: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer
  name: PrefetchCount
  nameWithType: AbstractMessageListenerContainer.PrefetchCount
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.PrefetchCount
- uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.ShutdownTimeout
  commentId: P:Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.ShutdownTimeout
  parent: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer
  name: ShutdownTimeout
  nameWithType: AbstractMessageListenerContainer.ShutdownTimeout
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.ShutdownTimeout
- uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.IdleEventInterval
  commentId: P:Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.IdleEventInterval
  parent: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer
  name: IdleEventInterval
  nameWithType: AbstractMessageListenerContainer.IdleEventInterval
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.IdleEventInterval
- uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.RecoveryInterval
  commentId: P:Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.RecoveryInterval
  parent: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer
  name: RecoveryInterval
  nameWithType: AbstractMessageListenerContainer.RecoveryInterval
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.RecoveryInterval
- uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.RecoveryBackOff
  commentId: P:Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.RecoveryBackOff
  parent: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer
  name: RecoveryBackOff
  nameWithType: AbstractMessageListenerContainer.RecoveryBackOff
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.RecoveryBackOff
- uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.MessageHeadersConverter
  commentId: P:Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.MessageHeadersConverter
  parent: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer
  name: MessageHeadersConverter
  nameWithType: AbstractMessageListenerContainer.MessageHeadersConverter
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.MessageHeadersConverter
- uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.RabbitAdmin
  commentId: P:Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.RabbitAdmin
  parent: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer
  name: RabbitAdmin
  nameWithType: AbstractMessageListenerContainer.RabbitAdmin
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.RabbitAdmin
- uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.MissingQueuesFatal
  commentId: P:Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.MissingQueuesFatal
  parent: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer
  name: MissingQueuesFatal
  nameWithType: AbstractMessageListenerContainer.MissingQueuesFatal
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.MissingQueuesFatal
- uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.MismatchedQueuesFatal
  commentId: P:Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.MismatchedQueuesFatal
  parent: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer
  name: MismatchedQueuesFatal
  nameWithType: AbstractMessageListenerContainer.MismatchedQueuesFatal
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.MismatchedQueuesFatal
- uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.PossibleAuthenticationFailureFatal
  commentId: P:Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.PossibleAuthenticationFailureFatal
  parent: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer
  name: PossibleAuthenticationFailureFatal
  nameWithType: AbstractMessageListenerContainer.PossibleAuthenticationFailureFatal
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.PossibleAuthenticationFailureFatal
- uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.AutoDeclare
  commentId: P:Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.AutoDeclare
  parent: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer
  name: AutoDeclare
  nameWithType: AbstractMessageListenerContainer.AutoDeclare
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.AutoDeclare
- uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.FailedDeclarationRetryInterval
  commentId: P:Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.FailedDeclarationRetryInterval
  parent: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer
  name: FailedDeclarationRetryInterval
  nameWithType: AbstractMessageListenerContainer.FailedDeclarationRetryInterval
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.FailedDeclarationRetryInterval
- uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.StatefulRetryFatalWithNullMessageId
  commentId: P:Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.StatefulRetryFatalWithNullMessageId
  parent: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer
  name: StatefulRetryFatalWithNullMessageId
  nameWithType: AbstractMessageListenerContainer.StatefulRetryFatalWithNullMessageId
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.StatefulRetryFatalWithNullMessageId
- uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.ExclusiveConsumerExceptionLogger
  commentId: P:Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.ExclusiveConsumerExceptionLogger
  parent: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer
  name: ExclusiveConsumerExceptionLogger
  nameWithType: AbstractMessageListenerContainer.ExclusiveConsumerExceptionLogger
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.ExclusiveConsumerExceptionLogger
- uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.AlwaysRequeueWithTxManagerRollback
  commentId: P:Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.AlwaysRequeueWithTxManagerRollback
  parent: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer
  name: AlwaysRequeueWithTxManagerRollback
  nameWithType: AbstractMessageListenerContainer.AlwaysRequeueWithTxManagerRollback
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.AlwaysRequeueWithTxManagerRollback
- uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.BatchingStrategy
  commentId: P:Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.BatchingStrategy
  parent: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer
  name: BatchingStrategy
  nameWithType: AbstractMessageListenerContainer.BatchingStrategy
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.BatchingStrategy
- uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.IsRunning
  commentId: P:Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.IsRunning
  parent: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer
  name: IsRunning
  nameWithType: AbstractMessageListenerContainer.IsRunning
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.IsRunning
- uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.IsActive
  commentId: P:Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.IsActive
  parent: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer
  name: IsActive
  nameWithType: AbstractMessageListenerContainer.IsActive
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.IsActive
- uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.IsLazyLoad
  commentId: P:Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.IsLazyLoad
  parent: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer
  name: IsLazyLoad
  nameWithType: AbstractMessageListenerContainer.IsLazyLoad
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.IsLazyLoad
- uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.Initialized
  commentId: P:Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.Initialized
  parent: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer
  name: Initialized
  nameWithType: AbstractMessageListenerContainer.Initialized
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.Initialized
- uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.TransactionManager
  commentId: P:Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.TransactionManager
  parent: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer
  name: TransactionManager
  nameWithType: AbstractMessageListenerContainer.TransactionManager
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.TransactionManager
- uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.TransactionAttribute
  commentId: P:Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.TransactionAttribute
  parent: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer
  name: TransactionAttribute
  nameWithType: AbstractMessageListenerContainer.TransactionAttribute
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.TransactionAttribute
- uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.GetQueueNames
  commentId: M:Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.GetQueueNames
  parent: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer
  name: GetQueueNames()
  nameWithType: AbstractMessageListenerContainer.GetQueueNames()
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.GetQueueNames()
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.GetQueueNames
    name: GetQueueNames
    nameWithType: AbstractMessageListenerContainer.GetQueueNames
    fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.GetQueueNames
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.GetQueueNames
    name: GetQueueNames
    nameWithType: AbstractMessageListenerContainer.GetQueueNames
    fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.GetQueueNames
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.SetQueues(Steeltoe.Messaging.RabbitMQ.Config.IQueue[])
  commentId: M:Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.SetQueues(Steeltoe.Messaging.RabbitMQ.Config.IQueue[])
  parent: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer
  name: SetQueues(IQueue[])
  nameWithType: AbstractMessageListenerContainer.SetQueues(IQueue[])
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.SetQueues(Steeltoe.Messaging.RabbitMQ.Config.IQueue[])
  nameWithType.vb: AbstractMessageListenerContainer.SetQueues(IQueue())
  fullName.vb: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.SetQueues(Steeltoe.Messaging.RabbitMQ.Config.IQueue())
  name.vb: SetQueues(IQueue())
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.SetQueues(Steeltoe.Messaging.RabbitMQ.Config.IQueue[])
    name: SetQueues
    nameWithType: AbstractMessageListenerContainer.SetQueues
    fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.SetQueues
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.RabbitMQ.Config.IQueue
    name: IQueue
    nameWithType: IQueue
    fullName: Steeltoe.Messaging.RabbitMQ.Config.IQueue
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.SetQueues(Steeltoe.Messaging.RabbitMQ.Config.IQueue[])
    name: SetQueues
    nameWithType: AbstractMessageListenerContainer.SetQueues
    fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.SetQueues
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.RabbitMQ.Config.IQueue
    name: IQueue
    nameWithType: IQueue
    fullName: Steeltoe.Messaging.RabbitMQ.Config.IQueue
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.SetAfterReceivePostProcessors(Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor[])
  commentId: M:Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.SetAfterReceivePostProcessors(Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor[])
  parent: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer
  name: SetAfterReceivePostProcessors(IMessagePostProcessor[])
  nameWithType: AbstractMessageListenerContainer.SetAfterReceivePostProcessors(IMessagePostProcessor[])
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.SetAfterReceivePostProcessors(Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor[])
  nameWithType.vb: AbstractMessageListenerContainer.SetAfterReceivePostProcessors(IMessagePostProcessor())
  fullName.vb: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.SetAfterReceivePostProcessors(Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor())
  name.vb: SetAfterReceivePostProcessors(IMessagePostProcessor())
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.SetAfterReceivePostProcessors(Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor[])
    name: SetAfterReceivePostProcessors
    nameWithType: AbstractMessageListenerContainer.SetAfterReceivePostProcessors
    fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.SetAfterReceivePostProcessors
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor
    name: IMessagePostProcessor
    nameWithType: IMessagePostProcessor
    fullName: Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.SetAfterReceivePostProcessors(Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor[])
    name: SetAfterReceivePostProcessors
    nameWithType: AbstractMessageListenerContainer.SetAfterReceivePostProcessors
    fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.SetAfterReceivePostProcessors
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor
    name: IMessagePostProcessor
    nameWithType: IMessagePostProcessor
    fullName: Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.AddAfterReceivePostProcessors(Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor[])
  commentId: M:Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.AddAfterReceivePostProcessors(Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor[])
  parent: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer
  name: AddAfterReceivePostProcessors(IMessagePostProcessor[])
  nameWithType: AbstractMessageListenerContainer.AddAfterReceivePostProcessors(IMessagePostProcessor[])
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.AddAfterReceivePostProcessors(Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor[])
  nameWithType.vb: AbstractMessageListenerContainer.AddAfterReceivePostProcessors(IMessagePostProcessor())
  fullName.vb: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.AddAfterReceivePostProcessors(Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor())
  name.vb: AddAfterReceivePostProcessors(IMessagePostProcessor())
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.AddAfterReceivePostProcessors(Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor[])
    name: AddAfterReceivePostProcessors
    nameWithType: AbstractMessageListenerContainer.AddAfterReceivePostProcessors
    fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.AddAfterReceivePostProcessors
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor
    name: IMessagePostProcessor
    nameWithType: IMessagePostProcessor
    fullName: Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.AddAfterReceivePostProcessors(Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor[])
    name: AddAfterReceivePostProcessors
    nameWithType: AbstractMessageListenerContainer.AddAfterReceivePostProcessors
    fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.AddAfterReceivePostProcessors
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor
    name: IMessagePostProcessor
    nameWithType: IMessagePostProcessor
    fullName: Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.RemoveAfterReceivePostProcessor(Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.RemoveAfterReceivePostProcessor(Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor)
  parent: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer
  name: RemoveAfterReceivePostProcessor(IMessagePostProcessor)
  nameWithType: AbstractMessageListenerContainer.RemoveAfterReceivePostProcessor(IMessagePostProcessor)
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.RemoveAfterReceivePostProcessor(Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor)
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.RemoveAfterReceivePostProcessor(Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor)
    name: RemoveAfterReceivePostProcessor
    nameWithType: AbstractMessageListenerContainer.RemoveAfterReceivePostProcessor
    fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.RemoveAfterReceivePostProcessor
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor
    name: IMessagePostProcessor
    nameWithType: IMessagePostProcessor
    fullName: Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.RemoveAfterReceivePostProcessor(Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor)
    name: RemoveAfterReceivePostProcessor
    nameWithType: AbstractMessageListenerContainer.RemoveAfterReceivePostProcessor
    fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.RemoveAfterReceivePostProcessor
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor
    name: IMessagePostProcessor
    nameWithType: IMessagePostProcessor
    fullName: Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.SetupMessageListener(Steeltoe.Messaging.RabbitMQ.Listener.IMessageListener)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.SetupMessageListener(Steeltoe.Messaging.RabbitMQ.Listener.IMessageListener)
  parent: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer
  name: SetupMessageListener(IMessageListener)
  nameWithType: AbstractMessageListenerContainer.SetupMessageListener(IMessageListener)
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.SetupMessageListener(Steeltoe.Messaging.RabbitMQ.Listener.IMessageListener)
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.SetupMessageListener(Steeltoe.Messaging.RabbitMQ.Listener.IMessageListener)
    name: SetupMessageListener
    nameWithType: AbstractMessageListenerContainer.SetupMessageListener
    fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.SetupMessageListener
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.RabbitMQ.Listener.IMessageListener
    name: IMessageListener
    nameWithType: IMessageListener
    fullName: Steeltoe.Messaging.RabbitMQ.Listener.IMessageListener
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.SetupMessageListener(Steeltoe.Messaging.RabbitMQ.Listener.IMessageListener)
    name: SetupMessageListener
    nameWithType: AbstractMessageListenerContainer.SetupMessageListener
    fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.SetupMessageListener
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.RabbitMQ.Listener.IMessageListener
    name: IMessageListener
    nameWithType: IMessageListener
    fullName: Steeltoe.Messaging.RabbitMQ.Listener.IMessageListener
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.GetConnectionFactory
  commentId: M:Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.GetConnectionFactory
  parent: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer
  name: GetConnectionFactory()
  nameWithType: AbstractMessageListenerContainer.GetConnectionFactory()
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.GetConnectionFactory()
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.GetConnectionFactory
    name: GetConnectionFactory
    nameWithType: AbstractMessageListenerContainer.GetConnectionFactory
    fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.GetConnectionFactory
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.GetConnectionFactory
    name: GetConnectionFactory
    nameWithType: AbstractMessageListenerContainer.GetConnectionFactory
    fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.GetConnectionFactory
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.Initialize
  commentId: M:Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.Initialize
  parent: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer
  name: Initialize()
  nameWithType: AbstractMessageListenerContainer.Initialize()
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.Initialize()
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.Initialize
    name: Initialize
    nameWithType: AbstractMessageListenerContainer.Initialize
    fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.Initialize
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.Initialize
    name: Initialize
    nameWithType: AbstractMessageListenerContainer.Initialize
    fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.Initialize
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.Dispose
  commentId: M:Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.Dispose
  parent: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer
  name: Dispose()
  nameWithType: AbstractMessageListenerContainer.Dispose()
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.Dispose()
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.Dispose
    name: Dispose
    nameWithType: AbstractMessageListenerContainer.Dispose
    fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.Dispose
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.Dispose
    name: Dispose
    nameWithType: AbstractMessageListenerContainer.Dispose
    fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.Dispose
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.Shutdown
  commentId: M:Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.Shutdown
  parent: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer
  name: Shutdown()
  nameWithType: AbstractMessageListenerContainer.Shutdown()
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.Shutdown()
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.Shutdown
    name: Shutdown
    nameWithType: AbstractMessageListenerContainer.Shutdown
    fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.Shutdown
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.Shutdown
    name: Shutdown
    nameWithType: AbstractMessageListenerContainer.Shutdown
    fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.Shutdown
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.Start
  commentId: M:Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.Start
  parent: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer
  name: Start()
  nameWithType: AbstractMessageListenerContainer.Start()
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.Start()
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.Start
    name: Start
    nameWithType: AbstractMessageListenerContainer.Start
    fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.Start
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.Start
    name: Start
    nameWithType: AbstractMessageListenerContainer.Start
    fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.Start
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.Stop
  commentId: M:Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.Stop
  parent: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer
  name: Stop()
  nameWithType: AbstractMessageListenerContainer.Stop()
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.Stop()
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.Stop
    name: Stop
    nameWithType: AbstractMessageListenerContainer.Stop
    fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.Stop
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.Stop
    name: Stop
    nameWithType: AbstractMessageListenerContainer.Stop
    fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.Stop
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.Stop(System.Action)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.Stop(System.Action)
  parent: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer
  isExternal: true
  name: Stop(Action)
  nameWithType: AbstractMessageListenerContainer.Stop(Action)
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.Stop(System.Action)
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.Stop(System.Action)
    name: Stop
    nameWithType: AbstractMessageListenerContainer.Stop
    fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.Stop
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.Stop(System.Action)
    name: Stop
    nameWithType: AbstractMessageListenerContainer.Stop
    fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.Stop
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.LazyLoad
  commentId: M:Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.LazyLoad
  parent: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer
  name: LazyLoad()
  nameWithType: AbstractMessageListenerContainer.LazyLoad()
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.LazyLoad()
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.LazyLoad
    name: LazyLoad
    nameWithType: AbstractMessageListenerContainer.LazyLoad
    fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.LazyLoad
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.LazyLoad
    name: LazyLoad
    nameWithType: AbstractMessageListenerContainer.LazyLoad
    fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.LazyLoad
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.CreateConnection
  commentId: M:Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.CreateConnection
  parent: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer
  name: CreateConnection()
  nameWithType: AbstractMessageListenerContainer.CreateConnection()
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.CreateConnection()
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.CreateConnection
    name: CreateConnection
    nameWithType: AbstractMessageListenerContainer.CreateConnection
    fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.CreateConnection
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.CreateConnection
    name: CreateConnection
    nameWithType: AbstractMessageListenerContainer.CreateConnection
    fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.CreateConnection
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.GetTransactionalResourceHolder
  commentId: M:Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.GetTransactionalResourceHolder
  parent: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer
  name: GetTransactionalResourceHolder()
  nameWithType: AbstractMessageListenerContainer.GetTransactionalResourceHolder()
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.GetTransactionalResourceHolder()
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.GetTransactionalResourceHolder
    name: GetTransactionalResourceHolder
    nameWithType: AbstractMessageListenerContainer.GetTransactionalResourceHolder
    fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.GetTransactionalResourceHolder
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.GetTransactionalResourceHolder
    name: GetTransactionalResourceHolder
    nameWithType: AbstractMessageListenerContainer.GetTransactionalResourceHolder
    fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.GetTransactionalResourceHolder
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.ConvertRabbitAccessException(System.Exception)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.ConvertRabbitAccessException(System.Exception)
  parent: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer
  isExternal: true
  name: ConvertRabbitAccessException(Exception)
  nameWithType: AbstractMessageListenerContainer.ConvertRabbitAccessException(Exception)
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.ConvertRabbitAccessException(System.Exception)
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.ConvertRabbitAccessException(System.Exception)
    name: ConvertRabbitAccessException
    nameWithType: AbstractMessageListenerContainer.ConvertRabbitAccessException
    fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.ConvertRabbitAccessException
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.ConvertRabbitAccessException(System.Exception)
    name: ConvertRabbitAccessException
    nameWithType: AbstractMessageListenerContainer.ConvertRabbitAccessException
    fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.ConvertRabbitAccessException
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.RedeclareElementsIfNecessary
  commentId: M:Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.RedeclareElementsIfNecessary
  parent: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer
  name: RedeclareElementsIfNecessary()
  nameWithType: AbstractMessageListenerContainer.RedeclareElementsIfNecessary()
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.RedeclareElementsIfNecessary()
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.RedeclareElementsIfNecessary
    name: RedeclareElementsIfNecessary
    nameWithType: AbstractMessageListenerContainer.RedeclareElementsIfNecessary
    fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.RedeclareElementsIfNecessary
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.RedeclareElementsIfNecessary
    name: RedeclareElementsIfNecessary
    nameWithType: AbstractMessageListenerContainer.RedeclareElementsIfNecessary
    fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.RedeclareElementsIfNecessary
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.InvokeErrorHandler(System.Exception)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.InvokeErrorHandler(System.Exception)
  parent: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer
  isExternal: true
  name: InvokeErrorHandler(Exception)
  nameWithType: AbstractMessageListenerContainer.InvokeErrorHandler(Exception)
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.InvokeErrorHandler(System.Exception)
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.InvokeErrorHandler(System.Exception)
    name: InvokeErrorHandler
    nameWithType: AbstractMessageListenerContainer.InvokeErrorHandler
    fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.InvokeErrorHandler
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.InvokeErrorHandler(System.Exception)
    name: InvokeErrorHandler
    nameWithType: AbstractMessageListenerContainer.InvokeErrorHandler
    fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.InvokeErrorHandler
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.ExecuteListener(RabbitMQ.Client.IModel,Steeltoe.Messaging.IMessage)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.ExecuteListener(RabbitMQ.Client.IModel,Steeltoe.Messaging.IMessage)
  parent: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer
  isExternal: true
  name: ExecuteListener(IModel, IMessage)
  nameWithType: AbstractMessageListenerContainer.ExecuteListener(IModel, IMessage)
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.ExecuteListener(RabbitMQ.Client.IModel, Steeltoe.Messaging.IMessage)
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.ExecuteListener(RabbitMQ.Client.IModel,Steeltoe.Messaging.IMessage)
    name: ExecuteListener
    nameWithType: AbstractMessageListenerContainer.ExecuteListener
    fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.ExecuteListener
  - name: (
    nameWithType: (
    fullName: (
  - uid: RabbitMQ.Client.IModel
    name: IModel
    nameWithType: IModel
    fullName: RabbitMQ.Client.IModel
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.ExecuteListener(RabbitMQ.Client.IModel,Steeltoe.Messaging.IMessage)
    name: ExecuteListener
    nameWithType: AbstractMessageListenerContainer.ExecuteListener
    fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.ExecuteListener
  - name: (
    nameWithType: (
    fullName: (
  - uid: RabbitMQ.Client.IModel
    name: IModel
    nameWithType: IModel
    fullName: RabbitMQ.Client.IModel
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.ActualInvokeListener(RabbitMQ.Client.IModel,System.Collections.Generic.List{Steeltoe.Messaging.IMessage})
  commentId: M:Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.ActualInvokeListener(RabbitMQ.Client.IModel,System.Collections.Generic.List{Steeltoe.Messaging.IMessage})
  parent: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer
  isExternal: true
  name: ActualInvokeListener(IModel, List<IMessage>)
  nameWithType: AbstractMessageListenerContainer.ActualInvokeListener(IModel, List<IMessage>)
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.ActualInvokeListener(RabbitMQ.Client.IModel, System.Collections.Generic.List<Steeltoe.Messaging.IMessage>)
  nameWithType.vb: AbstractMessageListenerContainer.ActualInvokeListener(IModel, List(Of IMessage))
  fullName.vb: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.ActualInvokeListener(RabbitMQ.Client.IModel, System.Collections.Generic.List(Of Steeltoe.Messaging.IMessage))
  name.vb: ActualInvokeListener(IModel, List(Of IMessage))
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.ActualInvokeListener(RabbitMQ.Client.IModel,System.Collections.Generic.List{Steeltoe.Messaging.IMessage})
    name: ActualInvokeListener
    nameWithType: AbstractMessageListenerContainer.ActualInvokeListener
    fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.ActualInvokeListener
  - name: (
    nameWithType: (
    fullName: (
  - uid: RabbitMQ.Client.IModel
    name: IModel
    nameWithType: IModel
    fullName: RabbitMQ.Client.IModel
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.ActualInvokeListener(RabbitMQ.Client.IModel,System.Collections.Generic.List{Steeltoe.Messaging.IMessage})
    name: ActualInvokeListener
    nameWithType: AbstractMessageListenerContainer.ActualInvokeListener
    fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.ActualInvokeListener
  - name: (
    nameWithType: (
    fullName: (
  - uid: RabbitMQ.Client.IModel
    name: IModel
    nameWithType: IModel
    fullName: RabbitMQ.Client.IModel
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.ActualInvokeListener(RabbitMQ.Client.IModel,Steeltoe.Messaging.IMessage)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.ActualInvokeListener(RabbitMQ.Client.IModel,Steeltoe.Messaging.IMessage)
  parent: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer
  isExternal: true
  name: ActualInvokeListener(IModel, IMessage)
  nameWithType: AbstractMessageListenerContainer.ActualInvokeListener(IModel, IMessage)
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.ActualInvokeListener(RabbitMQ.Client.IModel, Steeltoe.Messaging.IMessage)
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.ActualInvokeListener(RabbitMQ.Client.IModel,Steeltoe.Messaging.IMessage)
    name: ActualInvokeListener
    nameWithType: AbstractMessageListenerContainer.ActualInvokeListener
    fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.ActualInvokeListener
  - name: (
    nameWithType: (
    fullName: (
  - uid: RabbitMQ.Client.IModel
    name: IModel
    nameWithType: IModel
    fullName: RabbitMQ.Client.IModel
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.ActualInvokeListener(RabbitMQ.Client.IModel,Steeltoe.Messaging.IMessage)
    name: ActualInvokeListener
    nameWithType: AbstractMessageListenerContainer.ActualInvokeListener
    fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.ActualInvokeListener
  - name: (
    nameWithType: (
    fullName: (
  - uid: RabbitMQ.Client.IModel
    name: IModel
    nameWithType: IModel
    fullName: RabbitMQ.Client.IModel
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.DoInvokeListener(Steeltoe.Messaging.RabbitMQ.Listener.IChannelAwareMessageListener,RabbitMQ.Client.IModel,System.Collections.Generic.List{Steeltoe.Messaging.IMessage})
  commentId: M:Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.DoInvokeListener(Steeltoe.Messaging.RabbitMQ.Listener.IChannelAwareMessageListener,RabbitMQ.Client.IModel,System.Collections.Generic.List{Steeltoe.Messaging.IMessage})
  parent: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer
  isExternal: true
  name: DoInvokeListener(IChannelAwareMessageListener, IModel, List<IMessage>)
  nameWithType: AbstractMessageListenerContainer.DoInvokeListener(IChannelAwareMessageListener, IModel, List<IMessage>)
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.DoInvokeListener(Steeltoe.Messaging.RabbitMQ.Listener.IChannelAwareMessageListener, RabbitMQ.Client.IModel, System.Collections.Generic.List<Steeltoe.Messaging.IMessage>)
  nameWithType.vb: AbstractMessageListenerContainer.DoInvokeListener(IChannelAwareMessageListener, IModel, List(Of IMessage))
  fullName.vb: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.DoInvokeListener(Steeltoe.Messaging.RabbitMQ.Listener.IChannelAwareMessageListener, RabbitMQ.Client.IModel, System.Collections.Generic.List(Of Steeltoe.Messaging.IMessage))
  name.vb: DoInvokeListener(IChannelAwareMessageListener, IModel, List(Of IMessage))
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.DoInvokeListener(Steeltoe.Messaging.RabbitMQ.Listener.IChannelAwareMessageListener,RabbitMQ.Client.IModel,System.Collections.Generic.List{Steeltoe.Messaging.IMessage})
    name: DoInvokeListener
    nameWithType: AbstractMessageListenerContainer.DoInvokeListener
    fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.DoInvokeListener
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.RabbitMQ.Listener.IChannelAwareMessageListener
    name: IChannelAwareMessageListener
    nameWithType: IChannelAwareMessageListener
    fullName: Steeltoe.Messaging.RabbitMQ.Listener.IChannelAwareMessageListener
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: RabbitMQ.Client.IModel
    name: IModel
    nameWithType: IModel
    fullName: RabbitMQ.Client.IModel
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.DoInvokeListener(Steeltoe.Messaging.RabbitMQ.Listener.IChannelAwareMessageListener,RabbitMQ.Client.IModel,System.Collections.Generic.List{Steeltoe.Messaging.IMessage})
    name: DoInvokeListener
    nameWithType: AbstractMessageListenerContainer.DoInvokeListener
    fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.DoInvokeListener
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.RabbitMQ.Listener.IChannelAwareMessageListener
    name: IChannelAwareMessageListener
    nameWithType: IChannelAwareMessageListener
    fullName: Steeltoe.Messaging.RabbitMQ.Listener.IChannelAwareMessageListener
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: RabbitMQ.Client.IModel
    name: IModel
    nameWithType: IModel
    fullName: RabbitMQ.Client.IModel
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.DoInvokeListener(Steeltoe.Messaging.RabbitMQ.Listener.IChannelAwareMessageListener,RabbitMQ.Client.IModel,Steeltoe.Messaging.IMessage)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.DoInvokeListener(Steeltoe.Messaging.RabbitMQ.Listener.IChannelAwareMessageListener,RabbitMQ.Client.IModel,Steeltoe.Messaging.IMessage)
  parent: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer
  isExternal: true
  name: DoInvokeListener(IChannelAwareMessageListener, IModel, IMessage)
  nameWithType: AbstractMessageListenerContainer.DoInvokeListener(IChannelAwareMessageListener, IModel, IMessage)
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.DoInvokeListener(Steeltoe.Messaging.RabbitMQ.Listener.IChannelAwareMessageListener, RabbitMQ.Client.IModel, Steeltoe.Messaging.IMessage)
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.DoInvokeListener(Steeltoe.Messaging.RabbitMQ.Listener.IChannelAwareMessageListener,RabbitMQ.Client.IModel,Steeltoe.Messaging.IMessage)
    name: DoInvokeListener
    nameWithType: AbstractMessageListenerContainer.DoInvokeListener
    fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.DoInvokeListener
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.RabbitMQ.Listener.IChannelAwareMessageListener
    name: IChannelAwareMessageListener
    nameWithType: IChannelAwareMessageListener
    fullName: Steeltoe.Messaging.RabbitMQ.Listener.IChannelAwareMessageListener
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: RabbitMQ.Client.IModel
    name: IModel
    nameWithType: IModel
    fullName: RabbitMQ.Client.IModel
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.DoInvokeListener(Steeltoe.Messaging.RabbitMQ.Listener.IChannelAwareMessageListener,RabbitMQ.Client.IModel,Steeltoe.Messaging.IMessage)
    name: DoInvokeListener
    nameWithType: AbstractMessageListenerContainer.DoInvokeListener
    fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.DoInvokeListener
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.RabbitMQ.Listener.IChannelAwareMessageListener
    name: IChannelAwareMessageListener
    nameWithType: IChannelAwareMessageListener
    fullName: Steeltoe.Messaging.RabbitMQ.Listener.IChannelAwareMessageListener
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: RabbitMQ.Client.IModel
    name: IModel
    nameWithType: IModel
    fullName: RabbitMQ.Client.IModel
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.DoInvokeListener(Steeltoe.Messaging.RabbitMQ.Listener.IMessageListener,System.Collections.Generic.List{Steeltoe.Messaging.IMessage})
  commentId: M:Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.DoInvokeListener(Steeltoe.Messaging.RabbitMQ.Listener.IMessageListener,System.Collections.Generic.List{Steeltoe.Messaging.IMessage})
  parent: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer
  isExternal: true
  name: DoInvokeListener(IMessageListener, List<IMessage>)
  nameWithType: AbstractMessageListenerContainer.DoInvokeListener(IMessageListener, List<IMessage>)
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.DoInvokeListener(Steeltoe.Messaging.RabbitMQ.Listener.IMessageListener, System.Collections.Generic.List<Steeltoe.Messaging.IMessage>)
  nameWithType.vb: AbstractMessageListenerContainer.DoInvokeListener(IMessageListener, List(Of IMessage))
  fullName.vb: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.DoInvokeListener(Steeltoe.Messaging.RabbitMQ.Listener.IMessageListener, System.Collections.Generic.List(Of Steeltoe.Messaging.IMessage))
  name.vb: DoInvokeListener(IMessageListener, List(Of IMessage))
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.DoInvokeListener(Steeltoe.Messaging.RabbitMQ.Listener.IMessageListener,System.Collections.Generic.List{Steeltoe.Messaging.IMessage})
    name: DoInvokeListener
    nameWithType: AbstractMessageListenerContainer.DoInvokeListener
    fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.DoInvokeListener
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.RabbitMQ.Listener.IMessageListener
    name: IMessageListener
    nameWithType: IMessageListener
    fullName: Steeltoe.Messaging.RabbitMQ.Listener.IMessageListener
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.DoInvokeListener(Steeltoe.Messaging.RabbitMQ.Listener.IMessageListener,System.Collections.Generic.List{Steeltoe.Messaging.IMessage})
    name: DoInvokeListener
    nameWithType: AbstractMessageListenerContainer.DoInvokeListener
    fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.DoInvokeListener
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.RabbitMQ.Listener.IMessageListener
    name: IMessageListener
    nameWithType: IMessageListener
    fullName: Steeltoe.Messaging.RabbitMQ.Listener.IMessageListener
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.DoInvokeListener(Steeltoe.Messaging.RabbitMQ.Listener.IMessageListener,Steeltoe.Messaging.IMessage)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.DoInvokeListener(Steeltoe.Messaging.RabbitMQ.Listener.IMessageListener,Steeltoe.Messaging.IMessage)
  parent: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer
  name: DoInvokeListener(IMessageListener, IMessage)
  nameWithType: AbstractMessageListenerContainer.DoInvokeListener(IMessageListener, IMessage)
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.DoInvokeListener(Steeltoe.Messaging.RabbitMQ.Listener.IMessageListener, Steeltoe.Messaging.IMessage)
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.DoInvokeListener(Steeltoe.Messaging.RabbitMQ.Listener.IMessageListener,Steeltoe.Messaging.IMessage)
    name: DoInvokeListener
    nameWithType: AbstractMessageListenerContainer.DoInvokeListener
    fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.DoInvokeListener
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.RabbitMQ.Listener.IMessageListener
    name: IMessageListener
    nameWithType: IMessageListener
    fullName: Steeltoe.Messaging.RabbitMQ.Listener.IMessageListener
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.DoInvokeListener(Steeltoe.Messaging.RabbitMQ.Listener.IMessageListener,Steeltoe.Messaging.IMessage)
    name: DoInvokeListener
    nameWithType: AbstractMessageListenerContainer.DoInvokeListener
    fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.DoInvokeListener
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.RabbitMQ.Listener.IMessageListener
    name: IMessageListener
    nameWithType: IMessageListener
    fullName: Steeltoe.Messaging.RabbitMQ.Listener.IMessageListener
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.HandleChannelAwareTransaction(RabbitMQ.Client.IModel,RabbitMQ.Client.IModel@,Steeltoe.Messaging.RabbitMQ.Connection.RabbitResourceHolder@)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.HandleChannelAwareTransaction(RabbitMQ.Client.IModel,RabbitMQ.Client.IModel@,Steeltoe.Messaging.RabbitMQ.Connection.RabbitResourceHolder@)
  parent: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer
  isExternal: true
  name: HandleChannelAwareTransaction(IModel, IModel, RabbitResourceHolder)
  nameWithType: AbstractMessageListenerContainer.HandleChannelAwareTransaction(IModel, IModel, RabbitResourceHolder)
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.HandleChannelAwareTransaction(RabbitMQ.Client.IModel, RabbitMQ.Client.IModel, Steeltoe.Messaging.RabbitMQ.Connection.RabbitResourceHolder)
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.HandleChannelAwareTransaction(RabbitMQ.Client.IModel,RabbitMQ.Client.IModel@,Steeltoe.Messaging.RabbitMQ.Connection.RabbitResourceHolder@)
    name: HandleChannelAwareTransaction
    nameWithType: AbstractMessageListenerContainer.HandleChannelAwareTransaction
    fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.HandleChannelAwareTransaction
  - name: (
    nameWithType: (
    fullName: (
  - uid: RabbitMQ.Client.IModel
    name: IModel
    nameWithType: IModel
    fullName: RabbitMQ.Client.IModel
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: RabbitMQ.Client.IModel
    name: IModel
    nameWithType: IModel
    fullName: RabbitMQ.Client.IModel
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.RabbitMQ.Connection.RabbitResourceHolder
    name: RabbitResourceHolder
    nameWithType: RabbitResourceHolder
    fullName: Steeltoe.Messaging.RabbitMQ.Connection.RabbitResourceHolder
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.HandleChannelAwareTransaction(RabbitMQ.Client.IModel,RabbitMQ.Client.IModel@,Steeltoe.Messaging.RabbitMQ.Connection.RabbitResourceHolder@)
    name: HandleChannelAwareTransaction
    nameWithType: AbstractMessageListenerContainer.HandleChannelAwareTransaction
    fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.HandleChannelAwareTransaction
  - name: (
    nameWithType: (
    fullName: (
  - uid: RabbitMQ.Client.IModel
    name: IModel
    nameWithType: IModel
    fullName: RabbitMQ.Client.IModel
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: RabbitMQ.Client.IModel
    name: IModel
    nameWithType: IModel
    fullName: RabbitMQ.Client.IModel
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.RabbitMQ.Connection.RabbitResourceHolder
    name: RabbitResourceHolder
    nameWithType: RabbitResourceHolder
    fullName: Steeltoe.Messaging.RabbitMQ.Connection.RabbitResourceHolder
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.WrapToListenerExecutionFailedExceptionIfNeeded(System.Exception,System.Collections.Generic.List{Steeltoe.Messaging.IMessage})
  commentId: M:Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.WrapToListenerExecutionFailedExceptionIfNeeded(System.Exception,System.Collections.Generic.List{Steeltoe.Messaging.IMessage})
  parent: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer
  isExternal: true
  name: WrapToListenerExecutionFailedExceptionIfNeeded(Exception, List<IMessage>)
  nameWithType: AbstractMessageListenerContainer.WrapToListenerExecutionFailedExceptionIfNeeded(Exception, List<IMessage>)
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.WrapToListenerExecutionFailedExceptionIfNeeded(System.Exception, System.Collections.Generic.List<Steeltoe.Messaging.IMessage>)
  nameWithType.vb: AbstractMessageListenerContainer.WrapToListenerExecutionFailedExceptionIfNeeded(Exception, List(Of IMessage))
  fullName.vb: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.WrapToListenerExecutionFailedExceptionIfNeeded(System.Exception, System.Collections.Generic.List(Of Steeltoe.Messaging.IMessage))
  name.vb: WrapToListenerExecutionFailedExceptionIfNeeded(Exception, List(Of IMessage))
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.WrapToListenerExecutionFailedExceptionIfNeeded(System.Exception,System.Collections.Generic.List{Steeltoe.Messaging.IMessage})
    name: WrapToListenerExecutionFailedExceptionIfNeeded
    nameWithType: AbstractMessageListenerContainer.WrapToListenerExecutionFailedExceptionIfNeeded
    fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.WrapToListenerExecutionFailedExceptionIfNeeded
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.WrapToListenerExecutionFailedExceptionIfNeeded(System.Exception,System.Collections.Generic.List{Steeltoe.Messaging.IMessage})
    name: WrapToListenerExecutionFailedExceptionIfNeeded
    nameWithType: AbstractMessageListenerContainer.WrapToListenerExecutionFailedExceptionIfNeeded
    fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.WrapToListenerExecutionFailedExceptionIfNeeded
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.WrapToListenerExecutionFailedExceptionIfNeeded(System.Exception,Steeltoe.Messaging.IMessage)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.WrapToListenerExecutionFailedExceptionIfNeeded(System.Exception,Steeltoe.Messaging.IMessage)
  parent: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer
  isExternal: true
  name: WrapToListenerExecutionFailedExceptionIfNeeded(Exception, IMessage)
  nameWithType: AbstractMessageListenerContainer.WrapToListenerExecutionFailedExceptionIfNeeded(Exception, IMessage)
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.WrapToListenerExecutionFailedExceptionIfNeeded(System.Exception, Steeltoe.Messaging.IMessage)
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.WrapToListenerExecutionFailedExceptionIfNeeded(System.Exception,Steeltoe.Messaging.IMessage)
    name: WrapToListenerExecutionFailedExceptionIfNeeded
    nameWithType: AbstractMessageListenerContainer.WrapToListenerExecutionFailedExceptionIfNeeded
    fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.WrapToListenerExecutionFailedExceptionIfNeeded
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.WrapToListenerExecutionFailedExceptionIfNeeded(System.Exception,Steeltoe.Messaging.IMessage)
    name: WrapToListenerExecutionFailedExceptionIfNeeded
    nameWithType: AbstractMessageListenerContainer.WrapToListenerExecutionFailedExceptionIfNeeded
    fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.WrapToListenerExecutionFailedExceptionIfNeeded
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.HandleListenerException(System.Exception)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.HandleListenerException(System.Exception)
  parent: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer
  isExternal: true
  name: HandleListenerException(Exception)
  nameWithType: AbstractMessageListenerContainer.HandleListenerException(Exception)
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.HandleListenerException(System.Exception)
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.HandleListenerException(System.Exception)
    name: HandleListenerException
    nameWithType: AbstractMessageListenerContainer.HandleListenerException
    fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.HandleListenerException
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.HandleListenerException(System.Exception)
    name: HandleListenerException
    nameWithType: AbstractMessageListenerContainer.HandleListenerException
    fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.HandleListenerException
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.UpdateLastReceive
  commentId: M:Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.UpdateLastReceive
  parent: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer
  name: UpdateLastReceive()
  nameWithType: AbstractMessageListenerContainer.UpdateLastReceive()
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.UpdateLastReceive()
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.UpdateLastReceive
    name: UpdateLastReceive
    nameWithType: AbstractMessageListenerContainer.UpdateLastReceive
    fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.UpdateLastReceive
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.UpdateLastReceive
    name: UpdateLastReceive
    nameWithType: AbstractMessageListenerContainer.UpdateLastReceive
    fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.UpdateLastReceive
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.ConfigureAdminIfNeeded
  commentId: M:Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.ConfigureAdminIfNeeded
  parent: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer
  name: ConfigureAdminIfNeeded()
  nameWithType: AbstractMessageListenerContainer.ConfigureAdminIfNeeded()
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.ConfigureAdminIfNeeded()
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.ConfigureAdminIfNeeded
    name: ConfigureAdminIfNeeded
    nameWithType: AbstractMessageListenerContainer.ConfigureAdminIfNeeded
    fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.ConfigureAdminIfNeeded
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.ConfigureAdminIfNeeded
    name: ConfigureAdminIfNeeded
    nameWithType: AbstractMessageListenerContainer.ConfigureAdminIfNeeded
    fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.ConfigureAdminIfNeeded
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.CheckMismatchedQueues
  commentId: M:Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.CheckMismatchedQueues
  parent: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer
  name: CheckMismatchedQueues()
  nameWithType: AbstractMessageListenerContainer.CheckMismatchedQueues()
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.CheckMismatchedQueues()
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.CheckMismatchedQueues
    name: CheckMismatchedQueues
    nameWithType: AbstractMessageListenerContainer.CheckMismatchedQueues
    fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.CheckMismatchedQueues
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.CheckMismatchedQueues
    name: CheckMismatchedQueues
    nameWithType: AbstractMessageListenerContainer.CheckMismatchedQueues
    fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.CheckMismatchedQueues
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.IsChannelLocallyTransacted
  commentId: P:Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.IsChannelLocallyTransacted
  parent: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer
  name: IsChannelLocallyTransacted
  nameWithType: AbstractMessageListenerContainer.IsChannelLocallyTransacted
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.IsChannelLocallyTransacted
- uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.DoStop
  commentId: M:Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.DoStop
  parent: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer
  name: DoStop()
  nameWithType: AbstractMessageListenerContainer.DoStop()
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.DoStop()
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.DoStop
    name: DoStop
    nameWithType: AbstractMessageListenerContainer.DoStop
    fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.DoStop
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.DoStop
    name: DoStop
    nameWithType: AbstractMessageListenerContainer.DoStop
    fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.DoStop
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.ValidateConfiguration
  commentId: M:Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.ValidateConfiguration
  parent: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer
  name: ValidateConfiguration()
  nameWithType: AbstractMessageListenerContainer.ValidateConfiguration()
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.ValidateConfiguration()
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.ValidateConfiguration
    name: ValidateConfiguration
    nameWithType: AbstractMessageListenerContainer.ValidateConfiguration
    fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.ValidateConfiguration
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.ValidateConfiguration
    name: ValidateConfiguration
    nameWithType: AbstractMessageListenerContainer.ValidateConfiguration
    fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.ValidateConfiguration
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.GetRoutingConnectionFactory
  commentId: M:Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.GetRoutingConnectionFactory
  parent: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer
  name: GetRoutingConnectionFactory()
  nameWithType: AbstractMessageListenerContainer.GetRoutingConnectionFactory()
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.GetRoutingConnectionFactory()
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.GetRoutingConnectionFactory
    name: GetRoutingConnectionFactory
    nameWithType: AbstractMessageListenerContainer.GetRoutingConnectionFactory
    fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.GetRoutingConnectionFactory
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.GetRoutingConnectionFactory
    name: GetRoutingConnectionFactory
    nameWithType: AbstractMessageListenerContainer.GetRoutingConnectionFactory
    fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.GetRoutingConnectionFactory
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.LastReceive
  commentId: P:Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.LastReceive
  parent: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer
  name: LastReceive
  nameWithType: AbstractMessageListenerContainer.LastReceive
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.LastReceive
- uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.ForceCloseChannel
  commentId: P:Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.ForceCloseChannel
  parent: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer
  name: ForceCloseChannel
  nameWithType: AbstractMessageListenerContainer.ForceCloseChannel
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.ForceCloseChannel
- uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.GetRoutingLookupKey
  commentId: M:Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.GetRoutingLookupKey
  parent: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer
  name: GetRoutingLookupKey()
  nameWithType: AbstractMessageListenerContainer.GetRoutingLookupKey()
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.GetRoutingLookupKey()
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.GetRoutingLookupKey
    name: GetRoutingLookupKey
    nameWithType: AbstractMessageListenerContainer.GetRoutingLookupKey
    fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.GetRoutingLookupKey
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.GetRoutingLookupKey
    name: GetRoutingLookupKey
    nameWithType: AbstractMessageListenerContainer.GetRoutingLookupKey
    fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.GetRoutingLookupKey
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.CheckMessageListener(System.Object)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.CheckMessageListener(System.Object)
  parent: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer
  isExternal: true
  name: CheckMessageListener(Object)
  nameWithType: AbstractMessageListenerContainer.CheckMessageListener(Object)
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.CheckMessageListener(System.Object)
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.CheckMessageListener(System.Object)
    name: CheckMessageListener
    nameWithType: AbstractMessageListenerContainer.CheckMessageListener
    fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.CheckMessageListener
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.CheckMessageListener(System.Object)
    name: CheckMessageListener
    nameWithType: AbstractMessageListenerContainer.CheckMessageListener
    fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.CheckMessageListener
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.GetQueueNamesAsSet
  commentId: M:Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.GetQueueNamesAsSet
  parent: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer
  name: GetQueueNamesAsSet()
  nameWithType: AbstractMessageListenerContainer.GetQueueNamesAsSet()
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.GetQueueNamesAsSet()
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.GetQueueNamesAsSet
    name: GetQueueNamesAsSet
    nameWithType: AbstractMessageListenerContainer.GetQueueNamesAsSet
    fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.GetQueueNamesAsSet
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.GetQueueNamesAsSet
    name: GetQueueNamesAsSet
    nameWithType: AbstractMessageListenerContainer.GetQueueNamesAsSet
    fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.GetQueueNamesAsSet
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.GetQueueNamesToQueues
  commentId: M:Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.GetQueueNamesToQueues
  parent: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer
  name: GetQueueNamesToQueues()
  nameWithType: AbstractMessageListenerContainer.GetQueueNamesToQueues()
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.GetQueueNamesToQueues()
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.GetQueueNamesToQueues
    name: GetQueueNamesToQueues
    nameWithType: AbstractMessageListenerContainer.GetQueueNamesToQueues
    fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.GetQueueNamesToQueues
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.GetQueueNamesToQueues
    name: GetQueueNamesToQueues
    nameWithType: AbstractMessageListenerContainer.GetQueueNamesToQueues
    fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.GetQueueNamesToQueues
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.CauseChainHasImmediateAcknowledgeRabbitException(System.Exception)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.CauseChainHasImmediateAcknowledgeRabbitException(System.Exception)
  parent: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer
  isExternal: true
  name: CauseChainHasImmediateAcknowledgeRabbitException(Exception)
  nameWithType: AbstractMessageListenerContainer.CauseChainHasImmediateAcknowledgeRabbitException(Exception)
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.CauseChainHasImmediateAcknowledgeRabbitException(System.Exception)
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.CauseChainHasImmediateAcknowledgeRabbitException(System.Exception)
    name: CauseChainHasImmediateAcknowledgeRabbitException
    nameWithType: AbstractMessageListenerContainer.CauseChainHasImmediateAcknowledgeRabbitException
    fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.CauseChainHasImmediateAcknowledgeRabbitException
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.CauseChainHasImmediateAcknowledgeRabbitException(System.Exception)
    name: CauseChainHasImmediateAcknowledgeRabbitException
    nameWithType: AbstractMessageListenerContainer.CauseChainHasImmediateAcknowledgeRabbitException
    fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.CauseChainHasImmediateAcknowledgeRabbitException
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.PrepareHolderForRollback(Steeltoe.Messaging.RabbitMQ.Connection.RabbitResourceHolder,System.Exception)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.PrepareHolderForRollback(Steeltoe.Messaging.RabbitMQ.Connection.RabbitResourceHolder,System.Exception)
  parent: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer
  isExternal: true
  name: PrepareHolderForRollback(RabbitResourceHolder, Exception)
  nameWithType: AbstractMessageListenerContainer.PrepareHolderForRollback(RabbitResourceHolder, Exception)
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.PrepareHolderForRollback(Steeltoe.Messaging.RabbitMQ.Connection.RabbitResourceHolder, System.Exception)
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.PrepareHolderForRollback(Steeltoe.Messaging.RabbitMQ.Connection.RabbitResourceHolder,System.Exception)
    name: PrepareHolderForRollback
    nameWithType: AbstractMessageListenerContainer.PrepareHolderForRollback
    fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.PrepareHolderForRollback
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.RabbitMQ.Connection.RabbitResourceHolder
    name: RabbitResourceHolder
    nameWithType: RabbitResourceHolder
    fullName: Steeltoe.Messaging.RabbitMQ.Connection.RabbitResourceHolder
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.PrepareHolderForRollback(Steeltoe.Messaging.RabbitMQ.Connection.RabbitResourceHolder,System.Exception)
    name: PrepareHolderForRollback
    nameWithType: AbstractMessageListenerContainer.PrepareHolderForRollback
    fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.PrepareHolderForRollback
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.RabbitMQ.Connection.RabbitResourceHolder
    name: RabbitResourceHolder
    nameWithType: RabbitResourceHolder
    fullName: Steeltoe.Messaging.RabbitMQ.Connection.RabbitResourceHolder
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Steeltoe.Common.Lifecycle
  commentId: N:Steeltoe.Common.Lifecycle
  name: Steeltoe.Common.Lifecycle
  nameWithType: Steeltoe.Common.Lifecycle
  fullName: Steeltoe.Common.Lifecycle
- uid: Steeltoe.Common.Services
  commentId: N:Steeltoe.Common.Services
  name: Steeltoe.Common.Services
  nameWithType: Steeltoe.Common.Services
  fullName: Steeltoe.Common.Services
- uid: Steeltoe.Messaging.RabbitMQ.Listener.DirectReplyToMessageListenerContainer.#ctor*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Listener.DirectReplyToMessageListenerContainer.#ctor
  name: DirectReplyToMessageListenerContainer
  nameWithType: DirectReplyToMessageListenerContainer.DirectReplyToMessageListenerContainer
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.DirectReplyToMessageListenerContainer.DirectReplyToMessageListenerContainer
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.Extensions.Logging.ILoggerFactory
  commentId: T:Microsoft.Extensions.Logging.ILoggerFactory
  parent: Microsoft.Extensions.Logging
  isExternal: true
  name: ILoggerFactory
  nameWithType: ILoggerFactory
  fullName: Microsoft.Extensions.Logging.ILoggerFactory
- uid: Microsoft.Extensions.Logging
  commentId: N:Microsoft.Extensions.Logging
  isExternal: true
  name: Microsoft.Extensions.Logging
  nameWithType: Microsoft.Extensions.Logging
  fullName: Microsoft.Extensions.Logging
- uid: Steeltoe.Common.Contexts.IApplicationContext
  commentId: T:Steeltoe.Common.Contexts.IApplicationContext
  parent: Steeltoe.Common.Contexts
  name: IApplicationContext
  nameWithType: IApplicationContext
  fullName: Steeltoe.Common.Contexts.IApplicationContext
- uid: Steeltoe.Common.Contexts
  commentId: N:Steeltoe.Common.Contexts
  name: Steeltoe.Common.Contexts
  nameWithType: Steeltoe.Common.Contexts
  fullName: Steeltoe.Common.Contexts
- uid: Steeltoe.Messaging.RabbitMQ.Connection.IConnectionFactory
  commentId: T:Steeltoe.Messaging.RabbitMQ.Connection.IConnectionFactory
  parent: Steeltoe.Messaging.RabbitMQ.Connection
  name: IConnectionFactory
  nameWithType: IConnectionFactory
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.IConnectionFactory
- uid: Steeltoe.Messaging.RabbitMQ.Connection
  commentId: N:Steeltoe.Messaging.RabbitMQ.Connection
  name: Steeltoe.Messaging.RabbitMQ.Connection
  nameWithType: Steeltoe.Messaging.RabbitMQ.Connection
  fullName: Steeltoe.Messaging.RabbitMQ.Connection
- uid: Steeltoe.Messaging.RabbitMQ.Listener.DirectMessageListenerContainer.ConsumersPerQueue
  commentId: P:Steeltoe.Messaging.RabbitMQ.Listener.DirectMessageListenerContainer.ConsumersPerQueue
  parent: Steeltoe.Messaging.RabbitMQ.Listener.DirectMessageListenerContainer
  name: ConsumersPerQueue
  nameWithType: DirectMessageListenerContainer.ConsumersPerQueue
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.DirectMessageListenerContainer.ConsumersPerQueue
- uid: Steeltoe.Messaging.RabbitMQ.Listener.DirectReplyToMessageListenerContainer.ConsumersPerQueue*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Listener.DirectReplyToMessageListenerContainer.ConsumersPerQueue
  name: ConsumersPerQueue
  nameWithType: DirectReplyToMessageListenerContainer.ConsumersPerQueue
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.DirectReplyToMessageListenerContainer.ConsumersPerQueue
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Steeltoe.Messaging.RabbitMQ.Listener.DirectMessageListenerContainer.MonitorInterval
  commentId: P:Steeltoe.Messaging.RabbitMQ.Listener.DirectMessageListenerContainer.MonitorInterval
  parent: Steeltoe.Messaging.RabbitMQ.Listener.DirectMessageListenerContainer
  name: MonitorInterval
  nameWithType: DirectMessageListenerContainer.MonitorInterval
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.DirectMessageListenerContainer.MonitorInterval
- uid: Steeltoe.Messaging.RabbitMQ.Listener.DirectReplyToMessageListenerContainer.MonitorInterval*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Listener.DirectReplyToMessageListenerContainer.MonitorInterval
  name: MonitorInterval
  nameWithType: DirectReplyToMessageListenerContainer.MonitorInterval
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.DirectReplyToMessageListenerContainer.MonitorInterval
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: Steeltoe.Messaging.RabbitMQ.Listener.DirectMessageListenerContainer.SetQueueNames(System.String[])
  commentId: M:Steeltoe.Messaging.RabbitMQ.Listener.DirectMessageListenerContainer.SetQueueNames(System.String[])
  parent: Steeltoe.Messaging.RabbitMQ.Listener.DirectMessageListenerContainer
  isExternal: true
  name: SetQueueNames(String[])
  nameWithType: DirectMessageListenerContainer.SetQueueNames(String[])
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.DirectMessageListenerContainer.SetQueueNames(System.String[])
  nameWithType.vb: DirectMessageListenerContainer.SetQueueNames(String())
  fullName.vb: Steeltoe.Messaging.RabbitMQ.Listener.DirectMessageListenerContainer.SetQueueNames(System.String())
  name.vb: SetQueueNames(String())
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Listener.DirectMessageListenerContainer.SetQueueNames(System.String[])
    name: SetQueueNames
    nameWithType: DirectMessageListenerContainer.SetQueueNames
    fullName: Steeltoe.Messaging.RabbitMQ.Listener.DirectMessageListenerContainer.SetQueueNames
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Listener.DirectMessageListenerContainer.SetQueueNames(System.String[])
    name: SetQueueNames
    nameWithType: DirectMessageListenerContainer.SetQueueNames
    fullName: Steeltoe.Messaging.RabbitMQ.Listener.DirectMessageListenerContainer.SetQueueNames
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Listener.DirectReplyToMessageListenerContainer.SetQueueNames*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Listener.DirectReplyToMessageListenerContainer.SetQueueNames
  name: SetQueueNames
  nameWithType: DirectReplyToMessageListenerContainer.SetQueueNames
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.DirectReplyToMessageListenerContainer.SetQueueNames
- uid: System.String[]
  isExternal: true
  name: String[]
  nameWithType: String[]
  fullName: System.String[]
  nameWithType.vb: String()
  fullName.vb: System.String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Steeltoe.Messaging.RabbitMQ.Listener.DirectMessageListenerContainer.AddQueueNames(System.String[])
  commentId: M:Steeltoe.Messaging.RabbitMQ.Listener.DirectMessageListenerContainer.AddQueueNames(System.String[])
  parent: Steeltoe.Messaging.RabbitMQ.Listener.DirectMessageListenerContainer
  isExternal: true
  name: AddQueueNames(String[])
  nameWithType: DirectMessageListenerContainer.AddQueueNames(String[])
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.DirectMessageListenerContainer.AddQueueNames(System.String[])
  nameWithType.vb: DirectMessageListenerContainer.AddQueueNames(String())
  fullName.vb: Steeltoe.Messaging.RabbitMQ.Listener.DirectMessageListenerContainer.AddQueueNames(System.String())
  name.vb: AddQueueNames(String())
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Listener.DirectMessageListenerContainer.AddQueueNames(System.String[])
    name: AddQueueNames
    nameWithType: DirectMessageListenerContainer.AddQueueNames
    fullName: Steeltoe.Messaging.RabbitMQ.Listener.DirectMessageListenerContainer.AddQueueNames
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Listener.DirectMessageListenerContainer.AddQueueNames(System.String[])
    name: AddQueueNames
    nameWithType: DirectMessageListenerContainer.AddQueueNames
    fullName: Steeltoe.Messaging.RabbitMQ.Listener.DirectMessageListenerContainer.AddQueueNames
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Listener.DirectReplyToMessageListenerContainer.AddQueueNames*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Listener.DirectReplyToMessageListenerContainer.AddQueueNames
  name: AddQueueNames
  nameWithType: DirectReplyToMessageListenerContainer.AddQueueNames
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.DirectReplyToMessageListenerContainer.AddQueueNames
- uid: Steeltoe.Messaging.RabbitMQ.Listener.DirectMessageListenerContainer.RemoveQueueNames(System.String[])
  commentId: M:Steeltoe.Messaging.RabbitMQ.Listener.DirectMessageListenerContainer.RemoveQueueNames(System.String[])
  parent: Steeltoe.Messaging.RabbitMQ.Listener.DirectMessageListenerContainer
  isExternal: true
  name: RemoveQueueNames(String[])
  nameWithType: DirectMessageListenerContainer.RemoveQueueNames(String[])
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.DirectMessageListenerContainer.RemoveQueueNames(System.String[])
  nameWithType.vb: DirectMessageListenerContainer.RemoveQueueNames(String())
  fullName.vb: Steeltoe.Messaging.RabbitMQ.Listener.DirectMessageListenerContainer.RemoveQueueNames(System.String())
  name.vb: RemoveQueueNames(String())
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Listener.DirectMessageListenerContainer.RemoveQueueNames(System.String[])
    name: RemoveQueueNames
    nameWithType: DirectMessageListenerContainer.RemoveQueueNames
    fullName: Steeltoe.Messaging.RabbitMQ.Listener.DirectMessageListenerContainer.RemoveQueueNames
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Listener.DirectMessageListenerContainer.RemoveQueueNames(System.String[])
    name: RemoveQueueNames
    nameWithType: DirectMessageListenerContainer.RemoveQueueNames
    fullName: Steeltoe.Messaging.RabbitMQ.Listener.DirectMessageListenerContainer.RemoveQueueNames
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Listener.DirectReplyToMessageListenerContainer.RemoveQueueNames*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Listener.DirectReplyToMessageListenerContainer.RemoveQueueNames
  name: RemoveQueueNames
  nameWithType: DirectReplyToMessageListenerContainer.RemoveQueueNames
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.DirectReplyToMessageListenerContainer.RemoveQueueNames
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.MessageListener
  commentId: P:Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.MessageListener
  parent: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer
  name: MessageListener
  nameWithType: AbstractMessageListenerContainer.MessageListener
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.MessageListener
- uid: Steeltoe.Messaging.RabbitMQ.Listener.DirectReplyToMessageListenerContainer.MessageListener*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Listener.DirectReplyToMessageListenerContainer.MessageListener
  name: MessageListener
  nameWithType: DirectReplyToMessageListenerContainer.MessageListener
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.DirectReplyToMessageListenerContainer.MessageListener
- uid: Steeltoe.Messaging.RabbitMQ.Listener.IMessageListener
  commentId: T:Steeltoe.Messaging.RabbitMQ.Listener.IMessageListener
  parent: Steeltoe.Messaging.RabbitMQ.Listener
  name: IMessageListener
  nameWithType: IMessageListener
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.IMessageListener
- uid: Steeltoe.Messaging.RabbitMQ.Listener.DirectReplyToMessageListenerContainer.GetChannelHolder*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Listener.DirectReplyToMessageListenerContainer.GetChannelHolder
  name: GetChannelHolder
  nameWithType: DirectReplyToMessageListenerContainer.GetChannelHolder
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.DirectReplyToMessageListenerContainer.GetChannelHolder
- uid: Steeltoe.Messaging.RabbitMQ.Listener.DirectReplyToMessageListenerContainer.ChannelHolder
  commentId: T:Steeltoe.Messaging.RabbitMQ.Listener.DirectReplyToMessageListenerContainer.ChannelHolder
  parent: Steeltoe.Messaging.RabbitMQ.Listener
  name: DirectReplyToMessageListenerContainer.ChannelHolder
  nameWithType: DirectReplyToMessageListenerContainer.ChannelHolder
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.DirectReplyToMessageListenerContainer.ChannelHolder
- uid: Steeltoe.Messaging.RabbitMQ.Listener.DirectReplyToMessageListenerContainer.ReleaseConsumerFor*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Listener.DirectReplyToMessageListenerContainer.ReleaseConsumerFor
  name: ReleaseConsumerFor
  nameWithType: DirectReplyToMessageListenerContainer.ReleaseConsumerFor
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.DirectReplyToMessageListenerContainer.ReleaseConsumerFor
- uid: Steeltoe.Messaging.RabbitMQ.Listener.DirectMessageListenerContainer.DoStart
  commentId: M:Steeltoe.Messaging.RabbitMQ.Listener.DirectMessageListenerContainer.DoStart
  parent: Steeltoe.Messaging.RabbitMQ.Listener.DirectMessageListenerContainer
  name: DoStart()
  nameWithType: DirectMessageListenerContainer.DoStart()
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.DirectMessageListenerContainer.DoStart()
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Listener.DirectMessageListenerContainer.DoStart
    name: DoStart
    nameWithType: DirectMessageListenerContainer.DoStart
    fullName: Steeltoe.Messaging.RabbitMQ.Listener.DirectMessageListenerContainer.DoStart
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Listener.DirectMessageListenerContainer.DoStart
    name: DoStart
    nameWithType: DirectMessageListenerContainer.DoStart
    fullName: Steeltoe.Messaging.RabbitMQ.Listener.DirectMessageListenerContainer.DoStart
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Listener.DirectReplyToMessageListenerContainer.DoStart*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Listener.DirectReplyToMessageListenerContainer.DoStart
  name: DoStart
  nameWithType: DirectReplyToMessageListenerContainer.DoStart
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.DirectReplyToMessageListenerContainer.DoStart
- uid: Steeltoe.Messaging.RabbitMQ.Listener.DirectMessageListenerContainer.ProcessMonitorTask
  commentId: M:Steeltoe.Messaging.RabbitMQ.Listener.DirectMessageListenerContainer.ProcessMonitorTask
  parent: Steeltoe.Messaging.RabbitMQ.Listener.DirectMessageListenerContainer
  name: ProcessMonitorTask()
  nameWithType: DirectMessageListenerContainer.ProcessMonitorTask()
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.DirectMessageListenerContainer.ProcessMonitorTask()
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Listener.DirectMessageListenerContainer.ProcessMonitorTask
    name: ProcessMonitorTask
    nameWithType: DirectMessageListenerContainer.ProcessMonitorTask
    fullName: Steeltoe.Messaging.RabbitMQ.Listener.DirectMessageListenerContainer.ProcessMonitorTask
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Listener.DirectMessageListenerContainer.ProcessMonitorTask
    name: ProcessMonitorTask
    nameWithType: DirectMessageListenerContainer.ProcessMonitorTask
    fullName: Steeltoe.Messaging.RabbitMQ.Listener.DirectMessageListenerContainer.ProcessMonitorTask
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Listener.DirectReplyToMessageListenerContainer.ProcessMonitorTask*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Listener.DirectReplyToMessageListenerContainer.ProcessMonitorTask
  name: ProcessMonitorTask
  nameWithType: DirectReplyToMessageListenerContainer.ProcessMonitorTask
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.DirectReplyToMessageListenerContainer.ProcessMonitorTask
- uid: Steeltoe.Messaging.RabbitMQ.Listener.DirectMessageListenerContainer.FindIdleConsumer
  commentId: M:Steeltoe.Messaging.RabbitMQ.Listener.DirectMessageListenerContainer.FindIdleConsumer
  parent: Steeltoe.Messaging.RabbitMQ.Listener.DirectMessageListenerContainer
  name: FindIdleConsumer()
  nameWithType: DirectMessageListenerContainer.FindIdleConsumer()
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.DirectMessageListenerContainer.FindIdleConsumer()
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Listener.DirectMessageListenerContainer.FindIdleConsumer
    name: FindIdleConsumer
    nameWithType: DirectMessageListenerContainer.FindIdleConsumer
    fullName: Steeltoe.Messaging.RabbitMQ.Listener.DirectMessageListenerContainer.FindIdleConsumer
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Listener.DirectMessageListenerContainer.FindIdleConsumer
    name: FindIdleConsumer
    nameWithType: DirectMessageListenerContainer.FindIdleConsumer
    fullName: Steeltoe.Messaging.RabbitMQ.Listener.DirectMessageListenerContainer.FindIdleConsumer
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Listener.DirectReplyToMessageListenerContainer.FindIdleConsumer*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Listener.DirectReplyToMessageListenerContainer.FindIdleConsumer
  name: FindIdleConsumer
  nameWithType: DirectReplyToMessageListenerContainer.FindIdleConsumer
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.DirectReplyToMessageListenerContainer.FindIdleConsumer
- uid: Steeltoe.Messaging.RabbitMQ.Listener.DirectMessageListenerContainer.ConsumerRemoved(Steeltoe.Messaging.RabbitMQ.Listener.DirectMessageListenerContainer.SimpleConsumer)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Listener.DirectMessageListenerContainer.ConsumerRemoved(Steeltoe.Messaging.RabbitMQ.Listener.DirectMessageListenerContainer.SimpleConsumer)
  parent: Steeltoe.Messaging.RabbitMQ.Listener.DirectMessageListenerContainer
  name: ConsumerRemoved(DirectMessageListenerContainer.SimpleConsumer)
  nameWithType: DirectMessageListenerContainer.ConsumerRemoved(DirectMessageListenerContainer.SimpleConsumer)
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.DirectMessageListenerContainer.ConsumerRemoved(Steeltoe.Messaging.RabbitMQ.Listener.DirectMessageListenerContainer.SimpleConsumer)
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Listener.DirectMessageListenerContainer.ConsumerRemoved(Steeltoe.Messaging.RabbitMQ.Listener.DirectMessageListenerContainer.SimpleConsumer)
    name: ConsumerRemoved
    nameWithType: DirectMessageListenerContainer.ConsumerRemoved
    fullName: Steeltoe.Messaging.RabbitMQ.Listener.DirectMessageListenerContainer.ConsumerRemoved
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.RabbitMQ.Listener.DirectMessageListenerContainer.SimpleConsumer
    name: DirectMessageListenerContainer.SimpleConsumer
    nameWithType: DirectMessageListenerContainer.SimpleConsumer
    fullName: Steeltoe.Messaging.RabbitMQ.Listener.DirectMessageListenerContainer.SimpleConsumer
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Listener.DirectMessageListenerContainer.ConsumerRemoved(Steeltoe.Messaging.RabbitMQ.Listener.DirectMessageListenerContainer.SimpleConsumer)
    name: ConsumerRemoved
    nameWithType: DirectMessageListenerContainer.ConsumerRemoved
    fullName: Steeltoe.Messaging.RabbitMQ.Listener.DirectMessageListenerContainer.ConsumerRemoved
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.RabbitMQ.Listener.DirectMessageListenerContainer.SimpleConsumer
    name: DirectMessageListenerContainer.SimpleConsumer
    nameWithType: DirectMessageListenerContainer.SimpleConsumer
    fullName: Steeltoe.Messaging.RabbitMQ.Listener.DirectMessageListenerContainer.SimpleConsumer
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Listener.DirectReplyToMessageListenerContainer.ConsumerRemoved*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Listener.DirectReplyToMessageListenerContainer.ConsumerRemoved
  name: ConsumerRemoved
  nameWithType: DirectReplyToMessageListenerContainer.ConsumerRemoved
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.DirectReplyToMessageListenerContainer.ConsumerRemoved
- uid: Steeltoe.Messaging.RabbitMQ.Listener.DirectMessageListenerContainer.SimpleConsumer
  commentId: T:Steeltoe.Messaging.RabbitMQ.Listener.DirectMessageListenerContainer.SimpleConsumer
  parent: Steeltoe.Messaging.RabbitMQ.Listener
  name: DirectMessageListenerContainer.SimpleConsumer
  nameWithType: DirectMessageListenerContainer.SimpleConsumer
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.DirectMessageListenerContainer.SimpleConsumer
