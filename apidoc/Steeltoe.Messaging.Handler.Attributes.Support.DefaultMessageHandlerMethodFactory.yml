### YamlMime:ManagedReference
items:
- uid: Steeltoe.Messaging.Handler.Attributes.Support.DefaultMessageHandlerMethodFactory
  commentId: T:Steeltoe.Messaging.Handler.Attributes.Support.DefaultMessageHandlerMethodFactory
  id: DefaultMessageHandlerMethodFactory
  parent: Steeltoe.Messaging.Handler.Attributes.Support
  children:
  - Steeltoe.Messaging.Handler.Attributes.Support.DefaultMessageHandlerMethodFactory.#ctor
  - Steeltoe.Messaging.Handler.Attributes.Support.DefaultMessageHandlerMethodFactory.#ctor(Steeltoe.Common.Converter.IConversionService)
  - Steeltoe.Messaging.Handler.Attributes.Support.DefaultMessageHandlerMethodFactory.#ctor(Steeltoe.Common.Converter.IConversionService,Steeltoe.Messaging.Converter.IMessageConverter)
  - Steeltoe.Messaging.Handler.Attributes.Support.DefaultMessageHandlerMethodFactory.#ctor(Steeltoe.Common.Converter.IConversionService,Steeltoe.Messaging.Converter.IMessageConverter,System.Collections.Generic.List{Steeltoe.Messaging.Handler.Invocation.IHandlerMethodArgumentResolver})
  - Steeltoe.Messaging.Handler.Attributes.Support.DefaultMessageHandlerMethodFactory._argumentResolvers
  - Steeltoe.Messaging.Handler.Attributes.Support.DefaultMessageHandlerMethodFactory.ConversionService
  - Steeltoe.Messaging.Handler.Attributes.Support.DefaultMessageHandlerMethodFactory.CreateInvocableHandlerMethod(System.Object,System.Reflection.MethodInfo)
  - Steeltoe.Messaging.Handler.Attributes.Support.DefaultMessageHandlerMethodFactory.CustomArgumentResolvers
  - Steeltoe.Messaging.Handler.Attributes.Support.DefaultMessageHandlerMethodFactory.DEFAULT_SERVICE_NAME
  - Steeltoe.Messaging.Handler.Attributes.Support.DefaultMessageHandlerMethodFactory.InitArgumentResolvers
  - Steeltoe.Messaging.Handler.Attributes.Support.DefaultMessageHandlerMethodFactory.Initialize
  - Steeltoe.Messaging.Handler.Attributes.Support.DefaultMessageHandlerMethodFactory.MessageConverter
  - Steeltoe.Messaging.Handler.Attributes.Support.DefaultMessageHandlerMethodFactory.ServiceName
  - Steeltoe.Messaging.Handler.Attributes.Support.DefaultMessageHandlerMethodFactory.SetArgumentResolvers(System.Collections.Generic.List{Steeltoe.Messaging.Handler.Invocation.IHandlerMethodArgumentResolver})
  langs:
  - csharp
  - vb
  name: DefaultMessageHandlerMethodFactory
  nameWithType: DefaultMessageHandlerMethodFactory
  fullName: Steeltoe.Messaging.Handler.Attributes.Support.DefaultMessageHandlerMethodFactory
  type: Class
  source:
    remote:
      path: src/Messaging/src/MessagingBase/Handler/Attributes/Support/DefaultMessageHandlerMethodFactory.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: DefaultMessageHandlerMethodFactory
    path: ../Steeltoe/src/Messaging/src/MessagingBase/Handler/Attributes/Support/DefaultMessageHandlerMethodFactory.cs
    startLine: 13
  assemblies:
  - Steeltoe.Messaging.MessagingBase
  namespace: Steeltoe.Messaging.Handler.Attributes.Support
  syntax:
    content: 'public class DefaultMessageHandlerMethodFactory : IMessageHandlerMethodFactory, IServiceNameAware'
    content.vb: >-
      Public Class DefaultMessageHandlerMethodFactory

          Implements IMessageHandlerMethodFactory, IServiceNameAware
  inheritance:
  - System.Object
  derivedClasses:
  - Steeltoe.Messaging.RabbitMQ.Listener.RabbitMessageHandlerMethodFactory
  - Steeltoe.Stream.Config.StreamMessageHandlerMethodFactory
  implements:
  - Steeltoe.Messaging.Handler.Attributes.Support.IMessageHandlerMethodFactory
  - IServiceNameAware
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Steeltoe.Messaging.Handler.Attributes.Support.DefaultMessageHandlerMethodFactory.DEFAULT_SERVICE_NAME
  commentId: F:Steeltoe.Messaging.Handler.Attributes.Support.DefaultMessageHandlerMethodFactory.DEFAULT_SERVICE_NAME
  id: DEFAULT_SERVICE_NAME
  parent: Steeltoe.Messaging.Handler.Attributes.Support.DefaultMessageHandlerMethodFactory
  langs:
  - csharp
  - vb
  name: DEFAULT_SERVICE_NAME
  nameWithType: DefaultMessageHandlerMethodFactory.DEFAULT_SERVICE_NAME
  fullName: Steeltoe.Messaging.Handler.Attributes.Support.DefaultMessageHandlerMethodFactory.DEFAULT_SERVICE_NAME
  type: Field
  source:
    remote:
      path: src/Messaging/src/MessagingBase/Handler/Attributes/Support/DefaultMessageHandlerMethodFactory.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: DEFAULT_SERVICE_NAME
    path: ../Steeltoe/src/Messaging/src/MessagingBase/Handler/Attributes/Support/DefaultMessageHandlerMethodFactory.cs
    startLine: 15
  assemblies:
  - Steeltoe.Messaging.MessagingBase
  namespace: Steeltoe.Messaging.Handler.Attributes.Support
  syntax:
    content: public const string DEFAULT_SERVICE_NAME = "DefaultMessageHandlerMethodFactory"
    return:
      type: System.String
    content.vb: Public Const DEFAULT_SERVICE_NAME As String = "DefaultMessageHandlerMethodFactory"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Steeltoe.Messaging.Handler.Attributes.Support.DefaultMessageHandlerMethodFactory._argumentResolvers
  commentId: F:Steeltoe.Messaging.Handler.Attributes.Support.DefaultMessageHandlerMethodFactory._argumentResolvers
  id: _argumentResolvers
  parent: Steeltoe.Messaging.Handler.Attributes.Support.DefaultMessageHandlerMethodFactory
  langs:
  - csharp
  - vb
  name: _argumentResolvers
  nameWithType: DefaultMessageHandlerMethodFactory._argumentResolvers
  fullName: Steeltoe.Messaging.Handler.Attributes.Support.DefaultMessageHandlerMethodFactory._argumentResolvers
  type: Field
  source:
    remote:
      path: src/Messaging/src/MessagingBase/Handler/Attributes/Support/DefaultMessageHandlerMethodFactory.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: _argumentResolvers
    path: ../Steeltoe/src/Messaging/src/MessagingBase/Handler/Attributes/Support/DefaultMessageHandlerMethodFactory.cs
    startLine: 17
  assemblies:
  - Steeltoe.Messaging.MessagingBase
  namespace: Steeltoe.Messaging.Handler.Attributes.Support
  syntax:
    content: protected readonly HandlerMethodArgumentResolverComposite _argumentResolvers
    return:
      type: Steeltoe.Messaging.Handler.Invocation.HandlerMethodArgumentResolverComposite
    content.vb: Protected ReadOnly _argumentResolvers As HandlerMethodArgumentResolverComposite
  modifiers.csharp:
  - protected
  - readonly
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: Steeltoe.Messaging.Handler.Attributes.Support.DefaultMessageHandlerMethodFactory.ServiceName
  commentId: P:Steeltoe.Messaging.Handler.Attributes.Support.DefaultMessageHandlerMethodFactory.ServiceName
  id: ServiceName
  parent: Steeltoe.Messaging.Handler.Attributes.Support.DefaultMessageHandlerMethodFactory
  langs:
  - csharp
  - vb
  name: ServiceName
  nameWithType: DefaultMessageHandlerMethodFactory.ServiceName
  fullName: Steeltoe.Messaging.Handler.Attributes.Support.DefaultMessageHandlerMethodFactory.ServiceName
  type: Property
  source:
    remote:
      path: src/Messaging/src/MessagingBase/Handler/Attributes/Support/DefaultMessageHandlerMethodFactory.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: ServiceName
    path: ../Steeltoe/src/Messaging/src/MessagingBase/Handler/Attributes/Support/DefaultMessageHandlerMethodFactory.cs
    startLine: 19
  assemblies:
  - Steeltoe.Messaging.MessagingBase
  namespace: Steeltoe.Messaging.Handler.Attributes.Support
  syntax:
    content: public virtual string ServiceName { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Overridable Property ServiceName As String
  overload: Steeltoe.Messaging.Handler.Attributes.Support.DefaultMessageHandlerMethodFactory.ServiceName*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Steeltoe.Messaging.Handler.Attributes.Support.DefaultMessageHandlerMethodFactory.ConversionService
  commentId: P:Steeltoe.Messaging.Handler.Attributes.Support.DefaultMessageHandlerMethodFactory.ConversionService
  id: ConversionService
  parent: Steeltoe.Messaging.Handler.Attributes.Support.DefaultMessageHandlerMethodFactory
  langs:
  - csharp
  - vb
  name: ConversionService
  nameWithType: DefaultMessageHandlerMethodFactory.ConversionService
  fullName: Steeltoe.Messaging.Handler.Attributes.Support.DefaultMessageHandlerMethodFactory.ConversionService
  type: Property
  source:
    remote:
      path: src/Messaging/src/MessagingBase/Handler/Attributes/Support/DefaultMessageHandlerMethodFactory.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: ConversionService
    path: ../Steeltoe/src/Messaging/src/MessagingBase/Handler/Attributes/Support/DefaultMessageHandlerMethodFactory.cs
    startLine: 21
  assemblies:
  - Steeltoe.Messaging.MessagingBase
  namespace: Steeltoe.Messaging.Handler.Attributes.Support
  syntax:
    content: public virtual IConversionService ConversionService { get; set; }
    parameters: []
    return:
      type: Steeltoe.Common.Converter.IConversionService
    content.vb: Public Overridable Property ConversionService As IConversionService
  overload: Steeltoe.Messaging.Handler.Attributes.Support.DefaultMessageHandlerMethodFactory.ConversionService*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Steeltoe.Messaging.Handler.Attributes.Support.DefaultMessageHandlerMethodFactory.MessageConverter
  commentId: P:Steeltoe.Messaging.Handler.Attributes.Support.DefaultMessageHandlerMethodFactory.MessageConverter
  id: MessageConverter
  parent: Steeltoe.Messaging.Handler.Attributes.Support.DefaultMessageHandlerMethodFactory
  langs:
  - csharp
  - vb
  name: MessageConverter
  nameWithType: DefaultMessageHandlerMethodFactory.MessageConverter
  fullName: Steeltoe.Messaging.Handler.Attributes.Support.DefaultMessageHandlerMethodFactory.MessageConverter
  type: Property
  source:
    remote:
      path: src/Messaging/src/MessagingBase/Handler/Attributes/Support/DefaultMessageHandlerMethodFactory.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: MessageConverter
    path: ../Steeltoe/src/Messaging/src/MessagingBase/Handler/Attributes/Support/DefaultMessageHandlerMethodFactory.cs
    startLine: 23
  assemblies:
  - Steeltoe.Messaging.MessagingBase
  namespace: Steeltoe.Messaging.Handler.Attributes.Support
  syntax:
    content: public virtual IMessageConverter MessageConverter { get; set; }
    parameters: []
    return:
      type: Steeltoe.Messaging.Converter.IMessageConverter
    content.vb: Public Overridable Property MessageConverter As IMessageConverter
  overload: Steeltoe.Messaging.Handler.Attributes.Support.DefaultMessageHandlerMethodFactory.MessageConverter*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Steeltoe.Messaging.Handler.Attributes.Support.DefaultMessageHandlerMethodFactory.CustomArgumentResolvers
  commentId: P:Steeltoe.Messaging.Handler.Attributes.Support.DefaultMessageHandlerMethodFactory.CustomArgumentResolvers
  id: CustomArgumentResolvers
  parent: Steeltoe.Messaging.Handler.Attributes.Support.DefaultMessageHandlerMethodFactory
  langs:
  - csharp
  - vb
  name: CustomArgumentResolvers
  nameWithType: DefaultMessageHandlerMethodFactory.CustomArgumentResolvers
  fullName: Steeltoe.Messaging.Handler.Attributes.Support.DefaultMessageHandlerMethodFactory.CustomArgumentResolvers
  type: Property
  source:
    remote:
      path: src/Messaging/src/MessagingBase/Handler/Attributes/Support/DefaultMessageHandlerMethodFactory.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: CustomArgumentResolvers
    path: ../Steeltoe/src/Messaging/src/MessagingBase/Handler/Attributes/Support/DefaultMessageHandlerMethodFactory.cs
    startLine: 25
  assemblies:
  - Steeltoe.Messaging.MessagingBase
  namespace: Steeltoe.Messaging.Handler.Attributes.Support
  syntax:
    content: public virtual List<IHandlerMethodArgumentResolver> CustomArgumentResolvers { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.List{Steeltoe.Messaging.Handler.Invocation.IHandlerMethodArgumentResolver}
    content.vb: Public Overridable Property CustomArgumentResolvers As List(Of IHandlerMethodArgumentResolver)
  overload: Steeltoe.Messaging.Handler.Attributes.Support.DefaultMessageHandlerMethodFactory.CustomArgumentResolvers*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Steeltoe.Messaging.Handler.Attributes.Support.DefaultMessageHandlerMethodFactory.#ctor
  commentId: M:Steeltoe.Messaging.Handler.Attributes.Support.DefaultMessageHandlerMethodFactory.#ctor
  id: '#ctor'
  parent: Steeltoe.Messaging.Handler.Attributes.Support.DefaultMessageHandlerMethodFactory
  langs:
  - csharp
  - vb
  name: DefaultMessageHandlerMethodFactory()
  nameWithType: DefaultMessageHandlerMethodFactory.DefaultMessageHandlerMethodFactory()
  fullName: Steeltoe.Messaging.Handler.Attributes.Support.DefaultMessageHandlerMethodFactory.DefaultMessageHandlerMethodFactory()
  type: Constructor
  source:
    remote:
      path: src/Messaging/src/MessagingBase/Handler/Attributes/Support/DefaultMessageHandlerMethodFactory.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: .ctor
    path: ../Steeltoe/src/Messaging/src/MessagingBase/Handler/Attributes/Support/DefaultMessageHandlerMethodFactory.cs
    startLine: 27
  assemblies:
  - Steeltoe.Messaging.MessagingBase
  namespace: Steeltoe.Messaging.Handler.Attributes.Support
  syntax:
    content: public DefaultMessageHandlerMethodFactory()
    content.vb: Public Sub New
  overload: Steeltoe.Messaging.Handler.Attributes.Support.DefaultMessageHandlerMethodFactory.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Steeltoe.Messaging.Handler.Attributes.Support.DefaultMessageHandlerMethodFactory.#ctor(Steeltoe.Common.Converter.IConversionService)
  commentId: M:Steeltoe.Messaging.Handler.Attributes.Support.DefaultMessageHandlerMethodFactory.#ctor(Steeltoe.Common.Converter.IConversionService)
  id: '#ctor(Steeltoe.Common.Converter.IConversionService)'
  parent: Steeltoe.Messaging.Handler.Attributes.Support.DefaultMessageHandlerMethodFactory
  langs:
  - csharp
  - vb
  name: DefaultMessageHandlerMethodFactory(IConversionService)
  nameWithType: DefaultMessageHandlerMethodFactory.DefaultMessageHandlerMethodFactory(IConversionService)
  fullName: Steeltoe.Messaging.Handler.Attributes.Support.DefaultMessageHandlerMethodFactory.DefaultMessageHandlerMethodFactory(Steeltoe.Common.Converter.IConversionService)
  type: Constructor
  source:
    remote:
      path: src/Messaging/src/MessagingBase/Handler/Attributes/Support/DefaultMessageHandlerMethodFactory.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: .ctor
    path: ../Steeltoe/src/Messaging/src/MessagingBase/Handler/Attributes/Support/DefaultMessageHandlerMethodFactory.cs
    startLine: 32
  assemblies:
  - Steeltoe.Messaging.MessagingBase
  namespace: Steeltoe.Messaging.Handler.Attributes.Support
  syntax:
    content: public DefaultMessageHandlerMethodFactory(IConversionService conversionService)
    parameters:
    - id: conversionService
      type: Steeltoe.Common.Converter.IConversionService
    content.vb: Public Sub New(conversionService As IConversionService)
  overload: Steeltoe.Messaging.Handler.Attributes.Support.DefaultMessageHandlerMethodFactory.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Steeltoe.Messaging.Handler.Attributes.Support.DefaultMessageHandlerMethodFactory.#ctor(Steeltoe.Common.Converter.IConversionService,Steeltoe.Messaging.Converter.IMessageConverter)
  commentId: M:Steeltoe.Messaging.Handler.Attributes.Support.DefaultMessageHandlerMethodFactory.#ctor(Steeltoe.Common.Converter.IConversionService,Steeltoe.Messaging.Converter.IMessageConverter)
  id: '#ctor(Steeltoe.Common.Converter.IConversionService,Steeltoe.Messaging.Converter.IMessageConverter)'
  parent: Steeltoe.Messaging.Handler.Attributes.Support.DefaultMessageHandlerMethodFactory
  langs:
  - csharp
  - vb
  name: DefaultMessageHandlerMethodFactory(IConversionService, IMessageConverter)
  nameWithType: DefaultMessageHandlerMethodFactory.DefaultMessageHandlerMethodFactory(IConversionService, IMessageConverter)
  fullName: Steeltoe.Messaging.Handler.Attributes.Support.DefaultMessageHandlerMethodFactory.DefaultMessageHandlerMethodFactory(Steeltoe.Common.Converter.IConversionService, Steeltoe.Messaging.Converter.IMessageConverter)
  type: Constructor
  source:
    remote:
      path: src/Messaging/src/MessagingBase/Handler/Attributes/Support/DefaultMessageHandlerMethodFactory.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: .ctor
    path: ../Steeltoe/src/Messaging/src/MessagingBase/Handler/Attributes/Support/DefaultMessageHandlerMethodFactory.cs
    startLine: 38
  assemblies:
  - Steeltoe.Messaging.MessagingBase
  namespace: Steeltoe.Messaging.Handler.Attributes.Support
  syntax:
    content: public DefaultMessageHandlerMethodFactory(IConversionService conversionService, IMessageConverter converter)
    parameters:
    - id: conversionService
      type: Steeltoe.Common.Converter.IConversionService
    - id: converter
      type: Steeltoe.Messaging.Converter.IMessageConverter
    content.vb: Public Sub New(conversionService As IConversionService, converter As IMessageConverter)
  overload: Steeltoe.Messaging.Handler.Attributes.Support.DefaultMessageHandlerMethodFactory.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Steeltoe.Messaging.Handler.Attributes.Support.DefaultMessageHandlerMethodFactory.#ctor(Steeltoe.Common.Converter.IConversionService,Steeltoe.Messaging.Converter.IMessageConverter,System.Collections.Generic.List{Steeltoe.Messaging.Handler.Invocation.IHandlerMethodArgumentResolver})
  commentId: M:Steeltoe.Messaging.Handler.Attributes.Support.DefaultMessageHandlerMethodFactory.#ctor(Steeltoe.Common.Converter.IConversionService,Steeltoe.Messaging.Converter.IMessageConverter,System.Collections.Generic.List{Steeltoe.Messaging.Handler.Invocation.IHandlerMethodArgumentResolver})
  id: '#ctor(Steeltoe.Common.Converter.IConversionService,Steeltoe.Messaging.Converter.IMessageConverter,System.Collections.Generic.List{Steeltoe.Messaging.Handler.Invocation.IHandlerMethodArgumentResolver})'
  parent: Steeltoe.Messaging.Handler.Attributes.Support.DefaultMessageHandlerMethodFactory
  langs:
  - csharp
  - vb
  name: DefaultMessageHandlerMethodFactory(IConversionService, IMessageConverter, List<IHandlerMethodArgumentResolver>)
  nameWithType: DefaultMessageHandlerMethodFactory.DefaultMessageHandlerMethodFactory(IConversionService, IMessageConverter, List<IHandlerMethodArgumentResolver>)
  fullName: Steeltoe.Messaging.Handler.Attributes.Support.DefaultMessageHandlerMethodFactory.DefaultMessageHandlerMethodFactory(Steeltoe.Common.Converter.IConversionService, Steeltoe.Messaging.Converter.IMessageConverter, System.Collections.Generic.List<Steeltoe.Messaging.Handler.Invocation.IHandlerMethodArgumentResolver>)
  type: Constructor
  source:
    remote:
      path: src/Messaging/src/MessagingBase/Handler/Attributes/Support/DefaultMessageHandlerMethodFactory.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: .ctor
    path: ../Steeltoe/src/Messaging/src/MessagingBase/Handler/Attributes/Support/DefaultMessageHandlerMethodFactory.cs
    startLine: 45
  assemblies:
  - Steeltoe.Messaging.MessagingBase
  namespace: Steeltoe.Messaging.Handler.Attributes.Support
  syntax:
    content: public DefaultMessageHandlerMethodFactory(IConversionService conversionService, IMessageConverter converter, List<IHandlerMethodArgumentResolver> resolvers)
    parameters:
    - id: conversionService
      type: Steeltoe.Common.Converter.IConversionService
    - id: converter
      type: Steeltoe.Messaging.Converter.IMessageConverter
    - id: resolvers
      type: System.Collections.Generic.List{Steeltoe.Messaging.Handler.Invocation.IHandlerMethodArgumentResolver}
    content.vb: Public Sub New(conversionService As IConversionService, converter As IMessageConverter, resolvers As List(Of IHandlerMethodArgumentResolver))
  overload: Steeltoe.Messaging.Handler.Attributes.Support.DefaultMessageHandlerMethodFactory.#ctor*
  nameWithType.vb: DefaultMessageHandlerMethodFactory.DefaultMessageHandlerMethodFactory(IConversionService, IMessageConverter, List(Of IHandlerMethodArgumentResolver))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Steeltoe.Messaging.Handler.Attributes.Support.DefaultMessageHandlerMethodFactory.DefaultMessageHandlerMethodFactory(Steeltoe.Common.Converter.IConversionService, Steeltoe.Messaging.Converter.IMessageConverter, System.Collections.Generic.List(Of Steeltoe.Messaging.Handler.Invocation.IHandlerMethodArgumentResolver))
  name.vb: DefaultMessageHandlerMethodFactory(IConversionService, IMessageConverter, List(Of IHandlerMethodArgumentResolver))
- uid: Steeltoe.Messaging.Handler.Attributes.Support.DefaultMessageHandlerMethodFactory.SetArgumentResolvers(System.Collections.Generic.List{Steeltoe.Messaging.Handler.Invocation.IHandlerMethodArgumentResolver})
  commentId: M:Steeltoe.Messaging.Handler.Attributes.Support.DefaultMessageHandlerMethodFactory.SetArgumentResolvers(System.Collections.Generic.List{Steeltoe.Messaging.Handler.Invocation.IHandlerMethodArgumentResolver})
  id: SetArgumentResolvers(System.Collections.Generic.List{Steeltoe.Messaging.Handler.Invocation.IHandlerMethodArgumentResolver})
  parent: Steeltoe.Messaging.Handler.Attributes.Support.DefaultMessageHandlerMethodFactory
  langs:
  - csharp
  - vb
  name: SetArgumentResolvers(List<IHandlerMethodArgumentResolver>)
  nameWithType: DefaultMessageHandlerMethodFactory.SetArgumentResolvers(List<IHandlerMethodArgumentResolver>)
  fullName: Steeltoe.Messaging.Handler.Attributes.Support.DefaultMessageHandlerMethodFactory.SetArgumentResolvers(System.Collections.Generic.List<Steeltoe.Messaging.Handler.Invocation.IHandlerMethodArgumentResolver>)
  type: Method
  source:
    remote:
      path: src/Messaging/src/MessagingBase/Handler/Attributes/Support/DefaultMessageHandlerMethodFactory.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: SetArgumentResolvers
    path: ../Steeltoe/src/Messaging/src/MessagingBase/Handler/Attributes/Support/DefaultMessageHandlerMethodFactory.cs
    startLine: 67
  assemblies:
  - Steeltoe.Messaging.MessagingBase
  namespace: Steeltoe.Messaging.Handler.Attributes.Support
  syntax:
    content: public virtual void SetArgumentResolvers(List<IHandlerMethodArgumentResolver> argumentResolvers)
    parameters:
    - id: argumentResolvers
      type: System.Collections.Generic.List{Steeltoe.Messaging.Handler.Invocation.IHandlerMethodArgumentResolver}
    content.vb: Public Overridable Sub SetArgumentResolvers(argumentResolvers As List(Of IHandlerMethodArgumentResolver))
  overload: Steeltoe.Messaging.Handler.Attributes.Support.DefaultMessageHandlerMethodFactory.SetArgumentResolvers*
  nameWithType.vb: DefaultMessageHandlerMethodFactory.SetArgumentResolvers(List(Of IHandlerMethodArgumentResolver))
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Steeltoe.Messaging.Handler.Attributes.Support.DefaultMessageHandlerMethodFactory.SetArgumentResolvers(System.Collections.Generic.List(Of Steeltoe.Messaging.Handler.Invocation.IHandlerMethodArgumentResolver))
  name.vb: SetArgumentResolvers(List(Of IHandlerMethodArgumentResolver))
- uid: Steeltoe.Messaging.Handler.Attributes.Support.DefaultMessageHandlerMethodFactory.CreateInvocableHandlerMethod(System.Object,System.Reflection.MethodInfo)
  commentId: M:Steeltoe.Messaging.Handler.Attributes.Support.DefaultMessageHandlerMethodFactory.CreateInvocableHandlerMethod(System.Object,System.Reflection.MethodInfo)
  id: CreateInvocableHandlerMethod(System.Object,System.Reflection.MethodInfo)
  parent: Steeltoe.Messaging.Handler.Attributes.Support.DefaultMessageHandlerMethodFactory
  langs:
  - csharp
  - vb
  name: CreateInvocableHandlerMethod(Object, MethodInfo)
  nameWithType: DefaultMessageHandlerMethodFactory.CreateInvocableHandlerMethod(Object, MethodInfo)
  fullName: Steeltoe.Messaging.Handler.Attributes.Support.DefaultMessageHandlerMethodFactory.CreateInvocableHandlerMethod(System.Object, System.Reflection.MethodInfo)
  type: Method
  source:
    remote:
      path: src/Messaging/src/MessagingBase/Handler/Attributes/Support/DefaultMessageHandlerMethodFactory.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: CreateInvocableHandlerMethod
    path: ../Steeltoe/src/Messaging/src/MessagingBase/Handler/Attributes/Support/DefaultMessageHandlerMethodFactory.cs
    startLine: 83
  assemblies:
  - Steeltoe.Messaging.MessagingBase
  namespace: Steeltoe.Messaging.Handler.Attributes.Support
  syntax:
    content: public virtual IInvocableHandlerMethod CreateInvocableHandlerMethod(object bean, MethodInfo method)
    parameters:
    - id: bean
      type: System.Object
    - id: method
      type: System.Reflection.MethodInfo
    return:
      type: Steeltoe.Messaging.Handler.Invocation.IInvocableHandlerMethod
    content.vb: Public Overridable Function CreateInvocableHandlerMethod(bean As Object, method As MethodInfo) As IInvocableHandlerMethod
  overload: Steeltoe.Messaging.Handler.Attributes.Support.DefaultMessageHandlerMethodFactory.CreateInvocableHandlerMethod*
  implements:
  - Steeltoe.Messaging.Handler.Attributes.Support.IMessageHandlerMethodFactory.CreateInvocableHandlerMethod(System.Object,System.Reflection.MethodInfo)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Steeltoe.Messaging.Handler.Attributes.Support.DefaultMessageHandlerMethodFactory.Initialize
  commentId: M:Steeltoe.Messaging.Handler.Attributes.Support.DefaultMessageHandlerMethodFactory.Initialize
  id: Initialize
  parent: Steeltoe.Messaging.Handler.Attributes.Support.DefaultMessageHandlerMethodFactory
  langs:
  - csharp
  - vb
  name: Initialize()
  nameWithType: DefaultMessageHandlerMethodFactory.Initialize()
  fullName: Steeltoe.Messaging.Handler.Attributes.Support.DefaultMessageHandlerMethodFactory.Initialize()
  type: Method
  source:
    remote:
      path: src/Messaging/src/MessagingBase/Handler/Attributes/Support/DefaultMessageHandlerMethodFactory.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Initialize
    path: ../Steeltoe/src/Messaging/src/MessagingBase/Handler/Attributes/Support/DefaultMessageHandlerMethodFactory.cs
    startLine: 90
  assemblies:
  - Steeltoe.Messaging.MessagingBase
  namespace: Steeltoe.Messaging.Handler.Attributes.Support
  syntax:
    content: public virtual void Initialize()
    content.vb: Public Overridable Sub Initialize
  overload: Steeltoe.Messaging.Handler.Attributes.Support.DefaultMessageHandlerMethodFactory.Initialize*
  implements:
  - Steeltoe.Messaging.Handler.Attributes.Support.IMessageHandlerMethodFactory.Initialize
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Steeltoe.Messaging.Handler.Attributes.Support.DefaultMessageHandlerMethodFactory.InitArgumentResolvers
  commentId: M:Steeltoe.Messaging.Handler.Attributes.Support.DefaultMessageHandlerMethodFactory.InitArgumentResolvers
  id: InitArgumentResolvers
  parent: Steeltoe.Messaging.Handler.Attributes.Support.DefaultMessageHandlerMethodFactory
  langs:
  - csharp
  - vb
  name: InitArgumentResolvers()
  nameWithType: DefaultMessageHandlerMethodFactory.InitArgumentResolvers()
  fullName: Steeltoe.Messaging.Handler.Attributes.Support.DefaultMessageHandlerMethodFactory.InitArgumentResolvers()
  type: Method
  source:
    remote:
      path: src/Messaging/src/MessagingBase/Handler/Attributes/Support/DefaultMessageHandlerMethodFactory.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: InitArgumentResolvers
    path: ../Steeltoe/src/Messaging/src/MessagingBase/Handler/Attributes/Support/DefaultMessageHandlerMethodFactory.cs
    startLine: 110
  assemblies:
  - Steeltoe.Messaging.MessagingBase
  namespace: Steeltoe.Messaging.Handler.Attributes.Support
  syntax:
    content: protected List<IHandlerMethodArgumentResolver> InitArgumentResolvers()
    return:
      type: System.Collections.Generic.List{Steeltoe.Messaging.Handler.Invocation.IHandlerMethodArgumentResolver}
    content.vb: Protected Function InitArgumentResolvers As List(Of IHandlerMethodArgumentResolver)
  overload: Steeltoe.Messaging.Handler.Attributes.Support.DefaultMessageHandlerMethodFactory.InitArgumentResolvers*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
references:
- uid: Steeltoe.Messaging.Handler.Attributes.Support
  commentId: N:Steeltoe.Messaging.Handler.Attributes.Support
  name: Steeltoe.Messaging.Handler.Attributes.Support
  nameWithType: Steeltoe.Messaging.Handler.Attributes.Support
  fullName: Steeltoe.Messaging.Handler.Attributes.Support
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Steeltoe.Messaging.Handler.Attributes.Support.IMessageHandlerMethodFactory
  commentId: T:Steeltoe.Messaging.Handler.Attributes.Support.IMessageHandlerMethodFactory
  parent: Steeltoe.Messaging.Handler.Attributes.Support
  name: IMessageHandlerMethodFactory
  nameWithType: IMessageHandlerMethodFactory
  fullName: Steeltoe.Messaging.Handler.Attributes.Support.IMessageHandlerMethodFactory
- uid: IServiceNameAware
  isExternal: true
  name: IServiceNameAware
  nameWithType: IServiceNameAware
  fullName: IServiceNameAware
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Steeltoe.Messaging.Handler.Invocation.HandlerMethodArgumentResolverComposite
  commentId: T:Steeltoe.Messaging.Handler.Invocation.HandlerMethodArgumentResolverComposite
  parent: Steeltoe.Messaging.Handler.Invocation
  name: HandlerMethodArgumentResolverComposite
  nameWithType: HandlerMethodArgumentResolverComposite
  fullName: Steeltoe.Messaging.Handler.Invocation.HandlerMethodArgumentResolverComposite
- uid: Steeltoe.Messaging.Handler.Invocation
  commentId: N:Steeltoe.Messaging.Handler.Invocation
  name: Steeltoe.Messaging.Handler.Invocation
  nameWithType: Steeltoe.Messaging.Handler.Invocation
  fullName: Steeltoe.Messaging.Handler.Invocation
- uid: Steeltoe.Messaging.Handler.Attributes.Support.DefaultMessageHandlerMethodFactory.ServiceName*
  commentId: Overload:Steeltoe.Messaging.Handler.Attributes.Support.DefaultMessageHandlerMethodFactory.ServiceName
  name: ServiceName
  nameWithType: DefaultMessageHandlerMethodFactory.ServiceName
  fullName: Steeltoe.Messaging.Handler.Attributes.Support.DefaultMessageHandlerMethodFactory.ServiceName
- uid: Steeltoe.Messaging.Handler.Attributes.Support.DefaultMessageHandlerMethodFactory.ConversionService*
  commentId: Overload:Steeltoe.Messaging.Handler.Attributes.Support.DefaultMessageHandlerMethodFactory.ConversionService
  name: ConversionService
  nameWithType: DefaultMessageHandlerMethodFactory.ConversionService
  fullName: Steeltoe.Messaging.Handler.Attributes.Support.DefaultMessageHandlerMethodFactory.ConversionService
- uid: Steeltoe.Common.Converter.IConversionService
  commentId: T:Steeltoe.Common.Converter.IConversionService
  parent: Steeltoe.Common.Converter
  name: IConversionService
  nameWithType: IConversionService
  fullName: Steeltoe.Common.Converter.IConversionService
- uid: Steeltoe.Common.Converter
  commentId: N:Steeltoe.Common.Converter
  name: Steeltoe.Common.Converter
  nameWithType: Steeltoe.Common.Converter
  fullName: Steeltoe.Common.Converter
- uid: Steeltoe.Messaging.Handler.Attributes.Support.DefaultMessageHandlerMethodFactory.MessageConverter*
  commentId: Overload:Steeltoe.Messaging.Handler.Attributes.Support.DefaultMessageHandlerMethodFactory.MessageConverter
  name: MessageConverter
  nameWithType: DefaultMessageHandlerMethodFactory.MessageConverter
  fullName: Steeltoe.Messaging.Handler.Attributes.Support.DefaultMessageHandlerMethodFactory.MessageConverter
- uid: Steeltoe.Messaging.Converter.IMessageConverter
  commentId: T:Steeltoe.Messaging.Converter.IMessageConverter
  parent: Steeltoe.Messaging.Converter
  name: IMessageConverter
  nameWithType: IMessageConverter
  fullName: Steeltoe.Messaging.Converter.IMessageConverter
- uid: Steeltoe.Messaging.Converter
  commentId: N:Steeltoe.Messaging.Converter
  name: Steeltoe.Messaging.Converter
  nameWithType: Steeltoe.Messaging.Converter
  fullName: Steeltoe.Messaging.Converter
- uid: Steeltoe.Messaging.Handler.Attributes.Support.DefaultMessageHandlerMethodFactory.CustomArgumentResolvers*
  commentId: Overload:Steeltoe.Messaging.Handler.Attributes.Support.DefaultMessageHandlerMethodFactory.CustomArgumentResolvers
  name: CustomArgumentResolvers
  nameWithType: DefaultMessageHandlerMethodFactory.CustomArgumentResolvers
  fullName: Steeltoe.Messaging.Handler.Attributes.Support.DefaultMessageHandlerMethodFactory.CustomArgumentResolvers
- uid: System.Collections.Generic.List{Steeltoe.Messaging.Handler.Invocation.IHandlerMethodArgumentResolver}
  commentId: T:System.Collections.Generic.List{Steeltoe.Messaging.Handler.Invocation.IHandlerMethodArgumentResolver}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<IHandlerMethodArgumentResolver>
  nameWithType: List<IHandlerMethodArgumentResolver>
  fullName: System.Collections.Generic.List<Steeltoe.Messaging.Handler.Invocation.IHandlerMethodArgumentResolver>
  nameWithType.vb: List(Of IHandlerMethodArgumentResolver)
  fullName.vb: System.Collections.Generic.List(Of Steeltoe.Messaging.Handler.Invocation.IHandlerMethodArgumentResolver)
  name.vb: List(Of IHandlerMethodArgumentResolver)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Steeltoe.Messaging.Handler.Invocation.IHandlerMethodArgumentResolver
    name: IHandlerMethodArgumentResolver
    nameWithType: IHandlerMethodArgumentResolver
    fullName: Steeltoe.Messaging.Handler.Invocation.IHandlerMethodArgumentResolver
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Steeltoe.Messaging.Handler.Invocation.IHandlerMethodArgumentResolver
    name: IHandlerMethodArgumentResolver
    nameWithType: IHandlerMethodArgumentResolver
    fullName: Steeltoe.Messaging.Handler.Invocation.IHandlerMethodArgumentResolver
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Steeltoe.Messaging.Handler.Attributes.Support.DefaultMessageHandlerMethodFactory.#ctor*
  commentId: Overload:Steeltoe.Messaging.Handler.Attributes.Support.DefaultMessageHandlerMethodFactory.#ctor
  name: DefaultMessageHandlerMethodFactory
  nameWithType: DefaultMessageHandlerMethodFactory.DefaultMessageHandlerMethodFactory
  fullName: Steeltoe.Messaging.Handler.Attributes.Support.DefaultMessageHandlerMethodFactory.DefaultMessageHandlerMethodFactory
- uid: Steeltoe.Messaging.Handler.Attributes.Support.DefaultMessageHandlerMethodFactory.SetArgumentResolvers*
  commentId: Overload:Steeltoe.Messaging.Handler.Attributes.Support.DefaultMessageHandlerMethodFactory.SetArgumentResolvers
  name: SetArgumentResolvers
  nameWithType: DefaultMessageHandlerMethodFactory.SetArgumentResolvers
  fullName: Steeltoe.Messaging.Handler.Attributes.Support.DefaultMessageHandlerMethodFactory.SetArgumentResolvers
- uid: Steeltoe.Messaging.Handler.Attributes.Support.DefaultMessageHandlerMethodFactory.CreateInvocableHandlerMethod*
  commentId: Overload:Steeltoe.Messaging.Handler.Attributes.Support.DefaultMessageHandlerMethodFactory.CreateInvocableHandlerMethod
  name: CreateInvocableHandlerMethod
  nameWithType: DefaultMessageHandlerMethodFactory.CreateInvocableHandlerMethod
  fullName: Steeltoe.Messaging.Handler.Attributes.Support.DefaultMessageHandlerMethodFactory.CreateInvocableHandlerMethod
- uid: Steeltoe.Messaging.Handler.Attributes.Support.IMessageHandlerMethodFactory.CreateInvocableHandlerMethod(System.Object,System.Reflection.MethodInfo)
  commentId: M:Steeltoe.Messaging.Handler.Attributes.Support.IMessageHandlerMethodFactory.CreateInvocableHandlerMethod(System.Object,System.Reflection.MethodInfo)
  parent: Steeltoe.Messaging.Handler.Attributes.Support.IMessageHandlerMethodFactory
  isExternal: true
  name: CreateInvocableHandlerMethod(Object, MethodInfo)
  nameWithType: IMessageHandlerMethodFactory.CreateInvocableHandlerMethod(Object, MethodInfo)
  fullName: Steeltoe.Messaging.Handler.Attributes.Support.IMessageHandlerMethodFactory.CreateInvocableHandlerMethod(System.Object, System.Reflection.MethodInfo)
  spec.csharp:
  - uid: Steeltoe.Messaging.Handler.Attributes.Support.IMessageHandlerMethodFactory.CreateInvocableHandlerMethod(System.Object,System.Reflection.MethodInfo)
    name: CreateInvocableHandlerMethod
    nameWithType: IMessageHandlerMethodFactory.CreateInvocableHandlerMethod
    fullName: Steeltoe.Messaging.Handler.Attributes.Support.IMessageHandlerMethodFactory.CreateInvocableHandlerMethod
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Reflection.MethodInfo
    name: MethodInfo
    nameWithType: MethodInfo
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Handler.Attributes.Support.IMessageHandlerMethodFactory.CreateInvocableHandlerMethod(System.Object,System.Reflection.MethodInfo)
    name: CreateInvocableHandlerMethod
    nameWithType: IMessageHandlerMethodFactory.CreateInvocableHandlerMethod
    fullName: Steeltoe.Messaging.Handler.Attributes.Support.IMessageHandlerMethodFactory.CreateInvocableHandlerMethod
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Reflection.MethodInfo
    name: MethodInfo
    nameWithType: MethodInfo
    fullName: System.Reflection.MethodInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Reflection.MethodInfo
  commentId: T:System.Reflection.MethodInfo
  parent: System.Reflection
  isExternal: true
  name: MethodInfo
  nameWithType: MethodInfo
  fullName: System.Reflection.MethodInfo
- uid: Steeltoe.Messaging.Handler.Invocation.IInvocableHandlerMethod
  commentId: T:Steeltoe.Messaging.Handler.Invocation.IInvocableHandlerMethod
  parent: Steeltoe.Messaging.Handler.Invocation
  name: IInvocableHandlerMethod
  nameWithType: IInvocableHandlerMethod
  fullName: Steeltoe.Messaging.Handler.Invocation.IInvocableHandlerMethod
- uid: System.Reflection
  commentId: N:System.Reflection
  isExternal: true
  name: System.Reflection
  nameWithType: System.Reflection
  fullName: System.Reflection
- uid: Steeltoe.Messaging.Handler.Attributes.Support.DefaultMessageHandlerMethodFactory.Initialize*
  commentId: Overload:Steeltoe.Messaging.Handler.Attributes.Support.DefaultMessageHandlerMethodFactory.Initialize
  name: Initialize
  nameWithType: DefaultMessageHandlerMethodFactory.Initialize
  fullName: Steeltoe.Messaging.Handler.Attributes.Support.DefaultMessageHandlerMethodFactory.Initialize
- uid: Steeltoe.Messaging.Handler.Attributes.Support.IMessageHandlerMethodFactory.Initialize
  commentId: M:Steeltoe.Messaging.Handler.Attributes.Support.IMessageHandlerMethodFactory.Initialize
  parent: Steeltoe.Messaging.Handler.Attributes.Support.IMessageHandlerMethodFactory
  name: Initialize()
  nameWithType: IMessageHandlerMethodFactory.Initialize()
  fullName: Steeltoe.Messaging.Handler.Attributes.Support.IMessageHandlerMethodFactory.Initialize()
  spec.csharp:
  - uid: Steeltoe.Messaging.Handler.Attributes.Support.IMessageHandlerMethodFactory.Initialize
    name: Initialize
    nameWithType: IMessageHandlerMethodFactory.Initialize
    fullName: Steeltoe.Messaging.Handler.Attributes.Support.IMessageHandlerMethodFactory.Initialize
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Handler.Attributes.Support.IMessageHandlerMethodFactory.Initialize
    name: Initialize
    nameWithType: IMessageHandlerMethodFactory.Initialize
    fullName: Steeltoe.Messaging.Handler.Attributes.Support.IMessageHandlerMethodFactory.Initialize
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Handler.Attributes.Support.DefaultMessageHandlerMethodFactory.InitArgumentResolvers*
  commentId: Overload:Steeltoe.Messaging.Handler.Attributes.Support.DefaultMessageHandlerMethodFactory.InitArgumentResolvers
  name: InitArgumentResolvers
  nameWithType: DefaultMessageHandlerMethodFactory.InitArgumentResolvers
  fullName: Steeltoe.Messaging.Handler.Attributes.Support.DefaultMessageHandlerMethodFactory.InitArgumentResolvers
