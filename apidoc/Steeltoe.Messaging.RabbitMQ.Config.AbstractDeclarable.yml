### YamlMime:ManagedReference
items:
- uid: Steeltoe.Messaging.RabbitMQ.Config.AbstractDeclarable
  commentId: T:Steeltoe.Messaging.RabbitMQ.Config.AbstractDeclarable
  id: AbstractDeclarable
  parent: Steeltoe.Messaging.RabbitMQ.Config
  children:
  - Steeltoe.Messaging.RabbitMQ.Config.AbstractDeclarable.#ctor(System.Collections.Generic.Dictionary{System.String,System.Object})
  - Steeltoe.Messaging.RabbitMQ.Config.AbstractDeclarable._declaringAdmins
  - Steeltoe.Messaging.RabbitMQ.Config.AbstractDeclarable.AddArgument(System.String,System.Object)
  - Steeltoe.Messaging.RabbitMQ.Config.AbstractDeclarable.Arguments
  - Steeltoe.Messaging.RabbitMQ.Config.AbstractDeclarable.DeclaringAdmins
  - Steeltoe.Messaging.RabbitMQ.Config.AbstractDeclarable.IgnoreDeclarationExceptions
  - Steeltoe.Messaging.RabbitMQ.Config.AbstractDeclarable.RemoveArgument(System.String)
  - Steeltoe.Messaging.RabbitMQ.Config.AbstractDeclarable.SetAdminsThatShouldDeclare(System.Object[])
  - Steeltoe.Messaging.RabbitMQ.Config.AbstractDeclarable.ShouldDeclare
  langs:
  - csharp
  - vb
  name: AbstractDeclarable
  nameWithType: AbstractDeclarable
  fullName: Steeltoe.Messaging.RabbitMQ.Config.AbstractDeclarable
  type: Class
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Config/AbstractDeclarable.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: AbstractDeclarable
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Config/AbstractDeclarable.cs
    startLine: 10
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Config
  syntax:
    content: 'public abstract class AbstractDeclarable : IDeclarable'
    content.vb: >-
      Public MustInherit Class AbstractDeclarable

          Implements IDeclarable
  inheritance:
  - System.Object
  derivedClasses:
  - Steeltoe.Messaging.RabbitMQ.Config.AbstractExchange
  - Steeltoe.Messaging.RabbitMQ.Config.Binding
  - Steeltoe.Messaging.RabbitMQ.Config.Queue
  implements:
  - Steeltoe.Messaging.RabbitMQ.Config.IDeclarable
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: Steeltoe.Messaging.RabbitMQ.Config.AbstractDeclarable._declaringAdmins
  commentId: F:Steeltoe.Messaging.RabbitMQ.Config.AbstractDeclarable._declaringAdmins
  id: _declaringAdmins
  parent: Steeltoe.Messaging.RabbitMQ.Config.AbstractDeclarable
  langs:
  - csharp
  - vb
  name: _declaringAdmins
  nameWithType: AbstractDeclarable._declaringAdmins
  fullName: Steeltoe.Messaging.RabbitMQ.Config.AbstractDeclarable._declaringAdmins
  type: Field
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Config/AbstractDeclarable.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: _declaringAdmins
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Config/AbstractDeclarable.cs
    startLine: 12
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Config
  syntax:
    content: protected List<object> _declaringAdmins
    return:
      type: System.Collections.Generic.List{System.Object}
    content.vb: Protected _declaringAdmins As List(Of Object)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Steeltoe.Messaging.RabbitMQ.Config.AbstractDeclarable.#ctor(System.Collections.Generic.Dictionary{System.String,System.Object})
  commentId: M:Steeltoe.Messaging.RabbitMQ.Config.AbstractDeclarable.#ctor(System.Collections.Generic.Dictionary{System.String,System.Object})
  id: '#ctor(System.Collections.Generic.Dictionary{System.String,System.Object})'
  parent: Steeltoe.Messaging.RabbitMQ.Config.AbstractDeclarable
  langs:
  - csharp
  - vb
  name: AbstractDeclarable(Dictionary<String, Object>)
  nameWithType: AbstractDeclarable.AbstractDeclarable(Dictionary<String, Object>)
  fullName: Steeltoe.Messaging.RabbitMQ.Config.AbstractDeclarable.AbstractDeclarable(System.Collections.Generic.Dictionary<System.String, System.Object>)
  type: Constructor
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Config/AbstractDeclarable.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: .ctor
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Config/AbstractDeclarable.cs
    startLine: 14
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Config
  syntax:
    content: protected AbstractDeclarable(Dictionary<string, object> arguments)
    parameters:
    - id: arguments
      type: System.Collections.Generic.Dictionary{System.String,System.Object}
    content.vb: Protected Sub New(arguments As Dictionary(Of String, Object))
  overload: Steeltoe.Messaging.RabbitMQ.Config.AbstractDeclarable.#ctor*
  nameWithType.vb: AbstractDeclarable.AbstractDeclarable(Dictionary(Of String, Object))
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: Steeltoe.Messaging.RabbitMQ.Config.AbstractDeclarable.AbstractDeclarable(System.Collections.Generic.Dictionary(Of System.String, System.Object))
  name.vb: AbstractDeclarable(Dictionary(Of String, Object))
- uid: Steeltoe.Messaging.RabbitMQ.Config.AbstractDeclarable.ShouldDeclare
  commentId: P:Steeltoe.Messaging.RabbitMQ.Config.AbstractDeclarable.ShouldDeclare
  id: ShouldDeclare
  parent: Steeltoe.Messaging.RabbitMQ.Config.AbstractDeclarable
  langs:
  - csharp
  - vb
  name: ShouldDeclare
  nameWithType: AbstractDeclarable.ShouldDeclare
  fullName: Steeltoe.Messaging.RabbitMQ.Config.AbstractDeclarable.ShouldDeclare
  type: Property
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Config/AbstractDeclarable.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: ShouldDeclare
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Config/AbstractDeclarable.cs
    startLine: 27
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Config
  syntax:
    content: public bool ShouldDeclare { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property ShouldDeclare As Boolean
  overload: Steeltoe.Messaging.RabbitMQ.Config.AbstractDeclarable.ShouldDeclare*
  implements:
  - Steeltoe.Messaging.RabbitMQ.Config.IDeclarable.ShouldDeclare
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Steeltoe.Messaging.RabbitMQ.Config.AbstractDeclarable.Arguments
  commentId: P:Steeltoe.Messaging.RabbitMQ.Config.AbstractDeclarable.Arguments
  id: Arguments
  parent: Steeltoe.Messaging.RabbitMQ.Config.AbstractDeclarable
  langs:
  - csharp
  - vb
  name: Arguments
  nameWithType: AbstractDeclarable.Arguments
  fullName: Steeltoe.Messaging.RabbitMQ.Config.AbstractDeclarable.Arguments
  type: Property
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Config/AbstractDeclarable.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Arguments
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Config/AbstractDeclarable.cs
    startLine: 29
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Config
  syntax:
    content: public Dictionary<string, object> Arguments { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.Dictionary{System.String,System.Object}
    content.vb: Public Property Arguments As Dictionary(Of String, Object)
  overload: Steeltoe.Messaging.RabbitMQ.Config.AbstractDeclarable.Arguments*
  implements:
  - Steeltoe.Messaging.RabbitMQ.Config.IDeclarable.Arguments
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Steeltoe.Messaging.RabbitMQ.Config.AbstractDeclarable.DeclaringAdmins
  commentId: P:Steeltoe.Messaging.RabbitMQ.Config.AbstractDeclarable.DeclaringAdmins
  id: DeclaringAdmins
  parent: Steeltoe.Messaging.RabbitMQ.Config.AbstractDeclarable
  langs:
  - csharp
  - vb
  name: DeclaringAdmins
  nameWithType: AbstractDeclarable.DeclaringAdmins
  fullName: Steeltoe.Messaging.RabbitMQ.Config.AbstractDeclarable.DeclaringAdmins
  type: Property
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Config/AbstractDeclarable.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: DeclaringAdmins
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Config/AbstractDeclarable.cs
    startLine: 31
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Config
  syntax:
    content: public List<object> DeclaringAdmins { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.List{System.Object}
    content.vb: Public Property DeclaringAdmins As List(Of Object)
  overload: Steeltoe.Messaging.RabbitMQ.Config.AbstractDeclarable.DeclaringAdmins*
  implements:
  - Steeltoe.Messaging.RabbitMQ.Config.IDeclarable.DeclaringAdmins
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Steeltoe.Messaging.RabbitMQ.Config.AbstractDeclarable.IgnoreDeclarationExceptions
  commentId: P:Steeltoe.Messaging.RabbitMQ.Config.AbstractDeclarable.IgnoreDeclarationExceptions
  id: IgnoreDeclarationExceptions
  parent: Steeltoe.Messaging.RabbitMQ.Config.AbstractDeclarable
  langs:
  - csharp
  - vb
  name: IgnoreDeclarationExceptions
  nameWithType: AbstractDeclarable.IgnoreDeclarationExceptions
  fullName: Steeltoe.Messaging.RabbitMQ.Config.AbstractDeclarable.IgnoreDeclarationExceptions
  type: Property
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Config/AbstractDeclarable.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: IgnoreDeclarationExceptions
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Config/AbstractDeclarable.cs
    startLine: 44
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Config
  syntax:
    content: public bool IgnoreDeclarationExceptions { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property IgnoreDeclarationExceptions As Boolean
  overload: Steeltoe.Messaging.RabbitMQ.Config.AbstractDeclarable.IgnoreDeclarationExceptions*
  implements:
  - Steeltoe.Messaging.RabbitMQ.Config.IDeclarable.IgnoreDeclarationExceptions
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Steeltoe.Messaging.RabbitMQ.Config.AbstractDeclarable.SetAdminsThatShouldDeclare(System.Object[])
  commentId: M:Steeltoe.Messaging.RabbitMQ.Config.AbstractDeclarable.SetAdminsThatShouldDeclare(System.Object[])
  id: SetAdminsThatShouldDeclare(System.Object[])
  parent: Steeltoe.Messaging.RabbitMQ.Config.AbstractDeclarable
  langs:
  - csharp
  - vb
  name: SetAdminsThatShouldDeclare(Object[])
  nameWithType: AbstractDeclarable.SetAdminsThatShouldDeclare(Object[])
  fullName: Steeltoe.Messaging.RabbitMQ.Config.AbstractDeclarable.SetAdminsThatShouldDeclare(System.Object[])
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Config/AbstractDeclarable.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: SetAdminsThatShouldDeclare
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Config/AbstractDeclarable.cs
    startLine: 46
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Config
  syntax:
    content: public virtual void SetAdminsThatShouldDeclare(params object[] adminArgs)
    parameters:
    - id: adminArgs
      type: System.Object[]
    content.vb: Public Overridable Sub SetAdminsThatShouldDeclare(ParamArray adminArgs As Object())
  overload: Steeltoe.Messaging.RabbitMQ.Config.AbstractDeclarable.SetAdminsThatShouldDeclare*
  nameWithType.vb: AbstractDeclarable.SetAdminsThatShouldDeclare(Object())
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Steeltoe.Messaging.RabbitMQ.Config.AbstractDeclarable.SetAdminsThatShouldDeclare(System.Object())
  name.vb: SetAdminsThatShouldDeclare(Object())
- uid: Steeltoe.Messaging.RabbitMQ.Config.AbstractDeclarable.AddArgument(System.String,System.Object)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Config.AbstractDeclarable.AddArgument(System.String,System.Object)
  id: AddArgument(System.String,System.Object)
  parent: Steeltoe.Messaging.RabbitMQ.Config.AbstractDeclarable
  langs:
  - csharp
  - vb
  name: AddArgument(String, Object)
  nameWithType: AbstractDeclarable.AddArgument(String, Object)
  fullName: Steeltoe.Messaging.RabbitMQ.Config.AbstractDeclarable.AddArgument(System.String, System.Object)
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Config/AbstractDeclarable.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: AddArgument
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Config/AbstractDeclarable.cs
    startLine: 71
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Config
  syntax:
    content: public void AddArgument(string name, object value)
    parameters:
    - id: name
      type: System.String
    - id: value
      type: System.Object
    content.vb: Public Sub AddArgument(name As String, value As Object)
  overload: Steeltoe.Messaging.RabbitMQ.Config.AbstractDeclarable.AddArgument*
  implements:
  - Steeltoe.Messaging.RabbitMQ.Config.IDeclarable.AddArgument(System.String,System.Object)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Steeltoe.Messaging.RabbitMQ.Config.AbstractDeclarable.RemoveArgument(System.String)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Config.AbstractDeclarable.RemoveArgument(System.String)
  id: RemoveArgument(System.String)
  parent: Steeltoe.Messaging.RabbitMQ.Config.AbstractDeclarable
  langs:
  - csharp
  - vb
  name: RemoveArgument(String)
  nameWithType: AbstractDeclarable.RemoveArgument(String)
  fullName: Steeltoe.Messaging.RabbitMQ.Config.AbstractDeclarable.RemoveArgument(System.String)
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Config/AbstractDeclarable.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: RemoveArgument
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Config/AbstractDeclarable.cs
    startLine: 76
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Config
  syntax:
    content: public object RemoveArgument(string name)
    parameters:
    - id: name
      type: System.String
    return:
      type: System.Object
    content.vb: Public Function RemoveArgument(name As String) As Object
  overload: Steeltoe.Messaging.RabbitMQ.Config.AbstractDeclarable.RemoveArgument*
  implements:
  - Steeltoe.Messaging.RabbitMQ.Config.IDeclarable.RemoveArgument(System.String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Steeltoe.Messaging.RabbitMQ.Config
  commentId: N:Steeltoe.Messaging.RabbitMQ.Config
  name: Steeltoe.Messaging.RabbitMQ.Config
  nameWithType: Steeltoe.Messaging.RabbitMQ.Config
  fullName: Steeltoe.Messaging.RabbitMQ.Config
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Steeltoe.Messaging.RabbitMQ.Config.IDeclarable
  commentId: T:Steeltoe.Messaging.RabbitMQ.Config.IDeclarable
  parent: Steeltoe.Messaging.RabbitMQ.Config
  name: IDeclarable
  nameWithType: IDeclarable
  fullName: Steeltoe.Messaging.RabbitMQ.Config.IDeclarable
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Collections.Generic.List{System.Object}
  commentId: T:System.Collections.Generic.List{System.Object}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<Object>
  nameWithType: List<Object>
  fullName: System.Collections.Generic.List<System.Object>
  nameWithType.vb: List(Of Object)
  fullName.vb: System.Collections.Generic.List(Of System.Object)
  name.vb: List(Of Object)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Steeltoe.Messaging.RabbitMQ.Config.AbstractDeclarable.#ctor*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Config.AbstractDeclarable.#ctor
  name: AbstractDeclarable
  nameWithType: AbstractDeclarable.AbstractDeclarable
  fullName: Steeltoe.Messaging.RabbitMQ.Config.AbstractDeclarable.AbstractDeclarable
- uid: System.Collections.Generic.Dictionary{System.String,System.Object}
  commentId: T:System.Collections.Generic.Dictionary{System.String,System.Object}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  name: Dictionary<String, Object>
  nameWithType: Dictionary<String, Object>
  fullName: System.Collections.Generic.Dictionary<System.String, System.Object>
  nameWithType.vb: Dictionary(Of String, Object)
  fullName.vb: System.Collections.Generic.Dictionary(Of System.String, System.Object)
  name.vb: Dictionary(Of String, Object)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Dictionary`2
  commentId: T:System.Collections.Generic.Dictionary`2
  isExternal: true
  name: Dictionary<TKey, TValue>
  nameWithType: Dictionary<TKey, TValue>
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>
  nameWithType.vb: Dictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue)
  name.vb: Dictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Config.AbstractDeclarable.ShouldDeclare*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Config.AbstractDeclarable.ShouldDeclare
  name: ShouldDeclare
  nameWithType: AbstractDeclarable.ShouldDeclare
  fullName: Steeltoe.Messaging.RabbitMQ.Config.AbstractDeclarable.ShouldDeclare
- uid: Steeltoe.Messaging.RabbitMQ.Config.IDeclarable.ShouldDeclare
  commentId: P:Steeltoe.Messaging.RabbitMQ.Config.IDeclarable.ShouldDeclare
  parent: Steeltoe.Messaging.RabbitMQ.Config.IDeclarable
  name: ShouldDeclare
  nameWithType: IDeclarable.ShouldDeclare
  fullName: Steeltoe.Messaging.RabbitMQ.Config.IDeclarable.ShouldDeclare
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Steeltoe.Messaging.RabbitMQ.Config.AbstractDeclarable.Arguments*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Config.AbstractDeclarable.Arguments
  name: Arguments
  nameWithType: AbstractDeclarable.Arguments
  fullName: Steeltoe.Messaging.RabbitMQ.Config.AbstractDeclarable.Arguments
- uid: Steeltoe.Messaging.RabbitMQ.Config.IDeclarable.Arguments
  commentId: P:Steeltoe.Messaging.RabbitMQ.Config.IDeclarable.Arguments
  parent: Steeltoe.Messaging.RabbitMQ.Config.IDeclarable
  name: Arguments
  nameWithType: IDeclarable.Arguments
  fullName: Steeltoe.Messaging.RabbitMQ.Config.IDeclarable.Arguments
- uid: Steeltoe.Messaging.RabbitMQ.Config.AbstractDeclarable.DeclaringAdmins*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Config.AbstractDeclarable.DeclaringAdmins
  name: DeclaringAdmins
  nameWithType: AbstractDeclarable.DeclaringAdmins
  fullName: Steeltoe.Messaging.RabbitMQ.Config.AbstractDeclarable.DeclaringAdmins
- uid: Steeltoe.Messaging.RabbitMQ.Config.IDeclarable.DeclaringAdmins
  commentId: P:Steeltoe.Messaging.RabbitMQ.Config.IDeclarable.DeclaringAdmins
  parent: Steeltoe.Messaging.RabbitMQ.Config.IDeclarable
  name: DeclaringAdmins
  nameWithType: IDeclarable.DeclaringAdmins
  fullName: Steeltoe.Messaging.RabbitMQ.Config.IDeclarable.DeclaringAdmins
- uid: Steeltoe.Messaging.RabbitMQ.Config.AbstractDeclarable.IgnoreDeclarationExceptions*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Config.AbstractDeclarable.IgnoreDeclarationExceptions
  name: IgnoreDeclarationExceptions
  nameWithType: AbstractDeclarable.IgnoreDeclarationExceptions
  fullName: Steeltoe.Messaging.RabbitMQ.Config.AbstractDeclarable.IgnoreDeclarationExceptions
- uid: Steeltoe.Messaging.RabbitMQ.Config.IDeclarable.IgnoreDeclarationExceptions
  commentId: P:Steeltoe.Messaging.RabbitMQ.Config.IDeclarable.IgnoreDeclarationExceptions
  parent: Steeltoe.Messaging.RabbitMQ.Config.IDeclarable
  name: IgnoreDeclarationExceptions
  nameWithType: IDeclarable.IgnoreDeclarationExceptions
  fullName: Steeltoe.Messaging.RabbitMQ.Config.IDeclarable.IgnoreDeclarationExceptions
- uid: Steeltoe.Messaging.RabbitMQ.Config.AbstractDeclarable.SetAdminsThatShouldDeclare*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Config.AbstractDeclarable.SetAdminsThatShouldDeclare
  name: SetAdminsThatShouldDeclare
  nameWithType: AbstractDeclarable.SetAdminsThatShouldDeclare
  fullName: Steeltoe.Messaging.RabbitMQ.Config.AbstractDeclarable.SetAdminsThatShouldDeclare
- uid: System.Object[]
  isExternal: true
  name: Object[]
  nameWithType: Object[]
  fullName: System.Object[]
  nameWithType.vb: Object()
  fullName.vb: System.Object()
  name.vb: Object()
  spec.csharp:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Steeltoe.Messaging.RabbitMQ.Config.AbstractDeclarable.AddArgument*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Config.AbstractDeclarable.AddArgument
  name: AddArgument
  nameWithType: AbstractDeclarable.AddArgument
  fullName: Steeltoe.Messaging.RabbitMQ.Config.AbstractDeclarable.AddArgument
- uid: Steeltoe.Messaging.RabbitMQ.Config.IDeclarable.AddArgument(System.String,System.Object)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Config.IDeclarable.AddArgument(System.String,System.Object)
  parent: Steeltoe.Messaging.RabbitMQ.Config.IDeclarable
  isExternal: true
  name: AddArgument(String, Object)
  nameWithType: IDeclarable.AddArgument(String, Object)
  fullName: Steeltoe.Messaging.RabbitMQ.Config.IDeclarable.AddArgument(System.String, System.Object)
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Config.IDeclarable.AddArgument(System.String,System.Object)
    name: AddArgument
    nameWithType: IDeclarable.AddArgument
    fullName: Steeltoe.Messaging.RabbitMQ.Config.IDeclarable.AddArgument
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Config.IDeclarable.AddArgument(System.String,System.Object)
    name: AddArgument
    nameWithType: IDeclarable.AddArgument
    fullName: Steeltoe.Messaging.RabbitMQ.Config.IDeclarable.AddArgument
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Steeltoe.Messaging.RabbitMQ.Config.AbstractDeclarable.RemoveArgument*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Config.AbstractDeclarable.RemoveArgument
  name: RemoveArgument
  nameWithType: AbstractDeclarable.RemoveArgument
  fullName: Steeltoe.Messaging.RabbitMQ.Config.AbstractDeclarable.RemoveArgument
- uid: Steeltoe.Messaging.RabbitMQ.Config.IDeclarable.RemoveArgument(System.String)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Config.IDeclarable.RemoveArgument(System.String)
  parent: Steeltoe.Messaging.RabbitMQ.Config.IDeclarable
  isExternal: true
  name: RemoveArgument(String)
  nameWithType: IDeclarable.RemoveArgument(String)
  fullName: Steeltoe.Messaging.RabbitMQ.Config.IDeclarable.RemoveArgument(System.String)
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Config.IDeclarable.RemoveArgument(System.String)
    name: RemoveArgument
    nameWithType: IDeclarable.RemoveArgument
    fullName: Steeltoe.Messaging.RabbitMQ.Config.IDeclarable.RemoveArgument
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Config.IDeclarable.RemoveArgument(System.String)
    name: RemoveArgument
    nameWithType: IDeclarable.RemoveArgument
    fullName: Steeltoe.Messaging.RabbitMQ.Config.IDeclarable.RemoveArgument
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
