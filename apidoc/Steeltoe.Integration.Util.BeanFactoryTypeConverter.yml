### YamlMime:ManagedReference
items:
- uid: Steeltoe.Integration.Util.BeanFactoryTypeConverter
  commentId: T:Steeltoe.Integration.Util.BeanFactoryTypeConverter
  id: BeanFactoryTypeConverter
  parent: Steeltoe.Integration.Util
  children:
  - Steeltoe.Integration.Util.BeanFactoryTypeConverter.CanConvert(System.Type,System.Type)
  - Steeltoe.Integration.Util.BeanFactoryTypeConverter.ConversionService
  - Steeltoe.Integration.Util.BeanFactoryTypeConverter.ConvertValue(System.Object,System.Type,System.Type)
  langs:
  - csharp
  - vb
  name: BeanFactoryTypeConverter
  nameWithType: BeanFactoryTypeConverter
  fullName: Steeltoe.Integration.Util.BeanFactoryTypeConverter
  type: Class
  source:
    remote:
      path: src/Integration/src/IntegrationBase/Util/BeanFactoryTypeConverter.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: BeanFactoryTypeConverter
    path: ../Steeltoe/src/Integration/src/IntegrationBase/Util/BeanFactoryTypeConverter.cs
    startLine: 10
  assemblies:
  - Steeltoe.Integration.IntegrationBase
  namespace: Steeltoe.Integration.Util
  syntax:
    content: 'public class BeanFactoryTypeConverter : ITypeConverter'
    content.vb: >-
      Public Class BeanFactoryTypeConverter

          Implements ITypeConverter
  inheritance:
  - System.Object
  implements:
  - Steeltoe.Common.Expression.ITypeConverter
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Steeltoe.Integration.Util.BeanFactoryTypeConverter.ConversionService
  commentId: P:Steeltoe.Integration.Util.BeanFactoryTypeConverter.ConversionService
  id: ConversionService
  parent: Steeltoe.Integration.Util.BeanFactoryTypeConverter
  langs:
  - csharp
  - vb
  name: ConversionService
  nameWithType: BeanFactoryTypeConverter.ConversionService
  fullName: Steeltoe.Integration.Util.BeanFactoryTypeConverter.ConversionService
  type: Property
  source:
    remote:
      path: src/Integration/src/IntegrationBase/Util/BeanFactoryTypeConverter.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: ConversionService
    path: ../Steeltoe/src/Integration/src/IntegrationBase/Util/BeanFactoryTypeConverter.cs
    startLine: 12
  assemblies:
  - Steeltoe.Integration.IntegrationBase
  namespace: Steeltoe.Integration.Util
  syntax:
    content: public IConversionService ConversionService { get; set; }
    parameters: []
    return:
      type: Steeltoe.Common.Converter.IConversionService
    content.vb: Public Property ConversionService As IConversionService
  overload: Steeltoe.Integration.Util.BeanFactoryTypeConverter.ConversionService*
  implements:
  - Steeltoe.Common.Expression.ITypeConverter.ConversionService
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Steeltoe.Integration.Util.BeanFactoryTypeConverter.CanConvert(System.Type,System.Type)
  commentId: M:Steeltoe.Integration.Util.BeanFactoryTypeConverter.CanConvert(System.Type,System.Type)
  id: CanConvert(System.Type,System.Type)
  parent: Steeltoe.Integration.Util.BeanFactoryTypeConverter
  langs:
  - csharp
  - vb
  name: CanConvert(Type, Type)
  nameWithType: BeanFactoryTypeConverter.CanConvert(Type, Type)
  fullName: Steeltoe.Integration.Util.BeanFactoryTypeConverter.CanConvert(System.Type, System.Type)
  type: Method
  source:
    remote:
      path: src/Integration/src/IntegrationBase/Util/BeanFactoryTypeConverter.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: CanConvert
    path: ../Steeltoe/src/Integration/src/IntegrationBase/Util/BeanFactoryTypeConverter.cs
    startLine: 14
  assemblies:
  - Steeltoe.Integration.IntegrationBase
  namespace: Steeltoe.Integration.Util
  syntax:
    content: public bool CanConvert(Type source, Type target)
    parameters:
    - id: source
      type: System.Type
    - id: target
      type: System.Type
    return:
      type: System.Boolean
    content.vb: Public Function CanConvert(source As Type, target As Type) As Boolean
  overload: Steeltoe.Integration.Util.BeanFactoryTypeConverter.CanConvert*
  implements:
  - Steeltoe.Common.Expression.ITypeConverter.CanConvert(System.Type,System.Type)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Steeltoe.Integration.Util.BeanFactoryTypeConverter.ConvertValue(System.Object,System.Type,System.Type)
  commentId: M:Steeltoe.Integration.Util.BeanFactoryTypeConverter.ConvertValue(System.Object,System.Type,System.Type)
  id: ConvertValue(System.Object,System.Type,System.Type)
  parent: Steeltoe.Integration.Util.BeanFactoryTypeConverter
  langs:
  - csharp
  - vb
  name: ConvertValue(Object, Type, Type)
  nameWithType: BeanFactoryTypeConverter.ConvertValue(Object, Type, Type)
  fullName: Steeltoe.Integration.Util.BeanFactoryTypeConverter.ConvertValue(System.Object, System.Type, System.Type)
  type: Method
  source:
    remote:
      path: src/Integration/src/IntegrationBase/Util/BeanFactoryTypeConverter.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: ConvertValue
    path: ../Steeltoe/src/Integration/src/IntegrationBase/Util/BeanFactoryTypeConverter.cs
    startLine: 19
  assemblies:
  - Steeltoe.Integration.IntegrationBase
  namespace: Steeltoe.Integration.Util
  syntax:
    content: public object ConvertValue(object value, Type source, Type target)
    parameters:
    - id: value
      type: System.Object
    - id: source
      type: System.Type
    - id: target
      type: System.Type
    return:
      type: System.Object
    content.vb: Public Function ConvertValue(value As Object, source As Type, target As Type) As Object
  overload: Steeltoe.Integration.Util.BeanFactoryTypeConverter.ConvertValue*
  implements:
  - Steeltoe.Common.Expression.ITypeConverter.ConvertValue(System.Object,System.Type,System.Type)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Steeltoe.Integration.Util
  commentId: N:Steeltoe.Integration.Util
  name: Steeltoe.Integration.Util
  nameWithType: Steeltoe.Integration.Util
  fullName: Steeltoe.Integration.Util
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Steeltoe.Common.Expression.ITypeConverter
  commentId: T:Steeltoe.Common.Expression.ITypeConverter
  parent: Steeltoe.Common.Expression
  name: ITypeConverter
  nameWithType: ITypeConverter
  fullName: Steeltoe.Common.Expression.ITypeConverter
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Steeltoe.Common.Expression
  commentId: N:Steeltoe.Common.Expression
  name: Steeltoe.Common.Expression
  nameWithType: Steeltoe.Common.Expression
  fullName: Steeltoe.Common.Expression
- uid: Steeltoe.Integration.Util.BeanFactoryTypeConverter.ConversionService*
  commentId: Overload:Steeltoe.Integration.Util.BeanFactoryTypeConverter.ConversionService
  name: ConversionService
  nameWithType: BeanFactoryTypeConverter.ConversionService
  fullName: Steeltoe.Integration.Util.BeanFactoryTypeConverter.ConversionService
- uid: Steeltoe.Common.Expression.ITypeConverter.ConversionService
  commentId: P:Steeltoe.Common.Expression.ITypeConverter.ConversionService
  parent: Steeltoe.Common.Expression.ITypeConverter
  name: ConversionService
  nameWithType: ITypeConverter.ConversionService
  fullName: Steeltoe.Common.Expression.ITypeConverter.ConversionService
- uid: Steeltoe.Common.Converter.IConversionService
  commentId: T:Steeltoe.Common.Converter.IConversionService
  parent: Steeltoe.Common.Converter
  name: IConversionService
  nameWithType: IConversionService
  fullName: Steeltoe.Common.Converter.IConversionService
- uid: Steeltoe.Common.Converter
  commentId: N:Steeltoe.Common.Converter
  name: Steeltoe.Common.Converter
  nameWithType: Steeltoe.Common.Converter
  fullName: Steeltoe.Common.Converter
- uid: Steeltoe.Integration.Util.BeanFactoryTypeConverter.CanConvert*
  commentId: Overload:Steeltoe.Integration.Util.BeanFactoryTypeConverter.CanConvert
  name: CanConvert
  nameWithType: BeanFactoryTypeConverter.CanConvert
  fullName: Steeltoe.Integration.Util.BeanFactoryTypeConverter.CanConvert
- uid: Steeltoe.Common.Expression.ITypeConverter.CanConvert(System.Type,System.Type)
  commentId: M:Steeltoe.Common.Expression.ITypeConverter.CanConvert(System.Type,System.Type)
  parent: Steeltoe.Common.Expression.ITypeConverter
  isExternal: true
  name: CanConvert(Type, Type)
  nameWithType: ITypeConverter.CanConvert(Type, Type)
  fullName: Steeltoe.Common.Expression.ITypeConverter.CanConvert(System.Type, System.Type)
  spec.csharp:
  - uid: Steeltoe.Common.Expression.ITypeConverter.CanConvert(System.Type,System.Type)
    name: CanConvert
    nameWithType: ITypeConverter.CanConvert
    fullName: Steeltoe.Common.Expression.ITypeConverter.CanConvert
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Common.Expression.ITypeConverter.CanConvert(System.Type,System.Type)
    name: CanConvert
    nameWithType: ITypeConverter.CanConvert
    fullName: Steeltoe.Common.Expression.ITypeConverter.CanConvert
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Steeltoe.Integration.Util.BeanFactoryTypeConverter.ConvertValue*
  commentId: Overload:Steeltoe.Integration.Util.BeanFactoryTypeConverter.ConvertValue
  name: ConvertValue
  nameWithType: BeanFactoryTypeConverter.ConvertValue
  fullName: Steeltoe.Integration.Util.BeanFactoryTypeConverter.ConvertValue
- uid: Steeltoe.Common.Expression.ITypeConverter.ConvertValue(System.Object,System.Type,System.Type)
  commentId: M:Steeltoe.Common.Expression.ITypeConverter.ConvertValue(System.Object,System.Type,System.Type)
  parent: Steeltoe.Common.Expression.ITypeConverter
  isExternal: true
  name: ConvertValue(Object, Type, Type)
  nameWithType: ITypeConverter.ConvertValue(Object, Type, Type)
  fullName: Steeltoe.Common.Expression.ITypeConverter.ConvertValue(System.Object, System.Type, System.Type)
  spec.csharp:
  - uid: Steeltoe.Common.Expression.ITypeConverter.ConvertValue(System.Object,System.Type,System.Type)
    name: ConvertValue
    nameWithType: ITypeConverter.ConvertValue
    fullName: Steeltoe.Common.Expression.ITypeConverter.ConvertValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Common.Expression.ITypeConverter.ConvertValue(System.Object,System.Type,System.Type)
    name: ConvertValue
    nameWithType: ITypeConverter.ConvertValue
    fullName: Steeltoe.Common.Expression.ITypeConverter.ConvertValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
