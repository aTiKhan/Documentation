### YamlMime:ManagedReference
items:
- uid: Steeltoe.Stream.Config.BinderConfigurations
  commentId: T:Steeltoe.Stream.Config.BinderConfigurations
  id: BinderConfigurations
  parent: Steeltoe.Stream.Config
  children:
  - Steeltoe.Stream.Config.BinderConfigurations.#ctor(Steeltoe.Stream.Binder.IBinderTypeRegistry,Microsoft.Extensions.Configuration.IConfiguration)
  - Steeltoe.Stream.Config.BinderConfigurations.#ctor(Steeltoe.Stream.Binder.IBinderTypeRegistry,Steeltoe.Stream.Config.BindingServiceOptions)
  - Steeltoe.Stream.Config.BinderConfigurations.Configurations
  - Steeltoe.Stream.Config.BinderConfigurations.FindMatchingConfigurationsIfAny(Steeltoe.Stream.Binder.IBinder)
  langs:
  - csharp
  - vb
  name: BinderConfigurations
  nameWithType: BinderConfigurations
  fullName: Steeltoe.Stream.Config.BinderConfigurations
  type: Class
  source:
    remote:
      path: src/Stream/src/StreamBase/Config/BinderConfigurations.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: BinderConfigurations
    path: ../Steeltoe/src/Stream/src/StreamBase/Config/BinderConfigurations.cs
    startLine: 11
  assemblies:
  - Steeltoe.Stream.StreamBase
  namespace: Steeltoe.Stream.Config
  syntax:
    content: 'public class BinderConfigurations : IBinderConfigurations'
    content.vb: >-
      Public Class BinderConfigurations

          Implements IBinderConfigurations
  inheritance:
  - System.Object
  implements:
  - Steeltoe.Stream.Config.IBinderConfigurations
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Steeltoe.Stream.Config.BinderConfigurations.#ctor(Steeltoe.Stream.Binder.IBinderTypeRegistry,Microsoft.Extensions.Configuration.IConfiguration)
  commentId: M:Steeltoe.Stream.Config.BinderConfigurations.#ctor(Steeltoe.Stream.Binder.IBinderTypeRegistry,Microsoft.Extensions.Configuration.IConfiguration)
  id: '#ctor(Steeltoe.Stream.Binder.IBinderTypeRegistry,Microsoft.Extensions.Configuration.IConfiguration)'
  parent: Steeltoe.Stream.Config.BinderConfigurations
  langs:
  - csharp
  - vb
  name: BinderConfigurations(IBinderTypeRegistry, IConfiguration)
  nameWithType: BinderConfigurations.BinderConfigurations(IBinderTypeRegistry, IConfiguration)
  fullName: Steeltoe.Stream.Config.BinderConfigurations.BinderConfigurations(Steeltoe.Stream.Binder.IBinderTypeRegistry, Microsoft.Extensions.Configuration.IConfiguration)
  type: Constructor
  source:
    remote:
      path: src/Stream/src/StreamBase/Config/BinderConfigurations.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: .ctor
    path: ../Steeltoe/src/Stream/src/StreamBase/Config/BinderConfigurations.cs
    startLine: 19
  assemblies:
  - Steeltoe.Stream.StreamBase
  namespace: Steeltoe.Stream.Config
  syntax:
    content: public BinderConfigurations(IBinderTypeRegistry binderTypeRegistry, IConfiguration config)
    parameters:
    - id: binderTypeRegistry
      type: Steeltoe.Stream.Binder.IBinderTypeRegistry
    - id: config
      type: Microsoft.Extensions.Configuration.IConfiguration
    content.vb: Public Sub New(binderTypeRegistry As IBinderTypeRegistry, config As IConfiguration)
  overload: Steeltoe.Stream.Config.BinderConfigurations.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Steeltoe.Stream.Config.BinderConfigurations.#ctor(Steeltoe.Stream.Binder.IBinderTypeRegistry,Steeltoe.Stream.Config.BindingServiceOptions)
  commentId: M:Steeltoe.Stream.Config.BinderConfigurations.#ctor(Steeltoe.Stream.Binder.IBinderTypeRegistry,Steeltoe.Stream.Config.BindingServiceOptions)
  id: '#ctor(Steeltoe.Stream.Binder.IBinderTypeRegistry,Steeltoe.Stream.Config.BindingServiceOptions)'
  parent: Steeltoe.Stream.Config.BinderConfigurations
  langs:
  - csharp
  - vb
  name: BinderConfigurations(IBinderTypeRegistry, BindingServiceOptions)
  nameWithType: BinderConfigurations.BinderConfigurations(IBinderTypeRegistry, BindingServiceOptions)
  fullName: Steeltoe.Stream.Config.BinderConfigurations.BinderConfigurations(Steeltoe.Stream.Binder.IBinderTypeRegistry, Steeltoe.Stream.Config.BindingServiceOptions)
  type: Constructor
  source:
    remote:
      path: src/Stream/src/StreamBase/Config/BinderConfigurations.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: .ctor
    path: ../Steeltoe/src/Stream/src/StreamBase/Config/BinderConfigurations.cs
    startLine: 25
  assemblies:
  - Steeltoe.Stream.StreamBase
  namespace: Steeltoe.Stream.Config
  syntax:
    content: public BinderConfigurations(IBinderTypeRegistry binderTypeRegistry, BindingServiceOptions options)
    parameters:
    - id: binderTypeRegistry
      type: Steeltoe.Stream.Binder.IBinderTypeRegistry
    - id: options
      type: Steeltoe.Stream.Config.BindingServiceOptions
    content.vb: Public Sub New(binderTypeRegistry As IBinderTypeRegistry, options As BindingServiceOptions)
  overload: Steeltoe.Stream.Config.BinderConfigurations.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Steeltoe.Stream.Config.BinderConfigurations.Configurations
  commentId: P:Steeltoe.Stream.Config.BinderConfigurations.Configurations
  id: Configurations
  parent: Steeltoe.Stream.Config.BinderConfigurations
  langs:
  - csharp
  - vb
  name: Configurations
  nameWithType: BinderConfigurations.Configurations
  fullName: Steeltoe.Stream.Config.BinderConfigurations.Configurations
  type: Property
  source:
    remote:
      path: src/Stream/src/StreamBase/Config/BinderConfigurations.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Configurations
    path: ../Steeltoe/src/Stream/src/StreamBase/Config/BinderConfigurations.cs
    startLine: 31
  assemblies:
  - Steeltoe.Stream.StreamBase
  namespace: Steeltoe.Stream.Config
  syntax:
    content: public Dictionary<string, BinderConfiguration> Configurations { get; }
    parameters: []
    return:
      type: System.Collections.Generic.Dictionary{System.String,Steeltoe.Stream.Binder.BinderConfiguration}
    content.vb: Public ReadOnly Property Configurations As Dictionary(Of String, BinderConfiguration)
  overload: Steeltoe.Stream.Config.BinderConfigurations.Configurations*
  implements:
  - Steeltoe.Stream.Config.IBinderConfigurations.Configurations
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Steeltoe.Stream.Config.BinderConfigurations.FindMatchingConfigurationsIfAny(Steeltoe.Stream.Binder.IBinder)
  commentId: M:Steeltoe.Stream.Config.BinderConfigurations.FindMatchingConfigurationsIfAny(Steeltoe.Stream.Binder.IBinder)
  id: FindMatchingConfigurationsIfAny(Steeltoe.Stream.Binder.IBinder)
  parent: Steeltoe.Stream.Config.BinderConfigurations
  langs:
  - csharp
  - vb
  name: FindMatchingConfigurationsIfAny(IBinder)
  nameWithType: BinderConfigurations.FindMatchingConfigurationsIfAny(IBinder)
  fullName: Steeltoe.Stream.Config.BinderConfigurations.FindMatchingConfigurationsIfAny(Steeltoe.Stream.Binder.IBinder)
  type: Method
  source:
    remote:
      path: src/Stream/src/StreamBase/Config/BinderConfigurations.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: FindMatchingConfigurationsIfAny
    path: ../Steeltoe/src/Stream/src/StreamBase/Config/BinderConfigurations.cs
    startLine: 44
  assemblies:
  - Steeltoe.Stream.StreamBase
  namespace: Steeltoe.Stream.Config
  syntax:
    content: public List<string> FindMatchingConfigurationsIfAny(IBinder binder)
    parameters:
    - id: binder
      type: Steeltoe.Stream.Binder.IBinder
    return:
      type: System.Collections.Generic.List{System.String}
    content.vb: Public Function FindMatchingConfigurationsIfAny(binder As IBinder) As List(Of String)
  overload: Steeltoe.Stream.Config.BinderConfigurations.FindMatchingConfigurationsIfAny*
  implements:
  - Steeltoe.Stream.Config.IBinderConfigurations.FindMatchingConfigurationsIfAny(Steeltoe.Stream.Binder.IBinder)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Steeltoe.Stream.Config
  commentId: N:Steeltoe.Stream.Config
  name: Steeltoe.Stream.Config
  nameWithType: Steeltoe.Stream.Config
  fullName: Steeltoe.Stream.Config
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Steeltoe.Stream.Config.IBinderConfigurations
  commentId: T:Steeltoe.Stream.Config.IBinderConfigurations
  parent: Steeltoe.Stream.Config
  name: IBinderConfigurations
  nameWithType: IBinderConfigurations
  fullName: Steeltoe.Stream.Config.IBinderConfigurations
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Steeltoe.Stream.Config.BinderConfigurations.#ctor*
  commentId: Overload:Steeltoe.Stream.Config.BinderConfigurations.#ctor
  name: BinderConfigurations
  nameWithType: BinderConfigurations.BinderConfigurations
  fullName: Steeltoe.Stream.Config.BinderConfigurations.BinderConfigurations
- uid: Steeltoe.Stream.Binder.IBinderTypeRegistry
  commentId: T:Steeltoe.Stream.Binder.IBinderTypeRegistry
  parent: Steeltoe.Stream.Binder
  name: IBinderTypeRegistry
  nameWithType: IBinderTypeRegistry
  fullName: Steeltoe.Stream.Binder.IBinderTypeRegistry
- uid: Microsoft.Extensions.Configuration.IConfiguration
  commentId: T:Microsoft.Extensions.Configuration.IConfiguration
  parent: Microsoft.Extensions.Configuration
  isExternal: true
  name: IConfiguration
  nameWithType: IConfiguration
  fullName: Microsoft.Extensions.Configuration.IConfiguration
- uid: Steeltoe.Stream.Binder
  commentId: N:Steeltoe.Stream.Binder
  name: Steeltoe.Stream.Binder
  nameWithType: Steeltoe.Stream.Binder
  fullName: Steeltoe.Stream.Binder
- uid: Microsoft.Extensions.Configuration
  commentId: N:Microsoft.Extensions.Configuration
  isExternal: true
  name: Microsoft.Extensions.Configuration
  nameWithType: Microsoft.Extensions.Configuration
  fullName: Microsoft.Extensions.Configuration
- uid: Steeltoe.Stream.Config.BindingServiceOptions
  commentId: T:Steeltoe.Stream.Config.BindingServiceOptions
  parent: Steeltoe.Stream.Config
  name: BindingServiceOptions
  nameWithType: BindingServiceOptions
  fullName: Steeltoe.Stream.Config.BindingServiceOptions
- uid: Steeltoe.Stream.Config.BinderConfigurations.Configurations*
  commentId: Overload:Steeltoe.Stream.Config.BinderConfigurations.Configurations
  name: Configurations
  nameWithType: BinderConfigurations.Configurations
  fullName: Steeltoe.Stream.Config.BinderConfigurations.Configurations
- uid: Steeltoe.Stream.Config.IBinderConfigurations.Configurations
  commentId: P:Steeltoe.Stream.Config.IBinderConfigurations.Configurations
  parent: Steeltoe.Stream.Config.IBinderConfigurations
  name: Configurations
  nameWithType: IBinderConfigurations.Configurations
  fullName: Steeltoe.Stream.Config.IBinderConfigurations.Configurations
- uid: System.Collections.Generic.Dictionary{System.String,Steeltoe.Stream.Binder.BinderConfiguration}
  commentId: T:System.Collections.Generic.Dictionary{System.String,Steeltoe.Stream.Binder.BinderConfiguration}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  name: Dictionary<String, BinderConfiguration>
  nameWithType: Dictionary<String, BinderConfiguration>
  fullName: System.Collections.Generic.Dictionary<System.String, Steeltoe.Stream.Binder.BinderConfiguration>
  nameWithType.vb: Dictionary(Of String, BinderConfiguration)
  fullName.vb: System.Collections.Generic.Dictionary(Of System.String, Steeltoe.Stream.Binder.BinderConfiguration)
  name.vb: Dictionary(Of String, BinderConfiguration)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Stream.Binder.BinderConfiguration
    name: BinderConfiguration
    nameWithType: BinderConfiguration
    fullName: Steeltoe.Stream.Binder.BinderConfiguration
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Stream.Binder.BinderConfiguration
    name: BinderConfiguration
    nameWithType: BinderConfiguration
    fullName: Steeltoe.Stream.Binder.BinderConfiguration
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Dictionary`2
  commentId: T:System.Collections.Generic.Dictionary`2
  isExternal: true
  name: Dictionary<TKey, TValue>
  nameWithType: Dictionary<TKey, TValue>
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>
  nameWithType.vb: Dictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue)
  name.vb: Dictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Steeltoe.Stream.Config.BinderConfigurations.FindMatchingConfigurationsIfAny*
  commentId: Overload:Steeltoe.Stream.Config.BinderConfigurations.FindMatchingConfigurationsIfAny
  name: FindMatchingConfigurationsIfAny
  nameWithType: BinderConfigurations.FindMatchingConfigurationsIfAny
  fullName: Steeltoe.Stream.Config.BinderConfigurations.FindMatchingConfigurationsIfAny
- uid: Steeltoe.Stream.Config.IBinderConfigurations.FindMatchingConfigurationsIfAny(Steeltoe.Stream.Binder.IBinder)
  commentId: M:Steeltoe.Stream.Config.IBinderConfigurations.FindMatchingConfigurationsIfAny(Steeltoe.Stream.Binder.IBinder)
  parent: Steeltoe.Stream.Config.IBinderConfigurations
  name: FindMatchingConfigurationsIfAny(IBinder)
  nameWithType: IBinderConfigurations.FindMatchingConfigurationsIfAny(IBinder)
  fullName: Steeltoe.Stream.Config.IBinderConfigurations.FindMatchingConfigurationsIfAny(Steeltoe.Stream.Binder.IBinder)
  spec.csharp:
  - uid: Steeltoe.Stream.Config.IBinderConfigurations.FindMatchingConfigurationsIfAny(Steeltoe.Stream.Binder.IBinder)
    name: FindMatchingConfigurationsIfAny
    nameWithType: IBinderConfigurations.FindMatchingConfigurationsIfAny
    fullName: Steeltoe.Stream.Config.IBinderConfigurations.FindMatchingConfigurationsIfAny
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Stream.Binder.IBinder
    name: IBinder
    nameWithType: IBinder
    fullName: Steeltoe.Stream.Binder.IBinder
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Stream.Config.IBinderConfigurations.FindMatchingConfigurationsIfAny(Steeltoe.Stream.Binder.IBinder)
    name: FindMatchingConfigurationsIfAny
    nameWithType: IBinderConfigurations.FindMatchingConfigurationsIfAny
    fullName: Steeltoe.Stream.Config.IBinderConfigurations.FindMatchingConfigurationsIfAny
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Stream.Binder.IBinder
    name: IBinder
    nameWithType: IBinder
    fullName: Steeltoe.Stream.Binder.IBinder
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Stream.Binder.IBinder
  commentId: T:Steeltoe.Stream.Binder.IBinder
  parent: Steeltoe.Stream.Binder
  name: IBinder
  nameWithType: IBinder
  fullName: Steeltoe.Stream.Binder.IBinder
- uid: System.Collections.Generic.List{System.String}
  commentId: T:System.Collections.Generic.List{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<String>
  nameWithType: List<String>
  fullName: System.Collections.Generic.List<System.String>
  nameWithType.vb: List(Of String)
  fullName.vb: System.Collections.Generic.List(Of System.String)
  name.vb: List(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
