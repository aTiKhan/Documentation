### YamlMime:ManagedReference
items:
- uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractRabbitListenerEndpoint
  commentId: T:Steeltoe.Messaging.RabbitMQ.Listener.AbstractRabbitListenerEndpoint
  id: AbstractRabbitListenerEndpoint
  parent: Steeltoe.Messaging.RabbitMQ.Listener
  children:
  - Steeltoe.Messaging.RabbitMQ.Listener.AbstractRabbitListenerEndpoint.#ctor(Steeltoe.Common.Contexts.IApplicationContext,Microsoft.Extensions.Logging.ILoggerFactory)
  - Steeltoe.Messaging.RabbitMQ.Listener.AbstractRabbitListenerEndpoint._logger
  - Steeltoe.Messaging.RabbitMQ.Listener.AbstractRabbitListenerEndpoint._loggerFactory
  - Steeltoe.Messaging.RabbitMQ.Listener.AbstractRabbitListenerEndpoint.AckMode
  - Steeltoe.Messaging.RabbitMQ.Listener.AbstractRabbitListenerEndpoint.Admin
  - Steeltoe.Messaging.RabbitMQ.Listener.AbstractRabbitListenerEndpoint.ApplicationContext
  - Steeltoe.Messaging.RabbitMQ.Listener.AbstractRabbitListenerEndpoint.AutoStartup
  - Steeltoe.Messaging.RabbitMQ.Listener.AbstractRabbitListenerEndpoint.BatchingStrategy
  - Steeltoe.Messaging.RabbitMQ.Listener.AbstractRabbitListenerEndpoint.BatchListener
  - Steeltoe.Messaging.RabbitMQ.Listener.AbstractRabbitListenerEndpoint.Concurrency
  - Steeltoe.Messaging.RabbitMQ.Listener.AbstractRabbitListenerEndpoint.CreateMessageListener(Steeltoe.Messaging.RabbitMQ.Listener.IMessageListenerContainer)
  - Steeltoe.Messaging.RabbitMQ.Listener.AbstractRabbitListenerEndpoint.Exclusive
  - Steeltoe.Messaging.RabbitMQ.Listener.AbstractRabbitListenerEndpoint.ExpressionContext
  - Steeltoe.Messaging.RabbitMQ.Listener.AbstractRabbitListenerEndpoint.GetEndpointDescription
  - Steeltoe.Messaging.RabbitMQ.Listener.AbstractRabbitListenerEndpoint.Group
  - Steeltoe.Messaging.RabbitMQ.Listener.AbstractRabbitListenerEndpoint.Id
  - Steeltoe.Messaging.RabbitMQ.Listener.AbstractRabbitListenerEndpoint.MessageConverter
  - Steeltoe.Messaging.RabbitMQ.Listener.AbstractRabbitListenerEndpoint.Priority
  - Steeltoe.Messaging.RabbitMQ.Listener.AbstractRabbitListenerEndpoint.QueueNames
  - Steeltoe.Messaging.RabbitMQ.Listener.AbstractRabbitListenerEndpoint.Queues
  - Steeltoe.Messaging.RabbitMQ.Listener.AbstractRabbitListenerEndpoint.ReplyPostProcessor
  - Steeltoe.Messaging.RabbitMQ.Listener.AbstractRabbitListenerEndpoint.Resolver
  - Steeltoe.Messaging.RabbitMQ.Listener.AbstractRabbitListenerEndpoint.ServiceResolver
  - Steeltoe.Messaging.RabbitMQ.Listener.AbstractRabbitListenerEndpoint.SetQueueNames(System.String[])
  - Steeltoe.Messaging.RabbitMQ.Listener.AbstractRabbitListenerEndpoint.SetQueues(Steeltoe.Messaging.RabbitMQ.Config.IQueue[])
  - Steeltoe.Messaging.RabbitMQ.Listener.AbstractRabbitListenerEndpoint.SetupListenerContainer(Steeltoe.Messaging.RabbitMQ.Listener.IMessageListenerContainer)
  - Steeltoe.Messaging.RabbitMQ.Listener.AbstractRabbitListenerEndpoint.ToString
  langs:
  - csharp
  - vb
  name: AbstractRabbitListenerEndpoint
  nameWithType: AbstractRabbitListenerEndpoint
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractRabbitListenerEndpoint
  type: Class
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Listener/AbstractRabbitListenerEndpoint.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: AbstractRabbitListenerEndpoint
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Listener/AbstractRabbitListenerEndpoint.cs
    startLine: 18
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Listener
  syntax:
    content: 'public abstract class AbstractRabbitListenerEndpoint : IRabbitListenerEndpoint'
    content.vb: >-
      Public MustInherit Class AbstractRabbitListenerEndpoint

          Implements IRabbitListenerEndpoint
  inheritance:
  - System.Object
  derivedClasses:
  - Steeltoe.Messaging.RabbitMQ.Listener.MethodRabbitListenerEndpoint
  - Steeltoe.Messaging.RabbitMQ.Listener.SimpleRabbitListenerEndpoint
  implements:
  - Steeltoe.Messaging.RabbitMQ.Listener.IRabbitListenerEndpoint
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractRabbitListenerEndpoint._logger
  commentId: F:Steeltoe.Messaging.RabbitMQ.Listener.AbstractRabbitListenerEndpoint._logger
  id: _logger
  parent: Steeltoe.Messaging.RabbitMQ.Listener.AbstractRabbitListenerEndpoint
  langs:
  - csharp
  - vb
  name: _logger
  nameWithType: AbstractRabbitListenerEndpoint._logger
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractRabbitListenerEndpoint._logger
  type: Field
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Listener/AbstractRabbitListenerEndpoint.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: _logger
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Listener/AbstractRabbitListenerEndpoint.cs
    startLine: 20
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Listener
  syntax:
    content: protected readonly ILogger _logger
    return:
      type: Microsoft.Extensions.Logging.ILogger
    content.vb: Protected ReadOnly _logger As ILogger
  modifiers.csharp:
  - protected
  - readonly
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractRabbitListenerEndpoint._loggerFactory
  commentId: F:Steeltoe.Messaging.RabbitMQ.Listener.AbstractRabbitListenerEndpoint._loggerFactory
  id: _loggerFactory
  parent: Steeltoe.Messaging.RabbitMQ.Listener.AbstractRabbitListenerEndpoint
  langs:
  - csharp
  - vb
  name: _loggerFactory
  nameWithType: AbstractRabbitListenerEndpoint._loggerFactory
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractRabbitListenerEndpoint._loggerFactory
  type: Field
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Listener/AbstractRabbitListenerEndpoint.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: _loggerFactory
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Listener/AbstractRabbitListenerEndpoint.cs
    startLine: 21
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Listener
  syntax:
    content: protected readonly ILoggerFactory _loggerFactory
    return:
      type: Microsoft.Extensions.Logging.ILoggerFactory
    content.vb: Protected ReadOnly _loggerFactory As ILoggerFactory
  modifiers.csharp:
  - protected
  - readonly
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractRabbitListenerEndpoint.#ctor(Steeltoe.Common.Contexts.IApplicationContext,Microsoft.Extensions.Logging.ILoggerFactory)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Listener.AbstractRabbitListenerEndpoint.#ctor(Steeltoe.Common.Contexts.IApplicationContext,Microsoft.Extensions.Logging.ILoggerFactory)
  id: '#ctor(Steeltoe.Common.Contexts.IApplicationContext,Microsoft.Extensions.Logging.ILoggerFactory)'
  parent: Steeltoe.Messaging.RabbitMQ.Listener.AbstractRabbitListenerEndpoint
  langs:
  - csharp
  - vb
  name: AbstractRabbitListenerEndpoint(IApplicationContext, ILoggerFactory)
  nameWithType: AbstractRabbitListenerEndpoint.AbstractRabbitListenerEndpoint(IApplicationContext, ILoggerFactory)
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractRabbitListenerEndpoint.AbstractRabbitListenerEndpoint(Steeltoe.Common.Contexts.IApplicationContext, Microsoft.Extensions.Logging.ILoggerFactory)
  type: Constructor
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Listener/AbstractRabbitListenerEndpoint.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: .ctor
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Listener/AbstractRabbitListenerEndpoint.cs
    startLine: 23
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Listener
  syntax:
    content: protected AbstractRabbitListenerEndpoint(IApplicationContext applicationContext, ILoggerFactory loggerFactory = null)
    parameters:
    - id: applicationContext
      type: Steeltoe.Common.Contexts.IApplicationContext
    - id: loggerFactory
      type: Microsoft.Extensions.Logging.ILoggerFactory
    content.vb: Protected Sub New(applicationContext As IApplicationContext, loggerFactory As ILoggerFactory = Nothing)
  overload: Steeltoe.Messaging.RabbitMQ.Listener.AbstractRabbitListenerEndpoint.#ctor*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractRabbitListenerEndpoint.ApplicationContext
  commentId: P:Steeltoe.Messaging.RabbitMQ.Listener.AbstractRabbitListenerEndpoint.ApplicationContext
  id: ApplicationContext
  parent: Steeltoe.Messaging.RabbitMQ.Listener.AbstractRabbitListenerEndpoint
  langs:
  - csharp
  - vb
  name: ApplicationContext
  nameWithType: AbstractRabbitListenerEndpoint.ApplicationContext
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractRabbitListenerEndpoint.ApplicationContext
  type: Property
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Listener/AbstractRabbitListenerEndpoint.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: ApplicationContext
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Listener/AbstractRabbitListenerEndpoint.cs
    startLine: 30
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Listener
  syntax:
    content: public IApplicationContext ApplicationContext { get; set; }
    parameters: []
    return:
      type: Steeltoe.Common.Contexts.IApplicationContext
    content.vb: Public Property ApplicationContext As IApplicationContext
  overload: Steeltoe.Messaging.RabbitMQ.Listener.AbstractRabbitListenerEndpoint.ApplicationContext*
  implements:
  - Steeltoe.Messaging.RabbitMQ.Listener.IRabbitListenerEndpoint.ApplicationContext
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractRabbitListenerEndpoint.Id
  commentId: P:Steeltoe.Messaging.RabbitMQ.Listener.AbstractRabbitListenerEndpoint.Id
  id: Id
  parent: Steeltoe.Messaging.RabbitMQ.Listener.AbstractRabbitListenerEndpoint
  langs:
  - csharp
  - vb
  name: Id
  nameWithType: AbstractRabbitListenerEndpoint.Id
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractRabbitListenerEndpoint.Id
  type: Property
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Listener/AbstractRabbitListenerEndpoint.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Id
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Listener/AbstractRabbitListenerEndpoint.cs
    startLine: 32
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Listener
  syntax:
    content: public string Id { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Id As String
  overload: Steeltoe.Messaging.RabbitMQ.Listener.AbstractRabbitListenerEndpoint.Id*
  implements:
  - Steeltoe.Messaging.RabbitMQ.Listener.IRabbitListenerEndpoint.Id
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractRabbitListenerEndpoint.Queues
  commentId: P:Steeltoe.Messaging.RabbitMQ.Listener.AbstractRabbitListenerEndpoint.Queues
  id: Queues
  parent: Steeltoe.Messaging.RabbitMQ.Listener.AbstractRabbitListenerEndpoint
  langs:
  - csharp
  - vb
  name: Queues
  nameWithType: AbstractRabbitListenerEndpoint.Queues
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractRabbitListenerEndpoint.Queues
  type: Property
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Listener/AbstractRabbitListenerEndpoint.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Queues
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Listener/AbstractRabbitListenerEndpoint.cs
    startLine: 34
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Listener
  syntax:
    content: public List<IQueue> Queues { get; }
    parameters: []
    return:
      type: System.Collections.Generic.List{Steeltoe.Messaging.RabbitMQ.Config.IQueue}
    content.vb: Public ReadOnly Property Queues As List(Of IQueue)
  overload: Steeltoe.Messaging.RabbitMQ.Listener.AbstractRabbitListenerEndpoint.Queues*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractRabbitListenerEndpoint.QueueNames
  commentId: P:Steeltoe.Messaging.RabbitMQ.Listener.AbstractRabbitListenerEndpoint.QueueNames
  id: QueueNames
  parent: Steeltoe.Messaging.RabbitMQ.Listener.AbstractRabbitListenerEndpoint
  langs:
  - csharp
  - vb
  name: QueueNames
  nameWithType: AbstractRabbitListenerEndpoint.QueueNames
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractRabbitListenerEndpoint.QueueNames
  type: Property
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Listener/AbstractRabbitListenerEndpoint.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: QueueNames
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Listener/AbstractRabbitListenerEndpoint.cs
    startLine: 36
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Listener
  syntax:
    content: public List<string> QueueNames { get; }
    parameters: []
    return:
      type: System.Collections.Generic.List{System.String}
    content.vb: Public ReadOnly Property QueueNames As List(Of String)
  overload: Steeltoe.Messaging.RabbitMQ.Listener.AbstractRabbitListenerEndpoint.QueueNames*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractRabbitListenerEndpoint.Exclusive
  commentId: P:Steeltoe.Messaging.RabbitMQ.Listener.AbstractRabbitListenerEndpoint.Exclusive
  id: Exclusive
  parent: Steeltoe.Messaging.RabbitMQ.Listener.AbstractRabbitListenerEndpoint
  langs:
  - csharp
  - vb
  name: Exclusive
  nameWithType: AbstractRabbitListenerEndpoint.Exclusive
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractRabbitListenerEndpoint.Exclusive
  type: Property
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Listener/AbstractRabbitListenerEndpoint.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Exclusive
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Listener/AbstractRabbitListenerEndpoint.cs
    startLine: 38
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Listener
  syntax:
    content: public bool Exclusive { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property Exclusive As Boolean
  overload: Steeltoe.Messaging.RabbitMQ.Listener.AbstractRabbitListenerEndpoint.Exclusive*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractRabbitListenerEndpoint.Priority
  commentId: P:Steeltoe.Messaging.RabbitMQ.Listener.AbstractRabbitListenerEndpoint.Priority
  id: Priority
  parent: Steeltoe.Messaging.RabbitMQ.Listener.AbstractRabbitListenerEndpoint
  langs:
  - csharp
  - vb
  name: Priority
  nameWithType: AbstractRabbitListenerEndpoint.Priority
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractRabbitListenerEndpoint.Priority
  type: Property
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Listener/AbstractRabbitListenerEndpoint.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Priority
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Listener/AbstractRabbitListenerEndpoint.cs
    startLine: 40
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Listener
  syntax:
    content: public int? Priority { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Int32}
    content.vb: Public Property Priority As Integer?
  overload: Steeltoe.Messaging.RabbitMQ.Listener.AbstractRabbitListenerEndpoint.Priority*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractRabbitListenerEndpoint.Concurrency
  commentId: P:Steeltoe.Messaging.RabbitMQ.Listener.AbstractRabbitListenerEndpoint.Concurrency
  id: Concurrency
  parent: Steeltoe.Messaging.RabbitMQ.Listener.AbstractRabbitListenerEndpoint
  langs:
  - csharp
  - vb
  name: Concurrency
  nameWithType: AbstractRabbitListenerEndpoint.Concurrency
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractRabbitListenerEndpoint.Concurrency
  type: Property
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Listener/AbstractRabbitListenerEndpoint.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Concurrency
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Listener/AbstractRabbitListenerEndpoint.cs
    startLine: 42
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Listener
  syntax:
    content: public int? Concurrency { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Int32}
    content.vb: Public Property Concurrency As Integer?
  overload: Steeltoe.Messaging.RabbitMQ.Listener.AbstractRabbitListenerEndpoint.Concurrency*
  implements:
  - Steeltoe.Messaging.RabbitMQ.Listener.IRabbitListenerEndpoint.Concurrency
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractRabbitListenerEndpoint.Admin
  commentId: P:Steeltoe.Messaging.RabbitMQ.Listener.AbstractRabbitListenerEndpoint.Admin
  id: Admin
  parent: Steeltoe.Messaging.RabbitMQ.Listener.AbstractRabbitListenerEndpoint
  langs:
  - csharp
  - vb
  name: Admin
  nameWithType: AbstractRabbitListenerEndpoint.Admin
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractRabbitListenerEndpoint.Admin
  type: Property
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Listener/AbstractRabbitListenerEndpoint.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Admin
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Listener/AbstractRabbitListenerEndpoint.cs
    startLine: 44
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Listener
  syntax:
    content: public IRabbitAdmin Admin { get; set; }
    parameters: []
    return:
      type: Steeltoe.Messaging.RabbitMQ.Core.IRabbitAdmin
    content.vb: Public Property Admin As IRabbitAdmin
  overload: Steeltoe.Messaging.RabbitMQ.Listener.AbstractRabbitListenerEndpoint.Admin*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractRabbitListenerEndpoint.AutoStartup
  commentId: P:Steeltoe.Messaging.RabbitMQ.Listener.AbstractRabbitListenerEndpoint.AutoStartup
  id: AutoStartup
  parent: Steeltoe.Messaging.RabbitMQ.Listener.AbstractRabbitListenerEndpoint
  langs:
  - csharp
  - vb
  name: AutoStartup
  nameWithType: AbstractRabbitListenerEndpoint.AutoStartup
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractRabbitListenerEndpoint.AutoStartup
  type: Property
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Listener/AbstractRabbitListenerEndpoint.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: AutoStartup
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Listener/AbstractRabbitListenerEndpoint.cs
    startLine: 46
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Listener
  syntax:
    content: public bool? AutoStartup { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Boolean}
    content.vb: Public Property AutoStartup As Boolean?
  overload: Steeltoe.Messaging.RabbitMQ.Listener.AbstractRabbitListenerEndpoint.AutoStartup*
  implements:
  - Steeltoe.Messaging.RabbitMQ.Listener.IRabbitListenerEndpoint.AutoStartup
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractRabbitListenerEndpoint.MessageConverter
  commentId: P:Steeltoe.Messaging.RabbitMQ.Listener.AbstractRabbitListenerEndpoint.MessageConverter
  id: MessageConverter
  parent: Steeltoe.Messaging.RabbitMQ.Listener.AbstractRabbitListenerEndpoint
  langs:
  - csharp
  - vb
  name: MessageConverter
  nameWithType: AbstractRabbitListenerEndpoint.MessageConverter
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractRabbitListenerEndpoint.MessageConverter
  type: Property
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Listener/AbstractRabbitListenerEndpoint.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: MessageConverter
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Listener/AbstractRabbitListenerEndpoint.cs
    startLine: 48
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Listener
  syntax:
    content: public ISmartMessageConverter MessageConverter { get; set; }
    parameters: []
    return:
      type: Steeltoe.Messaging.Converter.ISmartMessageConverter
    content.vb: Public Property MessageConverter As ISmartMessageConverter
  overload: Steeltoe.Messaging.RabbitMQ.Listener.AbstractRabbitListenerEndpoint.MessageConverter*
  implements:
  - Steeltoe.Messaging.RabbitMQ.Listener.IRabbitListenerEndpoint.MessageConverter
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractRabbitListenerEndpoint.BatchListener
  commentId: P:Steeltoe.Messaging.RabbitMQ.Listener.AbstractRabbitListenerEndpoint.BatchListener
  id: BatchListener
  parent: Steeltoe.Messaging.RabbitMQ.Listener.AbstractRabbitListenerEndpoint
  langs:
  - csharp
  - vb
  name: BatchListener
  nameWithType: AbstractRabbitListenerEndpoint.BatchListener
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractRabbitListenerEndpoint.BatchListener
  type: Property
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Listener/AbstractRabbitListenerEndpoint.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: BatchListener
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Listener/AbstractRabbitListenerEndpoint.cs
    startLine: 50
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Listener
  syntax:
    content: public bool BatchListener { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property BatchListener As Boolean
  overload: Steeltoe.Messaging.RabbitMQ.Listener.AbstractRabbitListenerEndpoint.BatchListener*
  implements:
  - Steeltoe.Messaging.RabbitMQ.Listener.IRabbitListenerEndpoint.BatchListener
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractRabbitListenerEndpoint.BatchingStrategy
  commentId: P:Steeltoe.Messaging.RabbitMQ.Listener.AbstractRabbitListenerEndpoint.BatchingStrategy
  id: BatchingStrategy
  parent: Steeltoe.Messaging.RabbitMQ.Listener.AbstractRabbitListenerEndpoint
  langs:
  - csharp
  - vb
  name: BatchingStrategy
  nameWithType: AbstractRabbitListenerEndpoint.BatchingStrategy
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractRabbitListenerEndpoint.BatchingStrategy
  type: Property
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Listener/AbstractRabbitListenerEndpoint.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: BatchingStrategy
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Listener/AbstractRabbitListenerEndpoint.cs
    startLine: 52
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Listener
  syntax:
    content: public IBatchingStrategy BatchingStrategy { get; set; }
    parameters: []
    return:
      type: Steeltoe.Messaging.RabbitMQ.Batch.IBatchingStrategy
    content.vb: Public Property BatchingStrategy As IBatchingStrategy
  overload: Steeltoe.Messaging.RabbitMQ.Listener.AbstractRabbitListenerEndpoint.BatchingStrategy*
  implements:
  - Steeltoe.Messaging.RabbitMQ.Listener.IRabbitListenerEndpoint.BatchingStrategy
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractRabbitListenerEndpoint.AckMode
  commentId: P:Steeltoe.Messaging.RabbitMQ.Listener.AbstractRabbitListenerEndpoint.AckMode
  id: AckMode
  parent: Steeltoe.Messaging.RabbitMQ.Listener.AbstractRabbitListenerEndpoint
  langs:
  - csharp
  - vb
  name: AckMode
  nameWithType: AbstractRabbitListenerEndpoint.AckMode
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractRabbitListenerEndpoint.AckMode
  type: Property
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Listener/AbstractRabbitListenerEndpoint.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: AckMode
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Listener/AbstractRabbitListenerEndpoint.cs
    startLine: 54
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Listener
  syntax:
    content: public AcknowledgeMode? AckMode { get; set; }
    parameters: []
    return:
      type: System.Nullable{Steeltoe.Messaging.RabbitMQ.Core.AcknowledgeMode}
    content.vb: Public Property AckMode As AcknowledgeMode?
  overload: Steeltoe.Messaging.RabbitMQ.Listener.AbstractRabbitListenerEndpoint.AckMode*
  implements:
  - Steeltoe.Messaging.RabbitMQ.Listener.IRabbitListenerEndpoint.AckMode
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractRabbitListenerEndpoint.ReplyPostProcessor
  commentId: P:Steeltoe.Messaging.RabbitMQ.Listener.AbstractRabbitListenerEndpoint.ReplyPostProcessor
  id: ReplyPostProcessor
  parent: Steeltoe.Messaging.RabbitMQ.Listener.AbstractRabbitListenerEndpoint
  langs:
  - csharp
  - vb
  name: ReplyPostProcessor
  nameWithType: AbstractRabbitListenerEndpoint.ReplyPostProcessor
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractRabbitListenerEndpoint.ReplyPostProcessor
  type: Property
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Listener/AbstractRabbitListenerEndpoint.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: ReplyPostProcessor
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Listener/AbstractRabbitListenerEndpoint.cs
    startLine: 56
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Listener
  syntax:
    content: public IReplyPostProcessor ReplyPostProcessor { get; set; }
    parameters: []
    return:
      type: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.IReplyPostProcessor
    content.vb: Public Property ReplyPostProcessor As IReplyPostProcessor
  overload: Steeltoe.Messaging.RabbitMQ.Listener.AbstractRabbitListenerEndpoint.ReplyPostProcessor*
  implements:
  - Steeltoe.Messaging.RabbitMQ.Listener.IRabbitListenerEndpoint.ReplyPostProcessor
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractRabbitListenerEndpoint.Group
  commentId: P:Steeltoe.Messaging.RabbitMQ.Listener.AbstractRabbitListenerEndpoint.Group
  id: Group
  parent: Steeltoe.Messaging.RabbitMQ.Listener.AbstractRabbitListenerEndpoint
  langs:
  - csharp
  - vb
  name: Group
  nameWithType: AbstractRabbitListenerEndpoint.Group
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractRabbitListenerEndpoint.Group
  type: Property
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Listener/AbstractRabbitListenerEndpoint.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Group
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Listener/AbstractRabbitListenerEndpoint.cs
    startLine: 58
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Listener
  syntax:
    content: public string Group { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Group As String
  overload: Steeltoe.Messaging.RabbitMQ.Listener.AbstractRabbitListenerEndpoint.Group*
  implements:
  - Steeltoe.Messaging.RabbitMQ.Listener.IRabbitListenerEndpoint.Group
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractRabbitListenerEndpoint.SetQueues(Steeltoe.Messaging.RabbitMQ.Config.IQueue[])
  commentId: M:Steeltoe.Messaging.RabbitMQ.Listener.AbstractRabbitListenerEndpoint.SetQueues(Steeltoe.Messaging.RabbitMQ.Config.IQueue[])
  id: SetQueues(Steeltoe.Messaging.RabbitMQ.Config.IQueue[])
  parent: Steeltoe.Messaging.RabbitMQ.Listener.AbstractRabbitListenerEndpoint
  langs:
  - csharp
  - vb
  name: SetQueues(IQueue[])
  nameWithType: AbstractRabbitListenerEndpoint.SetQueues(IQueue[])
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractRabbitListenerEndpoint.SetQueues(Steeltoe.Messaging.RabbitMQ.Config.IQueue[])
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Listener/AbstractRabbitListenerEndpoint.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: SetQueues
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Listener/AbstractRabbitListenerEndpoint.cs
    startLine: 60
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Listener
  syntax:
    content: public void SetQueues(params IQueue[] queues)
    parameters:
    - id: queues
      type: Steeltoe.Messaging.RabbitMQ.Config.IQueue[]
    content.vb: Public Sub SetQueues(ParamArray queues As IQueue())
  overload: Steeltoe.Messaging.RabbitMQ.Listener.AbstractRabbitListenerEndpoint.SetQueues*
  nameWithType.vb: AbstractRabbitListenerEndpoint.SetQueues(IQueue())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Steeltoe.Messaging.RabbitMQ.Listener.AbstractRabbitListenerEndpoint.SetQueues(Steeltoe.Messaging.RabbitMQ.Config.IQueue())
  name.vb: SetQueues(IQueue())
- uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractRabbitListenerEndpoint.SetQueueNames(System.String[])
  commentId: M:Steeltoe.Messaging.RabbitMQ.Listener.AbstractRabbitListenerEndpoint.SetQueueNames(System.String[])
  id: SetQueueNames(System.String[])
  parent: Steeltoe.Messaging.RabbitMQ.Listener.AbstractRabbitListenerEndpoint
  langs:
  - csharp
  - vb
  name: SetQueueNames(String[])
  nameWithType: AbstractRabbitListenerEndpoint.SetQueueNames(String[])
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractRabbitListenerEndpoint.SetQueueNames(System.String[])
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Listener/AbstractRabbitListenerEndpoint.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: SetQueueNames
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Listener/AbstractRabbitListenerEndpoint.cs
    startLine: 71
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Listener
  syntax:
    content: public void SetQueueNames(params string[] queueNames)
    parameters:
    - id: queueNames
      type: System.String[]
    content.vb: Public Sub SetQueueNames(ParamArray queueNames As String())
  overload: Steeltoe.Messaging.RabbitMQ.Listener.AbstractRabbitListenerEndpoint.SetQueueNames*
  nameWithType.vb: AbstractRabbitListenerEndpoint.SetQueueNames(String())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Steeltoe.Messaging.RabbitMQ.Listener.AbstractRabbitListenerEndpoint.SetQueueNames(System.String())
  name.vb: SetQueueNames(String())
- uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractRabbitListenerEndpoint.SetupListenerContainer(Steeltoe.Messaging.RabbitMQ.Listener.IMessageListenerContainer)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Listener.AbstractRabbitListenerEndpoint.SetupListenerContainer(Steeltoe.Messaging.RabbitMQ.Listener.IMessageListenerContainer)
  id: SetupListenerContainer(Steeltoe.Messaging.RabbitMQ.Listener.IMessageListenerContainer)
  parent: Steeltoe.Messaging.RabbitMQ.Listener.AbstractRabbitListenerEndpoint
  langs:
  - csharp
  - vb
  name: SetupListenerContainer(IMessageListenerContainer)
  nameWithType: AbstractRabbitListenerEndpoint.SetupListenerContainer(IMessageListenerContainer)
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractRabbitListenerEndpoint.SetupListenerContainer(Steeltoe.Messaging.RabbitMQ.Listener.IMessageListenerContainer)
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Listener/AbstractRabbitListenerEndpoint.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: SetupListenerContainer
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Listener/AbstractRabbitListenerEndpoint.cs
    startLine: 82
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Listener
  syntax:
    content: public void SetupListenerContainer(IMessageListenerContainer listenerContainer)
    parameters:
    - id: listenerContainer
      type: Steeltoe.Messaging.RabbitMQ.Listener.IMessageListenerContainer
    content.vb: Public Sub SetupListenerContainer(listenerContainer As IMessageListenerContainer)
  overload: Steeltoe.Messaging.RabbitMQ.Listener.AbstractRabbitListenerEndpoint.SetupListenerContainer*
  implements:
  - Steeltoe.Messaging.RabbitMQ.Listener.IRabbitListenerEndpoint.SetupListenerContainer(Steeltoe.Messaging.RabbitMQ.Listener.IMessageListenerContainer)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractRabbitListenerEndpoint.ToString
  commentId: M:Steeltoe.Messaging.RabbitMQ.Listener.AbstractRabbitListenerEndpoint.ToString
  id: ToString
  parent: Steeltoe.Messaging.RabbitMQ.Listener.AbstractRabbitListenerEndpoint
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: AbstractRabbitListenerEndpoint.ToString()
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractRabbitListenerEndpoint.ToString()
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Listener/AbstractRabbitListenerEndpoint.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: ToString
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Listener/AbstractRabbitListenerEndpoint.cs
    startLine: 120
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Listener
  syntax:
    content: public override string ToString()
    return:
      type: System.String
    content.vb: Public Overrides Function ToString As String
  overridden: System.Object.ToString
  overload: Steeltoe.Messaging.RabbitMQ.Listener.AbstractRabbitListenerEndpoint.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractRabbitListenerEndpoint.Resolver
  commentId: P:Steeltoe.Messaging.RabbitMQ.Listener.AbstractRabbitListenerEndpoint.Resolver
  id: Resolver
  parent: Steeltoe.Messaging.RabbitMQ.Listener.AbstractRabbitListenerEndpoint
  langs:
  - csharp
  - vb
  name: Resolver
  nameWithType: AbstractRabbitListenerEndpoint.Resolver
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractRabbitListenerEndpoint.Resolver
  type: Property
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Listener/AbstractRabbitListenerEndpoint.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Resolver
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Listener/AbstractRabbitListenerEndpoint.cs
    startLine: 125
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Listener
  syntax:
    content: protected IServiceExpressionResolver Resolver { get; set; }
    parameters: []
    return:
      type: Steeltoe.Messaging.RabbitMQ.Expressions.IServiceExpressionResolver
    content.vb: Protected Property Resolver As IServiceExpressionResolver
  overload: Steeltoe.Messaging.RabbitMQ.Listener.AbstractRabbitListenerEndpoint.Resolver*
  modifiers.csharp:
  - protected
  - get
  - set
  modifiers.vb:
  - Protected
- uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractRabbitListenerEndpoint.ServiceResolver
  commentId: P:Steeltoe.Messaging.RabbitMQ.Listener.AbstractRabbitListenerEndpoint.ServiceResolver
  id: ServiceResolver
  parent: Steeltoe.Messaging.RabbitMQ.Listener.AbstractRabbitListenerEndpoint
  langs:
  - csharp
  - vb
  name: ServiceResolver
  nameWithType: AbstractRabbitListenerEndpoint.ServiceResolver
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractRabbitListenerEndpoint.ServiceResolver
  type: Property
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Listener/AbstractRabbitListenerEndpoint.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: ServiceResolver
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Listener/AbstractRabbitListenerEndpoint.cs
    startLine: 127
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Listener
  syntax:
    content: protected IServiceResolver ServiceResolver { get; set; }
    parameters: []
    return:
      type: Steeltoe.Messaging.RabbitMQ.Expressions.IServiceResolver
    content.vb: Protected Property ServiceResolver As IServiceResolver
  overload: Steeltoe.Messaging.RabbitMQ.Listener.AbstractRabbitListenerEndpoint.ServiceResolver*
  modifiers.csharp:
  - protected
  - get
  - set
  modifiers.vb:
  - Protected
- uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractRabbitListenerEndpoint.ExpressionContext
  commentId: P:Steeltoe.Messaging.RabbitMQ.Listener.AbstractRabbitListenerEndpoint.ExpressionContext
  id: ExpressionContext
  parent: Steeltoe.Messaging.RabbitMQ.Listener.AbstractRabbitListenerEndpoint
  langs:
  - csharp
  - vb
  name: ExpressionContext
  nameWithType: AbstractRabbitListenerEndpoint.ExpressionContext
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractRabbitListenerEndpoint.ExpressionContext
  type: Property
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Listener/AbstractRabbitListenerEndpoint.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: ExpressionContext
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Listener/AbstractRabbitListenerEndpoint.cs
    startLine: 129
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Listener
  syntax:
    content: protected IServiceExpressionContext ExpressionContext { get; set; }
    parameters: []
    return:
      type: Steeltoe.Messaging.RabbitMQ.Expressions.IServiceExpressionContext
    content.vb: Protected Property ExpressionContext As IServiceExpressionContext
  overload: Steeltoe.Messaging.RabbitMQ.Listener.AbstractRabbitListenerEndpoint.ExpressionContext*
  modifiers.csharp:
  - protected
  - get
  - set
  modifiers.vb:
  - Protected
- uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractRabbitListenerEndpoint.CreateMessageListener(Steeltoe.Messaging.RabbitMQ.Listener.IMessageListenerContainer)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Listener.AbstractRabbitListenerEndpoint.CreateMessageListener(Steeltoe.Messaging.RabbitMQ.Listener.IMessageListenerContainer)
  id: CreateMessageListener(Steeltoe.Messaging.RabbitMQ.Listener.IMessageListenerContainer)
  parent: Steeltoe.Messaging.RabbitMQ.Listener.AbstractRabbitListenerEndpoint
  langs:
  - csharp
  - vb
  name: CreateMessageListener(IMessageListenerContainer)
  nameWithType: AbstractRabbitListenerEndpoint.CreateMessageListener(IMessageListenerContainer)
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractRabbitListenerEndpoint.CreateMessageListener(Steeltoe.Messaging.RabbitMQ.Listener.IMessageListenerContainer)
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Listener/AbstractRabbitListenerEndpoint.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: CreateMessageListener
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Listener/AbstractRabbitListenerEndpoint.cs
    startLine: 131
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Listener
  syntax:
    content: protected abstract IMessageListener CreateMessageListener(IMessageListenerContainer container)
    parameters:
    - id: container
      type: Steeltoe.Messaging.RabbitMQ.Listener.IMessageListenerContainer
    return:
      type: Steeltoe.Messaging.RabbitMQ.Listener.IMessageListener
    content.vb: Protected MustOverride Function CreateMessageListener(container As IMessageListenerContainer) As IMessageListener
  overload: Steeltoe.Messaging.RabbitMQ.Listener.AbstractRabbitListenerEndpoint.CreateMessageListener*
  modifiers.csharp:
  - protected
  - abstract
  modifiers.vb:
  - Protected
  - MustOverride
- uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractRabbitListenerEndpoint.GetEndpointDescription
  commentId: M:Steeltoe.Messaging.RabbitMQ.Listener.AbstractRabbitListenerEndpoint.GetEndpointDescription
  id: GetEndpointDescription
  parent: Steeltoe.Messaging.RabbitMQ.Listener.AbstractRabbitListenerEndpoint
  langs:
  - csharp
  - vb
  name: GetEndpointDescription()
  nameWithType: AbstractRabbitListenerEndpoint.GetEndpointDescription()
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractRabbitListenerEndpoint.GetEndpointDescription()
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Listener/AbstractRabbitListenerEndpoint.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: GetEndpointDescription
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Listener/AbstractRabbitListenerEndpoint.cs
    startLine: 133
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Listener
  syntax:
    content: protected virtual StringBuilder GetEndpointDescription()
    return:
      type: System.Text.StringBuilder
    content.vb: Protected Overridable Function GetEndpointDescription As StringBuilder
  overload: Steeltoe.Messaging.RabbitMQ.Listener.AbstractRabbitListenerEndpoint.GetEndpointDescription*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
references:
- uid: Steeltoe.Messaging.RabbitMQ.Listener
  commentId: N:Steeltoe.Messaging.RabbitMQ.Listener
  name: Steeltoe.Messaging.RabbitMQ.Listener
  nameWithType: Steeltoe.Messaging.RabbitMQ.Listener
  fullName: Steeltoe.Messaging.RabbitMQ.Listener
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Steeltoe.Messaging.RabbitMQ.Listener.IRabbitListenerEndpoint
  commentId: T:Steeltoe.Messaging.RabbitMQ.Listener.IRabbitListenerEndpoint
  parent: Steeltoe.Messaging.RabbitMQ.Listener
  name: IRabbitListenerEndpoint
  nameWithType: IRabbitListenerEndpoint
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.IRabbitListenerEndpoint
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Extensions.Logging.ILogger
  commentId: T:Microsoft.Extensions.Logging.ILogger
  parent: Microsoft.Extensions.Logging
  isExternal: true
  name: ILogger
  nameWithType: ILogger
  fullName: Microsoft.Extensions.Logging.ILogger
- uid: Microsoft.Extensions.Logging
  commentId: N:Microsoft.Extensions.Logging
  isExternal: true
  name: Microsoft.Extensions.Logging
  nameWithType: Microsoft.Extensions.Logging
  fullName: Microsoft.Extensions.Logging
- uid: Microsoft.Extensions.Logging.ILoggerFactory
  commentId: T:Microsoft.Extensions.Logging.ILoggerFactory
  parent: Microsoft.Extensions.Logging
  isExternal: true
  name: ILoggerFactory
  nameWithType: ILoggerFactory
  fullName: Microsoft.Extensions.Logging.ILoggerFactory
- uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractRabbitListenerEndpoint.#ctor*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Listener.AbstractRabbitListenerEndpoint.#ctor
  name: AbstractRabbitListenerEndpoint
  nameWithType: AbstractRabbitListenerEndpoint.AbstractRabbitListenerEndpoint
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractRabbitListenerEndpoint.AbstractRabbitListenerEndpoint
- uid: Steeltoe.Common.Contexts.IApplicationContext
  commentId: T:Steeltoe.Common.Contexts.IApplicationContext
  parent: Steeltoe.Common.Contexts
  name: IApplicationContext
  nameWithType: IApplicationContext
  fullName: Steeltoe.Common.Contexts.IApplicationContext
- uid: Steeltoe.Common.Contexts
  commentId: N:Steeltoe.Common.Contexts
  name: Steeltoe.Common.Contexts
  nameWithType: Steeltoe.Common.Contexts
  fullName: Steeltoe.Common.Contexts
- uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractRabbitListenerEndpoint.ApplicationContext*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Listener.AbstractRabbitListenerEndpoint.ApplicationContext
  name: ApplicationContext
  nameWithType: AbstractRabbitListenerEndpoint.ApplicationContext
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractRabbitListenerEndpoint.ApplicationContext
- uid: Steeltoe.Messaging.RabbitMQ.Listener.IRabbitListenerEndpoint.ApplicationContext
  commentId: P:Steeltoe.Messaging.RabbitMQ.Listener.IRabbitListenerEndpoint.ApplicationContext
  parent: Steeltoe.Messaging.RabbitMQ.Listener.IRabbitListenerEndpoint
  name: ApplicationContext
  nameWithType: IRabbitListenerEndpoint.ApplicationContext
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.IRabbitListenerEndpoint.ApplicationContext
- uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractRabbitListenerEndpoint.Id*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Listener.AbstractRabbitListenerEndpoint.Id
  name: Id
  nameWithType: AbstractRabbitListenerEndpoint.Id
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractRabbitListenerEndpoint.Id
- uid: Steeltoe.Messaging.RabbitMQ.Listener.IRabbitListenerEndpoint.Id
  commentId: P:Steeltoe.Messaging.RabbitMQ.Listener.IRabbitListenerEndpoint.Id
  parent: Steeltoe.Messaging.RabbitMQ.Listener.IRabbitListenerEndpoint
  name: Id
  nameWithType: IRabbitListenerEndpoint.Id
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.IRabbitListenerEndpoint.Id
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractRabbitListenerEndpoint.Queues*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Listener.AbstractRabbitListenerEndpoint.Queues
  name: Queues
  nameWithType: AbstractRabbitListenerEndpoint.Queues
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractRabbitListenerEndpoint.Queues
- uid: System.Collections.Generic.List{Steeltoe.Messaging.RabbitMQ.Config.IQueue}
  commentId: T:System.Collections.Generic.List{Steeltoe.Messaging.RabbitMQ.Config.IQueue}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<IQueue>
  nameWithType: List<IQueue>
  fullName: System.Collections.Generic.List<Steeltoe.Messaging.RabbitMQ.Config.IQueue>
  nameWithType.vb: List(Of IQueue)
  fullName.vb: System.Collections.Generic.List(Of Steeltoe.Messaging.RabbitMQ.Config.IQueue)
  name.vb: List(Of IQueue)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Steeltoe.Messaging.RabbitMQ.Config.IQueue
    name: IQueue
    nameWithType: IQueue
    fullName: Steeltoe.Messaging.RabbitMQ.Config.IQueue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Steeltoe.Messaging.RabbitMQ.Config.IQueue
    name: IQueue
    nameWithType: IQueue
    fullName: Steeltoe.Messaging.RabbitMQ.Config.IQueue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractRabbitListenerEndpoint.QueueNames*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Listener.AbstractRabbitListenerEndpoint.QueueNames
  name: QueueNames
  nameWithType: AbstractRabbitListenerEndpoint.QueueNames
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractRabbitListenerEndpoint.QueueNames
- uid: System.Collections.Generic.List{System.String}
  commentId: T:System.Collections.Generic.List{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<String>
  nameWithType: List<String>
  fullName: System.Collections.Generic.List<System.String>
  nameWithType.vb: List(Of String)
  fullName.vb: System.Collections.Generic.List(Of System.String)
  name.vb: List(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractRabbitListenerEndpoint.Exclusive*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Listener.AbstractRabbitListenerEndpoint.Exclusive
  name: Exclusive
  nameWithType: AbstractRabbitListenerEndpoint.Exclusive
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractRabbitListenerEndpoint.Exclusive
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractRabbitListenerEndpoint.Priority*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Listener.AbstractRabbitListenerEndpoint.Priority
  name: Priority
  nameWithType: AbstractRabbitListenerEndpoint.Priority
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractRabbitListenerEndpoint.Priority
- uid: System.Nullable{System.Int32}
  commentId: T:System.Nullable{System.Int32}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Int32>
  nameWithType: Nullable<Int32>
  fullName: System.Nullable<System.Int32>
  nameWithType.vb: Nullable(Of Int32)
  fullName.vb: System.Nullable(Of System.Int32)
  name.vb: Nullable(Of Int32)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractRabbitListenerEndpoint.Concurrency*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Listener.AbstractRabbitListenerEndpoint.Concurrency
  name: Concurrency
  nameWithType: AbstractRabbitListenerEndpoint.Concurrency
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractRabbitListenerEndpoint.Concurrency
- uid: Steeltoe.Messaging.RabbitMQ.Listener.IRabbitListenerEndpoint.Concurrency
  commentId: P:Steeltoe.Messaging.RabbitMQ.Listener.IRabbitListenerEndpoint.Concurrency
  parent: Steeltoe.Messaging.RabbitMQ.Listener.IRabbitListenerEndpoint
  name: Concurrency
  nameWithType: IRabbitListenerEndpoint.Concurrency
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.IRabbitListenerEndpoint.Concurrency
- uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractRabbitListenerEndpoint.Admin*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Listener.AbstractRabbitListenerEndpoint.Admin
  name: Admin
  nameWithType: AbstractRabbitListenerEndpoint.Admin
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractRabbitListenerEndpoint.Admin
- uid: Steeltoe.Messaging.RabbitMQ.Core.IRabbitAdmin
  commentId: T:Steeltoe.Messaging.RabbitMQ.Core.IRabbitAdmin
  parent: Steeltoe.Messaging.RabbitMQ.Core
  name: IRabbitAdmin
  nameWithType: IRabbitAdmin
  fullName: Steeltoe.Messaging.RabbitMQ.Core.IRabbitAdmin
- uid: Steeltoe.Messaging.RabbitMQ.Core
  commentId: N:Steeltoe.Messaging.RabbitMQ.Core
  name: Steeltoe.Messaging.RabbitMQ.Core
  nameWithType: Steeltoe.Messaging.RabbitMQ.Core
  fullName: Steeltoe.Messaging.RabbitMQ.Core
- uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractRabbitListenerEndpoint.AutoStartup*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Listener.AbstractRabbitListenerEndpoint.AutoStartup
  name: AutoStartup
  nameWithType: AbstractRabbitListenerEndpoint.AutoStartup
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractRabbitListenerEndpoint.AutoStartup
- uid: Steeltoe.Messaging.RabbitMQ.Listener.IRabbitListenerEndpoint.AutoStartup
  commentId: P:Steeltoe.Messaging.RabbitMQ.Listener.IRabbitListenerEndpoint.AutoStartup
  parent: Steeltoe.Messaging.RabbitMQ.Listener.IRabbitListenerEndpoint
  name: AutoStartup
  nameWithType: IRabbitListenerEndpoint.AutoStartup
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.IRabbitListenerEndpoint.AutoStartup
- uid: System.Nullable{System.Boolean}
  commentId: T:System.Nullable{System.Boolean}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Boolean>
  nameWithType: Nullable<Boolean>
  fullName: System.Nullable<System.Boolean>
  nameWithType.vb: Nullable(Of Boolean)
  fullName.vb: System.Nullable(Of System.Boolean)
  name.vb: Nullable(Of Boolean)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractRabbitListenerEndpoint.MessageConverter*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Listener.AbstractRabbitListenerEndpoint.MessageConverter
  name: MessageConverter
  nameWithType: AbstractRabbitListenerEndpoint.MessageConverter
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractRabbitListenerEndpoint.MessageConverter
- uid: Steeltoe.Messaging.RabbitMQ.Listener.IRabbitListenerEndpoint.MessageConverter
  commentId: P:Steeltoe.Messaging.RabbitMQ.Listener.IRabbitListenerEndpoint.MessageConverter
  parent: Steeltoe.Messaging.RabbitMQ.Listener.IRabbitListenerEndpoint
  name: MessageConverter
  nameWithType: IRabbitListenerEndpoint.MessageConverter
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.IRabbitListenerEndpoint.MessageConverter
- uid: Steeltoe.Messaging.Converter.ISmartMessageConverter
  commentId: T:Steeltoe.Messaging.Converter.ISmartMessageConverter
  parent: Steeltoe.Messaging.Converter
  name: ISmartMessageConverter
  nameWithType: ISmartMessageConverter
  fullName: Steeltoe.Messaging.Converter.ISmartMessageConverter
- uid: Steeltoe.Messaging.Converter
  commentId: N:Steeltoe.Messaging.Converter
  name: Steeltoe.Messaging.Converter
  nameWithType: Steeltoe.Messaging.Converter
  fullName: Steeltoe.Messaging.Converter
- uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractRabbitListenerEndpoint.BatchListener*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Listener.AbstractRabbitListenerEndpoint.BatchListener
  name: BatchListener
  nameWithType: AbstractRabbitListenerEndpoint.BatchListener
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractRabbitListenerEndpoint.BatchListener
- uid: Steeltoe.Messaging.RabbitMQ.Listener.IRabbitListenerEndpoint.BatchListener
  commentId: P:Steeltoe.Messaging.RabbitMQ.Listener.IRabbitListenerEndpoint.BatchListener
  parent: Steeltoe.Messaging.RabbitMQ.Listener.IRabbitListenerEndpoint
  name: BatchListener
  nameWithType: IRabbitListenerEndpoint.BatchListener
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.IRabbitListenerEndpoint.BatchListener
- uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractRabbitListenerEndpoint.BatchingStrategy*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Listener.AbstractRabbitListenerEndpoint.BatchingStrategy
  name: BatchingStrategy
  nameWithType: AbstractRabbitListenerEndpoint.BatchingStrategy
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractRabbitListenerEndpoint.BatchingStrategy
- uid: Steeltoe.Messaging.RabbitMQ.Listener.IRabbitListenerEndpoint.BatchingStrategy
  commentId: P:Steeltoe.Messaging.RabbitMQ.Listener.IRabbitListenerEndpoint.BatchingStrategy
  parent: Steeltoe.Messaging.RabbitMQ.Listener.IRabbitListenerEndpoint
  name: BatchingStrategy
  nameWithType: IRabbitListenerEndpoint.BatchingStrategy
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.IRabbitListenerEndpoint.BatchingStrategy
- uid: Steeltoe.Messaging.RabbitMQ.Batch.IBatchingStrategy
  commentId: T:Steeltoe.Messaging.RabbitMQ.Batch.IBatchingStrategy
  parent: Steeltoe.Messaging.RabbitMQ.Batch
  name: IBatchingStrategy
  nameWithType: IBatchingStrategy
  fullName: Steeltoe.Messaging.RabbitMQ.Batch.IBatchingStrategy
- uid: Steeltoe.Messaging.RabbitMQ.Batch
  commentId: N:Steeltoe.Messaging.RabbitMQ.Batch
  name: Steeltoe.Messaging.RabbitMQ.Batch
  nameWithType: Steeltoe.Messaging.RabbitMQ.Batch
  fullName: Steeltoe.Messaging.RabbitMQ.Batch
- uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractRabbitListenerEndpoint.AckMode*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Listener.AbstractRabbitListenerEndpoint.AckMode
  name: AckMode
  nameWithType: AbstractRabbitListenerEndpoint.AckMode
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractRabbitListenerEndpoint.AckMode
- uid: Steeltoe.Messaging.RabbitMQ.Listener.IRabbitListenerEndpoint.AckMode
  commentId: P:Steeltoe.Messaging.RabbitMQ.Listener.IRabbitListenerEndpoint.AckMode
  parent: Steeltoe.Messaging.RabbitMQ.Listener.IRabbitListenerEndpoint
  name: AckMode
  nameWithType: IRabbitListenerEndpoint.AckMode
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.IRabbitListenerEndpoint.AckMode
- uid: System.Nullable{Steeltoe.Messaging.RabbitMQ.Core.AcknowledgeMode}
  commentId: T:System.Nullable{Steeltoe.Messaging.RabbitMQ.Core.AcknowledgeMode}
  parent: System
  definition: System.Nullable`1
  name: Nullable<AcknowledgeMode>
  nameWithType: Nullable<AcknowledgeMode>
  fullName: System.Nullable<Steeltoe.Messaging.RabbitMQ.Core.AcknowledgeMode>
  nameWithType.vb: Nullable(Of AcknowledgeMode)
  fullName.vb: System.Nullable(Of Steeltoe.Messaging.RabbitMQ.Core.AcknowledgeMode)
  name.vb: Nullable(Of AcknowledgeMode)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Steeltoe.Messaging.RabbitMQ.Core.AcknowledgeMode
    name: AcknowledgeMode
    nameWithType: AcknowledgeMode
    fullName: Steeltoe.Messaging.RabbitMQ.Core.AcknowledgeMode
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Steeltoe.Messaging.RabbitMQ.Core.AcknowledgeMode
    name: AcknowledgeMode
    nameWithType: AcknowledgeMode
    fullName: Steeltoe.Messaging.RabbitMQ.Core.AcknowledgeMode
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractRabbitListenerEndpoint.ReplyPostProcessor*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Listener.AbstractRabbitListenerEndpoint.ReplyPostProcessor
  name: ReplyPostProcessor
  nameWithType: AbstractRabbitListenerEndpoint.ReplyPostProcessor
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractRabbitListenerEndpoint.ReplyPostProcessor
- uid: Steeltoe.Messaging.RabbitMQ.Listener.IRabbitListenerEndpoint.ReplyPostProcessor
  commentId: P:Steeltoe.Messaging.RabbitMQ.Listener.IRabbitListenerEndpoint.ReplyPostProcessor
  parent: Steeltoe.Messaging.RabbitMQ.Listener.IRabbitListenerEndpoint
  name: ReplyPostProcessor
  nameWithType: IRabbitListenerEndpoint.ReplyPostProcessor
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.IRabbitListenerEndpoint.ReplyPostProcessor
- uid: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.IReplyPostProcessor
  commentId: T:Steeltoe.Messaging.RabbitMQ.Listener.Adapters.IReplyPostProcessor
  parent: Steeltoe.Messaging.RabbitMQ.Listener.Adapters
  name: IReplyPostProcessor
  nameWithType: IReplyPostProcessor
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.IReplyPostProcessor
- uid: Steeltoe.Messaging.RabbitMQ.Listener.Adapters
  commentId: N:Steeltoe.Messaging.RabbitMQ.Listener.Adapters
  name: Steeltoe.Messaging.RabbitMQ.Listener.Adapters
  nameWithType: Steeltoe.Messaging.RabbitMQ.Listener.Adapters
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.Adapters
- uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractRabbitListenerEndpoint.Group*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Listener.AbstractRabbitListenerEndpoint.Group
  name: Group
  nameWithType: AbstractRabbitListenerEndpoint.Group
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractRabbitListenerEndpoint.Group
- uid: Steeltoe.Messaging.RabbitMQ.Listener.IRabbitListenerEndpoint.Group
  commentId: P:Steeltoe.Messaging.RabbitMQ.Listener.IRabbitListenerEndpoint.Group
  parent: Steeltoe.Messaging.RabbitMQ.Listener.IRabbitListenerEndpoint
  name: Group
  nameWithType: IRabbitListenerEndpoint.Group
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.IRabbitListenerEndpoint.Group
- uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractRabbitListenerEndpoint.SetQueues*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Listener.AbstractRabbitListenerEndpoint.SetQueues
  name: SetQueues
  nameWithType: AbstractRabbitListenerEndpoint.SetQueues
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractRabbitListenerEndpoint.SetQueues
- uid: Steeltoe.Messaging.RabbitMQ.Config.IQueue[]
  isExternal: true
  name: IQueue[]
  nameWithType: IQueue[]
  fullName: Steeltoe.Messaging.RabbitMQ.Config.IQueue[]
  nameWithType.vb: IQueue()
  fullName.vb: Steeltoe.Messaging.RabbitMQ.Config.IQueue()
  name.vb: IQueue()
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Config.IQueue
    name: IQueue
    nameWithType: IQueue
    fullName: Steeltoe.Messaging.RabbitMQ.Config.IQueue
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Config.IQueue
    name: IQueue
    nameWithType: IQueue
    fullName: Steeltoe.Messaging.RabbitMQ.Config.IQueue
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractRabbitListenerEndpoint.SetQueueNames*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Listener.AbstractRabbitListenerEndpoint.SetQueueNames
  name: SetQueueNames
  nameWithType: AbstractRabbitListenerEndpoint.SetQueueNames
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractRabbitListenerEndpoint.SetQueueNames
- uid: System.String[]
  isExternal: true
  name: String[]
  nameWithType: String[]
  fullName: System.String[]
  nameWithType.vb: String()
  fullName.vb: System.String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractRabbitListenerEndpoint.SetupListenerContainer*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Listener.AbstractRabbitListenerEndpoint.SetupListenerContainer
  name: SetupListenerContainer
  nameWithType: AbstractRabbitListenerEndpoint.SetupListenerContainer
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractRabbitListenerEndpoint.SetupListenerContainer
- uid: Steeltoe.Messaging.RabbitMQ.Listener.IRabbitListenerEndpoint.SetupListenerContainer(Steeltoe.Messaging.RabbitMQ.Listener.IMessageListenerContainer)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Listener.IRabbitListenerEndpoint.SetupListenerContainer(Steeltoe.Messaging.RabbitMQ.Listener.IMessageListenerContainer)
  parent: Steeltoe.Messaging.RabbitMQ.Listener.IRabbitListenerEndpoint
  name: SetupListenerContainer(IMessageListenerContainer)
  nameWithType: IRabbitListenerEndpoint.SetupListenerContainer(IMessageListenerContainer)
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.IRabbitListenerEndpoint.SetupListenerContainer(Steeltoe.Messaging.RabbitMQ.Listener.IMessageListenerContainer)
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Listener.IRabbitListenerEndpoint.SetupListenerContainer(Steeltoe.Messaging.RabbitMQ.Listener.IMessageListenerContainer)
    name: SetupListenerContainer
    nameWithType: IRabbitListenerEndpoint.SetupListenerContainer
    fullName: Steeltoe.Messaging.RabbitMQ.Listener.IRabbitListenerEndpoint.SetupListenerContainer
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.RabbitMQ.Listener.IMessageListenerContainer
    name: IMessageListenerContainer
    nameWithType: IMessageListenerContainer
    fullName: Steeltoe.Messaging.RabbitMQ.Listener.IMessageListenerContainer
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Listener.IRabbitListenerEndpoint.SetupListenerContainer(Steeltoe.Messaging.RabbitMQ.Listener.IMessageListenerContainer)
    name: SetupListenerContainer
    nameWithType: IRabbitListenerEndpoint.SetupListenerContainer
    fullName: Steeltoe.Messaging.RabbitMQ.Listener.IRabbitListenerEndpoint.SetupListenerContainer
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.RabbitMQ.Listener.IMessageListenerContainer
    name: IMessageListenerContainer
    nameWithType: IMessageListenerContainer
    fullName: Steeltoe.Messaging.RabbitMQ.Listener.IMessageListenerContainer
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Listener.IMessageListenerContainer
  commentId: T:Steeltoe.Messaging.RabbitMQ.Listener.IMessageListenerContainer
  parent: Steeltoe.Messaging.RabbitMQ.Listener
  name: IMessageListenerContainer
  nameWithType: IMessageListenerContainer
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.IMessageListenerContainer
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractRabbitListenerEndpoint.ToString*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Listener.AbstractRabbitListenerEndpoint.ToString
  name: ToString
  nameWithType: AbstractRabbitListenerEndpoint.ToString
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractRabbitListenerEndpoint.ToString
- uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractRabbitListenerEndpoint.Resolver*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Listener.AbstractRabbitListenerEndpoint.Resolver
  name: Resolver
  nameWithType: AbstractRabbitListenerEndpoint.Resolver
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractRabbitListenerEndpoint.Resolver
- uid: Steeltoe.Messaging.RabbitMQ.Expressions.IServiceExpressionResolver
  commentId: T:Steeltoe.Messaging.RabbitMQ.Expressions.IServiceExpressionResolver
  parent: Steeltoe.Messaging.RabbitMQ.Expressions
  name: IServiceExpressionResolver
  nameWithType: IServiceExpressionResolver
  fullName: Steeltoe.Messaging.RabbitMQ.Expressions.IServiceExpressionResolver
- uid: Steeltoe.Messaging.RabbitMQ.Expressions
  commentId: N:Steeltoe.Messaging.RabbitMQ.Expressions
  name: Steeltoe.Messaging.RabbitMQ.Expressions
  nameWithType: Steeltoe.Messaging.RabbitMQ.Expressions
  fullName: Steeltoe.Messaging.RabbitMQ.Expressions
- uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractRabbitListenerEndpoint.ServiceResolver*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Listener.AbstractRabbitListenerEndpoint.ServiceResolver
  name: ServiceResolver
  nameWithType: AbstractRabbitListenerEndpoint.ServiceResolver
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractRabbitListenerEndpoint.ServiceResolver
- uid: Steeltoe.Messaging.RabbitMQ.Expressions.IServiceResolver
  commentId: T:Steeltoe.Messaging.RabbitMQ.Expressions.IServiceResolver
  parent: Steeltoe.Messaging.RabbitMQ.Expressions
  name: IServiceResolver
  nameWithType: IServiceResolver
  fullName: Steeltoe.Messaging.RabbitMQ.Expressions.IServiceResolver
- uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractRabbitListenerEndpoint.ExpressionContext*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Listener.AbstractRabbitListenerEndpoint.ExpressionContext
  name: ExpressionContext
  nameWithType: AbstractRabbitListenerEndpoint.ExpressionContext
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractRabbitListenerEndpoint.ExpressionContext
- uid: Steeltoe.Messaging.RabbitMQ.Expressions.IServiceExpressionContext
  commentId: T:Steeltoe.Messaging.RabbitMQ.Expressions.IServiceExpressionContext
  parent: Steeltoe.Messaging.RabbitMQ.Expressions
  name: IServiceExpressionContext
  nameWithType: IServiceExpressionContext
  fullName: Steeltoe.Messaging.RabbitMQ.Expressions.IServiceExpressionContext
- uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractRabbitListenerEndpoint.CreateMessageListener*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Listener.AbstractRabbitListenerEndpoint.CreateMessageListener
  name: CreateMessageListener
  nameWithType: AbstractRabbitListenerEndpoint.CreateMessageListener
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractRabbitListenerEndpoint.CreateMessageListener
- uid: Steeltoe.Messaging.RabbitMQ.Listener.IMessageListener
  commentId: T:Steeltoe.Messaging.RabbitMQ.Listener.IMessageListener
  parent: Steeltoe.Messaging.RabbitMQ.Listener
  name: IMessageListener
  nameWithType: IMessageListener
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.IMessageListener
- uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractRabbitListenerEndpoint.GetEndpointDescription*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Listener.AbstractRabbitListenerEndpoint.GetEndpointDescription
  name: GetEndpointDescription
  nameWithType: AbstractRabbitListenerEndpoint.GetEndpointDescription
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractRabbitListenerEndpoint.GetEndpointDescription
- uid: System.Text.StringBuilder
  commentId: T:System.Text.StringBuilder
  parent: System.Text
  isExternal: true
  name: StringBuilder
  nameWithType: StringBuilder
  fullName: System.Text.StringBuilder
- uid: System.Text
  commentId: N:System.Text
  isExternal: true
  name: System.Text
  nameWithType: System.Text
  fullName: System.Text
