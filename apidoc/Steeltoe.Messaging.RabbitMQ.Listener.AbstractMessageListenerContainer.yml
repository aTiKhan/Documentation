### YamlMime:ManagedReference
items:
- uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer
  commentId: T:Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer
  id: AbstractMessageListenerContainer
  parent: Steeltoe.Messaging.RabbitMQ.Listener
  children:
  - Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.#ctor(Steeltoe.Common.Contexts.IApplicationContext,Steeltoe.Messaging.RabbitMQ.Connection.IConnectionFactory,System.String,Microsoft.Extensions.Logging.ILoggerFactory)
  - Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer._consumersMonitor
  - Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer._lifecycleMonitor
  - Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer._lock
  - Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer._logger
  - Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer._loggerFactory
  - Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer._recoveryInterval
  - Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.AcknowledgeMode
  - Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.ActualInvokeListener(RabbitMQ.Client.IModel,Steeltoe.Messaging.IMessage)
  - Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.ActualInvokeListener(RabbitMQ.Client.IModel,System.Collections.Generic.List{Steeltoe.Messaging.IMessage})
  - Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.AddAfterReceivePostProcessors(Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor[])
  - Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.AddQueueNames(System.String[])
  - Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.AddQueues(Steeltoe.Messaging.RabbitMQ.Config.IQueue[])
  - Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.AfterReceivePostProcessors
  - Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.AlwaysRequeueWithTxManagerRollback
  - Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.ApplicationContext
  - Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.AutoDeclare
  - Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.BatchingStrategy
  - Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.CauseChainHasImmediateAcknowledgeRabbitException(System.Exception)
  - Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.CheckMessageListener(System.Object)
  - Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.CheckMismatchedQueues
  - Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.ConfigureAdminIfNeeded
  - Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.ConnectionFactory
  - Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.ConsumerArguments
  - Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.ConsumerTagStrategy
  - Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.ConvertRabbitAccessException(System.Exception)
  - Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.CreateConnection
  - Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.DEFAULT_DEBATCHING_ENABLED
  - Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.DEFAULT_FAILED_DECLARATION_RETRY_INTERVAL
  - Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.DEFAULT_PREFETCH_COUNT
  - Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.DEFAULT_RECOVERY_INTERVAL
  - Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.DEFAULT_SHUTDOWN_TIMEOUT
  - Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.DefaultRequeueRejected
  - Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.Dispose
  - Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.DoInitialize
  - Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.DoInvokeListener(Steeltoe.Messaging.RabbitMQ.Listener.IChannelAwareMessageListener,RabbitMQ.Client.IModel,Steeltoe.Messaging.IMessage)
  - Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.DoInvokeListener(Steeltoe.Messaging.RabbitMQ.Listener.IChannelAwareMessageListener,RabbitMQ.Client.IModel,System.Collections.Generic.List{Steeltoe.Messaging.IMessage})
  - Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.DoInvokeListener(Steeltoe.Messaging.RabbitMQ.Listener.IMessageListener,Steeltoe.Messaging.IMessage)
  - Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.DoInvokeListener(Steeltoe.Messaging.RabbitMQ.Listener.IMessageListener,System.Collections.Generic.List{Steeltoe.Messaging.IMessage})
  - Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.DoShutdown
  - Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.DoStart
  - Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.DoStop
  - Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.ErrorHandler
  - Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.Exclusive
  - Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.ExclusiveConsumerExceptionLogger
  - Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.ExecuteListener(RabbitMQ.Client.IModel,Steeltoe.Messaging.IMessage)
  - Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.ExposeListenerChannel
  - Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.FailedDeclarationRetryInterval
  - Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.ForceCloseChannel
  - Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.GetConnectionFactory
  - Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.GetQueueNames
  - Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.GetQueueNamesAsSet
  - Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.GetQueueNamesToQueues
  - Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.GetRoutingConnectionFactory
  - Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.GetRoutingLookupKey
  - Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.GetTransactionalResourceHolder
  - Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.HandleChannelAwareTransaction(RabbitMQ.Client.IModel,RabbitMQ.Client.IModel@,Steeltoe.Messaging.RabbitMQ.Connection.RabbitResourceHolder@)
  - Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.HandleListenerException(System.Exception)
  - Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.IdleEventInterval
  - Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.Initialize
  - Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.Initialized
  - Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.InvokeErrorHandler(System.Exception)
  - Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.IsActive
  - Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.IsAutoStartup
  - Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.IsChannelLocallyTransacted
  - Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.IsChannelTransacted
  - Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.IsDeBatchingEnabled
  - Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.IsLazyLoad
  - Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.IsRunning
  - Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.LastReceive
  - Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.LazyLoad
  - Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.ListenerId
  - Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.LookupKeyQualifier
  - Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.MessageHeadersConverter
  - Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.MessageListener
  - Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.MismatchedQueuesFatal
  - Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.MissingQueuesFatal
  - Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.NoLocal
  - Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.Phase
  - Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.PossibleAuthenticationFailureFatal
  - Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.PrefetchCount
  - Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.PrepareHolderForRollback(Steeltoe.Messaging.RabbitMQ.Connection.RabbitResourceHolder,System.Exception)
  - Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.RabbitAdmin
  - Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.RecoveryBackOff
  - Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.RecoveryInterval
  - Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.RedeclareElementsIfNecessary
  - Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.RemoveAfterReceivePostProcessor(Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor)
  - Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.RemoveQueueNames(System.String[])
  - Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.RemoveQueues(Steeltoe.Messaging.RabbitMQ.Config.IQueue[])
  - Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.ServiceName
  - Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.SetAfterReceivePostProcessors(Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor[])
  - Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.SetQueueNames(System.String[])
  - Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.SetQueues(Steeltoe.Messaging.RabbitMQ.Config.IQueue[])
  - Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.SetupMessageListener(Steeltoe.Messaging.RabbitMQ.Listener.IMessageListener)
  - Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.Shutdown
  - Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.ShutdownTimeout
  - Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.Start
  - Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.StatefulRetryFatalWithNullMessageId
  - Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.Stop
  - Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.Stop(System.Action)
  - Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.TransactionAttribute
  - Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.TransactionManager
  - Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.UpdateLastReceive
  - Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.ValidateConfiguration
  - Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.WrapToListenerExecutionFailedExceptionIfNeeded(System.Exception,Steeltoe.Messaging.IMessage)
  - Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.WrapToListenerExecutionFailedExceptionIfNeeded(System.Exception,System.Collections.Generic.List{Steeltoe.Messaging.IMessage})
  langs:
  - csharp
  - vb
  name: AbstractMessageListenerContainer
  nameWithType: AbstractMessageListenerContainer
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer
  type: Class
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Listener/AbstractMessageListenerContainer.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: AbstractMessageListenerContainer
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Listener/AbstractMessageListenerContainer.cs
    startLine: 29
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Listener
  syntax:
    content: 'public abstract class AbstractMessageListenerContainer : IMessageListenerContainer, ISmartLifecycle, ILifecycle, IPhased, IDisposable, IServiceNameAware'
    content.vb: >-
      Public MustInherit Class AbstractMessageListenerContainer

          Implements IMessageListenerContainer, ISmartLifecycle, ILifecycle, IPhased, IDisposable, IServiceNameAware
  inheritance:
  - System.Object
  derivedClasses:
  - Steeltoe.Messaging.RabbitMQ.Listener.DirectMessageListenerContainer
  implements:
  - Steeltoe.Messaging.RabbitMQ.Listener.IMessageListenerContainer
  - Steeltoe.Common.Lifecycle.ISmartLifecycle
  - Steeltoe.Common.Lifecycle.ILifecycle
  - Steeltoe.Common.Lifecycle.IPhased
  - System.IDisposable
  - Steeltoe.Common.Services.IServiceNameAware
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.DEFAULT_FAILED_DECLARATION_RETRY_INTERVAL
  commentId: F:Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.DEFAULT_FAILED_DECLARATION_RETRY_INTERVAL
  id: DEFAULT_FAILED_DECLARATION_RETRY_INTERVAL
  parent: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer
  langs:
  - csharp
  - vb
  name: DEFAULT_FAILED_DECLARATION_RETRY_INTERVAL
  nameWithType: AbstractMessageListenerContainer.DEFAULT_FAILED_DECLARATION_RETRY_INTERVAL
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.DEFAULT_FAILED_DECLARATION_RETRY_INTERVAL
  type: Field
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Listener/AbstractMessageListenerContainer.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: DEFAULT_FAILED_DECLARATION_RETRY_INTERVAL
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Listener/AbstractMessageListenerContainer.cs
    startLine: 32
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Listener
  syntax:
    content: public const int DEFAULT_FAILED_DECLARATION_RETRY_INTERVAL = 5000
    return:
      type: System.Int32
    content.vb: Public Const DEFAULT_FAILED_DECLARATION_RETRY_INTERVAL As Integer = 5000
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.DEFAULT_SHUTDOWN_TIMEOUT
  commentId: F:Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.DEFAULT_SHUTDOWN_TIMEOUT
  id: DEFAULT_SHUTDOWN_TIMEOUT
  parent: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer
  langs:
  - csharp
  - vb
  name: DEFAULT_SHUTDOWN_TIMEOUT
  nameWithType: AbstractMessageListenerContainer.DEFAULT_SHUTDOWN_TIMEOUT
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.DEFAULT_SHUTDOWN_TIMEOUT
  type: Field
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Listener/AbstractMessageListenerContainer.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: DEFAULT_SHUTDOWN_TIMEOUT
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Listener/AbstractMessageListenerContainer.cs
    startLine: 33
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Listener
  syntax:
    content: public const long DEFAULT_SHUTDOWN_TIMEOUT = 5000L
    return:
      type: System.Int64
    content.vb: Public Const DEFAULT_SHUTDOWN_TIMEOUT As Long = 5000L
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.DEFAULT_RECOVERY_INTERVAL
  commentId: F:Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.DEFAULT_RECOVERY_INTERVAL
  id: DEFAULT_RECOVERY_INTERVAL
  parent: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer
  langs:
  - csharp
  - vb
  name: DEFAULT_RECOVERY_INTERVAL
  nameWithType: AbstractMessageListenerContainer.DEFAULT_RECOVERY_INTERVAL
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.DEFAULT_RECOVERY_INTERVAL
  type: Field
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Listener/AbstractMessageListenerContainer.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: DEFAULT_RECOVERY_INTERVAL
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Listener/AbstractMessageListenerContainer.cs
    startLine: 34
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Listener
  syntax:
    content: public const int DEFAULT_RECOVERY_INTERVAL = 5000
    return:
      type: System.Int32
    content.vb: Public Const DEFAULT_RECOVERY_INTERVAL As Integer = 5000
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.DEFAULT_DEBATCHING_ENABLED
  commentId: F:Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.DEFAULT_DEBATCHING_ENABLED
  id: DEFAULT_DEBATCHING_ENABLED
  parent: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer
  langs:
  - csharp
  - vb
  name: DEFAULT_DEBATCHING_ENABLED
  nameWithType: AbstractMessageListenerContainer.DEFAULT_DEBATCHING_ENABLED
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.DEFAULT_DEBATCHING_ENABLED
  type: Field
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Listener/AbstractMessageListenerContainer.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: DEFAULT_DEBATCHING_ENABLED
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Listener/AbstractMessageListenerContainer.cs
    startLine: 35
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Listener
  syntax:
    content: public const bool DEFAULT_DEBATCHING_ENABLED = true
    return:
      type: System.Boolean
    content.vb: Public Const DEFAULT_DEBATCHING_ENABLED As Boolean = True
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.DEFAULT_PREFETCH_COUNT
  commentId: F:Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.DEFAULT_PREFETCH_COUNT
  id: DEFAULT_PREFETCH_COUNT
  parent: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer
  langs:
  - csharp
  - vb
  name: DEFAULT_PREFETCH_COUNT
  nameWithType: AbstractMessageListenerContainer.DEFAULT_PREFETCH_COUNT
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.DEFAULT_PREFETCH_COUNT
  type: Field
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Listener/AbstractMessageListenerContainer.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: DEFAULT_PREFETCH_COUNT
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Listener/AbstractMessageListenerContainer.cs
    startLine: 36
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Listener
  syntax:
    content: public const int DEFAULT_PREFETCH_COUNT = 250
    return:
      type: System.Int32
    content.vb: Public Const DEFAULT_PREFETCH_COUNT As Integer = 250
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer._consumersMonitor
  commentId: F:Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer._consumersMonitor
  id: _consumersMonitor
  parent: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer
  langs:
  - csharp
  - vb
  name: _consumersMonitor
  nameWithType: AbstractMessageListenerContainer._consumersMonitor
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer._consumersMonitor
  type: Field
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Listener/AbstractMessageListenerContainer.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: _consumersMonitor
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Listener/AbstractMessageListenerContainer.cs
    startLine: 38
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Listener
  syntax:
    content: protected readonly object _consumersMonitor
    return:
      type: System.Object
    content.vb: Protected ReadOnly _consumersMonitor As Object
  modifiers.csharp:
  - protected
  - readonly
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer._lock
  commentId: F:Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer._lock
  id: _lock
  parent: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer
  langs:
  - csharp
  - vb
  name: _lock
  nameWithType: AbstractMessageListenerContainer._lock
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer._lock
  type: Field
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Listener/AbstractMessageListenerContainer.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: _lock
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Listener/AbstractMessageListenerContainer.cs
    startLine: 39
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Listener
  syntax:
    content: protected readonly object _lock
    return:
      type: System.Object
    content.vb: Protected ReadOnly _lock As Object
  modifiers.csharp:
  - protected
  - readonly
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer._lifecycleMonitor
  commentId: F:Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer._lifecycleMonitor
  id: _lifecycleMonitor
  parent: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer
  langs:
  - csharp
  - vb
  name: _lifecycleMonitor
  nameWithType: AbstractMessageListenerContainer._lifecycleMonitor
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer._lifecycleMonitor
  type: Field
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Listener/AbstractMessageListenerContainer.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: _lifecycleMonitor
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Listener/AbstractMessageListenerContainer.cs
    startLine: 40
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Listener
  syntax:
    content: protected readonly object _lifecycleMonitor
    return:
      type: System.Object
    content.vb: Protected ReadOnly _lifecycleMonitor As Object
  modifiers.csharp:
  - protected
  - readonly
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer._logger
  commentId: F:Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer._logger
  id: _logger
  parent: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer
  langs:
  - csharp
  - vb
  name: _logger
  nameWithType: AbstractMessageListenerContainer._logger
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer._logger
  type: Field
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Listener/AbstractMessageListenerContainer.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: _logger
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Listener/AbstractMessageListenerContainer.cs
    startLine: 41
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Listener
  syntax:
    content: protected readonly ILogger _logger
    return:
      type: Microsoft.Extensions.Logging.ILogger
    content.vb: Protected ReadOnly _logger As ILogger
  modifiers.csharp:
  - protected
  - readonly
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer._loggerFactory
  commentId: F:Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer._loggerFactory
  id: _loggerFactory
  parent: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer
  langs:
  - csharp
  - vb
  name: _loggerFactory
  nameWithType: AbstractMessageListenerContainer._loggerFactory
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer._loggerFactory
  type: Field
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Listener/AbstractMessageListenerContainer.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: _loggerFactory
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Listener/AbstractMessageListenerContainer.cs
    startLine: 42
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Listener
  syntax:
    content: protected readonly ILoggerFactory _loggerFactory
    return:
      type: Microsoft.Extensions.Logging.ILoggerFactory
    content.vb: Protected ReadOnly _loggerFactory As ILoggerFactory
  modifiers.csharp:
  - protected
  - readonly
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer._recoveryInterval
  commentId: F:Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer._recoveryInterval
  id: _recoveryInterval
  parent: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer
  langs:
  - csharp
  - vb
  name: _recoveryInterval
  nameWithType: AbstractMessageListenerContainer._recoveryInterval
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer._recoveryInterval
  type: Field
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Listener/AbstractMessageListenerContainer.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: _recoveryInterval
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Listener/AbstractMessageListenerContainer.cs
    startLine: 44
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Listener
  syntax:
    content: protected int _recoveryInterval
    return:
      type: System.Int32
    content.vb: Protected _recoveryInterval As Integer
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.#ctor(Steeltoe.Common.Contexts.IApplicationContext,Steeltoe.Messaging.RabbitMQ.Connection.IConnectionFactory,System.String,Microsoft.Extensions.Logging.ILoggerFactory)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.#ctor(Steeltoe.Common.Contexts.IApplicationContext,Steeltoe.Messaging.RabbitMQ.Connection.IConnectionFactory,System.String,Microsoft.Extensions.Logging.ILoggerFactory)
  id: '#ctor(Steeltoe.Common.Contexts.IApplicationContext,Steeltoe.Messaging.RabbitMQ.Connection.IConnectionFactory,System.String,Microsoft.Extensions.Logging.ILoggerFactory)'
  parent: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer
  langs:
  - csharp
  - vb
  name: AbstractMessageListenerContainer(IApplicationContext, IConnectionFactory, String, ILoggerFactory)
  nameWithType: AbstractMessageListenerContainer.AbstractMessageListenerContainer(IApplicationContext, IConnectionFactory, String, ILoggerFactory)
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.AbstractMessageListenerContainer(Steeltoe.Common.Contexts.IApplicationContext, Steeltoe.Messaging.RabbitMQ.Connection.IConnectionFactory, System.String, Microsoft.Extensions.Logging.ILoggerFactory)
  type: Constructor
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Listener/AbstractMessageListenerContainer.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: .ctor
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Listener/AbstractMessageListenerContainer.cs
    startLine: 50
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Listener
  syntax:
    content: protected AbstractMessageListenerContainer(IApplicationContext applicationContext, IConnectionFactory connectionFactory, string name = null, ILoggerFactory loggerFactory = null)
    parameters:
    - id: applicationContext
      type: Steeltoe.Common.Contexts.IApplicationContext
    - id: connectionFactory
      type: Steeltoe.Messaging.RabbitMQ.Connection.IConnectionFactory
    - id: name
      type: System.String
    - id: loggerFactory
      type: Microsoft.Extensions.Logging.ILoggerFactory
    content.vb: Protected Sub New(applicationContext As IApplicationContext, connectionFactory As IConnectionFactory, name As String = Nothing, loggerFactory As ILoggerFactory = Nothing)
  overload: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.#ctor*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.ConnectionFactory
  commentId: P:Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.ConnectionFactory
  id: ConnectionFactory
  parent: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer
  langs:
  - csharp
  - vb
  name: ConnectionFactory
  nameWithType: AbstractMessageListenerContainer.ConnectionFactory
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.ConnectionFactory
  type: Property
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Listener/AbstractMessageListenerContainer.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: ConnectionFactory
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Listener/AbstractMessageListenerContainer.cs
    startLine: 64
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Listener
  syntax:
    content: public virtual IConnectionFactory ConnectionFactory { get; set; }
    parameters: []
    return:
      type: Steeltoe.Messaging.RabbitMQ.Connection.IConnectionFactory
    content.vb: Public Overridable Property ConnectionFactory As IConnectionFactory
  overload: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.ConnectionFactory*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.IsChannelTransacted
  commentId: P:Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.IsChannelTransacted
  id: IsChannelTransacted
  parent: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer
  langs:
  - csharp
  - vb
  name: IsChannelTransacted
  nameWithType: AbstractMessageListenerContainer.IsChannelTransacted
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.IsChannelTransacted
  type: Property
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Listener/AbstractMessageListenerContainer.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: IsChannelTransacted
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Listener/AbstractMessageListenerContainer.cs
    startLine: 82
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Listener
  syntax:
    content: public virtual bool IsChannelTransacted { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Overridable Property IsChannelTransacted As Boolean
  overload: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.IsChannelTransacted*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.ApplicationContext
  commentId: P:Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.ApplicationContext
  id: ApplicationContext
  parent: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer
  langs:
  - csharp
  - vb
  name: ApplicationContext
  nameWithType: AbstractMessageListenerContainer.ApplicationContext
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.ApplicationContext
  type: Property
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Listener/AbstractMessageListenerContainer.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: ApplicationContext
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Listener/AbstractMessageListenerContainer.cs
    startLine: 84
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Listener
  syntax:
    content: public IApplicationContext ApplicationContext { get; set; }
    parameters: []
    return:
      type: Steeltoe.Common.Contexts.IApplicationContext
    content.vb: Public Property ApplicationContext As IApplicationContext
  overload: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.ApplicationContext*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.AcknowledgeMode
  commentId: P:Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.AcknowledgeMode
  id: AcknowledgeMode
  parent: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer
  langs:
  - csharp
  - vb
  name: AcknowledgeMode
  nameWithType: AbstractMessageListenerContainer.AcknowledgeMode
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.AcknowledgeMode
  type: Property
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Listener/AbstractMessageListenerContainer.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: AcknowledgeMode
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Listener/AbstractMessageListenerContainer.cs
    startLine: 86
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Listener
  syntax:
    content: public virtual AcknowledgeMode AcknowledgeMode { get; set; }
    parameters: []
    return:
      type: Steeltoe.Messaging.RabbitMQ.Core.AcknowledgeMode
    content.vb: Public Overridable Property AcknowledgeMode As AcknowledgeMode
  overload: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.AcknowledgeMode*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.ServiceName
  commentId: P:Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.ServiceName
  id: ServiceName
  parent: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer
  langs:
  - csharp
  - vb
  name: ServiceName
  nameWithType: AbstractMessageListenerContainer.ServiceName
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.ServiceName
  type: Property
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Listener/AbstractMessageListenerContainer.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: ServiceName
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Listener/AbstractMessageListenerContainer.cs
    startLine: 88
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Listener
  syntax:
    content: public virtual string ServiceName { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Overridable Property ServiceName As String
  overload: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.ServiceName*
  implements:
  - Steeltoe.Common.Services.IServiceNameAware.ServiceName
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.ExposeListenerChannel
  commentId: P:Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.ExposeListenerChannel
  id: ExposeListenerChannel
  parent: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer
  langs:
  - csharp
  - vb
  name: ExposeListenerChannel
  nameWithType: AbstractMessageListenerContainer.ExposeListenerChannel
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.ExposeListenerChannel
  type: Property
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Listener/AbstractMessageListenerContainer.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: ExposeListenerChannel
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Listener/AbstractMessageListenerContainer.cs
    startLine: 90
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Listener
  syntax:
    content: public virtual bool ExposeListenerChannel { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Overridable Property ExposeListenerChannel As Boolean
  overload: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.ExposeListenerChannel*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.MessageListener
  commentId: P:Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.MessageListener
  id: MessageListener
  parent: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer
  langs:
  - csharp
  - vb
  name: MessageListener
  nameWithType: AbstractMessageListenerContainer.MessageListener
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.MessageListener
  type: Property
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Listener/AbstractMessageListenerContainer.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: MessageListener
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Listener/AbstractMessageListenerContainer.cs
    startLine: 92
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Listener
  syntax:
    content: public virtual IMessageListener MessageListener { get; set; }
    parameters: []
    return:
      type: Steeltoe.Messaging.RabbitMQ.Listener.IMessageListener
    content.vb: Public Overridable Property MessageListener As IMessageListener
  overload: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.MessageListener*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.ErrorHandler
  commentId: P:Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.ErrorHandler
  id: ErrorHandler
  parent: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer
  langs:
  - csharp
  - vb
  name: ErrorHandler
  nameWithType: AbstractMessageListenerContainer.ErrorHandler
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.ErrorHandler
  type: Property
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Listener/AbstractMessageListenerContainer.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: ErrorHandler
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Listener/AbstractMessageListenerContainer.cs
    startLine: 94
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Listener
  syntax:
    content: public virtual IErrorHandler ErrorHandler { get; set; }
    parameters: []
    return:
      type: Steeltoe.Common.Util.IErrorHandler
    content.vb: Public Overridable Property ErrorHandler As IErrorHandler
  overload: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.ErrorHandler*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.IsDeBatchingEnabled
  commentId: P:Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.IsDeBatchingEnabled
  id: IsDeBatchingEnabled
  parent: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer
  langs:
  - csharp
  - vb
  name: IsDeBatchingEnabled
  nameWithType: AbstractMessageListenerContainer.IsDeBatchingEnabled
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.IsDeBatchingEnabled
  type: Property
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Listener/AbstractMessageListenerContainer.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: IsDeBatchingEnabled
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Listener/AbstractMessageListenerContainer.cs
    startLine: 96
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Listener
  syntax:
    content: public virtual bool IsDeBatchingEnabled { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Overridable Property IsDeBatchingEnabled As Boolean
  overload: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.IsDeBatchingEnabled*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.AfterReceivePostProcessors
  commentId: P:Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.AfterReceivePostProcessors
  id: AfterReceivePostProcessors
  parent: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer
  langs:
  - csharp
  - vb
  name: AfterReceivePostProcessors
  nameWithType: AbstractMessageListenerContainer.AfterReceivePostProcessors
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.AfterReceivePostProcessors
  type: Property
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Listener/AbstractMessageListenerContainer.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: AfterReceivePostProcessors
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Listener/AbstractMessageListenerContainer.cs
    startLine: 98
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Listener
  syntax:
    content: public virtual IList<IMessagePostProcessor> AfterReceivePostProcessors { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IList{Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor}
    content.vb: Public Overridable ReadOnly Property AfterReceivePostProcessors As IList(Of IMessagePostProcessor)
  overload: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.AfterReceivePostProcessors*
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.IsAutoStartup
  commentId: P:Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.IsAutoStartup
  id: IsAutoStartup
  parent: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer
  langs:
  - csharp
  - vb
  name: IsAutoStartup
  nameWithType: AbstractMessageListenerContainer.IsAutoStartup
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.IsAutoStartup
  type: Property
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Listener/AbstractMessageListenerContainer.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: IsAutoStartup
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Listener/AbstractMessageListenerContainer.cs
    startLine: 100
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Listener
  syntax:
    content: public virtual bool IsAutoStartup { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Overridable Property IsAutoStartup As Boolean
  overload: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.IsAutoStartup*
  implements:
  - Steeltoe.Common.Lifecycle.ISmartLifecycle.IsAutoStartup
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.Phase
  commentId: P:Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.Phase
  id: Phase
  parent: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer
  langs:
  - csharp
  - vb
  name: Phase
  nameWithType: AbstractMessageListenerContainer.Phase
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.Phase
  type: Property
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Listener/AbstractMessageListenerContainer.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Phase
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Listener/AbstractMessageListenerContainer.cs
    startLine: 102
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Listener
  syntax:
    content: public virtual int Phase { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Overridable Property Phase As Integer
  overload: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.Phase*
  implements:
  - Steeltoe.Common.Lifecycle.IPhased.Phase
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.LookupKeyQualifier
  commentId: P:Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.LookupKeyQualifier
  id: LookupKeyQualifier
  parent: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer
  langs:
  - csharp
  - vb
  name: LookupKeyQualifier
  nameWithType: AbstractMessageListenerContainer.LookupKeyQualifier
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.LookupKeyQualifier
  type: Property
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Listener/AbstractMessageListenerContainer.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: LookupKeyQualifier
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Listener/AbstractMessageListenerContainer.cs
    startLine: 104
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Listener
  syntax:
    content: public virtual string LookupKeyQualifier { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Overridable Property LookupKeyQualifier As String
  overload: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.LookupKeyQualifier*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.ListenerId
  commentId: P:Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.ListenerId
  id: ListenerId
  parent: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer
  langs:
  - csharp
  - vb
  name: ListenerId
  nameWithType: AbstractMessageListenerContainer.ListenerId
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.ListenerId
  type: Property
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Listener/AbstractMessageListenerContainer.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: ListenerId
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Listener/AbstractMessageListenerContainer.cs
    startLine: 106
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Listener
  syntax:
    content: public virtual string ListenerId { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Overridable Property ListenerId As String
  overload: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.ListenerId*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.ConsumerTagStrategy
  commentId: P:Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.ConsumerTagStrategy
  id: ConsumerTagStrategy
  parent: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer
  langs:
  - csharp
  - vb
  name: ConsumerTagStrategy
  nameWithType: AbstractMessageListenerContainer.ConsumerTagStrategy
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.ConsumerTagStrategy
  type: Property
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Listener/AbstractMessageListenerContainer.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: ConsumerTagStrategy
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Listener/AbstractMessageListenerContainer.cs
    startLine: 119
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Listener
  syntax:
    content: public virtual IConsumerTagStrategy ConsumerTagStrategy { get; set; }
    parameters: []
    return:
      type: Steeltoe.Messaging.RabbitMQ.Core.IConsumerTagStrategy
    content.vb: Public Overridable Property ConsumerTagStrategy As IConsumerTagStrategy
  overload: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.ConsumerTagStrategy*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.ConsumerArguments
  commentId: P:Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.ConsumerArguments
  id: ConsumerArguments
  parent: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer
  langs:
  - csharp
  - vb
  name: ConsumerArguments
  nameWithType: AbstractMessageListenerContainer.ConsumerArguments
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.ConsumerArguments
  type: Property
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Listener/AbstractMessageListenerContainer.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: ConsumerArguments
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Listener/AbstractMessageListenerContainer.cs
    startLine: 121
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Listener
  syntax:
    content: public virtual Dictionary<string, object> ConsumerArguments { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.Dictionary{System.String,System.Object}
    content.vb: Public Overridable Property ConsumerArguments As Dictionary(Of String, Object)
  overload: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.ConsumerArguments*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.Exclusive
  commentId: P:Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.Exclusive
  id: Exclusive
  parent: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer
  langs:
  - csharp
  - vb
  name: Exclusive
  nameWithType: AbstractMessageListenerContainer.Exclusive
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.Exclusive
  type: Property
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Listener/AbstractMessageListenerContainer.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Exclusive
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Listener/AbstractMessageListenerContainer.cs
    startLine: 123
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Listener
  syntax:
    content: public virtual bool Exclusive { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Overridable Property Exclusive As Boolean
  overload: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.Exclusive*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.NoLocal
  commentId: P:Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.NoLocal
  id: NoLocal
  parent: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer
  langs:
  - csharp
  - vb
  name: NoLocal
  nameWithType: AbstractMessageListenerContainer.NoLocal
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.NoLocal
  type: Property
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Listener/AbstractMessageListenerContainer.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: NoLocal
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Listener/AbstractMessageListenerContainer.cs
    startLine: 125
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Listener
  syntax:
    content: public virtual bool NoLocal { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Overridable Property NoLocal As Boolean
  overload: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.NoLocal*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.DefaultRequeueRejected
  commentId: P:Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.DefaultRequeueRejected
  id: DefaultRequeueRejected
  parent: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer
  langs:
  - csharp
  - vb
  name: DefaultRequeueRejected
  nameWithType: AbstractMessageListenerContainer.DefaultRequeueRejected
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.DefaultRequeueRejected
  type: Property
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Listener/AbstractMessageListenerContainer.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: DefaultRequeueRejected
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Listener/AbstractMessageListenerContainer.cs
    startLine: 127
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Listener
  syntax:
    content: public virtual bool DefaultRequeueRejected { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Overridable Property DefaultRequeueRejected As Boolean
  overload: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.DefaultRequeueRejected*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.PrefetchCount
  commentId: P:Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.PrefetchCount
  id: PrefetchCount
  parent: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer
  langs:
  - csharp
  - vb
  name: PrefetchCount
  nameWithType: AbstractMessageListenerContainer.PrefetchCount
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.PrefetchCount
  type: Property
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Listener/AbstractMessageListenerContainer.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: PrefetchCount
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Listener/AbstractMessageListenerContainer.cs
    startLine: 129
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Listener
  syntax:
    content: public virtual int PrefetchCount { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Overridable Property PrefetchCount As Integer
  overload: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.PrefetchCount*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.ShutdownTimeout
  commentId: P:Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.ShutdownTimeout
  id: ShutdownTimeout
  parent: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer
  langs:
  - csharp
  - vb
  name: ShutdownTimeout
  nameWithType: AbstractMessageListenerContainer.ShutdownTimeout
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.ShutdownTimeout
  type: Property
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Listener/AbstractMessageListenerContainer.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: ShutdownTimeout
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Listener/AbstractMessageListenerContainer.cs
    startLine: 131
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Listener
  syntax:
    content: public virtual long ShutdownTimeout { get; set; }
    parameters: []
    return:
      type: System.Int64
    content.vb: Public Overridable Property ShutdownTimeout As Long
  overload: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.ShutdownTimeout*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.IdleEventInterval
  commentId: P:Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.IdleEventInterval
  id: IdleEventInterval
  parent: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer
  langs:
  - csharp
  - vb
  name: IdleEventInterval
  nameWithType: AbstractMessageListenerContainer.IdleEventInterval
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.IdleEventInterval
  type: Property
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Listener/AbstractMessageListenerContainer.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: IdleEventInterval
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Listener/AbstractMessageListenerContainer.cs
    startLine: 133
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Listener
  syntax:
    content: public virtual long IdleEventInterval { get; set; }
    parameters: []
    return:
      type: System.Int64
    content.vb: Public Overridable Property IdleEventInterval As Long
  overload: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.IdleEventInterval*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.RecoveryInterval
  commentId: P:Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.RecoveryInterval
  id: RecoveryInterval
  parent: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer
  langs:
  - csharp
  - vb
  name: RecoveryInterval
  nameWithType: AbstractMessageListenerContainer.RecoveryInterval
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.RecoveryInterval
  type: Property
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Listener/AbstractMessageListenerContainer.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: RecoveryInterval
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Listener/AbstractMessageListenerContainer.cs
    startLine: 135
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Listener
  syntax:
    content: public virtual int RecoveryInterval { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Overridable Property RecoveryInterval As Integer
  overload: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.RecoveryInterval*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.RecoveryBackOff
  commentId: P:Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.RecoveryBackOff
  id: RecoveryBackOff
  parent: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer
  langs:
  - csharp
  - vb
  name: RecoveryBackOff
  nameWithType: AbstractMessageListenerContainer.RecoveryBackOff
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.RecoveryBackOff
  type: Property
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Listener/AbstractMessageListenerContainer.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: RecoveryBackOff
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Listener/AbstractMessageListenerContainer.cs
    startLine: 145
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Listener
  syntax:
    content: public IBackOff RecoveryBackOff { get; set; }
    parameters: []
    return:
      type: Steeltoe.Common.Util.IBackOff
    content.vb: Public Property RecoveryBackOff As IBackOff
  overload: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.RecoveryBackOff*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.MessageHeadersConverter
  commentId: P:Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.MessageHeadersConverter
  id: MessageHeadersConverter
  parent: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer
  langs:
  - csharp
  - vb
  name: MessageHeadersConverter
  nameWithType: AbstractMessageListenerContainer.MessageHeadersConverter
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.MessageHeadersConverter
  type: Property
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Listener/AbstractMessageListenerContainer.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: MessageHeadersConverter
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Listener/AbstractMessageListenerContainer.cs
    startLine: 147
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Listener
  syntax:
    content: public virtual IMessageHeadersConverter MessageHeadersConverter { get; set; }
    parameters: []
    return:
      type: Steeltoe.Messaging.RabbitMQ.Support.IMessageHeadersConverter
    content.vb: Public Overridable Property MessageHeadersConverter As IMessageHeadersConverter
  overload: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.MessageHeadersConverter*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.RabbitAdmin
  commentId: P:Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.RabbitAdmin
  id: RabbitAdmin
  parent: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer
  langs:
  - csharp
  - vb
  name: RabbitAdmin
  nameWithType: AbstractMessageListenerContainer.RabbitAdmin
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.RabbitAdmin
  type: Property
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Listener/AbstractMessageListenerContainer.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: RabbitAdmin
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Listener/AbstractMessageListenerContainer.cs
    startLine: 149
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Listener
  syntax:
    content: public virtual IRabbitAdmin RabbitAdmin { get; set; }
    parameters: []
    return:
      type: Steeltoe.Messaging.RabbitMQ.Core.IRabbitAdmin
    content.vb: Public Overridable Property RabbitAdmin As IRabbitAdmin
  overload: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.RabbitAdmin*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.MissingQueuesFatal
  commentId: P:Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.MissingQueuesFatal
  id: MissingQueuesFatal
  parent: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer
  langs:
  - csharp
  - vb
  name: MissingQueuesFatal
  nameWithType: AbstractMessageListenerContainer.MissingQueuesFatal
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.MissingQueuesFatal
  type: Property
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Listener/AbstractMessageListenerContainer.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: MissingQueuesFatal
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Listener/AbstractMessageListenerContainer.cs
    startLine: 151
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Listener
  syntax:
    content: public virtual bool MissingQueuesFatal { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Overridable Property MissingQueuesFatal As Boolean
  overload: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.MissingQueuesFatal*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.MismatchedQueuesFatal
  commentId: P:Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.MismatchedQueuesFatal
  id: MismatchedQueuesFatal
  parent: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer
  langs:
  - csharp
  - vb
  name: MismatchedQueuesFatal
  nameWithType: AbstractMessageListenerContainer.MismatchedQueuesFatal
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.MismatchedQueuesFatal
  type: Property
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Listener/AbstractMessageListenerContainer.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: MismatchedQueuesFatal
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Listener/AbstractMessageListenerContainer.cs
    startLine: 153
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Listener
  syntax:
    content: public virtual bool MismatchedQueuesFatal { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Overridable Property MismatchedQueuesFatal As Boolean
  overload: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.MismatchedQueuesFatal*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.PossibleAuthenticationFailureFatal
  commentId: P:Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.PossibleAuthenticationFailureFatal
  id: PossibleAuthenticationFailureFatal
  parent: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer
  langs:
  - csharp
  - vb
  name: PossibleAuthenticationFailureFatal
  nameWithType: AbstractMessageListenerContainer.PossibleAuthenticationFailureFatal
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.PossibleAuthenticationFailureFatal
  type: Property
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Listener/AbstractMessageListenerContainer.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: PossibleAuthenticationFailureFatal
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Listener/AbstractMessageListenerContainer.cs
    startLine: 155
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Listener
  syntax:
    content: public virtual bool PossibleAuthenticationFailureFatal { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Overridable Property PossibleAuthenticationFailureFatal As Boolean
  overload: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.PossibleAuthenticationFailureFatal*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.AutoDeclare
  commentId: P:Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.AutoDeclare
  id: AutoDeclare
  parent: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer
  langs:
  - csharp
  - vb
  name: AutoDeclare
  nameWithType: AbstractMessageListenerContainer.AutoDeclare
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.AutoDeclare
  type: Property
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Listener/AbstractMessageListenerContainer.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: AutoDeclare
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Listener/AbstractMessageListenerContainer.cs
    startLine: 157
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Listener
  syntax:
    content: public virtual bool AutoDeclare { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Overridable Property AutoDeclare As Boolean
  overload: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.AutoDeclare*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.FailedDeclarationRetryInterval
  commentId: P:Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.FailedDeclarationRetryInterval
  id: FailedDeclarationRetryInterval
  parent: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer
  langs:
  - csharp
  - vb
  name: FailedDeclarationRetryInterval
  nameWithType: AbstractMessageListenerContainer.FailedDeclarationRetryInterval
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.FailedDeclarationRetryInterval
  type: Property
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Listener/AbstractMessageListenerContainer.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: FailedDeclarationRetryInterval
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Listener/AbstractMessageListenerContainer.cs
    startLine: 159
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Listener
  syntax:
    content: public virtual long FailedDeclarationRetryInterval { get; set; }
    parameters: []
    return:
      type: System.Int64
    content.vb: Public Overridable Property FailedDeclarationRetryInterval As Long
  overload: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.FailedDeclarationRetryInterval*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.StatefulRetryFatalWithNullMessageId
  commentId: P:Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.StatefulRetryFatalWithNullMessageId
  id: StatefulRetryFatalWithNullMessageId
  parent: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer
  langs:
  - csharp
  - vb
  name: StatefulRetryFatalWithNullMessageId
  nameWithType: AbstractMessageListenerContainer.StatefulRetryFatalWithNullMessageId
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.StatefulRetryFatalWithNullMessageId
  type: Property
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Listener/AbstractMessageListenerContainer.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: StatefulRetryFatalWithNullMessageId
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Listener/AbstractMessageListenerContainer.cs
    startLine: 161
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Listener
  syntax:
    content: public virtual bool StatefulRetryFatalWithNullMessageId { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Overridable Property StatefulRetryFatalWithNullMessageId As Boolean
  overload: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.StatefulRetryFatalWithNullMessageId*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.ExclusiveConsumerExceptionLogger
  commentId: P:Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.ExclusiveConsumerExceptionLogger
  id: ExclusiveConsumerExceptionLogger
  parent: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer
  langs:
  - csharp
  - vb
  name: ExclusiveConsumerExceptionLogger
  nameWithType: AbstractMessageListenerContainer.ExclusiveConsumerExceptionLogger
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.ExclusiveConsumerExceptionLogger
  type: Property
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Listener/AbstractMessageListenerContainer.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: ExclusiveConsumerExceptionLogger
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Listener/AbstractMessageListenerContainer.cs
    startLine: 163
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Listener
  syntax:
    content: public virtual IConditionalExceptionLogger ExclusiveConsumerExceptionLogger { get; set; }
    parameters: []
    return:
      type: Steeltoe.Messaging.RabbitMQ.Core.IConditionalExceptionLogger
    content.vb: Public Overridable Property ExclusiveConsumerExceptionLogger As IConditionalExceptionLogger
  overload: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.ExclusiveConsumerExceptionLogger*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.AlwaysRequeueWithTxManagerRollback
  commentId: P:Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.AlwaysRequeueWithTxManagerRollback
  id: AlwaysRequeueWithTxManagerRollback
  parent: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer
  langs:
  - csharp
  - vb
  name: AlwaysRequeueWithTxManagerRollback
  nameWithType: AbstractMessageListenerContainer.AlwaysRequeueWithTxManagerRollback
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.AlwaysRequeueWithTxManagerRollback
  type: Property
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Listener/AbstractMessageListenerContainer.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: AlwaysRequeueWithTxManagerRollback
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Listener/AbstractMessageListenerContainer.cs
    startLine: 165
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Listener
  syntax:
    content: public virtual bool AlwaysRequeueWithTxManagerRollback { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Overridable Property AlwaysRequeueWithTxManagerRollback As Boolean
  overload: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.AlwaysRequeueWithTxManagerRollback*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.BatchingStrategy
  commentId: P:Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.BatchingStrategy
  id: BatchingStrategy
  parent: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer
  langs:
  - csharp
  - vb
  name: BatchingStrategy
  nameWithType: AbstractMessageListenerContainer.BatchingStrategy
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.BatchingStrategy
  type: Property
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Listener/AbstractMessageListenerContainer.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: BatchingStrategy
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Listener/AbstractMessageListenerContainer.cs
    startLine: 168
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Listener
  syntax:
    content: public virtual IBatchingStrategy BatchingStrategy { get; set; }
    parameters: []
    return:
      type: Steeltoe.Messaging.RabbitMQ.Batch.IBatchingStrategy
    content.vb: Public Overridable Property BatchingStrategy As IBatchingStrategy
  overload: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.BatchingStrategy*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.IsRunning
  commentId: P:Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.IsRunning
  id: IsRunning
  parent: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer
  langs:
  - csharp
  - vb
  name: IsRunning
  nameWithType: AbstractMessageListenerContainer.IsRunning
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.IsRunning
  type: Property
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Listener/AbstractMessageListenerContainer.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: IsRunning
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Listener/AbstractMessageListenerContainer.cs
    startLine: 170
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Listener
  syntax:
    content: public virtual bool IsRunning { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Overridable ReadOnly Property IsRunning As Boolean
  overload: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.IsRunning*
  implements:
  - Steeltoe.Common.Lifecycle.ILifecycle.IsRunning
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.IsActive
  commentId: P:Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.IsActive
  id: IsActive
  parent: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer
  langs:
  - csharp
  - vb
  name: IsActive
  nameWithType: AbstractMessageListenerContainer.IsActive
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.IsActive
  type: Property
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Listener/AbstractMessageListenerContainer.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: IsActive
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Listener/AbstractMessageListenerContainer.cs
    startLine: 172
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Listener
  syntax:
    content: public virtual bool IsActive { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Overridable ReadOnly Property IsActive As Boolean
  overload: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.IsActive*
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.IsLazyLoad
  commentId: P:Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.IsLazyLoad
  id: IsLazyLoad
  parent: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer
  langs:
  - csharp
  - vb
  name: IsLazyLoad
  nameWithType: AbstractMessageListenerContainer.IsLazyLoad
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.IsLazyLoad
  type: Property
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Listener/AbstractMessageListenerContainer.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: IsLazyLoad
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Listener/AbstractMessageListenerContainer.cs
    startLine: 174
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Listener
  syntax:
    content: public virtual bool IsLazyLoad { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Overridable ReadOnly Property IsLazyLoad As Boolean
  overload: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.IsLazyLoad*
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.Initialized
  commentId: P:Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.Initialized
  id: Initialized
  parent: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer
  langs:
  - csharp
  - vb
  name: Initialized
  nameWithType: AbstractMessageListenerContainer.Initialized
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.Initialized
  type: Property
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Listener/AbstractMessageListenerContainer.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Initialized
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Listener/AbstractMessageListenerContainer.cs
    startLine: 176
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Listener
  syntax:
    content: public virtual bool Initialized { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Overridable ReadOnly Property Initialized As Boolean
  overload: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.Initialized*
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.TransactionManager
  commentId: P:Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.TransactionManager
  id: TransactionManager
  parent: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer
  langs:
  - csharp
  - vb
  name: TransactionManager
  nameWithType: AbstractMessageListenerContainer.TransactionManager
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.TransactionManager
  type: Property
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Listener/AbstractMessageListenerContainer.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: TransactionManager
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Listener/AbstractMessageListenerContainer.cs
    startLine: 178
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Listener
  syntax:
    content: public virtual IPlatformTransactionManager TransactionManager { get; set; }
    parameters: []
    return:
      type: Steeltoe.Common.Transaction.IPlatformTransactionManager
    content.vb: Public Overridable Property TransactionManager As IPlatformTransactionManager
  overload: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.TransactionManager*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.TransactionAttribute
  commentId: P:Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.TransactionAttribute
  id: TransactionAttribute
  parent: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer
  langs:
  - csharp
  - vb
  name: TransactionAttribute
  nameWithType: AbstractMessageListenerContainer.TransactionAttribute
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.TransactionAttribute
  type: Property
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Listener/AbstractMessageListenerContainer.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: TransactionAttribute
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Listener/AbstractMessageListenerContainer.cs
    startLine: 180
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Listener
  syntax:
    content: public virtual ITransactionAttribute TransactionAttribute { get; set; }
    parameters: []
    return:
      type: Steeltoe.Common.Transaction.ITransactionAttribute
    content.vb: Public Overridable Property TransactionAttribute As ITransactionAttribute
  overload: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.TransactionAttribute*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.SetQueueNames(System.String[])
  commentId: M:Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.SetQueueNames(System.String[])
  id: SetQueueNames(System.String[])
  parent: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer
  langs:
  - csharp
  - vb
  name: SetQueueNames(String[])
  nameWithType: AbstractMessageListenerContainer.SetQueueNames(String[])
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.SetQueueNames(System.String[])
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Listener/AbstractMessageListenerContainer.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: SetQueueNames
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Listener/AbstractMessageListenerContainer.cs
    startLine: 182
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Listener
  syntax:
    content: public virtual void SetQueueNames(params string[] queueNames)
    parameters:
    - id: queueNames
      type: System.String[]
    content.vb: Public Overridable Sub SetQueueNames(ParamArray queueNames As String())
  overload: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.SetQueueNames*
  nameWithType.vb: AbstractMessageListenerContainer.SetQueueNames(String())
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.SetQueueNames(System.String())
  name.vb: SetQueueNames(String())
- uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.GetQueueNames
  commentId: M:Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.GetQueueNames
  id: GetQueueNames
  parent: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer
  langs:
  - csharp
  - vb
  name: GetQueueNames()
  nameWithType: AbstractMessageListenerContainer.GetQueueNames()
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.GetQueueNames()
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Listener/AbstractMessageListenerContainer.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: GetQueueNames
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Listener/AbstractMessageListenerContainer.cs
    startLine: 204
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Listener
  syntax:
    content: public virtual string[] GetQueueNames()
    return:
      type: System.String[]
    content.vb: Public Overridable Function GetQueueNames As String()
  overload: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.GetQueueNames*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.SetQueues(Steeltoe.Messaging.RabbitMQ.Config.IQueue[])
  commentId: M:Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.SetQueues(Steeltoe.Messaging.RabbitMQ.Config.IQueue[])
  id: SetQueues(Steeltoe.Messaging.RabbitMQ.Config.IQueue[])
  parent: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer
  langs:
  - csharp
  - vb
  name: SetQueues(IQueue[])
  nameWithType: AbstractMessageListenerContainer.SetQueues(IQueue[])
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.SetQueues(Steeltoe.Messaging.RabbitMQ.Config.IQueue[])
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Listener/AbstractMessageListenerContainer.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: SetQueues
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Listener/AbstractMessageListenerContainer.cs
    startLine: 209
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Listener
  syntax:
    content: public virtual void SetQueues(params IQueue[] queues)
    parameters:
    - id: queues
      type: Steeltoe.Messaging.RabbitMQ.Config.IQueue[]
    content.vb: Public Overridable Sub SetQueues(ParamArray queues As IQueue())
  overload: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.SetQueues*
  nameWithType.vb: AbstractMessageListenerContainer.SetQueues(IQueue())
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.SetQueues(Steeltoe.Messaging.RabbitMQ.Config.IQueue())
  name.vb: SetQueues(IQueue())
- uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.AddQueueNames(System.String[])
  commentId: M:Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.AddQueueNames(System.String[])
  id: AddQueueNames(System.String[])
  parent: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer
  langs:
  - csharp
  - vb
  name: AddQueueNames(String[])
  nameWithType: AbstractMessageListenerContainer.AddQueueNames(String[])
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.AddQueueNames(System.String[])
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Listener/AbstractMessageListenerContainer.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: AddQueueNames
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Listener/AbstractMessageListenerContainer.cs
    startLine: 235
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Listener
  syntax:
    content: public virtual void AddQueueNames(params string[] queueNames)
    parameters:
    - id: queueNames
      type: System.String[]
    content.vb: Public Overridable Sub AddQueueNames(ParamArray queueNames As String())
  overload: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.AddQueueNames*
  nameWithType.vb: AbstractMessageListenerContainer.AddQueueNames(String())
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.AddQueueNames(System.String())
  name.vb: AddQueueNames(String())
- uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.AddQueues(Steeltoe.Messaging.RabbitMQ.Config.IQueue[])
  commentId: M:Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.AddQueues(Steeltoe.Messaging.RabbitMQ.Config.IQueue[])
  id: AddQueues(Steeltoe.Messaging.RabbitMQ.Config.IQueue[])
  parent: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer
  langs:
  - csharp
  - vb
  name: AddQueues(IQueue[])
  nameWithType: AbstractMessageListenerContainer.AddQueues(IQueue[])
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.AddQueues(Steeltoe.Messaging.RabbitMQ.Config.IQueue[])
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Listener/AbstractMessageListenerContainer.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: AddQueues
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Listener/AbstractMessageListenerContainer.cs
    startLine: 257
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Listener
  syntax:
    content: public virtual void AddQueues(params IQueue[] queues)
    parameters:
    - id: queues
      type: Steeltoe.Messaging.RabbitMQ.Config.IQueue[]
    content.vb: Public Overridable Sub AddQueues(ParamArray queues As IQueue())
  overload: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.AddQueues*
  nameWithType.vb: AbstractMessageListenerContainer.AddQueues(IQueue())
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.AddQueues(Steeltoe.Messaging.RabbitMQ.Config.IQueue())
  name.vb: AddQueues(IQueue())
- uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.RemoveQueueNames(System.String[])
  commentId: M:Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.RemoveQueueNames(System.String[])
  id: RemoveQueueNames(System.String[])
  parent: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer
  langs:
  - csharp
  - vb
  name: RemoveQueueNames(String[])
  nameWithType: AbstractMessageListenerContainer.RemoveQueueNames(String[])
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.RemoveQueueNames(System.String[])
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Listener/AbstractMessageListenerContainer.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: RemoveQueueNames
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Listener/AbstractMessageListenerContainer.cs
    startLine: 285
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Listener
  syntax:
    content: public virtual bool RemoveQueueNames(params string[] queueNames)
    parameters:
    - id: queueNames
      type: System.String[]
    return:
      type: System.Boolean
    content.vb: Public Overridable Function RemoveQueueNames(ParamArray queueNames As String()) As Boolean
  overload: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.RemoveQueueNames*
  nameWithType.vb: AbstractMessageListenerContainer.RemoveQueueNames(String())
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.RemoveQueueNames(System.String())
  name.vb: RemoveQueueNames(String())
- uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.RemoveQueues(Steeltoe.Messaging.RabbitMQ.Config.IQueue[])
  commentId: M:Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.RemoveQueues(Steeltoe.Messaging.RabbitMQ.Config.IQueue[])
  id: RemoveQueues(Steeltoe.Messaging.RabbitMQ.Config.IQueue[])
  parent: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer
  langs:
  - csharp
  - vb
  name: RemoveQueues(IQueue[])
  nameWithType: AbstractMessageListenerContainer.RemoveQueues(IQueue[])
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.RemoveQueues(Steeltoe.Messaging.RabbitMQ.Config.IQueue[])
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Listener/AbstractMessageListenerContainer.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: RemoveQueues
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Listener/AbstractMessageListenerContainer.cs
    startLine: 309
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Listener
  syntax:
    content: public virtual void RemoveQueues(params IQueue[] queues)
    parameters:
    - id: queues
      type: Steeltoe.Messaging.RabbitMQ.Config.IQueue[]
    content.vb: Public Overridable Sub RemoveQueues(ParamArray queues As IQueue())
  overload: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.RemoveQueues*
  nameWithType.vb: AbstractMessageListenerContainer.RemoveQueues(IQueue())
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.RemoveQueues(Steeltoe.Messaging.RabbitMQ.Config.IQueue())
  name.vb: RemoveQueues(IQueue())
- uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.SetAfterReceivePostProcessors(Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor[])
  commentId: M:Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.SetAfterReceivePostProcessors(Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor[])
  id: SetAfterReceivePostProcessors(Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor[])
  parent: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer
  langs:
  - csharp
  - vb
  name: SetAfterReceivePostProcessors(IMessagePostProcessor[])
  nameWithType: AbstractMessageListenerContainer.SetAfterReceivePostProcessors(IMessagePostProcessor[])
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.SetAfterReceivePostProcessors(Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor[])
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Listener/AbstractMessageListenerContainer.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: SetAfterReceivePostProcessors
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Listener/AbstractMessageListenerContainer.cs
    startLine: 331
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Listener
  syntax:
    content: public virtual void SetAfterReceivePostProcessors(params IMessagePostProcessor[] afterReceivePostProcessors)
    parameters:
    - id: afterReceivePostProcessors
      type: Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor[]
    content.vb: Public Overridable Sub SetAfterReceivePostProcessors(ParamArray afterReceivePostProcessors As IMessagePostProcessor())
  overload: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.SetAfterReceivePostProcessors*
  nameWithType.vb: AbstractMessageListenerContainer.SetAfterReceivePostProcessors(IMessagePostProcessor())
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.SetAfterReceivePostProcessors(Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor())
  name.vb: SetAfterReceivePostProcessors(IMessagePostProcessor())
- uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.AddAfterReceivePostProcessors(Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor[])
  commentId: M:Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.AddAfterReceivePostProcessors(Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor[])
  id: AddAfterReceivePostProcessors(Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor[])
  parent: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer
  langs:
  - csharp
  - vb
  name: AddAfterReceivePostProcessors(IMessagePostProcessor[])
  nameWithType: AbstractMessageListenerContainer.AddAfterReceivePostProcessors(IMessagePostProcessor[])
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.AddAfterReceivePostProcessors(Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor[])
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Listener/AbstractMessageListenerContainer.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: AddAfterReceivePostProcessors
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Listener/AbstractMessageListenerContainer.cs
    startLine: 352
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Listener
  syntax:
    content: public virtual void AddAfterReceivePostProcessors(params IMessagePostProcessor[] afterReceivePostProcessors)
    parameters:
    - id: afterReceivePostProcessors
      type: Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor[]
    content.vb: Public Overridable Sub AddAfterReceivePostProcessors(ParamArray afterReceivePostProcessors As IMessagePostProcessor())
  overload: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.AddAfterReceivePostProcessors*
  nameWithType.vb: AbstractMessageListenerContainer.AddAfterReceivePostProcessors(IMessagePostProcessor())
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.AddAfterReceivePostProcessors(Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor())
  name.vb: AddAfterReceivePostProcessors(IMessagePostProcessor())
- uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.RemoveAfterReceivePostProcessor(Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.RemoveAfterReceivePostProcessor(Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor)
  id: RemoveAfterReceivePostProcessor(Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor)
  parent: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer
  langs:
  - csharp
  - vb
  name: RemoveAfterReceivePostProcessor(IMessagePostProcessor)
  nameWithType: AbstractMessageListenerContainer.RemoveAfterReceivePostProcessor(IMessagePostProcessor)
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.RemoveAfterReceivePostProcessor(Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor)
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Listener/AbstractMessageListenerContainer.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: RemoveAfterReceivePostProcessor
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Listener/AbstractMessageListenerContainer.cs
    startLine: 370
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Listener
  syntax:
    content: public virtual bool RemoveAfterReceivePostProcessor(IMessagePostProcessor afterReceivePostProcessor)
    parameters:
    - id: afterReceivePostProcessor
      type: Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor
    return:
      type: System.Boolean
    content.vb: Public Overridable Function RemoveAfterReceivePostProcessor(afterReceivePostProcessor As IMessagePostProcessor) As Boolean
  overload: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.RemoveAfterReceivePostProcessor*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.SetupMessageListener(Steeltoe.Messaging.RabbitMQ.Listener.IMessageListener)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.SetupMessageListener(Steeltoe.Messaging.RabbitMQ.Listener.IMessageListener)
  id: SetupMessageListener(Steeltoe.Messaging.RabbitMQ.Listener.IMessageListener)
  parent: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer
  langs:
  - csharp
  - vb
  name: SetupMessageListener(IMessageListener)
  nameWithType: AbstractMessageListenerContainer.SetupMessageListener(IMessageListener)
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.SetupMessageListener(Steeltoe.Messaging.RabbitMQ.Listener.IMessageListener)
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Listener/AbstractMessageListenerContainer.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: SetupMessageListener
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Listener/AbstractMessageListenerContainer.cs
    startLine: 389
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Listener
  syntax:
    content: public virtual void SetupMessageListener(IMessageListener messageListener)
    parameters:
    - id: messageListener
      type: Steeltoe.Messaging.RabbitMQ.Listener.IMessageListener
    content.vb: Public Overridable Sub SetupMessageListener(messageListener As IMessageListener)
  overload: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.SetupMessageListener*
  implements:
  - Steeltoe.Messaging.RabbitMQ.Listener.IMessageListenerContainer.SetupMessageListener(Steeltoe.Messaging.RabbitMQ.Listener.IMessageListener)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.GetConnectionFactory
  commentId: M:Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.GetConnectionFactory
  id: GetConnectionFactory
  parent: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer
  langs:
  - csharp
  - vb
  name: GetConnectionFactory()
  nameWithType: AbstractMessageListenerContainer.GetConnectionFactory()
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.GetConnectionFactory()
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Listener/AbstractMessageListenerContainer.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: GetConnectionFactory
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Listener/AbstractMessageListenerContainer.cs
    startLine: 394
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Listener
  syntax:
    content: public virtual IConnectionFactory GetConnectionFactory()
    return:
      type: Steeltoe.Messaging.RabbitMQ.Connection.IConnectionFactory
    content.vb: Public Overridable Function GetConnectionFactory As IConnectionFactory
  overload: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.GetConnectionFactory*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.Initialize
  commentId: M:Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.Initialize
  id: Initialize
  parent: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer
  langs:
  - csharp
  - vb
  name: Initialize()
  nameWithType: AbstractMessageListenerContainer.Initialize()
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.Initialize()
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Listener/AbstractMessageListenerContainer.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Initialize
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Listener/AbstractMessageListenerContainer.cs
    startLine: 410
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Listener
  syntax:
    content: public virtual void Initialize()
    content.vb: Public Overridable Sub Initialize
  overload: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.Initialize*
  implements:
  - Steeltoe.Messaging.RabbitMQ.Listener.IMessageListenerContainer.Initialize
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.Dispose
  commentId: M:Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.Dispose
  id: Dispose
  parent: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer
  langs:
  - csharp
  - vb
  name: Dispose()
  nameWithType: AbstractMessageListenerContainer.Dispose()
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.Dispose()
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Listener/AbstractMessageListenerContainer.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Dispose
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Listener/AbstractMessageListenerContainer.cs
    startLine: 449
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Listener
  syntax:
    content: public virtual void Dispose()
    content.vb: Public Overridable Sub Dispose
  overload: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.Dispose*
  implements:
  - System.IDisposable.Dispose
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.Shutdown
  commentId: M:Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.Shutdown
  id: Shutdown
  parent: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer
  langs:
  - csharp
  - vb
  name: Shutdown()
  nameWithType: AbstractMessageListenerContainer.Shutdown()
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.Shutdown()
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Listener/AbstractMessageListenerContainer.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Shutdown
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Listener/AbstractMessageListenerContainer.cs
    startLine: 454
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Listener
  syntax:
    content: public virtual void Shutdown()
    content.vb: Public Overridable Sub Shutdown
  overload: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.Shutdown*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.Start
  commentId: M:Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.Start
  id: Start
  parent: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer
  langs:
  - csharp
  - vb
  name: Start()
  nameWithType: AbstractMessageListenerContainer.Start()
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.Start()
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Listener/AbstractMessageListenerContainer.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Start
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Listener/AbstractMessageListenerContainer.cs
    startLine: 490
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Listener
  syntax:
    content: public virtual Task Start()
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Overridable Function Start As Task
  overload: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.Start*
  implements:
  - Steeltoe.Common.Lifecycle.ILifecycle.Start
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.Stop
  commentId: M:Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.Stop
  id: Stop
  parent: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer
  langs:
  - csharp
  - vb
  name: Stop()
  nameWithType: AbstractMessageListenerContainer.Stop()
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.Stop()
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Listener/AbstractMessageListenerContainer.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Stop
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Listener/AbstractMessageListenerContainer.cs
    startLine: 528
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Listener
  syntax:
    content: public virtual Task Stop()
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Overridable Function Stop As Task
  overload: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.Stop*
  implements:
  - Steeltoe.Common.Lifecycle.ILifecycle.Stop
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.Stop(System.Action)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.Stop(System.Action)
  id: Stop(System.Action)
  parent: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer
  langs:
  - csharp
  - vb
  name: Stop(Action)
  nameWithType: AbstractMessageListenerContainer.Stop(Action)
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.Stop(System.Action)
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Listener/AbstractMessageListenerContainer.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Stop
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Listener/AbstractMessageListenerContainer.cs
    startLine: 551
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Listener
  syntax:
    content: public virtual Task Stop(Action callback)
    parameters:
    - id: callback
      type: System.Action
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Overridable Function Stop(callback As Action) As Task
  overload: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.Stop*
  implements:
  - Steeltoe.Common.Lifecycle.ISmartLifecycle.Stop(System.Action)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.LazyLoad
  commentId: M:Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.LazyLoad
  id: LazyLoad
  parent: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer
  langs:
  - csharp
  - vb
  name: LazyLoad()
  nameWithType: AbstractMessageListenerContainer.LazyLoad()
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.LazyLoad()
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Listener/AbstractMessageListenerContainer.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: LazyLoad
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Listener/AbstractMessageListenerContainer.cs
    startLine: 565
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Listener
  syntax:
    content: public virtual void LazyLoad()
    content.vb: Public Overridable Sub LazyLoad
  overload: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.LazyLoad*
  implements:
  - Steeltoe.Messaging.RabbitMQ.Listener.IMessageListenerContainer.LazyLoad
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.CreateConnection
  commentId: M:Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.CreateConnection
  id: CreateConnection
  parent: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer
  langs:
  - csharp
  - vb
  name: CreateConnection()
  nameWithType: AbstractMessageListenerContainer.CreateConnection()
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.CreateConnection()
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Listener/AbstractMessageListenerContainer.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: CreateConnection
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Listener/AbstractMessageListenerContainer.cs
    startLine: 588
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Listener
  syntax:
    content: protected virtual IConnection CreateConnection()
    return:
      type: Steeltoe.Messaging.RabbitMQ.Connection.IConnection
    content.vb: Protected Overridable Function CreateConnection As IConnection
  overload: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.CreateConnection*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.GetTransactionalResourceHolder
  commentId: M:Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.GetTransactionalResourceHolder
  id: GetTransactionalResourceHolder
  parent: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer
  langs:
  - csharp
  - vb
  name: GetTransactionalResourceHolder()
  nameWithType: AbstractMessageListenerContainer.GetTransactionalResourceHolder()
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.GetTransactionalResourceHolder()
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Listener/AbstractMessageListenerContainer.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: GetTransactionalResourceHolder
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Listener/AbstractMessageListenerContainer.cs
    startLine: 593
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Listener
  syntax:
    content: protected virtual RabbitResourceHolder GetTransactionalResourceHolder()
    return:
      type: Steeltoe.Messaging.RabbitMQ.Connection.RabbitResourceHolder
    content.vb: Protected Overridable Function GetTransactionalResourceHolder As RabbitResourceHolder
  overload: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.GetTransactionalResourceHolder*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.ConvertRabbitAccessException(System.Exception)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.ConvertRabbitAccessException(System.Exception)
  id: ConvertRabbitAccessException(System.Exception)
  parent: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer
  langs:
  - csharp
  - vb
  name: ConvertRabbitAccessException(Exception)
  nameWithType: AbstractMessageListenerContainer.ConvertRabbitAccessException(Exception)
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.ConvertRabbitAccessException(System.Exception)
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Listener/AbstractMessageListenerContainer.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: ConvertRabbitAccessException
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Listener/AbstractMessageListenerContainer.cs
    startLine: 598
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Listener
  syntax:
    content: protected virtual Exception ConvertRabbitAccessException(Exception ex)
    parameters:
    - id: ex
      type: System.Exception
    return:
      type: System.Exception
    content.vb: Protected Overridable Function ConvertRabbitAccessException(ex As Exception) As Exception
  overload: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.ConvertRabbitAccessException*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.RedeclareElementsIfNecessary
  commentId: M:Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.RedeclareElementsIfNecessary
  id: RedeclareElementsIfNecessary
  parent: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer
  langs:
  - csharp
  - vb
  name: RedeclareElementsIfNecessary()
  nameWithType: AbstractMessageListenerContainer.RedeclareElementsIfNecessary()
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.RedeclareElementsIfNecessary()
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Listener/AbstractMessageListenerContainer.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: RedeclareElementsIfNecessary
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Listener/AbstractMessageListenerContainer.cs
    startLine: 603
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Listener
  syntax:
    content: protected virtual void RedeclareElementsIfNecessary()
    content.vb: Protected Overridable Sub RedeclareElementsIfNecessary
  overload: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.RedeclareElementsIfNecessary*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.InvokeErrorHandler(System.Exception)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.InvokeErrorHandler(System.Exception)
  id: InvokeErrorHandler(System.Exception)
  parent: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer
  langs:
  - csharp
  - vb
  name: InvokeErrorHandler(Exception)
  nameWithType: AbstractMessageListenerContainer.InvokeErrorHandler(Exception)
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.InvokeErrorHandler(System.Exception)
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Listener/AbstractMessageListenerContainer.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: InvokeErrorHandler
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Listener/AbstractMessageListenerContainer.cs
    startLine: 627
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Listener
  syntax:
    content: protected virtual void InvokeErrorHandler(Exception ex)
    parameters:
    - id: ex
      type: System.Exception
    content.vb: Protected Overridable Sub InvokeErrorHandler(ex As Exception)
  overload: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.InvokeErrorHandler*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.ExecuteListener(RabbitMQ.Client.IModel,Steeltoe.Messaging.IMessage)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.ExecuteListener(RabbitMQ.Client.IModel,Steeltoe.Messaging.IMessage)
  id: ExecuteListener(RabbitMQ.Client.IModel,Steeltoe.Messaging.IMessage)
  parent: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer
  langs:
  - csharp
  - vb
  name: ExecuteListener(IModel, IMessage)
  nameWithType: AbstractMessageListenerContainer.ExecuteListener(IModel, IMessage)
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.ExecuteListener(RabbitMQ.Client.IModel, Steeltoe.Messaging.IMessage)
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Listener/AbstractMessageListenerContainer.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: ExecuteListener
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Listener/AbstractMessageListenerContainer.cs
    startLine: 647
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Listener
  syntax:
    content: protected virtual void ExecuteListener(IModel channel, IMessage message)
    parameters:
    - id: channel
      type: RabbitMQ.Client.IModel
    - id: message
      type: Steeltoe.Messaging.IMessage
    content.vb: Protected Overridable Sub ExecuteListener(channel As IModel, message As IMessage)
  overload: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.ExecuteListener*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.ActualInvokeListener(RabbitMQ.Client.IModel,System.Collections.Generic.List{Steeltoe.Messaging.IMessage})
  commentId: M:Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.ActualInvokeListener(RabbitMQ.Client.IModel,System.Collections.Generic.List{Steeltoe.Messaging.IMessage})
  id: ActualInvokeListener(RabbitMQ.Client.IModel,System.Collections.Generic.List{Steeltoe.Messaging.IMessage})
  parent: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer
  langs:
  - csharp
  - vb
  name: ActualInvokeListener(IModel, List<IMessage>)
  nameWithType: AbstractMessageListenerContainer.ActualInvokeListener(IModel, List<IMessage>)
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.ActualInvokeListener(RabbitMQ.Client.IModel, System.Collections.Generic.List<Steeltoe.Messaging.IMessage>)
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Listener/AbstractMessageListenerContainer.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: ActualInvokeListener
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Listener/AbstractMessageListenerContainer.cs
    startLine: 667
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Listener
  syntax:
    content: protected virtual void ActualInvokeListener(IModel channel, List<IMessage> data)
    parameters:
    - id: channel
      type: RabbitMQ.Client.IModel
    - id: data
      type: System.Collections.Generic.List{Steeltoe.Messaging.IMessage}
    content.vb: Protected Overridable Sub ActualInvokeListener(channel As IModel, data As List(Of IMessage))
  overload: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.ActualInvokeListener*
  nameWithType.vb: AbstractMessageListenerContainer.ActualInvokeListener(IModel, List(Of IMessage))
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
  fullName.vb: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.ActualInvokeListener(RabbitMQ.Client.IModel, System.Collections.Generic.List(Of Steeltoe.Messaging.IMessage))
  name.vb: ActualInvokeListener(IModel, List(Of IMessage))
- uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.ActualInvokeListener(RabbitMQ.Client.IModel,Steeltoe.Messaging.IMessage)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.ActualInvokeListener(RabbitMQ.Client.IModel,Steeltoe.Messaging.IMessage)
  id: ActualInvokeListener(RabbitMQ.Client.IModel,Steeltoe.Messaging.IMessage)
  parent: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer
  langs:
  - csharp
  - vb
  name: ActualInvokeListener(IModel, IMessage)
  nameWithType: AbstractMessageListenerContainer.ActualInvokeListener(IModel, IMessage)
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.ActualInvokeListener(RabbitMQ.Client.IModel, Steeltoe.Messaging.IMessage)
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Listener/AbstractMessageListenerContainer.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: ActualInvokeListener
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Listener/AbstractMessageListenerContainer.cs
    startLine: 703
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Listener
  syntax:
    content: protected virtual void ActualInvokeListener(IModel channel, IMessage message)
    parameters:
    - id: channel
      type: RabbitMQ.Client.IModel
    - id: message
      type: Steeltoe.Messaging.IMessage
    content.vb: Protected Overridable Sub ActualInvokeListener(channel As IModel, message As IMessage)
  overload: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.ActualInvokeListener*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.DoInvokeListener(Steeltoe.Messaging.RabbitMQ.Listener.IChannelAwareMessageListener,RabbitMQ.Client.IModel,System.Collections.Generic.List{Steeltoe.Messaging.IMessage})
  commentId: M:Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.DoInvokeListener(Steeltoe.Messaging.RabbitMQ.Listener.IChannelAwareMessageListener,RabbitMQ.Client.IModel,System.Collections.Generic.List{Steeltoe.Messaging.IMessage})
  id: DoInvokeListener(Steeltoe.Messaging.RabbitMQ.Listener.IChannelAwareMessageListener,RabbitMQ.Client.IModel,System.Collections.Generic.List{Steeltoe.Messaging.IMessage})
  parent: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer
  langs:
  - csharp
  - vb
  name: DoInvokeListener(IChannelAwareMessageListener, IModel, List<IMessage>)
  nameWithType: AbstractMessageListenerContainer.DoInvokeListener(IChannelAwareMessageListener, IModel, List<IMessage>)
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.DoInvokeListener(Steeltoe.Messaging.RabbitMQ.Listener.IChannelAwareMessageListener, RabbitMQ.Client.IModel, System.Collections.Generic.List<Steeltoe.Messaging.IMessage>)
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Listener/AbstractMessageListenerContainer.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: DoInvokeListener
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Listener/AbstractMessageListenerContainer.cs
    startLine: 739
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Listener
  syntax:
    content: protected virtual void DoInvokeListener(IChannelAwareMessageListener listener, IModel channel, List<IMessage> data)
    parameters:
    - id: listener
      type: Steeltoe.Messaging.RabbitMQ.Listener.IChannelAwareMessageListener
    - id: channel
      type: RabbitMQ.Client.IModel
    - id: data
      type: System.Collections.Generic.List{Steeltoe.Messaging.IMessage}
    content.vb: Protected Overridable Sub DoInvokeListener(listener As IChannelAwareMessageListener, channel As IModel, data As List(Of IMessage))
  overload: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.DoInvokeListener*
  nameWithType.vb: AbstractMessageListenerContainer.DoInvokeListener(IChannelAwareMessageListener, IModel, List(Of IMessage))
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
  fullName.vb: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.DoInvokeListener(Steeltoe.Messaging.RabbitMQ.Listener.IChannelAwareMessageListener, RabbitMQ.Client.IModel, System.Collections.Generic.List(Of Steeltoe.Messaging.IMessage))
  name.vb: DoInvokeListener(IChannelAwareMessageListener, IModel, List(Of IMessage))
- uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.DoInvokeListener(Steeltoe.Messaging.RabbitMQ.Listener.IChannelAwareMessageListener,RabbitMQ.Client.IModel,Steeltoe.Messaging.IMessage)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.DoInvokeListener(Steeltoe.Messaging.RabbitMQ.Listener.IChannelAwareMessageListener,RabbitMQ.Client.IModel,Steeltoe.Messaging.IMessage)
  id: DoInvokeListener(Steeltoe.Messaging.RabbitMQ.Listener.IChannelAwareMessageListener,RabbitMQ.Client.IModel,Steeltoe.Messaging.IMessage)
  parent: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer
  langs:
  - csharp
  - vb
  name: DoInvokeListener(IChannelAwareMessageListener, IModel, IMessage)
  nameWithType: AbstractMessageListenerContainer.DoInvokeListener(IChannelAwareMessageListener, IModel, IMessage)
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.DoInvokeListener(Steeltoe.Messaging.RabbitMQ.Listener.IChannelAwareMessageListener, RabbitMQ.Client.IModel, Steeltoe.Messaging.IMessage)
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Listener/AbstractMessageListenerContainer.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: DoInvokeListener
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Listener/AbstractMessageListenerContainer.cs
    startLine: 764
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Listener
  syntax:
    content: protected virtual void DoInvokeListener(IChannelAwareMessageListener listener, IModel channel, IMessage message)
    parameters:
    - id: listener
      type: Steeltoe.Messaging.RabbitMQ.Listener.IChannelAwareMessageListener
    - id: channel
      type: RabbitMQ.Client.IModel
    - id: message
      type: Steeltoe.Messaging.IMessage
    content.vb: Protected Overridable Sub DoInvokeListener(listener As IChannelAwareMessageListener, channel As IModel, message As IMessage)
  overload: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.DoInvokeListener*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.DoInvokeListener(Steeltoe.Messaging.RabbitMQ.Listener.IMessageListener,System.Collections.Generic.List{Steeltoe.Messaging.IMessage})
  commentId: M:Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.DoInvokeListener(Steeltoe.Messaging.RabbitMQ.Listener.IMessageListener,System.Collections.Generic.List{Steeltoe.Messaging.IMessage})
  id: DoInvokeListener(Steeltoe.Messaging.RabbitMQ.Listener.IMessageListener,System.Collections.Generic.List{Steeltoe.Messaging.IMessage})
  parent: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer
  langs:
  - csharp
  - vb
  name: DoInvokeListener(IMessageListener, List<IMessage>)
  nameWithType: AbstractMessageListenerContainer.DoInvokeListener(IMessageListener, List<IMessage>)
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.DoInvokeListener(Steeltoe.Messaging.RabbitMQ.Listener.IMessageListener, System.Collections.Generic.List<Steeltoe.Messaging.IMessage>)
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Listener/AbstractMessageListenerContainer.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: DoInvokeListener
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Listener/AbstractMessageListenerContainer.cs
    startLine: 789
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Listener
  syntax:
    content: protected virtual void DoInvokeListener(IMessageListener listener, List<IMessage> data)
    parameters:
    - id: listener
      type: Steeltoe.Messaging.RabbitMQ.Listener.IMessageListener
    - id: data
      type: System.Collections.Generic.List{Steeltoe.Messaging.IMessage}
    content.vb: Protected Overridable Sub DoInvokeListener(listener As IMessageListener, data As List(Of IMessage))
  overload: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.DoInvokeListener*
  nameWithType.vb: AbstractMessageListenerContainer.DoInvokeListener(IMessageListener, List(Of IMessage))
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
  fullName.vb: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.DoInvokeListener(Steeltoe.Messaging.RabbitMQ.Listener.IMessageListener, System.Collections.Generic.List(Of Steeltoe.Messaging.IMessage))
  name.vb: DoInvokeListener(IMessageListener, List(Of IMessage))
- uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.DoInvokeListener(Steeltoe.Messaging.RabbitMQ.Listener.IMessageListener,Steeltoe.Messaging.IMessage)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.DoInvokeListener(Steeltoe.Messaging.RabbitMQ.Listener.IMessageListener,Steeltoe.Messaging.IMessage)
  id: DoInvokeListener(Steeltoe.Messaging.RabbitMQ.Listener.IMessageListener,Steeltoe.Messaging.IMessage)
  parent: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer
  langs:
  - csharp
  - vb
  name: DoInvokeListener(IMessageListener, IMessage)
  nameWithType: AbstractMessageListenerContainer.DoInvokeListener(IMessageListener, IMessage)
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.DoInvokeListener(Steeltoe.Messaging.RabbitMQ.Listener.IMessageListener, Steeltoe.Messaging.IMessage)
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Listener/AbstractMessageListenerContainer.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: DoInvokeListener
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Listener/AbstractMessageListenerContainer.cs
    startLine: 802
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Listener
  syntax:
    content: protected virtual void DoInvokeListener(IMessageListener listener, IMessage message)
    parameters:
    - id: listener
      type: Steeltoe.Messaging.RabbitMQ.Listener.IMessageListener
    - id: message
      type: Steeltoe.Messaging.IMessage
    content.vb: Protected Overridable Sub DoInvokeListener(listener As IMessageListener, message As IMessage)
  overload: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.DoInvokeListener*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.HandleChannelAwareTransaction(RabbitMQ.Client.IModel,RabbitMQ.Client.IModel@,Steeltoe.Messaging.RabbitMQ.Connection.RabbitResourceHolder@)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.HandleChannelAwareTransaction(RabbitMQ.Client.IModel,RabbitMQ.Client.IModel@,Steeltoe.Messaging.RabbitMQ.Connection.RabbitResourceHolder@)
  id: HandleChannelAwareTransaction(RabbitMQ.Client.IModel,RabbitMQ.Client.IModel@,Steeltoe.Messaging.RabbitMQ.Connection.RabbitResourceHolder@)
  parent: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer
  langs:
  - csharp
  - vb
  name: HandleChannelAwareTransaction(IModel, out IModel, out RabbitResourceHolder)
  nameWithType: AbstractMessageListenerContainer.HandleChannelAwareTransaction(IModel, out IModel, out RabbitResourceHolder)
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.HandleChannelAwareTransaction(RabbitMQ.Client.IModel, out RabbitMQ.Client.IModel, out Steeltoe.Messaging.RabbitMQ.Connection.RabbitResourceHolder)
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Listener/AbstractMessageListenerContainer.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: HandleChannelAwareTransaction
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Listener/AbstractMessageListenerContainer.cs
    startLine: 815
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Listener
  syntax:
    content: protected virtual bool HandleChannelAwareTransaction(IModel channel, out IModel channelToUse, out RabbitResourceHolder resourceHolder)
    parameters:
    - id: channel
      type: RabbitMQ.Client.IModel
    - id: channelToUse
      type: RabbitMQ.Client.IModel
    - id: resourceHolder
      type: Steeltoe.Messaging.RabbitMQ.Connection.RabbitResourceHolder
    return:
      type: System.Boolean
    content.vb: Protected Overridable Function HandleChannelAwareTransaction(channel As IModel, ByRef channelToUse As IModel, ByRef resourceHolder As RabbitResourceHolder) As Boolean
  overload: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.HandleChannelAwareTransaction*
  nameWithType.vb: AbstractMessageListenerContainer.HandleChannelAwareTransaction(IModel, ByRef IModel, ByRef RabbitResourceHolder)
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
  fullName.vb: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.HandleChannelAwareTransaction(RabbitMQ.Client.IModel, ByRef RabbitMQ.Client.IModel, ByRef Steeltoe.Messaging.RabbitMQ.Connection.RabbitResourceHolder)
  name.vb: HandleChannelAwareTransaction(IModel, ByRef IModel, ByRef RabbitResourceHolder)
- uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.WrapToListenerExecutionFailedExceptionIfNeeded(System.Exception,System.Collections.Generic.List{Steeltoe.Messaging.IMessage})
  commentId: M:Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.WrapToListenerExecutionFailedExceptionIfNeeded(System.Exception,System.Collections.Generic.List{Steeltoe.Messaging.IMessage})
  id: WrapToListenerExecutionFailedExceptionIfNeeded(System.Exception,System.Collections.Generic.List{Steeltoe.Messaging.IMessage})
  parent: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer
  langs:
  - csharp
  - vb
  name: WrapToListenerExecutionFailedExceptionIfNeeded(Exception, List<IMessage>)
  nameWithType: AbstractMessageListenerContainer.WrapToListenerExecutionFailedExceptionIfNeeded(Exception, List<IMessage>)
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.WrapToListenerExecutionFailedExceptionIfNeeded(System.Exception, System.Collections.Generic.List<Steeltoe.Messaging.IMessage>)
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Listener/AbstractMessageListenerContainer.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: WrapToListenerExecutionFailedExceptionIfNeeded
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Listener/AbstractMessageListenerContainer.cs
    startLine: 853
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Listener
  syntax:
    content: protected virtual ListenerExecutionFailedException WrapToListenerExecutionFailedExceptionIfNeeded(Exception exception, List<IMessage> data)
    parameters:
    - id: exception
      type: System.Exception
    - id: data
      type: System.Collections.Generic.List{Steeltoe.Messaging.IMessage}
    return:
      type: Steeltoe.Messaging.RabbitMQ.Listener.Exceptions.ListenerExecutionFailedException
    content.vb: Protected Overridable Function WrapToListenerExecutionFailedExceptionIfNeeded(exception As Exception, data As List(Of IMessage)) As ListenerExecutionFailedException
  overload: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.WrapToListenerExecutionFailedExceptionIfNeeded*
  nameWithType.vb: AbstractMessageListenerContainer.WrapToListenerExecutionFailedExceptionIfNeeded(Exception, List(Of IMessage))
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
  fullName.vb: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.WrapToListenerExecutionFailedExceptionIfNeeded(System.Exception, System.Collections.Generic.List(Of Steeltoe.Messaging.IMessage))
  name.vb: WrapToListenerExecutionFailedExceptionIfNeeded(Exception, List(Of IMessage))
- uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.WrapToListenerExecutionFailedExceptionIfNeeded(System.Exception,Steeltoe.Messaging.IMessage)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.WrapToListenerExecutionFailedExceptionIfNeeded(System.Exception,Steeltoe.Messaging.IMessage)
  id: WrapToListenerExecutionFailedExceptionIfNeeded(System.Exception,Steeltoe.Messaging.IMessage)
  parent: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer
  langs:
  - csharp
  - vb
  name: WrapToListenerExecutionFailedExceptionIfNeeded(Exception, IMessage)
  nameWithType: AbstractMessageListenerContainer.WrapToListenerExecutionFailedExceptionIfNeeded(Exception, IMessage)
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.WrapToListenerExecutionFailedExceptionIfNeeded(System.Exception, Steeltoe.Messaging.IMessage)
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Listener/AbstractMessageListenerContainer.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: WrapToListenerExecutionFailedExceptionIfNeeded
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Listener/AbstractMessageListenerContainer.cs
    startLine: 863
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Listener
  syntax:
    content: protected virtual ListenerExecutionFailedException WrapToListenerExecutionFailedExceptionIfNeeded(Exception exception, IMessage message)
    parameters:
    - id: exception
      type: System.Exception
    - id: message
      type: Steeltoe.Messaging.IMessage
    return:
      type: Steeltoe.Messaging.RabbitMQ.Listener.Exceptions.ListenerExecutionFailedException
    content.vb: Protected Overridable Function WrapToListenerExecutionFailedExceptionIfNeeded(exception As Exception, message As IMessage) As ListenerExecutionFailedException
  overload: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.WrapToListenerExecutionFailedExceptionIfNeeded*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.HandleListenerException(System.Exception)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.HandleListenerException(System.Exception)
  id: HandleListenerException(System.Exception)
  parent: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer
  langs:
  - csharp
  - vb
  name: HandleListenerException(Exception)
  nameWithType: AbstractMessageListenerContainer.HandleListenerException(Exception)
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.HandleListenerException(System.Exception)
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Listener/AbstractMessageListenerContainer.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: HandleListenerException
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Listener/AbstractMessageListenerContainer.cs
    startLine: 873
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Listener
  syntax:
    content: protected virtual void HandleListenerException(Exception exception)
    parameters:
    - id: exception
      type: System.Exception
    content.vb: Protected Overridable Sub HandleListenerException(exception As Exception)
  overload: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.HandleListenerException*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.UpdateLastReceive
  commentId: M:Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.UpdateLastReceive
  id: UpdateLastReceive
  parent: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer
  langs:
  - csharp
  - vb
  name: UpdateLastReceive()
  nameWithType: AbstractMessageListenerContainer.UpdateLastReceive()
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.UpdateLastReceive()
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Listener/AbstractMessageListenerContainer.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: UpdateLastReceive
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Listener/AbstractMessageListenerContainer.cs
    startLine: 889
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Listener
  syntax:
    content: protected virtual void UpdateLastReceive()
    content.vb: Protected Overridable Sub UpdateLastReceive
  overload: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.UpdateLastReceive*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.ConfigureAdminIfNeeded
  commentId: M:Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.ConfigureAdminIfNeeded
  id: ConfigureAdminIfNeeded
  parent: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer
  langs:
  - csharp
  - vb
  name: ConfigureAdminIfNeeded()
  nameWithType: AbstractMessageListenerContainer.ConfigureAdminIfNeeded()
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.ConfigureAdminIfNeeded()
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Listener/AbstractMessageListenerContainer.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: ConfigureAdminIfNeeded
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Listener/AbstractMessageListenerContainer.cs
    startLine: 897
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Listener
  syntax:
    content: protected virtual void ConfigureAdminIfNeeded()
    content.vb: Protected Overridable Sub ConfigureAdminIfNeeded
  overload: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.ConfigureAdminIfNeeded*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.CheckMismatchedQueues
  commentId: M:Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.CheckMismatchedQueues
  id: CheckMismatchedQueues
  parent: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer
  langs:
  - csharp
  - vb
  name: CheckMismatchedQueues()
  nameWithType: AbstractMessageListenerContainer.CheckMismatchedQueues()
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.CheckMismatchedQueues()
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Listener/AbstractMessageListenerContainer.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: CheckMismatchedQueues
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Listener/AbstractMessageListenerContainer.cs
    startLine: 932
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Listener
  syntax:
    content: protected virtual void CheckMismatchedQueues()
    content.vb: Protected Overridable Sub CheckMismatchedQueues
  overload: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.CheckMismatchedQueues*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.IsChannelLocallyTransacted
  commentId: P:Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.IsChannelLocallyTransacted
  id: IsChannelLocallyTransacted
  parent: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer
  langs:
  - csharp
  - vb
  name: IsChannelLocallyTransacted
  nameWithType: AbstractMessageListenerContainer.IsChannelLocallyTransacted
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.IsChannelLocallyTransacted
  type: Property
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Listener/AbstractMessageListenerContainer.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: IsChannelLocallyTransacted
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Listener/AbstractMessageListenerContainer.cs
    startLine: 973
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Listener
  syntax:
    content: protected virtual bool IsChannelLocallyTransacted { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Protected Overridable ReadOnly Property IsChannelLocallyTransacted As Boolean
  overload: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.IsChannelLocallyTransacted*
  modifiers.csharp:
  - protected
  - virtual
  - get
  modifiers.vb:
  - Protected
  - Overridable
  - ReadOnly
- uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.DoInitialize
  commentId: M:Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.DoInitialize
  id: DoInitialize
  parent: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer
  langs:
  - csharp
  - vb
  name: DoInitialize()
  nameWithType: AbstractMessageListenerContainer.DoInitialize()
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.DoInitialize()
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Listener/AbstractMessageListenerContainer.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: DoInitialize
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Listener/AbstractMessageListenerContainer.cs
    startLine: 975
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Listener
  syntax:
    content: protected abstract void DoInitialize()
    content.vb: Protected MustOverride Sub DoInitialize
  overload: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.DoInitialize*
  modifiers.csharp:
  - protected
  - abstract
  modifiers.vb:
  - Protected
  - MustOverride
- uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.DoShutdown
  commentId: M:Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.DoShutdown
  id: DoShutdown
  parent: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer
  langs:
  - csharp
  - vb
  name: DoShutdown()
  nameWithType: AbstractMessageListenerContainer.DoShutdown()
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.DoShutdown()
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Listener/AbstractMessageListenerContainer.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: DoShutdown
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Listener/AbstractMessageListenerContainer.cs
    startLine: 977
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Listener
  syntax:
    content: protected abstract void DoShutdown()
    content.vb: Protected MustOverride Sub DoShutdown
  overload: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.DoShutdown*
  modifiers.csharp:
  - protected
  - abstract
  modifiers.vb:
  - Protected
  - MustOverride
- uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.DoStart
  commentId: M:Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.DoStart
  id: DoStart
  parent: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer
  langs:
  - csharp
  - vb
  name: DoStart()
  nameWithType: AbstractMessageListenerContainer.DoStart()
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.DoStart()
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Listener/AbstractMessageListenerContainer.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: DoStart
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Listener/AbstractMessageListenerContainer.cs
    startLine: 979
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Listener
  syntax:
    content: protected virtual void DoStart()
    content.vb: Protected Overridable Sub DoStart
  overload: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.DoStart*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.DoStop
  commentId: M:Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.DoStop
  id: DoStop
  parent: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer
  langs:
  - csharp
  - vb
  name: DoStop()
  nameWithType: AbstractMessageListenerContainer.DoStop()
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.DoStop()
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Listener/AbstractMessageListenerContainer.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: DoStop
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Listener/AbstractMessageListenerContainer.cs
    startLine: 990
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Listener
  syntax:
    content: protected virtual void DoStop()
    content.vb: Protected Overridable Sub DoStop
  overload: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.DoStop*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.ValidateConfiguration
  commentId: M:Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.ValidateConfiguration
  id: ValidateConfiguration
  parent: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer
  langs:
  - csharp
  - vb
  name: ValidateConfiguration()
  nameWithType: AbstractMessageListenerContainer.ValidateConfiguration()
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.ValidateConfiguration()
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Listener/AbstractMessageListenerContainer.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: ValidateConfiguration
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Listener/AbstractMessageListenerContainer.cs
    startLine: 995
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Listener
  syntax:
    content: protected virtual void ValidateConfiguration()
    content.vb: Protected Overridable Sub ValidateConfiguration
  overload: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.ValidateConfiguration*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.GetRoutingConnectionFactory
  commentId: M:Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.GetRoutingConnectionFactory
  id: GetRoutingConnectionFactory
  parent: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer
  langs:
  - csharp
  - vb
  name: GetRoutingConnectionFactory()
  nameWithType: AbstractMessageListenerContainer.GetRoutingConnectionFactory()
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.GetRoutingConnectionFactory()
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Listener/AbstractMessageListenerContainer.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: GetRoutingConnectionFactory
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Listener/AbstractMessageListenerContainer.cs
    startLine: 1014
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Listener
  syntax:
    content: protected virtual IRoutingConnectionFactory GetRoutingConnectionFactory()
    return:
      type: Steeltoe.Messaging.RabbitMQ.Connection.IRoutingConnectionFactory
    content.vb: Protected Overridable Function GetRoutingConnectionFactory As IRoutingConnectionFactory
  overload: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.GetRoutingConnectionFactory*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.LastReceive
  commentId: P:Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.LastReceive
  id: LastReceive
  parent: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer
  langs:
  - csharp
  - vb
  name: LastReceive
  nameWithType: AbstractMessageListenerContainer.LastReceive
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.LastReceive
  type: Property
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Listener/AbstractMessageListenerContainer.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: LastReceive
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Listener/AbstractMessageListenerContainer.cs
    startLine: 1019
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Listener
  syntax:
    content: protected virtual long LastReceive { get; }
    parameters: []
    return:
      type: System.Int64
    content.vb: Protected Overridable ReadOnly Property LastReceive As Long
  overload: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.LastReceive*
  modifiers.csharp:
  - protected
  - virtual
  - get
  modifiers.vb:
  - Protected
  - Overridable
  - ReadOnly
- uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.ForceCloseChannel
  commentId: P:Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.ForceCloseChannel
  id: ForceCloseChannel
  parent: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer
  langs:
  - csharp
  - vb
  name: ForceCloseChannel
  nameWithType: AbstractMessageListenerContainer.ForceCloseChannel
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.ForceCloseChannel
  type: Property
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Listener/AbstractMessageListenerContainer.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: ForceCloseChannel
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Listener/AbstractMessageListenerContainer.cs
    startLine: 1021
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Listener
  syntax:
    content: protected virtual bool ForceCloseChannel { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Protected Overridable Property ForceCloseChannel As Boolean
  overload: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.ForceCloseChannel*
  modifiers.csharp:
  - protected
  - virtual
  - get
  - set
  modifiers.vb:
  - Protected
  - Overridable
- uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.GetRoutingLookupKey
  commentId: M:Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.GetRoutingLookupKey
  id: GetRoutingLookupKey
  parent: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer
  langs:
  - csharp
  - vb
  name: GetRoutingLookupKey()
  nameWithType: AbstractMessageListenerContainer.GetRoutingLookupKey()
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.GetRoutingLookupKey()
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Listener/AbstractMessageListenerContainer.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: GetRoutingLookupKey
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Listener/AbstractMessageListenerContainer.cs
    startLine: 1023
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Listener
  syntax:
    content: protected virtual string GetRoutingLookupKey()
    return:
      type: System.String
    content.vb: Protected Overridable Function GetRoutingLookupKey As String
  overload: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.GetRoutingLookupKey*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.CheckMessageListener(System.Object)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.CheckMessageListener(System.Object)
  id: CheckMessageListener(System.Object)
  parent: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer
  langs:
  - csharp
  - vb
  name: CheckMessageListener(Object)
  nameWithType: AbstractMessageListenerContainer.CheckMessageListener(Object)
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.CheckMessageListener(System.Object)
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Listener/AbstractMessageListenerContainer.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: CheckMessageListener
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Listener/AbstractMessageListenerContainer.cs
    startLine: 1028
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Listener
  syntax:
    content: protected virtual void CheckMessageListener(object listener)
    parameters:
    - id: listener
      type: System.Object
    content.vb: Protected Overridable Sub CheckMessageListener(listener As Object)
  overload: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.CheckMessageListener*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.GetQueueNamesAsSet
  commentId: M:Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.GetQueueNamesAsSet
  id: GetQueueNamesAsSet
  parent: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer
  langs:
  - csharp
  - vb
  name: GetQueueNamesAsSet()
  nameWithType: AbstractMessageListenerContainer.GetQueueNamesAsSet()
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.GetQueueNamesAsSet()
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Listener/AbstractMessageListenerContainer.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: GetQueueNamesAsSet
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Listener/AbstractMessageListenerContainer.cs
    startLine: 1037
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Listener
  syntax:
    content: protected virtual ISet<string> GetQueueNamesAsSet()
    return:
      type: System.Collections.Generic.ISet{System.String}
    content.vb: Protected Overridable Function GetQueueNamesAsSet As ISet(Of String)
  overload: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.GetQueueNamesAsSet*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.GetQueueNamesToQueues
  commentId: M:Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.GetQueueNamesToQueues
  id: GetQueueNamesToQueues
  parent: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer
  langs:
  - csharp
  - vb
  name: GetQueueNamesToQueues()
  nameWithType: AbstractMessageListenerContainer.GetQueueNamesToQueues()
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.GetQueueNamesToQueues()
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Listener/AbstractMessageListenerContainer.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: GetQueueNamesToQueues
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Listener/AbstractMessageListenerContainer.cs
    startLine: 1042
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Listener
  syntax:
    content: protected virtual Dictionary<string, IQueue> GetQueueNamesToQueues()
    return:
      type: System.Collections.Generic.Dictionary{System.String,Steeltoe.Messaging.RabbitMQ.Config.IQueue}
    content.vb: Protected Overridable Function GetQueueNamesToQueues As Dictionary(Of String, IQueue)
  overload: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.GetQueueNamesToQueues*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.CauseChainHasImmediateAcknowledgeRabbitException(System.Exception)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.CauseChainHasImmediateAcknowledgeRabbitException(System.Exception)
  id: CauseChainHasImmediateAcknowledgeRabbitException(System.Exception)
  parent: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer
  langs:
  - csharp
  - vb
  name: CauseChainHasImmediateAcknowledgeRabbitException(Exception)
  nameWithType: AbstractMessageListenerContainer.CauseChainHasImmediateAcknowledgeRabbitException(Exception)
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.CauseChainHasImmediateAcknowledgeRabbitException(System.Exception)
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Listener/AbstractMessageListenerContainer.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: CauseChainHasImmediateAcknowledgeRabbitException
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Listener/AbstractMessageListenerContainer.cs
    startLine: 1047
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Listener
  syntax:
    content: protected virtual bool CauseChainHasImmediateAcknowledgeRabbitException(Exception exception)
    parameters:
    - id: exception
      type: System.Exception
    return:
      type: System.Boolean
    content.vb: Protected Overridable Function CauseChainHasImmediateAcknowledgeRabbitException(exception As Exception) As Boolean
  overload: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.CauseChainHasImmediateAcknowledgeRabbitException*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.PrepareHolderForRollback(Steeltoe.Messaging.RabbitMQ.Connection.RabbitResourceHolder,System.Exception)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.PrepareHolderForRollback(Steeltoe.Messaging.RabbitMQ.Connection.RabbitResourceHolder,System.Exception)
  id: PrepareHolderForRollback(Steeltoe.Messaging.RabbitMQ.Connection.RabbitResourceHolder,System.Exception)
  parent: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer
  langs:
  - csharp
  - vb
  name: PrepareHolderForRollback(RabbitResourceHolder, Exception)
  nameWithType: AbstractMessageListenerContainer.PrepareHolderForRollback(RabbitResourceHolder, Exception)
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.PrepareHolderForRollback(Steeltoe.Messaging.RabbitMQ.Connection.RabbitResourceHolder, System.Exception)
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Listener/AbstractMessageListenerContainer.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: PrepareHolderForRollback
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Listener/AbstractMessageListenerContainer.cs
    startLine: 1070
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Listener
  syntax:
    content: protected virtual void PrepareHolderForRollback(RabbitResourceHolder resourceHolder, Exception exception)
    parameters:
    - id: resourceHolder
      type: Steeltoe.Messaging.RabbitMQ.Connection.RabbitResourceHolder
    - id: exception
      type: System.Exception
    content.vb: Protected Overridable Sub PrepareHolderForRollback(resourceHolder As RabbitResourceHolder, exception As Exception)
  overload: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.PrepareHolderForRollback*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
references:
- uid: Steeltoe.Messaging.RabbitMQ.Listener
  commentId: N:Steeltoe.Messaging.RabbitMQ.Listener
  name: Steeltoe.Messaging.RabbitMQ.Listener
  nameWithType: Steeltoe.Messaging.RabbitMQ.Listener
  fullName: Steeltoe.Messaging.RabbitMQ.Listener
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Steeltoe.Messaging.RabbitMQ.Listener.IMessageListenerContainer
  commentId: T:Steeltoe.Messaging.RabbitMQ.Listener.IMessageListenerContainer
  parent: Steeltoe.Messaging.RabbitMQ.Listener
  name: IMessageListenerContainer
  nameWithType: IMessageListenerContainer
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.IMessageListenerContainer
- uid: Steeltoe.Common.Lifecycle.ISmartLifecycle
  commentId: T:Steeltoe.Common.Lifecycle.ISmartLifecycle
  parent: Steeltoe.Common.Lifecycle
  name: ISmartLifecycle
  nameWithType: ISmartLifecycle
  fullName: Steeltoe.Common.Lifecycle.ISmartLifecycle
- uid: Steeltoe.Common.Lifecycle.ILifecycle
  commentId: T:Steeltoe.Common.Lifecycle.ILifecycle
  parent: Steeltoe.Common.Lifecycle
  name: ILifecycle
  nameWithType: ILifecycle
  fullName: Steeltoe.Common.Lifecycle.ILifecycle
- uid: Steeltoe.Common.Lifecycle.IPhased
  commentId: T:Steeltoe.Common.Lifecycle.IPhased
  parent: Steeltoe.Common.Lifecycle
  name: IPhased
  nameWithType: IPhased
  fullName: Steeltoe.Common.Lifecycle.IPhased
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: Steeltoe.Common.Services.IServiceNameAware
  commentId: T:Steeltoe.Common.Services.IServiceNameAware
  parent: Steeltoe.Common.Services
  name: IServiceNameAware
  nameWithType: IServiceNameAware
  fullName: Steeltoe.Common.Services.IServiceNameAware
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Steeltoe.Common.Lifecycle
  commentId: N:Steeltoe.Common.Lifecycle
  name: Steeltoe.Common.Lifecycle
  nameWithType: Steeltoe.Common.Lifecycle
  fullName: Steeltoe.Common.Lifecycle
- uid: Steeltoe.Common.Services
  commentId: N:Steeltoe.Common.Services
  name: Steeltoe.Common.Services
  nameWithType: Steeltoe.Common.Services
  fullName: Steeltoe.Common.Services
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.Extensions.Logging.ILogger
  commentId: T:Microsoft.Extensions.Logging.ILogger
  parent: Microsoft.Extensions.Logging
  isExternal: true
  name: ILogger
  nameWithType: ILogger
  fullName: Microsoft.Extensions.Logging.ILogger
- uid: Microsoft.Extensions.Logging
  commentId: N:Microsoft.Extensions.Logging
  isExternal: true
  name: Microsoft.Extensions.Logging
  nameWithType: Microsoft.Extensions.Logging
  fullName: Microsoft.Extensions.Logging
- uid: Microsoft.Extensions.Logging.ILoggerFactory
  commentId: T:Microsoft.Extensions.Logging.ILoggerFactory
  parent: Microsoft.Extensions.Logging
  isExternal: true
  name: ILoggerFactory
  nameWithType: ILoggerFactory
  fullName: Microsoft.Extensions.Logging.ILoggerFactory
- uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.#ctor*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.#ctor
  name: AbstractMessageListenerContainer
  nameWithType: AbstractMessageListenerContainer.AbstractMessageListenerContainer
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.AbstractMessageListenerContainer
- uid: Steeltoe.Common.Contexts.IApplicationContext
  commentId: T:Steeltoe.Common.Contexts.IApplicationContext
  parent: Steeltoe.Common.Contexts
  name: IApplicationContext
  nameWithType: IApplicationContext
  fullName: Steeltoe.Common.Contexts.IApplicationContext
- uid: Steeltoe.Messaging.RabbitMQ.Connection.IConnectionFactory
  commentId: T:Steeltoe.Messaging.RabbitMQ.Connection.IConnectionFactory
  parent: Steeltoe.Messaging.RabbitMQ.Connection
  name: IConnectionFactory
  nameWithType: IConnectionFactory
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.IConnectionFactory
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Steeltoe.Common.Contexts
  commentId: N:Steeltoe.Common.Contexts
  name: Steeltoe.Common.Contexts
  nameWithType: Steeltoe.Common.Contexts
  fullName: Steeltoe.Common.Contexts
- uid: Steeltoe.Messaging.RabbitMQ.Connection
  commentId: N:Steeltoe.Messaging.RabbitMQ.Connection
  name: Steeltoe.Messaging.RabbitMQ.Connection
  nameWithType: Steeltoe.Messaging.RabbitMQ.Connection
  fullName: Steeltoe.Messaging.RabbitMQ.Connection
- uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.ConnectionFactory*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.ConnectionFactory
  name: ConnectionFactory
  nameWithType: AbstractMessageListenerContainer.ConnectionFactory
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.ConnectionFactory
- uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.IsChannelTransacted*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.IsChannelTransacted
  name: IsChannelTransacted
  nameWithType: AbstractMessageListenerContainer.IsChannelTransacted
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.IsChannelTransacted
- uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.ApplicationContext*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.ApplicationContext
  name: ApplicationContext
  nameWithType: AbstractMessageListenerContainer.ApplicationContext
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.ApplicationContext
- uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.AcknowledgeMode*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.AcknowledgeMode
  name: AcknowledgeMode
  nameWithType: AbstractMessageListenerContainer.AcknowledgeMode
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.AcknowledgeMode
- uid: Steeltoe.Messaging.RabbitMQ.Core.AcknowledgeMode
  commentId: T:Steeltoe.Messaging.RabbitMQ.Core.AcknowledgeMode
  parent: Steeltoe.Messaging.RabbitMQ.Core
  name: AcknowledgeMode
  nameWithType: AcknowledgeMode
  fullName: Steeltoe.Messaging.RabbitMQ.Core.AcknowledgeMode
- uid: Steeltoe.Messaging.RabbitMQ.Core
  commentId: N:Steeltoe.Messaging.RabbitMQ.Core
  name: Steeltoe.Messaging.RabbitMQ.Core
  nameWithType: Steeltoe.Messaging.RabbitMQ.Core
  fullName: Steeltoe.Messaging.RabbitMQ.Core
- uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.ServiceName*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.ServiceName
  name: ServiceName
  nameWithType: AbstractMessageListenerContainer.ServiceName
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.ServiceName
- uid: Steeltoe.Common.Services.IServiceNameAware.ServiceName
  commentId: P:Steeltoe.Common.Services.IServiceNameAware.ServiceName
  parent: Steeltoe.Common.Services.IServiceNameAware
  name: ServiceName
  nameWithType: IServiceNameAware.ServiceName
  fullName: Steeltoe.Common.Services.IServiceNameAware.ServiceName
- uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.ExposeListenerChannel*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.ExposeListenerChannel
  name: ExposeListenerChannel
  nameWithType: AbstractMessageListenerContainer.ExposeListenerChannel
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.ExposeListenerChannel
- uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.MessageListener*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.MessageListener
  name: MessageListener
  nameWithType: AbstractMessageListenerContainer.MessageListener
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.MessageListener
- uid: Steeltoe.Messaging.RabbitMQ.Listener.IMessageListener
  commentId: T:Steeltoe.Messaging.RabbitMQ.Listener.IMessageListener
  parent: Steeltoe.Messaging.RabbitMQ.Listener
  name: IMessageListener
  nameWithType: IMessageListener
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.IMessageListener
- uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.ErrorHandler*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.ErrorHandler
  name: ErrorHandler
  nameWithType: AbstractMessageListenerContainer.ErrorHandler
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.ErrorHandler
- uid: Steeltoe.Common.Util.IErrorHandler
  commentId: T:Steeltoe.Common.Util.IErrorHandler
  parent: Steeltoe.Common.Util
  name: IErrorHandler
  nameWithType: IErrorHandler
  fullName: Steeltoe.Common.Util.IErrorHandler
- uid: Steeltoe.Common.Util
  commentId: N:Steeltoe.Common.Util
  name: Steeltoe.Common.Util
  nameWithType: Steeltoe.Common.Util
  fullName: Steeltoe.Common.Util
- uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.IsDeBatchingEnabled*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.IsDeBatchingEnabled
  name: IsDeBatchingEnabled
  nameWithType: AbstractMessageListenerContainer.IsDeBatchingEnabled
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.IsDeBatchingEnabled
- uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.AfterReceivePostProcessors*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.AfterReceivePostProcessors
  name: AfterReceivePostProcessors
  nameWithType: AbstractMessageListenerContainer.AfterReceivePostProcessors
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.AfterReceivePostProcessors
- uid: System.Collections.Generic.IList{Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor}
  commentId: T:System.Collections.Generic.IList{Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<IMessagePostProcessor>
  nameWithType: IList<IMessagePostProcessor>
  fullName: System.Collections.Generic.IList<Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor>
  nameWithType.vb: IList(Of IMessagePostProcessor)
  fullName.vb: System.Collections.Generic.IList(Of Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor)
  name.vb: IList(Of IMessagePostProcessor)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor
    name: IMessagePostProcessor
    nameWithType: IMessagePostProcessor
    fullName: Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor
    name: IMessagePostProcessor
    nameWithType: IMessagePostProcessor
    fullName: Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullName.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.IsAutoStartup*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.IsAutoStartup
  name: IsAutoStartup
  nameWithType: AbstractMessageListenerContainer.IsAutoStartup
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.IsAutoStartup
- uid: Steeltoe.Common.Lifecycle.ISmartLifecycle.IsAutoStartup
  commentId: P:Steeltoe.Common.Lifecycle.ISmartLifecycle.IsAutoStartup
  parent: Steeltoe.Common.Lifecycle.ISmartLifecycle
  name: IsAutoStartup
  nameWithType: ISmartLifecycle.IsAutoStartup
  fullName: Steeltoe.Common.Lifecycle.ISmartLifecycle.IsAutoStartup
- uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.Phase*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.Phase
  name: Phase
  nameWithType: AbstractMessageListenerContainer.Phase
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.Phase
- uid: Steeltoe.Common.Lifecycle.IPhased.Phase
  commentId: P:Steeltoe.Common.Lifecycle.IPhased.Phase
  parent: Steeltoe.Common.Lifecycle.IPhased
  name: Phase
  nameWithType: IPhased.Phase
  fullName: Steeltoe.Common.Lifecycle.IPhased.Phase
- uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.LookupKeyQualifier*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.LookupKeyQualifier
  name: LookupKeyQualifier
  nameWithType: AbstractMessageListenerContainer.LookupKeyQualifier
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.LookupKeyQualifier
- uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.ListenerId*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.ListenerId
  name: ListenerId
  nameWithType: AbstractMessageListenerContainer.ListenerId
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.ListenerId
- uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.ConsumerTagStrategy*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.ConsumerTagStrategy
  name: ConsumerTagStrategy
  nameWithType: AbstractMessageListenerContainer.ConsumerTagStrategy
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.ConsumerTagStrategy
- uid: Steeltoe.Messaging.RabbitMQ.Core.IConsumerTagStrategy
  commentId: T:Steeltoe.Messaging.RabbitMQ.Core.IConsumerTagStrategy
  parent: Steeltoe.Messaging.RabbitMQ.Core
  name: IConsumerTagStrategy
  nameWithType: IConsumerTagStrategy
  fullName: Steeltoe.Messaging.RabbitMQ.Core.IConsumerTagStrategy
- uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.ConsumerArguments*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.ConsumerArguments
  name: ConsumerArguments
  nameWithType: AbstractMessageListenerContainer.ConsumerArguments
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.ConsumerArguments
- uid: System.Collections.Generic.Dictionary{System.String,System.Object}
  commentId: T:System.Collections.Generic.Dictionary{System.String,System.Object}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  name: Dictionary<String, Object>
  nameWithType: Dictionary<String, Object>
  fullName: System.Collections.Generic.Dictionary<System.String, System.Object>
  nameWithType.vb: Dictionary(Of String, Object)
  fullName.vb: System.Collections.Generic.Dictionary(Of System.String, System.Object)
  name.vb: Dictionary(Of String, Object)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Dictionary`2
  commentId: T:System.Collections.Generic.Dictionary`2
  isExternal: true
  name: Dictionary<TKey, TValue>
  nameWithType: Dictionary<TKey, TValue>
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>
  nameWithType.vb: Dictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue)
  name.vb: Dictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.Exclusive*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.Exclusive
  name: Exclusive
  nameWithType: AbstractMessageListenerContainer.Exclusive
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.Exclusive
- uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.NoLocal*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.NoLocal
  name: NoLocal
  nameWithType: AbstractMessageListenerContainer.NoLocal
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.NoLocal
- uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.DefaultRequeueRejected*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.DefaultRequeueRejected
  name: DefaultRequeueRejected
  nameWithType: AbstractMessageListenerContainer.DefaultRequeueRejected
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.DefaultRequeueRejected
- uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.PrefetchCount*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.PrefetchCount
  name: PrefetchCount
  nameWithType: AbstractMessageListenerContainer.PrefetchCount
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.PrefetchCount
- uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.ShutdownTimeout*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.ShutdownTimeout
  name: ShutdownTimeout
  nameWithType: AbstractMessageListenerContainer.ShutdownTimeout
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.ShutdownTimeout
- uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.IdleEventInterval*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.IdleEventInterval
  name: IdleEventInterval
  nameWithType: AbstractMessageListenerContainer.IdleEventInterval
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.IdleEventInterval
- uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.RecoveryInterval*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.RecoveryInterval
  name: RecoveryInterval
  nameWithType: AbstractMessageListenerContainer.RecoveryInterval
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.RecoveryInterval
- uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.RecoveryBackOff*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.RecoveryBackOff
  name: RecoveryBackOff
  nameWithType: AbstractMessageListenerContainer.RecoveryBackOff
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.RecoveryBackOff
- uid: Steeltoe.Common.Util.IBackOff
  commentId: T:Steeltoe.Common.Util.IBackOff
  parent: Steeltoe.Common.Util
  name: IBackOff
  nameWithType: IBackOff
  fullName: Steeltoe.Common.Util.IBackOff
- uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.MessageHeadersConverter*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.MessageHeadersConverter
  name: MessageHeadersConverter
  nameWithType: AbstractMessageListenerContainer.MessageHeadersConverter
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.MessageHeadersConverter
- uid: Steeltoe.Messaging.RabbitMQ.Support.IMessageHeadersConverter
  commentId: T:Steeltoe.Messaging.RabbitMQ.Support.IMessageHeadersConverter
  parent: Steeltoe.Messaging.RabbitMQ.Support
  name: IMessageHeadersConverter
  nameWithType: IMessageHeadersConverter
  fullName: Steeltoe.Messaging.RabbitMQ.Support.IMessageHeadersConverter
- uid: Steeltoe.Messaging.RabbitMQ.Support
  commentId: N:Steeltoe.Messaging.RabbitMQ.Support
  name: Steeltoe.Messaging.RabbitMQ.Support
  nameWithType: Steeltoe.Messaging.RabbitMQ.Support
  fullName: Steeltoe.Messaging.RabbitMQ.Support
- uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.RabbitAdmin*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.RabbitAdmin
  name: RabbitAdmin
  nameWithType: AbstractMessageListenerContainer.RabbitAdmin
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.RabbitAdmin
- uid: Steeltoe.Messaging.RabbitMQ.Core.IRabbitAdmin
  commentId: T:Steeltoe.Messaging.RabbitMQ.Core.IRabbitAdmin
  parent: Steeltoe.Messaging.RabbitMQ.Core
  name: IRabbitAdmin
  nameWithType: IRabbitAdmin
  fullName: Steeltoe.Messaging.RabbitMQ.Core.IRabbitAdmin
- uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.MissingQueuesFatal*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.MissingQueuesFatal
  name: MissingQueuesFatal
  nameWithType: AbstractMessageListenerContainer.MissingQueuesFatal
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.MissingQueuesFatal
- uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.MismatchedQueuesFatal*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.MismatchedQueuesFatal
  name: MismatchedQueuesFatal
  nameWithType: AbstractMessageListenerContainer.MismatchedQueuesFatal
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.MismatchedQueuesFatal
- uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.PossibleAuthenticationFailureFatal*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.PossibleAuthenticationFailureFatal
  name: PossibleAuthenticationFailureFatal
  nameWithType: AbstractMessageListenerContainer.PossibleAuthenticationFailureFatal
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.PossibleAuthenticationFailureFatal
- uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.AutoDeclare*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.AutoDeclare
  name: AutoDeclare
  nameWithType: AbstractMessageListenerContainer.AutoDeclare
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.AutoDeclare
- uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.FailedDeclarationRetryInterval*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.FailedDeclarationRetryInterval
  name: FailedDeclarationRetryInterval
  nameWithType: AbstractMessageListenerContainer.FailedDeclarationRetryInterval
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.FailedDeclarationRetryInterval
- uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.StatefulRetryFatalWithNullMessageId*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.StatefulRetryFatalWithNullMessageId
  name: StatefulRetryFatalWithNullMessageId
  nameWithType: AbstractMessageListenerContainer.StatefulRetryFatalWithNullMessageId
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.StatefulRetryFatalWithNullMessageId
- uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.ExclusiveConsumerExceptionLogger*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.ExclusiveConsumerExceptionLogger
  name: ExclusiveConsumerExceptionLogger
  nameWithType: AbstractMessageListenerContainer.ExclusiveConsumerExceptionLogger
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.ExclusiveConsumerExceptionLogger
- uid: Steeltoe.Messaging.RabbitMQ.Core.IConditionalExceptionLogger
  commentId: T:Steeltoe.Messaging.RabbitMQ.Core.IConditionalExceptionLogger
  parent: Steeltoe.Messaging.RabbitMQ.Core
  name: IConditionalExceptionLogger
  nameWithType: IConditionalExceptionLogger
  fullName: Steeltoe.Messaging.RabbitMQ.Core.IConditionalExceptionLogger
- uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.AlwaysRequeueWithTxManagerRollback*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.AlwaysRequeueWithTxManagerRollback
  name: AlwaysRequeueWithTxManagerRollback
  nameWithType: AbstractMessageListenerContainer.AlwaysRequeueWithTxManagerRollback
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.AlwaysRequeueWithTxManagerRollback
- uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.BatchingStrategy*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.BatchingStrategy
  name: BatchingStrategy
  nameWithType: AbstractMessageListenerContainer.BatchingStrategy
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.BatchingStrategy
- uid: Steeltoe.Messaging.RabbitMQ.Batch.IBatchingStrategy
  commentId: T:Steeltoe.Messaging.RabbitMQ.Batch.IBatchingStrategy
  parent: Steeltoe.Messaging.RabbitMQ.Batch
  name: IBatchingStrategy
  nameWithType: IBatchingStrategy
  fullName: Steeltoe.Messaging.RabbitMQ.Batch.IBatchingStrategy
- uid: Steeltoe.Messaging.RabbitMQ.Batch
  commentId: N:Steeltoe.Messaging.RabbitMQ.Batch
  name: Steeltoe.Messaging.RabbitMQ.Batch
  nameWithType: Steeltoe.Messaging.RabbitMQ.Batch
  fullName: Steeltoe.Messaging.RabbitMQ.Batch
- uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.IsRunning*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.IsRunning
  name: IsRunning
  nameWithType: AbstractMessageListenerContainer.IsRunning
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.IsRunning
- uid: Steeltoe.Common.Lifecycle.ILifecycle.IsRunning
  commentId: P:Steeltoe.Common.Lifecycle.ILifecycle.IsRunning
  parent: Steeltoe.Common.Lifecycle.ILifecycle
  name: IsRunning
  nameWithType: ILifecycle.IsRunning
  fullName: Steeltoe.Common.Lifecycle.ILifecycle.IsRunning
- uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.IsActive*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.IsActive
  name: IsActive
  nameWithType: AbstractMessageListenerContainer.IsActive
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.IsActive
- uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.IsLazyLoad*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.IsLazyLoad
  name: IsLazyLoad
  nameWithType: AbstractMessageListenerContainer.IsLazyLoad
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.IsLazyLoad
- uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.Initialized*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.Initialized
  name: Initialized
  nameWithType: AbstractMessageListenerContainer.Initialized
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.Initialized
- uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.TransactionManager*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.TransactionManager
  name: TransactionManager
  nameWithType: AbstractMessageListenerContainer.TransactionManager
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.TransactionManager
- uid: Steeltoe.Common.Transaction.IPlatformTransactionManager
  commentId: T:Steeltoe.Common.Transaction.IPlatformTransactionManager
  parent: Steeltoe.Common.Transaction
  name: IPlatformTransactionManager
  nameWithType: IPlatformTransactionManager
  fullName: Steeltoe.Common.Transaction.IPlatformTransactionManager
- uid: Steeltoe.Common.Transaction
  commentId: N:Steeltoe.Common.Transaction
  name: Steeltoe.Common.Transaction
  nameWithType: Steeltoe.Common.Transaction
  fullName: Steeltoe.Common.Transaction
- uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.TransactionAttribute*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.TransactionAttribute
  name: TransactionAttribute
  nameWithType: AbstractMessageListenerContainer.TransactionAttribute
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.TransactionAttribute
- uid: Steeltoe.Common.Transaction.ITransactionAttribute
  commentId: T:Steeltoe.Common.Transaction.ITransactionAttribute
  parent: Steeltoe.Common.Transaction
  name: ITransactionAttribute
  nameWithType: ITransactionAttribute
  fullName: Steeltoe.Common.Transaction.ITransactionAttribute
- uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.SetQueueNames*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.SetQueueNames
  name: SetQueueNames
  nameWithType: AbstractMessageListenerContainer.SetQueueNames
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.SetQueueNames
- uid: System.String[]
  isExternal: true
  name: String[]
  nameWithType: String[]
  fullName: System.String[]
  nameWithType.vb: String()
  fullName.vb: System.String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.GetQueueNames*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.GetQueueNames
  name: GetQueueNames
  nameWithType: AbstractMessageListenerContainer.GetQueueNames
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.GetQueueNames
- uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.SetQueues*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.SetQueues
  name: SetQueues
  nameWithType: AbstractMessageListenerContainer.SetQueues
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.SetQueues
- uid: Steeltoe.Messaging.RabbitMQ.Config.IQueue[]
  isExternal: true
  name: IQueue[]
  nameWithType: IQueue[]
  fullName: Steeltoe.Messaging.RabbitMQ.Config.IQueue[]
  nameWithType.vb: IQueue()
  fullName.vb: Steeltoe.Messaging.RabbitMQ.Config.IQueue()
  name.vb: IQueue()
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Config.IQueue
    name: IQueue
    nameWithType: IQueue
    fullName: Steeltoe.Messaging.RabbitMQ.Config.IQueue
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Config.IQueue
    name: IQueue
    nameWithType: IQueue
    fullName: Steeltoe.Messaging.RabbitMQ.Config.IQueue
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.AddQueueNames*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.AddQueueNames
  name: AddQueueNames
  nameWithType: AbstractMessageListenerContainer.AddQueueNames
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.AddQueueNames
- uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.AddQueues*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.AddQueues
  name: AddQueues
  nameWithType: AbstractMessageListenerContainer.AddQueues
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.AddQueues
- uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.RemoveQueueNames*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.RemoveQueueNames
  name: RemoveQueueNames
  nameWithType: AbstractMessageListenerContainer.RemoveQueueNames
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.RemoveQueueNames
- uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.RemoveQueues*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.RemoveQueues
  name: RemoveQueues
  nameWithType: AbstractMessageListenerContainer.RemoveQueues
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.RemoveQueues
- uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.SetAfterReceivePostProcessors*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.SetAfterReceivePostProcessors
  name: SetAfterReceivePostProcessors
  nameWithType: AbstractMessageListenerContainer.SetAfterReceivePostProcessors
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.SetAfterReceivePostProcessors
- uid: Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor[]
  isExternal: true
  name: IMessagePostProcessor[]
  nameWithType: IMessagePostProcessor[]
  fullName: Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor[]
  nameWithType.vb: IMessagePostProcessor()
  fullName.vb: Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor()
  name.vb: IMessagePostProcessor()
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor
    name: IMessagePostProcessor
    nameWithType: IMessagePostProcessor
    fullName: Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor
    name: IMessagePostProcessor
    nameWithType: IMessagePostProcessor
    fullName: Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.AddAfterReceivePostProcessors*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.AddAfterReceivePostProcessors
  name: AddAfterReceivePostProcessors
  nameWithType: AbstractMessageListenerContainer.AddAfterReceivePostProcessors
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.AddAfterReceivePostProcessors
- uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.RemoveAfterReceivePostProcessor*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.RemoveAfterReceivePostProcessor
  name: RemoveAfterReceivePostProcessor
  nameWithType: AbstractMessageListenerContainer.RemoveAfterReceivePostProcessor
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.RemoveAfterReceivePostProcessor
- uid: Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor
  commentId: T:Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor
  parent: Steeltoe.Messaging.RabbitMQ.Core
  name: IMessagePostProcessor
  nameWithType: IMessagePostProcessor
  fullName: Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor
- uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.SetupMessageListener*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.SetupMessageListener
  name: SetupMessageListener
  nameWithType: AbstractMessageListenerContainer.SetupMessageListener
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.SetupMessageListener
- uid: Steeltoe.Messaging.RabbitMQ.Listener.IMessageListenerContainer.SetupMessageListener(Steeltoe.Messaging.RabbitMQ.Listener.IMessageListener)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Listener.IMessageListenerContainer.SetupMessageListener(Steeltoe.Messaging.RabbitMQ.Listener.IMessageListener)
  parent: Steeltoe.Messaging.RabbitMQ.Listener.IMessageListenerContainer
  name: SetupMessageListener(IMessageListener)
  nameWithType: IMessageListenerContainer.SetupMessageListener(IMessageListener)
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.IMessageListenerContainer.SetupMessageListener(Steeltoe.Messaging.RabbitMQ.Listener.IMessageListener)
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Listener.IMessageListenerContainer.SetupMessageListener(Steeltoe.Messaging.RabbitMQ.Listener.IMessageListener)
    name: SetupMessageListener
    nameWithType: IMessageListenerContainer.SetupMessageListener
    fullName: Steeltoe.Messaging.RabbitMQ.Listener.IMessageListenerContainer.SetupMessageListener
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.RabbitMQ.Listener.IMessageListener
    name: IMessageListener
    nameWithType: IMessageListener
    fullName: Steeltoe.Messaging.RabbitMQ.Listener.IMessageListener
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Listener.IMessageListenerContainer.SetupMessageListener(Steeltoe.Messaging.RabbitMQ.Listener.IMessageListener)
    name: SetupMessageListener
    nameWithType: IMessageListenerContainer.SetupMessageListener
    fullName: Steeltoe.Messaging.RabbitMQ.Listener.IMessageListenerContainer.SetupMessageListener
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.RabbitMQ.Listener.IMessageListener
    name: IMessageListener
    nameWithType: IMessageListener
    fullName: Steeltoe.Messaging.RabbitMQ.Listener.IMessageListener
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.GetConnectionFactory*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.GetConnectionFactory
  name: GetConnectionFactory
  nameWithType: AbstractMessageListenerContainer.GetConnectionFactory
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.GetConnectionFactory
- uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.Initialize*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.Initialize
  name: Initialize
  nameWithType: AbstractMessageListenerContainer.Initialize
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.Initialize
- uid: Steeltoe.Messaging.RabbitMQ.Listener.IMessageListenerContainer.Initialize
  commentId: M:Steeltoe.Messaging.RabbitMQ.Listener.IMessageListenerContainer.Initialize
  parent: Steeltoe.Messaging.RabbitMQ.Listener.IMessageListenerContainer
  name: Initialize()
  nameWithType: IMessageListenerContainer.Initialize()
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.IMessageListenerContainer.Initialize()
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Listener.IMessageListenerContainer.Initialize
    name: Initialize
    nameWithType: IMessageListenerContainer.Initialize
    fullName: Steeltoe.Messaging.RabbitMQ.Listener.IMessageListenerContainer.Initialize
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Listener.IMessageListenerContainer.Initialize
    name: Initialize
    nameWithType: IMessageListenerContainer.Initialize
    fullName: Steeltoe.Messaging.RabbitMQ.Listener.IMessageListenerContainer.Initialize
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.Dispose*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.Dispose
  name: Dispose
  nameWithType: AbstractMessageListenerContainer.Dispose
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.Dispose
- uid: System.IDisposable.Dispose
  commentId: M:System.IDisposable.Dispose
  parent: System.IDisposable
  isExternal: true
  name: Dispose()
  nameWithType: IDisposable.Dispose()
  fullName: System.IDisposable.Dispose()
  spec.csharp:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.Shutdown*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.Shutdown
  name: Shutdown
  nameWithType: AbstractMessageListenerContainer.Shutdown
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.Shutdown
- uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.Start*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.Start
  name: Start
  nameWithType: AbstractMessageListenerContainer.Start
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.Start
- uid: Steeltoe.Common.Lifecycle.ILifecycle.Start
  commentId: M:Steeltoe.Common.Lifecycle.ILifecycle.Start
  parent: Steeltoe.Common.Lifecycle.ILifecycle
  name: Start()
  nameWithType: ILifecycle.Start()
  fullName: Steeltoe.Common.Lifecycle.ILifecycle.Start()
  spec.csharp:
  - uid: Steeltoe.Common.Lifecycle.ILifecycle.Start
    name: Start
    nameWithType: ILifecycle.Start
    fullName: Steeltoe.Common.Lifecycle.ILifecycle.Start
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Common.Lifecycle.ILifecycle.Start
    name: Start
    nameWithType: ILifecycle.Start
    fullName: Steeltoe.Common.Lifecycle.ILifecycle.Start
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.Stop*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.Stop
  name: Stop
  nameWithType: AbstractMessageListenerContainer.Stop
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.Stop
- uid: Steeltoe.Common.Lifecycle.ILifecycle.Stop
  commentId: M:Steeltoe.Common.Lifecycle.ILifecycle.Stop
  parent: Steeltoe.Common.Lifecycle.ILifecycle
  name: Stop()
  nameWithType: ILifecycle.Stop()
  fullName: Steeltoe.Common.Lifecycle.ILifecycle.Stop()
  spec.csharp:
  - uid: Steeltoe.Common.Lifecycle.ILifecycle.Stop
    name: Stop
    nameWithType: ILifecycle.Stop
    fullName: Steeltoe.Common.Lifecycle.ILifecycle.Stop
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Common.Lifecycle.ILifecycle.Stop
    name: Stop
    nameWithType: ILifecycle.Stop
    fullName: Steeltoe.Common.Lifecycle.ILifecycle.Stop
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Common.Lifecycle.ISmartLifecycle.Stop(System.Action)
  commentId: M:Steeltoe.Common.Lifecycle.ISmartLifecycle.Stop(System.Action)
  parent: Steeltoe.Common.Lifecycle.ISmartLifecycle
  isExternal: true
  name: Stop(Action)
  nameWithType: ISmartLifecycle.Stop(Action)
  fullName: Steeltoe.Common.Lifecycle.ISmartLifecycle.Stop(System.Action)
  spec.csharp:
  - uid: Steeltoe.Common.Lifecycle.ISmartLifecycle.Stop(System.Action)
    name: Stop
    nameWithType: ISmartLifecycle.Stop
    fullName: Steeltoe.Common.Lifecycle.ISmartLifecycle.Stop
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Common.Lifecycle.ISmartLifecycle.Stop(System.Action)
    name: Stop
    nameWithType: ISmartLifecycle.Stop
    fullName: Steeltoe.Common.Lifecycle.ISmartLifecycle.Stop
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Action
  commentId: T:System.Action
  parent: System
  isExternal: true
  name: Action
  nameWithType: Action
  fullName: System.Action
- uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.LazyLoad*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.LazyLoad
  name: LazyLoad
  nameWithType: AbstractMessageListenerContainer.LazyLoad
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.LazyLoad
- uid: Steeltoe.Messaging.RabbitMQ.Listener.IMessageListenerContainer.LazyLoad
  commentId: M:Steeltoe.Messaging.RabbitMQ.Listener.IMessageListenerContainer.LazyLoad
  parent: Steeltoe.Messaging.RabbitMQ.Listener.IMessageListenerContainer
  name: LazyLoad()
  nameWithType: IMessageListenerContainer.LazyLoad()
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.IMessageListenerContainer.LazyLoad()
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Listener.IMessageListenerContainer.LazyLoad
    name: LazyLoad
    nameWithType: IMessageListenerContainer.LazyLoad
    fullName: Steeltoe.Messaging.RabbitMQ.Listener.IMessageListenerContainer.LazyLoad
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Listener.IMessageListenerContainer.LazyLoad
    name: LazyLoad
    nameWithType: IMessageListenerContainer.LazyLoad
    fullName: Steeltoe.Messaging.RabbitMQ.Listener.IMessageListenerContainer.LazyLoad
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.CreateConnection*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.CreateConnection
  name: CreateConnection
  nameWithType: AbstractMessageListenerContainer.CreateConnection
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.CreateConnection
- uid: Steeltoe.Messaging.RabbitMQ.Connection.IConnection
  commentId: T:Steeltoe.Messaging.RabbitMQ.Connection.IConnection
  parent: Steeltoe.Messaging.RabbitMQ.Connection
  name: IConnection
  nameWithType: IConnection
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.IConnection
- uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.GetTransactionalResourceHolder*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.GetTransactionalResourceHolder
  name: GetTransactionalResourceHolder
  nameWithType: AbstractMessageListenerContainer.GetTransactionalResourceHolder
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.GetTransactionalResourceHolder
- uid: Steeltoe.Messaging.RabbitMQ.Connection.RabbitResourceHolder
  commentId: T:Steeltoe.Messaging.RabbitMQ.Connection.RabbitResourceHolder
  parent: Steeltoe.Messaging.RabbitMQ.Connection
  name: RabbitResourceHolder
  nameWithType: RabbitResourceHolder
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.RabbitResourceHolder
- uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.ConvertRabbitAccessException*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.ConvertRabbitAccessException
  name: ConvertRabbitAccessException
  nameWithType: AbstractMessageListenerContainer.ConvertRabbitAccessException
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.ConvertRabbitAccessException
- uid: System.Exception
  commentId: T:System.Exception
  parent: System
  isExternal: true
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.RedeclareElementsIfNecessary*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.RedeclareElementsIfNecessary
  name: RedeclareElementsIfNecessary
  nameWithType: AbstractMessageListenerContainer.RedeclareElementsIfNecessary
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.RedeclareElementsIfNecessary
- uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.InvokeErrorHandler*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.InvokeErrorHandler
  name: InvokeErrorHandler
  nameWithType: AbstractMessageListenerContainer.InvokeErrorHandler
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.InvokeErrorHandler
- uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.ExecuteListener*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.ExecuteListener
  name: ExecuteListener
  nameWithType: AbstractMessageListenerContainer.ExecuteListener
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.ExecuteListener
- uid: RabbitMQ.Client.IModel
  commentId: T:RabbitMQ.Client.IModel
  parent: RabbitMQ.Client
  isExternal: true
  name: IModel
  nameWithType: IModel
  fullName: RabbitMQ.Client.IModel
- uid: Steeltoe.Messaging.IMessage
  commentId: T:Steeltoe.Messaging.IMessage
  parent: Steeltoe.Messaging
  name: IMessage
  nameWithType: IMessage
  fullName: Steeltoe.Messaging.IMessage
- uid: RabbitMQ.Client
  commentId: N:RabbitMQ.Client
  isExternal: true
  name: RabbitMQ.Client
  nameWithType: RabbitMQ.Client
  fullName: RabbitMQ.Client
- uid: Steeltoe.Messaging
  commentId: N:Steeltoe.Messaging
  name: Steeltoe.Messaging
  nameWithType: Steeltoe.Messaging
  fullName: Steeltoe.Messaging
- uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.ActualInvokeListener*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.ActualInvokeListener
  name: ActualInvokeListener
  nameWithType: AbstractMessageListenerContainer.ActualInvokeListener
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.ActualInvokeListener
- uid: System.Collections.Generic.List{Steeltoe.Messaging.IMessage}
  commentId: T:System.Collections.Generic.List{Steeltoe.Messaging.IMessage}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<IMessage>
  nameWithType: List<IMessage>
  fullName: System.Collections.Generic.List<Steeltoe.Messaging.IMessage>
  nameWithType.vb: List(Of IMessage)
  fullName.vb: System.Collections.Generic.List(Of Steeltoe.Messaging.IMessage)
  name.vb: List(Of IMessage)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.DoInvokeListener*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.DoInvokeListener
  name: DoInvokeListener
  nameWithType: AbstractMessageListenerContainer.DoInvokeListener
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.DoInvokeListener
- uid: Steeltoe.Messaging.RabbitMQ.Listener.IChannelAwareMessageListener
  commentId: T:Steeltoe.Messaging.RabbitMQ.Listener.IChannelAwareMessageListener
  parent: Steeltoe.Messaging.RabbitMQ.Listener
  name: IChannelAwareMessageListener
  nameWithType: IChannelAwareMessageListener
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.IChannelAwareMessageListener
- uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.HandleChannelAwareTransaction*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.HandleChannelAwareTransaction
  name: HandleChannelAwareTransaction
  nameWithType: AbstractMessageListenerContainer.HandleChannelAwareTransaction
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.HandleChannelAwareTransaction
- uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.WrapToListenerExecutionFailedExceptionIfNeeded*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.WrapToListenerExecutionFailedExceptionIfNeeded
  name: WrapToListenerExecutionFailedExceptionIfNeeded
  nameWithType: AbstractMessageListenerContainer.WrapToListenerExecutionFailedExceptionIfNeeded
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.WrapToListenerExecutionFailedExceptionIfNeeded
- uid: Steeltoe.Messaging.RabbitMQ.Listener.Exceptions.ListenerExecutionFailedException
  commentId: T:Steeltoe.Messaging.RabbitMQ.Listener.Exceptions.ListenerExecutionFailedException
  parent: Steeltoe.Messaging.RabbitMQ.Listener.Exceptions
  name: ListenerExecutionFailedException
  nameWithType: ListenerExecutionFailedException
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.Exceptions.ListenerExecutionFailedException
- uid: Steeltoe.Messaging.RabbitMQ.Listener.Exceptions
  commentId: N:Steeltoe.Messaging.RabbitMQ.Listener.Exceptions
  name: Steeltoe.Messaging.RabbitMQ.Listener.Exceptions
  nameWithType: Steeltoe.Messaging.RabbitMQ.Listener.Exceptions
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.Exceptions
- uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.HandleListenerException*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.HandleListenerException
  name: HandleListenerException
  nameWithType: AbstractMessageListenerContainer.HandleListenerException
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.HandleListenerException
- uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.UpdateLastReceive*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.UpdateLastReceive
  name: UpdateLastReceive
  nameWithType: AbstractMessageListenerContainer.UpdateLastReceive
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.UpdateLastReceive
- uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.ConfigureAdminIfNeeded*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.ConfigureAdminIfNeeded
  name: ConfigureAdminIfNeeded
  nameWithType: AbstractMessageListenerContainer.ConfigureAdminIfNeeded
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.ConfigureAdminIfNeeded
- uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.CheckMismatchedQueues*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.CheckMismatchedQueues
  name: CheckMismatchedQueues
  nameWithType: AbstractMessageListenerContainer.CheckMismatchedQueues
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.CheckMismatchedQueues
- uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.IsChannelLocallyTransacted*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.IsChannelLocallyTransacted
  name: IsChannelLocallyTransacted
  nameWithType: AbstractMessageListenerContainer.IsChannelLocallyTransacted
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.IsChannelLocallyTransacted
- uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.DoInitialize*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.DoInitialize
  name: DoInitialize
  nameWithType: AbstractMessageListenerContainer.DoInitialize
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.DoInitialize
- uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.DoShutdown*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.DoShutdown
  name: DoShutdown
  nameWithType: AbstractMessageListenerContainer.DoShutdown
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.DoShutdown
- uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.DoStart*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.DoStart
  name: DoStart
  nameWithType: AbstractMessageListenerContainer.DoStart
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.DoStart
- uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.DoStop*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.DoStop
  name: DoStop
  nameWithType: AbstractMessageListenerContainer.DoStop
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.DoStop
- uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.ValidateConfiguration*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.ValidateConfiguration
  name: ValidateConfiguration
  nameWithType: AbstractMessageListenerContainer.ValidateConfiguration
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.ValidateConfiguration
- uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.GetRoutingConnectionFactory*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.GetRoutingConnectionFactory
  name: GetRoutingConnectionFactory
  nameWithType: AbstractMessageListenerContainer.GetRoutingConnectionFactory
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.GetRoutingConnectionFactory
- uid: Steeltoe.Messaging.RabbitMQ.Connection.IRoutingConnectionFactory
  commentId: T:Steeltoe.Messaging.RabbitMQ.Connection.IRoutingConnectionFactory
  parent: Steeltoe.Messaging.RabbitMQ.Connection
  name: IRoutingConnectionFactory
  nameWithType: IRoutingConnectionFactory
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.IRoutingConnectionFactory
- uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.LastReceive*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.LastReceive
  name: LastReceive
  nameWithType: AbstractMessageListenerContainer.LastReceive
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.LastReceive
- uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.ForceCloseChannel*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.ForceCloseChannel
  name: ForceCloseChannel
  nameWithType: AbstractMessageListenerContainer.ForceCloseChannel
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.ForceCloseChannel
- uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.GetRoutingLookupKey*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.GetRoutingLookupKey
  name: GetRoutingLookupKey
  nameWithType: AbstractMessageListenerContainer.GetRoutingLookupKey
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.GetRoutingLookupKey
- uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.CheckMessageListener*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.CheckMessageListener
  name: CheckMessageListener
  nameWithType: AbstractMessageListenerContainer.CheckMessageListener
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.CheckMessageListener
- uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.GetQueueNamesAsSet*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.GetQueueNamesAsSet
  name: GetQueueNamesAsSet
  nameWithType: AbstractMessageListenerContainer.GetQueueNamesAsSet
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.GetQueueNamesAsSet
- uid: System.Collections.Generic.ISet{System.String}
  commentId: T:System.Collections.Generic.ISet{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.ISet`1
  name: ISet<String>
  nameWithType: ISet<String>
  fullName: System.Collections.Generic.ISet<System.String>
  nameWithType.vb: ISet(Of String)
  fullName.vb: System.Collections.Generic.ISet(Of System.String)
  name.vb: ISet(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.ISet`1
    name: ISet
    nameWithType: ISet
    fullName: System.Collections.Generic.ISet
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ISet`1
    name: ISet
    nameWithType: ISet
    fullName: System.Collections.Generic.ISet
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.ISet`1
  commentId: T:System.Collections.Generic.ISet`1
  isExternal: true
  name: ISet<T>
  nameWithType: ISet<T>
  fullName: System.Collections.Generic.ISet<T>
  nameWithType.vb: ISet(Of T)
  fullName.vb: System.Collections.Generic.ISet(Of T)
  name.vb: ISet(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.ISet`1
    name: ISet
    nameWithType: ISet
    fullName: System.Collections.Generic.ISet
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ISet`1
    name: ISet
    nameWithType: ISet
    fullName: System.Collections.Generic.ISet
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.GetQueueNamesToQueues*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.GetQueueNamesToQueues
  name: GetQueueNamesToQueues
  nameWithType: AbstractMessageListenerContainer.GetQueueNamesToQueues
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.GetQueueNamesToQueues
- uid: System.Collections.Generic.Dictionary{System.String,Steeltoe.Messaging.RabbitMQ.Config.IQueue}
  commentId: T:System.Collections.Generic.Dictionary{System.String,Steeltoe.Messaging.RabbitMQ.Config.IQueue}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  name: Dictionary<String, IQueue>
  nameWithType: Dictionary<String, IQueue>
  fullName: System.Collections.Generic.Dictionary<System.String, Steeltoe.Messaging.RabbitMQ.Config.IQueue>
  nameWithType.vb: Dictionary(Of String, IQueue)
  fullName.vb: System.Collections.Generic.Dictionary(Of System.String, Steeltoe.Messaging.RabbitMQ.Config.IQueue)
  name.vb: Dictionary(Of String, IQueue)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.RabbitMQ.Config.IQueue
    name: IQueue
    nameWithType: IQueue
    fullName: Steeltoe.Messaging.RabbitMQ.Config.IQueue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.RabbitMQ.Config.IQueue
    name: IQueue
    nameWithType: IQueue
    fullName: Steeltoe.Messaging.RabbitMQ.Config.IQueue
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.CauseChainHasImmediateAcknowledgeRabbitException*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.CauseChainHasImmediateAcknowledgeRabbitException
  name: CauseChainHasImmediateAcknowledgeRabbitException
  nameWithType: AbstractMessageListenerContainer.CauseChainHasImmediateAcknowledgeRabbitException
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.CauseChainHasImmediateAcknowledgeRabbitException
- uid: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.PrepareHolderForRollback*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.PrepareHolderForRollback
  name: PrepareHolderForRollback
  nameWithType: AbstractMessageListenerContainer.PrepareHolderForRollback
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.AbstractMessageListenerContainer.PrepareHolderForRollback
