### YamlMime:ManagedReference
items:
- uid: Steeltoe.CircuitBreaker.Hystrix.Metric.HystrixRequestEvents
  commentId: T:Steeltoe.CircuitBreaker.Hystrix.Metric.HystrixRequestEvents
  id: HystrixRequestEvents
  parent: Steeltoe.CircuitBreaker.Hystrix.Metric
  children:
  - Steeltoe.CircuitBreaker.Hystrix.Metric.HystrixRequestEvents.#ctor(System.Collections.Generic.ICollection{Steeltoe.CircuitBreaker.Hystrix.IHystrixInvokableInfo})
  - Steeltoe.CircuitBreaker.Hystrix.Metric.HystrixRequestEvents.Executions
  - Steeltoe.CircuitBreaker.Hystrix.Metric.HystrixRequestEvents.ExecutionsMappedToLatencies
  langs:
  - csharp
  - vb
  name: HystrixRequestEvents
  nameWithType: HystrixRequestEvents
  fullName: Steeltoe.CircuitBreaker.Hystrix.Metric.HystrixRequestEvents
  type: Class
  source:
    remote:
      path: src/CircuitBreaker/src/HystrixBase/Metric/HystrixRequestEvents.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: HystrixRequestEvents
    path: ../Steeltoe/src/CircuitBreaker/src/HystrixBase/Metric/HystrixRequestEvents.cs
    startLine: 8
  assemblies:
  - Steeltoe.CircuitBreaker.HystrixBase
  namespace: Steeltoe.CircuitBreaker.Hystrix.Metric
  syntax:
    content: public class HystrixRequestEvents
    content.vb: Public Class HystrixRequestEvents
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Steeltoe.CircuitBreaker.Hystrix.Metric.HystrixRequestEvents.#ctor(System.Collections.Generic.ICollection{Steeltoe.CircuitBreaker.Hystrix.IHystrixInvokableInfo})
  commentId: M:Steeltoe.CircuitBreaker.Hystrix.Metric.HystrixRequestEvents.#ctor(System.Collections.Generic.ICollection{Steeltoe.CircuitBreaker.Hystrix.IHystrixInvokableInfo})
  id: '#ctor(System.Collections.Generic.ICollection{Steeltoe.CircuitBreaker.Hystrix.IHystrixInvokableInfo})'
  parent: Steeltoe.CircuitBreaker.Hystrix.Metric.HystrixRequestEvents
  langs:
  - csharp
  - vb
  name: HystrixRequestEvents(ICollection<IHystrixInvokableInfo>)
  nameWithType: HystrixRequestEvents.HystrixRequestEvents(ICollection<IHystrixInvokableInfo>)
  fullName: Steeltoe.CircuitBreaker.Hystrix.Metric.HystrixRequestEvents.HystrixRequestEvents(System.Collections.Generic.ICollection<Steeltoe.CircuitBreaker.Hystrix.IHystrixInvokableInfo>)
  type: Constructor
  source:
    remote:
      path: src/CircuitBreaker/src/HystrixBase/Metric/HystrixRequestEvents.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: .ctor
    path: ../Steeltoe/src/CircuitBreaker/src/HystrixBase/Metric/HystrixRequestEvents.cs
    startLine: 10
  assemblies:
  - Steeltoe.CircuitBreaker.HystrixBase
  namespace: Steeltoe.CircuitBreaker.Hystrix.Metric
  syntax:
    content: public HystrixRequestEvents(ICollection<IHystrixInvokableInfo> executions)
    parameters:
    - id: executions
      type: System.Collections.Generic.ICollection{Steeltoe.CircuitBreaker.Hystrix.IHystrixInvokableInfo}
    content.vb: Public Sub New(executions As ICollection(Of IHystrixInvokableInfo))
  overload: Steeltoe.CircuitBreaker.Hystrix.Metric.HystrixRequestEvents.#ctor*
  nameWithType.vb: HystrixRequestEvents.HystrixRequestEvents(ICollection(Of IHystrixInvokableInfo))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Steeltoe.CircuitBreaker.Hystrix.Metric.HystrixRequestEvents.HystrixRequestEvents(System.Collections.Generic.ICollection(Of Steeltoe.CircuitBreaker.Hystrix.IHystrixInvokableInfo))
  name.vb: HystrixRequestEvents(ICollection(Of IHystrixInvokableInfo))
- uid: Steeltoe.CircuitBreaker.Hystrix.Metric.HystrixRequestEvents.Executions
  commentId: P:Steeltoe.CircuitBreaker.Hystrix.Metric.HystrixRequestEvents.Executions
  id: Executions
  parent: Steeltoe.CircuitBreaker.Hystrix.Metric.HystrixRequestEvents
  langs:
  - csharp
  - vb
  name: Executions
  nameWithType: HystrixRequestEvents.Executions
  fullName: Steeltoe.CircuitBreaker.Hystrix.Metric.HystrixRequestEvents.Executions
  type: Property
  source:
    remote:
      path: src/CircuitBreaker/src/HystrixBase/Metric/HystrixRequestEvents.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Executions
    path: ../Steeltoe/src/CircuitBreaker/src/HystrixBase/Metric/HystrixRequestEvents.cs
    startLine: 15
  assemblies:
  - Steeltoe.CircuitBreaker.HystrixBase
  namespace: Steeltoe.CircuitBreaker.Hystrix.Metric
  syntax:
    content: public ICollection<IHystrixInvokableInfo> Executions { get; }
    parameters: []
    return:
      type: System.Collections.Generic.ICollection{Steeltoe.CircuitBreaker.Hystrix.IHystrixInvokableInfo}
    content.vb: Public ReadOnly Property Executions As ICollection(Of IHystrixInvokableInfo)
  overload: Steeltoe.CircuitBreaker.Hystrix.Metric.HystrixRequestEvents.Executions*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Steeltoe.CircuitBreaker.Hystrix.Metric.HystrixRequestEvents.ExecutionsMappedToLatencies
  commentId: P:Steeltoe.CircuitBreaker.Hystrix.Metric.HystrixRequestEvents.ExecutionsMappedToLatencies
  id: ExecutionsMappedToLatencies
  parent: Steeltoe.CircuitBreaker.Hystrix.Metric.HystrixRequestEvents
  langs:
  - csharp
  - vb
  name: ExecutionsMappedToLatencies
  nameWithType: HystrixRequestEvents.ExecutionsMappedToLatencies
  fullName: Steeltoe.CircuitBreaker.Hystrix.Metric.HystrixRequestEvents.ExecutionsMappedToLatencies
  type: Property
  source:
    remote:
      path: src/CircuitBreaker/src/HystrixBase/Metric/HystrixRequestEvents.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: ExecutionsMappedToLatencies
    path: ../Steeltoe/src/CircuitBreaker/src/HystrixBase/Metric/HystrixRequestEvents.cs
    startLine: 17
  assemblies:
  - Steeltoe.CircuitBreaker.HystrixBase
  namespace: Steeltoe.CircuitBreaker.Hystrix.Metric
  syntax:
    content: public IDictionary<ExecutionSignature, List<int>> ExecutionsMappedToLatencies { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IDictionary{Steeltoe.CircuitBreaker.Hystrix.Metric.ExecutionSignature,System.Collections.Generic.List{System.Int32}}
    content.vb: Public ReadOnly Property ExecutionsMappedToLatencies As IDictionary(Of ExecutionSignature, List(Of Integer))
  overload: Steeltoe.CircuitBreaker.Hystrix.Metric.HystrixRequestEvents.ExecutionsMappedToLatencies*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: Steeltoe.CircuitBreaker.Hystrix.Metric
  commentId: N:Steeltoe.CircuitBreaker.Hystrix.Metric
  name: Steeltoe.CircuitBreaker.Hystrix.Metric
  nameWithType: Steeltoe.CircuitBreaker.Hystrix.Metric
  fullName: Steeltoe.CircuitBreaker.Hystrix.Metric
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Steeltoe.CircuitBreaker.Hystrix.Metric.HystrixRequestEvents.#ctor*
  commentId: Overload:Steeltoe.CircuitBreaker.Hystrix.Metric.HystrixRequestEvents.#ctor
  name: HystrixRequestEvents
  nameWithType: HystrixRequestEvents.HystrixRequestEvents
  fullName: Steeltoe.CircuitBreaker.Hystrix.Metric.HystrixRequestEvents.HystrixRequestEvents
- uid: System.Collections.Generic.ICollection{Steeltoe.CircuitBreaker.Hystrix.IHystrixInvokableInfo}
  commentId: T:System.Collections.Generic.ICollection{Steeltoe.CircuitBreaker.Hystrix.IHystrixInvokableInfo}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.ICollection`1
  name: ICollection<IHystrixInvokableInfo>
  nameWithType: ICollection<IHystrixInvokableInfo>
  fullName: System.Collections.Generic.ICollection<Steeltoe.CircuitBreaker.Hystrix.IHystrixInvokableInfo>
  nameWithType.vb: ICollection(Of IHystrixInvokableInfo)
  fullName.vb: System.Collections.Generic.ICollection(Of Steeltoe.CircuitBreaker.Hystrix.IHystrixInvokableInfo)
  name.vb: ICollection(Of IHystrixInvokableInfo)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Steeltoe.CircuitBreaker.Hystrix.IHystrixInvokableInfo
    name: IHystrixInvokableInfo
    nameWithType: IHystrixInvokableInfo
    fullName: Steeltoe.CircuitBreaker.Hystrix.IHystrixInvokableInfo
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Steeltoe.CircuitBreaker.Hystrix.IHystrixInvokableInfo
    name: IHystrixInvokableInfo
    nameWithType: IHystrixInvokableInfo
    fullName: Steeltoe.CircuitBreaker.Hystrix.IHystrixInvokableInfo
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.ICollection`1
  commentId: T:System.Collections.Generic.ICollection`1
  isExternal: true
  name: ICollection<T>
  nameWithType: ICollection<T>
  fullName: System.Collections.Generic.ICollection<T>
  nameWithType.vb: ICollection(Of T)
  fullName.vb: System.Collections.Generic.ICollection(Of T)
  name.vb: ICollection(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Steeltoe.CircuitBreaker.Hystrix.Metric.HystrixRequestEvents.Executions*
  commentId: Overload:Steeltoe.CircuitBreaker.Hystrix.Metric.HystrixRequestEvents.Executions
  name: Executions
  nameWithType: HystrixRequestEvents.Executions
  fullName: Steeltoe.CircuitBreaker.Hystrix.Metric.HystrixRequestEvents.Executions
- uid: Steeltoe.CircuitBreaker.Hystrix.Metric.HystrixRequestEvents.ExecutionsMappedToLatencies*
  commentId: Overload:Steeltoe.CircuitBreaker.Hystrix.Metric.HystrixRequestEvents.ExecutionsMappedToLatencies
  name: ExecutionsMappedToLatencies
  nameWithType: HystrixRequestEvents.ExecutionsMappedToLatencies
  fullName: Steeltoe.CircuitBreaker.Hystrix.Metric.HystrixRequestEvents.ExecutionsMappedToLatencies
- uid: System.Collections.Generic.IDictionary{Steeltoe.CircuitBreaker.Hystrix.Metric.ExecutionSignature,System.Collections.Generic.List{System.Int32}}
  commentId: T:System.Collections.Generic.IDictionary{Steeltoe.CircuitBreaker.Hystrix.Metric.ExecutionSignature,System.Collections.Generic.List{System.Int32}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IDictionary`2
  name: IDictionary<ExecutionSignature, List<Int32>>
  nameWithType: IDictionary<ExecutionSignature, List<Int32>>
  fullName: System.Collections.Generic.IDictionary<Steeltoe.CircuitBreaker.Hystrix.Metric.ExecutionSignature, System.Collections.Generic.List<System.Int32>>
  nameWithType.vb: IDictionary(Of ExecutionSignature, List(Of Int32))
  fullName.vb: System.Collections.Generic.IDictionary(Of Steeltoe.CircuitBreaker.Hystrix.Metric.ExecutionSignature, System.Collections.Generic.List(Of System.Int32))
  name.vb: IDictionary(Of ExecutionSignature, List(Of Int32))
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Steeltoe.CircuitBreaker.Hystrix.Metric.ExecutionSignature
    name: ExecutionSignature
    nameWithType: ExecutionSignature
    fullName: Steeltoe.CircuitBreaker.Hystrix.Metric.ExecutionSignature
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Steeltoe.CircuitBreaker.Hystrix.Metric.ExecutionSignature
    name: ExecutionSignature
    nameWithType: ExecutionSignature
    fullName: Steeltoe.CircuitBreaker.Hystrix.Metric.ExecutionSignature
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IDictionary`2
  commentId: T:System.Collections.Generic.IDictionary`2
  isExternal: true
  name: IDictionary<TKey, TValue>
  nameWithType: IDictionary<TKey, TValue>
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>
  nameWithType.vb: IDictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.IDictionary(Of TKey, TValue)
  name.vb: IDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
