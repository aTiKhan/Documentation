### YamlMime:ManagedReference
items:
- uid: Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryTokenValidator
  commentId: T:Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryTokenValidator
  id: CloudFoundryTokenValidator
  parent: Steeltoe.Security.Authentication.CloudFoundry
  children:
  - Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryTokenValidator.#ctor(Steeltoe.Security.Authentication.CloudFoundry.AuthServerOptions)
  - Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryTokenValidator.ValidateAudience(System.Collections.Generic.IEnumerable{System.String},SecurityToken,TokenValidationParameters)
  - Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryTokenValidator.ValidateIssuer(System.String,SecurityToken,TokenValidationParameters)
  - Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryTokenValidator.ValidateScopes(JwtSecurityToken)
  langs:
  - csharp
  - vb
  name: CloudFoundryTokenValidator
  nameWithType: CloudFoundryTokenValidator
  fullName: Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryTokenValidator
  type: Class
  source:
    remote:
      path: src/Security/src/Authentication.CloudFoundryBase/CloudFoundryTokenValidator.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: CloudFoundryTokenValidator
    path: ../Steeltoe/src/Security/src/Authentication.CloudFoundryBase/CloudFoundryTokenValidator.cs
    startLine: 11
  assemblies:
  - Steeltoe.Security.Authentication.CloudFoundryBase
  namespace: Steeltoe.Security.Authentication.CloudFoundry
  syntax:
    content: public class CloudFoundryTokenValidator
    content.vb: Public Class CloudFoundryTokenValidator
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryTokenValidator.#ctor(Steeltoe.Security.Authentication.CloudFoundry.AuthServerOptions)
  commentId: M:Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryTokenValidator.#ctor(Steeltoe.Security.Authentication.CloudFoundry.AuthServerOptions)
  id: '#ctor(Steeltoe.Security.Authentication.CloudFoundry.AuthServerOptions)'
  parent: Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryTokenValidator
  langs:
  - csharp
  - vb
  name: CloudFoundryTokenValidator(AuthServerOptions)
  nameWithType: CloudFoundryTokenValidator.CloudFoundryTokenValidator(AuthServerOptions)
  fullName: Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryTokenValidator.CloudFoundryTokenValidator(Steeltoe.Security.Authentication.CloudFoundry.AuthServerOptions)
  type: Constructor
  source:
    remote:
      path: src/Security/src/Authentication.CloudFoundryBase/CloudFoundryTokenValidator.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: .ctor
    path: ../Steeltoe/src/Security/src/Authentication.CloudFoundryBase/CloudFoundryTokenValidator.cs
    startLine: 15
  assemblies:
  - Steeltoe.Security.Authentication.CloudFoundryBase
  namespace: Steeltoe.Security.Authentication.CloudFoundry
  syntax:
    content: public CloudFoundryTokenValidator(AuthServerOptions options = null)
    parameters:
    - id: options
      type: Steeltoe.Security.Authentication.CloudFoundry.AuthServerOptions
    content.vb: Public Sub New(options As AuthServerOptions = Nothing)
  overload: Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryTokenValidator.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryTokenValidator.ValidateIssuer(System.String,SecurityToken,TokenValidationParameters)
  commentId: M:Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryTokenValidator.ValidateIssuer(System.String,SecurityToken,TokenValidationParameters)
  id: ValidateIssuer(System.String,SecurityToken,TokenValidationParameters)
  parent: Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryTokenValidator
  langs:
  - csharp
  - vb
  name: ValidateIssuer(String, SecurityToken, TokenValidationParameters)
  nameWithType: CloudFoundryTokenValidator.ValidateIssuer(String, SecurityToken, TokenValidationParameters)
  fullName: Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryTokenValidator.ValidateIssuer(System.String, SecurityToken, TokenValidationParameters)
  type: Method
  source:
    remote:
      path: src/Security/src/Authentication.CloudFoundryBase/CloudFoundryTokenValidator.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: ValidateIssuer
    path: ../Steeltoe/src/Security/src/Authentication.CloudFoundryBase/CloudFoundryTokenValidator.cs
    startLine: 27
  assemblies:
  - Steeltoe.Security.Authentication.CloudFoundryBase
  namespace: Steeltoe.Security.Authentication.CloudFoundry
  summary: "\nValidate that a token was issued by UAA\n"
  example: []
  syntax:
    content: public virtual string ValidateIssuer(string issuer, SecurityToken securityToken, TokenValidationParameters validationParameters)
    parameters:
    - id: issuer
      type: System.String
      description: Token issuer
    - id: securityToken
      type: SecurityToken
      description: '[Not used] Token to validate'
    - id: validationParameters
      type: TokenValidationParameters
      description: '[Not used]'
    return:
      type: System.String
      description: The issuer, if valid, else <xref uid="langword_csharp_null" name="null" href=""></xref>
    content.vb: Public Overridable Function ValidateIssuer(issuer As String, securityToken As SecurityToken, validationParameters As TokenValidationParameters) As String
  overload: Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryTokenValidator.ValidateIssuer*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryTokenValidator.ValidateAudience(System.Collections.Generic.IEnumerable{System.String},SecurityToken,TokenValidationParameters)
  commentId: M:Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryTokenValidator.ValidateAudience(System.Collections.Generic.IEnumerable{System.String},SecurityToken,TokenValidationParameters)
  id: ValidateAudience(System.Collections.Generic.IEnumerable{System.String},SecurityToken,TokenValidationParameters)
  parent: Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryTokenValidator
  langs:
  - csharp
  - vb
  name: ValidateAudience(IEnumerable<String>, SecurityToken, TokenValidationParameters)
  nameWithType: CloudFoundryTokenValidator.ValidateAudience(IEnumerable<String>, SecurityToken, TokenValidationParameters)
  fullName: Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryTokenValidator.ValidateAudience(System.Collections.Generic.IEnumerable<System.String>, SecurityToken, TokenValidationParameters)
  type: Method
  source:
    remote:
      path: src/Security/src/Authentication.CloudFoundryBase/CloudFoundryTokenValidator.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: ValidateAudience
    path: ../Steeltoe/src/Security/src/Authentication.CloudFoundryBase/CloudFoundryTokenValidator.cs
    startLine: 44
  assemblies:
  - Steeltoe.Security.Authentication.CloudFoundryBase
  namespace: Steeltoe.Security.Authentication.CloudFoundry
  summary: "\nValidate that a token was meant for approved audience(s)\n"
  example: []
  syntax:
    content: public virtual bool ValidateAudience(IEnumerable<string> audiences, SecurityToken securityToken, TokenValidationParameters validationParameters)
    parameters:
    - id: audiences
      type: System.Collections.Generic.IEnumerable{System.String}
      description: The list of audiences the token is valid for
    - id: securityToken
      type: SecurityToken
      description: '[Not used] The token being validated'
    - id: validationParameters
      type: TokenValidationParameters
      description: '[Not used]'
    return:
      type: System.Boolean
      description: <xref uid="langword_csharp_true" name="true" href=""></xref> if the audience matches the client id or any value in AdditionalAudiences
    content.vb: Public Overridable Function ValidateAudience(audiences As IEnumerable(Of String), securityToken As SecurityToken, validationParameters As TokenValidationParameters) As Boolean
  overload: Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryTokenValidator.ValidateAudience*
  nameWithType.vb: CloudFoundryTokenValidator.ValidateAudience(IEnumerable(Of String), SecurityToken, TokenValidationParameters)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryTokenValidator.ValidateAudience(System.Collections.Generic.IEnumerable(Of System.String), SecurityToken, TokenValidationParameters)
  name.vb: ValidateAudience(IEnumerable(Of String), SecurityToken, TokenValidationParameters)
- uid: Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryTokenValidator.ValidateScopes(JwtSecurityToken)
  commentId: M:Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryTokenValidator.ValidateScopes(JwtSecurityToken)
  id: ValidateScopes(JwtSecurityToken)
  parent: Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryTokenValidator
  langs:
  - csharp
  - vb
  name: ValidateScopes(JwtSecurityToken)
  nameWithType: CloudFoundryTokenValidator.ValidateScopes(JwtSecurityToken)
  fullName: Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryTokenValidator.ValidateScopes(JwtSecurityToken)
  type: Method
  source:
    remote:
      path: src/Security/src/Authentication.CloudFoundryBase/CloudFoundryTokenValidator.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: ValidateScopes
    path: ../Steeltoe/src/Security/src/Authentication.CloudFoundryBase/CloudFoundryTokenValidator.cs
    startLine: 72
  assemblies:
  - Steeltoe.Security.Authentication.CloudFoundryBase
  namespace: Steeltoe.Security.Authentication.CloudFoundry
  summary: "\nThis method validates scopes provided in configuration,\nto perform scope based Authorization\n"
  example: []
  syntax:
    content: protected virtual bool ValidateScopes(JwtSecurityToken validJwt)
    parameters:
    - id: validJwt
      type: JwtSecurityToken
      description: JSON Web token
    return:
      type: System.Boolean
      description: true if scopes validated
    content.vb: Protected Overridable Function ValidateScopes(validJwt As JwtSecurityToken) As Boolean
  overload: Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryTokenValidator.ValidateScopes*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
references:
- uid: Steeltoe.Security.Authentication.CloudFoundry
  commentId: N:Steeltoe.Security.Authentication.CloudFoundry
  name: Steeltoe.Security.Authentication.CloudFoundry
  nameWithType: Steeltoe.Security.Authentication.CloudFoundry
  fullName: Steeltoe.Security.Authentication.CloudFoundry
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryTokenValidator.#ctor*
  commentId: Overload:Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryTokenValidator.#ctor
  name: CloudFoundryTokenValidator
  nameWithType: CloudFoundryTokenValidator.CloudFoundryTokenValidator
  fullName: Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryTokenValidator.CloudFoundryTokenValidator
- uid: Steeltoe.Security.Authentication.CloudFoundry.AuthServerOptions
  commentId: T:Steeltoe.Security.Authentication.CloudFoundry.AuthServerOptions
  parent: Steeltoe.Security.Authentication.CloudFoundry
  name: AuthServerOptions
  nameWithType: AuthServerOptions
  fullName: Steeltoe.Security.Authentication.CloudFoundry.AuthServerOptions
- uid: Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryTokenValidator.ValidateIssuer*
  commentId: Overload:Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryTokenValidator.ValidateIssuer
  name: ValidateIssuer
  nameWithType: CloudFoundryTokenValidator.ValidateIssuer
  fullName: Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryTokenValidator.ValidateIssuer
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: SecurityToken
  isExternal: true
  name: SecurityToken
  nameWithType: SecurityToken
  fullName: SecurityToken
- uid: TokenValidationParameters
  isExternal: true
  name: TokenValidationParameters
  nameWithType: TokenValidationParameters
  fullName: TokenValidationParameters
- uid: Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryTokenValidator.ValidateAudience*
  commentId: Overload:Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryTokenValidator.ValidateAudience
  name: ValidateAudience
  nameWithType: CloudFoundryTokenValidator.ValidateAudience
  fullName: Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryTokenValidator.ValidateAudience
- uid: System.Collections.Generic.IEnumerable{System.String}
  commentId: T:System.Collections.Generic.IEnumerable{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<String>
  nameWithType: IEnumerable<String>
  fullName: System.Collections.Generic.IEnumerable<System.String>
  nameWithType.vb: IEnumerable(Of String)
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.String)
  name.vb: IEnumerable(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryTokenValidator.ValidateScopes*
  commentId: Overload:Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryTokenValidator.ValidateScopes
  name: ValidateScopes
  nameWithType: CloudFoundryTokenValidator.ValidateScopes
  fullName: Steeltoe.Security.Authentication.CloudFoundry.CloudFoundryTokenValidator.ValidateScopes
- uid: JwtSecurityToken
  commentId: '!:JwtSecurityToken'
  isExternal: true
  name: JwtSecurityToken
  nameWithType: JwtSecurityToken
  fullName: JwtSecurityToken
