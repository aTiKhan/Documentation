### YamlMime:ManagedReference
items:
- uid: Steeltoe.Discovery.Kubernetes.Discovery.KubernetesDiscoveryOptions
  commentId: T:Steeltoe.Discovery.Kubernetes.Discovery.KubernetesDiscoveryOptions
  id: KubernetesDiscoveryOptions
  parent: Steeltoe.Discovery.Kubernetes.Discovery
  children:
  - Steeltoe.Discovery.Kubernetes.Discovery.KubernetesDiscoveryOptions.AllNamespaces
  - Steeltoe.Discovery.Kubernetes.Discovery.KubernetesDiscoveryOptions.CacheTTL
  - Steeltoe.Discovery.Kubernetes.Discovery.KubernetesDiscoveryOptions.Enabled
  - Steeltoe.Discovery.Kubernetes.Discovery.KubernetesDiscoveryOptions.KnownSecurePorts
  - Steeltoe.Discovery.Kubernetes.Discovery.KubernetesDiscoveryOptions.KUBERNETES_DISCOVERY_CONFIGURATION_PREFIX
  - Steeltoe.Discovery.Kubernetes.Discovery.KubernetesDiscoveryOptions.Metadata
  - Steeltoe.Discovery.Kubernetes.Discovery.KubernetesDiscoveryOptions.Namespace
  - Steeltoe.Discovery.Kubernetes.Discovery.KubernetesDiscoveryOptions.PrimaryPortName
  - Steeltoe.Discovery.Kubernetes.Discovery.KubernetesDiscoveryOptions.ServiceLabels
  - Steeltoe.Discovery.Kubernetes.Discovery.KubernetesDiscoveryOptions.ServiceName
  - Steeltoe.Discovery.Kubernetes.Discovery.KubernetesDiscoveryOptions.ToString
  langs:
  - csharp
  - vb
  name: KubernetesDiscoveryOptions
  nameWithType: KubernetesDiscoveryOptions
  fullName: Steeltoe.Discovery.Kubernetes.Discovery.KubernetesDiscoveryOptions
  type: Class
  source:
    remote:
      path: src/Discovery/src/Kubernetes/Discovery/KubernetesDiscoveryOptions.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: KubernetesDiscoveryOptions
    path: ../Steeltoe/src/Discovery/src/Kubernetes/Discovery/KubernetesDiscoveryOptions.cs
    startLine: 8
  assemblies:
  - Steeltoe.Discovery.Kubernetes
  namespace: Steeltoe.Discovery.Kubernetes.Discovery
  syntax:
    content: public class KubernetesDiscoveryOptions
    content.vb: Public Class KubernetesDiscoveryOptions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Steeltoe.Discovery.Kubernetes.Discovery.KubernetesDiscoveryOptions.KUBERNETES_DISCOVERY_CONFIGURATION_PREFIX
  commentId: F:Steeltoe.Discovery.Kubernetes.Discovery.KubernetesDiscoveryOptions.KUBERNETES_DISCOVERY_CONFIGURATION_PREFIX
  id: KUBERNETES_DISCOVERY_CONFIGURATION_PREFIX
  parent: Steeltoe.Discovery.Kubernetes.Discovery.KubernetesDiscoveryOptions
  langs:
  - csharp
  - vb
  name: KUBERNETES_DISCOVERY_CONFIGURATION_PREFIX
  nameWithType: KubernetesDiscoveryOptions.KUBERNETES_DISCOVERY_CONFIGURATION_PREFIX
  fullName: Steeltoe.Discovery.Kubernetes.Discovery.KubernetesDiscoveryOptions.KUBERNETES_DISCOVERY_CONFIGURATION_PREFIX
  type: Field
  source:
    remote:
      path: src/Discovery/src/Kubernetes/Discovery/KubernetesDiscoveryOptions.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: KUBERNETES_DISCOVERY_CONFIGURATION_PREFIX
    path: ../Steeltoe/src/Discovery/src/Kubernetes/Discovery/KubernetesDiscoveryOptions.cs
    startLine: 10
  assemblies:
  - Steeltoe.Discovery.Kubernetes
  namespace: Steeltoe.Discovery.Kubernetes.Discovery
  syntax:
    content: public const string KUBERNETES_DISCOVERY_CONFIGURATION_PREFIX = "spring:cloud:kubernetes:discovery"
    return:
      type: System.String
    content.vb: Public Const KUBERNETES_DISCOVERY_CONFIGURATION_PREFIX As String = "spring:cloud:kubernetes:discovery"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Steeltoe.Discovery.Kubernetes.Discovery.KubernetesDiscoveryOptions.Enabled
  commentId: P:Steeltoe.Discovery.Kubernetes.Discovery.KubernetesDiscoveryOptions.Enabled
  id: Enabled
  parent: Steeltoe.Discovery.Kubernetes.Discovery.KubernetesDiscoveryOptions
  langs:
  - csharp
  - vb
  name: Enabled
  nameWithType: KubernetesDiscoveryOptions.Enabled
  fullName: Steeltoe.Discovery.Kubernetes.Discovery.KubernetesDiscoveryOptions.Enabled
  type: Property
  source:
    remote:
      path: src/Discovery/src/Kubernetes/Discovery/KubernetesDiscoveryOptions.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Enabled
    path: ../Steeltoe/src/Discovery/src/Kubernetes/Discovery/KubernetesDiscoveryOptions.cs
    startLine: 15
  assemblies:
  - Steeltoe.Discovery.Kubernetes
  namespace: Steeltoe.Discovery.Kubernetes.Discovery
  summary: "\nGets or sets a value indicating whether service discovery by Kubernetes API is enabled\n"
  example: []
  syntax:
    content: public bool Enabled { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property Enabled As Boolean
  overload: Steeltoe.Discovery.Kubernetes.Discovery.KubernetesDiscoveryOptions.Enabled*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Steeltoe.Discovery.Kubernetes.Discovery.KubernetesDiscoveryOptions.ServiceName
  commentId: P:Steeltoe.Discovery.Kubernetes.Discovery.KubernetesDiscoveryOptions.ServiceName
  id: ServiceName
  parent: Steeltoe.Discovery.Kubernetes.Discovery.KubernetesDiscoveryOptions
  langs:
  - csharp
  - vb
  name: ServiceName
  nameWithType: KubernetesDiscoveryOptions.ServiceName
  fullName: Steeltoe.Discovery.Kubernetes.Discovery.KubernetesDiscoveryOptions.ServiceName
  type: Property
  source:
    remote:
      path: src/Discovery/src/Kubernetes/Discovery/KubernetesDiscoveryOptions.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: ServiceName
    path: ../Steeltoe/src/Discovery/src/Kubernetes/Discovery/KubernetesDiscoveryOptions.cs
    startLine: 20
  assemblies:
  - Steeltoe.Discovery.Kubernetes
  namespace: Steeltoe.Discovery.Kubernetes.Discovery
  summary: "\nGets or sets a value representing the service name of the local instance\n"
  example: []
  syntax:
    content: public string ServiceName { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property ServiceName As String
  overload: Steeltoe.Discovery.Kubernetes.Discovery.KubernetesDiscoveryOptions.ServiceName*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Steeltoe.Discovery.Kubernetes.Discovery.KubernetesDiscoveryOptions.AllNamespaces
  commentId: P:Steeltoe.Discovery.Kubernetes.Discovery.KubernetesDiscoveryOptions.AllNamespaces
  id: AllNamespaces
  parent: Steeltoe.Discovery.Kubernetes.Discovery.KubernetesDiscoveryOptions
  langs:
  - csharp
  - vb
  name: AllNamespaces
  nameWithType: KubernetesDiscoveryOptions.AllNamespaces
  fullName: Steeltoe.Discovery.Kubernetes.Discovery.KubernetesDiscoveryOptions.AllNamespaces
  type: Property
  source:
    remote:
      path: src/Discovery/src/Kubernetes/Discovery/KubernetesDiscoveryOptions.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: AllNamespaces
    path: ../Steeltoe/src/Discovery/src/Kubernetes/Discovery/KubernetesDiscoveryOptions.cs
    startLine: 25
  assemblies:
  - Steeltoe.Discovery.Kubernetes
  namespace: Steeltoe.Discovery.Kubernetes.Discovery
  summary: "\nGets or sets a value indicating whether the client is discovering all namespaces\n"
  example: []
  syntax:
    content: public bool AllNamespaces { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property AllNamespaces As Boolean
  overload: Steeltoe.Discovery.Kubernetes.Discovery.KubernetesDiscoveryOptions.AllNamespaces*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Steeltoe.Discovery.Kubernetes.Discovery.KubernetesDiscoveryOptions.Namespace
  commentId: P:Steeltoe.Discovery.Kubernetes.Discovery.KubernetesDiscoveryOptions.Namespace
  id: Namespace
  parent: Steeltoe.Discovery.Kubernetes.Discovery.KubernetesDiscoveryOptions
  langs:
  - csharp
  - vb
  name: Namespace
  nameWithType: KubernetesDiscoveryOptions.Namespace
  fullName: Steeltoe.Discovery.Kubernetes.Discovery.KubernetesDiscoveryOptions.Namespace
  type: Property
  source:
    remote:
      path: src/Discovery/src/Kubernetes/Discovery/KubernetesDiscoveryOptions.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Namespace
    path: ../Steeltoe/src/Discovery/src/Kubernetes/Discovery/KubernetesDiscoveryOptions.cs
    startLine: 32
  assemblies:
  - Steeltoe.Discovery.Kubernetes
  namespace: Steeltoe.Discovery.Kubernetes.Discovery
  summary: "\nGets or sets a value representing the namespace the service is being deployed to.\n<p>If AllNamespaces = false, will only discover services in this namespace; </p>\nIf AllNamespaces = true, this + ServiceName is used to identify the local service instance\n"
  example: []
  syntax:
    content: public string Namespace { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Namespace As String
  overload: Steeltoe.Discovery.Kubernetes.Discovery.KubernetesDiscoveryOptions.Namespace*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Steeltoe.Discovery.Kubernetes.Discovery.KubernetesDiscoveryOptions.KnownSecurePorts
  commentId: P:Steeltoe.Discovery.Kubernetes.Discovery.KubernetesDiscoveryOptions.KnownSecurePorts
  id: KnownSecurePorts
  parent: Steeltoe.Discovery.Kubernetes.Discovery.KubernetesDiscoveryOptions
  langs:
  - csharp
  - vb
  name: KnownSecurePorts
  nameWithType: KubernetesDiscoveryOptions.KnownSecurePorts
  fullName: Steeltoe.Discovery.Kubernetes.Discovery.KubernetesDiscoveryOptions.KnownSecurePorts
  type: Property
  source:
    remote:
      path: src/Discovery/src/Kubernetes/Discovery/KubernetesDiscoveryOptions.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: KnownSecurePorts
    path: ../Steeltoe/src/Discovery/src/Kubernetes/Discovery/KubernetesDiscoveryOptions.cs
    startLine: 37
  assemblies:
  - Steeltoe.Discovery.Kubernetes
  namespace: Steeltoe.Discovery.Kubernetes.Discovery
  summary: "\nGets or sets a list of port numbers that are considered secure and use HTTPS\n"
  example: []
  syntax:
    content: public List<int> KnownSecurePorts { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.List{System.Int32}
    content.vb: Public Property KnownSecurePorts As List(Of Integer)
  overload: Steeltoe.Discovery.Kubernetes.Discovery.KubernetesDiscoveryOptions.KnownSecurePorts*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Steeltoe.Discovery.Kubernetes.Discovery.KubernetesDiscoveryOptions.ServiceLabels
  commentId: P:Steeltoe.Discovery.Kubernetes.Discovery.KubernetesDiscoveryOptions.ServiceLabels
  id: ServiceLabels
  parent: Steeltoe.Discovery.Kubernetes.Discovery.KubernetesDiscoveryOptions
  langs:
  - csharp
  - vb
  name: ServiceLabels
  nameWithType: KubernetesDiscoveryOptions.ServiceLabels
  fullName: Steeltoe.Discovery.Kubernetes.Discovery.KubernetesDiscoveryOptions.ServiceLabels
  type: Property
  source:
    remote:
      path: src/Discovery/src/Kubernetes/Discovery/KubernetesDiscoveryOptions.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: ServiceLabels
    path: ../Steeltoe/src/Discovery/src/Kubernetes/Discovery/KubernetesDiscoveryOptions.cs
    startLine: 42
  assemblies:
  - Steeltoe.Discovery.Kubernetes
  namespace: Steeltoe.Discovery.Kubernetes.Discovery
  summary: "\nGets or sets a list of labels to filter on when fetching services from the Kubernetes API\n"
  example: []
  syntax:
    content: public Dictionary<string, string> ServiceLabels { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.Dictionary{System.String,System.String}
    content.vb: Public Property ServiceLabels As Dictionary(Of String, String)
  overload: Steeltoe.Discovery.Kubernetes.Discovery.KubernetesDiscoveryOptions.ServiceLabels*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Steeltoe.Discovery.Kubernetes.Discovery.KubernetesDiscoveryOptions.PrimaryPortName
  commentId: P:Steeltoe.Discovery.Kubernetes.Discovery.KubernetesDiscoveryOptions.PrimaryPortName
  id: PrimaryPortName
  parent: Steeltoe.Discovery.Kubernetes.Discovery.KubernetesDiscoveryOptions
  langs:
  - csharp
  - vb
  name: PrimaryPortName
  nameWithType: KubernetesDiscoveryOptions.PrimaryPortName
  fullName: Steeltoe.Discovery.Kubernetes.Discovery.KubernetesDiscoveryOptions.PrimaryPortName
  type: Property
  source:
    remote:
      path: src/Discovery/src/Kubernetes/Discovery/KubernetesDiscoveryOptions.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: PrimaryPortName
    path: ../Steeltoe/src/Discovery/src/Kubernetes/Discovery/KubernetesDiscoveryOptions.cs
    startLine: 47
  assemblies:
  - Steeltoe.Discovery.Kubernetes
  namespace: Steeltoe.Discovery.Kubernetes.Discovery
  summary: "\nGets or sets a value holding the name of the primary port when multiple ports are defined for a service\n"
  example: []
  syntax:
    content: public string PrimaryPortName { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property PrimaryPortName As String
  overload: Steeltoe.Discovery.Kubernetes.Discovery.KubernetesDiscoveryOptions.PrimaryPortName*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Steeltoe.Discovery.Kubernetes.Discovery.KubernetesDiscoveryOptions.Metadata
  commentId: P:Steeltoe.Discovery.Kubernetes.Discovery.KubernetesDiscoveryOptions.Metadata
  id: Metadata
  parent: Steeltoe.Discovery.Kubernetes.Discovery.KubernetesDiscoveryOptions
  langs:
  - csharp
  - vb
  name: Metadata
  nameWithType: KubernetesDiscoveryOptions.Metadata
  fullName: Steeltoe.Discovery.Kubernetes.Discovery.KubernetesDiscoveryOptions.Metadata
  type: Property
  source:
    remote:
      path: src/Discovery/src/Kubernetes/Discovery/KubernetesDiscoveryOptions.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Metadata
    path: ../Steeltoe/src/Discovery/src/Kubernetes/Discovery/KubernetesDiscoveryOptions.cs
    startLine: 52
  assemblies:
  - Steeltoe.Discovery.Kubernetes
  namespace: Steeltoe.Discovery.Kubernetes.Discovery
  summary: "\nGets or sets additional service data\n"
  example: []
  syntax:
    content: public Metadata Metadata { get; set; }
    parameters: []
    return:
      type: Steeltoe.Discovery.Kubernetes.Discovery.Metadata
    content.vb: Public Property Metadata As Metadata
  overload: Steeltoe.Discovery.Kubernetes.Discovery.KubernetesDiscoveryOptions.Metadata*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Steeltoe.Discovery.Kubernetes.Discovery.KubernetesDiscoveryOptions.CacheTTL
  commentId: P:Steeltoe.Discovery.Kubernetes.Discovery.KubernetesDiscoveryOptions.CacheTTL
  id: CacheTTL
  parent: Steeltoe.Discovery.Kubernetes.Discovery.KubernetesDiscoveryOptions
  langs:
  - csharp
  - vb
  name: CacheTTL
  nameWithType: KubernetesDiscoveryOptions.CacheTTL
  fullName: Steeltoe.Discovery.Kubernetes.Discovery.KubernetesDiscoveryOptions.CacheTTL
  type: Property
  source:
    remote:
      path: src/Discovery/src/Kubernetes/Discovery/KubernetesDiscoveryOptions.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: CacheTTL
    path: ../Steeltoe/src/Discovery/src/Kubernetes/Discovery/KubernetesDiscoveryOptions.cs
    startLine: 58
  assemblies:
  - Steeltoe.Discovery.Kubernetes
  namespace: Steeltoe.Discovery.Kubernetes.Discovery
  summary: "\nGets or sets the time in seconds that service instance cache records should remain active\n"
  remarks: 'configuration property: eureka:client:cacheTTL'
  example: []
  syntax:
    content: public int CacheTTL { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property CacheTTL As Integer
  overload: Steeltoe.Discovery.Kubernetes.Discovery.KubernetesDiscoveryOptions.CacheTTL*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Steeltoe.Discovery.Kubernetes.Discovery.KubernetesDiscoveryOptions.ToString
  commentId: M:Steeltoe.Discovery.Kubernetes.Discovery.KubernetesDiscoveryOptions.ToString
  id: ToString
  parent: Steeltoe.Discovery.Kubernetes.Discovery.KubernetesDiscoveryOptions
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: KubernetesDiscoveryOptions.ToString()
  fullName: Steeltoe.Discovery.Kubernetes.Discovery.KubernetesDiscoveryOptions.ToString()
  type: Method
  source:
    remote:
      path: src/Discovery/src/Kubernetes/Discovery/KubernetesDiscoveryOptions.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: ToString
    path: ../Steeltoe/src/Discovery/src/Kubernetes/Discovery/KubernetesDiscoveryOptions.cs
    startLine: 60
  assemblies:
  - Steeltoe.Discovery.Kubernetes
  namespace: Steeltoe.Discovery.Kubernetes.Discovery
  syntax:
    content: public override string ToString()
    return:
      type: System.String
    content.vb: Public Overrides Function ToString As String
  overridden: System.Object.ToString
  overload: Steeltoe.Discovery.Kubernetes.Discovery.KubernetesDiscoveryOptions.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: Steeltoe.Discovery.Kubernetes.Discovery
  commentId: N:Steeltoe.Discovery.Kubernetes.Discovery
  name: Steeltoe.Discovery.Kubernetes.Discovery
  nameWithType: Steeltoe.Discovery.Kubernetes.Discovery
  fullName: Steeltoe.Discovery.Kubernetes.Discovery
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Steeltoe.Discovery.Kubernetes.Discovery.KubernetesDiscoveryOptions.Enabled*
  commentId: Overload:Steeltoe.Discovery.Kubernetes.Discovery.KubernetesDiscoveryOptions.Enabled
  name: Enabled
  nameWithType: KubernetesDiscoveryOptions.Enabled
  fullName: Steeltoe.Discovery.Kubernetes.Discovery.KubernetesDiscoveryOptions.Enabled
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Steeltoe.Discovery.Kubernetes.Discovery.KubernetesDiscoveryOptions.ServiceName*
  commentId: Overload:Steeltoe.Discovery.Kubernetes.Discovery.KubernetesDiscoveryOptions.ServiceName
  name: ServiceName
  nameWithType: KubernetesDiscoveryOptions.ServiceName
  fullName: Steeltoe.Discovery.Kubernetes.Discovery.KubernetesDiscoveryOptions.ServiceName
- uid: Steeltoe.Discovery.Kubernetes.Discovery.KubernetesDiscoveryOptions.AllNamespaces*
  commentId: Overload:Steeltoe.Discovery.Kubernetes.Discovery.KubernetesDiscoveryOptions.AllNamespaces
  name: AllNamespaces
  nameWithType: KubernetesDiscoveryOptions.AllNamespaces
  fullName: Steeltoe.Discovery.Kubernetes.Discovery.KubernetesDiscoveryOptions.AllNamespaces
- uid: Steeltoe.Discovery.Kubernetes.Discovery.KubernetesDiscoveryOptions.Namespace*
  commentId: Overload:Steeltoe.Discovery.Kubernetes.Discovery.KubernetesDiscoveryOptions.Namespace
  name: Namespace
  nameWithType: KubernetesDiscoveryOptions.Namespace
  fullName: Steeltoe.Discovery.Kubernetes.Discovery.KubernetesDiscoveryOptions.Namespace
- uid: Steeltoe.Discovery.Kubernetes.Discovery.KubernetesDiscoveryOptions.KnownSecurePorts*
  commentId: Overload:Steeltoe.Discovery.Kubernetes.Discovery.KubernetesDiscoveryOptions.KnownSecurePorts
  name: KnownSecurePorts
  nameWithType: KubernetesDiscoveryOptions.KnownSecurePorts
  fullName: Steeltoe.Discovery.Kubernetes.Discovery.KubernetesDiscoveryOptions.KnownSecurePorts
- uid: System.Collections.Generic.List{System.Int32}
  commentId: T:System.Collections.Generic.List{System.Int32}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<Int32>
  nameWithType: List<Int32>
  fullName: System.Collections.Generic.List<System.Int32>
  nameWithType.vb: List(Of Int32)
  fullName.vb: System.Collections.Generic.List(Of System.Int32)
  name.vb: List(Of Int32)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Steeltoe.Discovery.Kubernetes.Discovery.KubernetesDiscoveryOptions.ServiceLabels*
  commentId: Overload:Steeltoe.Discovery.Kubernetes.Discovery.KubernetesDiscoveryOptions.ServiceLabels
  name: ServiceLabels
  nameWithType: KubernetesDiscoveryOptions.ServiceLabels
  fullName: Steeltoe.Discovery.Kubernetes.Discovery.KubernetesDiscoveryOptions.ServiceLabels
- uid: System.Collections.Generic.Dictionary{System.String,System.String}
  commentId: T:System.Collections.Generic.Dictionary{System.String,System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  name: Dictionary<String, String>
  nameWithType: Dictionary<String, String>
  fullName: System.Collections.Generic.Dictionary<System.String, System.String>
  nameWithType.vb: Dictionary(Of String, String)
  fullName.vb: System.Collections.Generic.Dictionary(Of System.String, System.String)
  name.vb: Dictionary(Of String, String)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Dictionary`2
  commentId: T:System.Collections.Generic.Dictionary`2
  isExternal: true
  name: Dictionary<TKey, TValue>
  nameWithType: Dictionary<TKey, TValue>
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>
  nameWithType.vb: Dictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue)
  name.vb: Dictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Discovery.Kubernetes.Discovery.KubernetesDiscoveryOptions.PrimaryPortName*
  commentId: Overload:Steeltoe.Discovery.Kubernetes.Discovery.KubernetesDiscoveryOptions.PrimaryPortName
  name: PrimaryPortName
  nameWithType: KubernetesDiscoveryOptions.PrimaryPortName
  fullName: Steeltoe.Discovery.Kubernetes.Discovery.KubernetesDiscoveryOptions.PrimaryPortName
- uid: Steeltoe.Discovery.Kubernetes.Discovery.KubernetesDiscoveryOptions.Metadata*
  commentId: Overload:Steeltoe.Discovery.Kubernetes.Discovery.KubernetesDiscoveryOptions.Metadata
  name: Metadata
  nameWithType: KubernetesDiscoveryOptions.Metadata
  fullName: Steeltoe.Discovery.Kubernetes.Discovery.KubernetesDiscoveryOptions.Metadata
- uid: Steeltoe.Discovery.Kubernetes.Discovery.Metadata
  commentId: T:Steeltoe.Discovery.Kubernetes.Discovery.Metadata
  parent: Steeltoe.Discovery.Kubernetes.Discovery
  name: Metadata
  nameWithType: Metadata
  fullName: Steeltoe.Discovery.Kubernetes.Discovery.Metadata
- uid: Steeltoe.Discovery.Kubernetes.Discovery.KubernetesDiscoveryOptions.CacheTTL*
  commentId: Overload:Steeltoe.Discovery.Kubernetes.Discovery.KubernetesDiscoveryOptions.CacheTTL
  name: CacheTTL
  nameWithType: KubernetesDiscoveryOptions.CacheTTL
  fullName: Steeltoe.Discovery.Kubernetes.Discovery.KubernetesDiscoveryOptions.CacheTTL
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Discovery.Kubernetes.Discovery.KubernetesDiscoveryOptions.ToString*
  commentId: Overload:Steeltoe.Discovery.Kubernetes.Discovery.KubernetesDiscoveryOptions.ToString
  name: ToString
  nameWithType: KubernetesDiscoveryOptions.ToString
  fullName: Steeltoe.Discovery.Kubernetes.Discovery.KubernetesDiscoveryOptions.ToString
