### YamlMime:ManagedReference
items:
- uid: Steeltoe.Messaging.Core.CachingDestinationResolverProxy`1
  commentId: T:Steeltoe.Messaging.Core.CachingDestinationResolverProxy`1
  id: CachingDestinationResolverProxy`1
  parent: Steeltoe.Messaging.Core
  children:
  - Steeltoe.Messaging.Core.CachingDestinationResolverProxy`1.#ctor(Steeltoe.Messaging.Core.IDestinationResolver{`0})
  - Steeltoe.Messaging.Core.CachingDestinationResolverProxy`1.ResolveDestination(System.String)
  - Steeltoe.Messaging.Core.CachingDestinationResolverProxy`1.Steeltoe#Messaging#Core#IDestinationResolver#ResolveDestination(System.String)
  langs:
  - csharp
  - vb
  name: CachingDestinationResolverProxy<D>
  nameWithType: CachingDestinationResolverProxy<D>
  fullName: Steeltoe.Messaging.Core.CachingDestinationResolverProxy<D>
  type: Class
  source:
    remote:
      path: src/Messaging/src/MessagingBase/Core/CachingDestinationResolverProxy.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: CachingDestinationResolverProxy
    path: ../Steeltoe/src/Messaging/src/MessagingBase/Core/CachingDestinationResolverProxy.cs
    startLine: 9
  assemblies:
  - Steeltoe.Messaging.MessagingBase
  namespace: Steeltoe.Messaging.Core
  syntax:
    content: 'public class CachingDestinationResolverProxy<D> : IDestinationResolver<D>, IDestinationResolver'
    typeParameters:
    - id: D
    content.vb: >-
      Public Class CachingDestinationResolverProxy(Of D)

          Implements IDestinationResolver(Of D), IDestinationResolver
  inheritance:
  - System.Object
  implements:
  - Steeltoe.Messaging.Core.IDestinationResolver{{D}}
  - Steeltoe.Messaging.Core.IDestinationResolver
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  nameWithType.vb: CachingDestinationResolverProxy(Of D)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
  fullName.vb: Steeltoe.Messaging.Core.CachingDestinationResolverProxy(Of D)
  name.vb: CachingDestinationResolverProxy(Of D)
- uid: Steeltoe.Messaging.Core.CachingDestinationResolverProxy`1.#ctor(Steeltoe.Messaging.Core.IDestinationResolver{`0})
  commentId: M:Steeltoe.Messaging.Core.CachingDestinationResolverProxy`1.#ctor(Steeltoe.Messaging.Core.IDestinationResolver{`0})
  id: '#ctor(Steeltoe.Messaging.Core.IDestinationResolver{`0})'
  parent: Steeltoe.Messaging.Core.CachingDestinationResolverProxy`1
  langs:
  - csharp
  - vb
  name: CachingDestinationResolverProxy(IDestinationResolver<D>)
  nameWithType: CachingDestinationResolverProxy<D>.CachingDestinationResolverProxy(IDestinationResolver<D>)
  fullName: Steeltoe.Messaging.Core.CachingDestinationResolverProxy<D>.CachingDestinationResolverProxy(Steeltoe.Messaging.Core.IDestinationResolver<D>)
  type: Constructor
  source:
    remote:
      path: src/Messaging/src/MessagingBase/Core/CachingDestinationResolverProxy.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: .ctor
    path: ../Steeltoe/src/Messaging/src/MessagingBase/Core/CachingDestinationResolverProxy.cs
    startLine: 15
  assemblies:
  - Steeltoe.Messaging.MessagingBase
  namespace: Steeltoe.Messaging.Core
  syntax:
    content: public CachingDestinationResolverProxy(IDestinationResolver<D> targetDestinationResolver)
    parameters:
    - id: targetDestinationResolver
      type: Steeltoe.Messaging.Core.IDestinationResolver{{D}}
    content.vb: Public Sub New(targetDestinationResolver As IDestinationResolver(Of D))
  overload: Steeltoe.Messaging.Core.CachingDestinationResolverProxy`1.#ctor*
  nameWithType.vb: CachingDestinationResolverProxy(Of D).CachingDestinationResolverProxy(IDestinationResolver(Of D))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Steeltoe.Messaging.Core.CachingDestinationResolverProxy(Of D).CachingDestinationResolverProxy(Steeltoe.Messaging.Core.IDestinationResolver(Of D))
  name.vb: CachingDestinationResolverProxy(IDestinationResolver(Of D))
- uid: Steeltoe.Messaging.Core.CachingDestinationResolverProxy`1.ResolveDestination(System.String)
  commentId: M:Steeltoe.Messaging.Core.CachingDestinationResolverProxy`1.ResolveDestination(System.String)
  id: ResolveDestination(System.String)
  parent: Steeltoe.Messaging.Core.CachingDestinationResolverProxy`1
  langs:
  - csharp
  - vb
  name: ResolveDestination(String)
  nameWithType: CachingDestinationResolverProxy<D>.ResolveDestination(String)
  fullName: Steeltoe.Messaging.Core.CachingDestinationResolverProxy<D>.ResolveDestination(System.String)
  type: Method
  source:
    remote:
      path: src/Messaging/src/MessagingBase/Core/CachingDestinationResolverProxy.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: ResolveDestination
    path: ../Steeltoe/src/Messaging/src/MessagingBase/Core/CachingDestinationResolverProxy.cs
    startLine: 25
  assemblies:
  - Steeltoe.Messaging.MessagingBase
  namespace: Steeltoe.Messaging.Core
  syntax:
    content: public D ResolveDestination(string name)
    parameters:
    - id: name
      type: System.String
    return:
      type: '{D}'
    content.vb: Public Function ResolveDestination(name As String) As D
  overload: Steeltoe.Messaging.Core.CachingDestinationResolverProxy`1.ResolveDestination*
  implements:
  - Steeltoe.Messaging.Core.IDestinationResolver{{D}}.ResolveDestination(System.String)
  nameWithType.vb: CachingDestinationResolverProxy(Of D).ResolveDestination(String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Steeltoe.Messaging.Core.CachingDestinationResolverProxy(Of D).ResolveDestination(System.String)
- uid: Steeltoe.Messaging.Core.CachingDestinationResolverProxy`1.Steeltoe#Messaging#Core#IDestinationResolver#ResolveDestination(System.String)
  commentId: M:Steeltoe.Messaging.Core.CachingDestinationResolverProxy`1.Steeltoe#Messaging#Core#IDestinationResolver#ResolveDestination(System.String)
  id: Steeltoe#Messaging#Core#IDestinationResolver#ResolveDestination(System.String)
  isEii: true
  parent: Steeltoe.Messaging.Core.CachingDestinationResolverProxy`1
  langs:
  - csharp
  - vb
  name: IDestinationResolver.ResolveDestination(String)
  nameWithType: CachingDestinationResolverProxy<D>.IDestinationResolver.ResolveDestination(String)
  fullName: Steeltoe.Messaging.Core.CachingDestinationResolverProxy<D>.Steeltoe.Messaging.Core.IDestinationResolver.ResolveDestination(System.String)
  type: Method
  source:
    remote:
      path: src/Messaging/src/MessagingBase/Core/CachingDestinationResolverProxy.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Steeltoe.Messaging.Core.IDestinationResolver.ResolveDestination
    path: ../Steeltoe/src/Messaging/src/MessagingBase/Core/CachingDestinationResolverProxy.cs
    startLine: 37
  assemblies:
  - Steeltoe.Messaging.MessagingBase
  namespace: Steeltoe.Messaging.Core
  syntax:
    content: object IDestinationResolver.ResolveDestination(string name)
    parameters:
    - id: name
      type: System.String
    return:
      type: System.Object
    content.vb: Function Steeltoe.Messaging.Core.IDestinationResolver.ResolveDestination(name As String) As Object Implements IDestinationResolver.ResolveDestination
  overload: Steeltoe.Messaging.Core.CachingDestinationResolverProxy`1.Steeltoe#Messaging#Core#IDestinationResolver#ResolveDestination*
  implements:
  - Steeltoe.Messaging.Core.IDestinationResolver.ResolveDestination(System.String)
  nameWithType.vb: CachingDestinationResolverProxy(Of D).Steeltoe.Messaging.Core.IDestinationResolver.ResolveDestination(String)
  fullName.vb: Steeltoe.Messaging.Core.CachingDestinationResolverProxy(Of D).Steeltoe.Messaging.Core.IDestinationResolver.ResolveDestination(System.String)
  name.vb: Steeltoe.Messaging.Core.IDestinationResolver.ResolveDestination(String)
references:
- uid: Steeltoe.Messaging.Core
  commentId: N:Steeltoe.Messaging.Core
  name: Steeltoe.Messaging.Core
  nameWithType: Steeltoe.Messaging.Core
  fullName: Steeltoe.Messaging.Core
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Steeltoe.Messaging.Core.IDestinationResolver{{D}}
  commentId: T:Steeltoe.Messaging.Core.IDestinationResolver{`0}
  parent: Steeltoe.Messaging.Core
  definition: Steeltoe.Messaging.Core.IDestinationResolver`1
  name: IDestinationResolver<D>
  nameWithType: IDestinationResolver<D>
  fullName: Steeltoe.Messaging.Core.IDestinationResolver<D>
  nameWithType.vb: IDestinationResolver(Of D)
  fullName.vb: Steeltoe.Messaging.Core.IDestinationResolver(Of D)
  name.vb: IDestinationResolver(Of D)
  spec.csharp:
  - uid: Steeltoe.Messaging.Core.IDestinationResolver`1
    name: IDestinationResolver
    nameWithType: IDestinationResolver
    fullName: Steeltoe.Messaging.Core.IDestinationResolver
  - name: <
    nameWithType: <
    fullName: <
  - name: D
    nameWithType: D
    fullName: D
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Steeltoe.Messaging.Core.IDestinationResolver`1
    name: IDestinationResolver
    nameWithType: IDestinationResolver
    fullName: Steeltoe.Messaging.Core.IDestinationResolver
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: D
    nameWithType: D
    fullName: D
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Core.IDestinationResolver
  commentId: T:Steeltoe.Messaging.Core.IDestinationResolver
  parent: Steeltoe.Messaging.Core
  name: IDestinationResolver
  nameWithType: IDestinationResolver
  fullName: Steeltoe.Messaging.Core.IDestinationResolver
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Steeltoe.Messaging.Core.IDestinationResolver`1
  commentId: T:Steeltoe.Messaging.Core.IDestinationResolver`1
  name: IDestinationResolver<T>
  nameWithType: IDestinationResolver<T>
  fullName: Steeltoe.Messaging.Core.IDestinationResolver<T>
  nameWithType.vb: IDestinationResolver(Of T)
  fullName.vb: Steeltoe.Messaging.Core.IDestinationResolver(Of T)
  name.vb: IDestinationResolver(Of T)
  spec.csharp:
  - uid: Steeltoe.Messaging.Core.IDestinationResolver`1
    name: IDestinationResolver
    nameWithType: IDestinationResolver
    fullName: Steeltoe.Messaging.Core.IDestinationResolver
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Steeltoe.Messaging.Core.IDestinationResolver`1
    name: IDestinationResolver
    nameWithType: IDestinationResolver
    fullName: Steeltoe.Messaging.Core.IDestinationResolver
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Core.CachingDestinationResolverProxy`1.#ctor*
  commentId: Overload:Steeltoe.Messaging.Core.CachingDestinationResolverProxy`1.#ctor
  name: CachingDestinationResolverProxy
  nameWithType: CachingDestinationResolverProxy<D>.CachingDestinationResolverProxy
  fullName: Steeltoe.Messaging.Core.CachingDestinationResolverProxy<D>.CachingDestinationResolverProxy
  nameWithType.vb: CachingDestinationResolverProxy(Of D).CachingDestinationResolverProxy
  fullName.vb: Steeltoe.Messaging.Core.CachingDestinationResolverProxy(Of D).CachingDestinationResolverProxy
- uid: Steeltoe.Messaging.Core.CachingDestinationResolverProxy`1.ResolveDestination*
  commentId: Overload:Steeltoe.Messaging.Core.CachingDestinationResolverProxy`1.ResolveDestination
  name: ResolveDestination
  nameWithType: CachingDestinationResolverProxy<D>.ResolveDestination
  fullName: Steeltoe.Messaging.Core.CachingDestinationResolverProxy<D>.ResolveDestination
  nameWithType.vb: CachingDestinationResolverProxy(Of D).ResolveDestination
  fullName.vb: Steeltoe.Messaging.Core.CachingDestinationResolverProxy(Of D).ResolveDestination
- uid: Steeltoe.Messaging.Core.IDestinationResolver{{D}}.ResolveDestination(System.String)
  commentId: M:Steeltoe.Messaging.Core.IDestinationResolver{`0}.ResolveDestination(System.String)
  parent: Steeltoe.Messaging.Core.IDestinationResolver{{D}}
  definition: Steeltoe.Messaging.Core.IDestinationResolver`1.ResolveDestination(System.String)
  name: ResolveDestination(String)
  nameWithType: IDestinationResolver<D>.ResolveDestination(String)
  fullName: Steeltoe.Messaging.Core.IDestinationResolver<D>.ResolveDestination(System.String)
  nameWithType.vb: IDestinationResolver(Of D).ResolveDestination(String)
  fullName.vb: Steeltoe.Messaging.Core.IDestinationResolver(Of D).ResolveDestination(System.String)
  spec.csharp:
  - uid: Steeltoe.Messaging.Core.IDestinationResolver`1.ResolveDestination(System.String)
    name: ResolveDestination
    nameWithType: IDestinationResolver<D>.ResolveDestination
    fullName: Steeltoe.Messaging.Core.IDestinationResolver<D>.ResolveDestination
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Core.IDestinationResolver`1.ResolveDestination(System.String)
    name: ResolveDestination
    nameWithType: IDestinationResolver(Of D).ResolveDestination
    fullName: Steeltoe.Messaging.Core.IDestinationResolver(Of D).ResolveDestination
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: '{D}'
  commentId: '!:D'
  definition: D
  name: D
  nameWithType: D
  fullName: D
- uid: Steeltoe.Messaging.Core.IDestinationResolver`1.ResolveDestination(System.String)
  commentId: M:Steeltoe.Messaging.Core.IDestinationResolver`1.ResolveDestination(System.String)
  isExternal: true
  name: ResolveDestination(String)
  nameWithType: IDestinationResolver<T>.ResolveDestination(String)
  fullName: Steeltoe.Messaging.Core.IDestinationResolver<T>.ResolveDestination(System.String)
  nameWithType.vb: IDestinationResolver(Of T).ResolveDestination(String)
  fullName.vb: Steeltoe.Messaging.Core.IDestinationResolver(Of T).ResolveDestination(System.String)
  spec.csharp:
  - uid: Steeltoe.Messaging.Core.IDestinationResolver`1.ResolveDestination(System.String)
    name: ResolveDestination
    nameWithType: IDestinationResolver<T>.ResolveDestination
    fullName: Steeltoe.Messaging.Core.IDestinationResolver<T>.ResolveDestination
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Core.IDestinationResolver`1.ResolveDestination(System.String)
    name: ResolveDestination
    nameWithType: IDestinationResolver(Of T).ResolveDestination
    fullName: Steeltoe.Messaging.Core.IDestinationResolver(Of T).ResolveDestination
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: D
  name: D
  nameWithType: D
  fullName: D
- uid: Steeltoe.Messaging.Core.CachingDestinationResolverProxy`1.Steeltoe#Messaging#Core#IDestinationResolver#ResolveDestination*
  commentId: Overload:Steeltoe.Messaging.Core.CachingDestinationResolverProxy`1.Steeltoe#Messaging#Core#IDestinationResolver#ResolveDestination
  name: IDestinationResolver.ResolveDestination
  nameWithType: CachingDestinationResolverProxy<D>.IDestinationResolver.ResolveDestination
  fullName: Steeltoe.Messaging.Core.CachingDestinationResolverProxy<D>.Steeltoe.Messaging.Core.IDestinationResolver.ResolveDestination
  nameWithType.vb: CachingDestinationResolverProxy(Of D).Steeltoe.Messaging.Core.IDestinationResolver.ResolveDestination
  fullName.vb: Steeltoe.Messaging.Core.CachingDestinationResolverProxy(Of D).Steeltoe.Messaging.Core.IDestinationResolver.ResolveDestination
  name.vb: Steeltoe.Messaging.Core.IDestinationResolver.ResolveDestination
- uid: Steeltoe.Messaging.Core.IDestinationResolver.ResolveDestination(System.String)
  commentId: M:Steeltoe.Messaging.Core.IDestinationResolver.ResolveDestination(System.String)
  parent: Steeltoe.Messaging.Core.IDestinationResolver
  isExternal: true
  name: ResolveDestination(String)
  nameWithType: IDestinationResolver.ResolveDestination(String)
  fullName: Steeltoe.Messaging.Core.IDestinationResolver.ResolveDestination(System.String)
  spec.csharp:
  - uid: Steeltoe.Messaging.Core.IDestinationResolver.ResolveDestination(System.String)
    name: ResolveDestination
    nameWithType: IDestinationResolver.ResolveDestination
    fullName: Steeltoe.Messaging.Core.IDestinationResolver.ResolveDestination
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Core.IDestinationResolver.ResolveDestination(System.String)
    name: ResolveDestination
    nameWithType: IDestinationResolver.ResolveDestination
    fullName: Steeltoe.Messaging.Core.IDestinationResolver.ResolveDestination
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
