### YamlMime:ManagedReference
items:
- uid: Steeltoe.Management.TaskCore.DelegatingTask
  commentId: T:Steeltoe.Management.TaskCore.DelegatingTask
  id: DelegatingTask
  parent: Steeltoe.Management.TaskCore
  children:
  - Steeltoe.Management.TaskCore.DelegatingTask.#ctor(System.String,System.Action)
  - Steeltoe.Management.TaskCore.DelegatingTask.Name
  - Steeltoe.Management.TaskCore.DelegatingTask.Run
  langs:
  - csharp
  - vb
  name: DelegatingTask
  nameWithType: DelegatingTask
  fullName: Steeltoe.Management.TaskCore.DelegatingTask
  type: Class
  source:
    remote:
      path: src/Management/src/TaskCore/DelegatingTask.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: DelegatingTask
    path: ../Steeltoe/src/Management/src/TaskCore/DelegatingTask.cs
    startLine: 9
  assemblies:
  - Steeltoe.Management.TaskCore
  namespace: Steeltoe.Management.TaskCore
  syntax:
    content: 'public class DelegatingTask : IApplicationTask'
    content.vb: >-
      Public Class DelegatingTask

          Implements IApplicationTask
  inheritance:
  - System.Object
  implements:
  - Steeltoe.Common.IApplicationTask
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Steeltoe.Management.TaskCore.DelegatingTask.#ctor(System.String,System.Action)
  commentId: M:Steeltoe.Management.TaskCore.DelegatingTask.#ctor(System.String,System.Action)
  id: '#ctor(System.String,System.Action)'
  parent: Steeltoe.Management.TaskCore.DelegatingTask
  langs:
  - csharp
  - vb
  name: DelegatingTask(String, Action)
  nameWithType: DelegatingTask.DelegatingTask(String, Action)
  fullName: Steeltoe.Management.TaskCore.DelegatingTask.DelegatingTask(System.String, System.Action)
  type: Constructor
  source:
    remote:
      path: src/Management/src/TaskCore/DelegatingTask.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: .ctor
    path: ../Steeltoe/src/Management/src/TaskCore/DelegatingTask.cs
    startLine: 13
  assemblies:
  - Steeltoe.Management.TaskCore
  namespace: Steeltoe.Management.TaskCore
  syntax:
    content: public DelegatingTask(string name, Action run)
    parameters:
    - id: name
      type: System.String
    - id: run
      type: System.Action
    content.vb: Public Sub New(name As String, run As Action)
  overload: Steeltoe.Management.TaskCore.DelegatingTask.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Steeltoe.Management.TaskCore.DelegatingTask.Name
  commentId: P:Steeltoe.Management.TaskCore.DelegatingTask.Name
  id: Name
  parent: Steeltoe.Management.TaskCore.DelegatingTask
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: DelegatingTask.Name
  fullName: Steeltoe.Management.TaskCore.DelegatingTask.Name
  type: Property
  source:
    remote:
      path: src/Management/src/TaskCore/DelegatingTask.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Name
    path: ../Steeltoe/src/Management/src/TaskCore/DelegatingTask.cs
    startLine: 19
  assemblies:
  - Steeltoe.Management.TaskCore
  namespace: Steeltoe.Management.TaskCore
  syntax:
    content: public string Name { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property Name As String
  overload: Steeltoe.Management.TaskCore.DelegatingTask.Name*
  implements:
  - Steeltoe.Common.IApplicationTask.Name
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Steeltoe.Management.TaskCore.DelegatingTask.Run
  commentId: M:Steeltoe.Management.TaskCore.DelegatingTask.Run
  id: Run
  parent: Steeltoe.Management.TaskCore.DelegatingTask
  langs:
  - csharp
  - vb
  name: Run()
  nameWithType: DelegatingTask.Run()
  fullName: Steeltoe.Management.TaskCore.DelegatingTask.Run()
  type: Method
  source:
    remote:
      path: src/Management/src/TaskCore/DelegatingTask.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Run
    path: ../Steeltoe/src/Management/src/TaskCore/DelegatingTask.cs
    startLine: 21
  assemblies:
  - Steeltoe.Management.TaskCore
  namespace: Steeltoe.Management.TaskCore
  syntax:
    content: public void Run()
    content.vb: Public Sub Run
  overload: Steeltoe.Management.TaskCore.DelegatingTask.Run*
  implements:
  - Steeltoe.Common.IApplicationTask.Run
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Steeltoe.Management.TaskCore
  commentId: N:Steeltoe.Management.TaskCore
  name: Steeltoe.Management.TaskCore
  nameWithType: Steeltoe.Management.TaskCore
  fullName: Steeltoe.Management.TaskCore
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Steeltoe.Common.IApplicationTask
  commentId: T:Steeltoe.Common.IApplicationTask
  parent: Steeltoe.Common
  name: IApplicationTask
  nameWithType: IApplicationTask
  fullName: Steeltoe.Common.IApplicationTask
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Steeltoe.Common
  commentId: N:Steeltoe.Common
  name: Steeltoe.Common
  nameWithType: Steeltoe.Common
  fullName: Steeltoe.Common
- uid: Steeltoe.Management.TaskCore.DelegatingTask.#ctor*
  commentId: Overload:Steeltoe.Management.TaskCore.DelegatingTask.#ctor
  name: DelegatingTask
  nameWithType: DelegatingTask.DelegatingTask
  fullName: Steeltoe.Management.TaskCore.DelegatingTask.DelegatingTask
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Action
  commentId: T:System.Action
  parent: System
  isExternal: true
  name: Action
  nameWithType: Action
  fullName: System.Action
- uid: Steeltoe.Management.TaskCore.DelegatingTask.Name*
  commentId: Overload:Steeltoe.Management.TaskCore.DelegatingTask.Name
  name: Name
  nameWithType: DelegatingTask.Name
  fullName: Steeltoe.Management.TaskCore.DelegatingTask.Name
- uid: Steeltoe.Common.IApplicationTask.Name
  commentId: P:Steeltoe.Common.IApplicationTask.Name
  parent: Steeltoe.Common.IApplicationTask
  name: Name
  nameWithType: IApplicationTask.Name
  fullName: Steeltoe.Common.IApplicationTask.Name
- uid: Steeltoe.Management.TaskCore.DelegatingTask.Run*
  commentId: Overload:Steeltoe.Management.TaskCore.DelegatingTask.Run
  name: Run
  nameWithType: DelegatingTask.Run
  fullName: Steeltoe.Management.TaskCore.DelegatingTask.Run
- uid: Steeltoe.Common.IApplicationTask.Run
  commentId: M:Steeltoe.Common.IApplicationTask.Run
  parent: Steeltoe.Common.IApplicationTask
  name: Run()
  nameWithType: IApplicationTask.Run()
  fullName: Steeltoe.Common.IApplicationTask.Run()
  spec.csharp:
  - uid: Steeltoe.Common.IApplicationTask.Run
    name: Run
    nameWithType: IApplicationTask.Run
    fullName: Steeltoe.Common.IApplicationTask.Run
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Common.IApplicationTask.Run
    name: Run
    nameWithType: IApplicationTask.Run
    fullName: Steeltoe.Common.IApplicationTask.Run
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
