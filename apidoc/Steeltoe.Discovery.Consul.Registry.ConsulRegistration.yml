### YamlMime:ManagedReference
items:
- uid: Steeltoe.Discovery.Consul.Registry.ConsulRegistration
  commentId: T:Steeltoe.Discovery.Consul.Registry.ConsulRegistration
  id: ConsulRegistration
  parent: Steeltoe.Discovery.Consul.Registry
  children:
  - Steeltoe.Discovery.Consul.Registry.ConsulRegistration.#ctor(AgentServiceRegistration,IOptionsMonitor{Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions})
  - Steeltoe.Discovery.Consul.Registry.ConsulRegistration.#ctor(AgentServiceRegistration,Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions)
  - Steeltoe.Discovery.Consul.Registry.ConsulRegistration.CreateRegistration(Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions,IApplicationInstanceInfo)
  - Steeltoe.Discovery.Consul.Registry.ConsulRegistration.Host
  - Steeltoe.Discovery.Consul.Registry.ConsulRegistration.InstanceId
  - Steeltoe.Discovery.Consul.Registry.ConsulRegistration.IsSecure
  - Steeltoe.Discovery.Consul.Registry.ConsulRegistration.Metadata
  - Steeltoe.Discovery.Consul.Registry.ConsulRegistration.Port
  - Steeltoe.Discovery.Consul.Registry.ConsulRegistration.Service
  - Steeltoe.Discovery.Consul.Registry.ConsulRegistration.ServiceId
  - Steeltoe.Discovery.Consul.Registry.ConsulRegistration.Uri
  langs:
  - csharp
  - vb
  name: ConsulRegistration
  nameWithType: ConsulRegistration
  fullName: Steeltoe.Discovery.Consul.Registry.ConsulRegistration
  type: Class
  source:
    remote:
      path: src/Discovery/src/Consul/Registry/ConsulRegistration.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: ConsulRegistration
    path: ../Steeltoe/src/Discovery/src/Consul/Registry/ConsulRegistration.cs
    startLine: 18
  assemblies:
  - Steeltoe.Discovery.Consul
  namespace: Steeltoe.Discovery.Consul.Registry
  summary: "\nThe registration to be used when registering with the Consul server\n"
  example: []
  syntax:
    content: 'public class ConsulRegistration : IConsulRegistration, IServiceInstance'
    content.vb: >-
      Public Class ConsulRegistration

          Implements IConsulRegistration, IServiceInstance
  inheritance:
  - System.Object
  implements:
  - Steeltoe.Discovery.Consul.Registry.IConsulRegistration
  - IServiceInstance
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Steeltoe.Discovery.Consul.Registry.ConsulRegistration.#ctor(AgentServiceRegistration,Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions)
  commentId: M:Steeltoe.Discovery.Consul.Registry.ConsulRegistration.#ctor(AgentServiceRegistration,Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions)
  id: '#ctor(AgentServiceRegistration,Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions)'
  parent: Steeltoe.Discovery.Consul.Registry.ConsulRegistration
  langs:
  - csharp
  - vb
  name: ConsulRegistration(AgentServiceRegistration, ConsulDiscoveryOptions)
  nameWithType: ConsulRegistration.ConsulRegistration(AgentServiceRegistration, ConsulDiscoveryOptions)
  fullName: Steeltoe.Discovery.Consul.Registry.ConsulRegistration.ConsulRegistration(AgentServiceRegistration, Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions)
  type: Constructor
  source:
    remote:
      path: src/Discovery/src/Consul/Registry/ConsulRegistration.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: .ctor
    path: ../Steeltoe/src/Discovery/src/Consul/Registry/ConsulRegistration.cs
    startLine: 42
  assemblies:
  - Steeltoe.Discovery.Consul
  namespace: Steeltoe.Discovery.Consul.Registry
  summary: "\nInitializes a new instance of the <xref href=\"Steeltoe.Discovery.Consul.Registry.ConsulRegistration\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  example: []
  syntax:
    content: public ConsulRegistration(AgentServiceRegistration agentServiceRegistration, ConsulDiscoveryOptions options)
    parameters:
    - id: agentServiceRegistration
      type: AgentServiceRegistration
      description: a Consul service registration to use
    - id: options
      type: Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions
      description: configuration options
    content.vb: Public Sub New(agentServiceRegistration As AgentServiceRegistration, options As ConsulDiscoveryOptions)
  overload: Steeltoe.Discovery.Consul.Registry.ConsulRegistration.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Steeltoe.Discovery.Consul.Registry.ConsulRegistration.#ctor(AgentServiceRegistration,IOptionsMonitor{Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions})
  commentId: M:Steeltoe.Discovery.Consul.Registry.ConsulRegistration.#ctor(AgentServiceRegistration,IOptionsMonitor{Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions})
  id: '#ctor(AgentServiceRegistration,IOptionsMonitor{Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions})'
  parent: Steeltoe.Discovery.Consul.Registry.ConsulRegistration
  langs:
  - csharp
  - vb
  name: ConsulRegistration(AgentServiceRegistration, IOptionsMonitor<ConsulDiscoveryOptions>)
  nameWithType: ConsulRegistration.ConsulRegistration(AgentServiceRegistration, IOptionsMonitor<ConsulDiscoveryOptions>)
  fullName: Steeltoe.Discovery.Consul.Registry.ConsulRegistration.ConsulRegistration(AgentServiceRegistration, IOptionsMonitor<Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions>)
  type: Constructor
  source:
    remote:
      path: src/Discovery/src/Consul/Registry/ConsulRegistration.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: .ctor
    path: ../Steeltoe/src/Discovery/src/Consul/Registry/ConsulRegistration.cs
    startLine: 55
  assemblies:
  - Steeltoe.Discovery.Consul
  namespace: Steeltoe.Discovery.Consul.Registry
  summary: "\nInitializes a new instance of the <xref href=\"Steeltoe.Discovery.Consul.Registry.ConsulRegistration\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  example: []
  syntax:
    content: public ConsulRegistration(AgentServiceRegistration agentServiceRegistration, IOptionsMonitor<ConsulDiscoveryOptions> optionsMonitor)
    parameters:
    - id: agentServiceRegistration
      type: AgentServiceRegistration
      description: a Consul service registration to use
    - id: optionsMonitor
      type: IOptionsMonitor{Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions}
      description: configuration options
    content.vb: Public Sub New(agentServiceRegistration As AgentServiceRegistration, optionsMonitor As IOptionsMonitor(Of ConsulDiscoveryOptions))
  overload: Steeltoe.Discovery.Consul.Registry.ConsulRegistration.#ctor*
  nameWithType.vb: ConsulRegistration.ConsulRegistration(AgentServiceRegistration, IOptionsMonitor(Of ConsulDiscoveryOptions))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Steeltoe.Discovery.Consul.Registry.ConsulRegistration.ConsulRegistration(AgentServiceRegistration, IOptionsMonitor(Of Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions))
  name.vb: ConsulRegistration(AgentServiceRegistration, IOptionsMonitor(Of ConsulDiscoveryOptions))
- uid: Steeltoe.Discovery.Consul.Registry.ConsulRegistration.Service
  commentId: P:Steeltoe.Discovery.Consul.Registry.ConsulRegistration.Service
  id: Service
  parent: Steeltoe.Discovery.Consul.Registry.ConsulRegistration
  langs:
  - csharp
  - vb
  name: Service
  nameWithType: ConsulRegistration.Service
  fullName: Steeltoe.Discovery.Consul.Registry.ConsulRegistration.Service
  type: Property
  source:
    remote:
      path: src/Discovery/src/Consul/Registry/ConsulRegistration.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Service
    path: ../Steeltoe/src/Discovery/src/Consul/Registry/ConsulRegistration.cs
    startLine: 78
  assemblies:
  - Steeltoe.Discovery.Consul
  namespace: Steeltoe.Discovery.Consul.Registry
  example: []
  syntax:
    content: public AgentServiceRegistration Service { get; }
    parameters: []
    return:
      type: AgentServiceRegistration
    content.vb: Public ReadOnly Property Service As AgentServiceRegistration
  overload: Steeltoe.Discovery.Consul.Registry.ConsulRegistration.Service*
  implements:
  - Steeltoe.Discovery.Consul.Registry.IConsulRegistration.Service
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Steeltoe.Discovery.Consul.Registry.ConsulRegistration.InstanceId
  commentId: P:Steeltoe.Discovery.Consul.Registry.ConsulRegistration.InstanceId
  id: InstanceId
  parent: Steeltoe.Discovery.Consul.Registry.ConsulRegistration
  langs:
  - csharp
  - vb
  name: InstanceId
  nameWithType: ConsulRegistration.InstanceId
  fullName: Steeltoe.Discovery.Consul.Registry.ConsulRegistration.InstanceId
  type: Property
  source:
    remote:
      path: src/Discovery/src/Consul/Registry/ConsulRegistration.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: InstanceId
    path: ../Steeltoe/src/Discovery/src/Consul/Registry/ConsulRegistration.cs
    startLine: 81
  assemblies:
  - Steeltoe.Discovery.Consul
  namespace: Steeltoe.Discovery.Consul.Registry
  example: []
  syntax:
    content: public string InstanceId { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property InstanceId As String
  overload: Steeltoe.Discovery.Consul.Registry.ConsulRegistration.InstanceId*
  implements:
  - Steeltoe.Discovery.Consul.Registry.IConsulRegistration.InstanceId
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Steeltoe.Discovery.Consul.Registry.ConsulRegistration.ServiceId
  commentId: P:Steeltoe.Discovery.Consul.Registry.ConsulRegistration.ServiceId
  id: ServiceId
  parent: Steeltoe.Discovery.Consul.Registry.ConsulRegistration
  langs:
  - csharp
  - vb
  name: ServiceId
  nameWithType: ConsulRegistration.ServiceId
  fullName: Steeltoe.Discovery.Consul.Registry.ConsulRegistration.ServiceId
  type: Property
  source:
    remote:
      path: src/Discovery/src/Consul/Registry/ConsulRegistration.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: ServiceId
    path: ../Steeltoe/src/Discovery/src/Consul/Registry/ConsulRegistration.cs
    startLine: 84
  assemblies:
  - Steeltoe.Discovery.Consul
  namespace: Steeltoe.Discovery.Consul.Registry
  example: []
  syntax:
    content: public string ServiceId { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property ServiceId As String
  overload: Steeltoe.Discovery.Consul.Registry.ConsulRegistration.ServiceId*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Steeltoe.Discovery.Consul.Registry.ConsulRegistration.Host
  commentId: P:Steeltoe.Discovery.Consul.Registry.ConsulRegistration.Host
  id: Host
  parent: Steeltoe.Discovery.Consul.Registry.ConsulRegistration
  langs:
  - csharp
  - vb
  name: Host
  nameWithType: ConsulRegistration.Host
  fullName: Steeltoe.Discovery.Consul.Registry.ConsulRegistration.Host
  type: Property
  source:
    remote:
      path: src/Discovery/src/Consul/Registry/ConsulRegistration.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Host
    path: ../Steeltoe/src/Discovery/src/Consul/Registry/ConsulRegistration.cs
    startLine: 87
  assemblies:
  - Steeltoe.Discovery.Consul
  namespace: Steeltoe.Discovery.Consul.Registry
  example: []
  syntax:
    content: public string Host { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property Host As String
  overload: Steeltoe.Discovery.Consul.Registry.ConsulRegistration.Host*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Steeltoe.Discovery.Consul.Registry.ConsulRegistration.Port
  commentId: P:Steeltoe.Discovery.Consul.Registry.ConsulRegistration.Port
  id: Port
  parent: Steeltoe.Discovery.Consul.Registry.ConsulRegistration
  langs:
  - csharp
  - vb
  name: Port
  nameWithType: ConsulRegistration.Port
  fullName: Steeltoe.Discovery.Consul.Registry.ConsulRegistration.Port
  type: Property
  source:
    remote:
      path: src/Discovery/src/Consul/Registry/ConsulRegistration.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Port
    path: ../Steeltoe/src/Discovery/src/Consul/Registry/ConsulRegistration.cs
    startLine: 90
  assemblies:
  - Steeltoe.Discovery.Consul
  namespace: Steeltoe.Discovery.Consul.Registry
  example: []
  syntax:
    content: public int Port { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property Port As Integer
  overload: Steeltoe.Discovery.Consul.Registry.ConsulRegistration.Port*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Steeltoe.Discovery.Consul.Registry.ConsulRegistration.IsSecure
  commentId: P:Steeltoe.Discovery.Consul.Registry.ConsulRegistration.IsSecure
  id: IsSecure
  parent: Steeltoe.Discovery.Consul.Registry.ConsulRegistration
  langs:
  - csharp
  - vb
  name: IsSecure
  nameWithType: ConsulRegistration.IsSecure
  fullName: Steeltoe.Discovery.Consul.Registry.ConsulRegistration.IsSecure
  type: Property
  source:
    remote:
      path: src/Discovery/src/Consul/Registry/ConsulRegistration.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: IsSecure
    path: ../Steeltoe/src/Discovery/src/Consul/Registry/ConsulRegistration.cs
    startLine: 93
  assemblies:
  - Steeltoe.Discovery.Consul
  namespace: Steeltoe.Discovery.Consul.Registry
  example: []
  syntax:
    content: public bool IsSecure { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsSecure As Boolean
  overload: Steeltoe.Discovery.Consul.Registry.ConsulRegistration.IsSecure*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Steeltoe.Discovery.Consul.Registry.ConsulRegistration.Uri
  commentId: P:Steeltoe.Discovery.Consul.Registry.ConsulRegistration.Uri
  id: Uri
  parent: Steeltoe.Discovery.Consul.Registry.ConsulRegistration
  langs:
  - csharp
  - vb
  name: Uri
  nameWithType: ConsulRegistration.Uri
  fullName: Steeltoe.Discovery.Consul.Registry.ConsulRegistration.Uri
  type: Property
  source:
    remote:
      path: src/Discovery/src/Consul/Registry/ConsulRegistration.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Uri
    path: ../Steeltoe/src/Discovery/src/Consul/Registry/ConsulRegistration.cs
    startLine: 102
  assemblies:
  - Steeltoe.Discovery.Consul
  namespace: Steeltoe.Discovery.Consul.Registry
  example: []
  syntax:
    content: public Uri Uri { get; }
    parameters: []
    return:
      type: System.Uri
    content.vb: Public ReadOnly Property Uri As Uri
  overload: Steeltoe.Discovery.Consul.Registry.ConsulRegistration.Uri*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Steeltoe.Discovery.Consul.Registry.ConsulRegistration.Metadata
  commentId: P:Steeltoe.Discovery.Consul.Registry.ConsulRegistration.Metadata
  id: Metadata
  parent: Steeltoe.Discovery.Consul.Registry.ConsulRegistration
  langs:
  - csharp
  - vb
  name: Metadata
  nameWithType: ConsulRegistration.Metadata
  fullName: Steeltoe.Discovery.Consul.Registry.ConsulRegistration.Metadata
  type: Property
  source:
    remote:
      path: src/Discovery/src/Consul/Registry/ConsulRegistration.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Metadata
    path: ../Steeltoe/src/Discovery/src/Consul/Registry/ConsulRegistration.cs
    startLine: 111
  assemblies:
  - Steeltoe.Discovery.Consul
  namespace: Steeltoe.Discovery.Consul.Registry
  example: []
  syntax:
    content: public IDictionary<string, string> Metadata { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IDictionary{System.String,System.String}
    content.vb: Public ReadOnly Property Metadata As IDictionary(Of String, String)
  overload: Steeltoe.Discovery.Consul.Registry.ConsulRegistration.Metadata*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Steeltoe.Discovery.Consul.Registry.ConsulRegistration.CreateRegistration(Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions,IApplicationInstanceInfo)
  commentId: M:Steeltoe.Discovery.Consul.Registry.ConsulRegistration.CreateRegistration(Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions,IApplicationInstanceInfo)
  id: CreateRegistration(Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions,IApplicationInstanceInfo)
  parent: Steeltoe.Discovery.Consul.Registry.ConsulRegistration
  langs:
  - csharp
  - vb
  name: CreateRegistration(ConsulDiscoveryOptions, IApplicationInstanceInfo)
  nameWithType: ConsulRegistration.CreateRegistration(ConsulDiscoveryOptions, IApplicationInstanceInfo)
  fullName: Steeltoe.Discovery.Consul.Registry.ConsulRegistration.CreateRegistration(Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions, IApplicationInstanceInfo)
  type: Method
  source:
    remote:
      path: src/Discovery/src/Consul/Registry/ConsulRegistration.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: CreateRegistration
    path: ../Steeltoe/src/Discovery/src/Consul/Registry/ConsulRegistration.cs
    startLine: 119
  assemblies:
  - Steeltoe.Discovery.Consul
  namespace: Steeltoe.Discovery.Consul.Registry
  summary: "\nCreate a Consul registration\n"
  example: []
  syntax:
    content: public static ConsulRegistration CreateRegistration(ConsulDiscoveryOptions options, IApplicationInstanceInfo applicationInfo)
    parameters:
    - id: options
      type: Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions
      description: configuration options to use
    - id: applicationInfo
      type: IApplicationInstanceInfo
      description: Info about this app instance
    return:
      type: Steeltoe.Discovery.Consul.Registry.ConsulRegistration
      description: a registration
    content.vb: Public Shared Function CreateRegistration(options As ConsulDiscoveryOptions, applicationInfo As IApplicationInstanceInfo) As ConsulRegistration
  overload: Steeltoe.Discovery.Consul.Registry.ConsulRegistration.CreateRegistration*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Steeltoe.Discovery.Consul.Registry
  commentId: N:Steeltoe.Discovery.Consul.Registry
  name: Steeltoe.Discovery.Consul.Registry
  nameWithType: Steeltoe.Discovery.Consul.Registry
  fullName: Steeltoe.Discovery.Consul.Registry
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Steeltoe.Discovery.Consul.Registry.IConsulRegistration
  commentId: T:Steeltoe.Discovery.Consul.Registry.IConsulRegistration
  parent: Steeltoe.Discovery.Consul.Registry
  name: IConsulRegistration
  nameWithType: IConsulRegistration
  fullName: Steeltoe.Discovery.Consul.Registry.IConsulRegistration
- uid: IServiceInstance
  isExternal: true
  name: IServiceInstance
  nameWithType: IServiceInstance
  fullName: IServiceInstance
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Steeltoe.Discovery.Consul.Registry.ConsulRegistration
  commentId: T:Steeltoe.Discovery.Consul.Registry.ConsulRegistration
  parent: Steeltoe.Discovery.Consul.Registry
  name: ConsulRegistration
  nameWithType: ConsulRegistration
  fullName: Steeltoe.Discovery.Consul.Registry.ConsulRegistration
- uid: Steeltoe.Discovery.Consul.Registry.ConsulRegistration.#ctor*
  commentId: Overload:Steeltoe.Discovery.Consul.Registry.ConsulRegistration.#ctor
  name: ConsulRegistration
  nameWithType: ConsulRegistration.ConsulRegistration
  fullName: Steeltoe.Discovery.Consul.Registry.ConsulRegistration.ConsulRegistration
- uid: AgentServiceRegistration
  isExternal: true
  name: AgentServiceRegistration
  nameWithType: AgentServiceRegistration
  fullName: AgentServiceRegistration
- uid: Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions
  commentId: T:Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions
  parent: Steeltoe.Discovery.Consul.Discovery
  name: ConsulDiscoveryOptions
  nameWithType: ConsulDiscoveryOptions
  fullName: Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions
- uid: Steeltoe.Discovery.Consul.Discovery
  commentId: N:Steeltoe.Discovery.Consul.Discovery
  name: Steeltoe.Discovery.Consul.Discovery
  nameWithType: Steeltoe.Discovery.Consul.Discovery
  fullName: Steeltoe.Discovery.Consul.Discovery
- uid: IOptionsMonitor{Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions}
  commentId: '!:IOptionsMonitor{Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions}'
  definition: IOptionsMonitor`1
  name: IOptionsMonitor<ConsulDiscoveryOptions>
  nameWithType: IOptionsMonitor<ConsulDiscoveryOptions>
  fullName: IOptionsMonitor<Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions>
  nameWithType.vb: IOptionsMonitor(Of ConsulDiscoveryOptions)
  fullName.vb: IOptionsMonitor(Of Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions)
  name.vb: IOptionsMonitor(Of ConsulDiscoveryOptions)
  spec.csharp:
  - uid: IOptionsMonitor`1
    name: IOptionsMonitor
    nameWithType: IOptionsMonitor
    fullName: IOptionsMonitor
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions
    name: ConsulDiscoveryOptions
    nameWithType: ConsulDiscoveryOptions
    fullName: Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IOptionsMonitor`1
    name: IOptionsMonitor
    nameWithType: IOptionsMonitor
    fullName: IOptionsMonitor
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions
    name: ConsulDiscoveryOptions
    nameWithType: ConsulDiscoveryOptions
    fullName: Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions
  - name: )
    nameWithType: )
    fullName: )
- uid: IOptionsMonitor`1
  isExternal: true
  name: IOptionsMonitor<>
  nameWithType: IOptionsMonitor<>
  fullName: IOptionsMonitor<>
  nameWithType.vb: IOptionsMonitor(Of )
  fullName.vb: IOptionsMonitor(Of )
  name.vb: IOptionsMonitor(Of )
  spec.csharp:
  - uid: IOptionsMonitor`1
    name: IOptionsMonitor
    nameWithType: IOptionsMonitor
    fullName: IOptionsMonitor
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IOptionsMonitor`1
    name: IOptionsMonitor
    nameWithType: IOptionsMonitor
    fullName: IOptionsMonitor
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Discovery.Consul.Registry.ConsulRegistration.Service*
  commentId: Overload:Steeltoe.Discovery.Consul.Registry.ConsulRegistration.Service
  name: Service
  nameWithType: ConsulRegistration.Service
  fullName: Steeltoe.Discovery.Consul.Registry.ConsulRegistration.Service
- uid: Steeltoe.Discovery.Consul.Registry.IConsulRegistration.Service
  commentId: P:Steeltoe.Discovery.Consul.Registry.IConsulRegistration.Service
  parent: Steeltoe.Discovery.Consul.Registry.IConsulRegistration
  name: Service
  nameWithType: IConsulRegistration.Service
  fullName: Steeltoe.Discovery.Consul.Registry.IConsulRegistration.Service
- uid: Steeltoe.Discovery.Consul.Registry.ConsulRegistration.InstanceId*
  commentId: Overload:Steeltoe.Discovery.Consul.Registry.ConsulRegistration.InstanceId
  name: InstanceId
  nameWithType: ConsulRegistration.InstanceId
  fullName: Steeltoe.Discovery.Consul.Registry.ConsulRegistration.InstanceId
- uid: Steeltoe.Discovery.Consul.Registry.IConsulRegistration.InstanceId
  commentId: P:Steeltoe.Discovery.Consul.Registry.IConsulRegistration.InstanceId
  parent: Steeltoe.Discovery.Consul.Registry.IConsulRegistration
  name: InstanceId
  nameWithType: IConsulRegistration.InstanceId
  fullName: Steeltoe.Discovery.Consul.Registry.IConsulRegistration.InstanceId
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Steeltoe.Discovery.Consul.Registry.ConsulRegistration.ServiceId*
  commentId: Overload:Steeltoe.Discovery.Consul.Registry.ConsulRegistration.ServiceId
  name: ServiceId
  nameWithType: ConsulRegistration.ServiceId
  fullName: Steeltoe.Discovery.Consul.Registry.ConsulRegistration.ServiceId
- uid: Steeltoe.Discovery.Consul.Registry.ConsulRegistration.Host*
  commentId: Overload:Steeltoe.Discovery.Consul.Registry.ConsulRegistration.Host
  name: Host
  nameWithType: ConsulRegistration.Host
  fullName: Steeltoe.Discovery.Consul.Registry.ConsulRegistration.Host
- uid: Steeltoe.Discovery.Consul.Registry.ConsulRegistration.Port*
  commentId: Overload:Steeltoe.Discovery.Consul.Registry.ConsulRegistration.Port
  name: Port
  nameWithType: ConsulRegistration.Port
  fullName: Steeltoe.Discovery.Consul.Registry.ConsulRegistration.Port
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Steeltoe.Discovery.Consul.Registry.ConsulRegistration.IsSecure*
  commentId: Overload:Steeltoe.Discovery.Consul.Registry.ConsulRegistration.IsSecure
  name: IsSecure
  nameWithType: ConsulRegistration.IsSecure
  fullName: Steeltoe.Discovery.Consul.Registry.ConsulRegistration.IsSecure
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Steeltoe.Discovery.Consul.Registry.ConsulRegistration.Uri*
  commentId: Overload:Steeltoe.Discovery.Consul.Registry.ConsulRegistration.Uri
  name: Uri
  nameWithType: ConsulRegistration.Uri
  fullName: Steeltoe.Discovery.Consul.Registry.ConsulRegistration.Uri
- uid: System.Uri
  commentId: T:System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: Steeltoe.Discovery.Consul.Registry.ConsulRegistration.Metadata*
  commentId: Overload:Steeltoe.Discovery.Consul.Registry.ConsulRegistration.Metadata
  name: Metadata
  nameWithType: ConsulRegistration.Metadata
  fullName: Steeltoe.Discovery.Consul.Registry.ConsulRegistration.Metadata
- uid: System.Collections.Generic.IDictionary{System.String,System.String}
  commentId: T:System.Collections.Generic.IDictionary{System.String,System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IDictionary`2
  name: IDictionary<String, String>
  nameWithType: IDictionary<String, String>
  fullName: System.Collections.Generic.IDictionary<System.String, System.String>
  nameWithType.vb: IDictionary(Of String, String)
  fullName.vb: System.Collections.Generic.IDictionary(Of System.String, System.String)
  name.vb: IDictionary(Of String, String)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IDictionary`2
  commentId: T:System.Collections.Generic.IDictionary`2
  isExternal: true
  name: IDictionary<TKey, TValue>
  nameWithType: IDictionary<TKey, TValue>
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>
  nameWithType.vb: IDictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.IDictionary(Of TKey, TValue)
  name.vb: IDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Steeltoe.Discovery.Consul.Registry.ConsulRegistration.CreateRegistration*
  commentId: Overload:Steeltoe.Discovery.Consul.Registry.ConsulRegistration.CreateRegistration
  name: CreateRegistration
  nameWithType: ConsulRegistration.CreateRegistration
  fullName: Steeltoe.Discovery.Consul.Registry.ConsulRegistration.CreateRegistration
- uid: IApplicationInstanceInfo
  isExternal: true
  name: IApplicationInstanceInfo
  nameWithType: IApplicationInstanceInfo
  fullName: IApplicationInstanceInfo
