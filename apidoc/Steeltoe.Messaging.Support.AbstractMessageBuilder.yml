### YamlMime:ManagedReference
items:
- uid: Steeltoe.Messaging.Support.AbstractMessageBuilder
  commentId: T:Steeltoe.Messaging.Support.AbstractMessageBuilder
  id: AbstractMessageBuilder
  parent: Steeltoe.Messaging.Support
  children:
  - Steeltoe.Messaging.Support.AbstractMessageBuilder.#ctor
  - Steeltoe.Messaging.Support.AbstractMessageBuilder.#ctor(Steeltoe.Messaging.IMessage)
  - Steeltoe.Messaging.Support.AbstractMessageBuilder.#ctor(Steeltoe.Messaging.Support.MessageHeaderAccessor)
  - Steeltoe.Messaging.Support.AbstractMessageBuilder.#ctor(System.Object,Steeltoe.Messaging.Support.MessageHeaderAccessor)
  - Steeltoe.Messaging.Support.AbstractMessageBuilder.Build
  - Steeltoe.Messaging.Support.AbstractMessageBuilder.CopyHeaders(System.Collections.Generic.IDictionary{System.String,System.Object})
  - Steeltoe.Messaging.Support.AbstractMessageBuilder.CopyHeadersIfAbsent(System.Collections.Generic.IDictionary{System.String,System.Object})
  - Steeltoe.Messaging.Support.AbstractMessageBuilder.headerAccessor
  - Steeltoe.Messaging.Support.AbstractMessageBuilder.originalMessage
  - Steeltoe.Messaging.Support.AbstractMessageBuilder.payload
  - Steeltoe.Messaging.Support.AbstractMessageBuilder.RemoveHeader(System.String)
  - Steeltoe.Messaging.Support.AbstractMessageBuilder.RemoveHeaders(System.String[])
  - Steeltoe.Messaging.Support.AbstractMessageBuilder.SetErrorChannel(Steeltoe.Messaging.IMessageChannel)
  - Steeltoe.Messaging.Support.AbstractMessageBuilder.SetErrorChannelName(System.String)
  - Steeltoe.Messaging.Support.AbstractMessageBuilder.SetHeader(System.String,System.Object)
  - Steeltoe.Messaging.Support.AbstractMessageBuilder.SetHeaderIfAbsent(System.String,System.Object)
  - Steeltoe.Messaging.Support.AbstractMessageBuilder.SetHeaders(Steeltoe.Messaging.Support.MessageHeaderAccessor)
  - Steeltoe.Messaging.Support.AbstractMessageBuilder.SetReplyChannel(Steeltoe.Messaging.IMessageChannel)
  - Steeltoe.Messaging.Support.AbstractMessageBuilder.SetReplyChannelName(System.String)
  langs:
  - csharp
  - vb
  name: AbstractMessageBuilder
  nameWithType: AbstractMessageBuilder
  fullName: Steeltoe.Messaging.Support.AbstractMessageBuilder
  type: Class
  source:
    remote:
      path: src/Messaging/src/MessagingBase/Support/MessageBuilder.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: AbstractMessageBuilder
    path: ../Steeltoe/src/Messaging/src/MessagingBase/Support/MessageBuilder.cs
    startLine: 107
  assemblies:
  - Steeltoe.Messaging.MessagingBase
  namespace: Steeltoe.Messaging.Support
  syntax:
    content: public abstract class AbstractMessageBuilder
    content.vb: Public MustInherit Class AbstractMessageBuilder
  inheritance:
  - System.Object
  derivedClasses:
  - Steeltoe.Messaging.Support.MessageBuilder`1
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - Steeltoe.Messaging.Support.AbstractMessageBuilder.Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetTimestamp(System.Int64)
  - Steeltoe.Messaging.Support.AbstractMessageBuilder.Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetMessageId(System.String)
  - Steeltoe.Messaging.Support.AbstractMessageBuilder.Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetUserId(System.String)
  - Steeltoe.Messaging.Support.AbstractMessageBuilder.Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetAppId(System.String)
  - Steeltoe.Messaging.Support.AbstractMessageBuilder.Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetClusterId(System.String)
  - Steeltoe.Messaging.Support.AbstractMessageBuilder.Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetType(System.String)
  - Steeltoe.Messaging.Support.AbstractMessageBuilder.Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetCorrelationId(System.String)
  - Steeltoe.Messaging.Support.AbstractMessageBuilder.Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetReplyTo(System.String)
  - Steeltoe.Messaging.Support.AbstractMessageBuilder.Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetReplyToAddress(Steeltoe.Messaging.RabbitMQ.Core.Address)
  - Steeltoe.Messaging.Support.AbstractMessageBuilder.Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetContentType(System.String)
  - Steeltoe.Messaging.Support.AbstractMessageBuilder.Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetContentEncoding(System.String)
  - Steeltoe.Messaging.Support.AbstractMessageBuilder.Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetContentLength(System.Int64)
  - Steeltoe.Messaging.Support.AbstractMessageBuilder.Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetDeliveryMode(Steeltoe.Messaging.RabbitMQ.Core.MessageDeliveryMode)
  - Steeltoe.Messaging.Support.AbstractMessageBuilder.Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetExpiration(System.String)
  - Steeltoe.Messaging.Support.AbstractMessageBuilder.Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetPriority(System.Int32)
  - Steeltoe.Messaging.Support.AbstractMessageBuilder.Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetReceivedExchange(System.String)
  - Steeltoe.Messaging.Support.AbstractMessageBuilder.Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetReceivedRoutingKey(System.String)
  - Steeltoe.Messaging.Support.AbstractMessageBuilder.Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetRedelivered(System.Boolean)
  - Steeltoe.Messaging.Support.AbstractMessageBuilder.Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetDeliveryTag(System.UInt64)
  - Steeltoe.Messaging.Support.AbstractMessageBuilder.Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetMessageCount(System.UInt32)
  - Steeltoe.Messaging.Support.AbstractMessageBuilder.Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetTimestampIfAbsent(System.Int64)
  - Steeltoe.Messaging.Support.AbstractMessageBuilder.Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetMessageIdIfAbsent(System.String)
  - Steeltoe.Messaging.Support.AbstractMessageBuilder.Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetUserIdIfAbsent(System.String)
  - Steeltoe.Messaging.Support.AbstractMessageBuilder.Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetAppIdIfAbsent(System.String)
  - Steeltoe.Messaging.Support.AbstractMessageBuilder.Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetClusterIdIfAbsent(System.String)
  - Steeltoe.Messaging.Support.AbstractMessageBuilder.Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetTypeIfAbsent(System.String)
  - Steeltoe.Messaging.Support.AbstractMessageBuilder.Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetCorrelationIdIfAbsent(System.String)
  - Steeltoe.Messaging.Support.AbstractMessageBuilder.Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetReplyToIfAbsent(System.String)
  - Steeltoe.Messaging.Support.AbstractMessageBuilder.Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetReplyToAddressIfAbsent(Steeltoe.Messaging.RabbitMQ.Core.Address)
  - Steeltoe.Messaging.Support.AbstractMessageBuilder.Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetContentTypeIfAbsent(System.String)
  - Steeltoe.Messaging.Support.AbstractMessageBuilder.Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetContentEncodingIfAbsent(System.String)
  - Steeltoe.Messaging.Support.AbstractMessageBuilder.Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetContentLengthIfAbsent(System.Int64)
  - Steeltoe.Messaging.Support.AbstractMessageBuilder.Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetDeliveryModeIfAbsent(Steeltoe.Messaging.RabbitMQ.Core.MessageDeliveryMode)
  - Steeltoe.Messaging.Support.AbstractMessageBuilder.Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetExpirationIfAbsent(System.String)
  - Steeltoe.Messaging.Support.AbstractMessageBuilder.Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetPriorityIfAbsent(System.Int32)
  - Steeltoe.Messaging.Support.AbstractMessageBuilder.Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetReceivedExchangeIfAbsent(System.String)
  - Steeltoe.Messaging.Support.AbstractMessageBuilder.Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetReceivedRoutingKeyIfAbsent(System.String)
  - Steeltoe.Messaging.Support.AbstractMessageBuilder.Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetRedeliveredIfAbsent(System.Boolean)
  - Steeltoe.Messaging.Support.AbstractMessageBuilder.Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetDeliveryTagIfAbsent(System.UInt64)
  - Steeltoe.Messaging.Support.AbstractMessageBuilder.Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetMessageCountIfAbsent(System.UInt32)
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: Steeltoe.Messaging.Support.AbstractMessageBuilder.payload
  commentId: F:Steeltoe.Messaging.Support.AbstractMessageBuilder.payload
  id: payload
  parent: Steeltoe.Messaging.Support.AbstractMessageBuilder
  langs:
  - csharp
  - vb
  name: payload
  nameWithType: AbstractMessageBuilder.payload
  fullName: Steeltoe.Messaging.Support.AbstractMessageBuilder.payload
  type: Field
  source:
    remote:
      path: src/Messaging/src/MessagingBase/Support/MessageBuilder.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: payload
    path: ../Steeltoe/src/Messaging/src/MessagingBase/Support/MessageBuilder.cs
    startLine: 109
  assemblies:
  - Steeltoe.Messaging.MessagingBase
  namespace: Steeltoe.Messaging.Support
  syntax:
    content: protected readonly object payload
    return:
      type: System.Object
    content.vb: Protected ReadOnly payload As Object
  modifiers.csharp:
  - protected
  - readonly
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: Steeltoe.Messaging.Support.AbstractMessageBuilder.originalMessage
  commentId: F:Steeltoe.Messaging.Support.AbstractMessageBuilder.originalMessage
  id: originalMessage
  parent: Steeltoe.Messaging.Support.AbstractMessageBuilder
  langs:
  - csharp
  - vb
  name: originalMessage
  nameWithType: AbstractMessageBuilder.originalMessage
  fullName: Steeltoe.Messaging.Support.AbstractMessageBuilder.originalMessage
  type: Field
  source:
    remote:
      path: src/Messaging/src/MessagingBase/Support/MessageBuilder.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: originalMessage
    path: ../Steeltoe/src/Messaging/src/MessagingBase/Support/MessageBuilder.cs
    startLine: 111
  assemblies:
  - Steeltoe.Messaging.MessagingBase
  namespace: Steeltoe.Messaging.Support
  syntax:
    content: protected readonly IMessage originalMessage
    return:
      type: Steeltoe.Messaging.IMessage
    content.vb: Protected ReadOnly originalMessage As IMessage
  modifiers.csharp:
  - protected
  - readonly
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: Steeltoe.Messaging.Support.AbstractMessageBuilder.headerAccessor
  commentId: F:Steeltoe.Messaging.Support.AbstractMessageBuilder.headerAccessor
  id: headerAccessor
  parent: Steeltoe.Messaging.Support.AbstractMessageBuilder
  langs:
  - csharp
  - vb
  name: headerAccessor
  nameWithType: AbstractMessageBuilder.headerAccessor
  fullName: Steeltoe.Messaging.Support.AbstractMessageBuilder.headerAccessor
  type: Field
  source:
    remote:
      path: src/Messaging/src/MessagingBase/Support/MessageBuilder.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: headerAccessor
    path: ../Steeltoe/src/Messaging/src/MessagingBase/Support/MessageBuilder.cs
    startLine: 113
  assemblies:
  - Steeltoe.Messaging.MessagingBase
  namespace: Steeltoe.Messaging.Support
  syntax:
    content: protected MessageHeaderAccessor headerAccessor
    return:
      type: Steeltoe.Messaging.Support.MessageHeaderAccessor
    content.vb: Protected headerAccessor As MessageHeaderAccessor
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Steeltoe.Messaging.Support.AbstractMessageBuilder.#ctor
  commentId: M:Steeltoe.Messaging.Support.AbstractMessageBuilder.#ctor
  id: '#ctor'
  parent: Steeltoe.Messaging.Support.AbstractMessageBuilder
  langs:
  - csharp
  - vb
  name: AbstractMessageBuilder()
  nameWithType: AbstractMessageBuilder.AbstractMessageBuilder()
  fullName: Steeltoe.Messaging.Support.AbstractMessageBuilder.AbstractMessageBuilder()
  type: Constructor
  source:
    remote:
      path: src/Messaging/src/MessagingBase/Support/MessageBuilder.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: .ctor
    path: ../Steeltoe/src/Messaging/src/MessagingBase/Support/MessageBuilder.cs
    startLine: 115
  assemblies:
  - Steeltoe.Messaging.MessagingBase
  namespace: Steeltoe.Messaging.Support
  syntax:
    content: protected AbstractMessageBuilder()
    content.vb: Protected Sub New
  overload: Steeltoe.Messaging.Support.AbstractMessageBuilder.#ctor*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Steeltoe.Messaging.Support.AbstractMessageBuilder.#ctor(Steeltoe.Messaging.IMessage)
  commentId: M:Steeltoe.Messaging.Support.AbstractMessageBuilder.#ctor(Steeltoe.Messaging.IMessage)
  id: '#ctor(Steeltoe.Messaging.IMessage)'
  parent: Steeltoe.Messaging.Support.AbstractMessageBuilder
  langs:
  - csharp
  - vb
  name: AbstractMessageBuilder(IMessage)
  nameWithType: AbstractMessageBuilder.AbstractMessageBuilder(IMessage)
  fullName: Steeltoe.Messaging.Support.AbstractMessageBuilder.AbstractMessageBuilder(Steeltoe.Messaging.IMessage)
  type: Constructor
  source:
    remote:
      path: src/Messaging/src/MessagingBase/Support/MessageBuilder.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: .ctor
    path: ../Steeltoe/src/Messaging/src/MessagingBase/Support/MessageBuilder.cs
    startLine: 119
  assemblies:
  - Steeltoe.Messaging.MessagingBase
  namespace: Steeltoe.Messaging.Support
  syntax:
    content: protected AbstractMessageBuilder(IMessage message)
    parameters:
    - id: message
      type: Steeltoe.Messaging.IMessage
    content.vb: Protected Sub New(message As IMessage)
  overload: Steeltoe.Messaging.Support.AbstractMessageBuilder.#ctor*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Steeltoe.Messaging.Support.AbstractMessageBuilder.#ctor(Steeltoe.Messaging.Support.MessageHeaderAccessor)
  commentId: M:Steeltoe.Messaging.Support.AbstractMessageBuilder.#ctor(Steeltoe.Messaging.Support.MessageHeaderAccessor)
  id: '#ctor(Steeltoe.Messaging.Support.MessageHeaderAccessor)'
  parent: Steeltoe.Messaging.Support.AbstractMessageBuilder
  langs:
  - csharp
  - vb
  name: AbstractMessageBuilder(MessageHeaderAccessor)
  nameWithType: AbstractMessageBuilder.AbstractMessageBuilder(MessageHeaderAccessor)
  fullName: Steeltoe.Messaging.Support.AbstractMessageBuilder.AbstractMessageBuilder(Steeltoe.Messaging.Support.MessageHeaderAccessor)
  type: Constructor
  source:
    remote:
      path: src/Messaging/src/MessagingBase/Support/MessageBuilder.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: .ctor
    path: ../Steeltoe/src/Messaging/src/MessagingBase/Support/MessageBuilder.cs
    startLine: 131
  assemblies:
  - Steeltoe.Messaging.MessagingBase
  namespace: Steeltoe.Messaging.Support
  syntax:
    content: protected AbstractMessageBuilder(MessageHeaderAccessor accessor)
    parameters:
    - id: accessor
      type: Steeltoe.Messaging.Support.MessageHeaderAccessor
    content.vb: Protected Sub New(accessor As MessageHeaderAccessor)
  overload: Steeltoe.Messaging.Support.AbstractMessageBuilder.#ctor*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Steeltoe.Messaging.Support.AbstractMessageBuilder.#ctor(System.Object,Steeltoe.Messaging.Support.MessageHeaderAccessor)
  commentId: M:Steeltoe.Messaging.Support.AbstractMessageBuilder.#ctor(System.Object,Steeltoe.Messaging.Support.MessageHeaderAccessor)
  id: '#ctor(System.Object,Steeltoe.Messaging.Support.MessageHeaderAccessor)'
  parent: Steeltoe.Messaging.Support.AbstractMessageBuilder
  langs:
  - csharp
  - vb
  name: AbstractMessageBuilder(Object, MessageHeaderAccessor)
  nameWithType: AbstractMessageBuilder.AbstractMessageBuilder(Object, MessageHeaderAccessor)
  fullName: Steeltoe.Messaging.Support.AbstractMessageBuilder.AbstractMessageBuilder(System.Object, Steeltoe.Messaging.Support.MessageHeaderAccessor)
  type: Constructor
  source:
    remote:
      path: src/Messaging/src/MessagingBase/Support/MessageBuilder.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: .ctor
    path: ../Steeltoe/src/Messaging/src/MessagingBase/Support/MessageBuilder.cs
    startLine: 143
  assemblies:
  - Steeltoe.Messaging.MessagingBase
  namespace: Steeltoe.Messaging.Support
  syntax:
    content: protected AbstractMessageBuilder(object payload, MessageHeaderAccessor accessor)
    parameters:
    - id: payload
      type: System.Object
    - id: accessor
      type: Steeltoe.Messaging.Support.MessageHeaderAccessor
    content.vb: Protected Sub New(payload As Object, accessor As MessageHeaderAccessor)
  overload: Steeltoe.Messaging.Support.AbstractMessageBuilder.#ctor*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Steeltoe.Messaging.Support.AbstractMessageBuilder.SetHeaders(Steeltoe.Messaging.Support.MessageHeaderAccessor)
  commentId: M:Steeltoe.Messaging.Support.AbstractMessageBuilder.SetHeaders(Steeltoe.Messaging.Support.MessageHeaderAccessor)
  id: SetHeaders(Steeltoe.Messaging.Support.MessageHeaderAccessor)
  parent: Steeltoe.Messaging.Support.AbstractMessageBuilder
  langs:
  - csharp
  - vb
  name: SetHeaders(MessageHeaderAccessor)
  nameWithType: AbstractMessageBuilder.SetHeaders(MessageHeaderAccessor)
  fullName: Steeltoe.Messaging.Support.AbstractMessageBuilder.SetHeaders(Steeltoe.Messaging.Support.MessageHeaderAccessor)
  type: Method
  source:
    remote:
      path: src/Messaging/src/MessagingBase/Support/MessageBuilder.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: SetHeaders
    path: ../Steeltoe/src/Messaging/src/MessagingBase/Support/MessageBuilder.cs
    startLine: 160
  assemblies:
  - Steeltoe.Messaging.MessagingBase
  namespace: Steeltoe.Messaging.Support
  syntax:
    content: public abstract AbstractMessageBuilder SetHeaders(MessageHeaderAccessor accessor)
    parameters:
    - id: accessor
      type: Steeltoe.Messaging.Support.MessageHeaderAccessor
    return:
      type: Steeltoe.Messaging.Support.AbstractMessageBuilder
    content.vb: Public MustOverride Function SetHeaders(accessor As MessageHeaderAccessor) As AbstractMessageBuilder
  overload: Steeltoe.Messaging.Support.AbstractMessageBuilder.SetHeaders*
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
- uid: Steeltoe.Messaging.Support.AbstractMessageBuilder.SetHeader(System.String,System.Object)
  commentId: M:Steeltoe.Messaging.Support.AbstractMessageBuilder.SetHeader(System.String,System.Object)
  id: SetHeader(System.String,System.Object)
  parent: Steeltoe.Messaging.Support.AbstractMessageBuilder
  langs:
  - csharp
  - vb
  name: SetHeader(String, Object)
  nameWithType: AbstractMessageBuilder.SetHeader(String, Object)
  fullName: Steeltoe.Messaging.Support.AbstractMessageBuilder.SetHeader(System.String, System.Object)
  type: Method
  source:
    remote:
      path: src/Messaging/src/MessagingBase/Support/MessageBuilder.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: SetHeader
    path: ../Steeltoe/src/Messaging/src/MessagingBase/Support/MessageBuilder.cs
    startLine: 162
  assemblies:
  - Steeltoe.Messaging.MessagingBase
  namespace: Steeltoe.Messaging.Support
  syntax:
    content: public abstract AbstractMessageBuilder SetHeader(string headerName, object headerValue)
    parameters:
    - id: headerName
      type: System.String
    - id: headerValue
      type: System.Object
    return:
      type: Steeltoe.Messaging.Support.AbstractMessageBuilder
    content.vb: Public MustOverride Function SetHeader(headerName As String, headerValue As Object) As AbstractMessageBuilder
  overload: Steeltoe.Messaging.Support.AbstractMessageBuilder.SetHeader*
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
- uid: Steeltoe.Messaging.Support.AbstractMessageBuilder.SetHeaderIfAbsent(System.String,System.Object)
  commentId: M:Steeltoe.Messaging.Support.AbstractMessageBuilder.SetHeaderIfAbsent(System.String,System.Object)
  id: SetHeaderIfAbsent(System.String,System.Object)
  parent: Steeltoe.Messaging.Support.AbstractMessageBuilder
  langs:
  - csharp
  - vb
  name: SetHeaderIfAbsent(String, Object)
  nameWithType: AbstractMessageBuilder.SetHeaderIfAbsent(String, Object)
  fullName: Steeltoe.Messaging.Support.AbstractMessageBuilder.SetHeaderIfAbsent(System.String, System.Object)
  type: Method
  source:
    remote:
      path: src/Messaging/src/MessagingBase/Support/MessageBuilder.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: SetHeaderIfAbsent
    path: ../Steeltoe/src/Messaging/src/MessagingBase/Support/MessageBuilder.cs
    startLine: 164
  assemblies:
  - Steeltoe.Messaging.MessagingBase
  namespace: Steeltoe.Messaging.Support
  syntax:
    content: public abstract AbstractMessageBuilder SetHeaderIfAbsent(string headerName, object headerValue)
    parameters:
    - id: headerName
      type: System.String
    - id: headerValue
      type: System.Object
    return:
      type: Steeltoe.Messaging.Support.AbstractMessageBuilder
    content.vb: Public MustOverride Function SetHeaderIfAbsent(headerName As String, headerValue As Object) As AbstractMessageBuilder
  overload: Steeltoe.Messaging.Support.AbstractMessageBuilder.SetHeaderIfAbsent*
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
- uid: Steeltoe.Messaging.Support.AbstractMessageBuilder.RemoveHeaders(System.String[])
  commentId: M:Steeltoe.Messaging.Support.AbstractMessageBuilder.RemoveHeaders(System.String[])
  id: RemoveHeaders(System.String[])
  parent: Steeltoe.Messaging.Support.AbstractMessageBuilder
  langs:
  - csharp
  - vb
  name: RemoveHeaders(String[])
  nameWithType: AbstractMessageBuilder.RemoveHeaders(String[])
  fullName: Steeltoe.Messaging.Support.AbstractMessageBuilder.RemoveHeaders(System.String[])
  type: Method
  source:
    remote:
      path: src/Messaging/src/MessagingBase/Support/MessageBuilder.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: RemoveHeaders
    path: ../Steeltoe/src/Messaging/src/MessagingBase/Support/MessageBuilder.cs
    startLine: 166
  assemblies:
  - Steeltoe.Messaging.MessagingBase
  namespace: Steeltoe.Messaging.Support
  syntax:
    content: public abstract AbstractMessageBuilder RemoveHeaders(params string[] headerPatterns)
    parameters:
    - id: headerPatterns
      type: System.String[]
    return:
      type: Steeltoe.Messaging.Support.AbstractMessageBuilder
    content.vb: Public MustOverride Function RemoveHeaders(ParamArray headerPatterns As String()) As AbstractMessageBuilder
  overload: Steeltoe.Messaging.Support.AbstractMessageBuilder.RemoveHeaders*
  nameWithType.vb: AbstractMessageBuilder.RemoveHeaders(String())
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
  fullName.vb: Steeltoe.Messaging.Support.AbstractMessageBuilder.RemoveHeaders(System.String())
  name.vb: RemoveHeaders(String())
- uid: Steeltoe.Messaging.Support.AbstractMessageBuilder.RemoveHeader(System.String)
  commentId: M:Steeltoe.Messaging.Support.AbstractMessageBuilder.RemoveHeader(System.String)
  id: RemoveHeader(System.String)
  parent: Steeltoe.Messaging.Support.AbstractMessageBuilder
  langs:
  - csharp
  - vb
  name: RemoveHeader(String)
  nameWithType: AbstractMessageBuilder.RemoveHeader(String)
  fullName: Steeltoe.Messaging.Support.AbstractMessageBuilder.RemoveHeader(System.String)
  type: Method
  source:
    remote:
      path: src/Messaging/src/MessagingBase/Support/MessageBuilder.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: RemoveHeader
    path: ../Steeltoe/src/Messaging/src/MessagingBase/Support/MessageBuilder.cs
    startLine: 168
  assemblies:
  - Steeltoe.Messaging.MessagingBase
  namespace: Steeltoe.Messaging.Support
  syntax:
    content: public abstract AbstractMessageBuilder RemoveHeader(string headerName)
    parameters:
    - id: headerName
      type: System.String
    return:
      type: Steeltoe.Messaging.Support.AbstractMessageBuilder
    content.vb: Public MustOverride Function RemoveHeader(headerName As String) As AbstractMessageBuilder
  overload: Steeltoe.Messaging.Support.AbstractMessageBuilder.RemoveHeader*
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
- uid: Steeltoe.Messaging.Support.AbstractMessageBuilder.CopyHeaders(System.Collections.Generic.IDictionary{System.String,System.Object})
  commentId: M:Steeltoe.Messaging.Support.AbstractMessageBuilder.CopyHeaders(System.Collections.Generic.IDictionary{System.String,System.Object})
  id: CopyHeaders(System.Collections.Generic.IDictionary{System.String,System.Object})
  parent: Steeltoe.Messaging.Support.AbstractMessageBuilder
  langs:
  - csharp
  - vb
  name: CopyHeaders(IDictionary<String, Object>)
  nameWithType: AbstractMessageBuilder.CopyHeaders(IDictionary<String, Object>)
  fullName: Steeltoe.Messaging.Support.AbstractMessageBuilder.CopyHeaders(System.Collections.Generic.IDictionary<System.String, System.Object>)
  type: Method
  source:
    remote:
      path: src/Messaging/src/MessagingBase/Support/MessageBuilder.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: CopyHeaders
    path: ../Steeltoe/src/Messaging/src/MessagingBase/Support/MessageBuilder.cs
    startLine: 170
  assemblies:
  - Steeltoe.Messaging.MessagingBase
  namespace: Steeltoe.Messaging.Support
  syntax:
    content: public abstract AbstractMessageBuilder CopyHeaders(IDictionary<string, object> headersToCopy)
    parameters:
    - id: headersToCopy
      type: System.Collections.Generic.IDictionary{System.String,System.Object}
    return:
      type: Steeltoe.Messaging.Support.AbstractMessageBuilder
    content.vb: Public MustOverride Function CopyHeaders(headersToCopy As IDictionary(Of String, Object)) As AbstractMessageBuilder
  overload: Steeltoe.Messaging.Support.AbstractMessageBuilder.CopyHeaders*
  nameWithType.vb: AbstractMessageBuilder.CopyHeaders(IDictionary(Of String, Object))
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
  fullName.vb: Steeltoe.Messaging.Support.AbstractMessageBuilder.CopyHeaders(System.Collections.Generic.IDictionary(Of System.String, System.Object))
  name.vb: CopyHeaders(IDictionary(Of String, Object))
- uid: Steeltoe.Messaging.Support.AbstractMessageBuilder.CopyHeadersIfAbsent(System.Collections.Generic.IDictionary{System.String,System.Object})
  commentId: M:Steeltoe.Messaging.Support.AbstractMessageBuilder.CopyHeadersIfAbsent(System.Collections.Generic.IDictionary{System.String,System.Object})
  id: CopyHeadersIfAbsent(System.Collections.Generic.IDictionary{System.String,System.Object})
  parent: Steeltoe.Messaging.Support.AbstractMessageBuilder
  langs:
  - csharp
  - vb
  name: CopyHeadersIfAbsent(IDictionary<String, Object>)
  nameWithType: AbstractMessageBuilder.CopyHeadersIfAbsent(IDictionary<String, Object>)
  fullName: Steeltoe.Messaging.Support.AbstractMessageBuilder.CopyHeadersIfAbsent(System.Collections.Generic.IDictionary<System.String, System.Object>)
  type: Method
  source:
    remote:
      path: src/Messaging/src/MessagingBase/Support/MessageBuilder.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: CopyHeadersIfAbsent
    path: ../Steeltoe/src/Messaging/src/MessagingBase/Support/MessageBuilder.cs
    startLine: 172
  assemblies:
  - Steeltoe.Messaging.MessagingBase
  namespace: Steeltoe.Messaging.Support
  syntax:
    content: public abstract AbstractMessageBuilder CopyHeadersIfAbsent(IDictionary<string, object> headersToCopy)
    parameters:
    - id: headersToCopy
      type: System.Collections.Generic.IDictionary{System.String,System.Object}
    return:
      type: Steeltoe.Messaging.Support.AbstractMessageBuilder
    content.vb: Public MustOverride Function CopyHeadersIfAbsent(headersToCopy As IDictionary(Of String, Object)) As AbstractMessageBuilder
  overload: Steeltoe.Messaging.Support.AbstractMessageBuilder.CopyHeadersIfAbsent*
  nameWithType.vb: AbstractMessageBuilder.CopyHeadersIfAbsent(IDictionary(Of String, Object))
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
  fullName.vb: Steeltoe.Messaging.Support.AbstractMessageBuilder.CopyHeadersIfAbsent(System.Collections.Generic.IDictionary(Of System.String, System.Object))
  name.vb: CopyHeadersIfAbsent(IDictionary(Of String, Object))
- uid: Steeltoe.Messaging.Support.AbstractMessageBuilder.SetReplyChannel(Steeltoe.Messaging.IMessageChannel)
  commentId: M:Steeltoe.Messaging.Support.AbstractMessageBuilder.SetReplyChannel(Steeltoe.Messaging.IMessageChannel)
  id: SetReplyChannel(Steeltoe.Messaging.IMessageChannel)
  parent: Steeltoe.Messaging.Support.AbstractMessageBuilder
  langs:
  - csharp
  - vb
  name: SetReplyChannel(IMessageChannel)
  nameWithType: AbstractMessageBuilder.SetReplyChannel(IMessageChannel)
  fullName: Steeltoe.Messaging.Support.AbstractMessageBuilder.SetReplyChannel(Steeltoe.Messaging.IMessageChannel)
  type: Method
  source:
    remote:
      path: src/Messaging/src/MessagingBase/Support/MessageBuilder.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: SetReplyChannel
    path: ../Steeltoe/src/Messaging/src/MessagingBase/Support/MessageBuilder.cs
    startLine: 174
  assemblies:
  - Steeltoe.Messaging.MessagingBase
  namespace: Steeltoe.Messaging.Support
  syntax:
    content: public abstract AbstractMessageBuilder SetReplyChannel(IMessageChannel replyChannel)
    parameters:
    - id: replyChannel
      type: Steeltoe.Messaging.IMessageChannel
    return:
      type: Steeltoe.Messaging.Support.AbstractMessageBuilder
    content.vb: Public MustOverride Function SetReplyChannel(replyChannel As IMessageChannel) As AbstractMessageBuilder
  overload: Steeltoe.Messaging.Support.AbstractMessageBuilder.SetReplyChannel*
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
- uid: Steeltoe.Messaging.Support.AbstractMessageBuilder.SetReplyChannelName(System.String)
  commentId: M:Steeltoe.Messaging.Support.AbstractMessageBuilder.SetReplyChannelName(System.String)
  id: SetReplyChannelName(System.String)
  parent: Steeltoe.Messaging.Support.AbstractMessageBuilder
  langs:
  - csharp
  - vb
  name: SetReplyChannelName(String)
  nameWithType: AbstractMessageBuilder.SetReplyChannelName(String)
  fullName: Steeltoe.Messaging.Support.AbstractMessageBuilder.SetReplyChannelName(System.String)
  type: Method
  source:
    remote:
      path: src/Messaging/src/MessagingBase/Support/MessageBuilder.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: SetReplyChannelName
    path: ../Steeltoe/src/Messaging/src/MessagingBase/Support/MessageBuilder.cs
    startLine: 176
  assemblies:
  - Steeltoe.Messaging.MessagingBase
  namespace: Steeltoe.Messaging.Support
  syntax:
    content: public abstract AbstractMessageBuilder SetReplyChannelName(string replyChannelName)
    parameters:
    - id: replyChannelName
      type: System.String
    return:
      type: Steeltoe.Messaging.Support.AbstractMessageBuilder
    content.vb: Public MustOverride Function SetReplyChannelName(replyChannelName As String) As AbstractMessageBuilder
  overload: Steeltoe.Messaging.Support.AbstractMessageBuilder.SetReplyChannelName*
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
- uid: Steeltoe.Messaging.Support.AbstractMessageBuilder.SetErrorChannel(Steeltoe.Messaging.IMessageChannel)
  commentId: M:Steeltoe.Messaging.Support.AbstractMessageBuilder.SetErrorChannel(Steeltoe.Messaging.IMessageChannel)
  id: SetErrorChannel(Steeltoe.Messaging.IMessageChannel)
  parent: Steeltoe.Messaging.Support.AbstractMessageBuilder
  langs:
  - csharp
  - vb
  name: SetErrorChannel(IMessageChannel)
  nameWithType: AbstractMessageBuilder.SetErrorChannel(IMessageChannel)
  fullName: Steeltoe.Messaging.Support.AbstractMessageBuilder.SetErrorChannel(Steeltoe.Messaging.IMessageChannel)
  type: Method
  source:
    remote:
      path: src/Messaging/src/MessagingBase/Support/MessageBuilder.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: SetErrorChannel
    path: ../Steeltoe/src/Messaging/src/MessagingBase/Support/MessageBuilder.cs
    startLine: 178
  assemblies:
  - Steeltoe.Messaging.MessagingBase
  namespace: Steeltoe.Messaging.Support
  syntax:
    content: public abstract AbstractMessageBuilder SetErrorChannel(IMessageChannel errorChannel)
    parameters:
    - id: errorChannel
      type: Steeltoe.Messaging.IMessageChannel
    return:
      type: Steeltoe.Messaging.Support.AbstractMessageBuilder
    content.vb: Public MustOverride Function SetErrorChannel(errorChannel As IMessageChannel) As AbstractMessageBuilder
  overload: Steeltoe.Messaging.Support.AbstractMessageBuilder.SetErrorChannel*
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
- uid: Steeltoe.Messaging.Support.AbstractMessageBuilder.SetErrorChannelName(System.String)
  commentId: M:Steeltoe.Messaging.Support.AbstractMessageBuilder.SetErrorChannelName(System.String)
  id: SetErrorChannelName(System.String)
  parent: Steeltoe.Messaging.Support.AbstractMessageBuilder
  langs:
  - csharp
  - vb
  name: SetErrorChannelName(String)
  nameWithType: AbstractMessageBuilder.SetErrorChannelName(String)
  fullName: Steeltoe.Messaging.Support.AbstractMessageBuilder.SetErrorChannelName(System.String)
  type: Method
  source:
    remote:
      path: src/Messaging/src/MessagingBase/Support/MessageBuilder.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: SetErrorChannelName
    path: ../Steeltoe/src/Messaging/src/MessagingBase/Support/MessageBuilder.cs
    startLine: 180
  assemblies:
  - Steeltoe.Messaging.MessagingBase
  namespace: Steeltoe.Messaging.Support
  syntax:
    content: public abstract AbstractMessageBuilder SetErrorChannelName(string errorChannelName)
    parameters:
    - id: errorChannelName
      type: System.String
    return:
      type: Steeltoe.Messaging.Support.AbstractMessageBuilder
    content.vb: Public MustOverride Function SetErrorChannelName(errorChannelName As String) As AbstractMessageBuilder
  overload: Steeltoe.Messaging.Support.AbstractMessageBuilder.SetErrorChannelName*
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
- uid: Steeltoe.Messaging.Support.AbstractMessageBuilder.Build
  commentId: M:Steeltoe.Messaging.Support.AbstractMessageBuilder.Build
  id: Build
  parent: Steeltoe.Messaging.Support.AbstractMessageBuilder
  langs:
  - csharp
  - vb
  name: Build()
  nameWithType: AbstractMessageBuilder.Build()
  fullName: Steeltoe.Messaging.Support.AbstractMessageBuilder.Build()
  type: Method
  source:
    remote:
      path: src/Messaging/src/MessagingBase/Support/MessageBuilder.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Build
    path: ../Steeltoe/src/Messaging/src/MessagingBase/Support/MessageBuilder.cs
    startLine: 182
  assemblies:
  - Steeltoe.Messaging.MessagingBase
  namespace: Steeltoe.Messaging.Support
  syntax:
    content: public virtual IMessage Build()
    return:
      type: Steeltoe.Messaging.IMessage
    content.vb: Public Overridable Function Build As IMessage
  overload: Steeltoe.Messaging.Support.AbstractMessageBuilder.Build*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
references:
- uid: Steeltoe.Messaging.Support
  commentId: N:Steeltoe.Messaging.Support
  name: Steeltoe.Messaging.Support
  nameWithType: Steeltoe.Messaging.Support
  fullName: Steeltoe.Messaging.Support
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Support.AbstractMessageBuilder.Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetTimestamp(System.Int64)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetTimestamp(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.Int64)
  parent: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions
  definition: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetTimestamp(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.Int64)
  name: SetTimestamp(Int64)
  nameWithType: MessageBuilderExtensions.SetTimestamp(Int64)
  fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetTimestamp(System.Int64)
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetTimestamp(System.Int64)
    name: SetTimestamp
    nameWithType: MessageBuilderExtensions.SetTimestamp
    fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetTimestamp
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetTimestamp(System.Int64)
    name: SetTimestamp
    nameWithType: MessageBuilderExtensions.SetTimestamp
    fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetTimestamp
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Support.AbstractMessageBuilder.Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetMessageId(System.String)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetMessageId(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.String)
  parent: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions
  definition: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetMessageId(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.String)
  name: SetMessageId(String)
  nameWithType: MessageBuilderExtensions.SetMessageId(String)
  fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetMessageId(System.String)
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetMessageId(System.String)
    name: SetMessageId
    nameWithType: MessageBuilderExtensions.SetMessageId
    fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetMessageId
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetMessageId(System.String)
    name: SetMessageId
    nameWithType: MessageBuilderExtensions.SetMessageId
    fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetMessageId
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Support.AbstractMessageBuilder.Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetUserId(System.String)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetUserId(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.String)
  parent: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions
  definition: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetUserId(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.String)
  name: SetUserId(String)
  nameWithType: MessageBuilderExtensions.SetUserId(String)
  fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetUserId(System.String)
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetUserId(System.String)
    name: SetUserId
    nameWithType: MessageBuilderExtensions.SetUserId
    fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetUserId
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetUserId(System.String)
    name: SetUserId
    nameWithType: MessageBuilderExtensions.SetUserId
    fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetUserId
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Support.AbstractMessageBuilder.Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetAppId(System.String)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetAppId(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.String)
  parent: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions
  definition: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetAppId(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.String)
  name: SetAppId(String)
  nameWithType: MessageBuilderExtensions.SetAppId(String)
  fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetAppId(System.String)
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetAppId(System.String)
    name: SetAppId
    nameWithType: MessageBuilderExtensions.SetAppId
    fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetAppId
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetAppId(System.String)
    name: SetAppId
    nameWithType: MessageBuilderExtensions.SetAppId
    fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetAppId
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Support.AbstractMessageBuilder.Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetClusterId(System.String)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetClusterId(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.String)
  parent: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions
  definition: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetClusterId(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.String)
  name: SetClusterId(String)
  nameWithType: MessageBuilderExtensions.SetClusterId(String)
  fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetClusterId(System.String)
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetClusterId(System.String)
    name: SetClusterId
    nameWithType: MessageBuilderExtensions.SetClusterId
    fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetClusterId
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetClusterId(System.String)
    name: SetClusterId
    nameWithType: MessageBuilderExtensions.SetClusterId
    fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetClusterId
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Support.AbstractMessageBuilder.Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetType(System.String)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetType(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.String)
  parent: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions
  definition: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetType(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.String)
  name: SetType(String)
  nameWithType: MessageBuilderExtensions.SetType(String)
  fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetType(System.String)
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetType(System.String)
    name: SetType
    nameWithType: MessageBuilderExtensions.SetType
    fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetType
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetType(System.String)
    name: SetType
    nameWithType: MessageBuilderExtensions.SetType
    fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetType
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Support.AbstractMessageBuilder.Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetCorrelationId(System.String)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetCorrelationId(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.String)
  parent: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions
  definition: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetCorrelationId(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.String)
  name: SetCorrelationId(String)
  nameWithType: MessageBuilderExtensions.SetCorrelationId(String)
  fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetCorrelationId(System.String)
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetCorrelationId(System.String)
    name: SetCorrelationId
    nameWithType: MessageBuilderExtensions.SetCorrelationId
    fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetCorrelationId
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetCorrelationId(System.String)
    name: SetCorrelationId
    nameWithType: MessageBuilderExtensions.SetCorrelationId
    fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetCorrelationId
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Support.AbstractMessageBuilder.Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetReplyTo(System.String)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetReplyTo(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.String)
  parent: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions
  definition: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetReplyTo(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.String)
  name: SetReplyTo(String)
  nameWithType: MessageBuilderExtensions.SetReplyTo(String)
  fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetReplyTo(System.String)
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetReplyTo(System.String)
    name: SetReplyTo
    nameWithType: MessageBuilderExtensions.SetReplyTo
    fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetReplyTo
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetReplyTo(System.String)
    name: SetReplyTo
    nameWithType: MessageBuilderExtensions.SetReplyTo
    fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetReplyTo
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Support.AbstractMessageBuilder.Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetReplyToAddress(Steeltoe.Messaging.RabbitMQ.Core.Address)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetReplyToAddress(Steeltoe.Messaging.Support.AbstractMessageBuilder,Steeltoe.Messaging.RabbitMQ.Core.Address)
  parent: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions
  definition: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetReplyToAddress(Steeltoe.Messaging.Support.AbstractMessageBuilder,Steeltoe.Messaging.RabbitMQ.Core.Address)
  name: SetReplyToAddress(Address)
  nameWithType: MessageBuilderExtensions.SetReplyToAddress(Address)
  fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetReplyToAddress(Steeltoe.Messaging.RabbitMQ.Core.Address)
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetReplyToAddress(Steeltoe.Messaging.RabbitMQ.Core.Address)
    name: SetReplyToAddress
    nameWithType: MessageBuilderExtensions.SetReplyToAddress
    fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetReplyToAddress
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.RabbitMQ.Core.Address
    name: Address
    nameWithType: Address
    fullName: Steeltoe.Messaging.RabbitMQ.Core.Address
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetReplyToAddress(Steeltoe.Messaging.RabbitMQ.Core.Address)
    name: SetReplyToAddress
    nameWithType: MessageBuilderExtensions.SetReplyToAddress
    fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetReplyToAddress
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.RabbitMQ.Core.Address
    name: Address
    nameWithType: Address
    fullName: Steeltoe.Messaging.RabbitMQ.Core.Address
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Support.AbstractMessageBuilder.Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetContentType(System.String)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetContentType(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.String)
  parent: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions
  definition: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetContentType(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.String)
  name: SetContentType(String)
  nameWithType: MessageBuilderExtensions.SetContentType(String)
  fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetContentType(System.String)
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetContentType(System.String)
    name: SetContentType
    nameWithType: MessageBuilderExtensions.SetContentType
    fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetContentType
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetContentType(System.String)
    name: SetContentType
    nameWithType: MessageBuilderExtensions.SetContentType
    fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetContentType
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Support.AbstractMessageBuilder.Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetContentEncoding(System.String)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetContentEncoding(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.String)
  parent: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions
  definition: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetContentEncoding(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.String)
  name: SetContentEncoding(String)
  nameWithType: MessageBuilderExtensions.SetContentEncoding(String)
  fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetContentEncoding(System.String)
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetContentEncoding(System.String)
    name: SetContentEncoding
    nameWithType: MessageBuilderExtensions.SetContentEncoding
    fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetContentEncoding
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetContentEncoding(System.String)
    name: SetContentEncoding
    nameWithType: MessageBuilderExtensions.SetContentEncoding
    fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetContentEncoding
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Support.AbstractMessageBuilder.Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetContentLength(System.Int64)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetContentLength(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.Int64)
  parent: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions
  definition: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetContentLength(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.Int64)
  name: SetContentLength(Int64)
  nameWithType: MessageBuilderExtensions.SetContentLength(Int64)
  fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetContentLength(System.Int64)
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetContentLength(System.Int64)
    name: SetContentLength
    nameWithType: MessageBuilderExtensions.SetContentLength
    fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetContentLength
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetContentLength(System.Int64)
    name: SetContentLength
    nameWithType: MessageBuilderExtensions.SetContentLength
    fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetContentLength
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Support.AbstractMessageBuilder.Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetDeliveryMode(Steeltoe.Messaging.RabbitMQ.Core.MessageDeliveryMode)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetDeliveryMode(Steeltoe.Messaging.Support.AbstractMessageBuilder,Steeltoe.Messaging.RabbitMQ.Core.MessageDeliveryMode)
  parent: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions
  definition: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetDeliveryMode(Steeltoe.Messaging.Support.AbstractMessageBuilder,Steeltoe.Messaging.RabbitMQ.Core.MessageDeliveryMode)
  name: SetDeliveryMode(MessageDeliveryMode)
  nameWithType: MessageBuilderExtensions.SetDeliveryMode(MessageDeliveryMode)
  fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetDeliveryMode(Steeltoe.Messaging.RabbitMQ.Core.MessageDeliveryMode)
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetDeliveryMode(Steeltoe.Messaging.RabbitMQ.Core.MessageDeliveryMode)
    name: SetDeliveryMode
    nameWithType: MessageBuilderExtensions.SetDeliveryMode
    fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetDeliveryMode
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.RabbitMQ.Core.MessageDeliveryMode
    name: MessageDeliveryMode
    nameWithType: MessageDeliveryMode
    fullName: Steeltoe.Messaging.RabbitMQ.Core.MessageDeliveryMode
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetDeliveryMode(Steeltoe.Messaging.RabbitMQ.Core.MessageDeliveryMode)
    name: SetDeliveryMode
    nameWithType: MessageBuilderExtensions.SetDeliveryMode
    fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetDeliveryMode
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.RabbitMQ.Core.MessageDeliveryMode
    name: MessageDeliveryMode
    nameWithType: MessageDeliveryMode
    fullName: Steeltoe.Messaging.RabbitMQ.Core.MessageDeliveryMode
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Support.AbstractMessageBuilder.Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetExpiration(System.String)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetExpiration(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.String)
  parent: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions
  definition: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetExpiration(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.String)
  name: SetExpiration(String)
  nameWithType: MessageBuilderExtensions.SetExpiration(String)
  fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetExpiration(System.String)
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetExpiration(System.String)
    name: SetExpiration
    nameWithType: MessageBuilderExtensions.SetExpiration
    fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetExpiration
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetExpiration(System.String)
    name: SetExpiration
    nameWithType: MessageBuilderExtensions.SetExpiration
    fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetExpiration
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Support.AbstractMessageBuilder.Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetPriority(System.Int32)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetPriority(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.Int32)
  parent: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions
  definition: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetPriority(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.Int32)
  name: SetPriority(Int32)
  nameWithType: MessageBuilderExtensions.SetPriority(Int32)
  fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetPriority(System.Int32)
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetPriority(System.Int32)
    name: SetPriority
    nameWithType: MessageBuilderExtensions.SetPriority
    fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetPriority
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetPriority(System.Int32)
    name: SetPriority
    nameWithType: MessageBuilderExtensions.SetPriority
    fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetPriority
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Support.AbstractMessageBuilder.Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetReceivedExchange(System.String)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetReceivedExchange(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.String)
  parent: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions
  definition: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetReceivedExchange(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.String)
  name: SetReceivedExchange(String)
  nameWithType: MessageBuilderExtensions.SetReceivedExchange(String)
  fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetReceivedExchange(System.String)
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetReceivedExchange(System.String)
    name: SetReceivedExchange
    nameWithType: MessageBuilderExtensions.SetReceivedExchange
    fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetReceivedExchange
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetReceivedExchange(System.String)
    name: SetReceivedExchange
    nameWithType: MessageBuilderExtensions.SetReceivedExchange
    fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetReceivedExchange
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Support.AbstractMessageBuilder.Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetReceivedRoutingKey(System.String)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetReceivedRoutingKey(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.String)
  parent: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions
  definition: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetReceivedRoutingKey(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.String)
  name: SetReceivedRoutingKey(String)
  nameWithType: MessageBuilderExtensions.SetReceivedRoutingKey(String)
  fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetReceivedRoutingKey(System.String)
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetReceivedRoutingKey(System.String)
    name: SetReceivedRoutingKey
    nameWithType: MessageBuilderExtensions.SetReceivedRoutingKey
    fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetReceivedRoutingKey
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetReceivedRoutingKey(System.String)
    name: SetReceivedRoutingKey
    nameWithType: MessageBuilderExtensions.SetReceivedRoutingKey
    fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetReceivedRoutingKey
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Support.AbstractMessageBuilder.Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetRedelivered(System.Boolean)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetRedelivered(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.Boolean)
  parent: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions
  definition: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetRedelivered(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.Boolean)
  name: SetRedelivered(Boolean)
  nameWithType: MessageBuilderExtensions.SetRedelivered(Boolean)
  fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetRedelivered(System.Boolean)
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetRedelivered(System.Boolean)
    name: SetRedelivered
    nameWithType: MessageBuilderExtensions.SetRedelivered
    fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetRedelivered
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetRedelivered(System.Boolean)
    name: SetRedelivered
    nameWithType: MessageBuilderExtensions.SetRedelivered
    fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetRedelivered
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Support.AbstractMessageBuilder.Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetDeliveryTag(System.UInt64)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetDeliveryTag(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.UInt64)
  parent: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions
  definition: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetDeliveryTag(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.UInt64)
  name: SetDeliveryTag(UInt64)
  nameWithType: MessageBuilderExtensions.SetDeliveryTag(UInt64)
  fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetDeliveryTag(System.UInt64)
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetDeliveryTag(System.UInt64)
    name: SetDeliveryTag
    nameWithType: MessageBuilderExtensions.SetDeliveryTag
    fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetDeliveryTag
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.UInt64
    name: UInt64
    nameWithType: UInt64
    fullName: System.UInt64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetDeliveryTag(System.UInt64)
    name: SetDeliveryTag
    nameWithType: MessageBuilderExtensions.SetDeliveryTag
    fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetDeliveryTag
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.UInt64
    name: UInt64
    nameWithType: UInt64
    fullName: System.UInt64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Support.AbstractMessageBuilder.Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetMessageCount(System.UInt32)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetMessageCount(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.UInt32)
  parent: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions
  definition: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetMessageCount(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.UInt32)
  name: SetMessageCount(UInt32)
  nameWithType: MessageBuilderExtensions.SetMessageCount(UInt32)
  fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetMessageCount(System.UInt32)
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetMessageCount(System.UInt32)
    name: SetMessageCount
    nameWithType: MessageBuilderExtensions.SetMessageCount
    fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetMessageCount
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.UInt32
    name: UInt32
    nameWithType: UInt32
    fullName: System.UInt32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetMessageCount(System.UInt32)
    name: SetMessageCount
    nameWithType: MessageBuilderExtensions.SetMessageCount
    fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetMessageCount
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.UInt32
    name: UInt32
    nameWithType: UInt32
    fullName: System.UInt32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Support.AbstractMessageBuilder.Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetTimestampIfAbsent(System.Int64)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetTimestampIfAbsent(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.Int64)
  parent: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions
  definition: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetTimestampIfAbsent(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.Int64)
  name: SetTimestampIfAbsent(Int64)
  nameWithType: MessageBuilderExtensions.SetTimestampIfAbsent(Int64)
  fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetTimestampIfAbsent(System.Int64)
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetTimestampIfAbsent(System.Int64)
    name: SetTimestampIfAbsent
    nameWithType: MessageBuilderExtensions.SetTimestampIfAbsent
    fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetTimestampIfAbsent
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetTimestampIfAbsent(System.Int64)
    name: SetTimestampIfAbsent
    nameWithType: MessageBuilderExtensions.SetTimestampIfAbsent
    fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetTimestampIfAbsent
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Support.AbstractMessageBuilder.Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetMessageIdIfAbsent(System.String)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetMessageIdIfAbsent(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.String)
  parent: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions
  definition: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetMessageIdIfAbsent(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.String)
  name: SetMessageIdIfAbsent(String)
  nameWithType: MessageBuilderExtensions.SetMessageIdIfAbsent(String)
  fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetMessageIdIfAbsent(System.String)
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetMessageIdIfAbsent(System.String)
    name: SetMessageIdIfAbsent
    nameWithType: MessageBuilderExtensions.SetMessageIdIfAbsent
    fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetMessageIdIfAbsent
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetMessageIdIfAbsent(System.String)
    name: SetMessageIdIfAbsent
    nameWithType: MessageBuilderExtensions.SetMessageIdIfAbsent
    fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetMessageIdIfAbsent
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Support.AbstractMessageBuilder.Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetUserIdIfAbsent(System.String)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetUserIdIfAbsent(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.String)
  parent: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions
  definition: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetUserIdIfAbsent(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.String)
  name: SetUserIdIfAbsent(String)
  nameWithType: MessageBuilderExtensions.SetUserIdIfAbsent(String)
  fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetUserIdIfAbsent(System.String)
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetUserIdIfAbsent(System.String)
    name: SetUserIdIfAbsent
    nameWithType: MessageBuilderExtensions.SetUserIdIfAbsent
    fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetUserIdIfAbsent
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetUserIdIfAbsent(System.String)
    name: SetUserIdIfAbsent
    nameWithType: MessageBuilderExtensions.SetUserIdIfAbsent
    fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetUserIdIfAbsent
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Support.AbstractMessageBuilder.Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetAppIdIfAbsent(System.String)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetAppIdIfAbsent(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.String)
  parent: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions
  definition: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetAppIdIfAbsent(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.String)
  name: SetAppIdIfAbsent(String)
  nameWithType: MessageBuilderExtensions.SetAppIdIfAbsent(String)
  fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetAppIdIfAbsent(System.String)
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetAppIdIfAbsent(System.String)
    name: SetAppIdIfAbsent
    nameWithType: MessageBuilderExtensions.SetAppIdIfAbsent
    fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetAppIdIfAbsent
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetAppIdIfAbsent(System.String)
    name: SetAppIdIfAbsent
    nameWithType: MessageBuilderExtensions.SetAppIdIfAbsent
    fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetAppIdIfAbsent
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Support.AbstractMessageBuilder.Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetClusterIdIfAbsent(System.String)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetClusterIdIfAbsent(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.String)
  parent: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions
  definition: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetClusterIdIfAbsent(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.String)
  name: SetClusterIdIfAbsent(String)
  nameWithType: MessageBuilderExtensions.SetClusterIdIfAbsent(String)
  fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetClusterIdIfAbsent(System.String)
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetClusterIdIfAbsent(System.String)
    name: SetClusterIdIfAbsent
    nameWithType: MessageBuilderExtensions.SetClusterIdIfAbsent
    fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetClusterIdIfAbsent
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetClusterIdIfAbsent(System.String)
    name: SetClusterIdIfAbsent
    nameWithType: MessageBuilderExtensions.SetClusterIdIfAbsent
    fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetClusterIdIfAbsent
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Support.AbstractMessageBuilder.Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetTypeIfAbsent(System.String)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetTypeIfAbsent(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.String)
  parent: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions
  definition: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetTypeIfAbsent(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.String)
  name: SetTypeIfAbsent(String)
  nameWithType: MessageBuilderExtensions.SetTypeIfAbsent(String)
  fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetTypeIfAbsent(System.String)
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetTypeIfAbsent(System.String)
    name: SetTypeIfAbsent
    nameWithType: MessageBuilderExtensions.SetTypeIfAbsent
    fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetTypeIfAbsent
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetTypeIfAbsent(System.String)
    name: SetTypeIfAbsent
    nameWithType: MessageBuilderExtensions.SetTypeIfAbsent
    fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetTypeIfAbsent
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Support.AbstractMessageBuilder.Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetCorrelationIdIfAbsent(System.String)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetCorrelationIdIfAbsent(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.String)
  parent: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions
  definition: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetCorrelationIdIfAbsent(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.String)
  name: SetCorrelationIdIfAbsent(String)
  nameWithType: MessageBuilderExtensions.SetCorrelationIdIfAbsent(String)
  fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetCorrelationIdIfAbsent(System.String)
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetCorrelationIdIfAbsent(System.String)
    name: SetCorrelationIdIfAbsent
    nameWithType: MessageBuilderExtensions.SetCorrelationIdIfAbsent
    fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetCorrelationIdIfAbsent
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetCorrelationIdIfAbsent(System.String)
    name: SetCorrelationIdIfAbsent
    nameWithType: MessageBuilderExtensions.SetCorrelationIdIfAbsent
    fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetCorrelationIdIfAbsent
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Support.AbstractMessageBuilder.Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetReplyToIfAbsent(System.String)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetReplyToIfAbsent(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.String)
  parent: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions
  definition: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetReplyToIfAbsent(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.String)
  name: SetReplyToIfAbsent(String)
  nameWithType: MessageBuilderExtensions.SetReplyToIfAbsent(String)
  fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetReplyToIfAbsent(System.String)
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetReplyToIfAbsent(System.String)
    name: SetReplyToIfAbsent
    nameWithType: MessageBuilderExtensions.SetReplyToIfAbsent
    fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetReplyToIfAbsent
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetReplyToIfAbsent(System.String)
    name: SetReplyToIfAbsent
    nameWithType: MessageBuilderExtensions.SetReplyToIfAbsent
    fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetReplyToIfAbsent
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Support.AbstractMessageBuilder.Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetReplyToAddressIfAbsent(Steeltoe.Messaging.RabbitMQ.Core.Address)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetReplyToAddressIfAbsent(Steeltoe.Messaging.Support.AbstractMessageBuilder,Steeltoe.Messaging.RabbitMQ.Core.Address)
  parent: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions
  definition: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetReplyToAddressIfAbsent(Steeltoe.Messaging.Support.AbstractMessageBuilder,Steeltoe.Messaging.RabbitMQ.Core.Address)
  name: SetReplyToAddressIfAbsent(Address)
  nameWithType: MessageBuilderExtensions.SetReplyToAddressIfAbsent(Address)
  fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetReplyToAddressIfAbsent(Steeltoe.Messaging.RabbitMQ.Core.Address)
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetReplyToAddressIfAbsent(Steeltoe.Messaging.RabbitMQ.Core.Address)
    name: SetReplyToAddressIfAbsent
    nameWithType: MessageBuilderExtensions.SetReplyToAddressIfAbsent
    fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetReplyToAddressIfAbsent
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.RabbitMQ.Core.Address
    name: Address
    nameWithType: Address
    fullName: Steeltoe.Messaging.RabbitMQ.Core.Address
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetReplyToAddressIfAbsent(Steeltoe.Messaging.RabbitMQ.Core.Address)
    name: SetReplyToAddressIfAbsent
    nameWithType: MessageBuilderExtensions.SetReplyToAddressIfAbsent
    fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetReplyToAddressIfAbsent
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.RabbitMQ.Core.Address
    name: Address
    nameWithType: Address
    fullName: Steeltoe.Messaging.RabbitMQ.Core.Address
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Support.AbstractMessageBuilder.Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetContentTypeIfAbsent(System.String)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetContentTypeIfAbsent(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.String)
  parent: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions
  definition: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetContentTypeIfAbsent(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.String)
  name: SetContentTypeIfAbsent(String)
  nameWithType: MessageBuilderExtensions.SetContentTypeIfAbsent(String)
  fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetContentTypeIfAbsent(System.String)
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetContentTypeIfAbsent(System.String)
    name: SetContentTypeIfAbsent
    nameWithType: MessageBuilderExtensions.SetContentTypeIfAbsent
    fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetContentTypeIfAbsent
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetContentTypeIfAbsent(System.String)
    name: SetContentTypeIfAbsent
    nameWithType: MessageBuilderExtensions.SetContentTypeIfAbsent
    fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetContentTypeIfAbsent
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Support.AbstractMessageBuilder.Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetContentEncodingIfAbsent(System.String)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetContentEncodingIfAbsent(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.String)
  parent: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions
  definition: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetContentEncodingIfAbsent(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.String)
  name: SetContentEncodingIfAbsent(String)
  nameWithType: MessageBuilderExtensions.SetContentEncodingIfAbsent(String)
  fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetContentEncodingIfAbsent(System.String)
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetContentEncodingIfAbsent(System.String)
    name: SetContentEncodingIfAbsent
    nameWithType: MessageBuilderExtensions.SetContentEncodingIfAbsent
    fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetContentEncodingIfAbsent
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetContentEncodingIfAbsent(System.String)
    name: SetContentEncodingIfAbsent
    nameWithType: MessageBuilderExtensions.SetContentEncodingIfAbsent
    fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetContentEncodingIfAbsent
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Support.AbstractMessageBuilder.Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetContentLengthIfAbsent(System.Int64)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetContentLengthIfAbsent(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.Int64)
  parent: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions
  definition: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetContentLengthIfAbsent(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.Int64)
  name: SetContentLengthIfAbsent(Int64)
  nameWithType: MessageBuilderExtensions.SetContentLengthIfAbsent(Int64)
  fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetContentLengthIfAbsent(System.Int64)
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetContentLengthIfAbsent(System.Int64)
    name: SetContentLengthIfAbsent
    nameWithType: MessageBuilderExtensions.SetContentLengthIfAbsent
    fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetContentLengthIfAbsent
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetContentLengthIfAbsent(System.Int64)
    name: SetContentLengthIfAbsent
    nameWithType: MessageBuilderExtensions.SetContentLengthIfAbsent
    fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetContentLengthIfAbsent
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Support.AbstractMessageBuilder.Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetDeliveryModeIfAbsent(Steeltoe.Messaging.RabbitMQ.Core.MessageDeliveryMode)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetDeliveryModeIfAbsent(Steeltoe.Messaging.Support.AbstractMessageBuilder,Steeltoe.Messaging.RabbitMQ.Core.MessageDeliveryMode)
  parent: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions
  definition: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetDeliveryModeIfAbsent(Steeltoe.Messaging.Support.AbstractMessageBuilder,Steeltoe.Messaging.RabbitMQ.Core.MessageDeliveryMode)
  name: SetDeliveryModeIfAbsent(MessageDeliveryMode)
  nameWithType: MessageBuilderExtensions.SetDeliveryModeIfAbsent(MessageDeliveryMode)
  fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetDeliveryModeIfAbsent(Steeltoe.Messaging.RabbitMQ.Core.MessageDeliveryMode)
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetDeliveryModeIfAbsent(Steeltoe.Messaging.RabbitMQ.Core.MessageDeliveryMode)
    name: SetDeliveryModeIfAbsent
    nameWithType: MessageBuilderExtensions.SetDeliveryModeIfAbsent
    fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetDeliveryModeIfAbsent
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.RabbitMQ.Core.MessageDeliveryMode
    name: MessageDeliveryMode
    nameWithType: MessageDeliveryMode
    fullName: Steeltoe.Messaging.RabbitMQ.Core.MessageDeliveryMode
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetDeliveryModeIfAbsent(Steeltoe.Messaging.RabbitMQ.Core.MessageDeliveryMode)
    name: SetDeliveryModeIfAbsent
    nameWithType: MessageBuilderExtensions.SetDeliveryModeIfAbsent
    fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetDeliveryModeIfAbsent
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.RabbitMQ.Core.MessageDeliveryMode
    name: MessageDeliveryMode
    nameWithType: MessageDeliveryMode
    fullName: Steeltoe.Messaging.RabbitMQ.Core.MessageDeliveryMode
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Support.AbstractMessageBuilder.Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetExpirationIfAbsent(System.String)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetExpirationIfAbsent(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.String)
  parent: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions
  definition: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetExpirationIfAbsent(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.String)
  name: SetExpirationIfAbsent(String)
  nameWithType: MessageBuilderExtensions.SetExpirationIfAbsent(String)
  fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetExpirationIfAbsent(System.String)
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetExpirationIfAbsent(System.String)
    name: SetExpirationIfAbsent
    nameWithType: MessageBuilderExtensions.SetExpirationIfAbsent
    fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetExpirationIfAbsent
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetExpirationIfAbsent(System.String)
    name: SetExpirationIfAbsent
    nameWithType: MessageBuilderExtensions.SetExpirationIfAbsent
    fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetExpirationIfAbsent
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Support.AbstractMessageBuilder.Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetPriorityIfAbsent(System.Int32)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetPriorityIfAbsent(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.Int32)
  parent: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions
  definition: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetPriorityIfAbsent(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.Int32)
  name: SetPriorityIfAbsent(Int32)
  nameWithType: MessageBuilderExtensions.SetPriorityIfAbsent(Int32)
  fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetPriorityIfAbsent(System.Int32)
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetPriorityIfAbsent(System.Int32)
    name: SetPriorityIfAbsent
    nameWithType: MessageBuilderExtensions.SetPriorityIfAbsent
    fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetPriorityIfAbsent
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetPriorityIfAbsent(System.Int32)
    name: SetPriorityIfAbsent
    nameWithType: MessageBuilderExtensions.SetPriorityIfAbsent
    fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetPriorityIfAbsent
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Support.AbstractMessageBuilder.Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetReceivedExchangeIfAbsent(System.String)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetReceivedExchangeIfAbsent(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.String)
  parent: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions
  definition: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetReceivedExchangeIfAbsent(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.String)
  name: SetReceivedExchangeIfAbsent(String)
  nameWithType: MessageBuilderExtensions.SetReceivedExchangeIfAbsent(String)
  fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetReceivedExchangeIfAbsent(System.String)
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetReceivedExchangeIfAbsent(System.String)
    name: SetReceivedExchangeIfAbsent
    nameWithType: MessageBuilderExtensions.SetReceivedExchangeIfAbsent
    fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetReceivedExchangeIfAbsent
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetReceivedExchangeIfAbsent(System.String)
    name: SetReceivedExchangeIfAbsent
    nameWithType: MessageBuilderExtensions.SetReceivedExchangeIfAbsent
    fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetReceivedExchangeIfAbsent
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Support.AbstractMessageBuilder.Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetReceivedRoutingKeyIfAbsent(System.String)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetReceivedRoutingKeyIfAbsent(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.String)
  parent: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions
  definition: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetReceivedRoutingKeyIfAbsent(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.String)
  name: SetReceivedRoutingKeyIfAbsent(String)
  nameWithType: MessageBuilderExtensions.SetReceivedRoutingKeyIfAbsent(String)
  fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetReceivedRoutingKeyIfAbsent(System.String)
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetReceivedRoutingKeyIfAbsent(System.String)
    name: SetReceivedRoutingKeyIfAbsent
    nameWithType: MessageBuilderExtensions.SetReceivedRoutingKeyIfAbsent
    fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetReceivedRoutingKeyIfAbsent
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetReceivedRoutingKeyIfAbsent(System.String)
    name: SetReceivedRoutingKeyIfAbsent
    nameWithType: MessageBuilderExtensions.SetReceivedRoutingKeyIfAbsent
    fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetReceivedRoutingKeyIfAbsent
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Support.AbstractMessageBuilder.Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetRedeliveredIfAbsent(System.Boolean)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetRedeliveredIfAbsent(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.Boolean)
  parent: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions
  definition: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetRedeliveredIfAbsent(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.Boolean)
  name: SetRedeliveredIfAbsent(Boolean)
  nameWithType: MessageBuilderExtensions.SetRedeliveredIfAbsent(Boolean)
  fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetRedeliveredIfAbsent(System.Boolean)
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetRedeliveredIfAbsent(System.Boolean)
    name: SetRedeliveredIfAbsent
    nameWithType: MessageBuilderExtensions.SetRedeliveredIfAbsent
    fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetRedeliveredIfAbsent
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetRedeliveredIfAbsent(System.Boolean)
    name: SetRedeliveredIfAbsent
    nameWithType: MessageBuilderExtensions.SetRedeliveredIfAbsent
    fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetRedeliveredIfAbsent
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Support.AbstractMessageBuilder.Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetDeliveryTagIfAbsent(System.UInt64)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetDeliveryTagIfAbsent(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.UInt64)
  parent: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions
  definition: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetDeliveryTagIfAbsent(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.UInt64)
  name: SetDeliveryTagIfAbsent(UInt64)
  nameWithType: MessageBuilderExtensions.SetDeliveryTagIfAbsent(UInt64)
  fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetDeliveryTagIfAbsent(System.UInt64)
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetDeliveryTagIfAbsent(System.UInt64)
    name: SetDeliveryTagIfAbsent
    nameWithType: MessageBuilderExtensions.SetDeliveryTagIfAbsent
    fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetDeliveryTagIfAbsent
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.UInt64
    name: UInt64
    nameWithType: UInt64
    fullName: System.UInt64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetDeliveryTagIfAbsent(System.UInt64)
    name: SetDeliveryTagIfAbsent
    nameWithType: MessageBuilderExtensions.SetDeliveryTagIfAbsent
    fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetDeliveryTagIfAbsent
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.UInt64
    name: UInt64
    nameWithType: UInt64
    fullName: System.UInt64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Support.AbstractMessageBuilder.Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetMessageCountIfAbsent(System.UInt32)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetMessageCountIfAbsent(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.UInt32)
  parent: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions
  definition: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetMessageCountIfAbsent(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.UInt32)
  name: SetMessageCountIfAbsent(UInt32)
  nameWithType: MessageBuilderExtensions.SetMessageCountIfAbsent(UInt32)
  fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetMessageCountIfAbsent(System.UInt32)
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetMessageCountIfAbsent(System.UInt32)
    name: SetMessageCountIfAbsent
    nameWithType: MessageBuilderExtensions.SetMessageCountIfAbsent
    fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetMessageCountIfAbsent
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.UInt32
    name: UInt32
    nameWithType: UInt32
    fullName: System.UInt32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetMessageCountIfAbsent(System.UInt32)
    name: SetMessageCountIfAbsent
    nameWithType: MessageBuilderExtensions.SetMessageCountIfAbsent
    fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetMessageCountIfAbsent
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.UInt32
    name: UInt32
    nameWithType: UInt32
    fullName: System.UInt32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetTimestamp(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.Int64)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetTimestamp(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.Int64)
  isExternal: true
  name: SetTimestamp(AbstractMessageBuilder, Int64)
  nameWithType: MessageBuilderExtensions.SetTimestamp(AbstractMessageBuilder, Int64)
  fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetTimestamp(Steeltoe.Messaging.Support.AbstractMessageBuilder, System.Int64)
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetTimestamp(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.Int64)
    name: SetTimestamp
    nameWithType: MessageBuilderExtensions.SetTimestamp
    fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetTimestamp
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.Support.AbstractMessageBuilder
    name: AbstractMessageBuilder
    nameWithType: AbstractMessageBuilder
    fullName: Steeltoe.Messaging.Support.AbstractMessageBuilder
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetTimestamp(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.Int64)
    name: SetTimestamp
    nameWithType: MessageBuilderExtensions.SetTimestamp
    fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetTimestamp
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.Support.AbstractMessageBuilder
    name: AbstractMessageBuilder
    nameWithType: AbstractMessageBuilder
    fullName: Steeltoe.Messaging.Support.AbstractMessageBuilder
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions
  commentId: T:Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions
  parent: Steeltoe.Messaging.RabbitMQ.Extensions
  name: MessageBuilderExtensions
  nameWithType: MessageBuilderExtensions
  fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions
- uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetMessageId(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.String)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetMessageId(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.String)
  isExternal: true
  name: SetMessageId(AbstractMessageBuilder, String)
  nameWithType: MessageBuilderExtensions.SetMessageId(AbstractMessageBuilder, String)
  fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetMessageId(Steeltoe.Messaging.Support.AbstractMessageBuilder, System.String)
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetMessageId(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.String)
    name: SetMessageId
    nameWithType: MessageBuilderExtensions.SetMessageId
    fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetMessageId
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.Support.AbstractMessageBuilder
    name: AbstractMessageBuilder
    nameWithType: AbstractMessageBuilder
    fullName: Steeltoe.Messaging.Support.AbstractMessageBuilder
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetMessageId(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.String)
    name: SetMessageId
    nameWithType: MessageBuilderExtensions.SetMessageId
    fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetMessageId
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.Support.AbstractMessageBuilder
    name: AbstractMessageBuilder
    nameWithType: AbstractMessageBuilder
    fullName: Steeltoe.Messaging.Support.AbstractMessageBuilder
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetUserId(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.String)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetUserId(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.String)
  isExternal: true
  name: SetUserId(AbstractMessageBuilder, String)
  nameWithType: MessageBuilderExtensions.SetUserId(AbstractMessageBuilder, String)
  fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetUserId(Steeltoe.Messaging.Support.AbstractMessageBuilder, System.String)
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetUserId(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.String)
    name: SetUserId
    nameWithType: MessageBuilderExtensions.SetUserId
    fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetUserId
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.Support.AbstractMessageBuilder
    name: AbstractMessageBuilder
    nameWithType: AbstractMessageBuilder
    fullName: Steeltoe.Messaging.Support.AbstractMessageBuilder
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetUserId(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.String)
    name: SetUserId
    nameWithType: MessageBuilderExtensions.SetUserId
    fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetUserId
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.Support.AbstractMessageBuilder
    name: AbstractMessageBuilder
    nameWithType: AbstractMessageBuilder
    fullName: Steeltoe.Messaging.Support.AbstractMessageBuilder
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetAppId(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.String)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetAppId(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.String)
  isExternal: true
  name: SetAppId(AbstractMessageBuilder, String)
  nameWithType: MessageBuilderExtensions.SetAppId(AbstractMessageBuilder, String)
  fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetAppId(Steeltoe.Messaging.Support.AbstractMessageBuilder, System.String)
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetAppId(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.String)
    name: SetAppId
    nameWithType: MessageBuilderExtensions.SetAppId
    fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetAppId
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.Support.AbstractMessageBuilder
    name: AbstractMessageBuilder
    nameWithType: AbstractMessageBuilder
    fullName: Steeltoe.Messaging.Support.AbstractMessageBuilder
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetAppId(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.String)
    name: SetAppId
    nameWithType: MessageBuilderExtensions.SetAppId
    fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetAppId
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.Support.AbstractMessageBuilder
    name: AbstractMessageBuilder
    nameWithType: AbstractMessageBuilder
    fullName: Steeltoe.Messaging.Support.AbstractMessageBuilder
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetClusterId(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.String)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetClusterId(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.String)
  isExternal: true
  name: SetClusterId(AbstractMessageBuilder, String)
  nameWithType: MessageBuilderExtensions.SetClusterId(AbstractMessageBuilder, String)
  fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetClusterId(Steeltoe.Messaging.Support.AbstractMessageBuilder, System.String)
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetClusterId(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.String)
    name: SetClusterId
    nameWithType: MessageBuilderExtensions.SetClusterId
    fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetClusterId
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.Support.AbstractMessageBuilder
    name: AbstractMessageBuilder
    nameWithType: AbstractMessageBuilder
    fullName: Steeltoe.Messaging.Support.AbstractMessageBuilder
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetClusterId(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.String)
    name: SetClusterId
    nameWithType: MessageBuilderExtensions.SetClusterId
    fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetClusterId
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.Support.AbstractMessageBuilder
    name: AbstractMessageBuilder
    nameWithType: AbstractMessageBuilder
    fullName: Steeltoe.Messaging.Support.AbstractMessageBuilder
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetType(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.String)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetType(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.String)
  isExternal: true
  name: SetType(AbstractMessageBuilder, String)
  nameWithType: MessageBuilderExtensions.SetType(AbstractMessageBuilder, String)
  fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetType(Steeltoe.Messaging.Support.AbstractMessageBuilder, System.String)
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetType(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.String)
    name: SetType
    nameWithType: MessageBuilderExtensions.SetType
    fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetType
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.Support.AbstractMessageBuilder
    name: AbstractMessageBuilder
    nameWithType: AbstractMessageBuilder
    fullName: Steeltoe.Messaging.Support.AbstractMessageBuilder
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetType(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.String)
    name: SetType
    nameWithType: MessageBuilderExtensions.SetType
    fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetType
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.Support.AbstractMessageBuilder
    name: AbstractMessageBuilder
    nameWithType: AbstractMessageBuilder
    fullName: Steeltoe.Messaging.Support.AbstractMessageBuilder
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetCorrelationId(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.String)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetCorrelationId(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.String)
  isExternal: true
  name: SetCorrelationId(AbstractMessageBuilder, String)
  nameWithType: MessageBuilderExtensions.SetCorrelationId(AbstractMessageBuilder, String)
  fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetCorrelationId(Steeltoe.Messaging.Support.AbstractMessageBuilder, System.String)
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetCorrelationId(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.String)
    name: SetCorrelationId
    nameWithType: MessageBuilderExtensions.SetCorrelationId
    fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetCorrelationId
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.Support.AbstractMessageBuilder
    name: AbstractMessageBuilder
    nameWithType: AbstractMessageBuilder
    fullName: Steeltoe.Messaging.Support.AbstractMessageBuilder
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetCorrelationId(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.String)
    name: SetCorrelationId
    nameWithType: MessageBuilderExtensions.SetCorrelationId
    fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetCorrelationId
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.Support.AbstractMessageBuilder
    name: AbstractMessageBuilder
    nameWithType: AbstractMessageBuilder
    fullName: Steeltoe.Messaging.Support.AbstractMessageBuilder
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetReplyTo(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.String)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetReplyTo(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.String)
  isExternal: true
  name: SetReplyTo(AbstractMessageBuilder, String)
  nameWithType: MessageBuilderExtensions.SetReplyTo(AbstractMessageBuilder, String)
  fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetReplyTo(Steeltoe.Messaging.Support.AbstractMessageBuilder, System.String)
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetReplyTo(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.String)
    name: SetReplyTo
    nameWithType: MessageBuilderExtensions.SetReplyTo
    fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetReplyTo
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.Support.AbstractMessageBuilder
    name: AbstractMessageBuilder
    nameWithType: AbstractMessageBuilder
    fullName: Steeltoe.Messaging.Support.AbstractMessageBuilder
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetReplyTo(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.String)
    name: SetReplyTo
    nameWithType: MessageBuilderExtensions.SetReplyTo
    fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetReplyTo
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.Support.AbstractMessageBuilder
    name: AbstractMessageBuilder
    nameWithType: AbstractMessageBuilder
    fullName: Steeltoe.Messaging.Support.AbstractMessageBuilder
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetReplyToAddress(Steeltoe.Messaging.Support.AbstractMessageBuilder,Steeltoe.Messaging.RabbitMQ.Core.Address)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetReplyToAddress(Steeltoe.Messaging.Support.AbstractMessageBuilder,Steeltoe.Messaging.RabbitMQ.Core.Address)
  name: SetReplyToAddress(AbstractMessageBuilder, Address)
  nameWithType: MessageBuilderExtensions.SetReplyToAddress(AbstractMessageBuilder, Address)
  fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetReplyToAddress(Steeltoe.Messaging.Support.AbstractMessageBuilder, Steeltoe.Messaging.RabbitMQ.Core.Address)
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetReplyToAddress(Steeltoe.Messaging.Support.AbstractMessageBuilder,Steeltoe.Messaging.RabbitMQ.Core.Address)
    name: SetReplyToAddress
    nameWithType: MessageBuilderExtensions.SetReplyToAddress
    fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetReplyToAddress
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.Support.AbstractMessageBuilder
    name: AbstractMessageBuilder
    nameWithType: AbstractMessageBuilder
    fullName: Steeltoe.Messaging.Support.AbstractMessageBuilder
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.RabbitMQ.Core.Address
    name: Address
    nameWithType: Address
    fullName: Steeltoe.Messaging.RabbitMQ.Core.Address
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetReplyToAddress(Steeltoe.Messaging.Support.AbstractMessageBuilder,Steeltoe.Messaging.RabbitMQ.Core.Address)
    name: SetReplyToAddress
    nameWithType: MessageBuilderExtensions.SetReplyToAddress
    fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetReplyToAddress
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.Support.AbstractMessageBuilder
    name: AbstractMessageBuilder
    nameWithType: AbstractMessageBuilder
    fullName: Steeltoe.Messaging.Support.AbstractMessageBuilder
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.RabbitMQ.Core.Address
    name: Address
    nameWithType: Address
    fullName: Steeltoe.Messaging.RabbitMQ.Core.Address
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetContentType(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.String)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetContentType(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.String)
  isExternal: true
  name: SetContentType(AbstractMessageBuilder, String)
  nameWithType: MessageBuilderExtensions.SetContentType(AbstractMessageBuilder, String)
  fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetContentType(Steeltoe.Messaging.Support.AbstractMessageBuilder, System.String)
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetContentType(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.String)
    name: SetContentType
    nameWithType: MessageBuilderExtensions.SetContentType
    fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetContentType
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.Support.AbstractMessageBuilder
    name: AbstractMessageBuilder
    nameWithType: AbstractMessageBuilder
    fullName: Steeltoe.Messaging.Support.AbstractMessageBuilder
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetContentType(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.String)
    name: SetContentType
    nameWithType: MessageBuilderExtensions.SetContentType
    fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetContentType
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.Support.AbstractMessageBuilder
    name: AbstractMessageBuilder
    nameWithType: AbstractMessageBuilder
    fullName: Steeltoe.Messaging.Support.AbstractMessageBuilder
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetContentEncoding(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.String)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetContentEncoding(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.String)
  isExternal: true
  name: SetContentEncoding(AbstractMessageBuilder, String)
  nameWithType: MessageBuilderExtensions.SetContentEncoding(AbstractMessageBuilder, String)
  fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetContentEncoding(Steeltoe.Messaging.Support.AbstractMessageBuilder, System.String)
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetContentEncoding(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.String)
    name: SetContentEncoding
    nameWithType: MessageBuilderExtensions.SetContentEncoding
    fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetContentEncoding
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.Support.AbstractMessageBuilder
    name: AbstractMessageBuilder
    nameWithType: AbstractMessageBuilder
    fullName: Steeltoe.Messaging.Support.AbstractMessageBuilder
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetContentEncoding(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.String)
    name: SetContentEncoding
    nameWithType: MessageBuilderExtensions.SetContentEncoding
    fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetContentEncoding
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.Support.AbstractMessageBuilder
    name: AbstractMessageBuilder
    nameWithType: AbstractMessageBuilder
    fullName: Steeltoe.Messaging.Support.AbstractMessageBuilder
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetContentLength(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.Int64)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetContentLength(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.Int64)
  isExternal: true
  name: SetContentLength(AbstractMessageBuilder, Int64)
  nameWithType: MessageBuilderExtensions.SetContentLength(AbstractMessageBuilder, Int64)
  fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetContentLength(Steeltoe.Messaging.Support.AbstractMessageBuilder, System.Int64)
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetContentLength(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.Int64)
    name: SetContentLength
    nameWithType: MessageBuilderExtensions.SetContentLength
    fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetContentLength
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.Support.AbstractMessageBuilder
    name: AbstractMessageBuilder
    nameWithType: AbstractMessageBuilder
    fullName: Steeltoe.Messaging.Support.AbstractMessageBuilder
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetContentLength(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.Int64)
    name: SetContentLength
    nameWithType: MessageBuilderExtensions.SetContentLength
    fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetContentLength
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.Support.AbstractMessageBuilder
    name: AbstractMessageBuilder
    nameWithType: AbstractMessageBuilder
    fullName: Steeltoe.Messaging.Support.AbstractMessageBuilder
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetDeliveryMode(Steeltoe.Messaging.Support.AbstractMessageBuilder,Steeltoe.Messaging.RabbitMQ.Core.MessageDeliveryMode)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetDeliveryMode(Steeltoe.Messaging.Support.AbstractMessageBuilder,Steeltoe.Messaging.RabbitMQ.Core.MessageDeliveryMode)
  name: SetDeliveryMode(AbstractMessageBuilder, MessageDeliveryMode)
  nameWithType: MessageBuilderExtensions.SetDeliveryMode(AbstractMessageBuilder, MessageDeliveryMode)
  fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetDeliveryMode(Steeltoe.Messaging.Support.AbstractMessageBuilder, Steeltoe.Messaging.RabbitMQ.Core.MessageDeliveryMode)
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetDeliveryMode(Steeltoe.Messaging.Support.AbstractMessageBuilder,Steeltoe.Messaging.RabbitMQ.Core.MessageDeliveryMode)
    name: SetDeliveryMode
    nameWithType: MessageBuilderExtensions.SetDeliveryMode
    fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetDeliveryMode
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.Support.AbstractMessageBuilder
    name: AbstractMessageBuilder
    nameWithType: AbstractMessageBuilder
    fullName: Steeltoe.Messaging.Support.AbstractMessageBuilder
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.RabbitMQ.Core.MessageDeliveryMode
    name: MessageDeliveryMode
    nameWithType: MessageDeliveryMode
    fullName: Steeltoe.Messaging.RabbitMQ.Core.MessageDeliveryMode
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetDeliveryMode(Steeltoe.Messaging.Support.AbstractMessageBuilder,Steeltoe.Messaging.RabbitMQ.Core.MessageDeliveryMode)
    name: SetDeliveryMode
    nameWithType: MessageBuilderExtensions.SetDeliveryMode
    fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetDeliveryMode
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.Support.AbstractMessageBuilder
    name: AbstractMessageBuilder
    nameWithType: AbstractMessageBuilder
    fullName: Steeltoe.Messaging.Support.AbstractMessageBuilder
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.RabbitMQ.Core.MessageDeliveryMode
    name: MessageDeliveryMode
    nameWithType: MessageDeliveryMode
    fullName: Steeltoe.Messaging.RabbitMQ.Core.MessageDeliveryMode
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetExpiration(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.String)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetExpiration(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.String)
  isExternal: true
  name: SetExpiration(AbstractMessageBuilder, String)
  nameWithType: MessageBuilderExtensions.SetExpiration(AbstractMessageBuilder, String)
  fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetExpiration(Steeltoe.Messaging.Support.AbstractMessageBuilder, System.String)
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetExpiration(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.String)
    name: SetExpiration
    nameWithType: MessageBuilderExtensions.SetExpiration
    fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetExpiration
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.Support.AbstractMessageBuilder
    name: AbstractMessageBuilder
    nameWithType: AbstractMessageBuilder
    fullName: Steeltoe.Messaging.Support.AbstractMessageBuilder
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetExpiration(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.String)
    name: SetExpiration
    nameWithType: MessageBuilderExtensions.SetExpiration
    fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetExpiration
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.Support.AbstractMessageBuilder
    name: AbstractMessageBuilder
    nameWithType: AbstractMessageBuilder
    fullName: Steeltoe.Messaging.Support.AbstractMessageBuilder
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetPriority(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.Int32)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetPriority(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.Int32)
  isExternal: true
  name: SetPriority(AbstractMessageBuilder, Int32)
  nameWithType: MessageBuilderExtensions.SetPriority(AbstractMessageBuilder, Int32)
  fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetPriority(Steeltoe.Messaging.Support.AbstractMessageBuilder, System.Int32)
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetPriority(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.Int32)
    name: SetPriority
    nameWithType: MessageBuilderExtensions.SetPriority
    fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetPriority
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.Support.AbstractMessageBuilder
    name: AbstractMessageBuilder
    nameWithType: AbstractMessageBuilder
    fullName: Steeltoe.Messaging.Support.AbstractMessageBuilder
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetPriority(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.Int32)
    name: SetPriority
    nameWithType: MessageBuilderExtensions.SetPriority
    fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetPriority
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.Support.AbstractMessageBuilder
    name: AbstractMessageBuilder
    nameWithType: AbstractMessageBuilder
    fullName: Steeltoe.Messaging.Support.AbstractMessageBuilder
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetReceivedExchange(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.String)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetReceivedExchange(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.String)
  isExternal: true
  name: SetReceivedExchange(AbstractMessageBuilder, String)
  nameWithType: MessageBuilderExtensions.SetReceivedExchange(AbstractMessageBuilder, String)
  fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetReceivedExchange(Steeltoe.Messaging.Support.AbstractMessageBuilder, System.String)
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetReceivedExchange(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.String)
    name: SetReceivedExchange
    nameWithType: MessageBuilderExtensions.SetReceivedExchange
    fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetReceivedExchange
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.Support.AbstractMessageBuilder
    name: AbstractMessageBuilder
    nameWithType: AbstractMessageBuilder
    fullName: Steeltoe.Messaging.Support.AbstractMessageBuilder
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetReceivedExchange(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.String)
    name: SetReceivedExchange
    nameWithType: MessageBuilderExtensions.SetReceivedExchange
    fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetReceivedExchange
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.Support.AbstractMessageBuilder
    name: AbstractMessageBuilder
    nameWithType: AbstractMessageBuilder
    fullName: Steeltoe.Messaging.Support.AbstractMessageBuilder
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetReceivedRoutingKey(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.String)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetReceivedRoutingKey(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.String)
  isExternal: true
  name: SetReceivedRoutingKey(AbstractMessageBuilder, String)
  nameWithType: MessageBuilderExtensions.SetReceivedRoutingKey(AbstractMessageBuilder, String)
  fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetReceivedRoutingKey(Steeltoe.Messaging.Support.AbstractMessageBuilder, System.String)
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetReceivedRoutingKey(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.String)
    name: SetReceivedRoutingKey
    nameWithType: MessageBuilderExtensions.SetReceivedRoutingKey
    fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetReceivedRoutingKey
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.Support.AbstractMessageBuilder
    name: AbstractMessageBuilder
    nameWithType: AbstractMessageBuilder
    fullName: Steeltoe.Messaging.Support.AbstractMessageBuilder
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetReceivedRoutingKey(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.String)
    name: SetReceivedRoutingKey
    nameWithType: MessageBuilderExtensions.SetReceivedRoutingKey
    fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetReceivedRoutingKey
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.Support.AbstractMessageBuilder
    name: AbstractMessageBuilder
    nameWithType: AbstractMessageBuilder
    fullName: Steeltoe.Messaging.Support.AbstractMessageBuilder
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetRedelivered(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.Boolean)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetRedelivered(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.Boolean)
  isExternal: true
  name: SetRedelivered(AbstractMessageBuilder, Boolean)
  nameWithType: MessageBuilderExtensions.SetRedelivered(AbstractMessageBuilder, Boolean)
  fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetRedelivered(Steeltoe.Messaging.Support.AbstractMessageBuilder, System.Boolean)
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetRedelivered(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.Boolean)
    name: SetRedelivered
    nameWithType: MessageBuilderExtensions.SetRedelivered
    fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetRedelivered
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.Support.AbstractMessageBuilder
    name: AbstractMessageBuilder
    nameWithType: AbstractMessageBuilder
    fullName: Steeltoe.Messaging.Support.AbstractMessageBuilder
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetRedelivered(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.Boolean)
    name: SetRedelivered
    nameWithType: MessageBuilderExtensions.SetRedelivered
    fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetRedelivered
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.Support.AbstractMessageBuilder
    name: AbstractMessageBuilder
    nameWithType: AbstractMessageBuilder
    fullName: Steeltoe.Messaging.Support.AbstractMessageBuilder
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetDeliveryTag(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.UInt64)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetDeliveryTag(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.UInt64)
  isExternal: true
  name: SetDeliveryTag(AbstractMessageBuilder, UInt64)
  nameWithType: MessageBuilderExtensions.SetDeliveryTag(AbstractMessageBuilder, UInt64)
  fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetDeliveryTag(Steeltoe.Messaging.Support.AbstractMessageBuilder, System.UInt64)
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetDeliveryTag(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.UInt64)
    name: SetDeliveryTag
    nameWithType: MessageBuilderExtensions.SetDeliveryTag
    fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetDeliveryTag
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.Support.AbstractMessageBuilder
    name: AbstractMessageBuilder
    nameWithType: AbstractMessageBuilder
    fullName: Steeltoe.Messaging.Support.AbstractMessageBuilder
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.UInt64
    name: UInt64
    nameWithType: UInt64
    fullName: System.UInt64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetDeliveryTag(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.UInt64)
    name: SetDeliveryTag
    nameWithType: MessageBuilderExtensions.SetDeliveryTag
    fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetDeliveryTag
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.Support.AbstractMessageBuilder
    name: AbstractMessageBuilder
    nameWithType: AbstractMessageBuilder
    fullName: Steeltoe.Messaging.Support.AbstractMessageBuilder
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.UInt64
    name: UInt64
    nameWithType: UInt64
    fullName: System.UInt64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetMessageCount(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.UInt32)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetMessageCount(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.UInt32)
  isExternal: true
  name: SetMessageCount(AbstractMessageBuilder, UInt32)
  nameWithType: MessageBuilderExtensions.SetMessageCount(AbstractMessageBuilder, UInt32)
  fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetMessageCount(Steeltoe.Messaging.Support.AbstractMessageBuilder, System.UInt32)
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetMessageCount(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.UInt32)
    name: SetMessageCount
    nameWithType: MessageBuilderExtensions.SetMessageCount
    fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetMessageCount
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.Support.AbstractMessageBuilder
    name: AbstractMessageBuilder
    nameWithType: AbstractMessageBuilder
    fullName: Steeltoe.Messaging.Support.AbstractMessageBuilder
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.UInt32
    name: UInt32
    nameWithType: UInt32
    fullName: System.UInt32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetMessageCount(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.UInt32)
    name: SetMessageCount
    nameWithType: MessageBuilderExtensions.SetMessageCount
    fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetMessageCount
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.Support.AbstractMessageBuilder
    name: AbstractMessageBuilder
    nameWithType: AbstractMessageBuilder
    fullName: Steeltoe.Messaging.Support.AbstractMessageBuilder
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.UInt32
    name: UInt32
    nameWithType: UInt32
    fullName: System.UInt32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetTimestampIfAbsent(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.Int64)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetTimestampIfAbsent(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.Int64)
  isExternal: true
  name: SetTimestampIfAbsent(AbstractMessageBuilder, Int64)
  nameWithType: MessageBuilderExtensions.SetTimestampIfAbsent(AbstractMessageBuilder, Int64)
  fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetTimestampIfAbsent(Steeltoe.Messaging.Support.AbstractMessageBuilder, System.Int64)
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetTimestampIfAbsent(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.Int64)
    name: SetTimestampIfAbsent
    nameWithType: MessageBuilderExtensions.SetTimestampIfAbsent
    fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetTimestampIfAbsent
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.Support.AbstractMessageBuilder
    name: AbstractMessageBuilder
    nameWithType: AbstractMessageBuilder
    fullName: Steeltoe.Messaging.Support.AbstractMessageBuilder
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetTimestampIfAbsent(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.Int64)
    name: SetTimestampIfAbsent
    nameWithType: MessageBuilderExtensions.SetTimestampIfAbsent
    fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetTimestampIfAbsent
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.Support.AbstractMessageBuilder
    name: AbstractMessageBuilder
    nameWithType: AbstractMessageBuilder
    fullName: Steeltoe.Messaging.Support.AbstractMessageBuilder
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetMessageIdIfAbsent(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.String)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetMessageIdIfAbsent(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.String)
  isExternal: true
  name: SetMessageIdIfAbsent(AbstractMessageBuilder, String)
  nameWithType: MessageBuilderExtensions.SetMessageIdIfAbsent(AbstractMessageBuilder, String)
  fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetMessageIdIfAbsent(Steeltoe.Messaging.Support.AbstractMessageBuilder, System.String)
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetMessageIdIfAbsent(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.String)
    name: SetMessageIdIfAbsent
    nameWithType: MessageBuilderExtensions.SetMessageIdIfAbsent
    fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetMessageIdIfAbsent
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.Support.AbstractMessageBuilder
    name: AbstractMessageBuilder
    nameWithType: AbstractMessageBuilder
    fullName: Steeltoe.Messaging.Support.AbstractMessageBuilder
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetMessageIdIfAbsent(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.String)
    name: SetMessageIdIfAbsent
    nameWithType: MessageBuilderExtensions.SetMessageIdIfAbsent
    fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetMessageIdIfAbsent
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.Support.AbstractMessageBuilder
    name: AbstractMessageBuilder
    nameWithType: AbstractMessageBuilder
    fullName: Steeltoe.Messaging.Support.AbstractMessageBuilder
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetUserIdIfAbsent(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.String)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetUserIdIfAbsent(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.String)
  isExternal: true
  name: SetUserIdIfAbsent(AbstractMessageBuilder, String)
  nameWithType: MessageBuilderExtensions.SetUserIdIfAbsent(AbstractMessageBuilder, String)
  fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetUserIdIfAbsent(Steeltoe.Messaging.Support.AbstractMessageBuilder, System.String)
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetUserIdIfAbsent(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.String)
    name: SetUserIdIfAbsent
    nameWithType: MessageBuilderExtensions.SetUserIdIfAbsent
    fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetUserIdIfAbsent
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.Support.AbstractMessageBuilder
    name: AbstractMessageBuilder
    nameWithType: AbstractMessageBuilder
    fullName: Steeltoe.Messaging.Support.AbstractMessageBuilder
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetUserIdIfAbsent(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.String)
    name: SetUserIdIfAbsent
    nameWithType: MessageBuilderExtensions.SetUserIdIfAbsent
    fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetUserIdIfAbsent
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.Support.AbstractMessageBuilder
    name: AbstractMessageBuilder
    nameWithType: AbstractMessageBuilder
    fullName: Steeltoe.Messaging.Support.AbstractMessageBuilder
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetAppIdIfAbsent(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.String)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetAppIdIfAbsent(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.String)
  isExternal: true
  name: SetAppIdIfAbsent(AbstractMessageBuilder, String)
  nameWithType: MessageBuilderExtensions.SetAppIdIfAbsent(AbstractMessageBuilder, String)
  fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetAppIdIfAbsent(Steeltoe.Messaging.Support.AbstractMessageBuilder, System.String)
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetAppIdIfAbsent(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.String)
    name: SetAppIdIfAbsent
    nameWithType: MessageBuilderExtensions.SetAppIdIfAbsent
    fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetAppIdIfAbsent
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.Support.AbstractMessageBuilder
    name: AbstractMessageBuilder
    nameWithType: AbstractMessageBuilder
    fullName: Steeltoe.Messaging.Support.AbstractMessageBuilder
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetAppIdIfAbsent(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.String)
    name: SetAppIdIfAbsent
    nameWithType: MessageBuilderExtensions.SetAppIdIfAbsent
    fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetAppIdIfAbsent
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.Support.AbstractMessageBuilder
    name: AbstractMessageBuilder
    nameWithType: AbstractMessageBuilder
    fullName: Steeltoe.Messaging.Support.AbstractMessageBuilder
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetClusterIdIfAbsent(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.String)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetClusterIdIfAbsent(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.String)
  isExternal: true
  name: SetClusterIdIfAbsent(AbstractMessageBuilder, String)
  nameWithType: MessageBuilderExtensions.SetClusterIdIfAbsent(AbstractMessageBuilder, String)
  fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetClusterIdIfAbsent(Steeltoe.Messaging.Support.AbstractMessageBuilder, System.String)
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetClusterIdIfAbsent(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.String)
    name: SetClusterIdIfAbsent
    nameWithType: MessageBuilderExtensions.SetClusterIdIfAbsent
    fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetClusterIdIfAbsent
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.Support.AbstractMessageBuilder
    name: AbstractMessageBuilder
    nameWithType: AbstractMessageBuilder
    fullName: Steeltoe.Messaging.Support.AbstractMessageBuilder
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetClusterIdIfAbsent(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.String)
    name: SetClusterIdIfAbsent
    nameWithType: MessageBuilderExtensions.SetClusterIdIfAbsent
    fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetClusterIdIfAbsent
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.Support.AbstractMessageBuilder
    name: AbstractMessageBuilder
    nameWithType: AbstractMessageBuilder
    fullName: Steeltoe.Messaging.Support.AbstractMessageBuilder
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetTypeIfAbsent(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.String)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetTypeIfAbsent(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.String)
  isExternal: true
  name: SetTypeIfAbsent(AbstractMessageBuilder, String)
  nameWithType: MessageBuilderExtensions.SetTypeIfAbsent(AbstractMessageBuilder, String)
  fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetTypeIfAbsent(Steeltoe.Messaging.Support.AbstractMessageBuilder, System.String)
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetTypeIfAbsent(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.String)
    name: SetTypeIfAbsent
    nameWithType: MessageBuilderExtensions.SetTypeIfAbsent
    fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetTypeIfAbsent
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.Support.AbstractMessageBuilder
    name: AbstractMessageBuilder
    nameWithType: AbstractMessageBuilder
    fullName: Steeltoe.Messaging.Support.AbstractMessageBuilder
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetTypeIfAbsent(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.String)
    name: SetTypeIfAbsent
    nameWithType: MessageBuilderExtensions.SetTypeIfAbsent
    fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetTypeIfAbsent
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.Support.AbstractMessageBuilder
    name: AbstractMessageBuilder
    nameWithType: AbstractMessageBuilder
    fullName: Steeltoe.Messaging.Support.AbstractMessageBuilder
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetCorrelationIdIfAbsent(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.String)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetCorrelationIdIfAbsent(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.String)
  isExternal: true
  name: SetCorrelationIdIfAbsent(AbstractMessageBuilder, String)
  nameWithType: MessageBuilderExtensions.SetCorrelationIdIfAbsent(AbstractMessageBuilder, String)
  fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetCorrelationIdIfAbsent(Steeltoe.Messaging.Support.AbstractMessageBuilder, System.String)
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetCorrelationIdIfAbsent(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.String)
    name: SetCorrelationIdIfAbsent
    nameWithType: MessageBuilderExtensions.SetCorrelationIdIfAbsent
    fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetCorrelationIdIfAbsent
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.Support.AbstractMessageBuilder
    name: AbstractMessageBuilder
    nameWithType: AbstractMessageBuilder
    fullName: Steeltoe.Messaging.Support.AbstractMessageBuilder
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetCorrelationIdIfAbsent(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.String)
    name: SetCorrelationIdIfAbsent
    nameWithType: MessageBuilderExtensions.SetCorrelationIdIfAbsent
    fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetCorrelationIdIfAbsent
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.Support.AbstractMessageBuilder
    name: AbstractMessageBuilder
    nameWithType: AbstractMessageBuilder
    fullName: Steeltoe.Messaging.Support.AbstractMessageBuilder
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetReplyToIfAbsent(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.String)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetReplyToIfAbsent(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.String)
  isExternal: true
  name: SetReplyToIfAbsent(AbstractMessageBuilder, String)
  nameWithType: MessageBuilderExtensions.SetReplyToIfAbsent(AbstractMessageBuilder, String)
  fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetReplyToIfAbsent(Steeltoe.Messaging.Support.AbstractMessageBuilder, System.String)
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetReplyToIfAbsent(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.String)
    name: SetReplyToIfAbsent
    nameWithType: MessageBuilderExtensions.SetReplyToIfAbsent
    fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetReplyToIfAbsent
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.Support.AbstractMessageBuilder
    name: AbstractMessageBuilder
    nameWithType: AbstractMessageBuilder
    fullName: Steeltoe.Messaging.Support.AbstractMessageBuilder
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetReplyToIfAbsent(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.String)
    name: SetReplyToIfAbsent
    nameWithType: MessageBuilderExtensions.SetReplyToIfAbsent
    fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetReplyToIfAbsent
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.Support.AbstractMessageBuilder
    name: AbstractMessageBuilder
    nameWithType: AbstractMessageBuilder
    fullName: Steeltoe.Messaging.Support.AbstractMessageBuilder
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetReplyToAddressIfAbsent(Steeltoe.Messaging.Support.AbstractMessageBuilder,Steeltoe.Messaging.RabbitMQ.Core.Address)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetReplyToAddressIfAbsent(Steeltoe.Messaging.Support.AbstractMessageBuilder,Steeltoe.Messaging.RabbitMQ.Core.Address)
  name: SetReplyToAddressIfAbsent(AbstractMessageBuilder, Address)
  nameWithType: MessageBuilderExtensions.SetReplyToAddressIfAbsent(AbstractMessageBuilder, Address)
  fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetReplyToAddressIfAbsent(Steeltoe.Messaging.Support.AbstractMessageBuilder, Steeltoe.Messaging.RabbitMQ.Core.Address)
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetReplyToAddressIfAbsent(Steeltoe.Messaging.Support.AbstractMessageBuilder,Steeltoe.Messaging.RabbitMQ.Core.Address)
    name: SetReplyToAddressIfAbsent
    nameWithType: MessageBuilderExtensions.SetReplyToAddressIfAbsent
    fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetReplyToAddressIfAbsent
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.Support.AbstractMessageBuilder
    name: AbstractMessageBuilder
    nameWithType: AbstractMessageBuilder
    fullName: Steeltoe.Messaging.Support.AbstractMessageBuilder
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.RabbitMQ.Core.Address
    name: Address
    nameWithType: Address
    fullName: Steeltoe.Messaging.RabbitMQ.Core.Address
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetReplyToAddressIfAbsent(Steeltoe.Messaging.Support.AbstractMessageBuilder,Steeltoe.Messaging.RabbitMQ.Core.Address)
    name: SetReplyToAddressIfAbsent
    nameWithType: MessageBuilderExtensions.SetReplyToAddressIfAbsent
    fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetReplyToAddressIfAbsent
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.Support.AbstractMessageBuilder
    name: AbstractMessageBuilder
    nameWithType: AbstractMessageBuilder
    fullName: Steeltoe.Messaging.Support.AbstractMessageBuilder
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.RabbitMQ.Core.Address
    name: Address
    nameWithType: Address
    fullName: Steeltoe.Messaging.RabbitMQ.Core.Address
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetContentTypeIfAbsent(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.String)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetContentTypeIfAbsent(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.String)
  isExternal: true
  name: SetContentTypeIfAbsent(AbstractMessageBuilder, String)
  nameWithType: MessageBuilderExtensions.SetContentTypeIfAbsent(AbstractMessageBuilder, String)
  fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetContentTypeIfAbsent(Steeltoe.Messaging.Support.AbstractMessageBuilder, System.String)
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetContentTypeIfAbsent(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.String)
    name: SetContentTypeIfAbsent
    nameWithType: MessageBuilderExtensions.SetContentTypeIfAbsent
    fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetContentTypeIfAbsent
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.Support.AbstractMessageBuilder
    name: AbstractMessageBuilder
    nameWithType: AbstractMessageBuilder
    fullName: Steeltoe.Messaging.Support.AbstractMessageBuilder
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetContentTypeIfAbsent(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.String)
    name: SetContentTypeIfAbsent
    nameWithType: MessageBuilderExtensions.SetContentTypeIfAbsent
    fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetContentTypeIfAbsent
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.Support.AbstractMessageBuilder
    name: AbstractMessageBuilder
    nameWithType: AbstractMessageBuilder
    fullName: Steeltoe.Messaging.Support.AbstractMessageBuilder
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetContentEncodingIfAbsent(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.String)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetContentEncodingIfAbsent(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.String)
  isExternal: true
  name: SetContentEncodingIfAbsent(AbstractMessageBuilder, String)
  nameWithType: MessageBuilderExtensions.SetContentEncodingIfAbsent(AbstractMessageBuilder, String)
  fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetContentEncodingIfAbsent(Steeltoe.Messaging.Support.AbstractMessageBuilder, System.String)
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetContentEncodingIfAbsent(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.String)
    name: SetContentEncodingIfAbsent
    nameWithType: MessageBuilderExtensions.SetContentEncodingIfAbsent
    fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetContentEncodingIfAbsent
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.Support.AbstractMessageBuilder
    name: AbstractMessageBuilder
    nameWithType: AbstractMessageBuilder
    fullName: Steeltoe.Messaging.Support.AbstractMessageBuilder
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetContentEncodingIfAbsent(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.String)
    name: SetContentEncodingIfAbsent
    nameWithType: MessageBuilderExtensions.SetContentEncodingIfAbsent
    fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetContentEncodingIfAbsent
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.Support.AbstractMessageBuilder
    name: AbstractMessageBuilder
    nameWithType: AbstractMessageBuilder
    fullName: Steeltoe.Messaging.Support.AbstractMessageBuilder
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetContentLengthIfAbsent(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.Int64)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetContentLengthIfAbsent(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.Int64)
  isExternal: true
  name: SetContentLengthIfAbsent(AbstractMessageBuilder, Int64)
  nameWithType: MessageBuilderExtensions.SetContentLengthIfAbsent(AbstractMessageBuilder, Int64)
  fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetContentLengthIfAbsent(Steeltoe.Messaging.Support.AbstractMessageBuilder, System.Int64)
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetContentLengthIfAbsent(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.Int64)
    name: SetContentLengthIfAbsent
    nameWithType: MessageBuilderExtensions.SetContentLengthIfAbsent
    fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetContentLengthIfAbsent
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.Support.AbstractMessageBuilder
    name: AbstractMessageBuilder
    nameWithType: AbstractMessageBuilder
    fullName: Steeltoe.Messaging.Support.AbstractMessageBuilder
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetContentLengthIfAbsent(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.Int64)
    name: SetContentLengthIfAbsent
    nameWithType: MessageBuilderExtensions.SetContentLengthIfAbsent
    fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetContentLengthIfAbsent
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.Support.AbstractMessageBuilder
    name: AbstractMessageBuilder
    nameWithType: AbstractMessageBuilder
    fullName: Steeltoe.Messaging.Support.AbstractMessageBuilder
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetDeliveryModeIfAbsent(Steeltoe.Messaging.Support.AbstractMessageBuilder,Steeltoe.Messaging.RabbitMQ.Core.MessageDeliveryMode)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetDeliveryModeIfAbsent(Steeltoe.Messaging.Support.AbstractMessageBuilder,Steeltoe.Messaging.RabbitMQ.Core.MessageDeliveryMode)
  name: SetDeliveryModeIfAbsent(AbstractMessageBuilder, MessageDeliveryMode)
  nameWithType: MessageBuilderExtensions.SetDeliveryModeIfAbsent(AbstractMessageBuilder, MessageDeliveryMode)
  fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetDeliveryModeIfAbsent(Steeltoe.Messaging.Support.AbstractMessageBuilder, Steeltoe.Messaging.RabbitMQ.Core.MessageDeliveryMode)
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetDeliveryModeIfAbsent(Steeltoe.Messaging.Support.AbstractMessageBuilder,Steeltoe.Messaging.RabbitMQ.Core.MessageDeliveryMode)
    name: SetDeliveryModeIfAbsent
    nameWithType: MessageBuilderExtensions.SetDeliveryModeIfAbsent
    fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetDeliveryModeIfAbsent
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.Support.AbstractMessageBuilder
    name: AbstractMessageBuilder
    nameWithType: AbstractMessageBuilder
    fullName: Steeltoe.Messaging.Support.AbstractMessageBuilder
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.RabbitMQ.Core.MessageDeliveryMode
    name: MessageDeliveryMode
    nameWithType: MessageDeliveryMode
    fullName: Steeltoe.Messaging.RabbitMQ.Core.MessageDeliveryMode
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetDeliveryModeIfAbsent(Steeltoe.Messaging.Support.AbstractMessageBuilder,Steeltoe.Messaging.RabbitMQ.Core.MessageDeliveryMode)
    name: SetDeliveryModeIfAbsent
    nameWithType: MessageBuilderExtensions.SetDeliveryModeIfAbsent
    fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetDeliveryModeIfAbsent
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.Support.AbstractMessageBuilder
    name: AbstractMessageBuilder
    nameWithType: AbstractMessageBuilder
    fullName: Steeltoe.Messaging.Support.AbstractMessageBuilder
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.RabbitMQ.Core.MessageDeliveryMode
    name: MessageDeliveryMode
    nameWithType: MessageDeliveryMode
    fullName: Steeltoe.Messaging.RabbitMQ.Core.MessageDeliveryMode
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetExpirationIfAbsent(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.String)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetExpirationIfAbsent(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.String)
  isExternal: true
  name: SetExpirationIfAbsent(AbstractMessageBuilder, String)
  nameWithType: MessageBuilderExtensions.SetExpirationIfAbsent(AbstractMessageBuilder, String)
  fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetExpirationIfAbsent(Steeltoe.Messaging.Support.AbstractMessageBuilder, System.String)
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetExpirationIfAbsent(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.String)
    name: SetExpirationIfAbsent
    nameWithType: MessageBuilderExtensions.SetExpirationIfAbsent
    fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetExpirationIfAbsent
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.Support.AbstractMessageBuilder
    name: AbstractMessageBuilder
    nameWithType: AbstractMessageBuilder
    fullName: Steeltoe.Messaging.Support.AbstractMessageBuilder
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetExpirationIfAbsent(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.String)
    name: SetExpirationIfAbsent
    nameWithType: MessageBuilderExtensions.SetExpirationIfAbsent
    fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetExpirationIfAbsent
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.Support.AbstractMessageBuilder
    name: AbstractMessageBuilder
    nameWithType: AbstractMessageBuilder
    fullName: Steeltoe.Messaging.Support.AbstractMessageBuilder
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetPriorityIfAbsent(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.Int32)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetPriorityIfAbsent(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.Int32)
  isExternal: true
  name: SetPriorityIfAbsent(AbstractMessageBuilder, Int32)
  nameWithType: MessageBuilderExtensions.SetPriorityIfAbsent(AbstractMessageBuilder, Int32)
  fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetPriorityIfAbsent(Steeltoe.Messaging.Support.AbstractMessageBuilder, System.Int32)
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetPriorityIfAbsent(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.Int32)
    name: SetPriorityIfAbsent
    nameWithType: MessageBuilderExtensions.SetPriorityIfAbsent
    fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetPriorityIfAbsent
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.Support.AbstractMessageBuilder
    name: AbstractMessageBuilder
    nameWithType: AbstractMessageBuilder
    fullName: Steeltoe.Messaging.Support.AbstractMessageBuilder
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetPriorityIfAbsent(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.Int32)
    name: SetPriorityIfAbsent
    nameWithType: MessageBuilderExtensions.SetPriorityIfAbsent
    fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetPriorityIfAbsent
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.Support.AbstractMessageBuilder
    name: AbstractMessageBuilder
    nameWithType: AbstractMessageBuilder
    fullName: Steeltoe.Messaging.Support.AbstractMessageBuilder
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetReceivedExchangeIfAbsent(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.String)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetReceivedExchangeIfAbsent(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.String)
  isExternal: true
  name: SetReceivedExchangeIfAbsent(AbstractMessageBuilder, String)
  nameWithType: MessageBuilderExtensions.SetReceivedExchangeIfAbsent(AbstractMessageBuilder, String)
  fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetReceivedExchangeIfAbsent(Steeltoe.Messaging.Support.AbstractMessageBuilder, System.String)
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetReceivedExchangeIfAbsent(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.String)
    name: SetReceivedExchangeIfAbsent
    nameWithType: MessageBuilderExtensions.SetReceivedExchangeIfAbsent
    fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetReceivedExchangeIfAbsent
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.Support.AbstractMessageBuilder
    name: AbstractMessageBuilder
    nameWithType: AbstractMessageBuilder
    fullName: Steeltoe.Messaging.Support.AbstractMessageBuilder
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetReceivedExchangeIfAbsent(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.String)
    name: SetReceivedExchangeIfAbsent
    nameWithType: MessageBuilderExtensions.SetReceivedExchangeIfAbsent
    fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetReceivedExchangeIfAbsent
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.Support.AbstractMessageBuilder
    name: AbstractMessageBuilder
    nameWithType: AbstractMessageBuilder
    fullName: Steeltoe.Messaging.Support.AbstractMessageBuilder
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetReceivedRoutingKeyIfAbsent(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.String)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetReceivedRoutingKeyIfAbsent(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.String)
  isExternal: true
  name: SetReceivedRoutingKeyIfAbsent(AbstractMessageBuilder, String)
  nameWithType: MessageBuilderExtensions.SetReceivedRoutingKeyIfAbsent(AbstractMessageBuilder, String)
  fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetReceivedRoutingKeyIfAbsent(Steeltoe.Messaging.Support.AbstractMessageBuilder, System.String)
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetReceivedRoutingKeyIfAbsent(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.String)
    name: SetReceivedRoutingKeyIfAbsent
    nameWithType: MessageBuilderExtensions.SetReceivedRoutingKeyIfAbsent
    fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetReceivedRoutingKeyIfAbsent
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.Support.AbstractMessageBuilder
    name: AbstractMessageBuilder
    nameWithType: AbstractMessageBuilder
    fullName: Steeltoe.Messaging.Support.AbstractMessageBuilder
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetReceivedRoutingKeyIfAbsent(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.String)
    name: SetReceivedRoutingKeyIfAbsent
    nameWithType: MessageBuilderExtensions.SetReceivedRoutingKeyIfAbsent
    fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetReceivedRoutingKeyIfAbsent
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.Support.AbstractMessageBuilder
    name: AbstractMessageBuilder
    nameWithType: AbstractMessageBuilder
    fullName: Steeltoe.Messaging.Support.AbstractMessageBuilder
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetRedeliveredIfAbsent(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.Boolean)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetRedeliveredIfAbsent(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.Boolean)
  isExternal: true
  name: SetRedeliveredIfAbsent(AbstractMessageBuilder, Boolean)
  nameWithType: MessageBuilderExtensions.SetRedeliveredIfAbsent(AbstractMessageBuilder, Boolean)
  fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetRedeliveredIfAbsent(Steeltoe.Messaging.Support.AbstractMessageBuilder, System.Boolean)
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetRedeliveredIfAbsent(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.Boolean)
    name: SetRedeliveredIfAbsent
    nameWithType: MessageBuilderExtensions.SetRedeliveredIfAbsent
    fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetRedeliveredIfAbsent
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.Support.AbstractMessageBuilder
    name: AbstractMessageBuilder
    nameWithType: AbstractMessageBuilder
    fullName: Steeltoe.Messaging.Support.AbstractMessageBuilder
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetRedeliveredIfAbsent(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.Boolean)
    name: SetRedeliveredIfAbsent
    nameWithType: MessageBuilderExtensions.SetRedeliveredIfAbsent
    fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetRedeliveredIfAbsent
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.Support.AbstractMessageBuilder
    name: AbstractMessageBuilder
    nameWithType: AbstractMessageBuilder
    fullName: Steeltoe.Messaging.Support.AbstractMessageBuilder
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetDeliveryTagIfAbsent(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.UInt64)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetDeliveryTagIfAbsent(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.UInt64)
  isExternal: true
  name: SetDeliveryTagIfAbsent(AbstractMessageBuilder, UInt64)
  nameWithType: MessageBuilderExtensions.SetDeliveryTagIfAbsent(AbstractMessageBuilder, UInt64)
  fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetDeliveryTagIfAbsent(Steeltoe.Messaging.Support.AbstractMessageBuilder, System.UInt64)
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetDeliveryTagIfAbsent(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.UInt64)
    name: SetDeliveryTagIfAbsent
    nameWithType: MessageBuilderExtensions.SetDeliveryTagIfAbsent
    fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetDeliveryTagIfAbsent
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.Support.AbstractMessageBuilder
    name: AbstractMessageBuilder
    nameWithType: AbstractMessageBuilder
    fullName: Steeltoe.Messaging.Support.AbstractMessageBuilder
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.UInt64
    name: UInt64
    nameWithType: UInt64
    fullName: System.UInt64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetDeliveryTagIfAbsent(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.UInt64)
    name: SetDeliveryTagIfAbsent
    nameWithType: MessageBuilderExtensions.SetDeliveryTagIfAbsent
    fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetDeliveryTagIfAbsent
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.Support.AbstractMessageBuilder
    name: AbstractMessageBuilder
    nameWithType: AbstractMessageBuilder
    fullName: Steeltoe.Messaging.Support.AbstractMessageBuilder
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.UInt64
    name: UInt64
    nameWithType: UInt64
    fullName: System.UInt64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetMessageCountIfAbsent(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.UInt32)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetMessageCountIfAbsent(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.UInt32)
  isExternal: true
  name: SetMessageCountIfAbsent(AbstractMessageBuilder, UInt32)
  nameWithType: MessageBuilderExtensions.SetMessageCountIfAbsent(AbstractMessageBuilder, UInt32)
  fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetMessageCountIfAbsent(Steeltoe.Messaging.Support.AbstractMessageBuilder, System.UInt32)
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetMessageCountIfAbsent(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.UInt32)
    name: SetMessageCountIfAbsent
    nameWithType: MessageBuilderExtensions.SetMessageCountIfAbsent
    fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetMessageCountIfAbsent
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.Support.AbstractMessageBuilder
    name: AbstractMessageBuilder
    nameWithType: AbstractMessageBuilder
    fullName: Steeltoe.Messaging.Support.AbstractMessageBuilder
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.UInt32
    name: UInt32
    nameWithType: UInt32
    fullName: System.UInt32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetMessageCountIfAbsent(Steeltoe.Messaging.Support.AbstractMessageBuilder,System.UInt32)
    name: SetMessageCountIfAbsent
    nameWithType: MessageBuilderExtensions.SetMessageCountIfAbsent
    fullName: Steeltoe.Messaging.RabbitMQ.Extensions.MessageBuilderExtensions.SetMessageCountIfAbsent
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.Support.AbstractMessageBuilder
    name: AbstractMessageBuilder
    nameWithType: AbstractMessageBuilder
    fullName: Steeltoe.Messaging.Support.AbstractMessageBuilder
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.UInt32
    name: UInt32
    nameWithType: UInt32
    fullName: System.UInt32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Extensions
  commentId: N:Steeltoe.Messaging.RabbitMQ.Extensions
  name: Steeltoe.Messaging.RabbitMQ.Extensions
  nameWithType: Steeltoe.Messaging.RabbitMQ.Extensions
  fullName: Steeltoe.Messaging.RabbitMQ.Extensions
- uid: Steeltoe.Messaging.IMessage
  commentId: T:Steeltoe.Messaging.IMessage
  parent: Steeltoe.Messaging
  name: IMessage
  nameWithType: IMessage
  fullName: Steeltoe.Messaging.IMessage
- uid: Steeltoe.Messaging
  commentId: N:Steeltoe.Messaging
  name: Steeltoe.Messaging
  nameWithType: Steeltoe.Messaging
  fullName: Steeltoe.Messaging
- uid: Steeltoe.Messaging.Support.MessageHeaderAccessor
  commentId: T:Steeltoe.Messaging.Support.MessageHeaderAccessor
  parent: Steeltoe.Messaging.Support
  name: MessageHeaderAccessor
  nameWithType: MessageHeaderAccessor
  fullName: Steeltoe.Messaging.Support.MessageHeaderAccessor
- uid: Steeltoe.Messaging.Support.AbstractMessageBuilder.#ctor*
  commentId: Overload:Steeltoe.Messaging.Support.AbstractMessageBuilder.#ctor
  name: AbstractMessageBuilder
  nameWithType: AbstractMessageBuilder.AbstractMessageBuilder
  fullName: Steeltoe.Messaging.Support.AbstractMessageBuilder.AbstractMessageBuilder
- uid: Steeltoe.Messaging.Support.AbstractMessageBuilder.SetHeaders*
  commentId: Overload:Steeltoe.Messaging.Support.AbstractMessageBuilder.SetHeaders
  name: SetHeaders
  nameWithType: AbstractMessageBuilder.SetHeaders
  fullName: Steeltoe.Messaging.Support.AbstractMessageBuilder.SetHeaders
- uid: Steeltoe.Messaging.Support.AbstractMessageBuilder
  commentId: T:Steeltoe.Messaging.Support.AbstractMessageBuilder
  parent: Steeltoe.Messaging.Support
  name: AbstractMessageBuilder
  nameWithType: AbstractMessageBuilder
  fullName: Steeltoe.Messaging.Support.AbstractMessageBuilder
- uid: Steeltoe.Messaging.Support.AbstractMessageBuilder.SetHeader*
  commentId: Overload:Steeltoe.Messaging.Support.AbstractMessageBuilder.SetHeader
  name: SetHeader
  nameWithType: AbstractMessageBuilder.SetHeader
  fullName: Steeltoe.Messaging.Support.AbstractMessageBuilder.SetHeader
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Steeltoe.Messaging.Support.AbstractMessageBuilder.SetHeaderIfAbsent*
  commentId: Overload:Steeltoe.Messaging.Support.AbstractMessageBuilder.SetHeaderIfAbsent
  name: SetHeaderIfAbsent
  nameWithType: AbstractMessageBuilder.SetHeaderIfAbsent
  fullName: Steeltoe.Messaging.Support.AbstractMessageBuilder.SetHeaderIfAbsent
- uid: Steeltoe.Messaging.Support.AbstractMessageBuilder.RemoveHeaders*
  commentId: Overload:Steeltoe.Messaging.Support.AbstractMessageBuilder.RemoveHeaders
  name: RemoveHeaders
  nameWithType: AbstractMessageBuilder.RemoveHeaders
  fullName: Steeltoe.Messaging.Support.AbstractMessageBuilder.RemoveHeaders
- uid: System.String[]
  isExternal: true
  name: String[]
  nameWithType: String[]
  fullName: System.String[]
  nameWithType.vb: String()
  fullName.vb: System.String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Steeltoe.Messaging.Support.AbstractMessageBuilder.RemoveHeader*
  commentId: Overload:Steeltoe.Messaging.Support.AbstractMessageBuilder.RemoveHeader
  name: RemoveHeader
  nameWithType: AbstractMessageBuilder.RemoveHeader
  fullName: Steeltoe.Messaging.Support.AbstractMessageBuilder.RemoveHeader
- uid: Steeltoe.Messaging.Support.AbstractMessageBuilder.CopyHeaders*
  commentId: Overload:Steeltoe.Messaging.Support.AbstractMessageBuilder.CopyHeaders
  name: CopyHeaders
  nameWithType: AbstractMessageBuilder.CopyHeaders
  fullName: Steeltoe.Messaging.Support.AbstractMessageBuilder.CopyHeaders
- uid: System.Collections.Generic.IDictionary{System.String,System.Object}
  commentId: T:System.Collections.Generic.IDictionary{System.String,System.Object}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IDictionary`2
  name: IDictionary<String, Object>
  nameWithType: IDictionary<String, Object>
  fullName: System.Collections.Generic.IDictionary<System.String, System.Object>
  nameWithType.vb: IDictionary(Of String, Object)
  fullName.vb: System.Collections.Generic.IDictionary(Of System.String, System.Object)
  name.vb: IDictionary(Of String, Object)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IDictionary`2
  commentId: T:System.Collections.Generic.IDictionary`2
  isExternal: true
  name: IDictionary<TKey, TValue>
  nameWithType: IDictionary<TKey, TValue>
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>
  nameWithType.vb: IDictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.IDictionary(Of TKey, TValue)
  name.vb: IDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Steeltoe.Messaging.Support.AbstractMessageBuilder.CopyHeadersIfAbsent*
  commentId: Overload:Steeltoe.Messaging.Support.AbstractMessageBuilder.CopyHeadersIfAbsent
  name: CopyHeadersIfAbsent
  nameWithType: AbstractMessageBuilder.CopyHeadersIfAbsent
  fullName: Steeltoe.Messaging.Support.AbstractMessageBuilder.CopyHeadersIfAbsent
- uid: Steeltoe.Messaging.Support.AbstractMessageBuilder.SetReplyChannel*
  commentId: Overload:Steeltoe.Messaging.Support.AbstractMessageBuilder.SetReplyChannel
  name: SetReplyChannel
  nameWithType: AbstractMessageBuilder.SetReplyChannel
  fullName: Steeltoe.Messaging.Support.AbstractMessageBuilder.SetReplyChannel
- uid: Steeltoe.Messaging.IMessageChannel
  commentId: T:Steeltoe.Messaging.IMessageChannel
  parent: Steeltoe.Messaging
  name: IMessageChannel
  nameWithType: IMessageChannel
  fullName: Steeltoe.Messaging.IMessageChannel
- uid: Steeltoe.Messaging.Support.AbstractMessageBuilder.SetReplyChannelName*
  commentId: Overload:Steeltoe.Messaging.Support.AbstractMessageBuilder.SetReplyChannelName
  name: SetReplyChannelName
  nameWithType: AbstractMessageBuilder.SetReplyChannelName
  fullName: Steeltoe.Messaging.Support.AbstractMessageBuilder.SetReplyChannelName
- uid: Steeltoe.Messaging.Support.AbstractMessageBuilder.SetErrorChannel*
  commentId: Overload:Steeltoe.Messaging.Support.AbstractMessageBuilder.SetErrorChannel
  name: SetErrorChannel
  nameWithType: AbstractMessageBuilder.SetErrorChannel
  fullName: Steeltoe.Messaging.Support.AbstractMessageBuilder.SetErrorChannel
- uid: Steeltoe.Messaging.Support.AbstractMessageBuilder.SetErrorChannelName*
  commentId: Overload:Steeltoe.Messaging.Support.AbstractMessageBuilder.SetErrorChannelName
  name: SetErrorChannelName
  nameWithType: AbstractMessageBuilder.SetErrorChannelName
  fullName: Steeltoe.Messaging.Support.AbstractMessageBuilder.SetErrorChannelName
- uid: Steeltoe.Messaging.Support.AbstractMessageBuilder.Build*
  commentId: Overload:Steeltoe.Messaging.Support.AbstractMessageBuilder.Build
  name: Build
  nameWithType: AbstractMessageBuilder.Build
  fullName: Steeltoe.Messaging.Support.AbstractMessageBuilder.Build
