### YamlMime:ManagedReference
items:
- uid: Steeltoe.Common.Extensions.UriExtensions
  commentId: T:Steeltoe.Common.Extensions.UriExtensions
  id: UriExtensions
  parent: Steeltoe.Common.Extensions
  children:
  - Steeltoe.Common.Extensions.UriExtensions.ParseQuerystring(System.String)
  - Steeltoe.Common.Extensions.UriExtensions.ToMaskedString(System.Uri)
  - Steeltoe.Common.Extensions.UriExtensions.ToMaskedUri(System.Uri)
  langs:
  - csharp
  - vb
  name: UriExtensions
  nameWithType: UriExtensions
  fullName: Steeltoe.Common.Extensions.UriExtensions
  type: Class
  source:
    remote:
      path: src/Common/src/Common/Extensions/UriExtensions.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: UriExtensions
    path: ../Steeltoe/src/Common/src/Common/Extensions/UriExtensions.cs
    startLine: 10
  assemblies:
  - Steeltoe.Common
  namespace: Steeltoe.Common.Extensions
  syntax:
    content: public static class UriExtensions
    content.vb: Public Module UriExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Steeltoe.Common.Extensions.UriExtensions.ToMaskedString(System.Uri)
  commentId: M:Steeltoe.Common.Extensions.UriExtensions.ToMaskedString(System.Uri)
  id: ToMaskedString(System.Uri)
  isExtensionMethod: true
  parent: Steeltoe.Common.Extensions.UriExtensions
  langs:
  - csharp
  - vb
  name: ToMaskedString(Uri)
  nameWithType: UriExtensions.ToMaskedString(Uri)
  fullName: Steeltoe.Common.Extensions.UriExtensions.ToMaskedString(System.Uri)
  type: Method
  source:
    remote:
      path: src/Common/src/Common/Extensions/UriExtensions.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: ToMaskedString
    path: ../Steeltoe/src/Common/src/Common/Extensions/UriExtensions.cs
    startLine: 12
  assemblies:
  - Steeltoe.Common
  namespace: Steeltoe.Common.Extensions
  syntax:
    content: public static string ToMaskedString(this Uri source)
    parameters:
    - id: source
      type: System.Uri
    return:
      type: System.String
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ToMaskedString(source As Uri) As String
  overload: Steeltoe.Common.Extensions.UriExtensions.ToMaskedString*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Steeltoe.Common.Extensions.UriExtensions.ToMaskedUri(System.Uri)
  commentId: M:Steeltoe.Common.Extensions.UriExtensions.ToMaskedUri(System.Uri)
  id: ToMaskedUri(System.Uri)
  isExtensionMethod: true
  parent: Steeltoe.Common.Extensions.UriExtensions
  langs:
  - csharp
  - vb
  name: ToMaskedUri(Uri)
  nameWithType: UriExtensions.ToMaskedUri(Uri)
  fullName: Steeltoe.Common.Extensions.UriExtensions.ToMaskedUri(System.Uri)
  type: Method
  source:
    remote:
      path: src/Common/src/Common/Extensions/UriExtensions.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: ToMaskedUri
    path: ../Steeltoe/src/Common/src/Common/Extensions/UriExtensions.cs
    startLine: 22
  assemblies:
  - Steeltoe.Common
  namespace: Steeltoe.Common.Extensions
  syntax:
    content: public static Uri ToMaskedUri(this Uri source)
    parameters:
    - id: source
      type: System.Uri
    return:
      type: System.Uri
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ToMaskedUri(source As Uri) As Uri
  overload: Steeltoe.Common.Extensions.UriExtensions.ToMaskedUri*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Steeltoe.Common.Extensions.UriExtensions.ParseQuerystring(System.String)
  commentId: M:Steeltoe.Common.Extensions.UriExtensions.ParseQuerystring(System.String)
  id: ParseQuerystring(System.String)
  parent: Steeltoe.Common.Extensions.UriExtensions
  langs:
  - csharp
  - vb
  name: ParseQuerystring(String)
  nameWithType: UriExtensions.ParseQuerystring(String)
  fullName: Steeltoe.Common.Extensions.UriExtensions.ParseQuerystring(System.String)
  type: Method
  source:
    remote:
      path: src/Common/src/Common/Extensions/UriExtensions.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: ParseQuerystring
    path: ../Steeltoe/src/Common/src/Common/Extensions/UriExtensions.cs
    startLine: 50
  assemblies:
  - Steeltoe.Common
  namespace: Steeltoe.Common.Extensions
  summary: "\nParse a querystring into a dictionary of key value pairs\n"
  example: []
  syntax:
    content: public static Dictionary<string, string> ParseQuerystring(string querystring)
    parameters:
    - id: querystring
      type: System.String
      description: The querystring to parse
    return:
      type: System.Collections.Generic.Dictionary{System.String,System.String}
      description: Pairs of keys and values
    content.vb: Public Shared Function ParseQuerystring(querystring As String) As Dictionary(Of String, String)
  overload: Steeltoe.Common.Extensions.UriExtensions.ParseQuerystring*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Steeltoe.Common.Extensions
  commentId: N:Steeltoe.Common.Extensions
  name: Steeltoe.Common.Extensions
  nameWithType: Steeltoe.Common.Extensions
  fullName: Steeltoe.Common.Extensions
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Steeltoe.Common.Extensions.UriExtensions.ToMaskedString*
  commentId: Overload:Steeltoe.Common.Extensions.UriExtensions.ToMaskedString
  name: ToMaskedString
  nameWithType: UriExtensions.ToMaskedString
  fullName: Steeltoe.Common.Extensions.UriExtensions.ToMaskedString
- uid: System.Uri
  commentId: T:System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Steeltoe.Common.Extensions.UriExtensions.ToMaskedUri*
  commentId: Overload:Steeltoe.Common.Extensions.UriExtensions.ToMaskedUri
  name: ToMaskedUri
  nameWithType: UriExtensions.ToMaskedUri
  fullName: Steeltoe.Common.Extensions.UriExtensions.ToMaskedUri
- uid: Steeltoe.Common.Extensions.UriExtensions.ParseQuerystring*
  commentId: Overload:Steeltoe.Common.Extensions.UriExtensions.ParseQuerystring
  name: ParseQuerystring
  nameWithType: UriExtensions.ParseQuerystring
  fullName: Steeltoe.Common.Extensions.UriExtensions.ParseQuerystring
- uid: System.Collections.Generic.Dictionary{System.String,System.String}
  commentId: T:System.Collections.Generic.Dictionary{System.String,System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  name: Dictionary<String, String>
  nameWithType: Dictionary<String, String>
  fullName: System.Collections.Generic.Dictionary<System.String, System.String>
  nameWithType.vb: Dictionary(Of String, String)
  fullName.vb: System.Collections.Generic.Dictionary(Of System.String, System.String)
  name.vb: Dictionary(Of String, String)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Dictionary`2
  commentId: T:System.Collections.Generic.Dictionary`2
  isExternal: true
  name: Dictionary<TKey, TValue>
  nameWithType: Dictionary<TKey, TValue>
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>
  nameWithType.vb: Dictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue)
  name.vb: Dictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
