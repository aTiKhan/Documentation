### YamlMime:ManagedReference
items:
- uid: Steeltoe.Common.Http.Serialization.LongStringJsonConverter
  commentId: T:Steeltoe.Common.Http.Serialization.LongStringJsonConverter
  id: LongStringJsonConverter
  parent: Steeltoe.Common.Http.Serialization
  children:
  - Steeltoe.Common.Http.Serialization.LongStringJsonConverter.Read(System.Text.Json.Utf8JsonReader@,System.Type,System.Text.Json.JsonSerializerOptions)
  - Steeltoe.Common.Http.Serialization.LongStringJsonConverter.Write(System.Text.Json.Utf8JsonWriter,System.Int64,System.Text.Json.JsonSerializerOptions)
  langs:
  - csharp
  - vb
  name: LongStringJsonConverter
  nameWithType: LongStringJsonConverter
  fullName: Steeltoe.Common.Http.Serialization.LongStringJsonConverter
  type: Class
  source:
    remote:
      path: src/Common/src/Common.Http/Serialization/LongStringJsonConverter.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: LongStringJsonConverter
    path: ../Steeltoe/src/Common/src/Common.Http/Serialization/LongStringJsonConverter.cs
    startLine: 10
  assemblies:
  - Steeltoe.Common.Http
  namespace: Steeltoe.Common.Http.Serialization
  syntax:
    content: 'public class LongStringJsonConverter : JsonConverter<long>'
    content.vb: >-
      Public Class LongStringJsonConverter

          Inherits JsonConverter(Of Long)
  inheritance:
  - System.Object
  - System.Text.Json.Serialization.JsonConverter
  - System.Text.Json.Serialization.JsonConverter{System.Int64}
  inheritedMembers:
  - System.Text.Json.Serialization.JsonConverter{System.Int64}.CanConvert(System.Type)
  - System.Text.Json.Serialization.JsonConverter{System.Int64}.HandleNull
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Steeltoe.Common.Http.Serialization.LongStringJsonConverter.Read(System.Text.Json.Utf8JsonReader@,System.Type,System.Text.Json.JsonSerializerOptions)
  commentId: M:Steeltoe.Common.Http.Serialization.LongStringJsonConverter.Read(System.Text.Json.Utf8JsonReader@,System.Type,System.Text.Json.JsonSerializerOptions)
  id: Read(System.Text.Json.Utf8JsonReader@,System.Type,System.Text.Json.JsonSerializerOptions)
  parent: Steeltoe.Common.Http.Serialization.LongStringJsonConverter
  langs:
  - csharp
  - vb
  name: Read(ref Utf8JsonReader, Type, JsonSerializerOptions)
  nameWithType: LongStringJsonConverter.Read(ref Utf8JsonReader, Type, JsonSerializerOptions)
  fullName: Steeltoe.Common.Http.Serialization.LongStringJsonConverter.Read(ref System.Text.Json.Utf8JsonReader, System.Type, System.Text.Json.JsonSerializerOptions)
  type: Method
  source:
    remote:
      path: src/Common/src/Common.Http/Serialization/LongStringJsonConverter.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Read
    path: ../Steeltoe/src/Common/src/Common.Http/Serialization/LongStringJsonConverter.cs
    startLine: 12
  assemblies:
  - Steeltoe.Common.Http
  namespace: Steeltoe.Common.Http.Serialization
  syntax:
    content: public override long Read(ref Utf8JsonReader reader, Type typeToConvert, JsonSerializerOptions options)
    parameters:
    - id: reader
      type: System.Text.Json.Utf8JsonReader
    - id: typeToConvert
      type: System.Type
    - id: options
      type: System.Text.Json.JsonSerializerOptions
    return:
      type: System.Int64
    content.vb: Public Overrides Function Read(ByRef reader As Utf8JsonReader, typeToConvert As Type, options As JsonSerializerOptions) As Long
  overridden: System.Text.Json.Serialization.JsonConverter{System.Int64}.Read(System.Text.Json.Utf8JsonReader@,System.Type,System.Text.Json.JsonSerializerOptions)
  overload: Steeltoe.Common.Http.Serialization.LongStringJsonConverter.Read*
  nameWithType.vb: LongStringJsonConverter.Read(ByRef Utf8JsonReader, Type, JsonSerializerOptions)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: Steeltoe.Common.Http.Serialization.LongStringJsonConverter.Read(ByRef System.Text.Json.Utf8JsonReader, System.Type, System.Text.Json.JsonSerializerOptions)
  name.vb: Read(ByRef Utf8JsonReader, Type, JsonSerializerOptions)
- uid: Steeltoe.Common.Http.Serialization.LongStringJsonConverter.Write(System.Text.Json.Utf8JsonWriter,System.Int64,System.Text.Json.JsonSerializerOptions)
  commentId: M:Steeltoe.Common.Http.Serialization.LongStringJsonConverter.Write(System.Text.Json.Utf8JsonWriter,System.Int64,System.Text.Json.JsonSerializerOptions)
  id: Write(System.Text.Json.Utf8JsonWriter,System.Int64,System.Text.Json.JsonSerializerOptions)
  parent: Steeltoe.Common.Http.Serialization.LongStringJsonConverter
  langs:
  - csharp
  - vb
  name: Write(Utf8JsonWriter, Int64, JsonSerializerOptions)
  nameWithType: LongStringJsonConverter.Write(Utf8JsonWriter, Int64, JsonSerializerOptions)
  fullName: Steeltoe.Common.Http.Serialization.LongStringJsonConverter.Write(System.Text.Json.Utf8JsonWriter, System.Int64, System.Text.Json.JsonSerializerOptions)
  type: Method
  source:
    remote:
      path: src/Common/src/Common.Http/Serialization/LongStringJsonConverter.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Write
    path: ../Steeltoe/src/Common/src/Common.Http/Serialization/LongStringJsonConverter.cs
    startLine: 17
  assemblies:
  - Steeltoe.Common.Http
  namespace: Steeltoe.Common.Http.Serialization
  syntax:
    content: public override void Write(Utf8JsonWriter writer, long value, JsonSerializerOptions options)
    parameters:
    - id: writer
      type: System.Text.Json.Utf8JsonWriter
    - id: value
      type: System.Int64
    - id: options
      type: System.Text.Json.JsonSerializerOptions
    content.vb: Public Overrides Sub Write(writer As Utf8JsonWriter, value As Long, options As JsonSerializerOptions)
  overridden: System.Text.Json.Serialization.JsonConverter{System.Int64}.Write(System.Text.Json.Utf8JsonWriter,System.Int64,System.Text.Json.JsonSerializerOptions)
  overload: Steeltoe.Common.Http.Serialization.LongStringJsonConverter.Write*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: Steeltoe.Common.Http.Serialization
  commentId: N:Steeltoe.Common.Http.Serialization
  name: Steeltoe.Common.Http.Serialization
  nameWithType: Steeltoe.Common.Http.Serialization
  fullName: Steeltoe.Common.Http.Serialization
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Text.Json.Serialization.JsonConverter
  commentId: T:System.Text.Json.Serialization.JsonConverter
  parent: System.Text.Json.Serialization
  isExternal: true
  name: JsonConverter
  nameWithType: JsonConverter
  fullName: System.Text.Json.Serialization.JsonConverter
- uid: System.Text.Json.Serialization.JsonConverter{System.Int64}
  commentId: T:System.Text.Json.Serialization.JsonConverter{System.Int64}
  parent: System.Text.Json.Serialization
  definition: System.Text.Json.Serialization.JsonConverter`1
  name: JsonConverter<Int64>
  nameWithType: JsonConverter<Int64>
  fullName: System.Text.Json.Serialization.JsonConverter<System.Int64>
  nameWithType.vb: JsonConverter(Of Int64)
  fullName.vb: System.Text.Json.Serialization.JsonConverter(Of System.Int64)
  name.vb: JsonConverter(Of Int64)
  spec.csharp:
  - uid: System.Text.Json.Serialization.JsonConverter`1
    name: JsonConverter
    nameWithType: JsonConverter
    fullName: System.Text.Json.Serialization.JsonConverter
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Text.Json.Serialization.JsonConverter`1
    name: JsonConverter
    nameWithType: JsonConverter
    fullName: System.Text.Json.Serialization.JsonConverter
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Text.Json.Serialization.JsonConverter{System.Int64}.CanConvert(System.Type)
  commentId: M:System.Text.Json.Serialization.JsonConverter{System.Int64}.CanConvert(System.Type)
  parent: System.Text.Json.Serialization.JsonConverter{System.Int64}
  definition: System.Text.Json.Serialization.JsonConverter`1.CanConvert(System.Type)
  name: CanConvert(Type)
  nameWithType: JsonConverter<Int64>.CanConvert(Type)
  fullName: System.Text.Json.Serialization.JsonConverter<System.Int64>.CanConvert(System.Type)
  nameWithType.vb: JsonConverter(Of Int64).CanConvert(Type)
  fullName.vb: System.Text.Json.Serialization.JsonConverter(Of System.Int64).CanConvert(System.Type)
  spec.csharp:
  - uid: System.Text.Json.Serialization.JsonConverter`1.CanConvert(System.Type)
    name: CanConvert
    nameWithType: JsonConverter<Int64>.CanConvert
    fullName: System.Text.Json.Serialization.JsonConverter<System.Int64>.CanConvert
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Text.Json.Serialization.JsonConverter`1.CanConvert(System.Type)
    name: CanConvert
    nameWithType: JsonConverter(Of Int64).CanConvert
    fullName: System.Text.Json.Serialization.JsonConverter(Of System.Int64).CanConvert
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Text.Json.Serialization.JsonConverter{System.Int64}.HandleNull
  commentId: P:System.Text.Json.Serialization.JsonConverter{System.Int64}.HandleNull
  parent: System.Text.Json.Serialization.JsonConverter{System.Int64}
  definition: System.Text.Json.Serialization.JsonConverter`1.HandleNull
  name: HandleNull
  nameWithType: JsonConverter<Int64>.HandleNull
  fullName: System.Text.Json.Serialization.JsonConverter<System.Int64>.HandleNull
  nameWithType.vb: JsonConverter(Of Int64).HandleNull
  fullName.vb: System.Text.Json.Serialization.JsonConverter(Of System.Int64).HandleNull
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Text.Json.Serialization
  commentId: N:System.Text.Json.Serialization
  isExternal: true
  name: System.Text.Json.Serialization
  nameWithType: System.Text.Json.Serialization
  fullName: System.Text.Json.Serialization
- uid: System.Text.Json.Serialization.JsonConverter`1
  commentId: T:System.Text.Json.Serialization.JsonConverter`1
  isExternal: true
  name: JsonConverter<T>
  nameWithType: JsonConverter<T>
  fullName: System.Text.Json.Serialization.JsonConverter<T>
  nameWithType.vb: JsonConverter(Of T)
  fullName.vb: System.Text.Json.Serialization.JsonConverter(Of T)
  name.vb: JsonConverter(Of T)
  spec.csharp:
  - uid: System.Text.Json.Serialization.JsonConverter`1
    name: JsonConverter
    nameWithType: JsonConverter
    fullName: System.Text.Json.Serialization.JsonConverter
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Text.Json.Serialization.JsonConverter`1
    name: JsonConverter
    nameWithType: JsonConverter
    fullName: System.Text.Json.Serialization.JsonConverter
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Text.Json.Serialization.JsonConverter`1.CanConvert(System.Type)
  commentId: M:System.Text.Json.Serialization.JsonConverter`1.CanConvert(System.Type)
  isExternal: true
  name: CanConvert(Type)
  nameWithType: JsonConverter<T>.CanConvert(Type)
  fullName: System.Text.Json.Serialization.JsonConverter<T>.CanConvert(System.Type)
  nameWithType.vb: JsonConverter(Of T).CanConvert(Type)
  fullName.vb: System.Text.Json.Serialization.JsonConverter(Of T).CanConvert(System.Type)
  spec.csharp:
  - uid: System.Text.Json.Serialization.JsonConverter`1.CanConvert(System.Type)
    name: CanConvert
    nameWithType: JsonConverter<T>.CanConvert
    fullName: System.Text.Json.Serialization.JsonConverter<T>.CanConvert
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Text.Json.Serialization.JsonConverter`1.CanConvert(System.Type)
    name: CanConvert
    nameWithType: JsonConverter(Of T).CanConvert
    fullName: System.Text.Json.Serialization.JsonConverter(Of T).CanConvert
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Text.Json.Serialization.JsonConverter`1.HandleNull
  commentId: P:System.Text.Json.Serialization.JsonConverter`1.HandleNull
  isExternal: true
  name: HandleNull
  nameWithType: JsonConverter<T>.HandleNull
  fullName: System.Text.Json.Serialization.JsonConverter<T>.HandleNull
  nameWithType.vb: JsonConverter(Of T).HandleNull
  fullName.vb: System.Text.Json.Serialization.JsonConverter(Of T).HandleNull
- uid: System.Text.Json.Serialization.JsonConverter{System.Int64}.Read(System.Text.Json.Utf8JsonReader@,System.Type,System.Text.Json.JsonSerializerOptions)
  commentId: M:System.Text.Json.Serialization.JsonConverter{System.Int64}.Read(System.Text.Json.Utf8JsonReader@,System.Type,System.Text.Json.JsonSerializerOptions)
  parent: System.Text.Json.Serialization.JsonConverter{System.Int64}
  definition: System.Text.Json.Serialization.JsonConverter`1.Read(System.Text.Json.Utf8JsonReader@,System.Type,System.Text.Json.JsonSerializerOptions)
  name: Read(Utf8JsonReader, Type, JsonSerializerOptions)
  nameWithType: JsonConverter<Int64>.Read(Utf8JsonReader, Type, JsonSerializerOptions)
  fullName: System.Text.Json.Serialization.JsonConverter<System.Int64>.Read(System.Text.Json.Utf8JsonReader, System.Type, System.Text.Json.JsonSerializerOptions)
  nameWithType.vb: JsonConverter(Of Int64).Read(Utf8JsonReader, Type, JsonSerializerOptions)
  fullName.vb: System.Text.Json.Serialization.JsonConverter(Of System.Int64).Read(System.Text.Json.Utf8JsonReader, System.Type, System.Text.Json.JsonSerializerOptions)
  spec.csharp:
  - uid: System.Text.Json.Serialization.JsonConverter`1.Read(System.Text.Json.Utf8JsonReader@,System.Type,System.Text.Json.JsonSerializerOptions)
    name: Read
    nameWithType: JsonConverter<Int64>.Read
    fullName: System.Text.Json.Serialization.JsonConverter<System.Int64>.Read
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Text.Json.Utf8JsonReader
    name: Utf8JsonReader
    nameWithType: Utf8JsonReader
    fullName: System.Text.Json.Utf8JsonReader
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Text.Json.JsonSerializerOptions
    name: JsonSerializerOptions
    nameWithType: JsonSerializerOptions
    fullName: System.Text.Json.JsonSerializerOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Text.Json.Serialization.JsonConverter`1.Read(System.Text.Json.Utf8JsonReader@,System.Type,System.Text.Json.JsonSerializerOptions)
    name: Read
    nameWithType: JsonConverter(Of Int64).Read
    fullName: System.Text.Json.Serialization.JsonConverter(Of System.Int64).Read
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Text.Json.Utf8JsonReader
    name: Utf8JsonReader
    nameWithType: Utf8JsonReader
    fullName: System.Text.Json.Utf8JsonReader
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Text.Json.JsonSerializerOptions
    name: JsonSerializerOptions
    nameWithType: JsonSerializerOptions
    fullName: System.Text.Json.JsonSerializerOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Common.Http.Serialization.LongStringJsonConverter.Read*
  commentId: Overload:Steeltoe.Common.Http.Serialization.LongStringJsonConverter.Read
  name: Read
  nameWithType: LongStringJsonConverter.Read
  fullName: Steeltoe.Common.Http.Serialization.LongStringJsonConverter.Read
- uid: System.Text.Json.Utf8JsonReader
  commentId: T:System.Text.Json.Utf8JsonReader
  parent: System.Text.Json
  isExternal: true
  name: Utf8JsonReader
  nameWithType: Utf8JsonReader
  fullName: System.Text.Json.Utf8JsonReader
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Text.Json.JsonSerializerOptions
  commentId: T:System.Text.Json.JsonSerializerOptions
  parent: System.Text.Json
  isExternal: true
  name: JsonSerializerOptions
  nameWithType: JsonSerializerOptions
  fullName: System.Text.Json.JsonSerializerOptions
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.Text.Json.Serialization.JsonConverter`1.Read(System.Text.Json.Utf8JsonReader@,System.Type,System.Text.Json.JsonSerializerOptions)
  commentId: M:System.Text.Json.Serialization.JsonConverter`1.Read(System.Text.Json.Utf8JsonReader@,System.Type,System.Text.Json.JsonSerializerOptions)
  isExternal: true
  name: Read(Utf8JsonReader, Type, JsonSerializerOptions)
  nameWithType: JsonConverter<T>.Read(Utf8JsonReader, Type, JsonSerializerOptions)
  fullName: System.Text.Json.Serialization.JsonConverter<T>.Read(System.Text.Json.Utf8JsonReader, System.Type, System.Text.Json.JsonSerializerOptions)
  nameWithType.vb: JsonConverter(Of T).Read(Utf8JsonReader, Type, JsonSerializerOptions)
  fullName.vb: System.Text.Json.Serialization.JsonConverter(Of T).Read(System.Text.Json.Utf8JsonReader, System.Type, System.Text.Json.JsonSerializerOptions)
  spec.csharp:
  - uid: System.Text.Json.Serialization.JsonConverter`1.Read(System.Text.Json.Utf8JsonReader@,System.Type,System.Text.Json.JsonSerializerOptions)
    name: Read
    nameWithType: JsonConverter<T>.Read
    fullName: System.Text.Json.Serialization.JsonConverter<T>.Read
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Text.Json.Utf8JsonReader
    name: Utf8JsonReader
    nameWithType: Utf8JsonReader
    fullName: System.Text.Json.Utf8JsonReader
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Text.Json.JsonSerializerOptions
    name: JsonSerializerOptions
    nameWithType: JsonSerializerOptions
    fullName: System.Text.Json.JsonSerializerOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Text.Json.Serialization.JsonConverter`1.Read(System.Text.Json.Utf8JsonReader@,System.Type,System.Text.Json.JsonSerializerOptions)
    name: Read
    nameWithType: JsonConverter(Of T).Read
    fullName: System.Text.Json.Serialization.JsonConverter(Of T).Read
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Text.Json.Utf8JsonReader
    name: Utf8JsonReader
    nameWithType: Utf8JsonReader
    fullName: System.Text.Json.Utf8JsonReader
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Text.Json.JsonSerializerOptions
    name: JsonSerializerOptions
    nameWithType: JsonSerializerOptions
    fullName: System.Text.Json.JsonSerializerOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Text.Json
  commentId: N:System.Text.Json
  isExternal: true
  name: System.Text.Json
  nameWithType: System.Text.Json
  fullName: System.Text.Json
- uid: System.Text.Json.Serialization.JsonConverter{System.Int64}.Write(System.Text.Json.Utf8JsonWriter,System.Int64,System.Text.Json.JsonSerializerOptions)
  commentId: M:System.Text.Json.Serialization.JsonConverter{System.Int64}.Write(System.Text.Json.Utf8JsonWriter,System.Int64,System.Text.Json.JsonSerializerOptions)
  parent: System.Text.Json.Serialization.JsonConverter{System.Int64}
  definition: System.Text.Json.Serialization.JsonConverter`1.Write(System.Text.Json.Utf8JsonWriter,`0,System.Text.Json.JsonSerializerOptions)
  name: Write(Utf8JsonWriter, Int64, JsonSerializerOptions)
  nameWithType: JsonConverter<Int64>.Write(Utf8JsonWriter, Int64, JsonSerializerOptions)
  fullName: System.Text.Json.Serialization.JsonConverter<System.Int64>.Write(System.Text.Json.Utf8JsonWriter, System.Int64, System.Text.Json.JsonSerializerOptions)
  nameWithType.vb: JsonConverter(Of Int64).Write(Utf8JsonWriter, Int64, JsonSerializerOptions)
  fullName.vb: System.Text.Json.Serialization.JsonConverter(Of System.Int64).Write(System.Text.Json.Utf8JsonWriter, System.Int64, System.Text.Json.JsonSerializerOptions)
  spec.csharp:
  - uid: System.Text.Json.Serialization.JsonConverter`1.Write(System.Text.Json.Utf8JsonWriter,`0,System.Text.Json.JsonSerializerOptions)
    name: Write
    nameWithType: JsonConverter<Int64>.Write
    fullName: System.Text.Json.Serialization.JsonConverter<System.Int64>.Write
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Text.Json.Utf8JsonWriter
    name: Utf8JsonWriter
    nameWithType: Utf8JsonWriter
    fullName: System.Text.Json.Utf8JsonWriter
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Text.Json.JsonSerializerOptions
    name: JsonSerializerOptions
    nameWithType: JsonSerializerOptions
    fullName: System.Text.Json.JsonSerializerOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Text.Json.Serialization.JsonConverter`1.Write(System.Text.Json.Utf8JsonWriter,`0,System.Text.Json.JsonSerializerOptions)
    name: Write
    nameWithType: JsonConverter(Of Int64).Write
    fullName: System.Text.Json.Serialization.JsonConverter(Of System.Int64).Write
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Text.Json.Utf8JsonWriter
    name: Utf8JsonWriter
    nameWithType: Utf8JsonWriter
    fullName: System.Text.Json.Utf8JsonWriter
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Text.Json.JsonSerializerOptions
    name: JsonSerializerOptions
    nameWithType: JsonSerializerOptions
    fullName: System.Text.Json.JsonSerializerOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Common.Http.Serialization.LongStringJsonConverter.Write*
  commentId: Overload:Steeltoe.Common.Http.Serialization.LongStringJsonConverter.Write
  name: Write
  nameWithType: LongStringJsonConverter.Write
  fullName: Steeltoe.Common.Http.Serialization.LongStringJsonConverter.Write
- uid: System.Text.Json.Utf8JsonWriter
  commentId: T:System.Text.Json.Utf8JsonWriter
  parent: System.Text.Json
  isExternal: true
  name: Utf8JsonWriter
  nameWithType: Utf8JsonWriter
  fullName: System.Text.Json.Utf8JsonWriter
- uid: System.Text.Json.Serialization.JsonConverter`1.Write(System.Text.Json.Utf8JsonWriter,`0,System.Text.Json.JsonSerializerOptions)
  commentId: M:System.Text.Json.Serialization.JsonConverter`1.Write(System.Text.Json.Utf8JsonWriter,`0,System.Text.Json.JsonSerializerOptions)
  isExternal: true
  name: Write(Utf8JsonWriter, T, JsonSerializerOptions)
  nameWithType: JsonConverter<T>.Write(Utf8JsonWriter, T, JsonSerializerOptions)
  fullName: System.Text.Json.Serialization.JsonConverter<T>.Write(System.Text.Json.Utf8JsonWriter, T, System.Text.Json.JsonSerializerOptions)
  nameWithType.vb: JsonConverter(Of T).Write(Utf8JsonWriter, T, JsonSerializerOptions)
  fullName.vb: System.Text.Json.Serialization.JsonConverter(Of T).Write(System.Text.Json.Utf8JsonWriter, T, System.Text.Json.JsonSerializerOptions)
  spec.csharp:
  - uid: System.Text.Json.Serialization.JsonConverter`1.Write(System.Text.Json.Utf8JsonWriter,`0,System.Text.Json.JsonSerializerOptions)
    name: Write
    nameWithType: JsonConverter<T>.Write
    fullName: System.Text.Json.Serialization.JsonConverter<T>.Write
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Text.Json.Utf8JsonWriter
    name: Utf8JsonWriter
    nameWithType: Utf8JsonWriter
    fullName: System.Text.Json.Utf8JsonWriter
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Text.Json.JsonSerializerOptions
    name: JsonSerializerOptions
    nameWithType: JsonSerializerOptions
    fullName: System.Text.Json.JsonSerializerOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Text.Json.Serialization.JsonConverter`1.Write(System.Text.Json.Utf8JsonWriter,`0,System.Text.Json.JsonSerializerOptions)
    name: Write
    nameWithType: JsonConverter(Of T).Write
    fullName: System.Text.Json.Serialization.JsonConverter(Of T).Write
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Text.Json.Utf8JsonWriter
    name: Utf8JsonWriter
    nameWithType: Utf8JsonWriter
    fullName: System.Text.Json.Utf8JsonWriter
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Text.Json.JsonSerializerOptions
    name: JsonSerializerOptions
    nameWithType: JsonSerializerOptions
    fullName: System.Text.Json.JsonSerializerOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
