### YamlMime:ManagedReference
items:
- uid: Steeltoe.Extensions.Configuration.ConfigServer.ConfigServerConfigurationBuilderExtensions
  commentId: T:Steeltoe.Extensions.Configuration.ConfigServer.ConfigServerConfigurationBuilderExtensions
  id: ConfigServerConfigurationBuilderExtensions
  parent: Steeltoe.Extensions.Configuration.ConfigServer
  children:
  - Steeltoe.Extensions.Configuration.ConfigServer.ConfigServerConfigurationBuilderExtensions.AddConfigServer(IConfigurationBuilder,ILoggerFactory)
  - Steeltoe.Extensions.Configuration.ConfigServer.ConfigServerConfigurationBuilderExtensions.AddConfigServer(IConfigurationBuilder,Steeltoe.Extensions.Configuration.ConfigServer.ConfigServerClientSettings,ILoggerFactory)
  - Steeltoe.Extensions.Configuration.ConfigServer.ConfigServerConfigurationBuilderExtensions.AddConfigServer(IConfigurationBuilder,System.String,ILoggerFactory)
  - Steeltoe.Extensions.Configuration.ConfigServer.ConfigServerConfigurationBuilderExtensions.AddConfigServer(IConfigurationBuilder,System.String,System.String,ILoggerFactory)
  langs:
  - csharp
  - vb
  name: ConfigServerConfigurationBuilderExtensions
  nameWithType: ConfigServerConfigurationBuilderExtensions
  fullName: Steeltoe.Extensions.Configuration.ConfigServer.ConfigServerConfigurationBuilderExtensions
  type: Class
  source:
    remote:
      path: src/Configuration/src/ConfigServerBase/ConfigServerConfigurationBuilderExtensions.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: ConfigServerConfigurationBuilderExtensions
    path: ../Steeltoe/src/Configuration/src/ConfigServerBase/ConfigServerConfigurationBuilderExtensions.cs
    startLine: 13
  assemblies:
  - Steeltoe.Extensions.Configuration.ConfigServerBase
  namespace: Steeltoe.Extensions.Configuration.ConfigServer
  syntax:
    content: public static class ConfigServerConfigurationBuilderExtensions
    content.vb: Public Module ConfigServerConfigurationBuilderExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Steeltoe.Extensions.Configuration.ConfigServer.ConfigServerConfigurationBuilderExtensions.AddConfigServer(IConfigurationBuilder,ILoggerFactory)
  commentId: M:Steeltoe.Extensions.Configuration.ConfigServer.ConfigServerConfigurationBuilderExtensions.AddConfigServer(IConfigurationBuilder,ILoggerFactory)
  id: AddConfigServer(IConfigurationBuilder,ILoggerFactory)
  isExtensionMethod: true
  parent: Steeltoe.Extensions.Configuration.ConfigServer.ConfigServerConfigurationBuilderExtensions
  langs:
  - csharp
  - vb
  name: AddConfigServer(IConfigurationBuilder, ILoggerFactory)
  nameWithType: ConfigServerConfigurationBuilderExtensions.AddConfigServer(IConfigurationBuilder, ILoggerFactory)
  fullName: Steeltoe.Extensions.Configuration.ConfigServer.ConfigServerConfigurationBuilderExtensions.AddConfigServer(IConfigurationBuilder, ILoggerFactory)
  type: Method
  source:
    remote:
      path: src/Configuration/src/ConfigServerBase/ConfigServerConfigurationBuilderExtensions.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: AddConfigServer
    path: ../Steeltoe/src/Configuration/src/ConfigServerBase/ConfigServerConfigurationBuilderExtensions.cs
    startLine: 15
  assemblies:
  - Steeltoe.Extensions.Configuration.ConfigServerBase
  namespace: Steeltoe.Extensions.Configuration.ConfigServer
  syntax:
    content: public static IConfigurationBuilder AddConfigServer(this IConfigurationBuilder configurationBuilder, ILoggerFactory logFactory = null)
    parameters:
    - id: configurationBuilder
      type: IConfigurationBuilder
    - id: logFactory
      type: ILoggerFactory
    return:
      type: IConfigurationBuilder
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function AddConfigServer(configurationBuilder As IConfigurationBuilder, logFactory As ILoggerFactory = Nothing) As IConfigurationBuilder
  overload: Steeltoe.Extensions.Configuration.ConfigServer.ConfigServerConfigurationBuilderExtensions.AddConfigServer*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Steeltoe.Extensions.Configuration.ConfigServer.ConfigServerConfigurationBuilderExtensions.AddConfigServer(IConfigurationBuilder,System.String,ILoggerFactory)
  commentId: M:Steeltoe.Extensions.Configuration.ConfigServer.ConfigServerConfigurationBuilderExtensions.AddConfigServer(IConfigurationBuilder,System.String,ILoggerFactory)
  id: AddConfigServer(IConfigurationBuilder,System.String,ILoggerFactory)
  isExtensionMethod: true
  parent: Steeltoe.Extensions.Configuration.ConfigServer.ConfigServerConfigurationBuilderExtensions
  langs:
  - csharp
  - vb
  name: AddConfigServer(IConfigurationBuilder, String, ILoggerFactory)
  nameWithType: ConfigServerConfigurationBuilderExtensions.AddConfigServer(IConfigurationBuilder, String, ILoggerFactory)
  fullName: Steeltoe.Extensions.Configuration.ConfigServer.ConfigServerConfigurationBuilderExtensions.AddConfigServer(IConfigurationBuilder, System.String, ILoggerFactory)
  type: Method
  source:
    remote:
      path: src/Configuration/src/ConfigServerBase/ConfigServerConfigurationBuilderExtensions.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: AddConfigServer
    path: ../Steeltoe/src/Configuration/src/ConfigServerBase/ConfigServerConfigurationBuilderExtensions.cs
    startLine: 20
  assemblies:
  - Steeltoe.Extensions.Configuration.ConfigServerBase
  namespace: Steeltoe.Extensions.Configuration.ConfigServer
  syntax:
    content: public static IConfigurationBuilder AddConfigServer(this IConfigurationBuilder configurationBuilder, string environment, ILoggerFactory logFactory = null)
    parameters:
    - id: configurationBuilder
      type: IConfigurationBuilder
    - id: environment
      type: System.String
    - id: logFactory
      type: ILoggerFactory
    return:
      type: IConfigurationBuilder
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function AddConfigServer(configurationBuilder As IConfigurationBuilder, environment As String, logFactory As ILoggerFactory = Nothing) As IConfigurationBuilder
  overload: Steeltoe.Extensions.Configuration.ConfigServer.ConfigServerConfigurationBuilderExtensions.AddConfigServer*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Steeltoe.Extensions.Configuration.ConfigServer.ConfigServerConfigurationBuilderExtensions.AddConfigServer(IConfigurationBuilder,System.String,System.String,ILoggerFactory)
  commentId: M:Steeltoe.Extensions.Configuration.ConfigServer.ConfigServerConfigurationBuilderExtensions.AddConfigServer(IConfigurationBuilder,System.String,System.String,ILoggerFactory)
  id: AddConfigServer(IConfigurationBuilder,System.String,System.String,ILoggerFactory)
  isExtensionMethod: true
  parent: Steeltoe.Extensions.Configuration.ConfigServer.ConfigServerConfigurationBuilderExtensions
  langs:
  - csharp
  - vb
  name: AddConfigServer(IConfigurationBuilder, String, String, ILoggerFactory)
  nameWithType: ConfigServerConfigurationBuilderExtensions.AddConfigServer(IConfigurationBuilder, String, String, ILoggerFactory)
  fullName: Steeltoe.Extensions.Configuration.ConfigServer.ConfigServerConfigurationBuilderExtensions.AddConfigServer(IConfigurationBuilder, System.String, System.String, ILoggerFactory)
  type: Method
  source:
    remote:
      path: src/Configuration/src/ConfigServerBase/ConfigServerConfigurationBuilderExtensions.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: AddConfigServer
    path: ../Steeltoe/src/Configuration/src/ConfigServerBase/ConfigServerConfigurationBuilderExtensions.cs
    startLine: 25
  assemblies:
  - Steeltoe.Extensions.Configuration.ConfigServerBase
  namespace: Steeltoe.Extensions.Configuration.ConfigServer
  syntax:
    content: public static IConfigurationBuilder AddConfigServer(this IConfigurationBuilder configurationBuilder, string environment, string applicationName, ILoggerFactory logFactory = null)
    parameters:
    - id: configurationBuilder
      type: IConfigurationBuilder
    - id: environment
      type: System.String
    - id: applicationName
      type: System.String
    - id: logFactory
      type: ILoggerFactory
    return:
      type: IConfigurationBuilder
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function AddConfigServer(configurationBuilder As IConfigurationBuilder, environment As String, applicationName As String, logFactory As ILoggerFactory = Nothing) As IConfigurationBuilder
  overload: Steeltoe.Extensions.Configuration.ConfigServer.ConfigServerConfigurationBuilderExtensions.AddConfigServer*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Steeltoe.Extensions.Configuration.ConfigServer.ConfigServerConfigurationBuilderExtensions.AddConfigServer(IConfigurationBuilder,Steeltoe.Extensions.Configuration.ConfigServer.ConfigServerClientSettings,ILoggerFactory)
  commentId: M:Steeltoe.Extensions.Configuration.ConfigServer.ConfigServerConfigurationBuilderExtensions.AddConfigServer(IConfigurationBuilder,Steeltoe.Extensions.Configuration.ConfigServer.ConfigServerClientSettings,ILoggerFactory)
  id: AddConfigServer(IConfigurationBuilder,Steeltoe.Extensions.Configuration.ConfigServer.ConfigServerClientSettings,ILoggerFactory)
  isExtensionMethod: true
  parent: Steeltoe.Extensions.Configuration.ConfigServer.ConfigServerConfigurationBuilderExtensions
  langs:
  - csharp
  - vb
  name: AddConfigServer(IConfigurationBuilder, ConfigServerClientSettings, ILoggerFactory)
  nameWithType: ConfigServerConfigurationBuilderExtensions.AddConfigServer(IConfigurationBuilder, ConfigServerClientSettings, ILoggerFactory)
  fullName: Steeltoe.Extensions.Configuration.ConfigServer.ConfigServerConfigurationBuilderExtensions.AddConfigServer(IConfigurationBuilder, Steeltoe.Extensions.Configuration.ConfigServer.ConfigServerClientSettings, ILoggerFactory)
  type: Method
  source:
    remote:
      path: src/Configuration/src/ConfigServerBase/ConfigServerConfigurationBuilderExtensions.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: AddConfigServer
    path: ../Steeltoe/src/Configuration/src/ConfigServerBase/ConfigServerConfigurationBuilderExtensions.cs
    startLine: 42
  assemblies:
  - Steeltoe.Extensions.Configuration.ConfigServerBase
  namespace: Steeltoe.Extensions.Configuration.ConfigServer
  syntax:
    content: public static IConfigurationBuilder AddConfigServer(this IConfigurationBuilder configurationBuilder, ConfigServerClientSettings defaultSettings, ILoggerFactory logFactory = null)
    parameters:
    - id: configurationBuilder
      type: IConfigurationBuilder
    - id: defaultSettings
      type: Steeltoe.Extensions.Configuration.ConfigServer.ConfigServerClientSettings
    - id: logFactory
      type: ILoggerFactory
    return:
      type: IConfigurationBuilder
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function AddConfigServer(configurationBuilder As IConfigurationBuilder, defaultSettings As ConfigServerClientSettings, logFactory As ILoggerFactory = Nothing) As IConfigurationBuilder
  overload: Steeltoe.Extensions.Configuration.ConfigServer.ConfigServerConfigurationBuilderExtensions.AddConfigServer*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Steeltoe.Extensions.Configuration.ConfigServer
  commentId: N:Steeltoe.Extensions.Configuration.ConfigServer
  name: Steeltoe.Extensions.Configuration.ConfigServer
  nameWithType: Steeltoe.Extensions.Configuration.ConfigServer
  fullName: Steeltoe.Extensions.Configuration.ConfigServer
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Steeltoe.Extensions.Configuration.ConfigServer.ConfigServerConfigurationBuilderExtensions.AddConfigServer*
  commentId: Overload:Steeltoe.Extensions.Configuration.ConfigServer.ConfigServerConfigurationBuilderExtensions.AddConfigServer
  name: AddConfigServer
  nameWithType: ConfigServerConfigurationBuilderExtensions.AddConfigServer
  fullName: Steeltoe.Extensions.Configuration.ConfigServer.ConfigServerConfigurationBuilderExtensions.AddConfigServer
- uid: IConfigurationBuilder
  isExternal: true
  name: IConfigurationBuilder
  nameWithType: IConfigurationBuilder
  fullName: IConfigurationBuilder
- uid: ILoggerFactory
  isExternal: true
  name: ILoggerFactory
  nameWithType: ILoggerFactory
  fullName: ILoggerFactory
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Steeltoe.Extensions.Configuration.ConfigServer.ConfigServerClientSettings
  commentId: T:Steeltoe.Extensions.Configuration.ConfigServer.ConfigServerClientSettings
  parent: Steeltoe.Extensions.Configuration.ConfigServer
  name: ConfigServerClientSettings
  nameWithType: ConfigServerClientSettings
  fullName: Steeltoe.Extensions.Configuration.ConfigServer.ConfigServerClientSettings
