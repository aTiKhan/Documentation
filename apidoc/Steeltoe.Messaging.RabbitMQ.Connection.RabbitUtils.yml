### YamlMime:ManagedReference
items:
- uid: Steeltoe.Messaging.RabbitMQ.Connection.RabbitUtils
  commentId: T:Steeltoe.Messaging.RabbitMQ.Connection.RabbitUtils
  id: RabbitUtils
  parent: Steeltoe.Messaging.RabbitMQ.Connection
  children:
  - Steeltoe.Messaging.RabbitMQ.Connection.RabbitUtils.Cancel(RabbitMQ.Client.IModel,System.String,Microsoft.Extensions.Logging.ILogger)
  - Steeltoe.Messaging.RabbitMQ.Connection.RabbitUtils.ChannelClose_ClassId
  - Steeltoe.Messaging.RabbitMQ.Connection.RabbitUtils.ChannelClose_MethodId
  - Steeltoe.Messaging.RabbitMQ.Connection.RabbitUtils.CloseChannel(RabbitMQ.Client.IModel,Microsoft.Extensions.Logging.ILogger)
  - Steeltoe.Messaging.RabbitMQ.Connection.RabbitUtils.CloseConnection(Steeltoe.Messaging.RabbitMQ.Connection.IConnection,Microsoft.Extensions.Logging.ILogger)
  - Steeltoe.Messaging.RabbitMQ.Connection.RabbitUtils.CloseMessageConsumer(RabbitMQ.Client.IModel,System.Collections.Generic.List{System.String},System.Boolean,Microsoft.Extensions.Logging.ILogger)
  - Steeltoe.Messaging.RabbitMQ.Connection.RabbitUtils.Command_Invalid
  - Steeltoe.Messaging.RabbitMQ.Connection.RabbitUtils.CommitIfNecessary(RabbitMQ.Client.IModel,Microsoft.Extensions.Logging.ILogger)
  - Steeltoe.Messaging.RabbitMQ.Connection.RabbitUtils.ConnectionClose_ClassId
  - Steeltoe.Messaging.RabbitMQ.Connection.RabbitUtils.ConnectionClose_MethodId
  - Steeltoe.Messaging.RabbitMQ.Connection.RabbitUtils.Declare_MethodId
  - Steeltoe.Messaging.RabbitMQ.Connection.RabbitUtils.DeclareTransactional(RabbitMQ.Client.IModel,Microsoft.Extensions.Logging.ILogger)
  - Steeltoe.Messaging.RabbitMQ.Connection.RabbitUtils.Exchange_ClassId
  - Steeltoe.Messaging.RabbitMQ.Connection.RabbitUtils.GetMaxFrame(Steeltoe.Messaging.RabbitMQ.Connection.IConnectionFactory)
  - Steeltoe.Messaging.RabbitMQ.Connection.RabbitUtils.IsMismatchedQueueArgs(RabbitMQ.Client.ShutdownEventArgs)
  - Steeltoe.Messaging.RabbitMQ.Connection.RabbitUtils.IsMismatchedQueueArgs(System.Exception)
  - Steeltoe.Messaging.RabbitMQ.Connection.RabbitUtils.IsNormalChannelClose(RabbitMQ.Client.ShutdownEventArgs)
  - Steeltoe.Messaging.RabbitMQ.Connection.RabbitUtils.IsNormalShutdown(RabbitMQ.Client.ShutdownEventArgs)
  - Steeltoe.Messaging.RabbitMQ.Connection.RabbitUtils.IsNormalShutdown(Steeltoe.Messaging.RabbitMQ.Support.ShutdownSignalException)
  - Steeltoe.Messaging.RabbitMQ.Connection.RabbitUtils.IsPassiveDeclarationChannelClose(System.Exception)
  - Steeltoe.Messaging.RabbitMQ.Connection.RabbitUtils.IsPhysicalCloseRequired
  - Steeltoe.Messaging.RabbitMQ.Connection.RabbitUtils.NotFound
  - Steeltoe.Messaging.RabbitMQ.Connection.RabbitUtils.Precondition_Failed
  - Steeltoe.Messaging.RabbitMQ.Connection.RabbitUtils.Queue_ClassId
  - Steeltoe.Messaging.RabbitMQ.Connection.RabbitUtils.ReplySuccess
  - Steeltoe.Messaging.RabbitMQ.Connection.RabbitUtils.RollbackIfNecessary(RabbitMQ.Client.IModel,Microsoft.Extensions.Logging.ILogger)
  - Steeltoe.Messaging.RabbitMQ.Connection.RabbitUtils.SetPhysicalCloseRequired(RabbitMQ.Client.IModel,System.Boolean)
  langs:
  - csharp
  - vb
  name: RabbitUtils
  nameWithType: RabbitUtils
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.RabbitUtils
  type: Class
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Connection/RabbitUtils.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: RabbitUtils
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Connection/RabbitUtils.cs
    startLine: 17
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Connection
  syntax:
    content: public static class RabbitUtils
    content.vb: Public Module RabbitUtils
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Steeltoe.Messaging.RabbitMQ.Connection.RabbitUtils.ReplySuccess
  commentId: F:Steeltoe.Messaging.RabbitMQ.Connection.RabbitUtils.ReplySuccess
  id: ReplySuccess
  parent: Steeltoe.Messaging.RabbitMQ.Connection.RabbitUtils
  langs:
  - csharp
  - vb
  name: ReplySuccess
  nameWithType: RabbitUtils.ReplySuccess
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.RabbitUtils.ReplySuccess
  type: Field
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Connection/RabbitUtils.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: ReplySuccess
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Connection/RabbitUtils.cs
    startLine: 19
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Connection
  syntax:
    content: public const int ReplySuccess = 200
    return:
      type: System.Int32
    content.vb: Public Const ReplySuccess As Integer = 200
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Steeltoe.Messaging.RabbitMQ.Connection.RabbitUtils.NotFound
  commentId: F:Steeltoe.Messaging.RabbitMQ.Connection.RabbitUtils.NotFound
  id: NotFound
  parent: Steeltoe.Messaging.RabbitMQ.Connection.RabbitUtils
  langs:
  - csharp
  - vb
  name: NotFound
  nameWithType: RabbitUtils.NotFound
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.RabbitUtils.NotFound
  type: Field
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Connection/RabbitUtils.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: NotFound
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Connection/RabbitUtils.cs
    startLine: 20
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Connection
  syntax:
    content: public const int NotFound = 404
    return:
      type: System.Int32
    content.vb: Public Const NotFound As Integer = 404
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Steeltoe.Messaging.RabbitMQ.Connection.RabbitUtils.Precondition_Failed
  commentId: F:Steeltoe.Messaging.RabbitMQ.Connection.RabbitUtils.Precondition_Failed
  id: Precondition_Failed
  parent: Steeltoe.Messaging.RabbitMQ.Connection.RabbitUtils
  langs:
  - csharp
  - vb
  name: Precondition_Failed
  nameWithType: RabbitUtils.Precondition_Failed
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.RabbitUtils.Precondition_Failed
  type: Field
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Connection/RabbitUtils.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Precondition_Failed
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Connection/RabbitUtils.cs
    startLine: 21
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Connection
  syntax:
    content: public const int Precondition_Failed = 406
    return:
      type: System.Int32
    content.vb: Public Const Precondition_Failed As Integer = 406
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Steeltoe.Messaging.RabbitMQ.Connection.RabbitUtils.Command_Invalid
  commentId: F:Steeltoe.Messaging.RabbitMQ.Connection.RabbitUtils.Command_Invalid
  id: Command_Invalid
  parent: Steeltoe.Messaging.RabbitMQ.Connection.RabbitUtils
  langs:
  - csharp
  - vb
  name: Command_Invalid
  nameWithType: RabbitUtils.Command_Invalid
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.RabbitUtils.Command_Invalid
  type: Field
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Connection/RabbitUtils.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Command_Invalid
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Connection/RabbitUtils.cs
    startLine: 22
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Connection
  syntax:
    content: public const int Command_Invalid = 503
    return:
      type: System.Int32
    content.vb: Public Const Command_Invalid As Integer = 503
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Steeltoe.Messaging.RabbitMQ.Connection.RabbitUtils.Exchange_ClassId
  commentId: F:Steeltoe.Messaging.RabbitMQ.Connection.RabbitUtils.Exchange_ClassId
  id: Exchange_ClassId
  parent: Steeltoe.Messaging.RabbitMQ.Connection.RabbitUtils
  langs:
  - csharp
  - vb
  name: Exchange_ClassId
  nameWithType: RabbitUtils.Exchange_ClassId
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.RabbitUtils.Exchange_ClassId
  type: Field
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Connection/RabbitUtils.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Exchange_ClassId
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Connection/RabbitUtils.cs
    startLine: 24
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Connection
  syntax:
    content: public const ushort Exchange_ClassId = 40
    return:
      type: System.UInt16
    content.vb: Public Const Exchange_ClassId As UShort = 40
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Steeltoe.Messaging.RabbitMQ.Connection.RabbitUtils.Queue_ClassId
  commentId: F:Steeltoe.Messaging.RabbitMQ.Connection.RabbitUtils.Queue_ClassId
  id: Queue_ClassId
  parent: Steeltoe.Messaging.RabbitMQ.Connection.RabbitUtils
  langs:
  - csharp
  - vb
  name: Queue_ClassId
  nameWithType: RabbitUtils.Queue_ClassId
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.RabbitUtils.Queue_ClassId
  type: Field
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Connection/RabbitUtils.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Queue_ClassId
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Connection/RabbitUtils.cs
    startLine: 25
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Connection
  syntax:
    content: public const ushort Queue_ClassId = 50
    return:
      type: System.UInt16
    content.vb: Public Const Queue_ClassId As UShort = 50
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Steeltoe.Messaging.RabbitMQ.Connection.RabbitUtils.Declare_MethodId
  commentId: F:Steeltoe.Messaging.RabbitMQ.Connection.RabbitUtils.Declare_MethodId
  id: Declare_MethodId
  parent: Steeltoe.Messaging.RabbitMQ.Connection.RabbitUtils
  langs:
  - csharp
  - vb
  name: Declare_MethodId
  nameWithType: RabbitUtils.Declare_MethodId
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.RabbitUtils.Declare_MethodId
  type: Field
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Connection/RabbitUtils.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Declare_MethodId
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Connection/RabbitUtils.cs
    startLine: 26
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Connection
  syntax:
    content: public const ushort Declare_MethodId = 10
    return:
      type: System.UInt16
    content.vb: Public Const Declare_MethodId As UShort = 10
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Steeltoe.Messaging.RabbitMQ.Connection.RabbitUtils.ChannelClose_ClassId
  commentId: F:Steeltoe.Messaging.RabbitMQ.Connection.RabbitUtils.ChannelClose_ClassId
  id: ChannelClose_ClassId
  parent: Steeltoe.Messaging.RabbitMQ.Connection.RabbitUtils
  langs:
  - csharp
  - vb
  name: ChannelClose_ClassId
  nameWithType: RabbitUtils.ChannelClose_ClassId
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.RabbitUtils.ChannelClose_ClassId
  type: Field
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Connection/RabbitUtils.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: ChannelClose_ClassId
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Connection/RabbitUtils.cs
    startLine: 27
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Connection
  syntax:
    content: public const ushort ChannelClose_ClassId = 20
    return:
      type: System.UInt16
    content.vb: Public Const ChannelClose_ClassId As UShort = 20
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Steeltoe.Messaging.RabbitMQ.Connection.RabbitUtils.ChannelClose_MethodId
  commentId: F:Steeltoe.Messaging.RabbitMQ.Connection.RabbitUtils.ChannelClose_MethodId
  id: ChannelClose_MethodId
  parent: Steeltoe.Messaging.RabbitMQ.Connection.RabbitUtils
  langs:
  - csharp
  - vb
  name: ChannelClose_MethodId
  nameWithType: RabbitUtils.ChannelClose_MethodId
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.RabbitUtils.ChannelClose_MethodId
  type: Field
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Connection/RabbitUtils.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: ChannelClose_MethodId
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Connection/RabbitUtils.cs
    startLine: 28
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Connection
  syntax:
    content: public const ushort ChannelClose_MethodId = 40
    return:
      type: System.UInt16
    content.vb: Public Const ChannelClose_MethodId As UShort = 40
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Steeltoe.Messaging.RabbitMQ.Connection.RabbitUtils.ConnectionClose_ClassId
  commentId: F:Steeltoe.Messaging.RabbitMQ.Connection.RabbitUtils.ConnectionClose_ClassId
  id: ConnectionClose_ClassId
  parent: Steeltoe.Messaging.RabbitMQ.Connection.RabbitUtils
  langs:
  - csharp
  - vb
  name: ConnectionClose_ClassId
  nameWithType: RabbitUtils.ConnectionClose_ClassId
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.RabbitUtils.ConnectionClose_ClassId
  type: Field
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Connection/RabbitUtils.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: ConnectionClose_ClassId
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Connection/RabbitUtils.cs
    startLine: 29
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Connection
  syntax:
    content: public const ushort ConnectionClose_ClassId = 10
    return:
      type: System.UInt16
    content.vb: Public Const ConnectionClose_ClassId As UShort = 10
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Steeltoe.Messaging.RabbitMQ.Connection.RabbitUtils.ConnectionClose_MethodId
  commentId: F:Steeltoe.Messaging.RabbitMQ.Connection.RabbitUtils.ConnectionClose_MethodId
  id: ConnectionClose_MethodId
  parent: Steeltoe.Messaging.RabbitMQ.Connection.RabbitUtils
  langs:
  - csharp
  - vb
  name: ConnectionClose_MethodId
  nameWithType: RabbitUtils.ConnectionClose_MethodId
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.RabbitUtils.ConnectionClose_MethodId
  type: Field
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Connection/RabbitUtils.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: ConnectionClose_MethodId
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Connection/RabbitUtils.cs
    startLine: 30
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Connection
  syntax:
    content: public const ushort ConnectionClose_MethodId = 50
    return:
      type: System.UInt16
    content.vb: Public Const ConnectionClose_MethodId As UShort = 50
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Steeltoe.Messaging.RabbitMQ.Connection.RabbitUtils.CloseConnection(Steeltoe.Messaging.RabbitMQ.Connection.IConnection,Microsoft.Extensions.Logging.ILogger)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Connection.RabbitUtils.CloseConnection(Steeltoe.Messaging.RabbitMQ.Connection.IConnection,Microsoft.Extensions.Logging.ILogger)
  id: CloseConnection(Steeltoe.Messaging.RabbitMQ.Connection.IConnection,Microsoft.Extensions.Logging.ILogger)
  parent: Steeltoe.Messaging.RabbitMQ.Connection.RabbitUtils
  langs:
  - csharp
  - vb
  name: CloseConnection(IConnection, ILogger)
  nameWithType: RabbitUtils.CloseConnection(IConnection, ILogger)
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.RabbitUtils.CloseConnection(Steeltoe.Messaging.RabbitMQ.Connection.IConnection, Microsoft.Extensions.Logging.ILogger)
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Connection/RabbitUtils.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: CloseConnection
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Connection/RabbitUtils.cs
    startLine: 34
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Connection
  syntax:
    content: public static void CloseConnection(IConnection connection, ILogger logger = null)
    parameters:
    - id: connection
      type: Steeltoe.Messaging.RabbitMQ.Connection.IConnection
    - id: logger
      type: Microsoft.Extensions.Logging.ILogger
    content.vb: Public Shared Sub CloseConnection(connection As IConnection, logger As ILogger = Nothing)
  overload: Steeltoe.Messaging.RabbitMQ.Connection.RabbitUtils.CloseConnection*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Steeltoe.Messaging.RabbitMQ.Connection.RabbitUtils.CloseChannel(RabbitMQ.Client.IModel,Microsoft.Extensions.Logging.ILogger)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Connection.RabbitUtils.CloseChannel(RabbitMQ.Client.IModel,Microsoft.Extensions.Logging.ILogger)
  id: CloseChannel(RabbitMQ.Client.IModel,Microsoft.Extensions.Logging.ILogger)
  parent: Steeltoe.Messaging.RabbitMQ.Connection.RabbitUtils
  langs:
  - csharp
  - vb
  name: CloseChannel(IModel, ILogger)
  nameWithType: RabbitUtils.CloseChannel(IModel, ILogger)
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.RabbitUtils.CloseChannel(RabbitMQ.Client.IModel, Microsoft.Extensions.Logging.ILogger)
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Connection/RabbitUtils.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: CloseChannel
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Connection/RabbitUtils.cs
    startLine: 53
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Connection
  syntax:
    content: public static void CloseChannel(IModel channel, ILogger logger = null)
    parameters:
    - id: channel
      type: RabbitMQ.Client.IModel
    - id: logger
      type: Microsoft.Extensions.Logging.ILogger
    content.vb: Public Shared Sub CloseChannel(channel As IModel, logger As ILogger = Nothing)
  overload: Steeltoe.Messaging.RabbitMQ.Connection.RabbitUtils.CloseChannel*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Steeltoe.Messaging.RabbitMQ.Connection.RabbitUtils.CommitIfNecessary(RabbitMQ.Client.IModel,Microsoft.Extensions.Logging.ILogger)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Connection.RabbitUtils.CommitIfNecessary(RabbitMQ.Client.IModel,Microsoft.Extensions.Logging.ILogger)
  id: CommitIfNecessary(RabbitMQ.Client.IModel,Microsoft.Extensions.Logging.ILogger)
  parent: Steeltoe.Messaging.RabbitMQ.Connection.RabbitUtils
  langs:
  - csharp
  - vb
  name: CommitIfNecessary(IModel, ILogger)
  nameWithType: RabbitUtils.CommitIfNecessary(IModel, ILogger)
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.RabbitUtils.CommitIfNecessary(RabbitMQ.Client.IModel, Microsoft.Extensions.Logging.ILogger)
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Connection/RabbitUtils.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: CommitIfNecessary
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Connection/RabbitUtils.cs
    startLine: 79
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Connection
  syntax:
    content: public static void CommitIfNecessary(IModel channel, ILogger logger = null)
    parameters:
    - id: channel
      type: RabbitMQ.Client.IModel
    - id: logger
      type: Microsoft.Extensions.Logging.ILogger
    content.vb: Public Shared Sub CommitIfNecessary(channel As IModel, logger As ILogger = Nothing)
  overload: Steeltoe.Messaging.RabbitMQ.Connection.RabbitUtils.CommitIfNecessary*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Steeltoe.Messaging.RabbitMQ.Connection.RabbitUtils.RollbackIfNecessary(RabbitMQ.Client.IModel,Microsoft.Extensions.Logging.ILogger)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Connection.RabbitUtils.RollbackIfNecessary(RabbitMQ.Client.IModel,Microsoft.Extensions.Logging.ILogger)
  id: RollbackIfNecessary(RabbitMQ.Client.IModel,Microsoft.Extensions.Logging.ILogger)
  parent: Steeltoe.Messaging.RabbitMQ.Connection.RabbitUtils
  langs:
  - csharp
  - vb
  name: RollbackIfNecessary(IModel, ILogger)
  nameWithType: RabbitUtils.RollbackIfNecessary(IModel, ILogger)
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.RabbitUtils.RollbackIfNecessary(RabbitMQ.Client.IModel, Microsoft.Extensions.Logging.ILogger)
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Connection/RabbitUtils.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: RollbackIfNecessary
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Connection/RabbitUtils.cs
    startLine: 97
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Connection
  syntax:
    content: public static void RollbackIfNecessary(IModel channel, ILogger logger = null)
    parameters:
    - id: channel
      type: RabbitMQ.Client.IModel
    - id: logger
      type: Microsoft.Extensions.Logging.ILogger
    content.vb: Public Shared Sub RollbackIfNecessary(channel As IModel, logger As ILogger = Nothing)
  overload: Steeltoe.Messaging.RabbitMQ.Connection.RabbitUtils.RollbackIfNecessary*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Steeltoe.Messaging.RabbitMQ.Connection.RabbitUtils.CloseMessageConsumer(RabbitMQ.Client.IModel,System.Collections.Generic.List{System.String},System.Boolean,Microsoft.Extensions.Logging.ILogger)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Connection.RabbitUtils.CloseMessageConsumer(RabbitMQ.Client.IModel,System.Collections.Generic.List{System.String},System.Boolean,Microsoft.Extensions.Logging.ILogger)
  id: CloseMessageConsumer(RabbitMQ.Client.IModel,System.Collections.Generic.List{System.String},System.Boolean,Microsoft.Extensions.Logging.ILogger)
  parent: Steeltoe.Messaging.RabbitMQ.Connection.RabbitUtils
  langs:
  - csharp
  - vb
  name: CloseMessageConsumer(IModel, List<String>, Boolean, ILogger)
  nameWithType: RabbitUtils.CloseMessageConsumer(IModel, List<String>, Boolean, ILogger)
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.RabbitUtils.CloseMessageConsumer(RabbitMQ.Client.IModel, System.Collections.Generic.List<System.String>, System.Boolean, Microsoft.Extensions.Logging.ILogger)
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Connection/RabbitUtils.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: CloseMessageConsumer
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Connection/RabbitUtils.cs
    startLine: 115
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Connection
  syntax:
    content: public static void CloseMessageConsumer(IModel channel, List<string> consumerTags, bool transactional, ILogger logger = null)
    parameters:
    - id: channel
      type: RabbitMQ.Client.IModel
    - id: consumerTags
      type: System.Collections.Generic.List{System.String}
    - id: transactional
      type: System.Boolean
    - id: logger
      type: Microsoft.Extensions.Logging.ILogger
    content.vb: Public Shared Sub CloseMessageConsumer(channel As IModel, consumerTags As List(Of String), transactional As Boolean, logger As ILogger = Nothing)
  overload: Steeltoe.Messaging.RabbitMQ.Connection.RabbitUtils.CloseMessageConsumer*
  nameWithType.vb: RabbitUtils.CloseMessageConsumer(IModel, List(Of String), Boolean, ILogger)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Steeltoe.Messaging.RabbitMQ.Connection.RabbitUtils.CloseMessageConsumer(RabbitMQ.Client.IModel, System.Collections.Generic.List(Of System.String), System.Boolean, Microsoft.Extensions.Logging.ILogger)
  name.vb: CloseMessageConsumer(IModel, List(Of String), Boolean, ILogger)
- uid: Steeltoe.Messaging.RabbitMQ.Connection.RabbitUtils.Cancel(RabbitMQ.Client.IModel,System.String,Microsoft.Extensions.Logging.ILogger)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Connection.RabbitUtils.Cancel(RabbitMQ.Client.IModel,System.String,Microsoft.Extensions.Logging.ILogger)
  id: Cancel(RabbitMQ.Client.IModel,System.String,Microsoft.Extensions.Logging.ILogger)
  parent: Steeltoe.Messaging.RabbitMQ.Connection.RabbitUtils
  langs:
  - csharp
  - vb
  name: Cancel(IModel, String, ILogger)
  nameWithType: RabbitUtils.Cancel(IModel, String, ILogger)
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.RabbitUtils.Cancel(RabbitMQ.Client.IModel, System.String, Microsoft.Extensions.Logging.ILogger)
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Connection/RabbitUtils.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Cancel
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Connection/RabbitUtils.cs
    startLine: 147
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Connection
  syntax:
    content: public static void Cancel(IModel channel, string consumerTag, ILogger logger = null)
    parameters:
    - id: channel
      type: RabbitMQ.Client.IModel
    - id: consumerTag
      type: System.String
    - id: logger
      type: Microsoft.Extensions.Logging.ILogger
    content.vb: Public Shared Sub Cancel(channel As IModel, consumerTag As String, logger As ILogger = Nothing)
  overload: Steeltoe.Messaging.RabbitMQ.Connection.RabbitUtils.Cancel*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Steeltoe.Messaging.RabbitMQ.Connection.RabbitUtils.DeclareTransactional(RabbitMQ.Client.IModel,Microsoft.Extensions.Logging.ILogger)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Connection.RabbitUtils.DeclareTransactional(RabbitMQ.Client.IModel,Microsoft.Extensions.Logging.ILogger)
  id: DeclareTransactional(RabbitMQ.Client.IModel,Microsoft.Extensions.Logging.ILogger)
  parent: Steeltoe.Messaging.RabbitMQ.Connection.RabbitUtils
  langs:
  - csharp
  - vb
  name: DeclareTransactional(IModel, ILogger)
  nameWithType: RabbitUtils.DeclareTransactional(IModel, ILogger)
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.RabbitUtils.DeclareTransactional(RabbitMQ.Client.IModel, Microsoft.Extensions.Logging.ILogger)
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Connection/RabbitUtils.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: DeclareTransactional
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Connection/RabbitUtils.cs
    startLine: 163
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Connection
  syntax:
    content: public static void DeclareTransactional(IModel channel, ILogger logger = null)
    parameters:
    - id: channel
      type: RabbitMQ.Client.IModel
    - id: logger
      type: Microsoft.Extensions.Logging.ILogger
    content.vb: Public Shared Sub DeclareTransactional(channel As IModel, logger As ILogger = Nothing)
  overload: Steeltoe.Messaging.RabbitMQ.Connection.RabbitUtils.DeclareTransactional*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Steeltoe.Messaging.RabbitMQ.Connection.RabbitUtils.SetPhysicalCloseRequired(RabbitMQ.Client.IModel,System.Boolean)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Connection.RabbitUtils.SetPhysicalCloseRequired(RabbitMQ.Client.IModel,System.Boolean)
  id: SetPhysicalCloseRequired(RabbitMQ.Client.IModel,System.Boolean)
  parent: Steeltoe.Messaging.RabbitMQ.Connection.RabbitUtils
  langs:
  - csharp
  - vb
  name: SetPhysicalCloseRequired(IModel, Boolean)
  nameWithType: RabbitUtils.SetPhysicalCloseRequired(IModel, Boolean)
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.RabbitUtils.SetPhysicalCloseRequired(RabbitMQ.Client.IModel, System.Boolean)
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Connection/RabbitUtils.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: SetPhysicalCloseRequired
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Connection/RabbitUtils.cs
    startLine: 176
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Connection
  syntax:
    content: public static void SetPhysicalCloseRequired(IModel channel, bool b)
    parameters:
    - id: channel
      type: RabbitMQ.Client.IModel
    - id: b
      type: System.Boolean
    content.vb: Public Shared Sub SetPhysicalCloseRequired(channel As IModel, b As Boolean)
  overload: Steeltoe.Messaging.RabbitMQ.Connection.RabbitUtils.SetPhysicalCloseRequired*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Steeltoe.Messaging.RabbitMQ.Connection.RabbitUtils.IsPhysicalCloseRequired
  commentId: M:Steeltoe.Messaging.RabbitMQ.Connection.RabbitUtils.IsPhysicalCloseRequired
  id: IsPhysicalCloseRequired
  parent: Steeltoe.Messaging.RabbitMQ.Connection.RabbitUtils
  langs:
  - csharp
  - vb
  name: IsPhysicalCloseRequired()
  nameWithType: RabbitUtils.IsPhysicalCloseRequired()
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.RabbitUtils.IsPhysicalCloseRequired()
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Connection/RabbitUtils.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: IsPhysicalCloseRequired
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Connection/RabbitUtils.cs
    startLine: 184
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Connection
  syntax:
    content: public static bool IsPhysicalCloseRequired()
    return:
      type: System.Boolean
    content.vb: Public Shared Function IsPhysicalCloseRequired As Boolean
  overload: Steeltoe.Messaging.RabbitMQ.Connection.RabbitUtils.IsPhysicalCloseRequired*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Steeltoe.Messaging.RabbitMQ.Connection.RabbitUtils.IsNormalChannelClose(RabbitMQ.Client.ShutdownEventArgs)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Connection.RabbitUtils.IsNormalChannelClose(RabbitMQ.Client.ShutdownEventArgs)
  id: IsNormalChannelClose(RabbitMQ.Client.ShutdownEventArgs)
  parent: Steeltoe.Messaging.RabbitMQ.Connection.RabbitUtils
  langs:
  - csharp
  - vb
  name: IsNormalChannelClose(ShutdownEventArgs)
  nameWithType: RabbitUtils.IsNormalChannelClose(ShutdownEventArgs)
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.RabbitUtils.IsNormalChannelClose(RabbitMQ.Client.ShutdownEventArgs)
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Connection/RabbitUtils.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: IsNormalChannelClose
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Connection/RabbitUtils.cs
    startLine: 199
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Connection
  syntax:
    content: public static bool IsNormalChannelClose(ShutdownEventArgs args)
    parameters:
    - id: args
      type: RabbitMQ.Client.ShutdownEventArgs
    return:
      type: System.Boolean
    content.vb: Public Shared Function IsNormalChannelClose(args As ShutdownEventArgs) As Boolean
  overload: Steeltoe.Messaging.RabbitMQ.Connection.RabbitUtils.IsNormalChannelClose*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Steeltoe.Messaging.RabbitMQ.Connection.RabbitUtils.IsNormalShutdown(Steeltoe.Messaging.RabbitMQ.Support.ShutdownSignalException)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Connection.RabbitUtils.IsNormalShutdown(Steeltoe.Messaging.RabbitMQ.Support.ShutdownSignalException)
  id: IsNormalShutdown(Steeltoe.Messaging.RabbitMQ.Support.ShutdownSignalException)
  parent: Steeltoe.Messaging.RabbitMQ.Connection.RabbitUtils
  langs:
  - csharp
  - vb
  name: IsNormalShutdown(ShutdownSignalException)
  nameWithType: RabbitUtils.IsNormalShutdown(ShutdownSignalException)
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.RabbitUtils.IsNormalShutdown(Steeltoe.Messaging.RabbitMQ.Support.ShutdownSignalException)
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Connection/RabbitUtils.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: IsNormalShutdown
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Connection/RabbitUtils.cs
    startLine: 211
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Connection
  syntax:
    content: public static bool IsNormalShutdown(ShutdownSignalException sig)
    parameters:
    - id: sig
      type: Steeltoe.Messaging.RabbitMQ.Support.ShutdownSignalException
    return:
      type: System.Boolean
    content.vb: Public Shared Function IsNormalShutdown(sig As ShutdownSignalException) As Boolean
  overload: Steeltoe.Messaging.RabbitMQ.Connection.RabbitUtils.IsNormalShutdown*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Steeltoe.Messaging.RabbitMQ.Connection.RabbitUtils.IsNormalShutdown(RabbitMQ.Client.ShutdownEventArgs)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Connection.RabbitUtils.IsNormalShutdown(RabbitMQ.Client.ShutdownEventArgs)
  id: IsNormalShutdown(RabbitMQ.Client.ShutdownEventArgs)
  parent: Steeltoe.Messaging.RabbitMQ.Connection.RabbitUtils
  langs:
  - csharp
  - vb
  name: IsNormalShutdown(ShutdownEventArgs)
  nameWithType: RabbitUtils.IsNormalShutdown(ShutdownEventArgs)
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.RabbitUtils.IsNormalShutdown(RabbitMQ.Client.ShutdownEventArgs)
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Connection/RabbitUtils.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: IsNormalShutdown
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Connection/RabbitUtils.cs
    startLine: 222
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Connection
  syntax:
    content: public static bool IsNormalShutdown(ShutdownEventArgs args)
    parameters:
    - id: args
      type: RabbitMQ.Client.ShutdownEventArgs
    return:
      type: System.Boolean
    content.vb: Public Shared Function IsNormalShutdown(args As ShutdownEventArgs) As Boolean
  overload: Steeltoe.Messaging.RabbitMQ.Connection.RabbitUtils.IsNormalShutdown*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Steeltoe.Messaging.RabbitMQ.Connection.RabbitUtils.IsPassiveDeclarationChannelClose(System.Exception)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Connection.RabbitUtils.IsPassiveDeclarationChannelClose(System.Exception)
  id: IsPassiveDeclarationChannelClose(System.Exception)
  parent: Steeltoe.Messaging.RabbitMQ.Connection.RabbitUtils
  langs:
  - csharp
  - vb
  name: IsPassiveDeclarationChannelClose(Exception)
  nameWithType: RabbitUtils.IsPassiveDeclarationChannelClose(Exception)
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.RabbitUtils.IsPassiveDeclarationChannelClose(System.Exception)
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Connection/RabbitUtils.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: IsPassiveDeclarationChannelClose
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Connection/RabbitUtils.cs
    startLine: 233
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Connection
  syntax:
    content: public static bool IsPassiveDeclarationChannelClose(Exception exception)
    parameters:
    - id: exception
      type: System.Exception
    return:
      type: System.Boolean
    content.vb: Public Shared Function IsPassiveDeclarationChannelClose(exception As Exception) As Boolean
  overload: Steeltoe.Messaging.RabbitMQ.Connection.RabbitUtils.IsPassiveDeclarationChannelClose*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Steeltoe.Messaging.RabbitMQ.Connection.RabbitUtils.IsMismatchedQueueArgs(System.Exception)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Connection.RabbitUtils.IsMismatchedQueueArgs(System.Exception)
  id: IsMismatchedQueueArgs(System.Exception)
  parent: Steeltoe.Messaging.RabbitMQ.Connection.RabbitUtils
  langs:
  - csharp
  - vb
  name: IsMismatchedQueueArgs(Exception)
  nameWithType: RabbitUtils.IsMismatchedQueueArgs(Exception)
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.RabbitUtils.IsMismatchedQueueArgs(System.Exception)
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Connection/RabbitUtils.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: IsMismatchedQueueArgs
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Connection/RabbitUtils.cs
    startLine: 255
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Connection
  syntax:
    content: public static bool IsMismatchedQueueArgs(Exception exception)
    parameters:
    - id: exception
      type: System.Exception
    return:
      type: System.Boolean
    content.vb: Public Shared Function IsMismatchedQueueArgs(exception As Exception) As Boolean
  overload: Steeltoe.Messaging.RabbitMQ.Connection.RabbitUtils.IsMismatchedQueueArgs*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Steeltoe.Messaging.RabbitMQ.Connection.RabbitUtils.IsMismatchedQueueArgs(RabbitMQ.Client.ShutdownEventArgs)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Connection.RabbitUtils.IsMismatchedQueueArgs(RabbitMQ.Client.ShutdownEventArgs)
  id: IsMismatchedQueueArgs(RabbitMQ.Client.ShutdownEventArgs)
  parent: Steeltoe.Messaging.RabbitMQ.Connection.RabbitUtils
  langs:
  - csharp
  - vb
  name: IsMismatchedQueueArgs(ShutdownEventArgs)
  nameWithType: RabbitUtils.IsMismatchedQueueArgs(ShutdownEventArgs)
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.RabbitUtils.IsMismatchedQueueArgs(RabbitMQ.Client.ShutdownEventArgs)
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Connection/RabbitUtils.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: IsMismatchedQueueArgs
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Connection/RabbitUtils.cs
    startLine: 284
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Connection
  syntax:
    content: public static bool IsMismatchedQueueArgs(ShutdownEventArgs args)
    parameters:
    - id: args
      type: RabbitMQ.Client.ShutdownEventArgs
    return:
      type: System.Boolean
    content.vb: Public Shared Function IsMismatchedQueueArgs(args As ShutdownEventArgs) As Boolean
  overload: Steeltoe.Messaging.RabbitMQ.Connection.RabbitUtils.IsMismatchedQueueArgs*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Steeltoe.Messaging.RabbitMQ.Connection.RabbitUtils.GetMaxFrame(Steeltoe.Messaging.RabbitMQ.Connection.IConnectionFactory)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Connection.RabbitUtils.GetMaxFrame(Steeltoe.Messaging.RabbitMQ.Connection.IConnectionFactory)
  id: GetMaxFrame(Steeltoe.Messaging.RabbitMQ.Connection.IConnectionFactory)
  parent: Steeltoe.Messaging.RabbitMQ.Connection.RabbitUtils
  langs:
  - csharp
  - vb
  name: GetMaxFrame(IConnectionFactory)
  nameWithType: RabbitUtils.GetMaxFrame(IConnectionFactory)
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.RabbitUtils.GetMaxFrame(Steeltoe.Messaging.RabbitMQ.Connection.IConnectionFactory)
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Connection/RabbitUtils.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: GetMaxFrame
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Connection/RabbitUtils.cs
    startLine: 291
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Connection
  syntax:
    content: public static int GetMaxFrame(IConnectionFactory connectionFactory)
    parameters:
    - id: connectionFactory
      type: Steeltoe.Messaging.RabbitMQ.Connection.IConnectionFactory
    return:
      type: System.Int32
    content.vb: Public Shared Function GetMaxFrame(connectionFactory As IConnectionFactory) As Integer
  overload: Steeltoe.Messaging.RabbitMQ.Connection.RabbitUtils.GetMaxFrame*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Steeltoe.Messaging.RabbitMQ.Connection
  commentId: N:Steeltoe.Messaging.RabbitMQ.Connection
  name: Steeltoe.Messaging.RabbitMQ.Connection
  nameWithType: Steeltoe.Messaging.RabbitMQ.Connection
  fullName: Steeltoe.Messaging.RabbitMQ.Connection
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.UInt16
  commentId: T:System.UInt16
  parent: System
  isExternal: true
  name: UInt16
  nameWithType: UInt16
  fullName: System.UInt16
- uid: Steeltoe.Messaging.RabbitMQ.Connection.RabbitUtils.CloseConnection*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Connection.RabbitUtils.CloseConnection
  name: CloseConnection
  nameWithType: RabbitUtils.CloseConnection
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.RabbitUtils.CloseConnection
- uid: Steeltoe.Messaging.RabbitMQ.Connection.IConnection
  commentId: T:Steeltoe.Messaging.RabbitMQ.Connection.IConnection
  parent: Steeltoe.Messaging.RabbitMQ.Connection
  name: IConnection
  nameWithType: IConnection
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.IConnection
- uid: Microsoft.Extensions.Logging.ILogger
  commentId: T:Microsoft.Extensions.Logging.ILogger
  parent: Microsoft.Extensions.Logging
  isExternal: true
  name: ILogger
  nameWithType: ILogger
  fullName: Microsoft.Extensions.Logging.ILogger
- uid: Microsoft.Extensions.Logging
  commentId: N:Microsoft.Extensions.Logging
  isExternal: true
  name: Microsoft.Extensions.Logging
  nameWithType: Microsoft.Extensions.Logging
  fullName: Microsoft.Extensions.Logging
- uid: Steeltoe.Messaging.RabbitMQ.Connection.RabbitUtils.CloseChannel*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Connection.RabbitUtils.CloseChannel
  name: CloseChannel
  nameWithType: RabbitUtils.CloseChannel
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.RabbitUtils.CloseChannel
- uid: RabbitMQ.Client.IModel
  commentId: T:RabbitMQ.Client.IModel
  parent: RabbitMQ.Client
  isExternal: true
  name: IModel
  nameWithType: IModel
  fullName: RabbitMQ.Client.IModel
- uid: RabbitMQ.Client
  commentId: N:RabbitMQ.Client
  isExternal: true
  name: RabbitMQ.Client
  nameWithType: RabbitMQ.Client
  fullName: RabbitMQ.Client
- uid: Steeltoe.Messaging.RabbitMQ.Connection.RabbitUtils.CommitIfNecessary*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Connection.RabbitUtils.CommitIfNecessary
  name: CommitIfNecessary
  nameWithType: RabbitUtils.CommitIfNecessary
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.RabbitUtils.CommitIfNecessary
- uid: Steeltoe.Messaging.RabbitMQ.Connection.RabbitUtils.RollbackIfNecessary*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Connection.RabbitUtils.RollbackIfNecessary
  name: RollbackIfNecessary
  nameWithType: RabbitUtils.RollbackIfNecessary
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.RabbitUtils.RollbackIfNecessary
- uid: Steeltoe.Messaging.RabbitMQ.Connection.RabbitUtils.CloseMessageConsumer*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Connection.RabbitUtils.CloseMessageConsumer
  name: CloseMessageConsumer
  nameWithType: RabbitUtils.CloseMessageConsumer
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.RabbitUtils.CloseMessageConsumer
- uid: System.Collections.Generic.List{System.String}
  commentId: T:System.Collections.Generic.List{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<String>
  nameWithType: List<String>
  fullName: System.Collections.Generic.List<System.String>
  nameWithType.vb: List(Of String)
  fullName.vb: System.Collections.Generic.List(Of System.String)
  name.vb: List(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Steeltoe.Messaging.RabbitMQ.Connection.RabbitUtils.Cancel*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Connection.RabbitUtils.Cancel
  name: Cancel
  nameWithType: RabbitUtils.Cancel
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.RabbitUtils.Cancel
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Steeltoe.Messaging.RabbitMQ.Connection.RabbitUtils.DeclareTransactional*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Connection.RabbitUtils.DeclareTransactional
  name: DeclareTransactional
  nameWithType: RabbitUtils.DeclareTransactional
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.RabbitUtils.DeclareTransactional
- uid: Steeltoe.Messaging.RabbitMQ.Connection.RabbitUtils.SetPhysicalCloseRequired*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Connection.RabbitUtils.SetPhysicalCloseRequired
  name: SetPhysicalCloseRequired
  nameWithType: RabbitUtils.SetPhysicalCloseRequired
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.RabbitUtils.SetPhysicalCloseRequired
- uid: Steeltoe.Messaging.RabbitMQ.Connection.RabbitUtils.IsPhysicalCloseRequired*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Connection.RabbitUtils.IsPhysicalCloseRequired
  name: IsPhysicalCloseRequired
  nameWithType: RabbitUtils.IsPhysicalCloseRequired
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.RabbitUtils.IsPhysicalCloseRequired
- uid: Steeltoe.Messaging.RabbitMQ.Connection.RabbitUtils.IsNormalChannelClose*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Connection.RabbitUtils.IsNormalChannelClose
  name: IsNormalChannelClose
  nameWithType: RabbitUtils.IsNormalChannelClose
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.RabbitUtils.IsNormalChannelClose
- uid: RabbitMQ.Client.ShutdownEventArgs
  commentId: T:RabbitMQ.Client.ShutdownEventArgs
  parent: RabbitMQ.Client
  isExternal: true
  name: ShutdownEventArgs
  nameWithType: ShutdownEventArgs
  fullName: RabbitMQ.Client.ShutdownEventArgs
- uid: Steeltoe.Messaging.RabbitMQ.Connection.RabbitUtils.IsNormalShutdown*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Connection.RabbitUtils.IsNormalShutdown
  name: IsNormalShutdown
  nameWithType: RabbitUtils.IsNormalShutdown
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.RabbitUtils.IsNormalShutdown
- uid: Steeltoe.Messaging.RabbitMQ.Support.ShutdownSignalException
  commentId: T:Steeltoe.Messaging.RabbitMQ.Support.ShutdownSignalException
  parent: Steeltoe.Messaging.RabbitMQ.Support
  name: ShutdownSignalException
  nameWithType: ShutdownSignalException
  fullName: Steeltoe.Messaging.RabbitMQ.Support.ShutdownSignalException
- uid: Steeltoe.Messaging.RabbitMQ.Support
  commentId: N:Steeltoe.Messaging.RabbitMQ.Support
  name: Steeltoe.Messaging.RabbitMQ.Support
  nameWithType: Steeltoe.Messaging.RabbitMQ.Support
  fullName: Steeltoe.Messaging.RabbitMQ.Support
- uid: Steeltoe.Messaging.RabbitMQ.Connection.RabbitUtils.IsPassiveDeclarationChannelClose*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Connection.RabbitUtils.IsPassiveDeclarationChannelClose
  name: IsPassiveDeclarationChannelClose
  nameWithType: RabbitUtils.IsPassiveDeclarationChannelClose
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.RabbitUtils.IsPassiveDeclarationChannelClose
- uid: System.Exception
  commentId: T:System.Exception
  parent: System
  isExternal: true
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: Steeltoe.Messaging.RabbitMQ.Connection.RabbitUtils.IsMismatchedQueueArgs*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Connection.RabbitUtils.IsMismatchedQueueArgs
  name: IsMismatchedQueueArgs
  nameWithType: RabbitUtils.IsMismatchedQueueArgs
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.RabbitUtils.IsMismatchedQueueArgs
- uid: Steeltoe.Messaging.RabbitMQ.Connection.RabbitUtils.GetMaxFrame*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Connection.RabbitUtils.GetMaxFrame
  name: GetMaxFrame
  nameWithType: RabbitUtils.GetMaxFrame
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.RabbitUtils.GetMaxFrame
- uid: Steeltoe.Messaging.RabbitMQ.Connection.IConnectionFactory
  commentId: T:Steeltoe.Messaging.RabbitMQ.Connection.IConnectionFactory
  parent: Steeltoe.Messaging.RabbitMQ.Connection
  name: IConnectionFactory
  nameWithType: IConnectionFactory
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.IConnectionFactory
