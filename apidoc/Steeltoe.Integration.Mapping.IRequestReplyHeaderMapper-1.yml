### YamlMime:ManagedReference
items:
- uid: Steeltoe.Integration.Mapping.IRequestReplyHeaderMapper`1
  commentId: T:Steeltoe.Integration.Mapping.IRequestReplyHeaderMapper`1
  id: IRequestReplyHeaderMapper`1
  parent: Steeltoe.Integration.Mapping
  children:
  - Steeltoe.Integration.Mapping.IRequestReplyHeaderMapper`1.FromHeadersToReply(Steeltoe.Messaging.IMessageHeaders,`0)
  - Steeltoe.Integration.Mapping.IRequestReplyHeaderMapper`1.FromHeadersToRequest(Steeltoe.Messaging.IMessageHeaders,`0)
  - Steeltoe.Integration.Mapping.IRequestReplyHeaderMapper`1.ToHeadersFromReply(`0)
  - Steeltoe.Integration.Mapping.IRequestReplyHeaderMapper`1.ToHeadersFromRequest(`0)
  langs:
  - csharp
  - vb
  name: IRequestReplyHeaderMapper<T>
  nameWithType: IRequestReplyHeaderMapper<T>
  fullName: Steeltoe.Integration.Mapping.IRequestReplyHeaderMapper<T>
  type: Interface
  source:
    remote:
      path: src/Integration/src/Abstractions/Mapping/IRequestReplyHeaderMapper.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: IRequestReplyHeaderMapper
    path: ../Steeltoe/src/Integration/src/Abstractions/Mapping/IRequestReplyHeaderMapper.cs
    startLine: 9
  assemblies:
  - Steeltoe.Integration.Abstractions
  namespace: Steeltoe.Integration.Mapping
  syntax:
    content: public interface IRequestReplyHeaderMapper<T>
    typeParameters:
    - id: T
    content.vb: Public Interface IRequestReplyHeaderMapper(Of T)
  nameWithType.vb: IRequestReplyHeaderMapper(Of T)
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
  fullName.vb: Steeltoe.Integration.Mapping.IRequestReplyHeaderMapper(Of T)
  name.vb: IRequestReplyHeaderMapper(Of T)
- uid: Steeltoe.Integration.Mapping.IRequestReplyHeaderMapper`1.FromHeadersToRequest(Steeltoe.Messaging.IMessageHeaders,`0)
  commentId: M:Steeltoe.Integration.Mapping.IRequestReplyHeaderMapper`1.FromHeadersToRequest(Steeltoe.Messaging.IMessageHeaders,`0)
  id: FromHeadersToRequest(Steeltoe.Messaging.IMessageHeaders,`0)
  parent: Steeltoe.Integration.Mapping.IRequestReplyHeaderMapper`1
  langs:
  - csharp
  - vb
  name: FromHeadersToRequest(IMessageHeaders, T)
  nameWithType: IRequestReplyHeaderMapper<T>.FromHeadersToRequest(IMessageHeaders, T)
  fullName: Steeltoe.Integration.Mapping.IRequestReplyHeaderMapper<T>.FromHeadersToRequest(Steeltoe.Messaging.IMessageHeaders, T)
  type: Method
  source:
    remote:
      path: src/Integration/src/Abstractions/Mapping/IRequestReplyHeaderMapper.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: FromHeadersToRequest
    path: ../Steeltoe/src/Integration/src/Abstractions/Mapping/IRequestReplyHeaderMapper.cs
    startLine: 11
  assemblies:
  - Steeltoe.Integration.Abstractions
  namespace: Steeltoe.Integration.Mapping
  syntax:
    content: void FromHeadersToRequest(IMessageHeaders headers, T target)
    parameters:
    - id: headers
      type: Steeltoe.Messaging.IMessageHeaders
    - id: target
      type: '{T}'
    content.vb: Sub FromHeadersToRequest(headers As IMessageHeaders, target As T)
  overload: Steeltoe.Integration.Mapping.IRequestReplyHeaderMapper`1.FromHeadersToRequest*
  nameWithType.vb: IRequestReplyHeaderMapper(Of T).FromHeadersToRequest(IMessageHeaders, T)
  fullName.vb: Steeltoe.Integration.Mapping.IRequestReplyHeaderMapper(Of T).FromHeadersToRequest(Steeltoe.Messaging.IMessageHeaders, T)
- uid: Steeltoe.Integration.Mapping.IRequestReplyHeaderMapper`1.FromHeadersToReply(Steeltoe.Messaging.IMessageHeaders,`0)
  commentId: M:Steeltoe.Integration.Mapping.IRequestReplyHeaderMapper`1.FromHeadersToReply(Steeltoe.Messaging.IMessageHeaders,`0)
  id: FromHeadersToReply(Steeltoe.Messaging.IMessageHeaders,`0)
  parent: Steeltoe.Integration.Mapping.IRequestReplyHeaderMapper`1
  langs:
  - csharp
  - vb
  name: FromHeadersToReply(IMessageHeaders, T)
  nameWithType: IRequestReplyHeaderMapper<T>.FromHeadersToReply(IMessageHeaders, T)
  fullName: Steeltoe.Integration.Mapping.IRequestReplyHeaderMapper<T>.FromHeadersToReply(Steeltoe.Messaging.IMessageHeaders, T)
  type: Method
  source:
    remote:
      path: src/Integration/src/Abstractions/Mapping/IRequestReplyHeaderMapper.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: FromHeadersToReply
    path: ../Steeltoe/src/Integration/src/Abstractions/Mapping/IRequestReplyHeaderMapper.cs
    startLine: 13
  assemblies:
  - Steeltoe.Integration.Abstractions
  namespace: Steeltoe.Integration.Mapping
  syntax:
    content: void FromHeadersToReply(IMessageHeaders headers, T target)
    parameters:
    - id: headers
      type: Steeltoe.Messaging.IMessageHeaders
    - id: target
      type: '{T}'
    content.vb: Sub FromHeadersToReply(headers As IMessageHeaders, target As T)
  overload: Steeltoe.Integration.Mapping.IRequestReplyHeaderMapper`1.FromHeadersToReply*
  nameWithType.vb: IRequestReplyHeaderMapper(Of T).FromHeadersToReply(IMessageHeaders, T)
  fullName.vb: Steeltoe.Integration.Mapping.IRequestReplyHeaderMapper(Of T).FromHeadersToReply(Steeltoe.Messaging.IMessageHeaders, T)
- uid: Steeltoe.Integration.Mapping.IRequestReplyHeaderMapper`1.ToHeadersFromRequest(`0)
  commentId: M:Steeltoe.Integration.Mapping.IRequestReplyHeaderMapper`1.ToHeadersFromRequest(`0)
  id: ToHeadersFromRequest(`0)
  parent: Steeltoe.Integration.Mapping.IRequestReplyHeaderMapper`1
  langs:
  - csharp
  - vb
  name: ToHeadersFromRequest(T)
  nameWithType: IRequestReplyHeaderMapper<T>.ToHeadersFromRequest(T)
  fullName: Steeltoe.Integration.Mapping.IRequestReplyHeaderMapper<T>.ToHeadersFromRequest(T)
  type: Method
  source:
    remote:
      path: src/Integration/src/Abstractions/Mapping/IRequestReplyHeaderMapper.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: ToHeadersFromRequest
    path: ../Steeltoe/src/Integration/src/Abstractions/Mapping/IRequestReplyHeaderMapper.cs
    startLine: 15
  assemblies:
  - Steeltoe.Integration.Abstractions
  namespace: Steeltoe.Integration.Mapping
  syntax:
    content: IDictionary<string, object> ToHeadersFromRequest(T source)
    parameters:
    - id: source
      type: '{T}'
    return:
      type: System.Collections.Generic.IDictionary{System.String,System.Object}
    content.vb: Function ToHeadersFromRequest(source As T) As IDictionary(Of String, Object)
  overload: Steeltoe.Integration.Mapping.IRequestReplyHeaderMapper`1.ToHeadersFromRequest*
  nameWithType.vb: IRequestReplyHeaderMapper(Of T).ToHeadersFromRequest(T)
  fullName.vb: Steeltoe.Integration.Mapping.IRequestReplyHeaderMapper(Of T).ToHeadersFromRequest(T)
- uid: Steeltoe.Integration.Mapping.IRequestReplyHeaderMapper`1.ToHeadersFromReply(`0)
  commentId: M:Steeltoe.Integration.Mapping.IRequestReplyHeaderMapper`1.ToHeadersFromReply(`0)
  id: ToHeadersFromReply(`0)
  parent: Steeltoe.Integration.Mapping.IRequestReplyHeaderMapper`1
  langs:
  - csharp
  - vb
  name: ToHeadersFromReply(T)
  nameWithType: IRequestReplyHeaderMapper<T>.ToHeadersFromReply(T)
  fullName: Steeltoe.Integration.Mapping.IRequestReplyHeaderMapper<T>.ToHeadersFromReply(T)
  type: Method
  source:
    remote:
      path: src/Integration/src/Abstractions/Mapping/IRequestReplyHeaderMapper.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: ToHeadersFromReply
    path: ../Steeltoe/src/Integration/src/Abstractions/Mapping/IRequestReplyHeaderMapper.cs
    startLine: 17
  assemblies:
  - Steeltoe.Integration.Abstractions
  namespace: Steeltoe.Integration.Mapping
  syntax:
    content: IDictionary<string, object> ToHeadersFromReply(T source)
    parameters:
    - id: source
      type: '{T}'
    return:
      type: System.Collections.Generic.IDictionary{System.String,System.Object}
    content.vb: Function ToHeadersFromReply(source As T) As IDictionary(Of String, Object)
  overload: Steeltoe.Integration.Mapping.IRequestReplyHeaderMapper`1.ToHeadersFromReply*
  nameWithType.vb: IRequestReplyHeaderMapper(Of T).ToHeadersFromReply(T)
  fullName.vb: Steeltoe.Integration.Mapping.IRequestReplyHeaderMapper(Of T).ToHeadersFromReply(T)
references:
- uid: Steeltoe.Integration.Mapping
  commentId: N:Steeltoe.Integration.Mapping
  name: Steeltoe.Integration.Mapping
  nameWithType: Steeltoe.Integration.Mapping
  fullName: Steeltoe.Integration.Mapping
- uid: Steeltoe.Integration.Mapping.IRequestReplyHeaderMapper`1.FromHeadersToRequest*
  commentId: Overload:Steeltoe.Integration.Mapping.IRequestReplyHeaderMapper`1.FromHeadersToRequest
  name: FromHeadersToRequest
  nameWithType: IRequestReplyHeaderMapper<T>.FromHeadersToRequest
  fullName: Steeltoe.Integration.Mapping.IRequestReplyHeaderMapper<T>.FromHeadersToRequest
  nameWithType.vb: IRequestReplyHeaderMapper(Of T).FromHeadersToRequest
  fullName.vb: Steeltoe.Integration.Mapping.IRequestReplyHeaderMapper(Of T).FromHeadersToRequest
- uid: Steeltoe.Messaging.IMessageHeaders
  commentId: T:Steeltoe.Messaging.IMessageHeaders
  parent: Steeltoe.Messaging
  name: IMessageHeaders
  nameWithType: IMessageHeaders
  fullName: Steeltoe.Messaging.IMessageHeaders
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: Steeltoe.Messaging
  commentId: N:Steeltoe.Messaging
  name: Steeltoe.Messaging
  nameWithType: Steeltoe.Messaging
  fullName: Steeltoe.Messaging
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: Steeltoe.Integration.Mapping.IRequestReplyHeaderMapper`1.FromHeadersToReply*
  commentId: Overload:Steeltoe.Integration.Mapping.IRequestReplyHeaderMapper`1.FromHeadersToReply
  name: FromHeadersToReply
  nameWithType: IRequestReplyHeaderMapper<T>.FromHeadersToReply
  fullName: Steeltoe.Integration.Mapping.IRequestReplyHeaderMapper<T>.FromHeadersToReply
  nameWithType.vb: IRequestReplyHeaderMapper(Of T).FromHeadersToReply
  fullName.vb: Steeltoe.Integration.Mapping.IRequestReplyHeaderMapper(Of T).FromHeadersToReply
- uid: Steeltoe.Integration.Mapping.IRequestReplyHeaderMapper`1.ToHeadersFromRequest*
  commentId: Overload:Steeltoe.Integration.Mapping.IRequestReplyHeaderMapper`1.ToHeadersFromRequest
  name: ToHeadersFromRequest
  nameWithType: IRequestReplyHeaderMapper<T>.ToHeadersFromRequest
  fullName: Steeltoe.Integration.Mapping.IRequestReplyHeaderMapper<T>.ToHeadersFromRequest
  nameWithType.vb: IRequestReplyHeaderMapper(Of T).ToHeadersFromRequest
  fullName.vb: Steeltoe.Integration.Mapping.IRequestReplyHeaderMapper(Of T).ToHeadersFromRequest
- uid: System.Collections.Generic.IDictionary{System.String,System.Object}
  commentId: T:System.Collections.Generic.IDictionary{System.String,System.Object}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IDictionary`2
  name: IDictionary<String, Object>
  nameWithType: IDictionary<String, Object>
  fullName: System.Collections.Generic.IDictionary<System.String, System.Object>
  nameWithType.vb: IDictionary(Of String, Object)
  fullName.vb: System.Collections.Generic.IDictionary(Of System.String, System.Object)
  name.vb: IDictionary(Of String, Object)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IDictionary`2
  commentId: T:System.Collections.Generic.IDictionary`2
  isExternal: true
  name: IDictionary<TKey, TValue>
  nameWithType: IDictionary<TKey, TValue>
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>
  nameWithType.vb: IDictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.IDictionary(Of TKey, TValue)
  name.vb: IDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Steeltoe.Integration.Mapping.IRequestReplyHeaderMapper`1.ToHeadersFromReply*
  commentId: Overload:Steeltoe.Integration.Mapping.IRequestReplyHeaderMapper`1.ToHeadersFromReply
  name: ToHeadersFromReply
  nameWithType: IRequestReplyHeaderMapper<T>.ToHeadersFromReply
  fullName: Steeltoe.Integration.Mapping.IRequestReplyHeaderMapper<T>.ToHeadersFromReply
  nameWithType.vb: IRequestReplyHeaderMapper(Of T).ToHeadersFromReply
  fullName.vb: Steeltoe.Integration.Mapping.IRequestReplyHeaderMapper(Of T).ToHeadersFromReply
