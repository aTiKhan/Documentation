### YamlMime:ManagedReference
items:
- uid: Steeltoe.Extensions.Logging.DynamicLoggerConfiguration
  commentId: T:Steeltoe.Extensions.Logging.DynamicLoggerConfiguration
  id: DynamicLoggerConfiguration
  parent: Steeltoe.Extensions.Logging
  children:
  - Steeltoe.Extensions.Logging.DynamicLoggerConfiguration.#ctor(System.String,System.Nullable{LogLevel},LogLevel)
  - Steeltoe.Extensions.Logging.DynamicLoggerConfiguration.ConfiguredLevel
  - Steeltoe.Extensions.Logging.DynamicLoggerConfiguration.EffectiveLevel
  - Steeltoe.Extensions.Logging.DynamicLoggerConfiguration.Equals(System.Object)
  - Steeltoe.Extensions.Logging.DynamicLoggerConfiguration.GetHashCode
  - Steeltoe.Extensions.Logging.DynamicLoggerConfiguration.Name
  - Steeltoe.Extensions.Logging.DynamicLoggerConfiguration.ToString
  langs:
  - csharp
  - vb
  name: DynamicLoggerConfiguration
  nameWithType: DynamicLoggerConfiguration
  fullName: Steeltoe.Extensions.Logging.DynamicLoggerConfiguration
  type: Class
  source:
    remote:
      path: src/Logging/src/Abstractions/DynamicLoggerConfiguration.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: DynamicLoggerConfiguration
    path: ../Steeltoe/src/Logging/src/Abstractions/DynamicLoggerConfiguration.cs
    startLine: 8
  assemblies:
  - Steeltoe.Extensions.Logging.Abstractions
  namespace: Steeltoe.Extensions.Logging
  syntax:
    content: 'public class DynamicLoggerConfiguration : ILoggerConfiguration'
    content.vb: >-
      Public Class DynamicLoggerConfiguration

          Implements ILoggerConfiguration
  inheritance:
  - System.Object
  implements:
  - Steeltoe.Extensions.Logging.ILoggerConfiguration
  inheritedMembers:
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Steeltoe.Extensions.Logging.DynamicLoggerConfiguration.#ctor(System.String,System.Nullable{LogLevel},LogLevel)
  commentId: M:Steeltoe.Extensions.Logging.DynamicLoggerConfiguration.#ctor(System.String,System.Nullable{LogLevel},LogLevel)
  id: '#ctor(System.String,System.Nullable{LogLevel},LogLevel)'
  parent: Steeltoe.Extensions.Logging.DynamicLoggerConfiguration
  langs:
  - csharp
  - vb
  name: DynamicLoggerConfiguration(String, Nullable<LogLevel>, LogLevel)
  nameWithType: DynamicLoggerConfiguration.DynamicLoggerConfiguration(String, Nullable<LogLevel>, LogLevel)
  fullName: Steeltoe.Extensions.Logging.DynamicLoggerConfiguration.DynamicLoggerConfiguration(System.String, System.Nullable<LogLevel>, LogLevel)
  type: Constructor
  source:
    remote:
      path: src/Logging/src/Abstractions/DynamicLoggerConfiguration.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: .ctor
    path: ../Steeltoe/src/Logging/src/Abstractions/DynamicLoggerConfiguration.cs
    startLine: 16
  assemblies:
  - Steeltoe.Extensions.Logging.Abstractions
  namespace: Steeltoe.Extensions.Logging
  summary: "\nInitializes a new instance of the <xref href=\"Steeltoe.Extensions.Logging.DynamicLoggerConfiguration\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  example: []
  syntax:
    content: public DynamicLoggerConfiguration(string name, LogLevel? configured, LogLevel effective)
    parameters:
    - id: name
      type: System.String
      description: Namespace
    - id: configured
      type: System.Nullable{LogLevel}
      description: Original log level
    - id: effective
      type: LogLevel
      description: Currently effective log level
    content.vb: Public Sub New(name As String, configured As LogLevel?, effective As LogLevel)
  overload: Steeltoe.Extensions.Logging.DynamicLoggerConfiguration.#ctor*
  nameWithType.vb: DynamicLoggerConfiguration.DynamicLoggerConfiguration(String, Nullable(Of LogLevel), LogLevel)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Steeltoe.Extensions.Logging.DynamicLoggerConfiguration.DynamicLoggerConfiguration(System.String, System.Nullable(Of LogLevel), LogLevel)
  name.vb: DynamicLoggerConfiguration(String, Nullable(Of LogLevel), LogLevel)
- uid: Steeltoe.Extensions.Logging.DynamicLoggerConfiguration.Name
  commentId: P:Steeltoe.Extensions.Logging.DynamicLoggerConfiguration.Name
  id: Name
  parent: Steeltoe.Extensions.Logging.DynamicLoggerConfiguration
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: DynamicLoggerConfiguration.Name
  fullName: Steeltoe.Extensions.Logging.DynamicLoggerConfiguration.Name
  type: Property
  source:
    remote:
      path: src/Logging/src/Abstractions/DynamicLoggerConfiguration.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Name
    path: ../Steeltoe/src/Logging/src/Abstractions/DynamicLoggerConfiguration.cs
    startLine: 26
  assemblies:
  - Steeltoe.Extensions.Logging.Abstractions
  namespace: Steeltoe.Extensions.Logging
  summary: "\nGets namespace this configuration is applied to\n"
  example: []
  syntax:
    content: public string Name { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property Name As String
  overload: Steeltoe.Extensions.Logging.DynamicLoggerConfiguration.Name*
  implements:
  - Steeltoe.Extensions.Logging.ILoggerConfiguration.Name
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Steeltoe.Extensions.Logging.DynamicLoggerConfiguration.ConfiguredLevel
  commentId: P:Steeltoe.Extensions.Logging.DynamicLoggerConfiguration.ConfiguredLevel
  id: ConfiguredLevel
  parent: Steeltoe.Extensions.Logging.DynamicLoggerConfiguration
  langs:
  - csharp
  - vb
  name: ConfiguredLevel
  nameWithType: DynamicLoggerConfiguration.ConfiguredLevel
  fullName: Steeltoe.Extensions.Logging.DynamicLoggerConfiguration.ConfiguredLevel
  type: Property
  source:
    remote:
      path: src/Logging/src/Abstractions/DynamicLoggerConfiguration.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: ConfiguredLevel
    path: ../Steeltoe/src/Logging/src/Abstractions/DynamicLoggerConfiguration.cs
    startLine: 31
  assemblies:
  - Steeltoe.Extensions.Logging.Abstractions
  namespace: Steeltoe.Extensions.Logging
  summary: "\nGets level from base app configuration (if present)\n"
  example: []
  syntax:
    content: public LogLevel? ConfiguredLevel { get; }
    parameters: []
    return:
      type: System.Nullable{LogLevel}
    content.vb: Public ReadOnly Property ConfiguredLevel As LogLevel?
  overload: Steeltoe.Extensions.Logging.DynamicLoggerConfiguration.ConfiguredLevel*
  implements:
  - Steeltoe.Extensions.Logging.ILoggerConfiguration.ConfiguredLevel
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Steeltoe.Extensions.Logging.DynamicLoggerConfiguration.EffectiveLevel
  commentId: P:Steeltoe.Extensions.Logging.DynamicLoggerConfiguration.EffectiveLevel
  id: EffectiveLevel
  parent: Steeltoe.Extensions.Logging.DynamicLoggerConfiguration
  langs:
  - csharp
  - vb
  name: EffectiveLevel
  nameWithType: DynamicLoggerConfiguration.EffectiveLevel
  fullName: Steeltoe.Extensions.Logging.DynamicLoggerConfiguration.EffectiveLevel
  type: Property
  source:
    remote:
      path: src/Logging/src/Abstractions/DynamicLoggerConfiguration.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: EffectiveLevel
    path: ../Steeltoe/src/Logging/src/Abstractions/DynamicLoggerConfiguration.cs
    startLine: 36
  assemblies:
  - Steeltoe.Extensions.Logging.Abstractions
  namespace: Steeltoe.Extensions.Logging
  summary: "\nGets running level of the logger\n"
  example: []
  syntax:
    content: public LogLevel EffectiveLevel { get; }
    parameters: []
    return:
      type: LogLevel
    content.vb: Public ReadOnly Property EffectiveLevel As LogLevel
  overload: Steeltoe.Extensions.Logging.DynamicLoggerConfiguration.EffectiveLevel*
  implements:
  - Steeltoe.Extensions.Logging.ILoggerConfiguration.EffectiveLevel
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Steeltoe.Extensions.Logging.DynamicLoggerConfiguration.GetHashCode
  commentId: M:Steeltoe.Extensions.Logging.DynamicLoggerConfiguration.GetHashCode
  id: GetHashCode
  parent: Steeltoe.Extensions.Logging.DynamicLoggerConfiguration
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: DynamicLoggerConfiguration.GetHashCode()
  fullName: Steeltoe.Extensions.Logging.DynamicLoggerConfiguration.GetHashCode()
  type: Method
  source:
    remote:
      path: src/Logging/src/Abstractions/DynamicLoggerConfiguration.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: GetHashCode
    path: ../Steeltoe/src/Logging/src/Abstractions/DynamicLoggerConfiguration.cs
    startLine: 38
  assemblies:
  - Steeltoe.Extensions.Logging.Abstractions
  namespace: Steeltoe.Extensions.Logging
  syntax:
    content: public override int GetHashCode()
    return:
      type: System.Int32
    content.vb: Public Overrides Function GetHashCode As Integer
  overridden: System.Object.GetHashCode
  overload: Steeltoe.Extensions.Logging.DynamicLoggerConfiguration.GetHashCode*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Steeltoe.Extensions.Logging.DynamicLoggerConfiguration.Equals(System.Object)
  commentId: M:Steeltoe.Extensions.Logging.DynamicLoggerConfiguration.Equals(System.Object)
  id: Equals(System.Object)
  parent: Steeltoe.Extensions.Logging.DynamicLoggerConfiguration
  langs:
  - csharp
  - vb
  name: Equals(Object)
  nameWithType: DynamicLoggerConfiguration.Equals(Object)
  fullName: Steeltoe.Extensions.Logging.DynamicLoggerConfiguration.Equals(System.Object)
  type: Method
  source:
    remote:
      path: src/Logging/src/Abstractions/DynamicLoggerConfiguration.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Equals
    path: ../Steeltoe/src/Logging/src/Abstractions/DynamicLoggerConfiguration.cs
    startLine: 43
  assemblies:
  - Steeltoe.Extensions.Logging.Abstractions
  namespace: Steeltoe.Extensions.Logging
  syntax:
    content: public override bool Equals(object obj)
    parameters:
    - id: obj
      type: System.Object
    return:
      type: System.Boolean
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
  overridden: System.Object.Equals(System.Object)
  overload: Steeltoe.Extensions.Logging.DynamicLoggerConfiguration.Equals*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Steeltoe.Extensions.Logging.DynamicLoggerConfiguration.ToString
  commentId: M:Steeltoe.Extensions.Logging.DynamicLoggerConfiguration.ToString
  id: ToString
  parent: Steeltoe.Extensions.Logging.DynamicLoggerConfiguration
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: DynamicLoggerConfiguration.ToString()
  fullName: Steeltoe.Extensions.Logging.DynamicLoggerConfiguration.ToString()
  type: Method
  source:
    remote:
      path: src/Logging/src/Abstractions/DynamicLoggerConfiguration.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: ToString
    path: ../Steeltoe/src/Logging/src/Abstractions/DynamicLoggerConfiguration.cs
    startLine: 51
  assemblies:
  - Steeltoe.Extensions.Logging.Abstractions
  namespace: Steeltoe.Extensions.Logging
  syntax:
    content: public override string ToString()
    return:
      type: System.String
    content.vb: Public Overrides Function ToString As String
  overridden: System.Object.ToString
  overload: Steeltoe.Extensions.Logging.DynamicLoggerConfiguration.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: Steeltoe.Extensions.Logging
  commentId: N:Steeltoe.Extensions.Logging
  name: Steeltoe.Extensions.Logging
  nameWithType: Steeltoe.Extensions.Logging
  fullName: Steeltoe.Extensions.Logging
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Steeltoe.Extensions.Logging.ILoggerConfiguration
  commentId: T:Steeltoe.Extensions.Logging.ILoggerConfiguration
  parent: Steeltoe.Extensions.Logging
  name: ILoggerConfiguration
  nameWithType: ILoggerConfiguration
  fullName: Steeltoe.Extensions.Logging.ILoggerConfiguration
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Steeltoe.Extensions.Logging.DynamicLoggerConfiguration
  commentId: T:Steeltoe.Extensions.Logging.DynamicLoggerConfiguration
  name: DynamicLoggerConfiguration
  nameWithType: DynamicLoggerConfiguration
  fullName: Steeltoe.Extensions.Logging.DynamicLoggerConfiguration
- uid: Steeltoe.Extensions.Logging.DynamicLoggerConfiguration.#ctor*
  commentId: Overload:Steeltoe.Extensions.Logging.DynamicLoggerConfiguration.#ctor
  name: DynamicLoggerConfiguration
  nameWithType: DynamicLoggerConfiguration.DynamicLoggerConfiguration
  fullName: Steeltoe.Extensions.Logging.DynamicLoggerConfiguration.DynamicLoggerConfiguration
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Nullable{LogLevel}
  commentId: T:System.Nullable{LogLevel}
  parent: System
  definition: System.Nullable`1
  name: Nullable<LogLevel>
  nameWithType: Nullable<LogLevel>
  fullName: System.Nullable<LogLevel>
  nameWithType.vb: Nullable(Of LogLevel)
  fullName.vb: System.Nullable(Of LogLevel)
  name.vb: Nullable(Of LogLevel)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: LogLevel
    name: LogLevel
    nameWithType: LogLevel
    fullName: LogLevel
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: LogLevel
    name: LogLevel
    nameWithType: LogLevel
    fullName: LogLevel
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: LogLevel
  isExternal: true
  name: LogLevel
  nameWithType: LogLevel
  fullName: LogLevel
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Extensions.Logging.DynamicLoggerConfiguration.Name*
  commentId: Overload:Steeltoe.Extensions.Logging.DynamicLoggerConfiguration.Name
  name: Name
  nameWithType: DynamicLoggerConfiguration.Name
  fullName: Steeltoe.Extensions.Logging.DynamicLoggerConfiguration.Name
- uid: Steeltoe.Extensions.Logging.ILoggerConfiguration.Name
  commentId: P:Steeltoe.Extensions.Logging.ILoggerConfiguration.Name
  parent: Steeltoe.Extensions.Logging.ILoggerConfiguration
  name: Name
  nameWithType: ILoggerConfiguration.Name
  fullName: Steeltoe.Extensions.Logging.ILoggerConfiguration.Name
- uid: Steeltoe.Extensions.Logging.DynamicLoggerConfiguration.ConfiguredLevel*
  commentId: Overload:Steeltoe.Extensions.Logging.DynamicLoggerConfiguration.ConfiguredLevel
  name: ConfiguredLevel
  nameWithType: DynamicLoggerConfiguration.ConfiguredLevel
  fullName: Steeltoe.Extensions.Logging.DynamicLoggerConfiguration.ConfiguredLevel
- uid: Steeltoe.Extensions.Logging.ILoggerConfiguration.ConfiguredLevel
  commentId: P:Steeltoe.Extensions.Logging.ILoggerConfiguration.ConfiguredLevel
  parent: Steeltoe.Extensions.Logging.ILoggerConfiguration
  name: ConfiguredLevel
  nameWithType: ILoggerConfiguration.ConfiguredLevel
  fullName: Steeltoe.Extensions.Logging.ILoggerConfiguration.ConfiguredLevel
- uid: Steeltoe.Extensions.Logging.DynamicLoggerConfiguration.EffectiveLevel*
  commentId: Overload:Steeltoe.Extensions.Logging.DynamicLoggerConfiguration.EffectiveLevel
  name: EffectiveLevel
  nameWithType: DynamicLoggerConfiguration.EffectiveLevel
  fullName: Steeltoe.Extensions.Logging.DynamicLoggerConfiguration.EffectiveLevel
- uid: Steeltoe.Extensions.Logging.ILoggerConfiguration.EffectiveLevel
  commentId: P:Steeltoe.Extensions.Logging.ILoggerConfiguration.EffectiveLevel
  parent: Steeltoe.Extensions.Logging.ILoggerConfiguration
  name: EffectiveLevel
  nameWithType: ILoggerConfiguration.EffectiveLevel
  fullName: Steeltoe.Extensions.Logging.ILoggerConfiguration.EffectiveLevel
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Extensions.Logging.DynamicLoggerConfiguration.GetHashCode*
  commentId: Overload:Steeltoe.Extensions.Logging.DynamicLoggerConfiguration.GetHashCode
  name: GetHashCode
  nameWithType: DynamicLoggerConfiguration.GetHashCode
  fullName: Steeltoe.Extensions.Logging.DynamicLoggerConfiguration.GetHashCode
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Extensions.Logging.DynamicLoggerConfiguration.Equals*
  commentId: Overload:Steeltoe.Extensions.Logging.DynamicLoggerConfiguration.Equals
  name: Equals
  nameWithType: DynamicLoggerConfiguration.Equals
  fullName: Steeltoe.Extensions.Logging.DynamicLoggerConfiguration.Equals
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Extensions.Logging.DynamicLoggerConfiguration.ToString*
  commentId: Overload:Steeltoe.Extensions.Logging.DynamicLoggerConfiguration.ToString
  name: ToString
  nameWithType: DynamicLoggerConfiguration.ToString
  fullName: Steeltoe.Extensions.Logging.DynamicLoggerConfiguration.ToString
