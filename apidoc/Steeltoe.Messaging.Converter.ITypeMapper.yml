### YamlMime:ManagedReference
items:
- uid: Steeltoe.Messaging.Converter.ITypeMapper
  commentId: T:Steeltoe.Messaging.Converter.ITypeMapper
  id: ITypeMapper
  parent: Steeltoe.Messaging.Converter
  children:
  - Steeltoe.Messaging.Converter.ITypeMapper.DefaultType
  - Steeltoe.Messaging.Converter.ITypeMapper.FromType(System.Type,Steeltoe.Messaging.IMessageHeaders)
  - Steeltoe.Messaging.Converter.ITypeMapper.GetInferredType(Steeltoe.Messaging.IMessageHeaders)
  - Steeltoe.Messaging.Converter.ITypeMapper.Precedence
  - Steeltoe.Messaging.Converter.ITypeMapper.ToType(Steeltoe.Messaging.IMessageHeaders)
  langs:
  - csharp
  - vb
  name: ITypeMapper
  nameWithType: ITypeMapper
  fullName: Steeltoe.Messaging.Converter.ITypeMapper
  type: Interface
  source:
    remote:
      path: src/Messaging/src/Abstractions/Converter/ITypeMapper.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: ITypeMapper
    path: ../Steeltoe/src/Messaging/src/Abstractions/Converter/ITypeMapper.cs
    startLine: 14
  assemblies:
  - Steeltoe.Messaging.Abstractions
  namespace: Steeltoe.Messaging.Converter
  syntax:
    content: public interface ITypeMapper
    content.vb: Public Interface ITypeMapper
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Steeltoe.Messaging.Converter.ITypeMapper.FromType(System.Type,Steeltoe.Messaging.IMessageHeaders)
  commentId: M:Steeltoe.Messaging.Converter.ITypeMapper.FromType(System.Type,Steeltoe.Messaging.IMessageHeaders)
  id: FromType(System.Type,Steeltoe.Messaging.IMessageHeaders)
  parent: Steeltoe.Messaging.Converter.ITypeMapper
  langs:
  - csharp
  - vb
  name: FromType(Type, IMessageHeaders)
  nameWithType: ITypeMapper.FromType(Type, IMessageHeaders)
  fullName: Steeltoe.Messaging.Converter.ITypeMapper.FromType(System.Type, Steeltoe.Messaging.IMessageHeaders)
  type: Method
  source:
    remote:
      path: src/Messaging/src/Abstractions/Converter/ITypeMapper.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: FromType
    path: ../Steeltoe/src/Messaging/src/Abstractions/Converter/ITypeMapper.cs
    startLine: 16
  assemblies:
  - Steeltoe.Messaging.Abstractions
  namespace: Steeltoe.Messaging.Converter
  syntax:
    content: void FromType(Type type, IMessageHeaders headers)
    parameters:
    - id: type
      type: System.Type
    - id: headers
      type: Steeltoe.Messaging.IMessageHeaders
    content.vb: Sub FromType(type As Type, headers As IMessageHeaders)
  overload: Steeltoe.Messaging.Converter.ITypeMapper.FromType*
- uid: Steeltoe.Messaging.Converter.ITypeMapper.ToType(Steeltoe.Messaging.IMessageHeaders)
  commentId: M:Steeltoe.Messaging.Converter.ITypeMapper.ToType(Steeltoe.Messaging.IMessageHeaders)
  id: ToType(Steeltoe.Messaging.IMessageHeaders)
  parent: Steeltoe.Messaging.Converter.ITypeMapper
  langs:
  - csharp
  - vb
  name: ToType(IMessageHeaders)
  nameWithType: ITypeMapper.ToType(IMessageHeaders)
  fullName: Steeltoe.Messaging.Converter.ITypeMapper.ToType(Steeltoe.Messaging.IMessageHeaders)
  type: Method
  source:
    remote:
      path: src/Messaging/src/Abstractions/Converter/ITypeMapper.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: ToType
    path: ../Steeltoe/src/Messaging/src/Abstractions/Converter/ITypeMapper.cs
    startLine: 18
  assemblies:
  - Steeltoe.Messaging.Abstractions
  namespace: Steeltoe.Messaging.Converter
  syntax:
    content: Type ToType(IMessageHeaders headers)
    parameters:
    - id: headers
      type: Steeltoe.Messaging.IMessageHeaders
    return:
      type: System.Type
    content.vb: Function ToType(headers As IMessageHeaders) As Type
  overload: Steeltoe.Messaging.Converter.ITypeMapper.ToType*
- uid: Steeltoe.Messaging.Converter.ITypeMapper.Precedence
  commentId: P:Steeltoe.Messaging.Converter.ITypeMapper.Precedence
  id: Precedence
  parent: Steeltoe.Messaging.Converter.ITypeMapper
  langs:
  - csharp
  - vb
  name: Precedence
  nameWithType: ITypeMapper.Precedence
  fullName: Steeltoe.Messaging.Converter.ITypeMapper.Precedence
  type: Property
  source:
    remote:
      path: src/Messaging/src/Abstractions/Converter/ITypeMapper.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Precedence
    path: ../Steeltoe/src/Messaging/src/Abstractions/Converter/ITypeMapper.cs
    startLine: 20
  assemblies:
  - Steeltoe.Messaging.Abstractions
  namespace: Steeltoe.Messaging.Converter
  syntax:
    content: TypePrecedence Precedence { get; set; }
    parameters: []
    return:
      type: Steeltoe.Messaging.Converter.TypePrecedence
    content.vb: Property Precedence As TypePrecedence
  overload: Steeltoe.Messaging.Converter.ITypeMapper.Precedence*
  modifiers.csharp:
  - get
  - set
- uid: Steeltoe.Messaging.Converter.ITypeMapper.GetInferredType(Steeltoe.Messaging.IMessageHeaders)
  commentId: M:Steeltoe.Messaging.Converter.ITypeMapper.GetInferredType(Steeltoe.Messaging.IMessageHeaders)
  id: GetInferredType(Steeltoe.Messaging.IMessageHeaders)
  parent: Steeltoe.Messaging.Converter.ITypeMapper
  langs:
  - csharp
  - vb
  name: GetInferredType(IMessageHeaders)
  nameWithType: ITypeMapper.GetInferredType(IMessageHeaders)
  fullName: Steeltoe.Messaging.Converter.ITypeMapper.GetInferredType(Steeltoe.Messaging.IMessageHeaders)
  type: Method
  source:
    remote:
      path: src/Messaging/src/Abstractions/Converter/ITypeMapper.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: GetInferredType
    path: ../Steeltoe/src/Messaging/src/Abstractions/Converter/ITypeMapper.cs
    startLine: 22
  assemblies:
  - Steeltoe.Messaging.Abstractions
  namespace: Steeltoe.Messaging.Converter
  syntax:
    content: Type GetInferredType(IMessageHeaders headers)
    parameters:
    - id: headers
      type: Steeltoe.Messaging.IMessageHeaders
    return:
      type: System.Type
    content.vb: Function GetInferredType(headers As IMessageHeaders) As Type
  overload: Steeltoe.Messaging.Converter.ITypeMapper.GetInferredType*
- uid: Steeltoe.Messaging.Converter.ITypeMapper.DefaultType
  commentId: P:Steeltoe.Messaging.Converter.ITypeMapper.DefaultType
  id: DefaultType
  parent: Steeltoe.Messaging.Converter.ITypeMapper
  langs:
  - csharp
  - vb
  name: DefaultType
  nameWithType: ITypeMapper.DefaultType
  fullName: Steeltoe.Messaging.Converter.ITypeMapper.DefaultType
  type: Property
  source:
    remote:
      path: src/Messaging/src/Abstractions/Converter/ITypeMapper.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: DefaultType
    path: ../Steeltoe/src/Messaging/src/Abstractions/Converter/ITypeMapper.cs
    startLine: 24
  assemblies:
  - Steeltoe.Messaging.Abstractions
  namespace: Steeltoe.Messaging.Converter
  syntax:
    content: Type DefaultType { get; set; }
    parameters: []
    return:
      type: System.Type
    content.vb: Property DefaultType As Type
  overload: Steeltoe.Messaging.Converter.ITypeMapper.DefaultType*
  modifiers.csharp:
  - get
  - set
references:
- uid: Steeltoe.Messaging.Converter
  commentId: N:Steeltoe.Messaging.Converter
  name: Steeltoe.Messaging.Converter
  nameWithType: Steeltoe.Messaging.Converter
  fullName: Steeltoe.Messaging.Converter
- uid: Steeltoe.Messaging.Converter.ITypeMapper.FromType*
  commentId: Overload:Steeltoe.Messaging.Converter.ITypeMapper.FromType
  name: FromType
  nameWithType: ITypeMapper.FromType
  fullName: Steeltoe.Messaging.Converter.ITypeMapper.FromType
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: Steeltoe.Messaging.IMessageHeaders
  commentId: T:Steeltoe.Messaging.IMessageHeaders
  parent: Steeltoe.Messaging
  name: IMessageHeaders
  nameWithType: IMessageHeaders
  fullName: Steeltoe.Messaging.IMessageHeaders
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Steeltoe.Messaging
  commentId: N:Steeltoe.Messaging
  name: Steeltoe.Messaging
  nameWithType: Steeltoe.Messaging
  fullName: Steeltoe.Messaging
- uid: Steeltoe.Messaging.Converter.ITypeMapper.ToType*
  commentId: Overload:Steeltoe.Messaging.Converter.ITypeMapper.ToType
  name: ToType
  nameWithType: ITypeMapper.ToType
  fullName: Steeltoe.Messaging.Converter.ITypeMapper.ToType
- uid: Steeltoe.Messaging.Converter.ITypeMapper.Precedence*
  commentId: Overload:Steeltoe.Messaging.Converter.ITypeMapper.Precedence
  name: Precedence
  nameWithType: ITypeMapper.Precedence
  fullName: Steeltoe.Messaging.Converter.ITypeMapper.Precedence
- uid: Steeltoe.Messaging.Converter.TypePrecedence
  commentId: T:Steeltoe.Messaging.Converter.TypePrecedence
  parent: Steeltoe.Messaging.Converter
  name: TypePrecedence
  nameWithType: TypePrecedence
  fullName: Steeltoe.Messaging.Converter.TypePrecedence
- uid: Steeltoe.Messaging.Converter.ITypeMapper.GetInferredType*
  commentId: Overload:Steeltoe.Messaging.Converter.ITypeMapper.GetInferredType
  name: GetInferredType
  nameWithType: ITypeMapper.GetInferredType
  fullName: Steeltoe.Messaging.Converter.ITypeMapper.GetInferredType
- uid: Steeltoe.Messaging.Converter.ITypeMapper.DefaultType*
  commentId: Overload:Steeltoe.Messaging.Converter.ITypeMapper.DefaultType
  name: DefaultType
  nameWithType: ITypeMapper.DefaultType
  fullName: Steeltoe.Messaging.Converter.ITypeMapper.DefaultType
