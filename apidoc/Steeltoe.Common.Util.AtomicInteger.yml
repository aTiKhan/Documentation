### YamlMime:ManagedReference
items:
- uid: Steeltoe.Common.Util.AtomicInteger
  commentId: T:Steeltoe.Common.Util.AtomicInteger
  id: AtomicInteger
  parent: Steeltoe.Common.Util
  children:
  - Steeltoe.Common.Util.AtomicInteger.#ctor
  - Steeltoe.Common.Util.AtomicInteger.#ctor(System.Int32)
  - Steeltoe.Common.Util.AtomicInteger._value
  - Steeltoe.Common.Util.AtomicInteger.AddAndGet(System.Int32)
  - Steeltoe.Common.Util.AtomicInteger.CompareAndSet(System.Int32,System.Int32)
  - Steeltoe.Common.Util.AtomicInteger.DecrementAndGet
  - Steeltoe.Common.Util.AtomicInteger.GetAndIncrement
  - Steeltoe.Common.Util.AtomicInteger.IncrementAndGet
  - Steeltoe.Common.Util.AtomicInteger.Value
  langs:
  - csharp
  - vb
  name: AtomicInteger
  nameWithType: AtomicInteger
  fullName: Steeltoe.Common.Util.AtomicInteger
  type: Class
  source:
    remote:
      path: src/Common/src/Abstractions/Util/AtomicInteger.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: AtomicInteger
    path: ../Steeltoe/src/Common/src/Abstractions/Util/AtomicInteger.cs
    startLine: 8
  assemblies:
  - Steeltoe.Common.Abstractions
  namespace: Steeltoe.Common.Util
  syntax:
    content: public class AtomicInteger
    content.vb: Public Class AtomicInteger
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Steeltoe.Common.Util.AtomicInteger._value
  commentId: F:Steeltoe.Common.Util.AtomicInteger._value
  id: _value
  parent: Steeltoe.Common.Util.AtomicInteger
  langs:
  - csharp
  - vb
  name: _value
  nameWithType: AtomicInteger._value
  fullName: Steeltoe.Common.Util.AtomicInteger._value
  type: Field
  source:
    remote:
      path: src/Common/src/Abstractions/Util/AtomicInteger.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: _value
    path: ../Steeltoe/src/Common/src/Abstractions/Util/AtomicInteger.cs
    startLine: 10
  assemblies:
  - Steeltoe.Common.Abstractions
  namespace: Steeltoe.Common.Util
  syntax:
    content: protected volatile int _value
    return:
      type: System.Int32
    content.vb: Protected _value As Integer
  modifiers.csharp:
  - protected
  - volatile
  modifiers.vb:
  - Protected
- uid: Steeltoe.Common.Util.AtomicInteger.#ctor
  commentId: M:Steeltoe.Common.Util.AtomicInteger.#ctor
  id: '#ctor'
  parent: Steeltoe.Common.Util.AtomicInteger
  langs:
  - csharp
  - vb
  name: AtomicInteger()
  nameWithType: AtomicInteger.AtomicInteger()
  fullName: Steeltoe.Common.Util.AtomicInteger.AtomicInteger()
  type: Constructor
  source:
    remote:
      path: src/Common/src/Abstractions/Util/AtomicInteger.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: .ctor
    path: ../Steeltoe/src/Common/src/Abstractions/Util/AtomicInteger.cs
    startLine: 12
  assemblies:
  - Steeltoe.Common.Abstractions
  namespace: Steeltoe.Common.Util
  syntax:
    content: public AtomicInteger()
    content.vb: Public Sub New
  overload: Steeltoe.Common.Util.AtomicInteger.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Steeltoe.Common.Util.AtomicInteger.#ctor(System.Int32)
  commentId: M:Steeltoe.Common.Util.AtomicInteger.#ctor(System.Int32)
  id: '#ctor(System.Int32)'
  parent: Steeltoe.Common.Util.AtomicInteger
  langs:
  - csharp
  - vb
  name: AtomicInteger(Int32)
  nameWithType: AtomicInteger.AtomicInteger(Int32)
  fullName: Steeltoe.Common.Util.AtomicInteger.AtomicInteger(System.Int32)
  type: Constructor
  source:
    remote:
      path: src/Common/src/Abstractions/Util/AtomicInteger.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: .ctor
    path: ../Steeltoe/src/Common/src/Abstractions/Util/AtomicInteger.cs
    startLine: 17
  assemblies:
  - Steeltoe.Common.Abstractions
  namespace: Steeltoe.Common.Util
  syntax:
    content: public AtomicInteger(int value)
    parameters:
    - id: value
      type: System.Int32
    content.vb: Public Sub New(value As Integer)
  overload: Steeltoe.Common.Util.AtomicInteger.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Steeltoe.Common.Util.AtomicInteger.Value
  commentId: P:Steeltoe.Common.Util.AtomicInteger.Value
  id: Value
  parent: Steeltoe.Common.Util.AtomicInteger
  langs:
  - csharp
  - vb
  name: Value
  nameWithType: AtomicInteger.Value
  fullName: Steeltoe.Common.Util.AtomicInteger.Value
  type: Property
  source:
    remote:
      path: src/Common/src/Abstractions/Util/AtomicInteger.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Value
    path: ../Steeltoe/src/Common/src/Abstractions/Util/AtomicInteger.cs
    startLine: 22
  assemblies:
  - Steeltoe.Common.Abstractions
  namespace: Steeltoe.Common.Util
  syntax:
    content: public int Value { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property Value As Integer
  overload: Steeltoe.Common.Util.AtomicInteger.Value*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Steeltoe.Common.Util.AtomicInteger.CompareAndSet(System.Int32,System.Int32)
  commentId: M:Steeltoe.Common.Util.AtomicInteger.CompareAndSet(System.Int32,System.Int32)
  id: CompareAndSet(System.Int32,System.Int32)
  parent: Steeltoe.Common.Util.AtomicInteger
  langs:
  - csharp
  - vb
  name: CompareAndSet(Int32, Int32)
  nameWithType: AtomicInteger.CompareAndSet(Int32, Int32)
  fullName: Steeltoe.Common.Util.AtomicInteger.CompareAndSet(System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: src/Common/src/Abstractions/Util/AtomicInteger.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: CompareAndSet
    path: ../Steeltoe/src/Common/src/Abstractions/Util/AtomicInteger.cs
    startLine: 29
  assemblies:
  - Steeltoe.Common.Abstractions
  namespace: Steeltoe.Common.Util
  syntax:
    content: public bool CompareAndSet(int expected, int update)
    parameters:
    - id: expected
      type: System.Int32
    - id: update
      type: System.Int32
    return:
      type: System.Boolean
    content.vb: Public Function CompareAndSet(expected As Integer, update As Integer) As Boolean
  overload: Steeltoe.Common.Util.AtomicInteger.CompareAndSet*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Steeltoe.Common.Util.AtomicInteger.IncrementAndGet
  commentId: M:Steeltoe.Common.Util.AtomicInteger.IncrementAndGet
  id: IncrementAndGet
  parent: Steeltoe.Common.Util.AtomicInteger
  langs:
  - csharp
  - vb
  name: IncrementAndGet()
  nameWithType: AtomicInteger.IncrementAndGet()
  fullName: Steeltoe.Common.Util.AtomicInteger.IncrementAndGet()
  type: Method
  source:
    remote:
      path: src/Common/src/Abstractions/Util/AtomicInteger.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: IncrementAndGet
    path: ../Steeltoe/src/Common/src/Abstractions/Util/AtomicInteger.cs
    startLine: 34
  assemblies:
  - Steeltoe.Common.Abstractions
  namespace: Steeltoe.Common.Util
  syntax:
    content: public int IncrementAndGet()
    return:
      type: System.Int32
    content.vb: Public Function IncrementAndGet As Integer
  overload: Steeltoe.Common.Util.AtomicInteger.IncrementAndGet*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Steeltoe.Common.Util.AtomicInteger.DecrementAndGet
  commentId: M:Steeltoe.Common.Util.AtomicInteger.DecrementAndGet
  id: DecrementAndGet
  parent: Steeltoe.Common.Util.AtomicInteger
  langs:
  - csharp
  - vb
  name: DecrementAndGet()
  nameWithType: AtomicInteger.DecrementAndGet()
  fullName: Steeltoe.Common.Util.AtomicInteger.DecrementAndGet()
  type: Method
  source:
    remote:
      path: src/Common/src/Abstractions/Util/AtomicInteger.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: DecrementAndGet
    path: ../Steeltoe/src/Common/src/Abstractions/Util/AtomicInteger.cs
    startLine: 39
  assemblies:
  - Steeltoe.Common.Abstractions
  namespace: Steeltoe.Common.Util
  syntax:
    content: public int DecrementAndGet()
    return:
      type: System.Int32
    content.vb: Public Function DecrementAndGet As Integer
  overload: Steeltoe.Common.Util.AtomicInteger.DecrementAndGet*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Steeltoe.Common.Util.AtomicInteger.GetAndIncrement
  commentId: M:Steeltoe.Common.Util.AtomicInteger.GetAndIncrement
  id: GetAndIncrement
  parent: Steeltoe.Common.Util.AtomicInteger
  langs:
  - csharp
  - vb
  name: GetAndIncrement()
  nameWithType: AtomicInteger.GetAndIncrement()
  fullName: Steeltoe.Common.Util.AtomicInteger.GetAndIncrement()
  type: Method
  source:
    remote:
      path: src/Common/src/Abstractions/Util/AtomicInteger.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: GetAndIncrement
    path: ../Steeltoe/src/Common/src/Abstractions/Util/AtomicInteger.cs
    startLine: 44
  assemblies:
  - Steeltoe.Common.Abstractions
  namespace: Steeltoe.Common.Util
  syntax:
    content: public int GetAndIncrement()
    return:
      type: System.Int32
    content.vb: Public Function GetAndIncrement As Integer
  overload: Steeltoe.Common.Util.AtomicInteger.GetAndIncrement*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Steeltoe.Common.Util.AtomicInteger.AddAndGet(System.Int32)
  commentId: M:Steeltoe.Common.Util.AtomicInteger.AddAndGet(System.Int32)
  id: AddAndGet(System.Int32)
  parent: Steeltoe.Common.Util.AtomicInteger
  langs:
  - csharp
  - vb
  name: AddAndGet(Int32)
  nameWithType: AtomicInteger.AddAndGet(Int32)
  fullName: Steeltoe.Common.Util.AtomicInteger.AddAndGet(System.Int32)
  type: Method
  source:
    remote:
      path: src/Common/src/Abstractions/Util/AtomicInteger.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: AddAndGet
    path: ../Steeltoe/src/Common/src/Abstractions/Util/AtomicInteger.cs
    startLine: 49
  assemblies:
  - Steeltoe.Common.Abstractions
  namespace: Steeltoe.Common.Util
  syntax:
    content: public int AddAndGet(int value)
    parameters:
    - id: value
      type: System.Int32
    return:
      type: System.Int32
    content.vb: Public Function AddAndGet(value As Integer) As Integer
  overload: Steeltoe.Common.Util.AtomicInteger.AddAndGet*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Steeltoe.Common.Util
  commentId: N:Steeltoe.Common.Util
  name: Steeltoe.Common.Util
  nameWithType: Steeltoe.Common.Util
  fullName: Steeltoe.Common.Util
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Steeltoe.Common.Util.AtomicInteger.#ctor*
  commentId: Overload:Steeltoe.Common.Util.AtomicInteger.#ctor
  name: AtomicInteger
  nameWithType: AtomicInteger.AtomicInteger
  fullName: Steeltoe.Common.Util.AtomicInteger.AtomicInteger
- uid: Steeltoe.Common.Util.AtomicInteger.Value*
  commentId: Overload:Steeltoe.Common.Util.AtomicInteger.Value
  name: Value
  nameWithType: AtomicInteger.Value
  fullName: Steeltoe.Common.Util.AtomicInteger.Value
- uid: Steeltoe.Common.Util.AtomicInteger.CompareAndSet*
  commentId: Overload:Steeltoe.Common.Util.AtomicInteger.CompareAndSet
  name: CompareAndSet
  nameWithType: AtomicInteger.CompareAndSet
  fullName: Steeltoe.Common.Util.AtomicInteger.CompareAndSet
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Steeltoe.Common.Util.AtomicInteger.IncrementAndGet*
  commentId: Overload:Steeltoe.Common.Util.AtomicInteger.IncrementAndGet
  name: IncrementAndGet
  nameWithType: AtomicInteger.IncrementAndGet
  fullName: Steeltoe.Common.Util.AtomicInteger.IncrementAndGet
- uid: Steeltoe.Common.Util.AtomicInteger.DecrementAndGet*
  commentId: Overload:Steeltoe.Common.Util.AtomicInteger.DecrementAndGet
  name: DecrementAndGet
  nameWithType: AtomicInteger.DecrementAndGet
  fullName: Steeltoe.Common.Util.AtomicInteger.DecrementAndGet
- uid: Steeltoe.Common.Util.AtomicInteger.GetAndIncrement*
  commentId: Overload:Steeltoe.Common.Util.AtomicInteger.GetAndIncrement
  name: GetAndIncrement
  nameWithType: AtomicInteger.GetAndIncrement
  fullName: Steeltoe.Common.Util.AtomicInteger.GetAndIncrement
- uid: Steeltoe.Common.Util.AtomicInteger.AddAndGet*
  commentId: Overload:Steeltoe.Common.Util.AtomicInteger.AddAndGet
  name: AddAndGet
  nameWithType: AtomicInteger.AddAndGet
  fullName: Steeltoe.Common.Util.AtomicInteger.AddAndGet
