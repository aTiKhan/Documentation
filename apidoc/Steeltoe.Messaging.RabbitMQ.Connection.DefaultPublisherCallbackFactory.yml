### YamlMime:ManagedReference
items:
- uid: Steeltoe.Messaging.RabbitMQ.Connection.DefaultPublisherCallbackFactory
  commentId: T:Steeltoe.Messaging.RabbitMQ.Connection.DefaultPublisherCallbackFactory
  id: DefaultPublisherCallbackFactory
  parent: Steeltoe.Messaging.RabbitMQ.Connection
  children:
  - Steeltoe.Messaging.RabbitMQ.Connection.DefaultPublisherCallbackFactory.#ctor(Microsoft.Extensions.Logging.ILoggerFactory)
  - Steeltoe.Messaging.RabbitMQ.Connection.DefaultPublisherCallbackFactory.CreateChannel(RabbitMQ.Client.IModel)
  langs:
  - csharp
  - vb
  name: DefaultPublisherCallbackFactory
  nameWithType: DefaultPublisherCallbackFactory
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.DefaultPublisherCallbackFactory
  type: Class
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Connection/DefaultPublisherCallbackFactory.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: DefaultPublisherCallbackFactory
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Connection/DefaultPublisherCallbackFactory.cs
    startLine: 9
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Connection
  syntax:
    content: 'public class DefaultPublisherCallbackFactory : IPublisherCallbackChannelFactory'
    content.vb: >-
      Public Class DefaultPublisherCallbackFactory

          Implements IPublisherCallbackChannelFactory
  inheritance:
  - System.Object
  implements:
  - Steeltoe.Messaging.RabbitMQ.Connection.IPublisherCallbackChannelFactory
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Steeltoe.Messaging.RabbitMQ.Connection.DefaultPublisherCallbackFactory.#ctor(Microsoft.Extensions.Logging.ILoggerFactory)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Connection.DefaultPublisherCallbackFactory.#ctor(Microsoft.Extensions.Logging.ILoggerFactory)
  id: '#ctor(Microsoft.Extensions.Logging.ILoggerFactory)'
  parent: Steeltoe.Messaging.RabbitMQ.Connection.DefaultPublisherCallbackFactory
  langs:
  - csharp
  - vb
  name: DefaultPublisherCallbackFactory(ILoggerFactory)
  nameWithType: DefaultPublisherCallbackFactory.DefaultPublisherCallbackFactory(ILoggerFactory)
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.DefaultPublisherCallbackFactory.DefaultPublisherCallbackFactory(Microsoft.Extensions.Logging.ILoggerFactory)
  type: Constructor
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Connection/DefaultPublisherCallbackFactory.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: .ctor
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Connection/DefaultPublisherCallbackFactory.cs
    startLine: 13
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Connection
  syntax:
    content: public DefaultPublisherCallbackFactory(ILoggerFactory loggerFactory)
    parameters:
    - id: loggerFactory
      type: Microsoft.Extensions.Logging.ILoggerFactory
    content.vb: Public Sub New(loggerFactory As ILoggerFactory)
  overload: Steeltoe.Messaging.RabbitMQ.Connection.DefaultPublisherCallbackFactory.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Steeltoe.Messaging.RabbitMQ.Connection.DefaultPublisherCallbackFactory.CreateChannel(RabbitMQ.Client.IModel)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Connection.DefaultPublisherCallbackFactory.CreateChannel(RabbitMQ.Client.IModel)
  id: CreateChannel(RabbitMQ.Client.IModel)
  parent: Steeltoe.Messaging.RabbitMQ.Connection.DefaultPublisherCallbackFactory
  langs:
  - csharp
  - vb
  name: CreateChannel(IModel)
  nameWithType: DefaultPublisherCallbackFactory.CreateChannel(IModel)
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.DefaultPublisherCallbackFactory.CreateChannel(RabbitMQ.Client.IModel)
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Connection/DefaultPublisherCallbackFactory.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: CreateChannel
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Connection/DefaultPublisherCallbackFactory.cs
    startLine: 18
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Connection
  syntax:
    content: public IPublisherCallbackChannel CreateChannel(IModel channel)
    parameters:
    - id: channel
      type: RabbitMQ.Client.IModel
    return:
      type: Steeltoe.Messaging.RabbitMQ.Connection.IPublisherCallbackChannel
    content.vb: Public Function CreateChannel(channel As IModel) As IPublisherCallbackChannel
  overload: Steeltoe.Messaging.RabbitMQ.Connection.DefaultPublisherCallbackFactory.CreateChannel*
  implements:
  - Steeltoe.Messaging.RabbitMQ.Connection.IPublisherCallbackChannelFactory.CreateChannel(RabbitMQ.Client.IModel)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Steeltoe.Messaging.RabbitMQ.Connection
  commentId: N:Steeltoe.Messaging.RabbitMQ.Connection
  name: Steeltoe.Messaging.RabbitMQ.Connection
  nameWithType: Steeltoe.Messaging.RabbitMQ.Connection
  fullName: Steeltoe.Messaging.RabbitMQ.Connection
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Steeltoe.Messaging.RabbitMQ.Connection.IPublisherCallbackChannelFactory
  commentId: T:Steeltoe.Messaging.RabbitMQ.Connection.IPublisherCallbackChannelFactory
  parent: Steeltoe.Messaging.RabbitMQ.Connection
  name: IPublisherCallbackChannelFactory
  nameWithType: IPublisherCallbackChannelFactory
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.IPublisherCallbackChannelFactory
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Steeltoe.Messaging.RabbitMQ.Connection.DefaultPublisherCallbackFactory.#ctor*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Connection.DefaultPublisherCallbackFactory.#ctor
  name: DefaultPublisherCallbackFactory
  nameWithType: DefaultPublisherCallbackFactory.DefaultPublisherCallbackFactory
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.DefaultPublisherCallbackFactory.DefaultPublisherCallbackFactory
- uid: Microsoft.Extensions.Logging.ILoggerFactory
  commentId: T:Microsoft.Extensions.Logging.ILoggerFactory
  parent: Microsoft.Extensions.Logging
  isExternal: true
  name: ILoggerFactory
  nameWithType: ILoggerFactory
  fullName: Microsoft.Extensions.Logging.ILoggerFactory
- uid: Microsoft.Extensions.Logging
  commentId: N:Microsoft.Extensions.Logging
  isExternal: true
  name: Microsoft.Extensions.Logging
  nameWithType: Microsoft.Extensions.Logging
  fullName: Microsoft.Extensions.Logging
- uid: Steeltoe.Messaging.RabbitMQ.Connection.DefaultPublisherCallbackFactory.CreateChannel*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Connection.DefaultPublisherCallbackFactory.CreateChannel
  name: CreateChannel
  nameWithType: DefaultPublisherCallbackFactory.CreateChannel
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.DefaultPublisherCallbackFactory.CreateChannel
- uid: Steeltoe.Messaging.RabbitMQ.Connection.IPublisherCallbackChannelFactory.CreateChannel(RabbitMQ.Client.IModel)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Connection.IPublisherCallbackChannelFactory.CreateChannel(RabbitMQ.Client.IModel)
  parent: Steeltoe.Messaging.RabbitMQ.Connection.IPublisherCallbackChannelFactory
  isExternal: true
  name: CreateChannel(IModel)
  nameWithType: IPublisherCallbackChannelFactory.CreateChannel(IModel)
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.IPublisherCallbackChannelFactory.CreateChannel(RabbitMQ.Client.IModel)
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Connection.IPublisherCallbackChannelFactory.CreateChannel(RabbitMQ.Client.IModel)
    name: CreateChannel
    nameWithType: IPublisherCallbackChannelFactory.CreateChannel
    fullName: Steeltoe.Messaging.RabbitMQ.Connection.IPublisherCallbackChannelFactory.CreateChannel
  - name: (
    nameWithType: (
    fullName: (
  - uid: RabbitMQ.Client.IModel
    name: IModel
    nameWithType: IModel
    fullName: RabbitMQ.Client.IModel
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Connection.IPublisherCallbackChannelFactory.CreateChannel(RabbitMQ.Client.IModel)
    name: CreateChannel
    nameWithType: IPublisherCallbackChannelFactory.CreateChannel
    fullName: Steeltoe.Messaging.RabbitMQ.Connection.IPublisherCallbackChannelFactory.CreateChannel
  - name: (
    nameWithType: (
    fullName: (
  - uid: RabbitMQ.Client.IModel
    name: IModel
    nameWithType: IModel
    fullName: RabbitMQ.Client.IModel
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: RabbitMQ.Client.IModel
  commentId: T:RabbitMQ.Client.IModel
  parent: RabbitMQ.Client
  isExternal: true
  name: IModel
  nameWithType: IModel
  fullName: RabbitMQ.Client.IModel
- uid: Steeltoe.Messaging.RabbitMQ.Connection.IPublisherCallbackChannel
  commentId: T:Steeltoe.Messaging.RabbitMQ.Connection.IPublisherCallbackChannel
  parent: Steeltoe.Messaging.RabbitMQ.Connection
  name: IPublisherCallbackChannel
  nameWithType: IPublisherCallbackChannel
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.IPublisherCallbackChannel
- uid: RabbitMQ.Client
  commentId: N:RabbitMQ.Client
  isExternal: true
  name: RabbitMQ.Client
  nameWithType: RabbitMQ.Client
  fullName: RabbitMQ.Client
