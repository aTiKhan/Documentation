### YamlMime:ManagedReference
items:
- uid: Steeltoe.CircuitBreaker.ICircuitBreaker
  commentId: T:Steeltoe.CircuitBreaker.ICircuitBreaker
  id: ICircuitBreaker
  parent: Steeltoe.CircuitBreaker
  children:
  - Steeltoe.CircuitBreaker.ICircuitBreaker.AllowRequest
  - Steeltoe.CircuitBreaker.ICircuitBreaker.IsOpen
  - Steeltoe.CircuitBreaker.ICircuitBreaker.MarkSuccess
  langs:
  - csharp
  - vb
  name: ICircuitBreaker
  nameWithType: ICircuitBreaker
  fullName: Steeltoe.CircuitBreaker.ICircuitBreaker
  type: Interface
  source:
    remote:
      path: src/CircuitBreaker/src/Abstractions/ICircuitBreaker.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: ICircuitBreaker
    path: ../Steeltoe/src/CircuitBreaker/src/Abstractions/ICircuitBreaker.cs
    startLine: 6
  assemblies:
  - Steeltoe.CircuitBreaker.Abstractions
  namespace: Steeltoe.CircuitBreaker
  syntax:
    content: public interface ICircuitBreaker
    content.vb: Public Interface ICircuitBreaker
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Steeltoe.CircuitBreaker.ICircuitBreaker.AllowRequest
  commentId: P:Steeltoe.CircuitBreaker.ICircuitBreaker.AllowRequest
  id: AllowRequest
  parent: Steeltoe.CircuitBreaker.ICircuitBreaker
  langs:
  - csharp
  - vb
  name: AllowRequest
  nameWithType: ICircuitBreaker.AllowRequest
  fullName: Steeltoe.CircuitBreaker.ICircuitBreaker.AllowRequest
  type: Property
  source:
    remote:
      path: src/CircuitBreaker/src/Abstractions/ICircuitBreaker.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: AllowRequest
    path: ../Steeltoe/src/CircuitBreaker/src/Abstractions/ICircuitBreaker.cs
    startLine: 8
  assemblies:
  - Steeltoe.CircuitBreaker.Abstractions
  namespace: Steeltoe.CircuitBreaker
  syntax:
    content: bool AllowRequest { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: ReadOnly Property AllowRequest As Boolean
  overload: Steeltoe.CircuitBreaker.ICircuitBreaker.AllowRequest*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Steeltoe.CircuitBreaker.ICircuitBreaker.IsOpen
  commentId: P:Steeltoe.CircuitBreaker.ICircuitBreaker.IsOpen
  id: IsOpen
  parent: Steeltoe.CircuitBreaker.ICircuitBreaker
  langs:
  - csharp
  - vb
  name: IsOpen
  nameWithType: ICircuitBreaker.IsOpen
  fullName: Steeltoe.CircuitBreaker.ICircuitBreaker.IsOpen
  type: Property
  source:
    remote:
      path: src/CircuitBreaker/src/Abstractions/ICircuitBreaker.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: IsOpen
    path: ../Steeltoe/src/CircuitBreaker/src/Abstractions/ICircuitBreaker.cs
    startLine: 10
  assemblies:
  - Steeltoe.CircuitBreaker.Abstractions
  namespace: Steeltoe.CircuitBreaker
  syntax:
    content: bool IsOpen { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: ReadOnly Property IsOpen As Boolean
  overload: Steeltoe.CircuitBreaker.ICircuitBreaker.IsOpen*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Steeltoe.CircuitBreaker.ICircuitBreaker.MarkSuccess
  commentId: M:Steeltoe.CircuitBreaker.ICircuitBreaker.MarkSuccess
  id: MarkSuccess
  parent: Steeltoe.CircuitBreaker.ICircuitBreaker
  langs:
  - csharp
  - vb
  name: MarkSuccess()
  nameWithType: ICircuitBreaker.MarkSuccess()
  fullName: Steeltoe.CircuitBreaker.ICircuitBreaker.MarkSuccess()
  type: Method
  source:
    remote:
      path: src/CircuitBreaker/src/Abstractions/ICircuitBreaker.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: MarkSuccess
    path: ../Steeltoe/src/CircuitBreaker/src/Abstractions/ICircuitBreaker.cs
    startLine: 12
  assemblies:
  - Steeltoe.CircuitBreaker.Abstractions
  namespace: Steeltoe.CircuitBreaker
  syntax:
    content: void MarkSuccess()
    content.vb: Sub MarkSuccess
  overload: Steeltoe.CircuitBreaker.ICircuitBreaker.MarkSuccess*
references:
- uid: Steeltoe.CircuitBreaker
  commentId: N:Steeltoe.CircuitBreaker
  name: Steeltoe.CircuitBreaker
  nameWithType: Steeltoe.CircuitBreaker
  fullName: Steeltoe.CircuitBreaker
- uid: Steeltoe.CircuitBreaker.ICircuitBreaker.AllowRequest*
  commentId: Overload:Steeltoe.CircuitBreaker.ICircuitBreaker.AllowRequest
  name: AllowRequest
  nameWithType: ICircuitBreaker.AllowRequest
  fullName: Steeltoe.CircuitBreaker.ICircuitBreaker.AllowRequest
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Steeltoe.CircuitBreaker.ICircuitBreaker.IsOpen*
  commentId: Overload:Steeltoe.CircuitBreaker.ICircuitBreaker.IsOpen
  name: IsOpen
  nameWithType: ICircuitBreaker.IsOpen
  fullName: Steeltoe.CircuitBreaker.ICircuitBreaker.IsOpen
- uid: Steeltoe.CircuitBreaker.ICircuitBreaker.MarkSuccess*
  commentId: Overload:Steeltoe.CircuitBreaker.ICircuitBreaker.MarkSuccess
  name: MarkSuccess
  nameWithType: ICircuitBreaker.MarkSuccess
  fullName: Steeltoe.CircuitBreaker.ICircuitBreaker.MarkSuccess
