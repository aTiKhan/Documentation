### YamlMime:ManagedReference
items:
- uid: Steeltoe.Messaging.RabbitMQ.Support.SendRetryContextAccessor
  commentId: T:Steeltoe.Messaging.RabbitMQ.Support.SendRetryContextAccessor
  id: SendRetryContextAccessor
  parent: Steeltoe.Messaging.RabbitMQ.Support
  children:
  - Steeltoe.Messaging.RabbitMQ.Support.SendRetryContextAccessor.ADDRESS
  - Steeltoe.Messaging.RabbitMQ.Support.SendRetryContextAccessor.GetAddress(Steeltoe.Common.Retry.IRetryContext)
  - Steeltoe.Messaging.RabbitMQ.Support.SendRetryContextAccessor.GetMessage(Steeltoe.Common.Retry.IRetryContext)
  - Steeltoe.Messaging.RabbitMQ.Support.SendRetryContextAccessor.MESSAGE
  langs:
  - csharp
  - vb
  name: SendRetryContextAccessor
  nameWithType: SendRetryContextAccessor
  fullName: Steeltoe.Messaging.RabbitMQ.Support.SendRetryContextAccessor
  type: Class
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Support/SendRetryContextAccessor.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: SendRetryContextAccessor
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Support/SendRetryContextAccessor.cs
    startLine: 9
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Support
  syntax:
    content: public static class SendRetryContextAccessor
    content.vb: Public Module SendRetryContextAccessor
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Steeltoe.Messaging.RabbitMQ.Support.SendRetryContextAccessor.MESSAGE
  commentId: F:Steeltoe.Messaging.RabbitMQ.Support.SendRetryContextAccessor.MESSAGE
  id: MESSAGE
  parent: Steeltoe.Messaging.RabbitMQ.Support.SendRetryContextAccessor
  langs:
  - csharp
  - vb
  name: MESSAGE
  nameWithType: SendRetryContextAccessor.MESSAGE
  fullName: Steeltoe.Messaging.RabbitMQ.Support.SendRetryContextAccessor.MESSAGE
  type: Field
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Support/SendRetryContextAccessor.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: MESSAGE
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Support/SendRetryContextAccessor.cs
    startLine: 11
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Support
  syntax:
    content: public const string MESSAGE = "message"
    return:
      type: System.String
    content.vb: Public Const MESSAGE As String = "message"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Steeltoe.Messaging.RabbitMQ.Support.SendRetryContextAccessor.ADDRESS
  commentId: F:Steeltoe.Messaging.RabbitMQ.Support.SendRetryContextAccessor.ADDRESS
  id: ADDRESS
  parent: Steeltoe.Messaging.RabbitMQ.Support.SendRetryContextAccessor
  langs:
  - csharp
  - vb
  name: ADDRESS
  nameWithType: SendRetryContextAccessor.ADDRESS
  fullName: Steeltoe.Messaging.RabbitMQ.Support.SendRetryContextAccessor.ADDRESS
  type: Field
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Support/SendRetryContextAccessor.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: ADDRESS
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Support/SendRetryContextAccessor.cs
    startLine: 12
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Support
  syntax:
    content: public const string ADDRESS = "address"
    return:
      type: System.String
    content.vb: Public Const ADDRESS As String = "address"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Steeltoe.Messaging.RabbitMQ.Support.SendRetryContextAccessor.GetMessage(Steeltoe.Common.Retry.IRetryContext)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Support.SendRetryContextAccessor.GetMessage(Steeltoe.Common.Retry.IRetryContext)
  id: GetMessage(Steeltoe.Common.Retry.IRetryContext)
  parent: Steeltoe.Messaging.RabbitMQ.Support.SendRetryContextAccessor
  langs:
  - csharp
  - vb
  name: GetMessage(IRetryContext)
  nameWithType: SendRetryContextAccessor.GetMessage(IRetryContext)
  fullName: Steeltoe.Messaging.RabbitMQ.Support.SendRetryContextAccessor.GetMessage(Steeltoe.Common.Retry.IRetryContext)
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Support/SendRetryContextAccessor.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: GetMessage
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Support/SendRetryContextAccessor.cs
    startLine: 14
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Support
  syntax:
    content: public static IMessage GetMessage(IRetryContext context)
    parameters:
    - id: context
      type: Steeltoe.Common.Retry.IRetryContext
    return:
      type: Steeltoe.Messaging.IMessage
    content.vb: Public Shared Function GetMessage(context As IRetryContext) As IMessage
  overload: Steeltoe.Messaging.RabbitMQ.Support.SendRetryContextAccessor.GetMessage*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Steeltoe.Messaging.RabbitMQ.Support.SendRetryContextAccessor.GetAddress(Steeltoe.Common.Retry.IRetryContext)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Support.SendRetryContextAccessor.GetAddress(Steeltoe.Common.Retry.IRetryContext)
  id: GetAddress(Steeltoe.Common.Retry.IRetryContext)
  parent: Steeltoe.Messaging.RabbitMQ.Support.SendRetryContextAccessor
  langs:
  - csharp
  - vb
  name: GetAddress(IRetryContext)
  nameWithType: SendRetryContextAccessor.GetAddress(IRetryContext)
  fullName: Steeltoe.Messaging.RabbitMQ.Support.SendRetryContextAccessor.GetAddress(Steeltoe.Common.Retry.IRetryContext)
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Support/SendRetryContextAccessor.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: GetAddress
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Support/SendRetryContextAccessor.cs
    startLine: 19
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Support
  syntax:
    content: public static Address GetAddress(IRetryContext context)
    parameters:
    - id: context
      type: Steeltoe.Common.Retry.IRetryContext
    return:
      type: Steeltoe.Messaging.RabbitMQ.Core.Address
    content.vb: Public Shared Function GetAddress(context As IRetryContext) As Address
  overload: Steeltoe.Messaging.RabbitMQ.Support.SendRetryContextAccessor.GetAddress*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Steeltoe.Messaging.RabbitMQ.Support
  commentId: N:Steeltoe.Messaging.RabbitMQ.Support
  name: Steeltoe.Messaging.RabbitMQ.Support
  nameWithType: Steeltoe.Messaging.RabbitMQ.Support
  fullName: Steeltoe.Messaging.RabbitMQ.Support
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Steeltoe.Messaging.RabbitMQ.Support.SendRetryContextAccessor.GetMessage*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Support.SendRetryContextAccessor.GetMessage
  name: GetMessage
  nameWithType: SendRetryContextAccessor.GetMessage
  fullName: Steeltoe.Messaging.RabbitMQ.Support.SendRetryContextAccessor.GetMessage
- uid: Steeltoe.Common.Retry.IRetryContext
  commentId: T:Steeltoe.Common.Retry.IRetryContext
  parent: Steeltoe.Common.Retry
  name: IRetryContext
  nameWithType: IRetryContext
  fullName: Steeltoe.Common.Retry.IRetryContext
- uid: Steeltoe.Messaging.IMessage
  commentId: T:Steeltoe.Messaging.IMessage
  parent: Steeltoe.Messaging
  name: IMessage
  nameWithType: IMessage
  fullName: Steeltoe.Messaging.IMessage
- uid: Steeltoe.Common.Retry
  commentId: N:Steeltoe.Common.Retry
  name: Steeltoe.Common.Retry
  nameWithType: Steeltoe.Common.Retry
  fullName: Steeltoe.Common.Retry
- uid: Steeltoe.Messaging
  commentId: N:Steeltoe.Messaging
  name: Steeltoe.Messaging
  nameWithType: Steeltoe.Messaging
  fullName: Steeltoe.Messaging
- uid: Steeltoe.Messaging.RabbitMQ.Support.SendRetryContextAccessor.GetAddress*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Support.SendRetryContextAccessor.GetAddress
  name: GetAddress
  nameWithType: SendRetryContextAccessor.GetAddress
  fullName: Steeltoe.Messaging.RabbitMQ.Support.SendRetryContextAccessor.GetAddress
- uid: Steeltoe.Messaging.RabbitMQ.Core.Address
  commentId: T:Steeltoe.Messaging.RabbitMQ.Core.Address
  parent: Steeltoe.Messaging.RabbitMQ.Core
  name: Address
  nameWithType: Address
  fullName: Steeltoe.Messaging.RabbitMQ.Core.Address
- uid: Steeltoe.Messaging.RabbitMQ.Core
  commentId: N:Steeltoe.Messaging.RabbitMQ.Core
  name: Steeltoe.Messaging.RabbitMQ.Core
  nameWithType: Steeltoe.Messaging.RabbitMQ.Core
  fullName: Steeltoe.Messaging.RabbitMQ.Core
