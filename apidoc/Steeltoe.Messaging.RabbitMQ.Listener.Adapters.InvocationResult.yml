### YamlMime:ManagedReference
items:
- uid: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.InvocationResult
  commentId: T:Steeltoe.Messaging.RabbitMQ.Listener.Adapters.InvocationResult
  id: InvocationResult
  parent: Steeltoe.Messaging.RabbitMQ.Listener.Adapters
  children:
  - Steeltoe.Messaging.RabbitMQ.Listener.Adapters.InvocationResult.#ctor(System.Object,Steeltoe.Common.Expression.IExpression,System.Type,System.Object,System.Reflection.MethodInfo)
  - Steeltoe.Messaging.RabbitMQ.Listener.Adapters.InvocationResult.Instance
  - Steeltoe.Messaging.RabbitMQ.Listener.Adapters.InvocationResult.Method
  - Steeltoe.Messaging.RabbitMQ.Listener.Adapters.InvocationResult.ReturnType
  - Steeltoe.Messaging.RabbitMQ.Listener.Adapters.InvocationResult.ReturnValue
  - Steeltoe.Messaging.RabbitMQ.Listener.Adapters.InvocationResult.SendTo
  - Steeltoe.Messaging.RabbitMQ.Listener.Adapters.InvocationResult.ToString
  langs:
  - csharp
  - vb
  name: InvocationResult
  nameWithType: InvocationResult
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.InvocationResult
  type: Class
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Listener/Adapters/InvocationResult.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: InvocationResult
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Listener/Adapters/InvocationResult.cs
    startLine: 10
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Listener.Adapters
  syntax:
    content: public class InvocationResult
    content.vb: Public Class InvocationResult
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.InvocationResult.#ctor(System.Object,Steeltoe.Common.Expression.IExpression,System.Type,System.Object,System.Reflection.MethodInfo)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Listener.Adapters.InvocationResult.#ctor(System.Object,Steeltoe.Common.Expression.IExpression,System.Type,System.Object,System.Reflection.MethodInfo)
  id: '#ctor(System.Object,Steeltoe.Common.Expression.IExpression,System.Type,System.Object,System.Reflection.MethodInfo)'
  parent: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.InvocationResult
  langs:
  - csharp
  - vb
  name: InvocationResult(Object, IExpression, Type, Object, MethodInfo)
  nameWithType: InvocationResult.InvocationResult(Object, IExpression, Type, Object, MethodInfo)
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.InvocationResult.InvocationResult(System.Object, Steeltoe.Common.Expression.IExpression, System.Type, System.Object, System.Reflection.MethodInfo)
  type: Constructor
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Listener/Adapters/InvocationResult.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: .ctor
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Listener/Adapters/InvocationResult.cs
    startLine: 12
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Listener.Adapters
  syntax:
    content: public InvocationResult(object result, IExpression sendTo, Type returnType, object instance, MethodInfo method)
    parameters:
    - id: result
      type: System.Object
    - id: sendTo
      type: Steeltoe.Common.Expression.IExpression
    - id: returnType
      type: System.Type
    - id: instance
      type: System.Object
    - id: method
      type: System.Reflection.MethodInfo
    content.vb: Public Sub New(result As Object, sendTo As IExpression, returnType As Type, instance As Object, method As MethodInfo)
  overload: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.InvocationResult.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.InvocationResult.ReturnValue
  commentId: P:Steeltoe.Messaging.RabbitMQ.Listener.Adapters.InvocationResult.ReturnValue
  id: ReturnValue
  parent: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.InvocationResult
  langs:
  - csharp
  - vb
  name: ReturnValue
  nameWithType: InvocationResult.ReturnValue
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.InvocationResult.ReturnValue
  type: Property
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Listener/Adapters/InvocationResult.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: ReturnValue
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Listener/Adapters/InvocationResult.cs
    startLine: 21
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Listener.Adapters
  syntax:
    content: public object ReturnValue { get; }
    parameters: []
    return:
      type: System.Object
    content.vb: Public ReadOnly Property ReturnValue As Object
  overload: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.InvocationResult.ReturnValue*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.InvocationResult.SendTo
  commentId: P:Steeltoe.Messaging.RabbitMQ.Listener.Adapters.InvocationResult.SendTo
  id: SendTo
  parent: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.InvocationResult
  langs:
  - csharp
  - vb
  name: SendTo
  nameWithType: InvocationResult.SendTo
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.InvocationResult.SendTo
  type: Property
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Listener/Adapters/InvocationResult.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: SendTo
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Listener/Adapters/InvocationResult.cs
    startLine: 23
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Listener.Adapters
  syntax:
    content: public IExpression SendTo { get; }
    parameters: []
    return:
      type: Steeltoe.Common.Expression.IExpression
    content.vb: Public ReadOnly Property SendTo As IExpression
  overload: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.InvocationResult.SendTo*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.InvocationResult.ReturnType
  commentId: P:Steeltoe.Messaging.RabbitMQ.Listener.Adapters.InvocationResult.ReturnType
  id: ReturnType
  parent: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.InvocationResult
  langs:
  - csharp
  - vb
  name: ReturnType
  nameWithType: InvocationResult.ReturnType
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.InvocationResult.ReturnType
  type: Property
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Listener/Adapters/InvocationResult.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: ReturnType
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Listener/Adapters/InvocationResult.cs
    startLine: 25
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Listener.Adapters
  syntax:
    content: public Type ReturnType { get; }
    parameters: []
    return:
      type: System.Type
    content.vb: Public ReadOnly Property ReturnType As Type
  overload: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.InvocationResult.ReturnType*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.InvocationResult.Instance
  commentId: P:Steeltoe.Messaging.RabbitMQ.Listener.Adapters.InvocationResult.Instance
  id: Instance
  parent: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.InvocationResult
  langs:
  - csharp
  - vb
  name: Instance
  nameWithType: InvocationResult.Instance
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.InvocationResult.Instance
  type: Property
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Listener/Adapters/InvocationResult.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Instance
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Listener/Adapters/InvocationResult.cs
    startLine: 27
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Listener.Adapters
  syntax:
    content: public object Instance { get; }
    parameters: []
    return:
      type: System.Object
    content.vb: Public ReadOnly Property Instance As Object
  overload: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.InvocationResult.Instance*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.InvocationResult.Method
  commentId: P:Steeltoe.Messaging.RabbitMQ.Listener.Adapters.InvocationResult.Method
  id: Method
  parent: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.InvocationResult
  langs:
  - csharp
  - vb
  name: Method
  nameWithType: InvocationResult.Method
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.InvocationResult.Method
  type: Property
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Listener/Adapters/InvocationResult.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Method
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Listener/Adapters/InvocationResult.cs
    startLine: 29
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Listener.Adapters
  syntax:
    content: public MethodInfo Method { get; }
    parameters: []
    return:
      type: System.Reflection.MethodInfo
    content.vb: Public ReadOnly Property Method As MethodInfo
  overload: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.InvocationResult.Method*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.InvocationResult.ToString
  commentId: M:Steeltoe.Messaging.RabbitMQ.Listener.Adapters.InvocationResult.ToString
  id: ToString
  parent: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.InvocationResult
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: InvocationResult.ToString()
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.InvocationResult.ToString()
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Listener/Adapters/InvocationResult.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: ToString
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Listener/Adapters/InvocationResult.cs
    startLine: 31
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Listener.Adapters
  syntax:
    content: public override string ToString()
    return:
      type: System.String
    content.vb: Public Overrides Function ToString As String
  overridden: System.Object.ToString
  overload: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.InvocationResult.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: Steeltoe.Messaging.RabbitMQ.Listener.Adapters
  commentId: N:Steeltoe.Messaging.RabbitMQ.Listener.Adapters
  name: Steeltoe.Messaging.RabbitMQ.Listener.Adapters
  nameWithType: Steeltoe.Messaging.RabbitMQ.Listener.Adapters
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.Adapters
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.InvocationResult.#ctor*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Listener.Adapters.InvocationResult.#ctor
  name: InvocationResult
  nameWithType: InvocationResult.InvocationResult
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.InvocationResult.InvocationResult
- uid: Steeltoe.Common.Expression.IExpression
  commentId: T:Steeltoe.Common.Expression.IExpression
  parent: Steeltoe.Common.Expression
  name: IExpression
  nameWithType: IExpression
  fullName: Steeltoe.Common.Expression.IExpression
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Reflection.MethodInfo
  commentId: T:System.Reflection.MethodInfo
  parent: System.Reflection
  isExternal: true
  name: MethodInfo
  nameWithType: MethodInfo
  fullName: System.Reflection.MethodInfo
- uid: Steeltoe.Common.Expression
  commentId: N:Steeltoe.Common.Expression
  name: Steeltoe.Common.Expression
  nameWithType: Steeltoe.Common.Expression
  fullName: Steeltoe.Common.Expression
- uid: System.Reflection
  commentId: N:System.Reflection
  isExternal: true
  name: System.Reflection
  nameWithType: System.Reflection
  fullName: System.Reflection
- uid: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.InvocationResult.ReturnValue*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Listener.Adapters.InvocationResult.ReturnValue
  name: ReturnValue
  nameWithType: InvocationResult.ReturnValue
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.InvocationResult.ReturnValue
- uid: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.InvocationResult.SendTo*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Listener.Adapters.InvocationResult.SendTo
  name: SendTo
  nameWithType: InvocationResult.SendTo
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.InvocationResult.SendTo
- uid: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.InvocationResult.ReturnType*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Listener.Adapters.InvocationResult.ReturnType
  name: ReturnType
  nameWithType: InvocationResult.ReturnType
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.InvocationResult.ReturnType
- uid: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.InvocationResult.Instance*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Listener.Adapters.InvocationResult.Instance
  name: Instance
  nameWithType: InvocationResult.Instance
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.InvocationResult.Instance
- uid: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.InvocationResult.Method*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Listener.Adapters.InvocationResult.Method
  name: Method
  nameWithType: InvocationResult.Method
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.InvocationResult.Method
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.InvocationResult.ToString*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Listener.Adapters.InvocationResult.ToString
  name: ToString
  nameWithType: InvocationResult.ToString
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.InvocationResult.ToString
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
