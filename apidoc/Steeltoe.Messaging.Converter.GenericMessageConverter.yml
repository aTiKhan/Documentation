### YamlMime:ManagedReference
items:
- uid: Steeltoe.Messaging.Converter.GenericMessageConverter
  commentId: T:Steeltoe.Messaging.Converter.GenericMessageConverter
  id: GenericMessageConverter
  parent: Steeltoe.Messaging.Converter
  children:
  - Steeltoe.Messaging.Converter.GenericMessageConverter.#ctor
  - Steeltoe.Messaging.Converter.GenericMessageConverter.#ctor(Steeltoe.Common.Converter.IConversionService)
  - Steeltoe.Messaging.Converter.GenericMessageConverter.FromMessage(Steeltoe.Messaging.IMessage,System.Type)
  langs:
  - csharp
  - vb
  name: GenericMessageConverter
  nameWithType: GenericMessageConverter
  fullName: Steeltoe.Messaging.Converter.GenericMessageConverter
  type: Class
  source:
    remote:
      path: src/Messaging/src/MessagingBase/Converter/GenericMessageConverter.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: GenericMessageConverter
    path: ../Steeltoe/src/Messaging/src/MessagingBase/Converter/GenericMessageConverter.cs
    startLine: 9
  assemblies:
  - Steeltoe.Messaging.MessagingBase
  namespace: Steeltoe.Messaging.Converter
  syntax:
    content: 'public class GenericMessageConverter : SimpleMessageConverter, IMessageConverter, IServiceNameAware'
    content.vb: >-
      Public Class GenericMessageConverter

          Inherits SimpleMessageConverter

          Implements IMessageConverter, IServiceNameAware
  inheritance:
  - System.Object
  - Steeltoe.Messaging.Converter.SimpleMessageConverter
  implements:
  - Steeltoe.Messaging.Converter.IMessageConverter
  - IServiceNameAware
  inheritedMembers:
  - Steeltoe.Messaging.Converter.SimpleMessageConverter.DEFAULT_SERVICE_NAME
  - Steeltoe.Messaging.Converter.SimpleMessageConverter.ServiceName
  - Steeltoe.Messaging.Converter.SimpleMessageConverter.FromMessage``1(Steeltoe.Messaging.IMessage)
  - Steeltoe.Messaging.Converter.SimpleMessageConverter.ToMessage(System.Object,Steeltoe.Messaging.IMessageHeaders)
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Steeltoe.Messaging.Converter.GenericMessageConverter.#ctor
  commentId: M:Steeltoe.Messaging.Converter.GenericMessageConverter.#ctor
  id: '#ctor'
  parent: Steeltoe.Messaging.Converter.GenericMessageConverter
  langs:
  - csharp
  - vb
  name: GenericMessageConverter()
  nameWithType: GenericMessageConverter.GenericMessageConverter()
  fullName: Steeltoe.Messaging.Converter.GenericMessageConverter.GenericMessageConverter()
  type: Constructor
  source:
    remote:
      path: src/Messaging/src/MessagingBase/Converter/GenericMessageConverter.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: .ctor
    path: ../Steeltoe/src/Messaging/src/MessagingBase/Converter/GenericMessageConverter.cs
    startLine: 13
  assemblies:
  - Steeltoe.Messaging.MessagingBase
  namespace: Steeltoe.Messaging.Converter
  syntax:
    content: public GenericMessageConverter()
    content.vb: Public Sub New
  overload: Steeltoe.Messaging.Converter.GenericMessageConverter.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Steeltoe.Messaging.Converter.GenericMessageConverter.#ctor(Steeltoe.Common.Converter.IConversionService)
  commentId: M:Steeltoe.Messaging.Converter.GenericMessageConverter.#ctor(Steeltoe.Common.Converter.IConversionService)
  id: '#ctor(Steeltoe.Common.Converter.IConversionService)'
  parent: Steeltoe.Messaging.Converter.GenericMessageConverter
  langs:
  - csharp
  - vb
  name: GenericMessageConverter(IConversionService)
  nameWithType: GenericMessageConverter.GenericMessageConverter(IConversionService)
  fullName: Steeltoe.Messaging.Converter.GenericMessageConverter.GenericMessageConverter(Steeltoe.Common.Converter.IConversionService)
  type: Constructor
  source:
    remote:
      path: src/Messaging/src/MessagingBase/Converter/GenericMessageConverter.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: .ctor
    path: ../Steeltoe/src/Messaging/src/MessagingBase/Converter/GenericMessageConverter.cs
    startLine: 18
  assemblies:
  - Steeltoe.Messaging.MessagingBase
  namespace: Steeltoe.Messaging.Converter
  syntax:
    content: public GenericMessageConverter(IConversionService conversionService)
    parameters:
    - id: conversionService
      type: Steeltoe.Common.Converter.IConversionService
    content.vb: Public Sub New(conversionService As IConversionService)
  overload: Steeltoe.Messaging.Converter.GenericMessageConverter.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Steeltoe.Messaging.Converter.GenericMessageConverter.FromMessage(Steeltoe.Messaging.IMessage,System.Type)
  commentId: M:Steeltoe.Messaging.Converter.GenericMessageConverter.FromMessage(Steeltoe.Messaging.IMessage,System.Type)
  id: FromMessage(Steeltoe.Messaging.IMessage,System.Type)
  parent: Steeltoe.Messaging.Converter.GenericMessageConverter
  langs:
  - csharp
  - vb
  name: FromMessage(IMessage, Type)
  nameWithType: GenericMessageConverter.FromMessage(IMessage, Type)
  fullName: Steeltoe.Messaging.Converter.GenericMessageConverter.FromMessage(Steeltoe.Messaging.IMessage, System.Type)
  type: Method
  source:
    remote:
      path: src/Messaging/src/MessagingBase/Converter/GenericMessageConverter.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: FromMessage
    path: ../Steeltoe/src/Messaging/src/MessagingBase/Converter/GenericMessageConverter.cs
    startLine: 28
  assemblies:
  - Steeltoe.Messaging.MessagingBase
  namespace: Steeltoe.Messaging.Converter
  syntax:
    content: public override object FromMessage(IMessage message, Type targetClass)
    parameters:
    - id: message
      type: Steeltoe.Messaging.IMessage
    - id: targetClass
      type: System.Type
    return:
      type: System.Object
    content.vb: Public Overrides Function FromMessage(message As IMessage, targetClass As Type) As Object
  overridden: Steeltoe.Messaging.Converter.SimpleMessageConverter.FromMessage(Steeltoe.Messaging.IMessage,System.Type)
  overload: Steeltoe.Messaging.Converter.GenericMessageConverter.FromMessage*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: Steeltoe.Messaging.Converter
  commentId: N:Steeltoe.Messaging.Converter
  name: Steeltoe.Messaging.Converter
  nameWithType: Steeltoe.Messaging.Converter
  fullName: Steeltoe.Messaging.Converter
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Steeltoe.Messaging.Converter.SimpleMessageConverter
  commentId: T:Steeltoe.Messaging.Converter.SimpleMessageConverter
  parent: Steeltoe.Messaging.Converter
  name: SimpleMessageConverter
  nameWithType: SimpleMessageConverter
  fullName: Steeltoe.Messaging.Converter.SimpleMessageConverter
- uid: Steeltoe.Messaging.Converter.IMessageConverter
  commentId: T:Steeltoe.Messaging.Converter.IMessageConverter
  parent: Steeltoe.Messaging.Converter
  name: IMessageConverter
  nameWithType: IMessageConverter
  fullName: Steeltoe.Messaging.Converter.IMessageConverter
- uid: IServiceNameAware
  isExternal: true
  name: IServiceNameAware
  nameWithType: IServiceNameAware
  fullName: IServiceNameAware
- uid: Steeltoe.Messaging.Converter.SimpleMessageConverter.DEFAULT_SERVICE_NAME
  commentId: F:Steeltoe.Messaging.Converter.SimpleMessageConverter.DEFAULT_SERVICE_NAME
  parent: Steeltoe.Messaging.Converter.SimpleMessageConverter
  name: DEFAULT_SERVICE_NAME
  nameWithType: SimpleMessageConverter.DEFAULT_SERVICE_NAME
  fullName: Steeltoe.Messaging.Converter.SimpleMessageConverter.DEFAULT_SERVICE_NAME
- uid: Steeltoe.Messaging.Converter.SimpleMessageConverter.ServiceName
  commentId: P:Steeltoe.Messaging.Converter.SimpleMessageConverter.ServiceName
  parent: Steeltoe.Messaging.Converter.SimpleMessageConverter
  name: ServiceName
  nameWithType: SimpleMessageConverter.ServiceName
  fullName: Steeltoe.Messaging.Converter.SimpleMessageConverter.ServiceName
- uid: Steeltoe.Messaging.Converter.SimpleMessageConverter.FromMessage``1(Steeltoe.Messaging.IMessage)
  commentId: M:Steeltoe.Messaging.Converter.SimpleMessageConverter.FromMessage``1(Steeltoe.Messaging.IMessage)
  parent: Steeltoe.Messaging.Converter.SimpleMessageConverter
  name: FromMessage<T>(IMessage)
  nameWithType: SimpleMessageConverter.FromMessage<T>(IMessage)
  fullName: Steeltoe.Messaging.Converter.SimpleMessageConverter.FromMessage<T>(Steeltoe.Messaging.IMessage)
  nameWithType.vb: SimpleMessageConverter.FromMessage(Of T)(IMessage)
  fullName.vb: Steeltoe.Messaging.Converter.SimpleMessageConverter.FromMessage(Of T)(Steeltoe.Messaging.IMessage)
  name.vb: FromMessage(Of T)(IMessage)
  spec.csharp:
  - uid: Steeltoe.Messaging.Converter.SimpleMessageConverter.FromMessage``1(Steeltoe.Messaging.IMessage)
    name: FromMessage<T>
    nameWithType: SimpleMessageConverter.FromMessage<T>
    fullName: Steeltoe.Messaging.Converter.SimpleMessageConverter.FromMessage<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Converter.SimpleMessageConverter.FromMessage``1(Steeltoe.Messaging.IMessage)
    name: FromMessage(Of T)
    nameWithType: SimpleMessageConverter.FromMessage(Of T)
    fullName: Steeltoe.Messaging.Converter.SimpleMessageConverter.FromMessage(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Converter.SimpleMessageConverter.ToMessage(System.Object,Steeltoe.Messaging.IMessageHeaders)
  commentId: M:Steeltoe.Messaging.Converter.SimpleMessageConverter.ToMessage(System.Object,Steeltoe.Messaging.IMessageHeaders)
  parent: Steeltoe.Messaging.Converter.SimpleMessageConverter
  isExternal: true
  name: ToMessage(Object, IMessageHeaders)
  nameWithType: SimpleMessageConverter.ToMessage(Object, IMessageHeaders)
  fullName: Steeltoe.Messaging.Converter.SimpleMessageConverter.ToMessage(System.Object, Steeltoe.Messaging.IMessageHeaders)
  spec.csharp:
  - uid: Steeltoe.Messaging.Converter.SimpleMessageConverter.ToMessage(System.Object,Steeltoe.Messaging.IMessageHeaders)
    name: ToMessage
    nameWithType: SimpleMessageConverter.ToMessage
    fullName: Steeltoe.Messaging.Converter.SimpleMessageConverter.ToMessage
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.IMessageHeaders
    name: IMessageHeaders
    nameWithType: IMessageHeaders
    fullName: Steeltoe.Messaging.IMessageHeaders
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Converter.SimpleMessageConverter.ToMessage(System.Object,Steeltoe.Messaging.IMessageHeaders)
    name: ToMessage
    nameWithType: SimpleMessageConverter.ToMessage
    fullName: Steeltoe.Messaging.Converter.SimpleMessageConverter.ToMessage
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.IMessageHeaders
    name: IMessageHeaders
    nameWithType: IMessageHeaders
    fullName: Steeltoe.Messaging.IMessageHeaders
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Steeltoe.Messaging.Converter.GenericMessageConverter.#ctor*
  commentId: Overload:Steeltoe.Messaging.Converter.GenericMessageConverter.#ctor
  name: GenericMessageConverter
  nameWithType: GenericMessageConverter.GenericMessageConverter
  fullName: Steeltoe.Messaging.Converter.GenericMessageConverter.GenericMessageConverter
- uid: Steeltoe.Common.Converter.IConversionService
  commentId: T:Steeltoe.Common.Converter.IConversionService
  parent: Steeltoe.Common.Converter
  name: IConversionService
  nameWithType: IConversionService
  fullName: Steeltoe.Common.Converter.IConversionService
- uid: Steeltoe.Common.Converter
  commentId: N:Steeltoe.Common.Converter
  name: Steeltoe.Common.Converter
  nameWithType: Steeltoe.Common.Converter
  fullName: Steeltoe.Common.Converter
- uid: Steeltoe.Messaging.Converter.SimpleMessageConverter.FromMessage(Steeltoe.Messaging.IMessage,System.Type)
  commentId: M:Steeltoe.Messaging.Converter.SimpleMessageConverter.FromMessage(Steeltoe.Messaging.IMessage,System.Type)
  parent: Steeltoe.Messaging.Converter.SimpleMessageConverter
  isExternal: true
  name: FromMessage(IMessage, Type)
  nameWithType: SimpleMessageConverter.FromMessage(IMessage, Type)
  fullName: Steeltoe.Messaging.Converter.SimpleMessageConverter.FromMessage(Steeltoe.Messaging.IMessage, System.Type)
  spec.csharp:
  - uid: Steeltoe.Messaging.Converter.SimpleMessageConverter.FromMessage(Steeltoe.Messaging.IMessage,System.Type)
    name: FromMessage
    nameWithType: SimpleMessageConverter.FromMessage
    fullName: Steeltoe.Messaging.Converter.SimpleMessageConverter.FromMessage
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Converter.SimpleMessageConverter.FromMessage(Steeltoe.Messaging.IMessage,System.Type)
    name: FromMessage
    nameWithType: SimpleMessageConverter.FromMessage
    fullName: Steeltoe.Messaging.Converter.SimpleMessageConverter.FromMessage
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Converter.GenericMessageConverter.FromMessage*
  commentId: Overload:Steeltoe.Messaging.Converter.GenericMessageConverter.FromMessage
  name: FromMessage
  nameWithType: GenericMessageConverter.FromMessage
  fullName: Steeltoe.Messaging.Converter.GenericMessageConverter.FromMessage
- uid: Steeltoe.Messaging.IMessage
  commentId: T:Steeltoe.Messaging.IMessage
  parent: Steeltoe.Messaging
  name: IMessage
  nameWithType: IMessage
  fullName: Steeltoe.Messaging.IMessage
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: Steeltoe.Messaging
  commentId: N:Steeltoe.Messaging
  name: Steeltoe.Messaging
  nameWithType: Steeltoe.Messaging
  fullName: Steeltoe.Messaging
