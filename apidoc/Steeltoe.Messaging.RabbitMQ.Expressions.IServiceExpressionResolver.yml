### YamlMime:ManagedReference
items:
- uid: Steeltoe.Messaging.RabbitMQ.Expressions.IServiceExpressionResolver
  commentId: T:Steeltoe.Messaging.RabbitMQ.Expressions.IServiceExpressionResolver
  id: IServiceExpressionResolver
  parent: Steeltoe.Messaging.RabbitMQ.Expressions
  children:
  - Steeltoe.Messaging.RabbitMQ.Expressions.IServiceExpressionResolver.Evaluate(System.String,Steeltoe.Messaging.RabbitMQ.Expressions.IServiceExpressionContext)
  langs:
  - csharp
  - vb
  name: IServiceExpressionResolver
  nameWithType: IServiceExpressionResolver
  fullName: Steeltoe.Messaging.RabbitMQ.Expressions.IServiceExpressionResolver
  type: Interface
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Expressions/IServiceExpressionResolver.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: IServiceExpressionResolver
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Expressions/IServiceExpressionResolver.cs
    startLine: 6
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Expressions
  syntax:
    content: public interface IServiceExpressionResolver
    content.vb: Public Interface IServiceExpressionResolver
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Steeltoe.Messaging.RabbitMQ.Expressions.IServiceExpressionResolver.Evaluate(System.String,Steeltoe.Messaging.RabbitMQ.Expressions.IServiceExpressionContext)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Expressions.IServiceExpressionResolver.Evaluate(System.String,Steeltoe.Messaging.RabbitMQ.Expressions.IServiceExpressionContext)
  id: Evaluate(System.String,Steeltoe.Messaging.RabbitMQ.Expressions.IServiceExpressionContext)
  parent: Steeltoe.Messaging.RabbitMQ.Expressions.IServiceExpressionResolver
  langs:
  - csharp
  - vb
  name: Evaluate(String, IServiceExpressionContext)
  nameWithType: IServiceExpressionResolver.Evaluate(String, IServiceExpressionContext)
  fullName: Steeltoe.Messaging.RabbitMQ.Expressions.IServiceExpressionResolver.Evaluate(System.String, Steeltoe.Messaging.RabbitMQ.Expressions.IServiceExpressionContext)
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Expressions/IServiceExpressionResolver.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Evaluate
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Expressions/IServiceExpressionResolver.cs
    startLine: 8
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Expressions
  syntax:
    content: object Evaluate(string value, IServiceExpressionContext evalContext)
    parameters:
    - id: value
      type: System.String
    - id: evalContext
      type: Steeltoe.Messaging.RabbitMQ.Expressions.IServiceExpressionContext
    return:
      type: System.Object
    content.vb: Function Evaluate(value As String, evalContext As IServiceExpressionContext) As Object
  overload: Steeltoe.Messaging.RabbitMQ.Expressions.IServiceExpressionResolver.Evaluate*
references:
- uid: Steeltoe.Messaging.RabbitMQ.Expressions
  commentId: N:Steeltoe.Messaging.RabbitMQ.Expressions
  name: Steeltoe.Messaging.RabbitMQ.Expressions
  nameWithType: Steeltoe.Messaging.RabbitMQ.Expressions
  fullName: Steeltoe.Messaging.RabbitMQ.Expressions
- uid: Steeltoe.Messaging.RabbitMQ.Expressions.IServiceExpressionResolver.Evaluate*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Expressions.IServiceExpressionResolver.Evaluate
  name: Evaluate
  nameWithType: IServiceExpressionResolver.Evaluate
  fullName: Steeltoe.Messaging.RabbitMQ.Expressions.IServiceExpressionResolver.Evaluate
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Steeltoe.Messaging.RabbitMQ.Expressions.IServiceExpressionContext
  commentId: T:Steeltoe.Messaging.RabbitMQ.Expressions.IServiceExpressionContext
  parent: Steeltoe.Messaging.RabbitMQ.Expressions
  name: IServiceExpressionContext
  nameWithType: IServiceExpressionContext
  fullName: Steeltoe.Messaging.RabbitMQ.Expressions.IServiceExpressionContext
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
