### YamlMime:ManagedReference
items:
- uid: Steeltoe.Management.Endpoint.Mappings.ApplicationMappings
  commentId: T:Steeltoe.Management.Endpoint.Mappings.ApplicationMappings
  id: ApplicationMappings
  parent: Steeltoe.Management.Endpoint.Mappings
  children:
  - Steeltoe.Management.Endpoint.Mappings.ApplicationMappings.#ctor(Steeltoe.Management.Endpoint.Mappings.ContextMappings)
  - Steeltoe.Management.Endpoint.Mappings.ApplicationMappings.ContextMappings
  langs:
  - csharp
  - vb
  name: ApplicationMappings
  nameWithType: ApplicationMappings
  fullName: Steeltoe.Management.Endpoint.Mappings.ApplicationMappings
  type: Class
  source:
    remote:
      path: src/Management/src/EndpointBase/Mappings/ApplicationMappings.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: ApplicationMappings
    path: ../Steeltoe/src/Management/src/EndpointBase/Mappings/ApplicationMappings.cs
    startLine: 9
  assemblies:
  - Steeltoe.Management.EndpointBase
  namespace: Steeltoe.Management.Endpoint.Mappings
  syntax:
    content: public class ApplicationMappings
    content.vb: Public Class ApplicationMappings
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Steeltoe.Management.Endpoint.Mappings.ApplicationMappings.#ctor(Steeltoe.Management.Endpoint.Mappings.ContextMappings)
  commentId: M:Steeltoe.Management.Endpoint.Mappings.ApplicationMappings.#ctor(Steeltoe.Management.Endpoint.Mappings.ContextMappings)
  id: '#ctor(Steeltoe.Management.Endpoint.Mappings.ContextMappings)'
  parent: Steeltoe.Management.Endpoint.Mappings.ApplicationMappings
  langs:
  - csharp
  - vb
  name: ApplicationMappings(ContextMappings)
  nameWithType: ApplicationMappings.ApplicationMappings(ContextMappings)
  fullName: Steeltoe.Management.Endpoint.Mappings.ApplicationMappings.ApplicationMappings(Steeltoe.Management.Endpoint.Mappings.ContextMappings)
  type: Constructor
  source:
    remote:
      path: src/Management/src/EndpointBase/Mappings/ApplicationMappings.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: .ctor
    path: ../Steeltoe/src/Management/src/EndpointBase/Mappings/ApplicationMappings.cs
    startLine: 11
  assemblies:
  - Steeltoe.Management.EndpointBase
  namespace: Steeltoe.Management.Endpoint.Mappings
  syntax:
    content: public ApplicationMappings(ContextMappings contextMappings)
    parameters:
    - id: contextMappings
      type: Steeltoe.Management.Endpoint.Mappings.ContextMappings
    content.vb: Public Sub New(contextMappings As ContextMappings)
  overload: Steeltoe.Management.Endpoint.Mappings.ApplicationMappings.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Steeltoe.Management.Endpoint.Mappings.ApplicationMappings.ContextMappings
  commentId: P:Steeltoe.Management.Endpoint.Mappings.ApplicationMappings.ContextMappings
  id: ContextMappings
  parent: Steeltoe.Management.Endpoint.Mappings.ApplicationMappings
  langs:
  - csharp
  - vb
  name: ContextMappings
  nameWithType: ApplicationMappings.ContextMappings
  fullName: Steeltoe.Management.Endpoint.Mappings.ApplicationMappings.ContextMappings
  type: Property
  source:
    remote:
      path: src/Management/src/EndpointBase/Mappings/ApplicationMappings.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: ContextMappings
    path: ../Steeltoe/src/Management/src/EndpointBase/Mappings/ApplicationMappings.cs
    startLine: 20
  assemblies:
  - Steeltoe.Management.EndpointBase
  namespace: Steeltoe.Management.Endpoint.Mappings
  syntax:
    content: >-
      [JsonPropertyName("contexts")]

      public IDictionary<string, ContextMappings> ContextMappings { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IDictionary{System.String,Steeltoe.Management.Endpoint.Mappings.ContextMappings}
    content.vb: >-
      <JsonPropertyName("contexts")>

      Public ReadOnly Property ContextMappings As IDictionary(Of String, ContextMappings)
  overload: Steeltoe.Management.Endpoint.Mappings.ApplicationMappings.ContextMappings*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: contexts
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: Steeltoe.Management.Endpoint.Mappings
  commentId: N:Steeltoe.Management.Endpoint.Mappings
  name: Steeltoe.Management.Endpoint.Mappings
  nameWithType: Steeltoe.Management.Endpoint.Mappings
  fullName: Steeltoe.Management.Endpoint.Mappings
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Steeltoe.Management.Endpoint.Mappings.ApplicationMappings.#ctor*
  commentId: Overload:Steeltoe.Management.Endpoint.Mappings.ApplicationMappings.#ctor
  name: ApplicationMappings
  nameWithType: ApplicationMappings.ApplicationMappings
  fullName: Steeltoe.Management.Endpoint.Mappings.ApplicationMappings.ApplicationMappings
- uid: Steeltoe.Management.Endpoint.Mappings.ContextMappings
  commentId: T:Steeltoe.Management.Endpoint.Mappings.ContextMappings
  parent: Steeltoe.Management.Endpoint.Mappings
  name: ContextMappings
  nameWithType: ContextMappings
  fullName: Steeltoe.Management.Endpoint.Mappings.ContextMappings
- uid: Steeltoe.Management.Endpoint.Mappings.ApplicationMappings.ContextMappings*
  commentId: Overload:Steeltoe.Management.Endpoint.Mappings.ApplicationMappings.ContextMappings
  name: ContextMappings
  nameWithType: ApplicationMappings.ContextMappings
  fullName: Steeltoe.Management.Endpoint.Mappings.ApplicationMappings.ContextMappings
- uid: System.Collections.Generic.IDictionary{System.String,Steeltoe.Management.Endpoint.Mappings.ContextMappings}
  commentId: T:System.Collections.Generic.IDictionary{System.String,Steeltoe.Management.Endpoint.Mappings.ContextMappings}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IDictionary`2
  name: IDictionary<String, ContextMappings>
  nameWithType: IDictionary<String, ContextMappings>
  fullName: System.Collections.Generic.IDictionary<System.String, Steeltoe.Management.Endpoint.Mappings.ContextMappings>
  nameWithType.vb: IDictionary(Of String, ContextMappings)
  fullName.vb: System.Collections.Generic.IDictionary(Of System.String, Steeltoe.Management.Endpoint.Mappings.ContextMappings)
  name.vb: IDictionary(Of String, ContextMappings)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Management.Endpoint.Mappings.ContextMappings
    name: ContextMappings
    nameWithType: ContextMappings
    fullName: Steeltoe.Management.Endpoint.Mappings.ContextMappings
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Management.Endpoint.Mappings.ContextMappings
    name: ContextMappings
    nameWithType: ContextMappings
    fullName: Steeltoe.Management.Endpoint.Mappings.ContextMappings
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IDictionary`2
  commentId: T:System.Collections.Generic.IDictionary`2
  isExternal: true
  name: IDictionary<TKey, TValue>
  nameWithType: IDictionary<TKey, TValue>
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>
  nameWithType.vb: IDictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.IDictionary(Of TKey, TValue)
  name.vb: IDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
