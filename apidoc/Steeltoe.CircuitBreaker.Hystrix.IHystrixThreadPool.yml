### YamlMime:ManagedReference
items:
- uid: Steeltoe.CircuitBreaker.Hystrix.IHystrixThreadPool
  commentId: T:Steeltoe.CircuitBreaker.Hystrix.IHystrixThreadPool
  id: IHystrixThreadPool
  parent: Steeltoe.CircuitBreaker.Hystrix
  children:
  - Steeltoe.CircuitBreaker.Hystrix.IHystrixThreadPool.GetScheduler
  - Steeltoe.CircuitBreaker.Hystrix.IHystrixThreadPool.GetTaskScheduler
  - Steeltoe.CircuitBreaker.Hystrix.IHystrixThreadPool.IsQueueSpaceAvailable
  - Steeltoe.CircuitBreaker.Hystrix.IHystrixThreadPool.IsShutdown
  - Steeltoe.CircuitBreaker.Hystrix.IHystrixThreadPool.MarkThreadCompletion
  - Steeltoe.CircuitBreaker.Hystrix.IHystrixThreadPool.MarkThreadExecution
  - Steeltoe.CircuitBreaker.Hystrix.IHystrixThreadPool.MarkThreadRejection
  langs:
  - csharp
  - vb
  name: IHystrixThreadPool
  nameWithType: IHystrixThreadPool
  fullName: Steeltoe.CircuitBreaker.Hystrix.IHystrixThreadPool
  type: Interface
  source:
    remote:
      path: src/CircuitBreaker/src/HystrixBase/IHystrixThreadPool.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: IHystrixThreadPool
    path: ../Steeltoe/src/CircuitBreaker/src/HystrixBase/IHystrixThreadPool.cs
    startLine: 10
  assemblies:
  - Steeltoe.CircuitBreaker.HystrixBase
  namespace: Steeltoe.CircuitBreaker.Hystrix
  syntax:
    content: 'public interface IHystrixThreadPool : IDisposable'
    content.vb: >-
      Public Interface IHystrixThreadPool

          Inherits IDisposable
  inheritedMembers:
  - System.IDisposable.Dispose
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Steeltoe.CircuitBreaker.Hystrix.IHystrixThreadPool.GetScheduler
  commentId: M:Steeltoe.CircuitBreaker.Hystrix.IHystrixThreadPool.GetScheduler
  id: GetScheduler
  parent: Steeltoe.CircuitBreaker.Hystrix.IHystrixThreadPool
  langs:
  - csharp
  - vb
  name: GetScheduler()
  nameWithType: IHystrixThreadPool.GetScheduler()
  fullName: Steeltoe.CircuitBreaker.Hystrix.IHystrixThreadPool.GetScheduler()
  type: Method
  source:
    remote:
      path: src/CircuitBreaker/src/HystrixBase/IHystrixThreadPool.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: GetScheduler
    path: ../Steeltoe/src/CircuitBreaker/src/HystrixBase/IHystrixThreadPool.cs
    startLine: 12
  assemblies:
  - Steeltoe.CircuitBreaker.HystrixBase
  namespace: Steeltoe.CircuitBreaker.Hystrix
  syntax:
    content: IHystrixTaskScheduler GetScheduler()
    return:
      type: Steeltoe.CircuitBreaker.Hystrix.Strategy.Concurrency.IHystrixTaskScheduler
    content.vb: Function GetScheduler As IHystrixTaskScheduler
  overload: Steeltoe.CircuitBreaker.Hystrix.IHystrixThreadPool.GetScheduler*
- uid: Steeltoe.CircuitBreaker.Hystrix.IHystrixThreadPool.GetTaskScheduler
  commentId: M:Steeltoe.CircuitBreaker.Hystrix.IHystrixThreadPool.GetTaskScheduler
  id: GetTaskScheduler
  parent: Steeltoe.CircuitBreaker.Hystrix.IHystrixThreadPool
  langs:
  - csharp
  - vb
  name: GetTaskScheduler()
  nameWithType: IHystrixThreadPool.GetTaskScheduler()
  fullName: Steeltoe.CircuitBreaker.Hystrix.IHystrixThreadPool.GetTaskScheduler()
  type: Method
  source:
    remote:
      path: src/CircuitBreaker/src/HystrixBase/IHystrixThreadPool.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: GetTaskScheduler
    path: ../Steeltoe/src/CircuitBreaker/src/HystrixBase/IHystrixThreadPool.cs
    startLine: 14
  assemblies:
  - Steeltoe.CircuitBreaker.HystrixBase
  namespace: Steeltoe.CircuitBreaker.Hystrix
  syntax:
    content: TaskScheduler GetTaskScheduler()
    return:
      type: System.Threading.Tasks.TaskScheduler
    content.vb: Function GetTaskScheduler As TaskScheduler
  overload: Steeltoe.CircuitBreaker.Hystrix.IHystrixThreadPool.GetTaskScheduler*
- uid: Steeltoe.CircuitBreaker.Hystrix.IHystrixThreadPool.MarkThreadExecution
  commentId: M:Steeltoe.CircuitBreaker.Hystrix.IHystrixThreadPool.MarkThreadExecution
  id: MarkThreadExecution
  parent: Steeltoe.CircuitBreaker.Hystrix.IHystrixThreadPool
  langs:
  - csharp
  - vb
  name: MarkThreadExecution()
  nameWithType: IHystrixThreadPool.MarkThreadExecution()
  fullName: Steeltoe.CircuitBreaker.Hystrix.IHystrixThreadPool.MarkThreadExecution()
  type: Method
  source:
    remote:
      path: src/CircuitBreaker/src/HystrixBase/IHystrixThreadPool.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: MarkThreadExecution
    path: ../Steeltoe/src/CircuitBreaker/src/HystrixBase/IHystrixThreadPool.cs
    startLine: 16
  assemblies:
  - Steeltoe.CircuitBreaker.HystrixBase
  namespace: Steeltoe.CircuitBreaker.Hystrix
  syntax:
    content: void MarkThreadExecution()
    content.vb: Sub MarkThreadExecution
  overload: Steeltoe.CircuitBreaker.Hystrix.IHystrixThreadPool.MarkThreadExecution*
- uid: Steeltoe.CircuitBreaker.Hystrix.IHystrixThreadPool.MarkThreadCompletion
  commentId: M:Steeltoe.CircuitBreaker.Hystrix.IHystrixThreadPool.MarkThreadCompletion
  id: MarkThreadCompletion
  parent: Steeltoe.CircuitBreaker.Hystrix.IHystrixThreadPool
  langs:
  - csharp
  - vb
  name: MarkThreadCompletion()
  nameWithType: IHystrixThreadPool.MarkThreadCompletion()
  fullName: Steeltoe.CircuitBreaker.Hystrix.IHystrixThreadPool.MarkThreadCompletion()
  type: Method
  source:
    remote:
      path: src/CircuitBreaker/src/HystrixBase/IHystrixThreadPool.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: MarkThreadCompletion
    path: ../Steeltoe/src/CircuitBreaker/src/HystrixBase/IHystrixThreadPool.cs
    startLine: 18
  assemblies:
  - Steeltoe.CircuitBreaker.HystrixBase
  namespace: Steeltoe.CircuitBreaker.Hystrix
  syntax:
    content: void MarkThreadCompletion()
    content.vb: Sub MarkThreadCompletion
  overload: Steeltoe.CircuitBreaker.Hystrix.IHystrixThreadPool.MarkThreadCompletion*
- uid: Steeltoe.CircuitBreaker.Hystrix.IHystrixThreadPool.MarkThreadRejection
  commentId: M:Steeltoe.CircuitBreaker.Hystrix.IHystrixThreadPool.MarkThreadRejection
  id: MarkThreadRejection
  parent: Steeltoe.CircuitBreaker.Hystrix.IHystrixThreadPool
  langs:
  - csharp
  - vb
  name: MarkThreadRejection()
  nameWithType: IHystrixThreadPool.MarkThreadRejection()
  fullName: Steeltoe.CircuitBreaker.Hystrix.IHystrixThreadPool.MarkThreadRejection()
  type: Method
  source:
    remote:
      path: src/CircuitBreaker/src/HystrixBase/IHystrixThreadPool.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: MarkThreadRejection
    path: ../Steeltoe/src/CircuitBreaker/src/HystrixBase/IHystrixThreadPool.cs
    startLine: 20
  assemblies:
  - Steeltoe.CircuitBreaker.HystrixBase
  namespace: Steeltoe.CircuitBreaker.Hystrix
  syntax:
    content: void MarkThreadRejection()
    content.vb: Sub MarkThreadRejection
  overload: Steeltoe.CircuitBreaker.Hystrix.IHystrixThreadPool.MarkThreadRejection*
- uid: Steeltoe.CircuitBreaker.Hystrix.IHystrixThreadPool.IsQueueSpaceAvailable
  commentId: P:Steeltoe.CircuitBreaker.Hystrix.IHystrixThreadPool.IsQueueSpaceAvailable
  id: IsQueueSpaceAvailable
  parent: Steeltoe.CircuitBreaker.Hystrix.IHystrixThreadPool
  langs:
  - csharp
  - vb
  name: IsQueueSpaceAvailable
  nameWithType: IHystrixThreadPool.IsQueueSpaceAvailable
  fullName: Steeltoe.CircuitBreaker.Hystrix.IHystrixThreadPool.IsQueueSpaceAvailable
  type: Property
  source:
    remote:
      path: src/CircuitBreaker/src/HystrixBase/IHystrixThreadPool.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: IsQueueSpaceAvailable
    path: ../Steeltoe/src/CircuitBreaker/src/HystrixBase/IHystrixThreadPool.cs
    startLine: 22
  assemblies:
  - Steeltoe.CircuitBreaker.HystrixBase
  namespace: Steeltoe.CircuitBreaker.Hystrix
  syntax:
    content: bool IsQueueSpaceAvailable { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: ReadOnly Property IsQueueSpaceAvailable As Boolean
  overload: Steeltoe.CircuitBreaker.Hystrix.IHystrixThreadPool.IsQueueSpaceAvailable*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Steeltoe.CircuitBreaker.Hystrix.IHystrixThreadPool.IsShutdown
  commentId: P:Steeltoe.CircuitBreaker.Hystrix.IHystrixThreadPool.IsShutdown
  id: IsShutdown
  parent: Steeltoe.CircuitBreaker.Hystrix.IHystrixThreadPool
  langs:
  - csharp
  - vb
  name: IsShutdown
  nameWithType: IHystrixThreadPool.IsShutdown
  fullName: Steeltoe.CircuitBreaker.Hystrix.IHystrixThreadPool.IsShutdown
  type: Property
  source:
    remote:
      path: src/CircuitBreaker/src/HystrixBase/IHystrixThreadPool.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: IsShutdown
    path: ../Steeltoe/src/CircuitBreaker/src/HystrixBase/IHystrixThreadPool.cs
    startLine: 24
  assemblies:
  - Steeltoe.CircuitBreaker.HystrixBase
  namespace: Steeltoe.CircuitBreaker.Hystrix
  syntax:
    content: bool IsShutdown { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: ReadOnly Property IsShutdown As Boolean
  overload: Steeltoe.CircuitBreaker.Hystrix.IHystrixThreadPool.IsShutdown*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
references:
- uid: Steeltoe.CircuitBreaker.Hystrix
  commentId: N:Steeltoe.CircuitBreaker.Hystrix
  name: Steeltoe.CircuitBreaker.Hystrix
  nameWithType: Steeltoe.CircuitBreaker.Hystrix
  fullName: Steeltoe.CircuitBreaker.Hystrix
- uid: System.IDisposable.Dispose
  commentId: M:System.IDisposable.Dispose
  parent: System.IDisposable
  isExternal: true
  name: Dispose()
  nameWithType: IDisposable.Dispose()
  fullName: System.IDisposable.Dispose()
  spec.csharp:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Steeltoe.CircuitBreaker.Hystrix.IHystrixThreadPool.GetScheduler*
  commentId: Overload:Steeltoe.CircuitBreaker.Hystrix.IHystrixThreadPool.GetScheduler
  name: GetScheduler
  nameWithType: IHystrixThreadPool.GetScheduler
  fullName: Steeltoe.CircuitBreaker.Hystrix.IHystrixThreadPool.GetScheduler
- uid: Steeltoe.CircuitBreaker.Hystrix.Strategy.Concurrency.IHystrixTaskScheduler
  commentId: T:Steeltoe.CircuitBreaker.Hystrix.Strategy.Concurrency.IHystrixTaskScheduler
  parent: Steeltoe.CircuitBreaker.Hystrix.Strategy.Concurrency
  name: IHystrixTaskScheduler
  nameWithType: IHystrixTaskScheduler
  fullName: Steeltoe.CircuitBreaker.Hystrix.Strategy.Concurrency.IHystrixTaskScheduler
- uid: Steeltoe.CircuitBreaker.Hystrix.Strategy.Concurrency
  commentId: N:Steeltoe.CircuitBreaker.Hystrix.Strategy.Concurrency
  name: Steeltoe.CircuitBreaker.Hystrix.Strategy.Concurrency
  nameWithType: Steeltoe.CircuitBreaker.Hystrix.Strategy.Concurrency
  fullName: Steeltoe.CircuitBreaker.Hystrix.Strategy.Concurrency
- uid: Steeltoe.CircuitBreaker.Hystrix.IHystrixThreadPool.GetTaskScheduler*
  commentId: Overload:Steeltoe.CircuitBreaker.Hystrix.IHystrixThreadPool.GetTaskScheduler
  name: GetTaskScheduler
  nameWithType: IHystrixThreadPool.GetTaskScheduler
  fullName: Steeltoe.CircuitBreaker.Hystrix.IHystrixThreadPool.GetTaskScheduler
- uid: System.Threading.Tasks.TaskScheduler
  commentId: T:System.Threading.Tasks.TaskScheduler
  parent: System.Threading.Tasks
  isExternal: true
  name: TaskScheduler
  nameWithType: TaskScheduler
  fullName: System.Threading.Tasks.TaskScheduler
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: Steeltoe.CircuitBreaker.Hystrix.IHystrixThreadPool.MarkThreadExecution*
  commentId: Overload:Steeltoe.CircuitBreaker.Hystrix.IHystrixThreadPool.MarkThreadExecution
  name: MarkThreadExecution
  nameWithType: IHystrixThreadPool.MarkThreadExecution
  fullName: Steeltoe.CircuitBreaker.Hystrix.IHystrixThreadPool.MarkThreadExecution
- uid: Steeltoe.CircuitBreaker.Hystrix.IHystrixThreadPool.MarkThreadCompletion*
  commentId: Overload:Steeltoe.CircuitBreaker.Hystrix.IHystrixThreadPool.MarkThreadCompletion
  name: MarkThreadCompletion
  nameWithType: IHystrixThreadPool.MarkThreadCompletion
  fullName: Steeltoe.CircuitBreaker.Hystrix.IHystrixThreadPool.MarkThreadCompletion
- uid: Steeltoe.CircuitBreaker.Hystrix.IHystrixThreadPool.MarkThreadRejection*
  commentId: Overload:Steeltoe.CircuitBreaker.Hystrix.IHystrixThreadPool.MarkThreadRejection
  name: MarkThreadRejection
  nameWithType: IHystrixThreadPool.MarkThreadRejection
  fullName: Steeltoe.CircuitBreaker.Hystrix.IHystrixThreadPool.MarkThreadRejection
- uid: Steeltoe.CircuitBreaker.Hystrix.IHystrixThreadPool.IsQueueSpaceAvailable*
  commentId: Overload:Steeltoe.CircuitBreaker.Hystrix.IHystrixThreadPool.IsQueueSpaceAvailable
  name: IsQueueSpaceAvailable
  nameWithType: IHystrixThreadPool.IsQueueSpaceAvailable
  fullName: Steeltoe.CircuitBreaker.Hystrix.IHystrixThreadPool.IsQueueSpaceAvailable
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Steeltoe.CircuitBreaker.Hystrix.IHystrixThreadPool.IsShutdown*
  commentId: Overload:Steeltoe.CircuitBreaker.Hystrix.IHystrixThreadPool.IsShutdown
  name: IsShutdown
  nameWithType: IHystrixThreadPool.IsShutdown
  fullName: Steeltoe.CircuitBreaker.Hystrix.IHystrixThreadPool.IsShutdown
