### YamlMime:ManagedReference
items:
- uid: Steeltoe.Discovery.Eureka.IEurekaClientConfig
  commentId: T:Steeltoe.Discovery.Eureka.IEurekaClientConfig
  id: IEurekaClientConfig
  parent: Steeltoe.Discovery.Eureka
  children:
  - Steeltoe.Discovery.Eureka.IEurekaClientConfig.EurekaServerConnectTimeoutSeconds
  - Steeltoe.Discovery.Eureka.IEurekaClientConfig.EurekaServerServiceUrls
  - Steeltoe.Discovery.Eureka.IEurekaClientConfig.ProxyHost
  - Steeltoe.Discovery.Eureka.IEurekaClientConfig.ProxyPassword
  - Steeltoe.Discovery.Eureka.IEurekaClientConfig.ProxyPort
  - Steeltoe.Discovery.Eureka.IEurekaClientConfig.ProxyUserName
  - Steeltoe.Discovery.Eureka.IEurekaClientConfig.RegistryFetchIntervalSeconds
  - Steeltoe.Discovery.Eureka.IEurekaClientConfig.RegistryRefreshSingleVipAddress
  - Steeltoe.Discovery.Eureka.IEurekaClientConfig.ShouldDisableDelta
  - Steeltoe.Discovery.Eureka.IEurekaClientConfig.ShouldFetchRegistry
  - Steeltoe.Discovery.Eureka.IEurekaClientConfig.ShouldFilterOnlyUpInstances
  - Steeltoe.Discovery.Eureka.IEurekaClientConfig.ShouldGZipContent
  - Steeltoe.Discovery.Eureka.IEurekaClientConfig.ShouldOnDemandUpdateStatusChange
  - Steeltoe.Discovery.Eureka.IEurekaClientConfig.ShouldRegisterWithEureka
  - Steeltoe.Discovery.Eureka.IEurekaClientConfig.ValidateCertificates
  langs:
  - csharp
  - vb
  name: IEurekaClientConfig
  nameWithType: IEurekaClientConfig
  fullName: Steeltoe.Discovery.Eureka.IEurekaClientConfig
  type: Interface
  source:
    remote:
      path: src/Discovery/src/Eureka/IEurekaClientConfig.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: IEurekaClientConfig
    path: ../Steeltoe/src/Discovery/src/Eureka/IEurekaClientConfig.cs
    startLine: 6
  assemblies:
  - Steeltoe.Discovery.Eureka
  namespace: Steeltoe.Discovery.Eureka
  syntax:
    content: public interface IEurekaClientConfig
    content.vb: Public Interface IEurekaClientConfig
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Steeltoe.Discovery.Eureka.IEurekaClientConfig.RegistryFetchIntervalSeconds
  commentId: P:Steeltoe.Discovery.Eureka.IEurekaClientConfig.RegistryFetchIntervalSeconds
  id: RegistryFetchIntervalSeconds
  parent: Steeltoe.Discovery.Eureka.IEurekaClientConfig
  langs:
  - csharp
  - vb
  name: RegistryFetchIntervalSeconds
  nameWithType: IEurekaClientConfig.RegistryFetchIntervalSeconds
  fullName: Steeltoe.Discovery.Eureka.IEurekaClientConfig.RegistryFetchIntervalSeconds
  type: Property
  source:
    remote:
      path: src/Discovery/src/Eureka/IEurekaClientConfig.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: RegistryFetchIntervalSeconds
    path: ../Steeltoe/src/Discovery/src/Eureka/IEurekaClientConfig.cs
    startLine: 12
  assemblies:
  - Steeltoe.Discovery.Eureka
  namespace: Steeltoe.Discovery.Eureka
  summary: "\nGets or sets indicates how often(in seconds) to fetch the registry information from the eureka server.\nConfiguration property: eureka:client:registryFetchIntervalSeconds\n"
  example: []
  syntax:
    content: int RegistryFetchIntervalSeconds { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Property RegistryFetchIntervalSeconds As Integer
  overload: Steeltoe.Discovery.Eureka.IEurekaClientConfig.RegistryFetchIntervalSeconds*
  modifiers.csharp:
  - get
  - set
- uid: Steeltoe.Discovery.Eureka.IEurekaClientConfig.ProxyHost
  commentId: P:Steeltoe.Discovery.Eureka.IEurekaClientConfig.ProxyHost
  id: ProxyHost
  parent: Steeltoe.Discovery.Eureka.IEurekaClientConfig
  langs:
  - csharp
  - vb
  name: ProxyHost
  nameWithType: IEurekaClientConfig.ProxyHost
  fullName: Steeltoe.Discovery.Eureka.IEurekaClientConfig.ProxyHost
  type: Property
  source:
    remote:
      path: src/Discovery/src/Eureka/IEurekaClientConfig.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: ProxyHost
    path: ../Steeltoe/src/Discovery/src/Eureka/IEurekaClientConfig.cs
    startLine: 18
  assemblies:
  - Steeltoe.Discovery.Eureka
  namespace: Steeltoe.Discovery.Eureka
  summary: "\nGets or sets the proxy host to the eureka server if any.\nConfiguration property: eureka:client:eurekaServer:proxyHost\n"
  example: []
  syntax:
    content: string ProxyHost { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Property ProxyHost As String
  overload: Steeltoe.Discovery.Eureka.IEurekaClientConfig.ProxyHost*
  modifiers.csharp:
  - get
  - set
- uid: Steeltoe.Discovery.Eureka.IEurekaClientConfig.ProxyPort
  commentId: P:Steeltoe.Discovery.Eureka.IEurekaClientConfig.ProxyPort
  id: ProxyPort
  parent: Steeltoe.Discovery.Eureka.IEurekaClientConfig
  langs:
  - csharp
  - vb
  name: ProxyPort
  nameWithType: IEurekaClientConfig.ProxyPort
  fullName: Steeltoe.Discovery.Eureka.IEurekaClientConfig.ProxyPort
  type: Property
  source:
    remote:
      path: src/Discovery/src/Eureka/IEurekaClientConfig.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: ProxyPort
    path: ../Steeltoe/src/Discovery/src/Eureka/IEurekaClientConfig.cs
    startLine: 25
  assemblies:
  - Steeltoe.Discovery.Eureka
  namespace: Steeltoe.Discovery.Eureka
  summary: "\nGets or sets the proxy port to the eureka server if any.\nConfiguration property: eureka:client:eurekaServer:proxyPort\n<code data-dev-comment-type=\"paramref\" class=\"paramref\">value</code>sets the proxy port value\n"
  example: []
  syntax:
    content: int ProxyPort { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Property ProxyPort As Integer
  overload: Steeltoe.Discovery.Eureka.IEurekaClientConfig.ProxyPort*
  modifiers.csharp:
  - get
  - set
- uid: Steeltoe.Discovery.Eureka.IEurekaClientConfig.ProxyUserName
  commentId: P:Steeltoe.Discovery.Eureka.IEurekaClientConfig.ProxyUserName
  id: ProxyUserName
  parent: Steeltoe.Discovery.Eureka.IEurekaClientConfig
  langs:
  - csharp
  - vb
  name: ProxyUserName
  nameWithType: IEurekaClientConfig.ProxyUserName
  fullName: Steeltoe.Discovery.Eureka.IEurekaClientConfig.ProxyUserName
  type: Property
  source:
    remote:
      path: src/Discovery/src/Eureka/IEurekaClientConfig.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: ProxyUserName
    path: ../Steeltoe/src/Discovery/src/Eureka/IEurekaClientConfig.cs
    startLine: 31
  assemblies:
  - Steeltoe.Discovery.Eureka
  namespace: Steeltoe.Discovery.Eureka
  summary: "\nGets or sets the proxy user name if any.\nConfiguration property: eureka:client:eurekaServer:proxyUserName\n"
  example: []
  syntax:
    content: string ProxyUserName { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Property ProxyUserName As String
  overload: Steeltoe.Discovery.Eureka.IEurekaClientConfig.ProxyUserName*
  modifiers.csharp:
  - get
  - set
- uid: Steeltoe.Discovery.Eureka.IEurekaClientConfig.ProxyPassword
  commentId: P:Steeltoe.Discovery.Eureka.IEurekaClientConfig.ProxyPassword
  id: ProxyPassword
  parent: Steeltoe.Discovery.Eureka.IEurekaClientConfig
  langs:
  - csharp
  - vb
  name: ProxyPassword
  nameWithType: IEurekaClientConfig.ProxyPassword
  fullName: Steeltoe.Discovery.Eureka.IEurekaClientConfig.ProxyPassword
  type: Property
  source:
    remote:
      path: src/Discovery/src/Eureka/IEurekaClientConfig.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: ProxyPassword
    path: ../Steeltoe/src/Discovery/src/Eureka/IEurekaClientConfig.cs
    startLine: 37
  assemblies:
  - Steeltoe.Discovery.Eureka
  namespace: Steeltoe.Discovery.Eureka
  summary: "\nGets or sets the proxy password if any.\nConfiguration property: eureka:client:eurekaServer:proxyPassword\n"
  example: []
  syntax:
    content: string ProxyPassword { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Property ProxyPassword As String
  overload: Steeltoe.Discovery.Eureka.IEurekaClientConfig.ProxyPassword*
  modifiers.csharp:
  - get
  - set
- uid: Steeltoe.Discovery.Eureka.IEurekaClientConfig.ShouldGZipContent
  commentId: P:Steeltoe.Discovery.Eureka.IEurekaClientConfig.ShouldGZipContent
  id: ShouldGZipContent
  parent: Steeltoe.Discovery.Eureka.IEurekaClientConfig
  langs:
  - csharp
  - vb
  name: ShouldGZipContent
  nameWithType: IEurekaClientConfig.ShouldGZipContent
  fullName: Steeltoe.Discovery.Eureka.IEurekaClientConfig.ShouldGZipContent
  type: Property
  source:
    remote:
      path: src/Discovery/src/Eureka/IEurekaClientConfig.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: ShouldGZipContent
    path: ../Steeltoe/src/Discovery/src/Eureka/IEurekaClientConfig.cs
    startLine: 45
  assemblies:
  - Steeltoe.Discovery.Eureka
  namespace: Steeltoe.Discovery.Eureka
  summary: "\nGets or sets a value indicating whether indicates whether the content fetched from eureka server has to be compressed whenever it is\nsupported by the server.The registry information from the eureka server is compressed\nfor optimum network traffic.\nConfiguration property: eureka:client:eurekaServer:shouldGZipContent\n"
  example: []
  syntax:
    content: bool ShouldGZipContent { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Property ShouldGZipContent As Boolean
  overload: Steeltoe.Discovery.Eureka.IEurekaClientConfig.ShouldGZipContent*
  modifiers.csharp:
  - get
  - set
- uid: Steeltoe.Discovery.Eureka.IEurekaClientConfig.EurekaServerConnectTimeoutSeconds
  commentId: P:Steeltoe.Discovery.Eureka.IEurekaClientConfig.EurekaServerConnectTimeoutSeconds
  id: EurekaServerConnectTimeoutSeconds
  parent: Steeltoe.Discovery.Eureka.IEurekaClientConfig
  langs:
  - csharp
  - vb
  name: EurekaServerConnectTimeoutSeconds
  nameWithType: IEurekaClientConfig.EurekaServerConnectTimeoutSeconds
  fullName: Steeltoe.Discovery.Eureka.IEurekaClientConfig.EurekaServerConnectTimeoutSeconds
  type: Property
  source:
    remote:
      path: src/Discovery/src/Eureka/IEurekaClientConfig.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: EurekaServerConnectTimeoutSeconds
    path: ../Steeltoe/src/Discovery/src/Eureka/IEurekaClientConfig.cs
    startLine: 54
  assemblies:
  - Steeltoe.Discovery.Eureka
  namespace: Steeltoe.Discovery.Eureka
  summary: "\nGets or sets indicates how long to wait (in seconds) before a connection to eureka\nserver needs to timeout.\nNote that the connections in the client are pooled by and this setting affects the actual\nconnection creation and also the wait time to get the connection from the pool.\nConfiguration property: eureka:client:eurekaServer:connectTimeoutSeconds\n"
  example: []
  syntax:
    content: int EurekaServerConnectTimeoutSeconds { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Property EurekaServerConnectTimeoutSeconds As Integer
  overload: Steeltoe.Discovery.Eureka.IEurekaClientConfig.EurekaServerConnectTimeoutSeconds*
  modifiers.csharp:
  - get
  - set
- uid: Steeltoe.Discovery.Eureka.IEurekaClientConfig.ShouldRegisterWithEureka
  commentId: P:Steeltoe.Discovery.Eureka.IEurekaClientConfig.ShouldRegisterWithEureka
  id: ShouldRegisterWithEureka
  parent: Steeltoe.Discovery.Eureka.IEurekaClientConfig
  langs:
  - csharp
  - vb
  name: ShouldRegisterWithEureka
  nameWithType: IEurekaClientConfig.ShouldRegisterWithEureka
  fullName: Steeltoe.Discovery.Eureka.IEurekaClientConfig.ShouldRegisterWithEureka
  type: Property
  source:
    remote:
      path: src/Discovery/src/Eureka/IEurekaClientConfig.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: ShouldRegisterWithEureka
    path: ../Steeltoe/src/Discovery/src/Eureka/IEurekaClientConfig.cs
    startLine: 63
  assemblies:
  - Steeltoe.Discovery.Eureka
  namespace: Steeltoe.Discovery.Eureka
  summary: "\nGets or sets a value indicating whether indicates whether or not this instance should register its information with eureka server for discovery by others.\n\nIn some cases, you do not want your instances to be discovered whereas you just want do discover other instances.\n\nConfiguration property: eureka:client:shouldRegisterWithEureka\n"
  example: []
  syntax:
    content: bool ShouldRegisterWithEureka { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Property ShouldRegisterWithEureka As Boolean
  overload: Steeltoe.Discovery.Eureka.IEurekaClientConfig.ShouldRegisterWithEureka*
  modifiers.csharp:
  - get
  - set
- uid: Steeltoe.Discovery.Eureka.IEurekaClientConfig.ShouldDisableDelta
  commentId: P:Steeltoe.Discovery.Eureka.IEurekaClientConfig.ShouldDisableDelta
  id: ShouldDisableDelta
  parent: Steeltoe.Discovery.Eureka.IEurekaClientConfig
  langs:
  - csharp
  - vb
  name: ShouldDisableDelta
  nameWithType: IEurekaClientConfig.ShouldDisableDelta
  fullName: Steeltoe.Discovery.Eureka.IEurekaClientConfig.ShouldDisableDelta
  type: Property
  source:
    remote:
      path: src/Discovery/src/Eureka/IEurekaClientConfig.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: ShouldDisableDelta
    path: ../Steeltoe/src/Discovery/src/Eureka/IEurekaClientConfig.cs
    startLine: 76
  assemblies:
  - Steeltoe.Discovery.Eureka
  namespace: Steeltoe.Discovery.Eureka
  summary: "\nGets or sets a value indicating whether indicates whether the eureka client should disable fetching of delta and should rather resort to getting the full\nregistry information.\n\nNote that the delta fetches can reduce the traffic tremendously, because the rate of change with the eureka server is\nnormally much lower than therate of fetches.\n\nThe changes are effective at runtime at the next registry fetch cycle as specified by <xref href=\"Steeltoe.Discovery.Eureka.IEurekaClientConfig.RegistryFetchIntervalSeconds\" data-throw-if-not-resolved=\"false\"></xref>\n\nConfiguration property: eureka:client:shouldDisableDelta\n"
  example: []
  syntax:
    content: bool ShouldDisableDelta { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Property ShouldDisableDelta As Boolean
  overload: Steeltoe.Discovery.Eureka.IEurekaClientConfig.ShouldDisableDelta*
  modifiers.csharp:
  - get
  - set
- uid: Steeltoe.Discovery.Eureka.IEurekaClientConfig.ShouldFilterOnlyUpInstances
  commentId: P:Steeltoe.Discovery.Eureka.IEurekaClientConfig.ShouldFilterOnlyUpInstances
  id: ShouldFilterOnlyUpInstances
  parent: Steeltoe.Discovery.Eureka.IEurekaClientConfig
  langs:
  - csharp
  - vb
  name: ShouldFilterOnlyUpInstances
  nameWithType: IEurekaClientConfig.ShouldFilterOnlyUpInstances
  fullName: Steeltoe.Discovery.Eureka.IEurekaClientConfig.ShouldFilterOnlyUpInstances
  type: Property
  source:
    remote:
      path: src/Discovery/src/Eureka/IEurekaClientConfig.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: ShouldFilterOnlyUpInstances
    path: ../Steeltoe/src/Discovery/src/Eureka/IEurekaClientConfig.cs
    startLine: 84
  assemblies:
  - Steeltoe.Discovery.Eureka
  namespace: Steeltoe.Discovery.Eureka
  summary: "\nGets or sets a value indicating whether indicates whether to get the <em>applications</em> after filtering the applications for instances with only UP states.\nThe changes are effective at runtime at the next registry fetch cycle as specified by <xref href=\"Steeltoe.Discovery.Eureka.IEurekaClientConfig.RegistryFetchIntervalSeconds\" data-throw-if-not-resolved=\"false\"></xref>\n\nConfiguration property: eureka:client:shouldFilterOnlyUpInstances\n"
  example: []
  syntax:
    content: bool ShouldFilterOnlyUpInstances { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Property ShouldFilterOnlyUpInstances As Boolean
  overload: Steeltoe.Discovery.Eureka.IEurekaClientConfig.ShouldFilterOnlyUpInstances*
  modifiers.csharp:
  - get
  - set
- uid: Steeltoe.Discovery.Eureka.IEurekaClientConfig.ShouldFetchRegistry
  commentId: P:Steeltoe.Discovery.Eureka.IEurekaClientConfig.ShouldFetchRegistry
  id: ShouldFetchRegistry
  parent: Steeltoe.Discovery.Eureka.IEurekaClientConfig
  langs:
  - csharp
  - vb
  name: ShouldFetchRegistry
  nameWithType: IEurekaClientConfig.ShouldFetchRegistry
  fullName: Steeltoe.Discovery.Eureka.IEurekaClientConfig.ShouldFetchRegistry
  type: Property
  source:
    remote:
      path: src/Discovery/src/Eureka/IEurekaClientConfig.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: ShouldFetchRegistry
    path: ../Steeltoe/src/Discovery/src/Eureka/IEurekaClientConfig.cs
    startLine: 90
  assemblies:
  - Steeltoe.Discovery.Eureka
  namespace: Steeltoe.Discovery.Eureka
  summary: "\nGets or sets a value indicating whether indicates whether this client should fetch eureka registry information from eureka server.\nConfiguration property: eureka:client:shouldFetchRegistry\n"
  example: []
  syntax:
    content: bool ShouldFetchRegistry { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Property ShouldFetchRegistry As Boolean
  overload: Steeltoe.Discovery.Eureka.IEurekaClientConfig.ShouldFetchRegistry*
  modifiers.csharp:
  - get
  - set
- uid: Steeltoe.Discovery.Eureka.IEurekaClientConfig.RegistryRefreshSingleVipAddress
  commentId: P:Steeltoe.Discovery.Eureka.IEurekaClientConfig.RegistryRefreshSingleVipAddress
  id: RegistryRefreshSingleVipAddress
  parent: Steeltoe.Discovery.Eureka.IEurekaClientConfig
  langs:
  - csharp
  - vb
  name: RegistryRefreshSingleVipAddress
  nameWithType: IEurekaClientConfig.RegistryRefreshSingleVipAddress
  fullName: Steeltoe.Discovery.Eureka.IEurekaClientConfig.RegistryRefreshSingleVipAddress
  type: Property
  source:
    remote:
      path: src/Discovery/src/Eureka/IEurekaClientConfig.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: RegistryRefreshSingleVipAddress
    path: ../Steeltoe/src/Discovery/src/Eureka/IEurekaClientConfig.cs
    startLine: 96
  assemblies:
  - Steeltoe.Discovery.Eureka
  namespace: Steeltoe.Discovery.Eureka
  summary: "\nGets or sets indicates whether the client is only interested in the registry information for a single VIP.\nConfiguration property: eureka:client:registryRefreshSingleVipAddress\n"
  example: []
  syntax:
    content: string RegistryRefreshSingleVipAddress { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Property RegistryRefreshSingleVipAddress As String
  overload: Steeltoe.Discovery.Eureka.IEurekaClientConfig.RegistryRefreshSingleVipAddress*
  modifiers.csharp:
  - get
  - set
- uid: Steeltoe.Discovery.Eureka.IEurekaClientConfig.ShouldOnDemandUpdateStatusChange
  commentId: P:Steeltoe.Discovery.Eureka.IEurekaClientConfig.ShouldOnDemandUpdateStatusChange
  id: ShouldOnDemandUpdateStatusChange
  parent: Steeltoe.Discovery.Eureka.IEurekaClientConfig
  langs:
  - csharp
  - vb
  name: ShouldOnDemandUpdateStatusChange
  nameWithType: IEurekaClientConfig.ShouldOnDemandUpdateStatusChange
  fullName: Steeltoe.Discovery.Eureka.IEurekaClientConfig.ShouldOnDemandUpdateStatusChange
  type: Property
  source:
    remote:
      path: src/Discovery/src/Eureka/IEurekaClientConfig.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: ShouldOnDemandUpdateStatusChange
    path: ../Steeltoe/src/Discovery/src/Eureka/IEurekaClientConfig.cs
    startLine: 103
  assemblies:
  - Steeltoe.Discovery.Eureka
  namespace: Steeltoe.Discovery.Eureka
  summary: "\nGets or sets a value indicating whether if set to true, local status updates via ApplicationInfoManager#setInstanceStatus(InstanceStatus)}\nwill trigger on-demand (but rate limited) register/updates to remote eureka servers\nConfiguration property: eureka:client:shouldOnDemandUpdateStatusChange\n"
  example: []
  syntax:
    content: bool ShouldOnDemandUpdateStatusChange { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Property ShouldOnDemandUpdateStatusChange As Boolean
  overload: Steeltoe.Discovery.Eureka.IEurekaClientConfig.ShouldOnDemandUpdateStatusChange*
  modifiers.csharp:
  - get
  - set
- uid: Steeltoe.Discovery.Eureka.IEurekaClientConfig.EurekaServerServiceUrls
  commentId: P:Steeltoe.Discovery.Eureka.IEurekaClientConfig.EurekaServerServiceUrls
  id: EurekaServerServiceUrls
  parent: Steeltoe.Discovery.Eureka.IEurekaClientConfig
  langs:
  - csharp
  - vb
  name: EurekaServerServiceUrls
  nameWithType: IEurekaClientConfig.EurekaServerServiceUrls
  fullName: Steeltoe.Discovery.Eureka.IEurekaClientConfig.EurekaServerServiceUrls
  type: Property
  source:
    remote:
      path: src/Discovery/src/Eureka/IEurekaClientConfig.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: EurekaServerServiceUrls
    path: ../Steeltoe/src/Discovery/src/Eureka/IEurekaClientConfig.cs
    startLine: 109
  assemblies:
  - Steeltoe.Discovery.Eureka
  namespace: Steeltoe.Discovery.Eureka
  summary: "\nGets or sets comma delimited list of URls to use in contacting the Eureka Server\nConfiguration property: eureka:client:serviceUrl\n"
  example: []
  syntax:
    content: string EurekaServerServiceUrls { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Property EurekaServerServiceUrls As String
  overload: Steeltoe.Discovery.Eureka.IEurekaClientConfig.EurekaServerServiceUrls*
  modifiers.csharp:
  - get
  - set
- uid: Steeltoe.Discovery.Eureka.IEurekaClientConfig.ValidateCertificates
  commentId: P:Steeltoe.Discovery.Eureka.IEurekaClientConfig.ValidateCertificates
  id: ValidateCertificates
  parent: Steeltoe.Discovery.Eureka.IEurekaClientConfig
  langs:
  - csharp
  - vb
  name: ValidateCertificates
  nameWithType: IEurekaClientConfig.ValidateCertificates
  fullName: Steeltoe.Discovery.Eureka.IEurekaClientConfig.ValidateCertificates
  type: Property
  source:
    remote:
      path: src/Discovery/src/Eureka/IEurekaClientConfig.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: ValidateCertificates
    path: ../Steeltoe/src/Discovery/src/Eureka/IEurekaClientConfig.cs
    startLine: 115
  assemblies:
  - Steeltoe.Discovery.Eureka
  namespace: Steeltoe.Discovery.Eureka
  summary: "\nGets or sets a value indicating whether enables/Disables whether client validates server certificates\nConfiguration property: eureka:client:validate_certificates\n"
  example: []
  syntax:
    content: bool ValidateCertificates { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Property ValidateCertificates As Boolean
  overload: Steeltoe.Discovery.Eureka.IEurekaClientConfig.ValidateCertificates*
  modifiers.csharp:
  - get
  - set
references:
- uid: Steeltoe.Discovery.Eureka
  commentId: N:Steeltoe.Discovery.Eureka
  name: Steeltoe.Discovery.Eureka
  nameWithType: Steeltoe.Discovery.Eureka
  fullName: Steeltoe.Discovery.Eureka
- uid: Steeltoe.Discovery.Eureka.IEurekaClientConfig.RegistryFetchIntervalSeconds*
  commentId: Overload:Steeltoe.Discovery.Eureka.IEurekaClientConfig.RegistryFetchIntervalSeconds
  name: RegistryFetchIntervalSeconds
  nameWithType: IEurekaClientConfig.RegistryFetchIntervalSeconds
  fullName: Steeltoe.Discovery.Eureka.IEurekaClientConfig.RegistryFetchIntervalSeconds
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Steeltoe.Discovery.Eureka.IEurekaClientConfig.ProxyHost*
  commentId: Overload:Steeltoe.Discovery.Eureka.IEurekaClientConfig.ProxyHost
  name: ProxyHost
  nameWithType: IEurekaClientConfig.ProxyHost
  fullName: Steeltoe.Discovery.Eureka.IEurekaClientConfig.ProxyHost
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Steeltoe.Discovery.Eureka.IEurekaClientConfig.ProxyPort*
  commentId: Overload:Steeltoe.Discovery.Eureka.IEurekaClientConfig.ProxyPort
  name: ProxyPort
  nameWithType: IEurekaClientConfig.ProxyPort
  fullName: Steeltoe.Discovery.Eureka.IEurekaClientConfig.ProxyPort
- uid: Steeltoe.Discovery.Eureka.IEurekaClientConfig.ProxyUserName*
  commentId: Overload:Steeltoe.Discovery.Eureka.IEurekaClientConfig.ProxyUserName
  name: ProxyUserName
  nameWithType: IEurekaClientConfig.ProxyUserName
  fullName: Steeltoe.Discovery.Eureka.IEurekaClientConfig.ProxyUserName
- uid: Steeltoe.Discovery.Eureka.IEurekaClientConfig.ProxyPassword*
  commentId: Overload:Steeltoe.Discovery.Eureka.IEurekaClientConfig.ProxyPassword
  name: ProxyPassword
  nameWithType: IEurekaClientConfig.ProxyPassword
  fullName: Steeltoe.Discovery.Eureka.IEurekaClientConfig.ProxyPassword
- uid: Steeltoe.Discovery.Eureka.IEurekaClientConfig.ShouldGZipContent*
  commentId: Overload:Steeltoe.Discovery.Eureka.IEurekaClientConfig.ShouldGZipContent
  name: ShouldGZipContent
  nameWithType: IEurekaClientConfig.ShouldGZipContent
  fullName: Steeltoe.Discovery.Eureka.IEurekaClientConfig.ShouldGZipContent
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Steeltoe.Discovery.Eureka.IEurekaClientConfig.EurekaServerConnectTimeoutSeconds*
  commentId: Overload:Steeltoe.Discovery.Eureka.IEurekaClientConfig.EurekaServerConnectTimeoutSeconds
  name: EurekaServerConnectTimeoutSeconds
  nameWithType: IEurekaClientConfig.EurekaServerConnectTimeoutSeconds
  fullName: Steeltoe.Discovery.Eureka.IEurekaClientConfig.EurekaServerConnectTimeoutSeconds
- uid: Steeltoe.Discovery.Eureka.IEurekaClientConfig.ShouldRegisterWithEureka*
  commentId: Overload:Steeltoe.Discovery.Eureka.IEurekaClientConfig.ShouldRegisterWithEureka
  name: ShouldRegisterWithEureka
  nameWithType: IEurekaClientConfig.ShouldRegisterWithEureka
  fullName: Steeltoe.Discovery.Eureka.IEurekaClientConfig.ShouldRegisterWithEureka
- uid: Steeltoe.Discovery.Eureka.IEurekaClientConfig.RegistryFetchIntervalSeconds
  commentId: P:Steeltoe.Discovery.Eureka.IEurekaClientConfig.RegistryFetchIntervalSeconds
  parent: Steeltoe.Discovery.Eureka.IEurekaClientConfig
  name: RegistryFetchIntervalSeconds
  nameWithType: IEurekaClientConfig.RegistryFetchIntervalSeconds
  fullName: Steeltoe.Discovery.Eureka.IEurekaClientConfig.RegistryFetchIntervalSeconds
- uid: Steeltoe.Discovery.Eureka.IEurekaClientConfig.ShouldDisableDelta*
  commentId: Overload:Steeltoe.Discovery.Eureka.IEurekaClientConfig.ShouldDisableDelta
  name: ShouldDisableDelta
  nameWithType: IEurekaClientConfig.ShouldDisableDelta
  fullName: Steeltoe.Discovery.Eureka.IEurekaClientConfig.ShouldDisableDelta
- uid: Steeltoe.Discovery.Eureka.IEurekaClientConfig
  commentId: T:Steeltoe.Discovery.Eureka.IEurekaClientConfig
  parent: Steeltoe.Discovery.Eureka
  name: IEurekaClientConfig
  nameWithType: IEurekaClientConfig
  fullName: Steeltoe.Discovery.Eureka.IEurekaClientConfig
- uid: Steeltoe.Discovery.Eureka.IEurekaClientConfig.ShouldFilterOnlyUpInstances*
  commentId: Overload:Steeltoe.Discovery.Eureka.IEurekaClientConfig.ShouldFilterOnlyUpInstances
  name: ShouldFilterOnlyUpInstances
  nameWithType: IEurekaClientConfig.ShouldFilterOnlyUpInstances
  fullName: Steeltoe.Discovery.Eureka.IEurekaClientConfig.ShouldFilterOnlyUpInstances
- uid: Steeltoe.Discovery.Eureka.IEurekaClientConfig.ShouldFetchRegistry*
  commentId: Overload:Steeltoe.Discovery.Eureka.IEurekaClientConfig.ShouldFetchRegistry
  name: ShouldFetchRegistry
  nameWithType: IEurekaClientConfig.ShouldFetchRegistry
  fullName: Steeltoe.Discovery.Eureka.IEurekaClientConfig.ShouldFetchRegistry
- uid: Steeltoe.Discovery.Eureka.IEurekaClientConfig.RegistryRefreshSingleVipAddress*
  commentId: Overload:Steeltoe.Discovery.Eureka.IEurekaClientConfig.RegistryRefreshSingleVipAddress
  name: RegistryRefreshSingleVipAddress
  nameWithType: IEurekaClientConfig.RegistryRefreshSingleVipAddress
  fullName: Steeltoe.Discovery.Eureka.IEurekaClientConfig.RegistryRefreshSingleVipAddress
- uid: Steeltoe.Discovery.Eureka.IEurekaClientConfig.ShouldOnDemandUpdateStatusChange*
  commentId: Overload:Steeltoe.Discovery.Eureka.IEurekaClientConfig.ShouldOnDemandUpdateStatusChange
  name: ShouldOnDemandUpdateStatusChange
  nameWithType: IEurekaClientConfig.ShouldOnDemandUpdateStatusChange
  fullName: Steeltoe.Discovery.Eureka.IEurekaClientConfig.ShouldOnDemandUpdateStatusChange
- uid: Steeltoe.Discovery.Eureka.IEurekaClientConfig.EurekaServerServiceUrls*
  commentId: Overload:Steeltoe.Discovery.Eureka.IEurekaClientConfig.EurekaServerServiceUrls
  name: EurekaServerServiceUrls
  nameWithType: IEurekaClientConfig.EurekaServerServiceUrls
  fullName: Steeltoe.Discovery.Eureka.IEurekaClientConfig.EurekaServerServiceUrls
- uid: Steeltoe.Discovery.Eureka.IEurekaClientConfig.ValidateCertificates*
  commentId: Overload:Steeltoe.Discovery.Eureka.IEurekaClientConfig.ValidateCertificates
  name: ValidateCertificates
  nameWithType: IEurekaClientConfig.ValidateCertificates
  fullName: Steeltoe.Discovery.Eureka.IEurekaClientConfig.ValidateCertificates
