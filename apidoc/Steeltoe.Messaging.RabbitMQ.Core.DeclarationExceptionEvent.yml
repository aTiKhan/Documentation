### YamlMime:ManagedReference
items:
- uid: Steeltoe.Messaging.RabbitMQ.Core.DeclarationExceptionEvent
  commentId: T:Steeltoe.Messaging.RabbitMQ.Core.DeclarationExceptionEvent
  id: DeclarationExceptionEvent
  parent: Steeltoe.Messaging.RabbitMQ.Core
  children:
  - Steeltoe.Messaging.RabbitMQ.Core.DeclarationExceptionEvent.#ctor(System.Object,Steeltoe.Messaging.RabbitMQ.Config.IDeclarable,System.Exception)
  - Steeltoe.Messaging.RabbitMQ.Core.DeclarationExceptionEvent.Declarable
  - Steeltoe.Messaging.RabbitMQ.Core.DeclarationExceptionEvent.Exception
  - Steeltoe.Messaging.RabbitMQ.Core.DeclarationExceptionEvent.ToString
  langs:
  - csharp
  - vb
  name: DeclarationExceptionEvent
  nameWithType: DeclarationExceptionEvent
  fullName: Steeltoe.Messaging.RabbitMQ.Core.DeclarationExceptionEvent
  type: Class
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Core/DeclarationExceptionEvent.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: DeclarationExceptionEvent
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Core/DeclarationExceptionEvent.cs
    startLine: 9
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Core
  syntax:
    content: 'public class DeclarationExceptionEvent : RabbitAdminEvent'
    content.vb: >-
      Public Class DeclarationExceptionEvent

          Inherits RabbitAdminEvent
  inheritance:
  - System.Object
  - Steeltoe.Messaging.RabbitMQ.Core.RabbitAdminEvent
  inheritedMembers:
  - Steeltoe.Messaging.RabbitMQ.Core.RabbitAdminEvent.Source
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Steeltoe.Messaging.RabbitMQ.Core.DeclarationExceptionEvent.#ctor(System.Object,Steeltoe.Messaging.RabbitMQ.Config.IDeclarable,System.Exception)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Core.DeclarationExceptionEvent.#ctor(System.Object,Steeltoe.Messaging.RabbitMQ.Config.IDeclarable,System.Exception)
  id: '#ctor(System.Object,Steeltoe.Messaging.RabbitMQ.Config.IDeclarable,System.Exception)'
  parent: Steeltoe.Messaging.RabbitMQ.Core.DeclarationExceptionEvent
  langs:
  - csharp
  - vb
  name: DeclarationExceptionEvent(Object, IDeclarable, Exception)
  nameWithType: DeclarationExceptionEvent.DeclarationExceptionEvent(Object, IDeclarable, Exception)
  fullName: Steeltoe.Messaging.RabbitMQ.Core.DeclarationExceptionEvent.DeclarationExceptionEvent(System.Object, Steeltoe.Messaging.RabbitMQ.Config.IDeclarable, System.Exception)
  type: Constructor
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Core/DeclarationExceptionEvent.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: .ctor
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Core/DeclarationExceptionEvent.cs
    startLine: 11
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Core
  syntax:
    content: public DeclarationExceptionEvent(object source, IDeclarable declarable, Exception exception)
    parameters:
    - id: source
      type: System.Object
    - id: declarable
      type: Steeltoe.Messaging.RabbitMQ.Config.IDeclarable
    - id: exception
      type: System.Exception
    content.vb: Public Sub New(source As Object, declarable As IDeclarable, exception As Exception)
  overload: Steeltoe.Messaging.RabbitMQ.Core.DeclarationExceptionEvent.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Steeltoe.Messaging.RabbitMQ.Core.DeclarationExceptionEvent.Declarable
  commentId: P:Steeltoe.Messaging.RabbitMQ.Core.DeclarationExceptionEvent.Declarable
  id: Declarable
  parent: Steeltoe.Messaging.RabbitMQ.Core.DeclarationExceptionEvent
  langs:
  - csharp
  - vb
  name: Declarable
  nameWithType: DeclarationExceptionEvent.Declarable
  fullName: Steeltoe.Messaging.RabbitMQ.Core.DeclarationExceptionEvent.Declarable
  type: Property
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Core/DeclarationExceptionEvent.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Declarable
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Core/DeclarationExceptionEvent.cs
    startLine: 18
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Core
  syntax:
    content: public IDeclarable Declarable { get; }
    parameters: []
    return:
      type: Steeltoe.Messaging.RabbitMQ.Config.IDeclarable
    content.vb: Public ReadOnly Property Declarable As IDeclarable
  overload: Steeltoe.Messaging.RabbitMQ.Core.DeclarationExceptionEvent.Declarable*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Steeltoe.Messaging.RabbitMQ.Core.DeclarationExceptionEvent.Exception
  commentId: P:Steeltoe.Messaging.RabbitMQ.Core.DeclarationExceptionEvent.Exception
  id: Exception
  parent: Steeltoe.Messaging.RabbitMQ.Core.DeclarationExceptionEvent
  langs:
  - csharp
  - vb
  name: Exception
  nameWithType: DeclarationExceptionEvent.Exception
  fullName: Steeltoe.Messaging.RabbitMQ.Core.DeclarationExceptionEvent.Exception
  type: Property
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Core/DeclarationExceptionEvent.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Exception
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Core/DeclarationExceptionEvent.cs
    startLine: 20
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Core
  syntax:
    content: public Exception Exception { get; }
    parameters: []
    return:
      type: System.Exception
    content.vb: Public ReadOnly Property Exception As Exception
  overload: Steeltoe.Messaging.RabbitMQ.Core.DeclarationExceptionEvent.Exception*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Steeltoe.Messaging.RabbitMQ.Core.DeclarationExceptionEvent.ToString
  commentId: M:Steeltoe.Messaging.RabbitMQ.Core.DeclarationExceptionEvent.ToString
  id: ToString
  parent: Steeltoe.Messaging.RabbitMQ.Core.DeclarationExceptionEvent
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: DeclarationExceptionEvent.ToString()
  fullName: Steeltoe.Messaging.RabbitMQ.Core.DeclarationExceptionEvent.ToString()
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Core/DeclarationExceptionEvent.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: ToString
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Core/DeclarationExceptionEvent.cs
    startLine: 22
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Core
  syntax:
    content: public override string ToString()
    return:
      type: System.String
    content.vb: Public Overrides Function ToString As String
  overridden: System.Object.ToString
  overload: Steeltoe.Messaging.RabbitMQ.Core.DeclarationExceptionEvent.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: Steeltoe.Messaging.RabbitMQ.Core
  commentId: N:Steeltoe.Messaging.RabbitMQ.Core
  name: Steeltoe.Messaging.RabbitMQ.Core
  nameWithType: Steeltoe.Messaging.RabbitMQ.Core
  fullName: Steeltoe.Messaging.RabbitMQ.Core
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitAdminEvent
  commentId: T:Steeltoe.Messaging.RabbitMQ.Core.RabbitAdminEvent
  parent: Steeltoe.Messaging.RabbitMQ.Core
  name: RabbitAdminEvent
  nameWithType: RabbitAdminEvent
  fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitAdminEvent
- uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitAdminEvent.Source
  commentId: P:Steeltoe.Messaging.RabbitMQ.Core.RabbitAdminEvent.Source
  parent: Steeltoe.Messaging.RabbitMQ.Core.RabbitAdminEvent
  name: Source
  nameWithType: RabbitAdminEvent.Source
  fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitAdminEvent.Source
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Steeltoe.Messaging.RabbitMQ.Core.DeclarationExceptionEvent.#ctor*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Core.DeclarationExceptionEvent.#ctor
  name: DeclarationExceptionEvent
  nameWithType: DeclarationExceptionEvent.DeclarationExceptionEvent
  fullName: Steeltoe.Messaging.RabbitMQ.Core.DeclarationExceptionEvent.DeclarationExceptionEvent
- uid: Steeltoe.Messaging.RabbitMQ.Config.IDeclarable
  commentId: T:Steeltoe.Messaging.RabbitMQ.Config.IDeclarable
  parent: Steeltoe.Messaging.RabbitMQ.Config
  name: IDeclarable
  nameWithType: IDeclarable
  fullName: Steeltoe.Messaging.RabbitMQ.Config.IDeclarable
- uid: System.Exception
  commentId: T:System.Exception
  parent: System
  isExternal: true
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: Steeltoe.Messaging.RabbitMQ.Config
  commentId: N:Steeltoe.Messaging.RabbitMQ.Config
  name: Steeltoe.Messaging.RabbitMQ.Config
  nameWithType: Steeltoe.Messaging.RabbitMQ.Config
  fullName: Steeltoe.Messaging.RabbitMQ.Config
- uid: Steeltoe.Messaging.RabbitMQ.Core.DeclarationExceptionEvent.Declarable*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Core.DeclarationExceptionEvent.Declarable
  name: Declarable
  nameWithType: DeclarationExceptionEvent.Declarable
  fullName: Steeltoe.Messaging.RabbitMQ.Core.DeclarationExceptionEvent.Declarable
- uid: Steeltoe.Messaging.RabbitMQ.Core.DeclarationExceptionEvent.Exception*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Core.DeclarationExceptionEvent.Exception
  name: Exception
  nameWithType: DeclarationExceptionEvent.Exception
  fullName: Steeltoe.Messaging.RabbitMQ.Core.DeclarationExceptionEvent.Exception
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Core.DeclarationExceptionEvent.ToString*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Core.DeclarationExceptionEvent.ToString
  name: ToString
  nameWithType: DeclarationExceptionEvent.ToString
  fullName: Steeltoe.Messaging.RabbitMQ.Core.DeclarationExceptionEvent.ToString
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
