### YamlMime:ManagedReference
items:
- uid: Steeltoe.Common.Http.HttpClientHelper
  commentId: T:Steeltoe.Common.Http.HttpClientHelper
  id: HttpClientHelper
  parent: Steeltoe.Common.Http
  children:
  - Steeltoe.Common.Http.HttpClientHelper.ConfigureCertificateValidation(System.Boolean,System.Net.SecurityProtocolType@,System.Net.Security.RemoteCertificateValidationCallback@)
  - Steeltoe.Common.Http.HttpClientHelper.GetAccessToken(System.String,System.String,System.String,System.Int32,System.Boolean,System.Net.Http.HttpClient,ILogger)
  - Steeltoe.Common.Http.HttpClientHelper.GetAccessToken(System.Uri,System.String,System.String,System.Int32,System.Boolean,System.Collections.Generic.Dictionary{System.String,System.String},System.Net.Http.HttpClient,ILogger)
  - Steeltoe.Common.Http.HttpClientHelper.GetEncodedUserPassword(System.String,System.String)
  - Steeltoe.Common.Http.HttpClientHelper.GetHttpClient(System.Boolean,System.Int32)
  - Steeltoe.Common.Http.HttpClientHelper.GetHttpClient(System.Boolean,System.Net.Http.HttpClientHandler,System.Int32)
  - Steeltoe.Common.Http.HttpClientHelper.GetHttpClient(System.Net.Http.HttpMessageHandler,System.Int32)
  - Steeltoe.Common.Http.HttpClientHelper.GetRequestMessage(System.Net.Http.HttpMethod,System.String,System.Func{System.String})
  - Steeltoe.Common.Http.HttpClientHelper.GetRequestMessage(System.Net.Http.HttpMethod,System.String,System.String,System.String)
  - Steeltoe.Common.Http.HttpClientHelper.RestoreCertificateValidation(System.Boolean,System.Net.SecurityProtocolType,System.Net.Security.RemoteCertificateValidationCallback)
  - Steeltoe.Common.Http.HttpClientHelper.SteeltoeUserAgent
  langs:
  - csharp
  - vb
  name: HttpClientHelper
  nameWithType: HttpClientHelper
  fullName: Steeltoe.Common.Http.HttpClientHelper
  type: Class
  source:
    remote:
      path: src/Common/src/Common.Http/HttpClientHelper.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: HttpClientHelper
    path: ../Steeltoe/src/Common/src/Common.Http/HttpClientHelper.cs
    startLine: 21
  assemblies:
  - Steeltoe.Common.Http
  namespace: Steeltoe.Common.Http
  syntax:
    content: public static class HttpClientHelper
    content.vb: Public Module HttpClientHelper
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Steeltoe.Common.Http.HttpClientHelper.SteeltoeUserAgent
  commentId: P:Steeltoe.Common.Http.HttpClientHelper.SteeltoeUserAgent
  id: SteeltoeUserAgent
  parent: Steeltoe.Common.Http.HttpClientHelper
  langs:
  - csharp
  - vb
  name: SteeltoeUserAgent
  nameWithType: HttpClientHelper.SteeltoeUserAgent
  fullName: Steeltoe.Common.Http.HttpClientHelper.SteeltoeUserAgent
  type: Property
  source:
    remote:
      path: src/Common/src/Common.Http/HttpClientHelper.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: SteeltoeUserAgent
    path: ../Steeltoe/src/Common/src/Common.Http/HttpClientHelper.cs
    startLine: 23
  assemblies:
  - Steeltoe.Common.Http
  namespace: Steeltoe.Common.Http
  syntax:
    content: public static string SteeltoeUserAgent { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Shared ReadOnly Property SteeltoeUserAgent As String
  overload: Steeltoe.Common.Http.HttpClientHelper.SteeltoeUserAgent*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Steeltoe.Common.Http.HttpClientHelper.GetHttpClient(System.Boolean,System.Int32)
  commentId: M:Steeltoe.Common.Http.HttpClientHelper.GetHttpClient(System.Boolean,System.Int32)
  id: GetHttpClient(System.Boolean,System.Int32)
  parent: Steeltoe.Common.Http.HttpClientHelper
  langs:
  - csharp
  - vb
  name: GetHttpClient(Boolean, Int32)
  nameWithType: HttpClientHelper.GetHttpClient(Boolean, Int32)
  fullName: Steeltoe.Common.Http.HttpClientHelper.GetHttpClient(System.Boolean, System.Int32)
  type: Method
  source:
    remote:
      path: src/Common/src/Common.Http/HttpClientHelper.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: GetHttpClient
    path: ../Steeltoe/src/Common/src/Common.Http/HttpClientHelper.cs
    startLine: 37
  assemblies:
  - Steeltoe.Common.Http
  namespace: Steeltoe.Common.Http
  summary: "\nGets an HttpClient with user agent <xref href=\"Steeltoe.Common.Http.HttpClientHelper.SteeltoeUserAgent\" data-throw-if-not-resolved=\"false\"></xref>\n"
  example: []
  syntax:
    content: public static HttpClient GetHttpClient(bool validateCertificates, int timeoutMillis)
    parameters:
    - id: validateCertificates
      type: System.Boolean
      description: Whether or not remote certificates should be validated
    - id: timeoutMillis
      type: System.Int32
      description: Timeout in milliseconds
    return:
      type: System.Net.Http.HttpClient
    content.vb: Public Shared Function GetHttpClient(validateCertificates As Boolean, timeoutMillis As Integer) As HttpClient
  overload: Steeltoe.Common.Http.HttpClientHelper.GetHttpClient*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Steeltoe.Common.Http.HttpClientHelper.GetHttpClient(System.Boolean,System.Net.Http.HttpClientHandler,System.Int32)
  commentId: M:Steeltoe.Common.Http.HttpClientHelper.GetHttpClient(System.Boolean,System.Net.Http.HttpClientHandler,System.Int32)
  id: GetHttpClient(System.Boolean,System.Net.Http.HttpClientHandler,System.Int32)
  parent: Steeltoe.Common.Http.HttpClientHelper
  langs:
  - csharp
  - vb
  name: GetHttpClient(Boolean, HttpClientHandler, Int32)
  nameWithType: HttpClientHelper.GetHttpClient(Boolean, HttpClientHandler, Int32)
  fullName: Steeltoe.Common.Http.HttpClientHelper.GetHttpClient(System.Boolean, System.Net.Http.HttpClientHandler, System.Int32)
  type: Method
  source:
    remote:
      path: src/Common/src/Common.Http/HttpClientHelper.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: GetHttpClient
    path: ../Steeltoe/src/Common/src/Common.Http/HttpClientHelper.cs
    startLine: 48
  assemblies:
  - Steeltoe.Common.Http
  namespace: Steeltoe.Common.Http
  summary: "\nGets an HttpClient with user agent <xref href=\"Steeltoe.Common.Http.HttpClientHelper.SteeltoeUserAgent\" data-throw-if-not-resolved=\"false\"></xref>\n"
  example: []
  syntax:
    content: public static HttpClient GetHttpClient(bool validateCertificates, HttpClientHandler handler, int timeoutMillis)
    parameters:
    - id: validateCertificates
      type: System.Boolean
      description: Whether or not remote certificates should be validated
    - id: handler
      type: System.Net.Http.HttpClientHandler
      description: A pre-defined <xref href="System.Net.Http.HttpClientHandler" data-throw-if-not-resolved="false"></xref>
    - id: timeoutMillis
      type: System.Int32
      description: Timeout in milliseconds
    return:
      type: System.Net.Http.HttpClient
    content.vb: Public Shared Function GetHttpClient(validateCertificates As Boolean, handler As HttpClientHandler, timeoutMillis As Integer) As HttpClient
  overload: Steeltoe.Common.Http.HttpClientHelper.GetHttpClient*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Steeltoe.Common.Http.HttpClientHelper.GetHttpClient(System.Net.Http.HttpMessageHandler,System.Int32)
  commentId: M:Steeltoe.Common.Http.HttpClientHelper.GetHttpClient(System.Net.Http.HttpMessageHandler,System.Int32)
  id: GetHttpClient(System.Net.Http.HttpMessageHandler,System.Int32)
  parent: Steeltoe.Common.Http.HttpClientHelper
  langs:
  - csharp
  - vb
  name: GetHttpClient(HttpMessageHandler, Int32)
  nameWithType: HttpClientHelper.GetHttpClient(HttpMessageHandler, Int32)
  fullName: Steeltoe.Common.Http.HttpClientHelper.GetHttpClient(System.Net.Http.HttpMessageHandler, System.Int32)
  type: Method
  source:
    remote:
      path: src/Common/src/Common.Http/HttpClientHelper.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: GetHttpClient
    path: ../Steeltoe/src/Common/src/Common.Http/HttpClientHelper.cs
    startLine: 84
  assemblies:
  - Steeltoe.Common.Http
  namespace: Steeltoe.Common.Http
  summary: "\nGets an HttpClient with user agent <xref href=\"Steeltoe.Common.Http.HttpClientHelper.SteeltoeUserAgent\" data-throw-if-not-resolved=\"false\"></xref>\n"
  example: []
  syntax:
    content: public static HttpClient GetHttpClient(HttpMessageHandler handler, int timeoutMillis = 1500)
    parameters:
    - id: handler
      type: System.Net.Http.HttpMessageHandler
      description: A pre-defined <xref href="System.Net.Http.HttpMessageHandler" data-throw-if-not-resolved="false"></xref>
    - id: timeoutMillis
      type: System.Int32
      description: Timeout in milliseconds
    return:
      type: System.Net.Http.HttpClient
    content.vb: Public Shared Function GetHttpClient(handler As HttpMessageHandler, timeoutMillis As Integer = 1500) As HttpClient
  overload: Steeltoe.Common.Http.HttpClientHelper.GetHttpClient*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Steeltoe.Common.Http.HttpClientHelper.ConfigureCertificateValidation(System.Boolean,System.Net.SecurityProtocolType@,System.Net.Security.RemoteCertificateValidationCallback@)
  commentId: M:Steeltoe.Common.Http.HttpClientHelper.ConfigureCertificateValidation(System.Boolean,System.Net.SecurityProtocolType@,System.Net.Security.RemoteCertificateValidationCallback@)
  id: ConfigureCertificateValidation(System.Boolean,System.Net.SecurityProtocolType@,System.Net.Security.RemoteCertificateValidationCallback@)
  parent: Steeltoe.Common.Http.HttpClientHelper
  langs:
  - csharp
  - vb
  name: ConfigureCertificateValidation(Boolean, out SecurityProtocolType, out RemoteCertificateValidationCallback)
  nameWithType: HttpClientHelper.ConfigureCertificateValidation(Boolean, out SecurityProtocolType, out RemoteCertificateValidationCallback)
  fullName: Steeltoe.Common.Http.HttpClientHelper.ConfigureCertificateValidation(System.Boolean, out System.Net.SecurityProtocolType, out System.Net.Security.RemoteCertificateValidationCallback)
  type: Method
  source:
    remote:
      path: src/Common/src/Common.Http/HttpClientHelper.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: ConfigureCertificateValidation
    path: ../Steeltoe/src/Common/src/Common.Http/HttpClientHelper.cs
    startLine: 98
  assemblies:
  - Steeltoe.Common.Http
  namespace: Steeltoe.Common.Http
  summary: "\nDisable certificate validation on demand. Has no effect unless <xref href=\"Steeltoe.Common.Platform.IsFullFramework\" data-throw-if-not-resolved=\"false\"></xref>\n"
  example: []
  syntax:
    content: public static void ConfigureCertificateValidation(bool validateCertificates, out SecurityProtocolType protocolType, out RemoteCertificateValidationCallback prevValidator)
    parameters:
    - id: validateCertificates
      type: System.Boolean
      description: Whether or not certificates should be validated
    - id: protocolType
      type: System.Net.SecurityProtocolType
      description: <xref href="System.Net.SecurityProtocolType" data-throw-if-not-resolved="false"></xref>
    - id: prevValidator
      type: System.Net.Security.RemoteCertificateValidationCallback
      description: Pre-existing certificate validation callback
    content.vb: Public Shared Sub ConfigureCertificateValidation(validateCertificates As Boolean, ByRef protocolType As SecurityProtocolType, ByRef prevValidator As RemoteCertificateValidationCallback)
  overload: Steeltoe.Common.Http.HttpClientHelper.ConfigureCertificateValidation*
  nameWithType.vb: HttpClientHelper.ConfigureCertificateValidation(Boolean, ByRef SecurityProtocolType, ByRef RemoteCertificateValidationCallback)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Steeltoe.Common.Http.HttpClientHelper.ConfigureCertificateValidation(System.Boolean, ByRef System.Net.SecurityProtocolType, ByRef System.Net.Security.RemoteCertificateValidationCallback)
  name.vb: ConfigureCertificateValidation(Boolean, ByRef SecurityProtocolType, ByRef RemoteCertificateValidationCallback)
- uid: Steeltoe.Common.Http.HttpClientHelper.RestoreCertificateValidation(System.Boolean,System.Net.SecurityProtocolType,System.Net.Security.RemoteCertificateValidationCallback)
  commentId: M:Steeltoe.Common.Http.HttpClientHelper.RestoreCertificateValidation(System.Boolean,System.Net.SecurityProtocolType,System.Net.Security.RemoteCertificateValidationCallback)
  id: RestoreCertificateValidation(System.Boolean,System.Net.SecurityProtocolType,System.Net.Security.RemoteCertificateValidationCallback)
  parent: Steeltoe.Common.Http.HttpClientHelper
  langs:
  - csharp
  - vb
  name: RestoreCertificateValidation(Boolean, SecurityProtocolType, RemoteCertificateValidationCallback)
  nameWithType: HttpClientHelper.RestoreCertificateValidation(Boolean, SecurityProtocolType, RemoteCertificateValidationCallback)
  fullName: Steeltoe.Common.Http.HttpClientHelper.RestoreCertificateValidation(System.Boolean, System.Net.SecurityProtocolType, System.Net.Security.RemoteCertificateValidationCallback)
  type: Method
  source:
    remote:
      path: src/Common/src/Common.Http/HttpClientHelper.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: RestoreCertificateValidation
    path: ../Steeltoe/src/Common/src/Common.Http/HttpClientHelper.cs
    startLine: 123
  assemblies:
  - Steeltoe.Common.Http
  namespace: Steeltoe.Common.Http
  summary: "\nReturns certificate validation to its original state. Has no effect unless <xref href=\"Steeltoe.Common.Platform.IsFullFramework\" data-throw-if-not-resolved=\"false\"></xref>\n"
  example: []
  syntax:
    content: public static void RestoreCertificateValidation(bool validateCertificates, SecurityProtocolType protocolType, RemoteCertificateValidationCallback prevValidator)
    parameters:
    - id: validateCertificates
      type: System.Boolean
      description: Whether or not certificates should be validated
    - id: protocolType
      type: System.Net.SecurityProtocolType
      description: <xref href="System.Net.SecurityProtocolType" data-throw-if-not-resolved="false"></xref>
    - id: prevValidator
      type: System.Net.Security.RemoteCertificateValidationCallback
      description: Pre-existing certificate validation callback
    content.vb: Public Shared Sub RestoreCertificateValidation(validateCertificates As Boolean, protocolType As SecurityProtocolType, prevValidator As RemoteCertificateValidationCallback)
  overload: Steeltoe.Common.Http.HttpClientHelper.RestoreCertificateValidation*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Steeltoe.Common.Http.HttpClientHelper.GetEncodedUserPassword(System.String,System.String)
  commentId: M:Steeltoe.Common.Http.HttpClientHelper.GetEncodedUserPassword(System.String,System.String)
  id: GetEncodedUserPassword(System.String,System.String)
  parent: Steeltoe.Common.Http.HttpClientHelper
  langs:
  - csharp
  - vb
  name: GetEncodedUserPassword(String, String)
  nameWithType: HttpClientHelper.GetEncodedUserPassword(String, String)
  fullName: Steeltoe.Common.Http.HttpClientHelper.GetEncodedUserPassword(System.String, System.String)
  type: Method
  source:
    remote:
      path: src/Common/src/Common.Http/HttpClientHelper.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: GetEncodedUserPassword
    path: ../Steeltoe/src/Common/src/Common.Http/HttpClientHelper.cs
    startLine: 135
  assemblies:
  - Steeltoe.Common.Http
  namespace: Steeltoe.Common.Http
  syntax:
    content: public static string GetEncodedUserPassword(string user, string password)
    parameters:
    - id: user
      type: System.String
    - id: password
      type: System.String
    return:
      type: System.String
    content.vb: Public Shared Function GetEncodedUserPassword(user As String, password As String) As String
  overload: Steeltoe.Common.Http.HttpClientHelper.GetEncodedUserPassword*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Steeltoe.Common.Http.HttpClientHelper.GetRequestMessage(System.Net.Http.HttpMethod,System.String,System.Func{System.String})
  commentId: M:Steeltoe.Common.Http.HttpClientHelper.GetRequestMessage(System.Net.Http.HttpMethod,System.String,System.Func{System.String})
  id: GetRequestMessage(System.Net.Http.HttpMethod,System.String,System.Func{System.String})
  parent: Steeltoe.Common.Http.HttpClientHelper
  langs:
  - csharp
  - vb
  name: GetRequestMessage(HttpMethod, String, Func<String>)
  nameWithType: HttpClientHelper.GetRequestMessage(HttpMethod, String, Func<String>)
  fullName: Steeltoe.Common.Http.HttpClientHelper.GetRequestMessage(System.Net.Http.HttpMethod, System.String, System.Func<System.String>)
  type: Method
  source:
    remote:
      path: src/Common/src/Common.Http/HttpClientHelper.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: GetRequestMessage
    path: ../Steeltoe/src/Common/src/Common.Http/HttpClientHelper.cs
    startLine: 156
  assemblies:
  - Steeltoe.Common.Http
  namespace: Steeltoe.Common.Http
  summary: "\nCreates an <xref href=\"System.Net.Http.HttpRequestMessage\" data-throw-if-not-resolved=\"false\"></xref> from the provided information\n"
  example: []
  syntax:
    content: public static HttpRequestMessage GetRequestMessage(HttpMethod method, string requestUri, Func<string> getAccessToken)
    parameters:
    - id: method
      type: System.Net.Http.HttpMethod
      description: <xref href="System.Net.Http.HttpMethod" data-throw-if-not-resolved="false"></xref>
    - id: requestUri
      type: System.String
      description: The remote Uri
    - id: getAccessToken
      type: System.Func{System.String}
      description: A means of including a bearer token
    return:
      type: System.Net.Http.HttpRequestMessage
    content.vb: Public Shared Function GetRequestMessage(method As HttpMethod, requestUri As String, getAccessToken As Func(Of String)) As HttpRequestMessage
  overload: Steeltoe.Common.Http.HttpClientHelper.GetRequestMessage*
  nameWithType.vb: HttpClientHelper.GetRequestMessage(HttpMethod, String, Func(Of String))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Steeltoe.Common.Http.HttpClientHelper.GetRequestMessage(System.Net.Http.HttpMethod, System.String, System.Func(Of System.String))
  name.vb: GetRequestMessage(HttpMethod, String, Func(Of String))
- uid: Steeltoe.Common.Http.HttpClientHelper.GetRequestMessage(System.Net.Http.HttpMethod,System.String,System.String,System.String)
  commentId: M:Steeltoe.Common.Http.HttpClientHelper.GetRequestMessage(System.Net.Http.HttpMethod,System.String,System.String,System.String)
  id: GetRequestMessage(System.Net.Http.HttpMethod,System.String,System.String,System.String)
  parent: Steeltoe.Common.Http.HttpClientHelper
  langs:
  - csharp
  - vb
  name: GetRequestMessage(HttpMethod, String, String, String)
  nameWithType: HttpClientHelper.GetRequestMessage(HttpMethod, String, String, String)
  fullName: Steeltoe.Common.Http.HttpClientHelper.GetRequestMessage(System.Net.Http.HttpMethod, System.String, System.String, System.String)
  type: Method
  source:
    remote:
      path: src/Common/src/Common.Http/HttpClientHelper.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: GetRequestMessage
    path: ../Steeltoe/src/Common/src/Common.Http/HttpClientHelper.cs
    startLine: 181
  assemblies:
  - Steeltoe.Common.Http
  namespace: Steeltoe.Common.Http
  summary: "\nCreates an <xref href=\"System.Net.Http.HttpRequestMessage\" data-throw-if-not-resolved=\"false\"></xref> from the provided information\n"
  example: []
  syntax:
    content: public static HttpRequestMessage GetRequestMessage(HttpMethod method, string requestUri, string userName, string password)
    parameters:
    - id: method
      type: System.Net.Http.HttpMethod
      description: <xref href="System.Net.Http.HttpMethod" data-throw-if-not-resolved="false"></xref>
    - id: requestUri
      type: System.String
      description: The remote Uri
    - id: userName
      type: System.String
      description: Optional Basic Auth Username. Not used unless password is not null or empty
    - id: password
      type: System.String
      description: Optional Basic Auth Password
    return:
      type: System.Net.Http.HttpRequestMessage
    content.vb: Public Shared Function GetRequestMessage(method As HttpMethod, requestUri As String, userName As String, password As String) As HttpRequestMessage
  overload: Steeltoe.Common.Http.HttpClientHelper.GetRequestMessage*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Steeltoe.Common.Http.HttpClientHelper.GetAccessToken(System.String,System.String,System.String,System.Int32,System.Boolean,System.Net.Http.HttpClient,ILogger)
  commentId: M:Steeltoe.Common.Http.HttpClientHelper.GetAccessToken(System.String,System.String,System.String,System.Int32,System.Boolean,System.Net.Http.HttpClient,ILogger)
  id: GetAccessToken(System.String,System.String,System.String,System.Int32,System.Boolean,System.Net.Http.HttpClient,ILogger)
  parent: Steeltoe.Common.Http.HttpClientHelper
  langs:
  - csharp
  - vb
  name: GetAccessToken(String, String, String, Int32, Boolean, HttpClient, ILogger)
  nameWithType: HttpClientHelper.GetAccessToken(String, String, String, Int32, Boolean, HttpClient, ILogger)
  fullName: Steeltoe.Common.Http.HttpClientHelper.GetAccessToken(System.String, System.String, System.String, System.Int32, System.Boolean, System.Net.Http.HttpClient, ILogger)
  type: Method
  source:
    remote:
      path: src/Common/src/Common.Http/HttpClientHelper.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: GetAccessToken
    path: ../Steeltoe/src/Common/src/Common.Http/HttpClientHelper.cs
    startLine: 205
  assemblies:
  - Steeltoe.Common.Http
  namespace: Steeltoe.Common.Http
  syntax:
    content: public static Task<string> GetAccessToken(string accessTokenUri, string clientId, string clientSecret, int timeout = 10000, bool validateCertificates = true, HttpClient httpClient = null, ILogger logger = null)
    parameters:
    - id: accessTokenUri
      type: System.String
    - id: clientId
      type: System.String
    - id: clientSecret
      type: System.String
    - id: timeout
      type: System.Int32
    - id: validateCertificates
      type: System.Boolean
    - id: httpClient
      type: System.Net.Http.HttpClient
    - id: logger
      type: ILogger
    return:
      type: System.Threading.Tasks.Task{System.String}
    content.vb: Public Shared Function GetAccessToken(accessTokenUri As String, clientId As String, clientSecret As String, timeout As Integer = 10000, validateCertificates As Boolean = True, httpClient As HttpClient = Nothing, logger As ILogger = Nothing) As Task(Of String)
  overload: Steeltoe.Common.Http.HttpClientHelper.GetAccessToken*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Steeltoe.Common.Http.HttpClientHelper.GetAccessToken(System.Uri,System.String,System.String,System.Int32,System.Boolean,System.Collections.Generic.Dictionary{System.String,System.String},System.Net.Http.HttpClient,ILogger)
  commentId: M:Steeltoe.Common.Http.HttpClientHelper.GetAccessToken(System.Uri,System.String,System.String,System.Int32,System.Boolean,System.Collections.Generic.Dictionary{System.String,System.String},System.Net.Http.HttpClient,ILogger)
  id: GetAccessToken(System.Uri,System.String,System.String,System.Int32,System.Boolean,System.Collections.Generic.Dictionary{System.String,System.String},System.Net.Http.HttpClient,ILogger)
  parent: Steeltoe.Common.Http.HttpClientHelper
  langs:
  - csharp
  - vb
  name: GetAccessToken(Uri, String, String, Int32, Boolean, Dictionary<String, String>, HttpClient, ILogger)
  nameWithType: HttpClientHelper.GetAccessToken(Uri, String, String, Int32, Boolean, Dictionary<String, String>, HttpClient, ILogger)
  fullName: Steeltoe.Common.Http.HttpClientHelper.GetAccessToken(System.Uri, System.String, System.String, System.Int32, System.Boolean, System.Collections.Generic.Dictionary<System.String, System.String>, System.Net.Http.HttpClient, ILogger)
  type: Method
  source:
    remote:
      path: src/Common/src/Common.Http/HttpClientHelper.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: GetAccessToken
    path: ../Steeltoe/src/Common/src/Common.Http/HttpClientHelper.cs
    startLine: 223
  assemblies:
  - Steeltoe.Common.Http
  namespace: Steeltoe.Common.Http
  syntax:
    content: public static Task<string> GetAccessToken(Uri accessTokenUri, string clientId, string clientSecret, int timeout = 10000, bool validateCertificates = true, Dictionary<string, string> additionalParams = null, HttpClient httpClient = null, ILogger logger = null)
    parameters:
    - id: accessTokenUri
      type: System.Uri
    - id: clientId
      type: System.String
    - id: clientSecret
      type: System.String
    - id: timeout
      type: System.Int32
    - id: validateCertificates
      type: System.Boolean
    - id: additionalParams
      type: System.Collections.Generic.Dictionary{System.String,System.String}
    - id: httpClient
      type: System.Net.Http.HttpClient
    - id: logger
      type: ILogger
    return:
      type: System.Threading.Tasks.Task{System.String}
    content.vb: Public Shared Function GetAccessToken(accessTokenUri As Uri, clientId As String, clientSecret As String, timeout As Integer = 10000, validateCertificates As Boolean = True, additionalParams As Dictionary(Of String, String) = Nothing, httpClient As HttpClient = Nothing, logger As ILogger = Nothing) As Task(Of String)
  overload: Steeltoe.Common.Http.HttpClientHelper.GetAccessToken*
  nameWithType.vb: HttpClientHelper.GetAccessToken(Uri, String, String, Int32, Boolean, Dictionary(Of String, String), HttpClient, ILogger)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Steeltoe.Common.Http.HttpClientHelper.GetAccessToken(System.Uri, System.String, System.String, System.Int32, System.Boolean, System.Collections.Generic.Dictionary(Of System.String, System.String), System.Net.Http.HttpClient, ILogger)
  name.vb: GetAccessToken(Uri, String, String, Int32, Boolean, Dictionary(Of String, String), HttpClient, ILogger)
references:
- uid: Steeltoe.Common.Http
  commentId: N:Steeltoe.Common.Http
  name: Steeltoe.Common.Http
  nameWithType: Steeltoe.Common.Http
  fullName: Steeltoe.Common.Http
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Steeltoe.Common.Http.HttpClientHelper.SteeltoeUserAgent*
  commentId: Overload:Steeltoe.Common.Http.HttpClientHelper.SteeltoeUserAgent
  name: SteeltoeUserAgent
  nameWithType: HttpClientHelper.SteeltoeUserAgent
  fullName: Steeltoe.Common.Http.HttpClientHelper.SteeltoeUserAgent
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Steeltoe.Common.Http.HttpClientHelper.SteeltoeUserAgent
  commentId: P:Steeltoe.Common.Http.HttpClientHelper.SteeltoeUserAgent
  isExternal: true
- uid: Steeltoe.Common.Http.HttpClientHelper.GetHttpClient*
  commentId: Overload:Steeltoe.Common.Http.HttpClientHelper.GetHttpClient
  name: GetHttpClient
  nameWithType: HttpClientHelper.GetHttpClient
  fullName: Steeltoe.Common.Http.HttpClientHelper.GetHttpClient
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Net.Http.HttpClient
  commentId: T:System.Net.Http.HttpClient
  parent: System.Net.Http
  isExternal: true
  name: HttpClient
  nameWithType: HttpClient
  fullName: System.Net.Http.HttpClient
- uid: System.Net.Http
  commentId: N:System.Net.Http
  isExternal: true
  name: System.Net.Http
  nameWithType: System.Net.Http
  fullName: System.Net.Http
- uid: System.Net.Http.HttpClientHandler
  commentId: T:System.Net.Http.HttpClientHandler
  parent: System.Net.Http
  isExternal: true
  name: HttpClientHandler
  nameWithType: HttpClientHandler
  fullName: System.Net.Http.HttpClientHandler
- uid: System.Net.Http.HttpMessageHandler
  commentId: T:System.Net.Http.HttpMessageHandler
  parent: System.Net.Http
  isExternal: true
  name: HttpMessageHandler
  nameWithType: HttpMessageHandler
  fullName: System.Net.Http.HttpMessageHandler
- uid: Steeltoe.Common.Platform.IsFullFramework
  commentId: P:Steeltoe.Common.Platform.IsFullFramework
  isExternal: true
- uid: System.Net.SecurityProtocolType
  commentId: T:System.Net.SecurityProtocolType
  parent: System.Net
  isExternal: true
  name: SecurityProtocolType
  nameWithType: SecurityProtocolType
  fullName: System.Net.SecurityProtocolType
- uid: Steeltoe.Common.Http.HttpClientHelper.ConfigureCertificateValidation*
  commentId: Overload:Steeltoe.Common.Http.HttpClientHelper.ConfigureCertificateValidation
  name: ConfigureCertificateValidation
  nameWithType: HttpClientHelper.ConfigureCertificateValidation
  fullName: Steeltoe.Common.Http.HttpClientHelper.ConfigureCertificateValidation
- uid: System.Net.Security.RemoteCertificateValidationCallback
  commentId: T:System.Net.Security.RemoteCertificateValidationCallback
  parent: System.Net.Security
  isExternal: true
  name: RemoteCertificateValidationCallback
  nameWithType: RemoteCertificateValidationCallback
  fullName: System.Net.Security.RemoteCertificateValidationCallback
- uid: System.Net
  commentId: N:System.Net
  isExternal: true
  name: System.Net
  nameWithType: System.Net
  fullName: System.Net
- uid: System.Net.Security
  commentId: N:System.Net.Security
  isExternal: true
  name: System.Net.Security
  nameWithType: System.Net.Security
  fullName: System.Net.Security
- uid: Steeltoe.Common.Http.HttpClientHelper.RestoreCertificateValidation*
  commentId: Overload:Steeltoe.Common.Http.HttpClientHelper.RestoreCertificateValidation
  name: RestoreCertificateValidation
  nameWithType: HttpClientHelper.RestoreCertificateValidation
  fullName: Steeltoe.Common.Http.HttpClientHelper.RestoreCertificateValidation
- uid: Steeltoe.Common.Http.HttpClientHelper.GetEncodedUserPassword*
  commentId: Overload:Steeltoe.Common.Http.HttpClientHelper.GetEncodedUserPassword
  name: GetEncodedUserPassword
  nameWithType: HttpClientHelper.GetEncodedUserPassword
  fullName: Steeltoe.Common.Http.HttpClientHelper.GetEncodedUserPassword
- uid: System.Net.Http.HttpRequestMessage
  commentId: T:System.Net.Http.HttpRequestMessage
  parent: System.Net.Http
  isExternal: true
  name: HttpRequestMessage
  nameWithType: HttpRequestMessage
  fullName: System.Net.Http.HttpRequestMessage
- uid: System.Net.Http.HttpMethod
  commentId: T:System.Net.Http.HttpMethod
  parent: System.Net.Http
  isExternal: true
  name: HttpMethod
  nameWithType: HttpMethod
  fullName: System.Net.Http.HttpMethod
- uid: Steeltoe.Common.Http.HttpClientHelper.GetRequestMessage*
  commentId: Overload:Steeltoe.Common.Http.HttpClientHelper.GetRequestMessage
  name: GetRequestMessage
  nameWithType: HttpClientHelper.GetRequestMessage
  fullName: Steeltoe.Common.Http.HttpClientHelper.GetRequestMessage
- uid: System.Func{System.String}
  commentId: T:System.Func{System.String}
  parent: System
  definition: System.Func`1
  name: Func<String>
  nameWithType: Func<String>
  fullName: System.Func<System.String>
  nameWithType.vb: Func(Of String)
  fullName.vb: System.Func(Of System.String)
  name.vb: Func(Of String)
  spec.csharp:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Func`1
  commentId: T:System.Func`1
  isExternal: true
  name: Func<TResult>
  nameWithType: Func<TResult>
  fullName: System.Func<TResult>
  nameWithType.vb: Func(Of TResult)
  fullName.vb: System.Func(Of TResult)
  name.vb: Func(Of TResult)
  spec.csharp:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Common.Http.HttpClientHelper.GetAccessToken*
  commentId: Overload:Steeltoe.Common.Http.HttpClientHelper.GetAccessToken
  name: GetAccessToken
  nameWithType: HttpClientHelper.GetAccessToken
  fullName: Steeltoe.Common.Http.HttpClientHelper.GetAccessToken
- uid: ILogger
  isExternal: true
  name: ILogger
  nameWithType: ILogger
  fullName: ILogger
- uid: System.Threading.Tasks.Task{System.String}
  commentId: T:System.Threading.Tasks.Task{System.String}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<String>
  nameWithType: Task<String>
  fullName: System.Threading.Tasks.Task<System.String>
  nameWithType.vb: Task(Of String)
  fullName.vb: System.Threading.Tasks.Task(Of System.String)
  name.vb: Task(Of String)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: System.Uri
  commentId: T:System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: System.Collections.Generic.Dictionary{System.String,System.String}
  commentId: T:System.Collections.Generic.Dictionary{System.String,System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  name: Dictionary<String, String>
  nameWithType: Dictionary<String, String>
  fullName: System.Collections.Generic.Dictionary<System.String, System.String>
  nameWithType.vb: Dictionary(Of String, String)
  fullName.vb: System.Collections.Generic.Dictionary(Of System.String, System.String)
  name.vb: Dictionary(Of String, String)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Dictionary`2
  commentId: T:System.Collections.Generic.Dictionary`2
  isExternal: true
  name: Dictionary<TKey, TValue>
  nameWithType: Dictionary<TKey, TValue>
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>
  nameWithType.vb: Dictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue)
  name.vb: Dictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
