### YamlMime:ManagedReference
items:
- uid: Steeltoe.Discovery.Eureka.AppInfo.Applications
  commentId: T:Steeltoe.Discovery.Eureka.AppInfo.Applications
  id: Applications
  parent: Steeltoe.Discovery.Eureka.AppInfo
  children:
  - Steeltoe.Discovery.Eureka.AppInfo.Applications.AppsHashCode
  - Steeltoe.Discovery.Eureka.AppInfo.Applications.GetInstancesBySecureVirtualHostName(System.String)
  - Steeltoe.Discovery.Eureka.AppInfo.Applications.GetInstancesByVirtualHostName(System.String)
  - Steeltoe.Discovery.Eureka.AppInfo.Applications.GetRegisteredApplication(System.String)
  - Steeltoe.Discovery.Eureka.AppInfo.Applications.GetRegisteredApplications
  - Steeltoe.Discovery.Eureka.AppInfo.Applications.ReturnUpInstancesOnly
  - Steeltoe.Discovery.Eureka.AppInfo.Applications.ToString
  - Steeltoe.Discovery.Eureka.AppInfo.Applications.Version
  langs:
  - csharp
  - vb
  name: Applications
  nameWithType: Applications
  fullName: Steeltoe.Discovery.Eureka.AppInfo.Applications
  type: Class
  source:
    remote:
      path: src/Discovery/src/Eureka/AppInfo/Applications.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Applications
    path: ../Steeltoe/src/Discovery/src/Eureka/AppInfo/Applications.cs
    startLine: 13
  assemblies:
  - Steeltoe.Discovery.Eureka
  namespace: Steeltoe.Discovery.Eureka.AppInfo
  syntax:
    content: public class Applications
    content.vb: Public Class Applications
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Steeltoe.Discovery.Eureka.AppInfo.Applications.AppsHashCode
  commentId: P:Steeltoe.Discovery.Eureka.AppInfo.Applications.AppsHashCode
  id: AppsHashCode
  parent: Steeltoe.Discovery.Eureka.AppInfo.Applications
  langs:
  - csharp
  - vb
  name: AppsHashCode
  nameWithType: Applications.AppsHashCode
  fullName: Steeltoe.Discovery.Eureka.AppInfo.Applications.AppsHashCode
  type: Property
  source:
    remote:
      path: src/Discovery/src/Eureka/AppInfo/Applications.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: AppsHashCode
    path: ../Steeltoe/src/Discovery/src/Eureka/AppInfo/Applications.cs
    startLine: 17
  assemblies:
  - Steeltoe.Discovery.Eureka
  namespace: Steeltoe.Discovery.Eureka.AppInfo
  syntax:
    content: public string AppsHashCode { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property AppsHashCode As String
  overload: Steeltoe.Discovery.Eureka.AppInfo.Applications.AppsHashCode*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Steeltoe.Discovery.Eureka.AppInfo.Applications.Version
  commentId: P:Steeltoe.Discovery.Eureka.AppInfo.Applications.Version
  id: Version
  parent: Steeltoe.Discovery.Eureka.AppInfo.Applications
  langs:
  - csharp
  - vb
  name: Version
  nameWithType: Applications.Version
  fullName: Steeltoe.Discovery.Eureka.AppInfo.Applications.Version
  type: Property
  source:
    remote:
      path: src/Discovery/src/Eureka/AppInfo/Applications.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Version
    path: ../Steeltoe/src/Discovery/src/Eureka/AppInfo/Applications.cs
    startLine: 19
  assemblies:
  - Steeltoe.Discovery.Eureka
  namespace: Steeltoe.Discovery.Eureka.AppInfo
  syntax:
    content: public long Version { get; }
    parameters: []
    return:
      type: System.Int64
    content.vb: Public ReadOnly Property Version As Long
  overload: Steeltoe.Discovery.Eureka.AppInfo.Applications.Version*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Steeltoe.Discovery.Eureka.AppInfo.Applications.ReturnUpInstancesOnly
  commentId: P:Steeltoe.Discovery.Eureka.AppInfo.Applications.ReturnUpInstancesOnly
  id: ReturnUpInstancesOnly
  parent: Steeltoe.Discovery.Eureka.AppInfo.Applications
  langs:
  - csharp
  - vb
  name: ReturnUpInstancesOnly
  nameWithType: Applications.ReturnUpInstancesOnly
  fullName: Steeltoe.Discovery.Eureka.AppInfo.Applications.ReturnUpInstancesOnly
  type: Property
  source:
    remote:
      path: src/Discovery/src/Eureka/AppInfo/Applications.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: ReturnUpInstancesOnly
    path: ../Steeltoe/src/Discovery/src/Eureka/AppInfo/Applications.cs
    startLine: 21
  assemblies:
  - Steeltoe.Discovery.Eureka
  namespace: Steeltoe.Discovery.Eureka.AppInfo
  syntax:
    content: public bool ReturnUpInstancesOnly { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property ReturnUpInstancesOnly As Boolean
  overload: Steeltoe.Discovery.Eureka.AppInfo.Applications.ReturnUpInstancesOnly*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Steeltoe.Discovery.Eureka.AppInfo.Applications.GetRegisteredApplications
  commentId: M:Steeltoe.Discovery.Eureka.AppInfo.Applications.GetRegisteredApplications
  id: GetRegisteredApplications
  parent: Steeltoe.Discovery.Eureka.AppInfo.Applications
  langs:
  - csharp
  - vb
  name: GetRegisteredApplications()
  nameWithType: Applications.GetRegisteredApplications()
  fullName: Steeltoe.Discovery.Eureka.AppInfo.Applications.GetRegisteredApplications()
  type: Method
  source:
    remote:
      path: src/Discovery/src/Eureka/AppInfo/Applications.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: GetRegisteredApplications
    path: ../Steeltoe/src/Discovery/src/Eureka/AppInfo/Applications.cs
    startLine: 23
  assemblies:
  - Steeltoe.Discovery.Eureka
  namespace: Steeltoe.Discovery.Eureka.AppInfo
  syntax:
    content: public IList<Application> GetRegisteredApplications()
    return:
      type: System.Collections.Generic.IList{Steeltoe.Discovery.Eureka.AppInfo.Application}
    content.vb: Public Function GetRegisteredApplications As IList(Of Application)
  overload: Steeltoe.Discovery.Eureka.AppInfo.Applications.GetRegisteredApplications*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Steeltoe.Discovery.Eureka.AppInfo.Applications.GetRegisteredApplication(System.String)
  commentId: M:Steeltoe.Discovery.Eureka.AppInfo.Applications.GetRegisteredApplication(System.String)
  id: GetRegisteredApplication(System.String)
  parent: Steeltoe.Discovery.Eureka.AppInfo.Applications
  langs:
  - csharp
  - vb
  name: GetRegisteredApplication(String)
  nameWithType: Applications.GetRegisteredApplication(String)
  fullName: Steeltoe.Discovery.Eureka.AppInfo.Applications.GetRegisteredApplication(System.String)
  type: Method
  source:
    remote:
      path: src/Discovery/src/Eureka/AppInfo/Applications.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: GetRegisteredApplication
    path: ../Steeltoe/src/Discovery/src/Eureka/AppInfo/Applications.cs
    startLine: 28
  assemblies:
  - Steeltoe.Discovery.Eureka
  namespace: Steeltoe.Discovery.Eureka.AppInfo
  syntax:
    content: public Application GetRegisteredApplication(string appName)
    parameters:
    - id: appName
      type: System.String
    return:
      type: Steeltoe.Discovery.Eureka.AppInfo.Application
    content.vb: Public Function GetRegisteredApplication(appName As String) As Application
  overload: Steeltoe.Discovery.Eureka.AppInfo.Applications.GetRegisteredApplication*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Steeltoe.Discovery.Eureka.AppInfo.Applications.GetInstancesBySecureVirtualHostName(System.String)
  commentId: M:Steeltoe.Discovery.Eureka.AppInfo.Applications.GetInstancesBySecureVirtualHostName(System.String)
  id: GetInstancesBySecureVirtualHostName(System.String)
  parent: Steeltoe.Discovery.Eureka.AppInfo.Applications
  langs:
  - csharp
  - vb
  name: GetInstancesBySecureVirtualHostName(String)
  nameWithType: Applications.GetInstancesBySecureVirtualHostName(String)
  fullName: Steeltoe.Discovery.Eureka.AppInfo.Applications.GetInstancesBySecureVirtualHostName(System.String)
  type: Method
  source:
    remote:
      path: src/Discovery/src/Eureka/AppInfo/Applications.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: GetInstancesBySecureVirtualHostName
    path: ../Steeltoe/src/Discovery/src/Eureka/AppInfo/Applications.cs
    startLine: 39
  assemblies:
  - Steeltoe.Discovery.Eureka
  namespace: Steeltoe.Discovery.Eureka.AppInfo
  syntax:
    content: public IList<InstanceInfo> GetInstancesBySecureVirtualHostName(string secureVirtualHostName)
    parameters:
    - id: secureVirtualHostName
      type: System.String
    return:
      type: System.Collections.Generic.IList{Steeltoe.Discovery.Eureka.AppInfo.InstanceInfo}
    content.vb: Public Function GetInstancesBySecureVirtualHostName(secureVirtualHostName As String) As IList(Of InstanceInfo)
  overload: Steeltoe.Discovery.Eureka.AppInfo.Applications.GetInstancesBySecureVirtualHostName*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Steeltoe.Discovery.Eureka.AppInfo.Applications.GetInstancesByVirtualHostName(System.String)
  commentId: M:Steeltoe.Discovery.Eureka.AppInfo.Applications.GetInstancesByVirtualHostName(System.String)
  id: GetInstancesByVirtualHostName(System.String)
  parent: Steeltoe.Discovery.Eureka.AppInfo.Applications
  langs:
  - csharp
  - vb
  name: GetInstancesByVirtualHostName(String)
  nameWithType: Applications.GetInstancesByVirtualHostName(String)
  fullName: Steeltoe.Discovery.Eureka.AppInfo.Applications.GetInstancesByVirtualHostName(System.String)
  type: Method
  source:
    remote:
      path: src/Discovery/src/Eureka/AppInfo/Applications.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: GetInstancesByVirtualHostName
    path: ../Steeltoe/src/Discovery/src/Eureka/AppInfo/Applications.cs
    startLine: 49
  assemblies:
  - Steeltoe.Discovery.Eureka
  namespace: Steeltoe.Discovery.Eureka.AppInfo
  syntax:
    content: public IList<InstanceInfo> GetInstancesByVirtualHostName(string virtualHostName)
    parameters:
    - id: virtualHostName
      type: System.String
    return:
      type: System.Collections.Generic.IList{Steeltoe.Discovery.Eureka.AppInfo.InstanceInfo}
    content.vb: Public Function GetInstancesByVirtualHostName(virtualHostName As String) As IList(Of InstanceInfo)
  overload: Steeltoe.Discovery.Eureka.AppInfo.Applications.GetInstancesByVirtualHostName*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Steeltoe.Discovery.Eureka.AppInfo.Applications.ToString
  commentId: M:Steeltoe.Discovery.Eureka.AppInfo.Applications.ToString
  id: ToString
  parent: Steeltoe.Discovery.Eureka.AppInfo.Applications
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: Applications.ToString()
  fullName: Steeltoe.Discovery.Eureka.AppInfo.Applications.ToString()
  type: Method
  source:
    remote:
      path: src/Discovery/src/Eureka/AppInfo/Applications.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: ToString
    path: ../Steeltoe/src/Discovery/src/Eureka/AppInfo/Applications.cs
    startLine: 59
  assemblies:
  - Steeltoe.Discovery.Eureka
  namespace: Steeltoe.Discovery.Eureka.AppInfo
  syntax:
    content: public override string ToString()
    return:
      type: System.String
    content.vb: Public Overrides Function ToString As String
  overridden: System.Object.ToString
  overload: Steeltoe.Discovery.Eureka.AppInfo.Applications.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: Steeltoe.Discovery.Eureka.AppInfo
  commentId: N:Steeltoe.Discovery.Eureka.AppInfo
  name: Steeltoe.Discovery.Eureka.AppInfo
  nameWithType: Steeltoe.Discovery.Eureka.AppInfo
  fullName: Steeltoe.Discovery.Eureka.AppInfo
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Steeltoe.Discovery.Eureka.AppInfo.Applications.AppsHashCode*
  commentId: Overload:Steeltoe.Discovery.Eureka.AppInfo.Applications.AppsHashCode
  name: AppsHashCode
  nameWithType: Applications.AppsHashCode
  fullName: Steeltoe.Discovery.Eureka.AppInfo.Applications.AppsHashCode
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Steeltoe.Discovery.Eureka.AppInfo.Applications.Version*
  commentId: Overload:Steeltoe.Discovery.Eureka.AppInfo.Applications.Version
  name: Version
  nameWithType: Applications.Version
  fullName: Steeltoe.Discovery.Eureka.AppInfo.Applications.Version
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: Steeltoe.Discovery.Eureka.AppInfo.Applications.ReturnUpInstancesOnly*
  commentId: Overload:Steeltoe.Discovery.Eureka.AppInfo.Applications.ReturnUpInstancesOnly
  name: ReturnUpInstancesOnly
  nameWithType: Applications.ReturnUpInstancesOnly
  fullName: Steeltoe.Discovery.Eureka.AppInfo.Applications.ReturnUpInstancesOnly
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Steeltoe.Discovery.Eureka.AppInfo.Applications.GetRegisteredApplications*
  commentId: Overload:Steeltoe.Discovery.Eureka.AppInfo.Applications.GetRegisteredApplications
  name: GetRegisteredApplications
  nameWithType: Applications.GetRegisteredApplications
  fullName: Steeltoe.Discovery.Eureka.AppInfo.Applications.GetRegisteredApplications
- uid: System.Collections.Generic.IList{Steeltoe.Discovery.Eureka.AppInfo.Application}
  commentId: T:System.Collections.Generic.IList{Steeltoe.Discovery.Eureka.AppInfo.Application}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<Application>
  nameWithType: IList<Application>
  fullName: System.Collections.Generic.IList<Steeltoe.Discovery.Eureka.AppInfo.Application>
  nameWithType.vb: IList(Of Application)
  fullName.vb: System.Collections.Generic.IList(Of Steeltoe.Discovery.Eureka.AppInfo.Application)
  name.vb: IList(Of Application)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Steeltoe.Discovery.Eureka.AppInfo.Application
    name: Application
    nameWithType: Application
    fullName: Steeltoe.Discovery.Eureka.AppInfo.Application
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Steeltoe.Discovery.Eureka.AppInfo.Application
    name: Application
    nameWithType: Application
    fullName: Steeltoe.Discovery.Eureka.AppInfo.Application
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullName.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Steeltoe.Discovery.Eureka.AppInfo.Applications.GetRegisteredApplication*
  commentId: Overload:Steeltoe.Discovery.Eureka.AppInfo.Applications.GetRegisteredApplication
  name: GetRegisteredApplication
  nameWithType: Applications.GetRegisteredApplication
  fullName: Steeltoe.Discovery.Eureka.AppInfo.Applications.GetRegisteredApplication
- uid: Steeltoe.Discovery.Eureka.AppInfo.Application
  commentId: T:Steeltoe.Discovery.Eureka.AppInfo.Application
  parent: Steeltoe.Discovery.Eureka.AppInfo
  name: Application
  nameWithType: Application
  fullName: Steeltoe.Discovery.Eureka.AppInfo.Application
- uid: Steeltoe.Discovery.Eureka.AppInfo.Applications.GetInstancesBySecureVirtualHostName*
  commentId: Overload:Steeltoe.Discovery.Eureka.AppInfo.Applications.GetInstancesBySecureVirtualHostName
  name: GetInstancesBySecureVirtualHostName
  nameWithType: Applications.GetInstancesBySecureVirtualHostName
  fullName: Steeltoe.Discovery.Eureka.AppInfo.Applications.GetInstancesBySecureVirtualHostName
- uid: System.Collections.Generic.IList{Steeltoe.Discovery.Eureka.AppInfo.InstanceInfo}
  commentId: T:System.Collections.Generic.IList{Steeltoe.Discovery.Eureka.AppInfo.InstanceInfo}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<InstanceInfo>
  nameWithType: IList<InstanceInfo>
  fullName: System.Collections.Generic.IList<Steeltoe.Discovery.Eureka.AppInfo.InstanceInfo>
  nameWithType.vb: IList(Of InstanceInfo)
  fullName.vb: System.Collections.Generic.IList(Of Steeltoe.Discovery.Eureka.AppInfo.InstanceInfo)
  name.vb: IList(Of InstanceInfo)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Steeltoe.Discovery.Eureka.AppInfo.InstanceInfo
    name: InstanceInfo
    nameWithType: InstanceInfo
    fullName: Steeltoe.Discovery.Eureka.AppInfo.InstanceInfo
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Steeltoe.Discovery.Eureka.AppInfo.InstanceInfo
    name: InstanceInfo
    nameWithType: InstanceInfo
    fullName: Steeltoe.Discovery.Eureka.AppInfo.InstanceInfo
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Discovery.Eureka.AppInfo.Applications.GetInstancesByVirtualHostName*
  commentId: Overload:Steeltoe.Discovery.Eureka.AppInfo.Applications.GetInstancesByVirtualHostName
  name: GetInstancesByVirtualHostName
  nameWithType: Applications.GetInstancesByVirtualHostName
  fullName: Steeltoe.Discovery.Eureka.AppInfo.Applications.GetInstancesByVirtualHostName
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Discovery.Eureka.AppInfo.Applications.ToString*
  commentId: Overload:Steeltoe.Discovery.Eureka.AppInfo.Applications.ToString
  name: ToString
  nameWithType: Applications.ToString
  fullName: Steeltoe.Discovery.Eureka.AppInfo.Applications.ToString
