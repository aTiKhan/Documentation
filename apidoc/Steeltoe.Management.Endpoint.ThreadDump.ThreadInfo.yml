### YamlMime:ManagedReference
items:
- uid: Steeltoe.Management.Endpoint.ThreadDump.ThreadInfo
  commentId: T:Steeltoe.Management.Endpoint.ThreadDump.ThreadInfo
  id: ThreadInfo
  parent: Steeltoe.Management.Endpoint.ThreadDump
  children:
  - Steeltoe.Management.Endpoint.ThreadDump.ThreadInfo.BlockedCount
  - Steeltoe.Management.Endpoint.ThreadDump.ThreadInfo.BlockedTime
  - Steeltoe.Management.Endpoint.ThreadDump.ThreadInfo.IsInNative
  - Steeltoe.Management.Endpoint.ThreadDump.ThreadInfo.IsSuspended
  - Steeltoe.Management.Endpoint.ThreadDump.ThreadInfo.LockedMonitors
  - Steeltoe.Management.Endpoint.ThreadDump.ThreadInfo.LockedSynchronizers
  - Steeltoe.Management.Endpoint.ThreadDump.ThreadInfo.LockInfo
  - Steeltoe.Management.Endpoint.ThreadDump.ThreadInfo.LockName
  - Steeltoe.Management.Endpoint.ThreadDump.ThreadInfo.LockOwnerId
  - Steeltoe.Management.Endpoint.ThreadDump.ThreadInfo.LockOwnerName
  - Steeltoe.Management.Endpoint.ThreadDump.ThreadInfo.StackTrace
  - Steeltoe.Management.Endpoint.ThreadDump.ThreadInfo.ThreadId
  - Steeltoe.Management.Endpoint.ThreadDump.ThreadInfo.ThreadName
  - Steeltoe.Management.Endpoint.ThreadDump.ThreadInfo.ThreadState
  - Steeltoe.Management.Endpoint.ThreadDump.ThreadInfo.WaitedCount
  - Steeltoe.Management.Endpoint.ThreadDump.ThreadInfo.WaitedTime
  langs:
  - csharp
  - vb
  name: ThreadInfo
  nameWithType: ThreadInfo
  fullName: Steeltoe.Management.Endpoint.ThreadDump.ThreadInfo
  type: Class
  source:
    remote:
      path: src/Management/src/EndpointBase/ThreadDump/ThreadInfo.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: ThreadInfo
    path: ../Steeltoe/src/Management/src/EndpointBase/ThreadDump/ThreadInfo.cs
    startLine: 9
  assemblies:
  - Steeltoe.Management.EndpointBase
  namespace: Steeltoe.Management.Endpoint.ThreadDump
  syntax:
    content: public class ThreadInfo
    content.vb: Public Class ThreadInfo
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Steeltoe.Management.Endpoint.ThreadDump.ThreadInfo.BlockedCount
  commentId: P:Steeltoe.Management.Endpoint.ThreadDump.ThreadInfo.BlockedCount
  id: BlockedCount
  parent: Steeltoe.Management.Endpoint.ThreadDump.ThreadInfo
  langs:
  - csharp
  - vb
  name: BlockedCount
  nameWithType: ThreadInfo.BlockedCount
  fullName: Steeltoe.Management.Endpoint.ThreadDump.ThreadInfo.BlockedCount
  type: Property
  source:
    remote:
      path: src/Management/src/EndpointBase/ThreadDump/ThreadInfo.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: BlockedCount
    path: ../Steeltoe/src/Management/src/EndpointBase/ThreadDump/ThreadInfo.cs
    startLine: 11
  assemblies:
  - Steeltoe.Management.EndpointBase
  namespace: Steeltoe.Management.Endpoint.ThreadDump
  syntax:
    content: >-
      [JsonPropertyName("blockedCount")]

      public long BlockedCount { get; set; }
    parameters: []
    return:
      type: System.Int64
    content.vb: >-
      <JsonPropertyName("blockedCount")>

      Public Property BlockedCount As Long
  overload: Steeltoe.Management.Endpoint.ThreadDump.ThreadInfo.BlockedCount*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: blockedCount
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Steeltoe.Management.Endpoint.ThreadDump.ThreadInfo.BlockedTime
  commentId: P:Steeltoe.Management.Endpoint.ThreadDump.ThreadInfo.BlockedTime
  id: BlockedTime
  parent: Steeltoe.Management.Endpoint.ThreadDump.ThreadInfo
  langs:
  - csharp
  - vb
  name: BlockedTime
  nameWithType: ThreadInfo.BlockedTime
  fullName: Steeltoe.Management.Endpoint.ThreadDump.ThreadInfo.BlockedTime
  type: Property
  source:
    remote:
      path: src/Management/src/EndpointBase/ThreadDump/ThreadInfo.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: BlockedTime
    path: ../Steeltoe/src/Management/src/EndpointBase/ThreadDump/ThreadInfo.cs
    startLine: 14
  assemblies:
  - Steeltoe.Management.EndpointBase
  namespace: Steeltoe.Management.Endpoint.ThreadDump
  syntax:
    content: >-
      [JsonPropertyName("blockedTime")]

      public long BlockedTime { get; set; }
    parameters: []
    return:
      type: System.Int64
    content.vb: >-
      <JsonPropertyName("blockedTime")>

      Public Property BlockedTime As Long
  overload: Steeltoe.Management.Endpoint.ThreadDump.ThreadInfo.BlockedTime*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: blockedTime
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Steeltoe.Management.Endpoint.ThreadDump.ThreadInfo.LockedMonitors
  commentId: P:Steeltoe.Management.Endpoint.ThreadDump.ThreadInfo.LockedMonitors
  id: LockedMonitors
  parent: Steeltoe.Management.Endpoint.ThreadDump.ThreadInfo
  langs:
  - csharp
  - vb
  name: LockedMonitors
  nameWithType: ThreadInfo.LockedMonitors
  fullName: Steeltoe.Management.Endpoint.ThreadDump.ThreadInfo.LockedMonitors
  type: Property
  source:
    remote:
      path: src/Management/src/EndpointBase/ThreadDump/ThreadInfo.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: LockedMonitors
    path: ../Steeltoe/src/Management/src/EndpointBase/ThreadDump/ThreadInfo.cs
    startLine: 17
  assemblies:
  - Steeltoe.Management.EndpointBase
  namespace: Steeltoe.Management.Endpoint.ThreadDump
  syntax:
    content: >-
      [JsonPropertyName("lockedMonitors")]

      public List<MonitorInfo> LockedMonitors { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.List{Steeltoe.Management.Endpoint.ThreadDump.MonitorInfo}
    content.vb: >-
      <JsonPropertyName("lockedMonitors")>

      Public Property LockedMonitors As List(Of MonitorInfo)
  overload: Steeltoe.Management.Endpoint.ThreadDump.ThreadInfo.LockedMonitors*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: lockedMonitors
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Steeltoe.Management.Endpoint.ThreadDump.ThreadInfo.LockedSynchronizers
  commentId: P:Steeltoe.Management.Endpoint.ThreadDump.ThreadInfo.LockedSynchronizers
  id: LockedSynchronizers
  parent: Steeltoe.Management.Endpoint.ThreadDump.ThreadInfo
  langs:
  - csharp
  - vb
  name: LockedSynchronizers
  nameWithType: ThreadInfo.LockedSynchronizers
  fullName: Steeltoe.Management.Endpoint.ThreadDump.ThreadInfo.LockedSynchronizers
  type: Property
  source:
    remote:
      path: src/Management/src/EndpointBase/ThreadDump/ThreadInfo.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: LockedSynchronizers
    path: ../Steeltoe/src/Management/src/EndpointBase/ThreadDump/ThreadInfo.cs
    startLine: 20
  assemblies:
  - Steeltoe.Management.EndpointBase
  namespace: Steeltoe.Management.Endpoint.ThreadDump
  syntax:
    content: >-
      [JsonPropertyName("lockedSynchronizers")]

      public List<LockInfo> LockedSynchronizers { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.List{Steeltoe.Management.Endpoint.ThreadDump.LockInfo}
    content.vb: >-
      <JsonPropertyName("lockedSynchronizers")>

      Public Property LockedSynchronizers As List(Of LockInfo)
  overload: Steeltoe.Management.Endpoint.ThreadDump.ThreadInfo.LockedSynchronizers*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: lockedSynchronizers
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Steeltoe.Management.Endpoint.ThreadDump.ThreadInfo.LockInfo
  commentId: P:Steeltoe.Management.Endpoint.ThreadDump.ThreadInfo.LockInfo
  id: LockInfo
  parent: Steeltoe.Management.Endpoint.ThreadDump.ThreadInfo
  langs:
  - csharp
  - vb
  name: LockInfo
  nameWithType: ThreadInfo.LockInfo
  fullName: Steeltoe.Management.Endpoint.ThreadDump.ThreadInfo.LockInfo
  type: Property
  source:
    remote:
      path: src/Management/src/EndpointBase/ThreadDump/ThreadInfo.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: LockInfo
    path: ../Steeltoe/src/Management/src/EndpointBase/ThreadDump/ThreadInfo.cs
    startLine: 23
  assemblies:
  - Steeltoe.Management.EndpointBase
  namespace: Steeltoe.Management.Endpoint.ThreadDump
  syntax:
    content: >-
      [JsonPropertyName("lockInfo")]

      public LockInfo LockInfo { get; set; }
    parameters: []
    return:
      type: Steeltoe.Management.Endpoint.ThreadDump.LockInfo
    content.vb: >-
      <JsonPropertyName("lockInfo")>

      Public Property LockInfo As LockInfo
  overload: Steeltoe.Management.Endpoint.ThreadDump.ThreadInfo.LockInfo*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: lockInfo
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Steeltoe.Management.Endpoint.ThreadDump.ThreadInfo.LockName
  commentId: P:Steeltoe.Management.Endpoint.ThreadDump.ThreadInfo.LockName
  id: LockName
  parent: Steeltoe.Management.Endpoint.ThreadDump.ThreadInfo
  langs:
  - csharp
  - vb
  name: LockName
  nameWithType: ThreadInfo.LockName
  fullName: Steeltoe.Management.Endpoint.ThreadDump.ThreadInfo.LockName
  type: Property
  source:
    remote:
      path: src/Management/src/EndpointBase/ThreadDump/ThreadInfo.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: LockName
    path: ../Steeltoe/src/Management/src/EndpointBase/ThreadDump/ThreadInfo.cs
    startLine: 26
  assemblies:
  - Steeltoe.Management.EndpointBase
  namespace: Steeltoe.Management.Endpoint.ThreadDump
  syntax:
    content: >-
      [JsonPropertyName("lockName")]

      public string LockName { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonPropertyName("lockName")>

      Public Property LockName As String
  overload: Steeltoe.Management.Endpoint.ThreadDump.ThreadInfo.LockName*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: lockName
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Steeltoe.Management.Endpoint.ThreadDump.ThreadInfo.LockOwnerId
  commentId: P:Steeltoe.Management.Endpoint.ThreadDump.ThreadInfo.LockOwnerId
  id: LockOwnerId
  parent: Steeltoe.Management.Endpoint.ThreadDump.ThreadInfo
  langs:
  - csharp
  - vb
  name: LockOwnerId
  nameWithType: ThreadInfo.LockOwnerId
  fullName: Steeltoe.Management.Endpoint.ThreadDump.ThreadInfo.LockOwnerId
  type: Property
  source:
    remote:
      path: src/Management/src/EndpointBase/ThreadDump/ThreadInfo.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: LockOwnerId
    path: ../Steeltoe/src/Management/src/EndpointBase/ThreadDump/ThreadInfo.cs
    startLine: 29
  assemblies:
  - Steeltoe.Management.EndpointBase
  namespace: Steeltoe.Management.Endpoint.ThreadDump
  syntax:
    content: >-
      [JsonPropertyName("lockOwnerId")]

      public long LockOwnerId { get; set; }
    parameters: []
    return:
      type: System.Int64
    content.vb: >-
      <JsonPropertyName("lockOwnerId")>

      Public Property LockOwnerId As Long
  overload: Steeltoe.Management.Endpoint.ThreadDump.ThreadInfo.LockOwnerId*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: lockOwnerId
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Steeltoe.Management.Endpoint.ThreadDump.ThreadInfo.LockOwnerName
  commentId: P:Steeltoe.Management.Endpoint.ThreadDump.ThreadInfo.LockOwnerName
  id: LockOwnerName
  parent: Steeltoe.Management.Endpoint.ThreadDump.ThreadInfo
  langs:
  - csharp
  - vb
  name: LockOwnerName
  nameWithType: ThreadInfo.LockOwnerName
  fullName: Steeltoe.Management.Endpoint.ThreadDump.ThreadInfo.LockOwnerName
  type: Property
  source:
    remote:
      path: src/Management/src/EndpointBase/ThreadDump/ThreadInfo.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: LockOwnerName
    path: ../Steeltoe/src/Management/src/EndpointBase/ThreadDump/ThreadInfo.cs
    startLine: 32
  assemblies:
  - Steeltoe.Management.EndpointBase
  namespace: Steeltoe.Management.Endpoint.ThreadDump
  syntax:
    content: >-
      [JsonPropertyName("lockOwnerName")]

      public string LockOwnerName { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonPropertyName("lockOwnerName")>

      Public Property LockOwnerName As String
  overload: Steeltoe.Management.Endpoint.ThreadDump.ThreadInfo.LockOwnerName*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: lockOwnerName
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Steeltoe.Management.Endpoint.ThreadDump.ThreadInfo.StackTrace
  commentId: P:Steeltoe.Management.Endpoint.ThreadDump.ThreadInfo.StackTrace
  id: StackTrace
  parent: Steeltoe.Management.Endpoint.ThreadDump.ThreadInfo
  langs:
  - csharp
  - vb
  name: StackTrace
  nameWithType: ThreadInfo.StackTrace
  fullName: Steeltoe.Management.Endpoint.ThreadDump.ThreadInfo.StackTrace
  type: Property
  source:
    remote:
      path: src/Management/src/EndpointBase/ThreadDump/ThreadInfo.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: StackTrace
    path: ../Steeltoe/src/Management/src/EndpointBase/ThreadDump/ThreadInfo.cs
    startLine: 35
  assemblies:
  - Steeltoe.Management.EndpointBase
  namespace: Steeltoe.Management.Endpoint.ThreadDump
  syntax:
    content: >-
      [JsonPropertyName("stackTrace")]

      public List<StackTraceElement> StackTrace { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.List{Steeltoe.Management.Endpoint.ThreadDump.StackTraceElement}
    content.vb: >-
      <JsonPropertyName("stackTrace")>

      Public Property StackTrace As List(Of StackTraceElement)
  overload: Steeltoe.Management.Endpoint.ThreadDump.ThreadInfo.StackTrace*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: stackTrace
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Steeltoe.Management.Endpoint.ThreadDump.ThreadInfo.ThreadId
  commentId: P:Steeltoe.Management.Endpoint.ThreadDump.ThreadInfo.ThreadId
  id: ThreadId
  parent: Steeltoe.Management.Endpoint.ThreadDump.ThreadInfo
  langs:
  - csharp
  - vb
  name: ThreadId
  nameWithType: ThreadInfo.ThreadId
  fullName: Steeltoe.Management.Endpoint.ThreadDump.ThreadInfo.ThreadId
  type: Property
  source:
    remote:
      path: src/Management/src/EndpointBase/ThreadDump/ThreadInfo.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: ThreadId
    path: ../Steeltoe/src/Management/src/EndpointBase/ThreadDump/ThreadInfo.cs
    startLine: 38
  assemblies:
  - Steeltoe.Management.EndpointBase
  namespace: Steeltoe.Management.Endpoint.ThreadDump
  syntax:
    content: >-
      [JsonPropertyName("threadId")]

      public long ThreadId { get; set; }
    parameters: []
    return:
      type: System.Int64
    content.vb: >-
      <JsonPropertyName("threadId")>

      Public Property ThreadId As Long
  overload: Steeltoe.Management.Endpoint.ThreadDump.ThreadInfo.ThreadId*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: threadId
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Steeltoe.Management.Endpoint.ThreadDump.ThreadInfo.ThreadName
  commentId: P:Steeltoe.Management.Endpoint.ThreadDump.ThreadInfo.ThreadName
  id: ThreadName
  parent: Steeltoe.Management.Endpoint.ThreadDump.ThreadInfo
  langs:
  - csharp
  - vb
  name: ThreadName
  nameWithType: ThreadInfo.ThreadName
  fullName: Steeltoe.Management.Endpoint.ThreadDump.ThreadInfo.ThreadName
  type: Property
  source:
    remote:
      path: src/Management/src/EndpointBase/ThreadDump/ThreadInfo.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: ThreadName
    path: ../Steeltoe/src/Management/src/EndpointBase/ThreadDump/ThreadInfo.cs
    startLine: 41
  assemblies:
  - Steeltoe.Management.EndpointBase
  namespace: Steeltoe.Management.Endpoint.ThreadDump
  syntax:
    content: >-
      [JsonPropertyName("threadName")]

      public string ThreadName { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonPropertyName("threadName")>

      Public Property ThreadName As String
  overload: Steeltoe.Management.Endpoint.ThreadDump.ThreadInfo.ThreadName*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: threadName
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Steeltoe.Management.Endpoint.ThreadDump.ThreadInfo.ThreadState
  commentId: P:Steeltoe.Management.Endpoint.ThreadDump.ThreadInfo.ThreadState
  id: ThreadState
  parent: Steeltoe.Management.Endpoint.ThreadDump.ThreadInfo
  langs:
  - csharp
  - vb
  name: ThreadState
  nameWithType: ThreadInfo.ThreadState
  fullName: Steeltoe.Management.Endpoint.ThreadDump.ThreadInfo.ThreadState
  type: Property
  source:
    remote:
      path: src/Management/src/EndpointBase/ThreadDump/ThreadInfo.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: ThreadState
    path: ../Steeltoe/src/Management/src/EndpointBase/ThreadDump/ThreadInfo.cs
    startLine: 44
  assemblies:
  - Steeltoe.Management.EndpointBase
  namespace: Steeltoe.Management.Endpoint.ThreadDump
  syntax:
    content: >-
      [JsonPropertyName("threadState")]

      [JsonConverter(typeof(JsonStringEnumConverter))]

      public TState ThreadState { get; set; }
    parameters: []
    return:
      type: Steeltoe.Management.Endpoint.ThreadDump.TState
    content.vb: >-
      <JsonPropertyName("threadState")>

      <JsonConverter(GetType(JsonStringEnumConverter))>

      Public Property ThreadState As TState
  overload: Steeltoe.Management.Endpoint.ThreadDump.ThreadInfo.ThreadState*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: threadState
  - type: System.Text.Json.Serialization.JsonConverterAttribute
    ctor: System.Text.Json.Serialization.JsonConverterAttribute.#ctor(System.Type)
    arguments:
    - type: System.Type
      value: System.Text.Json.Serialization.JsonStringEnumConverter
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Steeltoe.Management.Endpoint.ThreadDump.ThreadInfo.WaitedCount
  commentId: P:Steeltoe.Management.Endpoint.ThreadDump.ThreadInfo.WaitedCount
  id: WaitedCount
  parent: Steeltoe.Management.Endpoint.ThreadDump.ThreadInfo
  langs:
  - csharp
  - vb
  name: WaitedCount
  nameWithType: ThreadInfo.WaitedCount
  fullName: Steeltoe.Management.Endpoint.ThreadDump.ThreadInfo.WaitedCount
  type: Property
  source:
    remote:
      path: src/Management/src/EndpointBase/ThreadDump/ThreadInfo.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: WaitedCount
    path: ../Steeltoe/src/Management/src/EndpointBase/ThreadDump/ThreadInfo.cs
    startLine: 48
  assemblies:
  - Steeltoe.Management.EndpointBase
  namespace: Steeltoe.Management.Endpoint.ThreadDump
  syntax:
    content: >-
      [JsonPropertyName("waitedCount")]

      public long WaitedCount { get; set; }
    parameters: []
    return:
      type: System.Int64
    content.vb: >-
      <JsonPropertyName("waitedCount")>

      Public Property WaitedCount As Long
  overload: Steeltoe.Management.Endpoint.ThreadDump.ThreadInfo.WaitedCount*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: waitedCount
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Steeltoe.Management.Endpoint.ThreadDump.ThreadInfo.WaitedTime
  commentId: P:Steeltoe.Management.Endpoint.ThreadDump.ThreadInfo.WaitedTime
  id: WaitedTime
  parent: Steeltoe.Management.Endpoint.ThreadDump.ThreadInfo
  langs:
  - csharp
  - vb
  name: WaitedTime
  nameWithType: ThreadInfo.WaitedTime
  fullName: Steeltoe.Management.Endpoint.ThreadDump.ThreadInfo.WaitedTime
  type: Property
  source:
    remote:
      path: src/Management/src/EndpointBase/ThreadDump/ThreadInfo.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: WaitedTime
    path: ../Steeltoe/src/Management/src/EndpointBase/ThreadDump/ThreadInfo.cs
    startLine: 51
  assemblies:
  - Steeltoe.Management.EndpointBase
  namespace: Steeltoe.Management.Endpoint.ThreadDump
  syntax:
    content: >-
      [JsonPropertyName("waitedTime")]

      public long WaitedTime { get; set; }
    parameters: []
    return:
      type: System.Int64
    content.vb: >-
      <JsonPropertyName("waitedTime")>

      Public Property WaitedTime As Long
  overload: Steeltoe.Management.Endpoint.ThreadDump.ThreadInfo.WaitedTime*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: waitedTime
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Steeltoe.Management.Endpoint.ThreadDump.ThreadInfo.IsInNative
  commentId: P:Steeltoe.Management.Endpoint.ThreadDump.ThreadInfo.IsInNative
  id: IsInNative
  parent: Steeltoe.Management.Endpoint.ThreadDump.ThreadInfo
  langs:
  - csharp
  - vb
  name: IsInNative
  nameWithType: ThreadInfo.IsInNative
  fullName: Steeltoe.Management.Endpoint.ThreadDump.ThreadInfo.IsInNative
  type: Property
  source:
    remote:
      path: src/Management/src/EndpointBase/ThreadDump/ThreadInfo.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: IsInNative
    path: ../Steeltoe/src/Management/src/EndpointBase/ThreadDump/ThreadInfo.cs
    startLine: 54
  assemblies:
  - Steeltoe.Management.EndpointBase
  namespace: Steeltoe.Management.Endpoint.ThreadDump
  syntax:
    content: >-
      [JsonPropertyName("inNative")]

      public bool IsInNative { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: >-
      <JsonPropertyName("inNative")>

      Public Property IsInNative As Boolean
  overload: Steeltoe.Management.Endpoint.ThreadDump.ThreadInfo.IsInNative*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: inNative
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Steeltoe.Management.Endpoint.ThreadDump.ThreadInfo.IsSuspended
  commentId: P:Steeltoe.Management.Endpoint.ThreadDump.ThreadInfo.IsSuspended
  id: IsSuspended
  parent: Steeltoe.Management.Endpoint.ThreadDump.ThreadInfo
  langs:
  - csharp
  - vb
  name: IsSuspended
  nameWithType: ThreadInfo.IsSuspended
  fullName: Steeltoe.Management.Endpoint.ThreadDump.ThreadInfo.IsSuspended
  type: Property
  source:
    remote:
      path: src/Management/src/EndpointBase/ThreadDump/ThreadInfo.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: IsSuspended
    path: ../Steeltoe/src/Management/src/EndpointBase/ThreadDump/ThreadInfo.cs
    startLine: 57
  assemblies:
  - Steeltoe.Management.EndpointBase
  namespace: Steeltoe.Management.Endpoint.ThreadDump
  syntax:
    content: >-
      [JsonPropertyName("suspended")]

      public bool IsSuspended { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: >-
      <JsonPropertyName("suspended")>

      Public Property IsSuspended As Boolean
  overload: Steeltoe.Management.Endpoint.ThreadDump.ThreadInfo.IsSuspended*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: suspended
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Steeltoe.Management.Endpoint.ThreadDump
  commentId: N:Steeltoe.Management.Endpoint.ThreadDump
  name: Steeltoe.Management.Endpoint.ThreadDump
  nameWithType: Steeltoe.Management.Endpoint.ThreadDump
  fullName: Steeltoe.Management.Endpoint.ThreadDump
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Steeltoe.Management.Endpoint.ThreadDump.ThreadInfo.BlockedCount*
  commentId: Overload:Steeltoe.Management.Endpoint.ThreadDump.ThreadInfo.BlockedCount
  name: BlockedCount
  nameWithType: ThreadInfo.BlockedCount
  fullName: Steeltoe.Management.Endpoint.ThreadDump.ThreadInfo.BlockedCount
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: Steeltoe.Management.Endpoint.ThreadDump.ThreadInfo.BlockedTime*
  commentId: Overload:Steeltoe.Management.Endpoint.ThreadDump.ThreadInfo.BlockedTime
  name: BlockedTime
  nameWithType: ThreadInfo.BlockedTime
  fullName: Steeltoe.Management.Endpoint.ThreadDump.ThreadInfo.BlockedTime
- uid: Steeltoe.Management.Endpoint.ThreadDump.ThreadInfo.LockedMonitors*
  commentId: Overload:Steeltoe.Management.Endpoint.ThreadDump.ThreadInfo.LockedMonitors
  name: LockedMonitors
  nameWithType: ThreadInfo.LockedMonitors
  fullName: Steeltoe.Management.Endpoint.ThreadDump.ThreadInfo.LockedMonitors
- uid: System.Collections.Generic.List{Steeltoe.Management.Endpoint.ThreadDump.MonitorInfo}
  commentId: T:System.Collections.Generic.List{Steeltoe.Management.Endpoint.ThreadDump.MonitorInfo}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<MonitorInfo>
  nameWithType: List<MonitorInfo>
  fullName: System.Collections.Generic.List<Steeltoe.Management.Endpoint.ThreadDump.MonitorInfo>
  nameWithType.vb: List(Of MonitorInfo)
  fullName.vb: System.Collections.Generic.List(Of Steeltoe.Management.Endpoint.ThreadDump.MonitorInfo)
  name.vb: List(Of MonitorInfo)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Steeltoe.Management.Endpoint.ThreadDump.MonitorInfo
    name: MonitorInfo
    nameWithType: MonitorInfo
    fullName: Steeltoe.Management.Endpoint.ThreadDump.MonitorInfo
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Steeltoe.Management.Endpoint.ThreadDump.MonitorInfo
    name: MonitorInfo
    nameWithType: MonitorInfo
    fullName: Steeltoe.Management.Endpoint.ThreadDump.MonitorInfo
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Steeltoe.Management.Endpoint.ThreadDump.ThreadInfo.LockedSynchronizers*
  commentId: Overload:Steeltoe.Management.Endpoint.ThreadDump.ThreadInfo.LockedSynchronizers
  name: LockedSynchronizers
  nameWithType: ThreadInfo.LockedSynchronizers
  fullName: Steeltoe.Management.Endpoint.ThreadDump.ThreadInfo.LockedSynchronizers
- uid: System.Collections.Generic.List{Steeltoe.Management.Endpoint.ThreadDump.LockInfo}
  commentId: T:System.Collections.Generic.List{Steeltoe.Management.Endpoint.ThreadDump.LockInfo}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<LockInfo>
  nameWithType: List<LockInfo>
  fullName: System.Collections.Generic.List<Steeltoe.Management.Endpoint.ThreadDump.LockInfo>
  nameWithType.vb: List(Of LockInfo)
  fullName.vb: System.Collections.Generic.List(Of Steeltoe.Management.Endpoint.ThreadDump.LockInfo)
  name.vb: List(Of LockInfo)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Steeltoe.Management.Endpoint.ThreadDump.LockInfo
    name: LockInfo
    nameWithType: LockInfo
    fullName: Steeltoe.Management.Endpoint.ThreadDump.LockInfo
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Steeltoe.Management.Endpoint.ThreadDump.LockInfo
    name: LockInfo
    nameWithType: LockInfo
    fullName: Steeltoe.Management.Endpoint.ThreadDump.LockInfo
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Management.Endpoint.ThreadDump.ThreadInfo.LockInfo*
  commentId: Overload:Steeltoe.Management.Endpoint.ThreadDump.ThreadInfo.LockInfo
  name: LockInfo
  nameWithType: ThreadInfo.LockInfo
  fullName: Steeltoe.Management.Endpoint.ThreadDump.ThreadInfo.LockInfo
- uid: Steeltoe.Management.Endpoint.ThreadDump.LockInfo
  commentId: T:Steeltoe.Management.Endpoint.ThreadDump.LockInfo
  parent: Steeltoe.Management.Endpoint.ThreadDump
  name: LockInfo
  nameWithType: LockInfo
  fullName: Steeltoe.Management.Endpoint.ThreadDump.LockInfo
- uid: Steeltoe.Management.Endpoint.ThreadDump.ThreadInfo.LockName*
  commentId: Overload:Steeltoe.Management.Endpoint.ThreadDump.ThreadInfo.LockName
  name: LockName
  nameWithType: ThreadInfo.LockName
  fullName: Steeltoe.Management.Endpoint.ThreadDump.ThreadInfo.LockName
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Steeltoe.Management.Endpoint.ThreadDump.ThreadInfo.LockOwnerId*
  commentId: Overload:Steeltoe.Management.Endpoint.ThreadDump.ThreadInfo.LockOwnerId
  name: LockOwnerId
  nameWithType: ThreadInfo.LockOwnerId
  fullName: Steeltoe.Management.Endpoint.ThreadDump.ThreadInfo.LockOwnerId
- uid: Steeltoe.Management.Endpoint.ThreadDump.ThreadInfo.LockOwnerName*
  commentId: Overload:Steeltoe.Management.Endpoint.ThreadDump.ThreadInfo.LockOwnerName
  name: LockOwnerName
  nameWithType: ThreadInfo.LockOwnerName
  fullName: Steeltoe.Management.Endpoint.ThreadDump.ThreadInfo.LockOwnerName
- uid: Steeltoe.Management.Endpoint.ThreadDump.ThreadInfo.StackTrace*
  commentId: Overload:Steeltoe.Management.Endpoint.ThreadDump.ThreadInfo.StackTrace
  name: StackTrace
  nameWithType: ThreadInfo.StackTrace
  fullName: Steeltoe.Management.Endpoint.ThreadDump.ThreadInfo.StackTrace
- uid: System.Collections.Generic.List{Steeltoe.Management.Endpoint.ThreadDump.StackTraceElement}
  commentId: T:System.Collections.Generic.List{Steeltoe.Management.Endpoint.ThreadDump.StackTraceElement}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<StackTraceElement>
  nameWithType: List<StackTraceElement>
  fullName: System.Collections.Generic.List<Steeltoe.Management.Endpoint.ThreadDump.StackTraceElement>
  nameWithType.vb: List(Of StackTraceElement)
  fullName.vb: System.Collections.Generic.List(Of Steeltoe.Management.Endpoint.ThreadDump.StackTraceElement)
  name.vb: List(Of StackTraceElement)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Steeltoe.Management.Endpoint.ThreadDump.StackTraceElement
    name: StackTraceElement
    nameWithType: StackTraceElement
    fullName: Steeltoe.Management.Endpoint.ThreadDump.StackTraceElement
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Steeltoe.Management.Endpoint.ThreadDump.StackTraceElement
    name: StackTraceElement
    nameWithType: StackTraceElement
    fullName: Steeltoe.Management.Endpoint.ThreadDump.StackTraceElement
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Management.Endpoint.ThreadDump.ThreadInfo.ThreadId*
  commentId: Overload:Steeltoe.Management.Endpoint.ThreadDump.ThreadInfo.ThreadId
  name: ThreadId
  nameWithType: ThreadInfo.ThreadId
  fullName: Steeltoe.Management.Endpoint.ThreadDump.ThreadInfo.ThreadId
- uid: Steeltoe.Management.Endpoint.ThreadDump.ThreadInfo.ThreadName*
  commentId: Overload:Steeltoe.Management.Endpoint.ThreadDump.ThreadInfo.ThreadName
  name: ThreadName
  nameWithType: ThreadInfo.ThreadName
  fullName: Steeltoe.Management.Endpoint.ThreadDump.ThreadInfo.ThreadName
- uid: Steeltoe.Management.Endpoint.ThreadDump.ThreadInfo.ThreadState*
  commentId: Overload:Steeltoe.Management.Endpoint.ThreadDump.ThreadInfo.ThreadState
  name: ThreadState
  nameWithType: ThreadInfo.ThreadState
  fullName: Steeltoe.Management.Endpoint.ThreadDump.ThreadInfo.ThreadState
- uid: Steeltoe.Management.Endpoint.ThreadDump.TState
  commentId: T:Steeltoe.Management.Endpoint.ThreadDump.TState
  parent: Steeltoe.Management.Endpoint.ThreadDump
  name: TState
  nameWithType: TState
  fullName: Steeltoe.Management.Endpoint.ThreadDump.TState
- uid: Steeltoe.Management.Endpoint.ThreadDump.ThreadInfo.WaitedCount*
  commentId: Overload:Steeltoe.Management.Endpoint.ThreadDump.ThreadInfo.WaitedCount
  name: WaitedCount
  nameWithType: ThreadInfo.WaitedCount
  fullName: Steeltoe.Management.Endpoint.ThreadDump.ThreadInfo.WaitedCount
- uid: Steeltoe.Management.Endpoint.ThreadDump.ThreadInfo.WaitedTime*
  commentId: Overload:Steeltoe.Management.Endpoint.ThreadDump.ThreadInfo.WaitedTime
  name: WaitedTime
  nameWithType: ThreadInfo.WaitedTime
  fullName: Steeltoe.Management.Endpoint.ThreadDump.ThreadInfo.WaitedTime
- uid: Steeltoe.Management.Endpoint.ThreadDump.ThreadInfo.IsInNative*
  commentId: Overload:Steeltoe.Management.Endpoint.ThreadDump.ThreadInfo.IsInNative
  name: IsInNative
  nameWithType: ThreadInfo.IsInNative
  fullName: Steeltoe.Management.Endpoint.ThreadDump.ThreadInfo.IsInNative
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Steeltoe.Management.Endpoint.ThreadDump.ThreadInfo.IsSuspended*
  commentId: Overload:Steeltoe.Management.Endpoint.ThreadDump.ThreadInfo.IsSuspended
  name: IsSuspended
  nameWithType: ThreadInfo.IsSuspended
  fullName: Steeltoe.Management.Endpoint.ThreadDump.ThreadInfo.IsSuspended
