### YamlMime:ManagedReference
items:
- uid: Steeltoe.Messaging.RabbitMQ.Config.AbstractExchange
  commentId: T:Steeltoe.Messaging.RabbitMQ.Config.AbstractExchange
  id: AbstractExchange
  parent: Steeltoe.Messaging.RabbitMQ.Config
  children:
  - Steeltoe.Messaging.RabbitMQ.Config.AbstractExchange.#ctor(System.String)
  - Steeltoe.Messaging.RabbitMQ.Config.AbstractExchange.#ctor(System.String,System.Boolean,System.Boolean)
  - Steeltoe.Messaging.RabbitMQ.Config.AbstractExchange.#ctor(System.String,System.Boolean,System.Boolean,System.Collections.Generic.Dictionary{System.String,System.Object})
  - Steeltoe.Messaging.RabbitMQ.Config.AbstractExchange.ExchangeName
  - Steeltoe.Messaging.RabbitMQ.Config.AbstractExchange.IsAutoDelete
  - Steeltoe.Messaging.RabbitMQ.Config.AbstractExchange.IsDelayed
  - Steeltoe.Messaging.RabbitMQ.Config.AbstractExchange.IsDurable
  - Steeltoe.Messaging.RabbitMQ.Config.AbstractExchange.IsInternal
  - Steeltoe.Messaging.RabbitMQ.Config.AbstractExchange.ServiceName
  - Steeltoe.Messaging.RabbitMQ.Config.AbstractExchange.ToString
  - Steeltoe.Messaging.RabbitMQ.Config.AbstractExchange.Type
  langs:
  - csharp
  - vb
  name: AbstractExchange
  nameWithType: AbstractExchange
  fullName: Steeltoe.Messaging.RabbitMQ.Config.AbstractExchange
  type: Class
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Config/AbstractExchange.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: AbstractExchange
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Config/AbstractExchange.cs
    startLine: 10
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Config
  syntax:
    content: 'public abstract class AbstractExchange : AbstractDeclarable, IExchange, IDeclarable, IServiceNameAware'
    content.vb: >-
      Public MustInherit Class AbstractExchange

          Inherits AbstractDeclarable

          Implements IExchange, IDeclarable, IServiceNameAware
  inheritance:
  - System.Object
  - Steeltoe.Messaging.RabbitMQ.Config.AbstractDeclarable
  derivedClasses:
  - Steeltoe.Messaging.RabbitMQ.Config.CustomExchange
  - Steeltoe.Messaging.RabbitMQ.Config.DirectExchange
  - Steeltoe.Messaging.RabbitMQ.Config.FanoutExchange
  - Steeltoe.Messaging.RabbitMQ.Config.HeadersExchange
  - Steeltoe.Messaging.RabbitMQ.Config.TopicExchange
  implements:
  - Steeltoe.Messaging.RabbitMQ.Config.IExchange
  - Steeltoe.Messaging.RabbitMQ.Config.IDeclarable
  - Steeltoe.Common.Services.IServiceNameAware
  inheritedMembers:
  - Steeltoe.Messaging.RabbitMQ.Config.AbstractDeclarable._declaringAdmins
  - Steeltoe.Messaging.RabbitMQ.Config.AbstractDeclarable.ShouldDeclare
  - Steeltoe.Messaging.RabbitMQ.Config.AbstractDeclarable.Arguments
  - Steeltoe.Messaging.RabbitMQ.Config.AbstractDeclarable.DeclaringAdmins
  - Steeltoe.Messaging.RabbitMQ.Config.AbstractDeclarable.IgnoreDeclarationExceptions
  - Steeltoe.Messaging.RabbitMQ.Config.AbstractDeclarable.SetAdminsThatShouldDeclare(System.Object[])
  - Steeltoe.Messaging.RabbitMQ.Config.AbstractDeclarable.AddArgument(System.String,System.Object)
  - Steeltoe.Messaging.RabbitMQ.Config.AbstractDeclarable.RemoveArgument(System.String)
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: Steeltoe.Messaging.RabbitMQ.Config.AbstractExchange.#ctor(System.String)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Config.AbstractExchange.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: Steeltoe.Messaging.RabbitMQ.Config.AbstractExchange
  langs:
  - csharp
  - vb
  name: AbstractExchange(String)
  nameWithType: AbstractExchange.AbstractExchange(String)
  fullName: Steeltoe.Messaging.RabbitMQ.Config.AbstractExchange.AbstractExchange(System.String)
  type: Constructor
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Config/AbstractExchange.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: .ctor
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Config/AbstractExchange.cs
    startLine: 12
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Config
  syntax:
    content: protected AbstractExchange(string exchangeName)
    parameters:
    - id: exchangeName
      type: System.String
    content.vb: Protected Sub New(exchangeName As String)
  overload: Steeltoe.Messaging.RabbitMQ.Config.AbstractExchange.#ctor*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Steeltoe.Messaging.RabbitMQ.Config.AbstractExchange.#ctor(System.String,System.Boolean,System.Boolean)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Config.AbstractExchange.#ctor(System.String,System.Boolean,System.Boolean)
  id: '#ctor(System.String,System.Boolean,System.Boolean)'
  parent: Steeltoe.Messaging.RabbitMQ.Config.AbstractExchange
  langs:
  - csharp
  - vb
  name: AbstractExchange(String, Boolean, Boolean)
  nameWithType: AbstractExchange.AbstractExchange(String, Boolean, Boolean)
  fullName: Steeltoe.Messaging.RabbitMQ.Config.AbstractExchange.AbstractExchange(System.String, System.Boolean, System.Boolean)
  type: Constructor
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Config/AbstractExchange.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: .ctor
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Config/AbstractExchange.cs
    startLine: 17
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Config
  syntax:
    content: protected AbstractExchange(string exchangeName, bool durable, bool autoDelete)
    parameters:
    - id: exchangeName
      type: System.String
    - id: durable
      type: System.Boolean
    - id: autoDelete
      type: System.Boolean
    content.vb: Protected Sub New(exchangeName As String, durable As Boolean, autoDelete As Boolean)
  overload: Steeltoe.Messaging.RabbitMQ.Config.AbstractExchange.#ctor*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Steeltoe.Messaging.RabbitMQ.Config.AbstractExchange.#ctor(System.String,System.Boolean,System.Boolean,System.Collections.Generic.Dictionary{System.String,System.Object})
  commentId: M:Steeltoe.Messaging.RabbitMQ.Config.AbstractExchange.#ctor(System.String,System.Boolean,System.Boolean,System.Collections.Generic.Dictionary{System.String,System.Object})
  id: '#ctor(System.String,System.Boolean,System.Boolean,System.Collections.Generic.Dictionary{System.String,System.Object})'
  parent: Steeltoe.Messaging.RabbitMQ.Config.AbstractExchange
  langs:
  - csharp
  - vb
  name: AbstractExchange(String, Boolean, Boolean, Dictionary<String, Object>)
  nameWithType: AbstractExchange.AbstractExchange(String, Boolean, Boolean, Dictionary<String, Object>)
  fullName: Steeltoe.Messaging.RabbitMQ.Config.AbstractExchange.AbstractExchange(System.String, System.Boolean, System.Boolean, System.Collections.Generic.Dictionary<System.String, System.Object>)
  type: Constructor
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Config/AbstractExchange.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: .ctor
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Config/AbstractExchange.cs
    startLine: 22
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Config
  syntax:
    content: protected AbstractExchange(string exchangeName, bool durable, bool autoDelete, Dictionary<string, object> arguments)
    parameters:
    - id: exchangeName
      type: System.String
    - id: durable
      type: System.Boolean
    - id: autoDelete
      type: System.Boolean
    - id: arguments
      type: System.Collections.Generic.Dictionary{System.String,System.Object}
    content.vb: Protected Sub New(exchangeName As String, durable As Boolean, autoDelete As Boolean, arguments As Dictionary(Of String, Object))
  overload: Steeltoe.Messaging.RabbitMQ.Config.AbstractExchange.#ctor*
  nameWithType.vb: AbstractExchange.AbstractExchange(String, Boolean, Boolean, Dictionary(Of String, Object))
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: Steeltoe.Messaging.RabbitMQ.Config.AbstractExchange.AbstractExchange(System.String, System.Boolean, System.Boolean, System.Collections.Generic.Dictionary(Of System.String, System.Object))
  name.vb: AbstractExchange(String, Boolean, Boolean, Dictionary(Of String, Object))
- uid: Steeltoe.Messaging.RabbitMQ.Config.AbstractExchange.ServiceName
  commentId: P:Steeltoe.Messaging.RabbitMQ.Config.AbstractExchange.ServiceName
  id: ServiceName
  parent: Steeltoe.Messaging.RabbitMQ.Config.AbstractExchange
  langs:
  - csharp
  - vb
  name: ServiceName
  nameWithType: AbstractExchange.ServiceName
  fullName: Steeltoe.Messaging.RabbitMQ.Config.AbstractExchange.ServiceName
  type: Property
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Config/AbstractExchange.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: ServiceName
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Config/AbstractExchange.cs
    startLine: 31
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Config
  syntax:
    content: public string ServiceName { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property ServiceName As String
  overload: Steeltoe.Messaging.RabbitMQ.Config.AbstractExchange.ServiceName*
  implements:
  - Steeltoe.Common.Services.IServiceNameAware.ServiceName
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Steeltoe.Messaging.RabbitMQ.Config.AbstractExchange.ExchangeName
  commentId: P:Steeltoe.Messaging.RabbitMQ.Config.AbstractExchange.ExchangeName
  id: ExchangeName
  parent: Steeltoe.Messaging.RabbitMQ.Config.AbstractExchange
  langs:
  - csharp
  - vb
  name: ExchangeName
  nameWithType: AbstractExchange.ExchangeName
  fullName: Steeltoe.Messaging.RabbitMQ.Config.AbstractExchange.ExchangeName
  type: Property
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Config/AbstractExchange.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: ExchangeName
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Config/AbstractExchange.cs
    startLine: 33
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Config
  syntax:
    content: public string ExchangeName { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property ExchangeName As String
  overload: Steeltoe.Messaging.RabbitMQ.Config.AbstractExchange.ExchangeName*
  implements:
  - Steeltoe.Messaging.RabbitMQ.Config.IExchange.ExchangeName
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Steeltoe.Messaging.RabbitMQ.Config.AbstractExchange.IsDurable
  commentId: P:Steeltoe.Messaging.RabbitMQ.Config.AbstractExchange.IsDurable
  id: IsDurable
  parent: Steeltoe.Messaging.RabbitMQ.Config.AbstractExchange
  langs:
  - csharp
  - vb
  name: IsDurable
  nameWithType: AbstractExchange.IsDurable
  fullName: Steeltoe.Messaging.RabbitMQ.Config.AbstractExchange.IsDurable
  type: Property
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Config/AbstractExchange.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: IsDurable
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Config/AbstractExchange.cs
    startLine: 35
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Config
  syntax:
    content: public bool IsDurable { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property IsDurable As Boolean
  overload: Steeltoe.Messaging.RabbitMQ.Config.AbstractExchange.IsDurable*
  implements:
  - Steeltoe.Messaging.RabbitMQ.Config.IExchange.IsDurable
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Steeltoe.Messaging.RabbitMQ.Config.AbstractExchange.IsAutoDelete
  commentId: P:Steeltoe.Messaging.RabbitMQ.Config.AbstractExchange.IsAutoDelete
  id: IsAutoDelete
  parent: Steeltoe.Messaging.RabbitMQ.Config.AbstractExchange
  langs:
  - csharp
  - vb
  name: IsAutoDelete
  nameWithType: AbstractExchange.IsAutoDelete
  fullName: Steeltoe.Messaging.RabbitMQ.Config.AbstractExchange.IsAutoDelete
  type: Property
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Config/AbstractExchange.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: IsAutoDelete
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Config/AbstractExchange.cs
    startLine: 37
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Config
  syntax:
    content: public bool IsAutoDelete { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property IsAutoDelete As Boolean
  overload: Steeltoe.Messaging.RabbitMQ.Config.AbstractExchange.IsAutoDelete*
  implements:
  - Steeltoe.Messaging.RabbitMQ.Config.IExchange.IsAutoDelete
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Steeltoe.Messaging.RabbitMQ.Config.AbstractExchange.IsDelayed
  commentId: P:Steeltoe.Messaging.RabbitMQ.Config.AbstractExchange.IsDelayed
  id: IsDelayed
  parent: Steeltoe.Messaging.RabbitMQ.Config.AbstractExchange
  langs:
  - csharp
  - vb
  name: IsDelayed
  nameWithType: AbstractExchange.IsDelayed
  fullName: Steeltoe.Messaging.RabbitMQ.Config.AbstractExchange.IsDelayed
  type: Property
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Config/AbstractExchange.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: IsDelayed
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Config/AbstractExchange.cs
    startLine: 39
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Config
  syntax:
    content: public bool IsDelayed { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property IsDelayed As Boolean
  overload: Steeltoe.Messaging.RabbitMQ.Config.AbstractExchange.IsDelayed*
  implements:
  - Steeltoe.Messaging.RabbitMQ.Config.IExchange.IsDelayed
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Steeltoe.Messaging.RabbitMQ.Config.AbstractExchange.IsInternal
  commentId: P:Steeltoe.Messaging.RabbitMQ.Config.AbstractExchange.IsInternal
  id: IsInternal
  parent: Steeltoe.Messaging.RabbitMQ.Config.AbstractExchange
  langs:
  - csharp
  - vb
  name: IsInternal
  nameWithType: AbstractExchange.IsInternal
  fullName: Steeltoe.Messaging.RabbitMQ.Config.AbstractExchange.IsInternal
  type: Property
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Config/AbstractExchange.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: IsInternal
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Config/AbstractExchange.cs
    startLine: 41
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Config
  syntax:
    content: public bool IsInternal { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property IsInternal As Boolean
  overload: Steeltoe.Messaging.RabbitMQ.Config.AbstractExchange.IsInternal*
  implements:
  - Steeltoe.Messaging.RabbitMQ.Config.IExchange.IsInternal
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Steeltoe.Messaging.RabbitMQ.Config.AbstractExchange.Type
  commentId: P:Steeltoe.Messaging.RabbitMQ.Config.AbstractExchange.Type
  id: Type
  parent: Steeltoe.Messaging.RabbitMQ.Config.AbstractExchange
  langs:
  - csharp
  - vb
  name: Type
  nameWithType: AbstractExchange.Type
  fullName: Steeltoe.Messaging.RabbitMQ.Config.AbstractExchange.Type
  type: Property
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Config/AbstractExchange.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Type
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Config/AbstractExchange.cs
    startLine: 43
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Config
  syntax:
    content: public abstract string Type { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public MustOverride ReadOnly Property Type As String
  overload: Steeltoe.Messaging.RabbitMQ.Config.AbstractExchange.Type*
  implements:
  - Steeltoe.Messaging.RabbitMQ.Config.IExchange.Type
  modifiers.csharp:
  - public
  - abstract
  - get
  modifiers.vb:
  - Public
  - MustOverride
  - ReadOnly
- uid: Steeltoe.Messaging.RabbitMQ.Config.AbstractExchange.ToString
  commentId: M:Steeltoe.Messaging.RabbitMQ.Config.AbstractExchange.ToString
  id: ToString
  parent: Steeltoe.Messaging.RabbitMQ.Config.AbstractExchange
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: AbstractExchange.ToString()
  fullName: Steeltoe.Messaging.RabbitMQ.Config.AbstractExchange.ToString()
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Config/AbstractExchange.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: ToString
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Config/AbstractExchange.cs
    startLine: 45
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Config
  syntax:
    content: public override string ToString()
    return:
      type: System.String
    content.vb: Public Overrides Function ToString As String
  overridden: System.Object.ToString
  overload: Steeltoe.Messaging.RabbitMQ.Config.AbstractExchange.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: Steeltoe.Messaging.RabbitMQ.Config
  commentId: N:Steeltoe.Messaging.RabbitMQ.Config
  name: Steeltoe.Messaging.RabbitMQ.Config
  nameWithType: Steeltoe.Messaging.RabbitMQ.Config
  fullName: Steeltoe.Messaging.RabbitMQ.Config
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Steeltoe.Messaging.RabbitMQ.Config.AbstractDeclarable
  commentId: T:Steeltoe.Messaging.RabbitMQ.Config.AbstractDeclarable
  parent: Steeltoe.Messaging.RabbitMQ.Config
  name: AbstractDeclarable
  nameWithType: AbstractDeclarable
  fullName: Steeltoe.Messaging.RabbitMQ.Config.AbstractDeclarable
- uid: Steeltoe.Messaging.RabbitMQ.Config.IExchange
  commentId: T:Steeltoe.Messaging.RabbitMQ.Config.IExchange
  parent: Steeltoe.Messaging.RabbitMQ.Config
  name: IExchange
  nameWithType: IExchange
  fullName: Steeltoe.Messaging.RabbitMQ.Config.IExchange
- uid: Steeltoe.Messaging.RabbitMQ.Config.IDeclarable
  commentId: T:Steeltoe.Messaging.RabbitMQ.Config.IDeclarable
  parent: Steeltoe.Messaging.RabbitMQ.Config
  name: IDeclarable
  nameWithType: IDeclarable
  fullName: Steeltoe.Messaging.RabbitMQ.Config.IDeclarable
- uid: Steeltoe.Common.Services.IServiceNameAware
  commentId: T:Steeltoe.Common.Services.IServiceNameAware
  parent: Steeltoe.Common.Services
  name: IServiceNameAware
  nameWithType: IServiceNameAware
  fullName: Steeltoe.Common.Services.IServiceNameAware
- uid: Steeltoe.Messaging.RabbitMQ.Config.AbstractDeclarable._declaringAdmins
  commentId: F:Steeltoe.Messaging.RabbitMQ.Config.AbstractDeclarable._declaringAdmins
  parent: Steeltoe.Messaging.RabbitMQ.Config.AbstractDeclarable
  name: _declaringAdmins
  nameWithType: AbstractDeclarable._declaringAdmins
  fullName: Steeltoe.Messaging.RabbitMQ.Config.AbstractDeclarable._declaringAdmins
- uid: Steeltoe.Messaging.RabbitMQ.Config.AbstractDeclarable.ShouldDeclare
  commentId: P:Steeltoe.Messaging.RabbitMQ.Config.AbstractDeclarable.ShouldDeclare
  parent: Steeltoe.Messaging.RabbitMQ.Config.AbstractDeclarable
  name: ShouldDeclare
  nameWithType: AbstractDeclarable.ShouldDeclare
  fullName: Steeltoe.Messaging.RabbitMQ.Config.AbstractDeclarable.ShouldDeclare
- uid: Steeltoe.Messaging.RabbitMQ.Config.AbstractDeclarable.Arguments
  commentId: P:Steeltoe.Messaging.RabbitMQ.Config.AbstractDeclarable.Arguments
  parent: Steeltoe.Messaging.RabbitMQ.Config.AbstractDeclarable
  name: Arguments
  nameWithType: AbstractDeclarable.Arguments
  fullName: Steeltoe.Messaging.RabbitMQ.Config.AbstractDeclarable.Arguments
- uid: Steeltoe.Messaging.RabbitMQ.Config.AbstractDeclarable.DeclaringAdmins
  commentId: P:Steeltoe.Messaging.RabbitMQ.Config.AbstractDeclarable.DeclaringAdmins
  parent: Steeltoe.Messaging.RabbitMQ.Config.AbstractDeclarable
  name: DeclaringAdmins
  nameWithType: AbstractDeclarable.DeclaringAdmins
  fullName: Steeltoe.Messaging.RabbitMQ.Config.AbstractDeclarable.DeclaringAdmins
- uid: Steeltoe.Messaging.RabbitMQ.Config.AbstractDeclarable.IgnoreDeclarationExceptions
  commentId: P:Steeltoe.Messaging.RabbitMQ.Config.AbstractDeclarable.IgnoreDeclarationExceptions
  parent: Steeltoe.Messaging.RabbitMQ.Config.AbstractDeclarable
  name: IgnoreDeclarationExceptions
  nameWithType: AbstractDeclarable.IgnoreDeclarationExceptions
  fullName: Steeltoe.Messaging.RabbitMQ.Config.AbstractDeclarable.IgnoreDeclarationExceptions
- uid: Steeltoe.Messaging.RabbitMQ.Config.AbstractDeclarable.SetAdminsThatShouldDeclare(System.Object[])
  commentId: M:Steeltoe.Messaging.RabbitMQ.Config.AbstractDeclarable.SetAdminsThatShouldDeclare(System.Object[])
  parent: Steeltoe.Messaging.RabbitMQ.Config.AbstractDeclarable
  isExternal: true
  name: SetAdminsThatShouldDeclare(Object[])
  nameWithType: AbstractDeclarable.SetAdminsThatShouldDeclare(Object[])
  fullName: Steeltoe.Messaging.RabbitMQ.Config.AbstractDeclarable.SetAdminsThatShouldDeclare(System.Object[])
  nameWithType.vb: AbstractDeclarable.SetAdminsThatShouldDeclare(Object())
  fullName.vb: Steeltoe.Messaging.RabbitMQ.Config.AbstractDeclarable.SetAdminsThatShouldDeclare(System.Object())
  name.vb: SetAdminsThatShouldDeclare(Object())
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Config.AbstractDeclarable.SetAdminsThatShouldDeclare(System.Object[])
    name: SetAdminsThatShouldDeclare
    nameWithType: AbstractDeclarable.SetAdminsThatShouldDeclare
    fullName: Steeltoe.Messaging.RabbitMQ.Config.AbstractDeclarable.SetAdminsThatShouldDeclare
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Config.AbstractDeclarable.SetAdminsThatShouldDeclare(System.Object[])
    name: SetAdminsThatShouldDeclare
    nameWithType: AbstractDeclarable.SetAdminsThatShouldDeclare
    fullName: Steeltoe.Messaging.RabbitMQ.Config.AbstractDeclarable.SetAdminsThatShouldDeclare
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Config.AbstractDeclarable.AddArgument(System.String,System.Object)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Config.AbstractDeclarable.AddArgument(System.String,System.Object)
  parent: Steeltoe.Messaging.RabbitMQ.Config.AbstractDeclarable
  isExternal: true
  name: AddArgument(String, Object)
  nameWithType: AbstractDeclarable.AddArgument(String, Object)
  fullName: Steeltoe.Messaging.RabbitMQ.Config.AbstractDeclarable.AddArgument(System.String, System.Object)
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Config.AbstractDeclarable.AddArgument(System.String,System.Object)
    name: AddArgument
    nameWithType: AbstractDeclarable.AddArgument
    fullName: Steeltoe.Messaging.RabbitMQ.Config.AbstractDeclarable.AddArgument
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Config.AbstractDeclarable.AddArgument(System.String,System.Object)
    name: AddArgument
    nameWithType: AbstractDeclarable.AddArgument
    fullName: Steeltoe.Messaging.RabbitMQ.Config.AbstractDeclarable.AddArgument
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Config.AbstractDeclarable.RemoveArgument(System.String)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Config.AbstractDeclarable.RemoveArgument(System.String)
  parent: Steeltoe.Messaging.RabbitMQ.Config.AbstractDeclarable
  isExternal: true
  name: RemoveArgument(String)
  nameWithType: AbstractDeclarable.RemoveArgument(String)
  fullName: Steeltoe.Messaging.RabbitMQ.Config.AbstractDeclarable.RemoveArgument(System.String)
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Config.AbstractDeclarable.RemoveArgument(System.String)
    name: RemoveArgument
    nameWithType: AbstractDeclarable.RemoveArgument
    fullName: Steeltoe.Messaging.RabbitMQ.Config.AbstractDeclarable.RemoveArgument
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Config.AbstractDeclarable.RemoveArgument(System.String)
    name: RemoveArgument
    nameWithType: AbstractDeclarable.RemoveArgument
    fullName: Steeltoe.Messaging.RabbitMQ.Config.AbstractDeclarable.RemoveArgument
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Steeltoe.Common.Services
  commentId: N:Steeltoe.Common.Services
  name: Steeltoe.Common.Services
  nameWithType: Steeltoe.Common.Services
  fullName: Steeltoe.Common.Services
- uid: Steeltoe.Messaging.RabbitMQ.Config.AbstractExchange.#ctor*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Config.AbstractExchange.#ctor
  name: AbstractExchange
  nameWithType: AbstractExchange.AbstractExchange
  fullName: Steeltoe.Messaging.RabbitMQ.Config.AbstractExchange.AbstractExchange
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Collections.Generic.Dictionary{System.String,System.Object}
  commentId: T:System.Collections.Generic.Dictionary{System.String,System.Object}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  name: Dictionary<String, Object>
  nameWithType: Dictionary<String, Object>
  fullName: System.Collections.Generic.Dictionary<System.String, System.Object>
  nameWithType.vb: Dictionary(Of String, Object)
  fullName.vb: System.Collections.Generic.Dictionary(Of System.String, System.Object)
  name.vb: Dictionary(Of String, Object)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Dictionary`2
  commentId: T:System.Collections.Generic.Dictionary`2
  isExternal: true
  name: Dictionary<TKey, TValue>
  nameWithType: Dictionary<TKey, TValue>
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>
  nameWithType.vb: Dictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue)
  name.vb: Dictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Steeltoe.Messaging.RabbitMQ.Config.AbstractExchange.ServiceName*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Config.AbstractExchange.ServiceName
  name: ServiceName
  nameWithType: AbstractExchange.ServiceName
  fullName: Steeltoe.Messaging.RabbitMQ.Config.AbstractExchange.ServiceName
- uid: Steeltoe.Common.Services.IServiceNameAware.ServiceName
  commentId: P:Steeltoe.Common.Services.IServiceNameAware.ServiceName
  parent: Steeltoe.Common.Services.IServiceNameAware
  name: ServiceName
  nameWithType: IServiceNameAware.ServiceName
  fullName: Steeltoe.Common.Services.IServiceNameAware.ServiceName
- uid: Steeltoe.Messaging.RabbitMQ.Config.AbstractExchange.ExchangeName*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Config.AbstractExchange.ExchangeName
  name: ExchangeName
  nameWithType: AbstractExchange.ExchangeName
  fullName: Steeltoe.Messaging.RabbitMQ.Config.AbstractExchange.ExchangeName
- uid: Steeltoe.Messaging.RabbitMQ.Config.IExchange.ExchangeName
  commentId: P:Steeltoe.Messaging.RabbitMQ.Config.IExchange.ExchangeName
  parent: Steeltoe.Messaging.RabbitMQ.Config.IExchange
  name: ExchangeName
  nameWithType: IExchange.ExchangeName
  fullName: Steeltoe.Messaging.RabbitMQ.Config.IExchange.ExchangeName
- uid: Steeltoe.Messaging.RabbitMQ.Config.AbstractExchange.IsDurable*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Config.AbstractExchange.IsDurable
  name: IsDurable
  nameWithType: AbstractExchange.IsDurable
  fullName: Steeltoe.Messaging.RabbitMQ.Config.AbstractExchange.IsDurable
- uid: Steeltoe.Messaging.RabbitMQ.Config.IExchange.IsDurable
  commentId: P:Steeltoe.Messaging.RabbitMQ.Config.IExchange.IsDurable
  parent: Steeltoe.Messaging.RabbitMQ.Config.IExchange
  name: IsDurable
  nameWithType: IExchange.IsDurable
  fullName: Steeltoe.Messaging.RabbitMQ.Config.IExchange.IsDurable
- uid: Steeltoe.Messaging.RabbitMQ.Config.AbstractExchange.IsAutoDelete*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Config.AbstractExchange.IsAutoDelete
  name: IsAutoDelete
  nameWithType: AbstractExchange.IsAutoDelete
  fullName: Steeltoe.Messaging.RabbitMQ.Config.AbstractExchange.IsAutoDelete
- uid: Steeltoe.Messaging.RabbitMQ.Config.IExchange.IsAutoDelete
  commentId: P:Steeltoe.Messaging.RabbitMQ.Config.IExchange.IsAutoDelete
  parent: Steeltoe.Messaging.RabbitMQ.Config.IExchange
  name: IsAutoDelete
  nameWithType: IExchange.IsAutoDelete
  fullName: Steeltoe.Messaging.RabbitMQ.Config.IExchange.IsAutoDelete
- uid: Steeltoe.Messaging.RabbitMQ.Config.AbstractExchange.IsDelayed*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Config.AbstractExchange.IsDelayed
  name: IsDelayed
  nameWithType: AbstractExchange.IsDelayed
  fullName: Steeltoe.Messaging.RabbitMQ.Config.AbstractExchange.IsDelayed
- uid: Steeltoe.Messaging.RabbitMQ.Config.IExchange.IsDelayed
  commentId: P:Steeltoe.Messaging.RabbitMQ.Config.IExchange.IsDelayed
  parent: Steeltoe.Messaging.RabbitMQ.Config.IExchange
  name: IsDelayed
  nameWithType: IExchange.IsDelayed
  fullName: Steeltoe.Messaging.RabbitMQ.Config.IExchange.IsDelayed
- uid: Steeltoe.Messaging.RabbitMQ.Config.AbstractExchange.IsInternal*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Config.AbstractExchange.IsInternal
  name: IsInternal
  nameWithType: AbstractExchange.IsInternal
  fullName: Steeltoe.Messaging.RabbitMQ.Config.AbstractExchange.IsInternal
- uid: Steeltoe.Messaging.RabbitMQ.Config.IExchange.IsInternal
  commentId: P:Steeltoe.Messaging.RabbitMQ.Config.IExchange.IsInternal
  parent: Steeltoe.Messaging.RabbitMQ.Config.IExchange
  name: IsInternal
  nameWithType: IExchange.IsInternal
  fullName: Steeltoe.Messaging.RabbitMQ.Config.IExchange.IsInternal
- uid: Steeltoe.Messaging.RabbitMQ.Config.AbstractExchange.Type*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Config.AbstractExchange.Type
  name: Type
  nameWithType: AbstractExchange.Type
  fullName: Steeltoe.Messaging.RabbitMQ.Config.AbstractExchange.Type
- uid: Steeltoe.Messaging.RabbitMQ.Config.IExchange.Type
  commentId: P:Steeltoe.Messaging.RabbitMQ.Config.IExchange.Type
  parent: Steeltoe.Messaging.RabbitMQ.Config.IExchange
  name: Type
  nameWithType: IExchange.Type
  fullName: Steeltoe.Messaging.RabbitMQ.Config.IExchange.Type
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Config.AbstractExchange.ToString*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Config.AbstractExchange.ToString
  name: ToString
  nameWithType: AbstractExchange.ToString
  fullName: Steeltoe.Messaging.RabbitMQ.Config.AbstractExchange.ToString
