### YamlMime:ManagedReference
items:
- uid: Steeltoe.Discovery.Eureka.IEurekaInstanceConfig
  commentId: T:Steeltoe.Discovery.Eureka.IEurekaInstanceConfig
  id: IEurekaInstanceConfig
  parent: Steeltoe.Discovery.Eureka
  children:
  - Steeltoe.Discovery.Eureka.IEurekaInstanceConfig.AppGroupName
  - Steeltoe.Discovery.Eureka.IEurekaInstanceConfig.AppName
  - Steeltoe.Discovery.Eureka.IEurekaInstanceConfig.ASGName
  - Steeltoe.Discovery.Eureka.IEurekaInstanceConfig.DataCenterInfo
  - Steeltoe.Discovery.Eureka.IEurekaInstanceConfig.DefaultAddressResolutionOrder
  - Steeltoe.Discovery.Eureka.IEurekaInstanceConfig.GetHostName(System.Boolean)
  - Steeltoe.Discovery.Eureka.IEurekaInstanceConfig.HealthCheckUrl
  - Steeltoe.Discovery.Eureka.IEurekaInstanceConfig.HealthCheckUrlPath
  - Steeltoe.Discovery.Eureka.IEurekaInstanceConfig.HomePageUrl
  - Steeltoe.Discovery.Eureka.IEurekaInstanceConfig.HomePageUrlPath
  - Steeltoe.Discovery.Eureka.IEurekaInstanceConfig.HostName
  - Steeltoe.Discovery.Eureka.IEurekaInstanceConfig.InstanceId
  - Steeltoe.Discovery.Eureka.IEurekaInstanceConfig.IpAddress
  - Steeltoe.Discovery.Eureka.IEurekaInstanceConfig.IsInstanceEnabledOnInit
  - Steeltoe.Discovery.Eureka.IEurekaInstanceConfig.IsNonSecurePortEnabled
  - Steeltoe.Discovery.Eureka.IEurekaInstanceConfig.LeaseExpirationDurationInSeconds
  - Steeltoe.Discovery.Eureka.IEurekaInstanceConfig.LeaseRenewalIntervalInSeconds
  - Steeltoe.Discovery.Eureka.IEurekaInstanceConfig.MetadataMap
  - Steeltoe.Discovery.Eureka.IEurekaInstanceConfig.NonSecurePort
  - Steeltoe.Discovery.Eureka.IEurekaInstanceConfig.PreferIpAddress
  - Steeltoe.Discovery.Eureka.IEurekaInstanceConfig.SecureHealthCheckUrl
  - Steeltoe.Discovery.Eureka.IEurekaInstanceConfig.SecurePort
  - Steeltoe.Discovery.Eureka.IEurekaInstanceConfig.SecurePortEnabled
  - Steeltoe.Discovery.Eureka.IEurekaInstanceConfig.SecureVirtualHostName
  - Steeltoe.Discovery.Eureka.IEurekaInstanceConfig.StatusPageUrl
  - Steeltoe.Discovery.Eureka.IEurekaInstanceConfig.StatusPageUrlPath
  - Steeltoe.Discovery.Eureka.IEurekaInstanceConfig.VirtualHostName
  langs:
  - csharp
  - vb
  name: IEurekaInstanceConfig
  nameWithType: IEurekaInstanceConfig
  fullName: Steeltoe.Discovery.Eureka.IEurekaInstanceConfig
  type: Interface
  source:
    remote:
      path: src/Discovery/src/Eureka/IEurekaInstanceConfig.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: IEurekaInstanceConfig
    path: ../Steeltoe/src/Discovery/src/Eureka/IEurekaInstanceConfig.cs
    startLine: 9
  assemblies:
  - Steeltoe.Discovery.Eureka
  namespace: Steeltoe.Discovery.Eureka
  syntax:
    content: public interface IEurekaInstanceConfig
    content.vb: Public Interface IEurekaInstanceConfig
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Steeltoe.Discovery.Eureka.IEurekaInstanceConfig.InstanceId
  commentId: P:Steeltoe.Discovery.Eureka.IEurekaInstanceConfig.InstanceId
  id: InstanceId
  parent: Steeltoe.Discovery.Eureka.IEurekaInstanceConfig
  langs:
  - csharp
  - vb
  name: InstanceId
  nameWithType: IEurekaInstanceConfig.InstanceId
  fullName: Steeltoe.Discovery.Eureka.IEurekaInstanceConfig.InstanceId
  type: Property
  source:
    remote:
      path: src/Discovery/src/Eureka/IEurekaInstanceConfig.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: InstanceId
    path: ../Steeltoe/src/Discovery/src/Eureka/IEurekaInstanceConfig.cs
    startLine: 15
  assemblies:
  - Steeltoe.Discovery.Eureka
  namespace: Steeltoe.Discovery.Eureka
  summary: "\nGets or sets the unique Id (within the scope of the appName) of this instance to be registered with eureka.\nConfiguration property: eureka:instance:instanceId\n"
  example: []
  syntax:
    content: string InstanceId { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Property InstanceId As String
  overload: Steeltoe.Discovery.Eureka.IEurekaInstanceConfig.InstanceId*
  modifiers.csharp:
  - get
  - set
- uid: Steeltoe.Discovery.Eureka.IEurekaInstanceConfig.AppName
  commentId: P:Steeltoe.Discovery.Eureka.IEurekaInstanceConfig.AppName
  id: AppName
  parent: Steeltoe.Discovery.Eureka.IEurekaInstanceConfig
  langs:
  - csharp
  - vb
  name: AppName
  nameWithType: IEurekaInstanceConfig.AppName
  fullName: Steeltoe.Discovery.Eureka.IEurekaInstanceConfig.AppName
  type: Property
  source:
    remote:
      path: src/Discovery/src/Eureka/IEurekaInstanceConfig.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: AppName
    path: ../Steeltoe/src/Discovery/src/Eureka/IEurekaInstanceConfig.cs
    startLine: 21
  assemblies:
  - Steeltoe.Discovery.Eureka
  namespace: Steeltoe.Discovery.Eureka
  summary: "\nGets or sets the name of the application to be registered with eureka.\nConfiguration property: eureka:instance:name\n"
  example: []
  syntax:
    content: string AppName { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Property AppName As String
  overload: Steeltoe.Discovery.Eureka.IEurekaInstanceConfig.AppName*
  modifiers.csharp:
  - get
  - set
- uid: Steeltoe.Discovery.Eureka.IEurekaInstanceConfig.AppGroupName
  commentId: P:Steeltoe.Discovery.Eureka.IEurekaInstanceConfig.AppGroupName
  id: AppGroupName
  parent: Steeltoe.Discovery.Eureka.IEurekaInstanceConfig
  langs:
  - csharp
  - vb
  name: AppGroupName
  nameWithType: IEurekaInstanceConfig.AppGroupName
  fullName: Steeltoe.Discovery.Eureka.IEurekaInstanceConfig.AppGroupName
  type: Property
  source:
    remote:
      path: src/Discovery/src/Eureka/IEurekaInstanceConfig.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: AppGroupName
    path: ../Steeltoe/src/Discovery/src/Eureka/IEurekaInstanceConfig.cs
    startLine: 27
  assemblies:
  - Steeltoe.Discovery.Eureka
  namespace: Steeltoe.Discovery.Eureka
  summary: "\nGets or sets the name of the application group to be registered with eureka.\nConfiguration property: eureka:instance:appGroup\n"
  example: []
  syntax:
    content: string AppGroupName { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Property AppGroupName As String
  overload: Steeltoe.Discovery.Eureka.IEurekaInstanceConfig.AppGroupName*
  modifiers.csharp:
  - get
  - set
- uid: Steeltoe.Discovery.Eureka.IEurekaInstanceConfig.IsInstanceEnabledOnInit
  commentId: P:Steeltoe.Discovery.Eureka.IEurekaInstanceConfig.IsInstanceEnabledOnInit
  id: IsInstanceEnabledOnInit
  parent: Steeltoe.Discovery.Eureka.IEurekaInstanceConfig
  langs:
  - csharp
  - vb
  name: IsInstanceEnabledOnInit
  nameWithType: IEurekaInstanceConfig.IsInstanceEnabledOnInit
  fullName: Steeltoe.Discovery.Eureka.IEurekaInstanceConfig.IsInstanceEnabledOnInit
  type: Property
  source:
    remote:
      path: src/Discovery/src/Eureka/IEurekaInstanceConfig.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: IsInstanceEnabledOnInit
    path: ../Steeltoe/src/Discovery/src/Eureka/IEurekaInstanceConfig.cs
    startLine: 34
  assemblies:
  - Steeltoe.Discovery.Eureka
  namespace: Steeltoe.Discovery.Eureka
  summary: "\nGets or sets a value indicating whether indicates whether the instance should be enabled for taking traffic as soon as it is registered with eureka.\nSometimes the application might need to do some pre-processing before it is ready to take traffic.\nConfiguration property: eureka:instance:instanceEnabledOnInit\n"
  example: []
  syntax:
    content: bool IsInstanceEnabledOnInit { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Property IsInstanceEnabledOnInit As Boolean
  overload: Steeltoe.Discovery.Eureka.IEurekaInstanceConfig.IsInstanceEnabledOnInit*
  modifiers.csharp:
  - get
  - set
- uid: Steeltoe.Discovery.Eureka.IEurekaInstanceConfig.NonSecurePort
  commentId: P:Steeltoe.Discovery.Eureka.IEurekaInstanceConfig.NonSecurePort
  id: NonSecurePort
  parent: Steeltoe.Discovery.Eureka.IEurekaInstanceConfig
  langs:
  - csharp
  - vb
  name: NonSecurePort
  nameWithType: IEurekaInstanceConfig.NonSecurePort
  fullName: Steeltoe.Discovery.Eureka.IEurekaInstanceConfig.NonSecurePort
  type: Property
  source:
    remote:
      path: src/Discovery/src/Eureka/IEurekaInstanceConfig.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: NonSecurePort
    path: ../Steeltoe/src/Discovery/src/Eureka/IEurekaInstanceConfig.cs
    startLine: 40
  assemblies:
  - Steeltoe.Discovery.Eureka
  namespace: Steeltoe.Discovery.Eureka
  summary: "\nGets or sets the <pre><code>non-secure</code></pre> port on which the instance should receive traffic.\nConfiguration property: eureka:instance:port\n"
  example: []
  syntax:
    content: int NonSecurePort { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Property NonSecurePort As Integer
  overload: Steeltoe.Discovery.Eureka.IEurekaInstanceConfig.NonSecurePort*
  modifiers.csharp:
  - get
  - set
- uid: Steeltoe.Discovery.Eureka.IEurekaInstanceConfig.SecurePort
  commentId: P:Steeltoe.Discovery.Eureka.IEurekaInstanceConfig.SecurePort
  id: SecurePort
  parent: Steeltoe.Discovery.Eureka.IEurekaInstanceConfig
  langs:
  - csharp
  - vb
  name: SecurePort
  nameWithType: IEurekaInstanceConfig.SecurePort
  fullName: Steeltoe.Discovery.Eureka.IEurekaInstanceConfig.SecurePort
  type: Property
  source:
    remote:
      path: src/Discovery/src/Eureka/IEurekaInstanceConfig.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: SecurePort
    path: ../Steeltoe/src/Discovery/src/Eureka/IEurekaInstanceConfig.cs
    startLine: 46
  assemblies:
  - Steeltoe.Discovery.Eureka
  namespace: Steeltoe.Discovery.Eureka
  summary: "\nGets or sets the <pre><code>Secure port</code></pre> on which the instance should receive traffic.\nConfiguration property: eureka:instance:securePort\n"
  example: []
  syntax:
    content: int SecurePort { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Property SecurePort As Integer
  overload: Steeltoe.Discovery.Eureka.IEurekaInstanceConfig.SecurePort*
  modifiers.csharp:
  - get
  - set
- uid: Steeltoe.Discovery.Eureka.IEurekaInstanceConfig.IsNonSecurePortEnabled
  commentId: P:Steeltoe.Discovery.Eureka.IEurekaInstanceConfig.IsNonSecurePortEnabled
  id: IsNonSecurePortEnabled
  parent: Steeltoe.Discovery.Eureka.IEurekaInstanceConfig
  langs:
  - csharp
  - vb
  name: IsNonSecurePortEnabled
  nameWithType: IEurekaInstanceConfig.IsNonSecurePortEnabled
  fullName: Steeltoe.Discovery.Eureka.IEurekaInstanceConfig.IsNonSecurePortEnabled
  type: Property
  source:
    remote:
      path: src/Discovery/src/Eureka/IEurekaInstanceConfig.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: IsNonSecurePortEnabled
    path: ../Steeltoe/src/Discovery/src/Eureka/IEurekaInstanceConfig.cs
    startLine: 53
  assemblies:
  - Steeltoe.Discovery.Eureka
  namespace: Steeltoe.Discovery.Eureka
  summary: "\nGets or sets a value indicating whether indicates whether the <pre><code>non-secure</code></pre> port should be enabled for traffic or not.\nSet true if the <pre><code>non-secure</code></pre> port is enabled, false otherwise.\nConfiguration property: eureka:instance:nonSecurePortEnabled\n"
  example: []
  syntax:
    content: bool IsNonSecurePortEnabled { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Property IsNonSecurePortEnabled As Boolean
  overload: Steeltoe.Discovery.Eureka.IEurekaInstanceConfig.IsNonSecurePortEnabled*
  modifiers.csharp:
  - get
  - set
- uid: Steeltoe.Discovery.Eureka.IEurekaInstanceConfig.SecurePortEnabled
  commentId: P:Steeltoe.Discovery.Eureka.IEurekaInstanceConfig.SecurePortEnabled
  id: SecurePortEnabled
  parent: Steeltoe.Discovery.Eureka.IEurekaInstanceConfig
  langs:
  - csharp
  - vb
  name: SecurePortEnabled
  nameWithType: IEurekaInstanceConfig.SecurePortEnabled
  fullName: Steeltoe.Discovery.Eureka.IEurekaInstanceConfig.SecurePortEnabled
  type: Property
  source:
    remote:
      path: src/Discovery/src/Eureka/IEurekaInstanceConfig.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: SecurePortEnabled
    path: ../Steeltoe/src/Discovery/src/Eureka/IEurekaInstanceConfig.cs
    startLine: 60
  assemblies:
  - Steeltoe.Discovery.Eureka
  namespace: Steeltoe.Discovery.Eureka
  summary: "\nGets or sets a value indicating whether indicates whether the <pre><code>secure</code></pre> port should be enabled for traffic or not.\nSet true if the <pre><code>secure</code></pre> port is enabled, false otherwise.\nConfiguration property: eureka:instance:securePortEnabled\n"
  example: []
  syntax:
    content: bool SecurePortEnabled { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Property SecurePortEnabled As Boolean
  overload: Steeltoe.Discovery.Eureka.IEurekaInstanceConfig.SecurePortEnabled*
  modifiers.csharp:
  - get
  - set
- uid: Steeltoe.Discovery.Eureka.IEurekaInstanceConfig.LeaseRenewalIntervalInSeconds
  commentId: P:Steeltoe.Discovery.Eureka.IEurekaInstanceConfig.LeaseRenewalIntervalInSeconds
  id: LeaseRenewalIntervalInSeconds
  parent: Steeltoe.Discovery.Eureka.IEurekaInstanceConfig
  langs:
  - csharp
  - vb
  name: LeaseRenewalIntervalInSeconds
  nameWithType: IEurekaInstanceConfig.LeaseRenewalIntervalInSeconds
  fullName: Steeltoe.Discovery.Eureka.IEurekaInstanceConfig.LeaseRenewalIntervalInSeconds
  type: Property
  source:
    remote:
      path: src/Discovery/src/Eureka/IEurekaInstanceConfig.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: LeaseRenewalIntervalInSeconds
    path: ../Steeltoe/src/Discovery/src/Eureka/IEurekaInstanceConfig.cs
    startLine: 71
  assemblies:
  - Steeltoe.Discovery.Eureka
  namespace: Steeltoe.Discovery.Eureka
  summary: "\nGets or sets indicates how often (in seconds) the eureka client needs to send heartbeats to eureka server\nto indicate that it is still alive. If the heartbeats are not received for the period specified in\n<xref href=\"Steeltoe.Discovery.Eureka.IEurekaInstanceConfig.LeaseExpirationDurationInSeconds\" data-throw-if-not-resolved=\"false\"></xref>, eureka server will removethe instance from its view,\nthere by disallowing traffic to this instance.\nNote that the instance could still not take traffic if it implements HealthCheckCallback and then\ndecides to make itself unavailable.\nConfiguration property: eureka:instance:leaseRenewalIntervalInSeconds\n"
  example: []
  syntax:
    content: int LeaseRenewalIntervalInSeconds { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Property LeaseRenewalIntervalInSeconds As Integer
  overload: Steeltoe.Discovery.Eureka.IEurekaInstanceConfig.LeaseRenewalIntervalInSeconds*
  modifiers.csharp:
  - get
  - set
- uid: Steeltoe.Discovery.Eureka.IEurekaInstanceConfig.LeaseExpirationDurationInSeconds
  commentId: P:Steeltoe.Discovery.Eureka.IEurekaInstanceConfig.LeaseExpirationDurationInSeconds
  id: LeaseExpirationDurationInSeconds
  parent: Steeltoe.Discovery.Eureka.IEurekaInstanceConfig
  langs:
  - csharp
  - vb
  name: LeaseExpirationDurationInSeconds
  nameWithType: IEurekaInstanceConfig.LeaseExpirationDurationInSeconds
  fullName: Steeltoe.Discovery.Eureka.IEurekaInstanceConfig.LeaseExpirationDurationInSeconds
  type: Property
  source:
    remote:
      path: src/Discovery/src/Eureka/IEurekaInstanceConfig.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: LeaseExpirationDurationInSeconds
    path: ../Steeltoe/src/Discovery/src/Eureka/IEurekaInstanceConfig.cs
    startLine: 83
  assemblies:
  - Steeltoe.Discovery.Eureka
  namespace: Steeltoe.Discovery.Eureka
  summary: "\nGets or sets indicates the time in seconds that the eureka server waits since it received the last heartbeat before\nit can remove this instance from its view and there by disallowing traffic to this instance.\n\nSetting this value too long could mean that the traffic could be routed to the instance even though\nthe instance is not alive. Setting this value too small could mean, the instance may be taken out\nof traffic because of temporary network glitches.This value to be set to atleast higher than\nthe value specified in <xref href=\"Steeltoe.Discovery.Eureka.IEurekaInstanceConfig.LeaseRenewalIntervalInSeconds\" data-throw-if-not-resolved=\"false\"></xref>\nConfiguration property: eureka:instance:leaseExpirationDurationInSeconds\n"
  example: []
  syntax:
    content: int LeaseExpirationDurationInSeconds { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Property LeaseExpirationDurationInSeconds As Integer
  overload: Steeltoe.Discovery.Eureka.IEurekaInstanceConfig.LeaseExpirationDurationInSeconds*
  modifiers.csharp:
  - get
  - set
- uid: Steeltoe.Discovery.Eureka.IEurekaInstanceConfig.VirtualHostName
  commentId: P:Steeltoe.Discovery.Eureka.IEurekaInstanceConfig.VirtualHostName
  id: VirtualHostName
  parent: Steeltoe.Discovery.Eureka.IEurekaInstanceConfig
  langs:
  - csharp
  - vb
  name: VirtualHostName
  nameWithType: IEurekaInstanceConfig.VirtualHostName
  fullName: Steeltoe.Discovery.Eureka.IEurekaInstanceConfig.VirtualHostName
  type: Property
  source:
    remote:
      path: src/Discovery/src/Eureka/IEurekaInstanceConfig.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: VirtualHostName
    path: ../Steeltoe/src/Discovery/src/Eureka/IEurekaInstanceConfig.cs
    startLine: 93
  assemblies:
  - Steeltoe.Discovery.Eureka
  namespace: Steeltoe.Discovery.Eureka
  summary: "\nGets or sets the virtual host name defined for this instance.\n\nThis is typically the way other instance would find this instance by using the virtual host name.\nThink of this as similar to the fully qualified domain name, that the users of your services will\nneed to find this instance.\nConfiguration property: eureka:instance:vipAddress\n"
  example: []
  syntax:
    content: string VirtualHostName { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Property VirtualHostName As String
  overload: Steeltoe.Discovery.Eureka.IEurekaInstanceConfig.VirtualHostName*
  modifiers.csharp:
  - get
  - set
- uid: Steeltoe.Discovery.Eureka.IEurekaInstanceConfig.SecureVirtualHostName
  commentId: P:Steeltoe.Discovery.Eureka.IEurekaInstanceConfig.SecureVirtualHostName
  id: SecureVirtualHostName
  parent: Steeltoe.Discovery.Eureka.IEurekaInstanceConfig
  langs:
  - csharp
  - vb
  name: SecureVirtualHostName
  nameWithType: IEurekaInstanceConfig.SecureVirtualHostName
  fullName: Steeltoe.Discovery.Eureka.IEurekaInstanceConfig.SecureVirtualHostName
  type: Property
  source:
    remote:
      path: src/Discovery/src/Eureka/IEurekaInstanceConfig.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: SecureVirtualHostName
    path: ../Steeltoe/src/Discovery/src/Eureka/IEurekaInstanceConfig.cs
    startLine: 103
  assemblies:
  - Steeltoe.Discovery.Eureka
  namespace: Steeltoe.Discovery.Eureka
  summary: "\nGets or sets the secure virtual host name defined for this instance.\n\nThis is typically the way other instance would find this instance by using the virtual host name.\nThink of this as similar to the fully qualified domain name, that the users of your services will\nneed to find this instance.\nConfiguration property: eureka:instance:secureVipAddress\n"
  example: []
  syntax:
    content: string SecureVirtualHostName { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Property SecureVirtualHostName As String
  overload: Steeltoe.Discovery.Eureka.IEurekaInstanceConfig.SecureVirtualHostName*
  modifiers.csharp:
  - get
  - set
- uid: Steeltoe.Discovery.Eureka.IEurekaInstanceConfig.ASGName
  commentId: P:Steeltoe.Discovery.Eureka.IEurekaInstanceConfig.ASGName
  id: ASGName
  parent: Steeltoe.Discovery.Eureka.IEurekaInstanceConfig
  langs:
  - csharp
  - vb
  name: ASGName
  nameWithType: IEurekaInstanceConfig.ASGName
  fullName: Steeltoe.Discovery.Eureka.IEurekaInstanceConfig.ASGName
  type: Property
  source:
    remote:
      path: src/Discovery/src/Eureka/IEurekaInstanceConfig.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: ASGName
    path: ../Steeltoe/src/Discovery/src/Eureka/IEurekaInstanceConfig.cs
    startLine: 111
  assemblies:
  - Steeltoe.Discovery.Eureka
  namespace: Steeltoe.Discovery.Eureka
  summary: "\nGets or sets the <pre><code>AWS autoscaling group name</code></pre> associated with this instance. This information is\nspecifically used in an AWS environment to automatically put an instance out of service after the instance is\nlaunched and it has been disabled for traffic..\nConfiguration property: eureka:instance:asgName\n"
  example: []
  syntax:
    content: string ASGName { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Property ASGName As String
  overload: Steeltoe.Discovery.Eureka.IEurekaInstanceConfig.ASGName*
  modifiers.csharp:
  - get
  - set
- uid: Steeltoe.Discovery.Eureka.IEurekaInstanceConfig.MetadataMap
  commentId: P:Steeltoe.Discovery.Eureka.IEurekaInstanceConfig.MetadataMap
  id: MetadataMap
  parent: Steeltoe.Discovery.Eureka.IEurekaInstanceConfig
  langs:
  - csharp
  - vb
  name: MetadataMap
  nameWithType: IEurekaInstanceConfig.MetadataMap
  fullName: Steeltoe.Discovery.Eureka.IEurekaInstanceConfig.MetadataMap
  type: Property
  source:
    remote:
      path: src/Discovery/src/Eureka/IEurekaInstanceConfig.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: MetadataMap
    path: ../Steeltoe/src/Discovery/src/Eureka/IEurekaInstanceConfig.cs
    startLine: 118
  assemblies:
  - Steeltoe.Discovery.Eureka
  namespace: Steeltoe.Discovery.Eureka
  summary: "\nGets or sets the metadata name/value pairs associated with this instance. This information is sent to eureka\nserver and can be used by other instances.\nConfiguration property: eureka:instance:metadataMap\n"
  example: []
  syntax:
    content: IDictionary<string, string> MetadataMap { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.IDictionary{System.String,System.String}
    content.vb: Property MetadataMap As IDictionary(Of String, String)
  overload: Steeltoe.Discovery.Eureka.IEurekaInstanceConfig.MetadataMap*
  modifiers.csharp:
  - get
  - set
- uid: Steeltoe.Discovery.Eureka.IEurekaInstanceConfig.DataCenterInfo
  commentId: P:Steeltoe.Discovery.Eureka.IEurekaInstanceConfig.DataCenterInfo
  id: DataCenterInfo
  parent: Steeltoe.Discovery.Eureka.IEurekaInstanceConfig
  langs:
  - csharp
  - vb
  name: DataCenterInfo
  nameWithType: IEurekaInstanceConfig.DataCenterInfo
  fullName: Steeltoe.Discovery.Eureka.IEurekaInstanceConfig.DataCenterInfo
  type: Property
  source:
    remote:
      path: src/Discovery/src/Eureka/IEurekaInstanceConfig.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: DataCenterInfo
    path: ../Steeltoe/src/Discovery/src/Eureka/IEurekaInstanceConfig.cs
    startLine: 124
  assemblies:
  - Steeltoe.Discovery.Eureka
  namespace: Steeltoe.Discovery.Eureka
  summary: "\nGets or sets the data center this instance is deployed. This information is used to get some AWS specific\ninstance information if the instance is deployed in AWS.\n"
  example: []
  syntax:
    content: IDataCenterInfo DataCenterInfo { get; set; }
    parameters: []
    return:
      type: Steeltoe.Discovery.Eureka.AppInfo.IDataCenterInfo
    content.vb: Property DataCenterInfo As IDataCenterInfo
  overload: Steeltoe.Discovery.Eureka.IEurekaInstanceConfig.DataCenterInfo*
  modifiers.csharp:
  - get
  - set
- uid: Steeltoe.Discovery.Eureka.IEurekaInstanceConfig.IpAddress
  commentId: P:Steeltoe.Discovery.Eureka.IEurekaInstanceConfig.IpAddress
  id: IpAddress
  parent: Steeltoe.Discovery.Eureka.IEurekaInstanceConfig
  langs:
  - csharp
  - vb
  name: IpAddress
  nameWithType: IEurekaInstanceConfig.IpAddress
  fullName: Steeltoe.Discovery.Eureka.IEurekaInstanceConfig.IpAddress
  type: Property
  source:
    remote:
      path: src/Discovery/src/Eureka/IEurekaInstanceConfig.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: IpAddress
    path: ../Steeltoe/src/Discovery/src/Eureka/IEurekaInstanceConfig.cs
    startLine: 130
  assemblies:
  - Steeltoe.Discovery.Eureka
  namespace: Steeltoe.Discovery.Eureka
  summary: "\nGets or sets the IPAdress of the instance. This information is for academic purposes only as the communication\nfrom other instances primarily happen using the information supplied in <xref href=\"Steeltoe.Discovery.Eureka.IEurekaInstanceConfig.GetHostName(System.Boolean)\" data-throw-if-not-resolved=\"false\"></xref>\n"
  example: []
  syntax:
    content: string IpAddress { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Property IpAddress As String
  overload: Steeltoe.Discovery.Eureka.IEurekaInstanceConfig.IpAddress*
  modifiers.csharp:
  - get
  - set
- uid: Steeltoe.Discovery.Eureka.IEurekaInstanceConfig.StatusPageUrlPath
  commentId: P:Steeltoe.Discovery.Eureka.IEurekaInstanceConfig.StatusPageUrlPath
  id: StatusPageUrlPath
  parent: Steeltoe.Discovery.Eureka.IEurekaInstanceConfig
  langs:
  - csharp
  - vb
  name: StatusPageUrlPath
  nameWithType: IEurekaInstanceConfig.StatusPageUrlPath
  fullName: Steeltoe.Discovery.Eureka.IEurekaInstanceConfig.StatusPageUrlPath
  type: Property
  source:
    remote:
      path: src/Discovery/src/Eureka/IEurekaInstanceConfig.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: StatusPageUrlPath
    path: ../Steeltoe/src/Discovery/src/Eureka/IEurekaInstanceConfig.cs
    startLine: 141
  assemblies:
  - Steeltoe.Discovery.Eureka
  namespace: Steeltoe.Discovery.Eureka
  summary: "\nGets or sets the relative status page <em>Path</em> for this instance. The status page URL is then constructed out of the\n<xref href=\"Steeltoe.Discovery.Eureka.IEurekaInstanceConfig.GetHostName(System.Boolean)\" data-throw-if-not-resolved=\"false\"></xref> and the type of communication - secure or unsecure as specified in\n<xref href=\"Steeltoe.Discovery.Eureka.IEurekaInstanceConfig.SecurePort\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"Steeltoe.Discovery.Eureka.IEurekaInstanceConfig.NonSecurePort\" data-throw-if-not-resolved=\"false\"></xref>.\n\nIt is normally used for informational purposes for other services to findabout the status of this instance.\nUsers can provide a simple <pre><code>HTML</code></pre> indicating what is the current status of the instance.\nConfiguration property: eureka:instance:statusPageUrlPath\n"
  example: []
  syntax:
    content: string StatusPageUrlPath { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Property StatusPageUrlPath As String
  overload: Steeltoe.Discovery.Eureka.IEurekaInstanceConfig.StatusPageUrlPath*
  modifiers.csharp:
  - get
  - set
- uid: Steeltoe.Discovery.Eureka.IEurekaInstanceConfig.StatusPageUrl
  commentId: P:Steeltoe.Discovery.Eureka.IEurekaInstanceConfig.StatusPageUrl
  id: StatusPageUrl
  parent: Steeltoe.Discovery.Eureka.IEurekaInstanceConfig
  langs:
  - csharp
  - vb
  name: StatusPageUrl
  nameWithType: IEurekaInstanceConfig.StatusPageUrl
  fullName: Steeltoe.Discovery.Eureka.IEurekaInstanceConfig.StatusPageUrl
  type: Property
  source:
    remote:
      path: src/Discovery/src/Eureka/IEurekaInstanceConfig.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: StatusPageUrl
    path: ../Steeltoe/src/Discovery/src/Eureka/IEurekaInstanceConfig.cs
    startLine: 154
  assemblies:
  - Steeltoe.Discovery.Eureka
  namespace: Steeltoe.Discovery.Eureka
  summary: "\nGets or sets the absolute status page for this instance. The users can provide the StatusPageUrlPath if the status page\nresides in the same instance talking to eureka, else in the cases where the instance is a proxy for some other server,\nusers can provide the full URL. If the full URL is provided it takes precedence.\n\nIt is normally used for informational purposes for other services tofind about the status of this instance.\nUsers can provide a simple<pre><code>HTML</code></pre> indicating what is the current status of the instance.\nThe full URL should follow the format http://${eureka.hostname}:7001/ where the value ${eureka.hostname} is\nreplaced at runtime.\nConfiguration property: eureka:instance:statusPageUrl\n"
  example: []
  syntax:
    content: string StatusPageUrl { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Property StatusPageUrl As String
  overload: Steeltoe.Discovery.Eureka.IEurekaInstanceConfig.StatusPageUrl*
  modifiers.csharp:
  - get
  - set
- uid: Steeltoe.Discovery.Eureka.IEurekaInstanceConfig.HomePageUrlPath
  commentId: P:Steeltoe.Discovery.Eureka.IEurekaInstanceConfig.HomePageUrlPath
  id: HomePageUrlPath
  parent: Steeltoe.Discovery.Eureka.IEurekaInstanceConfig
  langs:
  - csharp
  - vb
  name: HomePageUrlPath
  nameWithType: IEurekaInstanceConfig.HomePageUrlPath
  fullName: Steeltoe.Discovery.Eureka.IEurekaInstanceConfig.HomePageUrlPath
  type: Property
  source:
    remote:
      path: src/Discovery/src/Eureka/IEurekaInstanceConfig.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: HomePageUrlPath
    path: ../Steeltoe/src/Discovery/src/Eureka/IEurekaInstanceConfig.cs
    startLine: 164
  assemblies:
  - Steeltoe.Discovery.Eureka
  namespace: Steeltoe.Discovery.Eureka
  summary: "\nGets or sets gets the relative home page URL <em>Path</em> for this instance.\nThe home page URL is then constructed out of the <xref href=\"Steeltoe.Discovery.Eureka.IEurekaInstanceConfig.GetHostName(System.Boolean)\" data-throw-if-not-resolved=\"false\"></xref> and the type of communication - secure or\nunsecure as specified in <xref href=\"Steeltoe.Discovery.Eureka.IEurekaInstanceConfig.SecurePort\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"Steeltoe.Discovery.Eureka.IEurekaInstanceConfig.NonSecurePort\" data-throw-if-not-resolved=\"false\"></xref>\n\nIt is normally used for informational purposes for other services to use it as a landing page.\nConfiguration property: eureka:instance:homePageUrlPath\n"
  example: []
  syntax:
    content: string HomePageUrlPath { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Property HomePageUrlPath As String
  overload: Steeltoe.Discovery.Eureka.IEurekaInstanceConfig.HomePageUrlPath*
  modifiers.csharp:
  - get
  - set
- uid: Steeltoe.Discovery.Eureka.IEurekaInstanceConfig.HomePageUrl
  commentId: P:Steeltoe.Discovery.Eureka.IEurekaInstanceConfig.HomePageUrl
  id: HomePageUrl
  parent: Steeltoe.Discovery.Eureka.IEurekaInstanceConfig
  langs:
  - csharp
  - vb
  name: HomePageUrl
  nameWithType: IEurekaInstanceConfig.HomePageUrl
  fullName: Steeltoe.Discovery.Eureka.IEurekaInstanceConfig.HomePageUrl
  type: Property
  source:
    remote:
      path: src/Discovery/src/Eureka/IEurekaInstanceConfig.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: HomePageUrl
    path: ../Steeltoe/src/Discovery/src/Eureka/IEurekaInstanceConfig.cs
    startLine: 177
  assemblies:
  - Steeltoe.Discovery.Eureka
  namespace: Steeltoe.Discovery.Eureka
  summary: "\nGets or sets gets the absolute home page URL for this instance. The users can provide the path if the home page resides in the\nsame instance talking to eureka, else in the cases where the instance is a proxy for some other server, users can\nprovide the full URL. If the full URL is provided it takes precedence.\n\nIt is normally used for informational purposes for other services tofind about the status of this instance.\nUsers can provide a simple<pre><code>HTML</code></pre> indicating what is the current status of the instance.\nThe full URL should follow the format http://${eureka.hostname}:7001/ where the value ${eureka.hostname} is\nreplaced at runtime.\nConfiguration property: eureka:instance:homePageUrl\n"
  example: []
  syntax:
    content: string HomePageUrl { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Property HomePageUrl As String
  overload: Steeltoe.Discovery.Eureka.IEurekaInstanceConfig.HomePageUrl*
  modifiers.csharp:
  - get
  - set
- uid: Steeltoe.Discovery.Eureka.IEurekaInstanceConfig.HealthCheckUrlPath
  commentId: P:Steeltoe.Discovery.Eureka.IEurekaInstanceConfig.HealthCheckUrlPath
  id: HealthCheckUrlPath
  parent: Steeltoe.Discovery.Eureka.IEurekaInstanceConfig
  langs:
  - csharp
  - vb
  name: HealthCheckUrlPath
  nameWithType: IEurekaInstanceConfig.HealthCheckUrlPath
  fullName: Steeltoe.Discovery.Eureka.IEurekaInstanceConfig.HealthCheckUrlPath
  type: Property
  source:
    remote:
      path: src/Discovery/src/Eureka/IEurekaInstanceConfig.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: HealthCheckUrlPath
    path: ../Steeltoe/src/Discovery/src/Eureka/IEurekaInstanceConfig.cs
    startLine: 189
  assemblies:
  - Steeltoe.Discovery.Eureka
  namespace: Steeltoe.Discovery.Eureka
  summary: "\nGets or sets gets the relative health check URL <em>Path</em> for this instance. The health check page URL\nis then constructed out of the <xref href=\"Steeltoe.Discovery.Eureka.IEurekaInstanceConfig.GetHostName(System.Boolean)\" data-throw-if-not-resolved=\"false\"></xref> and the type of communication - secure or\nunsecure as specified in <xref href=\"Steeltoe.Discovery.Eureka.IEurekaInstanceConfig.SecurePort\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"Steeltoe.Discovery.Eureka.IEurekaInstanceConfig.NonSecurePort\" data-throw-if-not-resolved=\"false\"></xref>\n\nIt is normally used for making educated decisions based on the health of the instance - for example, it can\nbe used to determine whether to proceed deployments to an entire farm or stop the deployments without\ncausing further damage.\nConfiguration property: eureka:instance:healthCheckUrlPath\n"
  example: []
  syntax:
    content: string HealthCheckUrlPath { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Property HealthCheckUrlPath As String
  overload: Steeltoe.Discovery.Eureka.IEurekaInstanceConfig.HealthCheckUrlPath*
  modifiers.csharp:
  - get
  - set
- uid: Steeltoe.Discovery.Eureka.IEurekaInstanceConfig.HealthCheckUrl
  commentId: P:Steeltoe.Discovery.Eureka.IEurekaInstanceConfig.HealthCheckUrl
  id: HealthCheckUrl
  parent: Steeltoe.Discovery.Eureka.IEurekaInstanceConfig
  langs:
  - csharp
  - vb
  name: HealthCheckUrl
  nameWithType: IEurekaInstanceConfig.HealthCheckUrl
  fullName: Steeltoe.Discovery.Eureka.IEurekaInstanceConfig.HealthCheckUrl
  type: Property
  source:
    remote:
      path: src/Discovery/src/Eureka/IEurekaInstanceConfig.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: HealthCheckUrl
    path: ../Steeltoe/src/Discovery/src/Eureka/IEurekaInstanceConfig.cs
    startLine: 202
  assemblies:
  - Steeltoe.Discovery.Eureka
  namespace: Steeltoe.Discovery.Eureka
  summary: "\nGets or sets gets the absolute health check page URL for this instance. The users can provide the path if the health\ncheck page resides in the same instance talking to eureka, else in the cases where the instance is a proxy\nfor some other server, users can provide the full URL. If the full URL is provided it takes precedence.\n\nIt is normally used for making educated decisions based on the health of the instance - for example, it can\nbe used to determine whether to/ proceed deployments to an entire farm or stop the deployments without\ncausing further damage.  The full URL should follow the format http://${eureka.hostname}:7001/ where the\nvalue ${eureka.hostname} is replaced at runtime.\nConfiguration property: eureka:instance:healthCheckUrl\n"
  example: []
  syntax:
    content: string HealthCheckUrl { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Property HealthCheckUrl As String
  overload: Steeltoe.Discovery.Eureka.IEurekaInstanceConfig.HealthCheckUrl*
  modifiers.csharp:
  - get
  - set
- uid: Steeltoe.Discovery.Eureka.IEurekaInstanceConfig.SecureHealthCheckUrl
  commentId: P:Steeltoe.Discovery.Eureka.IEurekaInstanceConfig.SecureHealthCheckUrl
  id: SecureHealthCheckUrl
  parent: Steeltoe.Discovery.Eureka.IEurekaInstanceConfig
  langs:
  - csharp
  - vb
  name: SecureHealthCheckUrl
  nameWithType: IEurekaInstanceConfig.SecureHealthCheckUrl
  fullName: Steeltoe.Discovery.Eureka.IEurekaInstanceConfig.SecureHealthCheckUrl
  type: Property
  source:
    remote:
      path: src/Discovery/src/Eureka/IEurekaInstanceConfig.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: SecureHealthCheckUrl
    path: ../Steeltoe/src/Discovery/src/Eureka/IEurekaInstanceConfig.cs
    startLine: 215
  assemblies:
  - Steeltoe.Discovery.Eureka
  namespace: Steeltoe.Discovery.Eureka
  summary: "\nGets or sets gets the absolute secure health check page URL for this instance. The users can provide the path if the\nhealth check page resides in the same instance talking to eureka, else in the cases where the instance is a proxy\nfor some other server, users can provide the full URL. If the full URL is provided it takes precedence.\n\nIt is normally used for making educated decisions based on the health of the instance - for example, it can\nbe used to determine whether to/ proceed deployments to an entire farm or stop the deployments without\ncausing further damage.  The full URL should follow the format http://${eureka.hostname}:7001/ where the\nvalue ${eureka.hostname} is replaced at runtime.\nConfiguration property: eureka:instance:secureHealthCheckUrl\n"
  example: []
  syntax:
    content: string SecureHealthCheckUrl { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Property SecureHealthCheckUrl As String
  overload: Steeltoe.Discovery.Eureka.IEurekaInstanceConfig.SecureHealthCheckUrl*
  modifiers.csharp:
  - get
  - set
- uid: Steeltoe.Discovery.Eureka.IEurekaInstanceConfig.DefaultAddressResolutionOrder
  commentId: P:Steeltoe.Discovery.Eureka.IEurekaInstanceConfig.DefaultAddressResolutionOrder
  id: DefaultAddressResolutionOrder
  parent: Steeltoe.Discovery.Eureka.IEurekaInstanceConfig
  langs:
  - csharp
  - vb
  name: DefaultAddressResolutionOrder
  nameWithType: IEurekaInstanceConfig.DefaultAddressResolutionOrder
  fullName: Steeltoe.Discovery.Eureka.IEurekaInstanceConfig.DefaultAddressResolutionOrder
  type: Property
  source:
    remote:
      path: src/Discovery/src/Eureka/IEurekaInstanceConfig.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: DefaultAddressResolutionOrder
    path: ../Steeltoe/src/Discovery/src/Eureka/IEurekaInstanceConfig.cs
    startLine: 227
  assemblies:
  - Steeltoe.Discovery.Eureka
  namespace: Steeltoe.Discovery.Eureka
  summary: "\nGets or sets an instance&apos;s network addresses should be fully expressed in it&apos;s <xref href=\"Steeltoe.Discovery.Eureka.IEurekaInstanceConfig.DataCenterInfo\" data-throw-if-not-resolved=\"false\"></xref>\nFor example for instances in AWS, this will include the publicHostname, publicIp,\nprivateHostname and privateIp, when available. The <xref href=\"Steeltoe.Discovery.Eureka.AppInfo.InstanceInfo\" data-throw-if-not-resolved=\"false\"></xref>\nwill further express a &quot;default address&quot;, which is a field that can be configured by the\nregistering instance to advertise it&apos;s default address. This configuration allowed\nfor the expression of an ordered list of fields that can be used to resolve the default\naddress. The exact field values will depend on the implementation details of the corresponding\nimplementing DataCenterInfo types.\n"
  example: []
  syntax:
    content: IEnumerable<string> DefaultAddressResolutionOrder { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{System.String}
    content.vb: Property DefaultAddressResolutionOrder As IEnumerable(Of String)
  overload: Steeltoe.Discovery.Eureka.IEurekaInstanceConfig.DefaultAddressResolutionOrder*
  modifiers.csharp:
  - get
  - set
- uid: Steeltoe.Discovery.Eureka.IEurekaInstanceConfig.GetHostName(System.Boolean)
  commentId: M:Steeltoe.Discovery.Eureka.IEurekaInstanceConfig.GetHostName(System.Boolean)
  id: GetHostName(System.Boolean)
  parent: Steeltoe.Discovery.Eureka.IEurekaInstanceConfig
  langs:
  - csharp
  - vb
  name: GetHostName(Boolean)
  nameWithType: IEurekaInstanceConfig.GetHostName(Boolean)
  fullName: Steeltoe.Discovery.Eureka.IEurekaInstanceConfig.GetHostName(System.Boolean)
  type: Method
  source:
    remote:
      path: src/Discovery/src/Eureka/IEurekaInstanceConfig.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: GetHostName
    path: ../Steeltoe/src/Discovery/src/Eureka/IEurekaInstanceConfig.cs
    startLine: 235
  assemblies:
  - Steeltoe.Discovery.Eureka
  namespace: Steeltoe.Discovery.Eureka
  summary: "\nGets the hostname associated with this instance.\nThis is the exact name that would be used by other instances to make calls.\n"
  example: []
  syntax:
    content: string GetHostName(bool refresh)
    parameters:
    - id: refresh
      type: System.Boolean
      description: refresh hostname
    return:
      type: System.String
      description: 'hostname '
    content.vb: Function GetHostName(refresh As Boolean) As String
  overload: Steeltoe.Discovery.Eureka.IEurekaInstanceConfig.GetHostName*
- uid: Steeltoe.Discovery.Eureka.IEurekaInstanceConfig.HostName
  commentId: P:Steeltoe.Discovery.Eureka.IEurekaInstanceConfig.HostName
  id: HostName
  parent: Steeltoe.Discovery.Eureka.IEurekaInstanceConfig
  langs:
  - csharp
  - vb
  name: HostName
  nameWithType: IEurekaInstanceConfig.HostName
  fullName: Steeltoe.Discovery.Eureka.IEurekaInstanceConfig.HostName
  type: Property
  source:
    remote:
      path: src/Discovery/src/Eureka/IEurekaInstanceConfig.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: HostName
    path: ../Steeltoe/src/Discovery/src/Eureka/IEurekaInstanceConfig.cs
    startLine: 237
  assemblies:
  - Steeltoe.Discovery.Eureka
  namespace: Steeltoe.Discovery.Eureka
  syntax:
    content: string HostName { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Property HostName As String
  overload: Steeltoe.Discovery.Eureka.IEurekaInstanceConfig.HostName*
  modifiers.csharp:
  - get
  - set
- uid: Steeltoe.Discovery.Eureka.IEurekaInstanceConfig.PreferIpAddress
  commentId: P:Steeltoe.Discovery.Eureka.IEurekaInstanceConfig.PreferIpAddress
  id: PreferIpAddress
  parent: Steeltoe.Discovery.Eureka.IEurekaInstanceConfig
  langs:
  - csharp
  - vb
  name: PreferIpAddress
  nameWithType: IEurekaInstanceConfig.PreferIpAddress
  fullName: Steeltoe.Discovery.Eureka.IEurekaInstanceConfig.PreferIpAddress
  type: Property
  source:
    remote:
      path: src/Discovery/src/Eureka/IEurekaInstanceConfig.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: PreferIpAddress
    path: ../Steeltoe/src/Discovery/src/Eureka/IEurekaInstanceConfig.cs
    startLine: 239
  assemblies:
  - Steeltoe.Discovery.Eureka
  namespace: Steeltoe.Discovery.Eureka
  syntax:
    content: bool PreferIpAddress { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Property PreferIpAddress As Boolean
  overload: Steeltoe.Discovery.Eureka.IEurekaInstanceConfig.PreferIpAddress*
  modifiers.csharp:
  - get
  - set
references:
- uid: Steeltoe.Discovery.Eureka
  commentId: N:Steeltoe.Discovery.Eureka
  name: Steeltoe.Discovery.Eureka
  nameWithType: Steeltoe.Discovery.Eureka
  fullName: Steeltoe.Discovery.Eureka
- uid: Steeltoe.Discovery.Eureka.IEurekaInstanceConfig.InstanceId*
  commentId: Overload:Steeltoe.Discovery.Eureka.IEurekaInstanceConfig.InstanceId
  name: InstanceId
  nameWithType: IEurekaInstanceConfig.InstanceId
  fullName: Steeltoe.Discovery.Eureka.IEurekaInstanceConfig.InstanceId
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Steeltoe.Discovery.Eureka.IEurekaInstanceConfig.AppName*
  commentId: Overload:Steeltoe.Discovery.Eureka.IEurekaInstanceConfig.AppName
  name: AppName
  nameWithType: IEurekaInstanceConfig.AppName
  fullName: Steeltoe.Discovery.Eureka.IEurekaInstanceConfig.AppName
- uid: Steeltoe.Discovery.Eureka.IEurekaInstanceConfig.AppGroupName*
  commentId: Overload:Steeltoe.Discovery.Eureka.IEurekaInstanceConfig.AppGroupName
  name: AppGroupName
  nameWithType: IEurekaInstanceConfig.AppGroupName
  fullName: Steeltoe.Discovery.Eureka.IEurekaInstanceConfig.AppGroupName
- uid: Steeltoe.Discovery.Eureka.IEurekaInstanceConfig.IsInstanceEnabledOnInit*
  commentId: Overload:Steeltoe.Discovery.Eureka.IEurekaInstanceConfig.IsInstanceEnabledOnInit
  name: IsInstanceEnabledOnInit
  nameWithType: IEurekaInstanceConfig.IsInstanceEnabledOnInit
  fullName: Steeltoe.Discovery.Eureka.IEurekaInstanceConfig.IsInstanceEnabledOnInit
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Steeltoe.Discovery.Eureka.IEurekaInstanceConfig.NonSecurePort*
  commentId: Overload:Steeltoe.Discovery.Eureka.IEurekaInstanceConfig.NonSecurePort
  name: NonSecurePort
  nameWithType: IEurekaInstanceConfig.NonSecurePort
  fullName: Steeltoe.Discovery.Eureka.IEurekaInstanceConfig.NonSecurePort
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Steeltoe.Discovery.Eureka.IEurekaInstanceConfig.SecurePort*
  commentId: Overload:Steeltoe.Discovery.Eureka.IEurekaInstanceConfig.SecurePort
  name: SecurePort
  nameWithType: IEurekaInstanceConfig.SecurePort
  fullName: Steeltoe.Discovery.Eureka.IEurekaInstanceConfig.SecurePort
- uid: Steeltoe.Discovery.Eureka.IEurekaInstanceConfig.IsNonSecurePortEnabled*
  commentId: Overload:Steeltoe.Discovery.Eureka.IEurekaInstanceConfig.IsNonSecurePortEnabled
  name: IsNonSecurePortEnabled
  nameWithType: IEurekaInstanceConfig.IsNonSecurePortEnabled
  fullName: Steeltoe.Discovery.Eureka.IEurekaInstanceConfig.IsNonSecurePortEnabled
- uid: Steeltoe.Discovery.Eureka.IEurekaInstanceConfig.SecurePortEnabled*
  commentId: Overload:Steeltoe.Discovery.Eureka.IEurekaInstanceConfig.SecurePortEnabled
  name: SecurePortEnabled
  nameWithType: IEurekaInstanceConfig.SecurePortEnabled
  fullName: Steeltoe.Discovery.Eureka.IEurekaInstanceConfig.SecurePortEnabled
- uid: Steeltoe.Discovery.Eureka.IEurekaInstanceConfig.LeaseExpirationDurationInSeconds
  commentId: P:Steeltoe.Discovery.Eureka.IEurekaInstanceConfig.LeaseExpirationDurationInSeconds
  parent: Steeltoe.Discovery.Eureka.IEurekaInstanceConfig
  name: LeaseExpirationDurationInSeconds
  nameWithType: IEurekaInstanceConfig.LeaseExpirationDurationInSeconds
  fullName: Steeltoe.Discovery.Eureka.IEurekaInstanceConfig.LeaseExpirationDurationInSeconds
- uid: Steeltoe.Discovery.Eureka.IEurekaInstanceConfig.LeaseRenewalIntervalInSeconds*
  commentId: Overload:Steeltoe.Discovery.Eureka.IEurekaInstanceConfig.LeaseRenewalIntervalInSeconds
  name: LeaseRenewalIntervalInSeconds
  nameWithType: IEurekaInstanceConfig.LeaseRenewalIntervalInSeconds
  fullName: Steeltoe.Discovery.Eureka.IEurekaInstanceConfig.LeaseRenewalIntervalInSeconds
- uid: Steeltoe.Discovery.Eureka.IEurekaInstanceConfig
  commentId: T:Steeltoe.Discovery.Eureka.IEurekaInstanceConfig
  parent: Steeltoe.Discovery.Eureka
  name: IEurekaInstanceConfig
  nameWithType: IEurekaInstanceConfig
  fullName: Steeltoe.Discovery.Eureka.IEurekaInstanceConfig
- uid: Steeltoe.Discovery.Eureka.IEurekaInstanceConfig.LeaseRenewalIntervalInSeconds
  commentId: P:Steeltoe.Discovery.Eureka.IEurekaInstanceConfig.LeaseRenewalIntervalInSeconds
  parent: Steeltoe.Discovery.Eureka.IEurekaInstanceConfig
  name: LeaseRenewalIntervalInSeconds
  nameWithType: IEurekaInstanceConfig.LeaseRenewalIntervalInSeconds
  fullName: Steeltoe.Discovery.Eureka.IEurekaInstanceConfig.LeaseRenewalIntervalInSeconds
- uid: Steeltoe.Discovery.Eureka.IEurekaInstanceConfig.LeaseExpirationDurationInSeconds*
  commentId: Overload:Steeltoe.Discovery.Eureka.IEurekaInstanceConfig.LeaseExpirationDurationInSeconds
  name: LeaseExpirationDurationInSeconds
  nameWithType: IEurekaInstanceConfig.LeaseExpirationDurationInSeconds
  fullName: Steeltoe.Discovery.Eureka.IEurekaInstanceConfig.LeaseExpirationDurationInSeconds
- uid: Steeltoe.Discovery.Eureka.IEurekaInstanceConfig.VirtualHostName*
  commentId: Overload:Steeltoe.Discovery.Eureka.IEurekaInstanceConfig.VirtualHostName
  name: VirtualHostName
  nameWithType: IEurekaInstanceConfig.VirtualHostName
  fullName: Steeltoe.Discovery.Eureka.IEurekaInstanceConfig.VirtualHostName
- uid: Steeltoe.Discovery.Eureka.IEurekaInstanceConfig.SecureVirtualHostName*
  commentId: Overload:Steeltoe.Discovery.Eureka.IEurekaInstanceConfig.SecureVirtualHostName
  name: SecureVirtualHostName
  nameWithType: IEurekaInstanceConfig.SecureVirtualHostName
  fullName: Steeltoe.Discovery.Eureka.IEurekaInstanceConfig.SecureVirtualHostName
- uid: Steeltoe.Discovery.Eureka.IEurekaInstanceConfig.ASGName*
  commentId: Overload:Steeltoe.Discovery.Eureka.IEurekaInstanceConfig.ASGName
  name: ASGName
  nameWithType: IEurekaInstanceConfig.ASGName
  fullName: Steeltoe.Discovery.Eureka.IEurekaInstanceConfig.ASGName
- uid: Steeltoe.Discovery.Eureka.IEurekaInstanceConfig.MetadataMap*
  commentId: Overload:Steeltoe.Discovery.Eureka.IEurekaInstanceConfig.MetadataMap
  name: MetadataMap
  nameWithType: IEurekaInstanceConfig.MetadataMap
  fullName: Steeltoe.Discovery.Eureka.IEurekaInstanceConfig.MetadataMap
- uid: System.Collections.Generic.IDictionary{System.String,System.String}
  commentId: T:System.Collections.Generic.IDictionary{System.String,System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IDictionary`2
  name: IDictionary<String, String>
  nameWithType: IDictionary<String, String>
  fullName: System.Collections.Generic.IDictionary<System.String, System.String>
  nameWithType.vb: IDictionary(Of String, String)
  fullName.vb: System.Collections.Generic.IDictionary(Of System.String, System.String)
  name.vb: IDictionary(Of String, String)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IDictionary`2
  commentId: T:System.Collections.Generic.IDictionary`2
  isExternal: true
  name: IDictionary<TKey, TValue>
  nameWithType: IDictionary<TKey, TValue>
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>
  nameWithType.vb: IDictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.IDictionary(Of TKey, TValue)
  name.vb: IDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Steeltoe.Discovery.Eureka.IEurekaInstanceConfig.DataCenterInfo*
  commentId: Overload:Steeltoe.Discovery.Eureka.IEurekaInstanceConfig.DataCenterInfo
  name: DataCenterInfo
  nameWithType: IEurekaInstanceConfig.DataCenterInfo
  fullName: Steeltoe.Discovery.Eureka.IEurekaInstanceConfig.DataCenterInfo
- uid: Steeltoe.Discovery.Eureka.AppInfo.IDataCenterInfo
  commentId: T:Steeltoe.Discovery.Eureka.AppInfo.IDataCenterInfo
  parent: Steeltoe.Discovery.Eureka.AppInfo
  name: IDataCenterInfo
  nameWithType: IDataCenterInfo
  fullName: Steeltoe.Discovery.Eureka.AppInfo.IDataCenterInfo
- uid: Steeltoe.Discovery.Eureka.AppInfo
  commentId: N:Steeltoe.Discovery.Eureka.AppInfo
  name: Steeltoe.Discovery.Eureka.AppInfo
  nameWithType: Steeltoe.Discovery.Eureka.AppInfo
  fullName: Steeltoe.Discovery.Eureka.AppInfo
- uid: Steeltoe.Discovery.Eureka.IEurekaInstanceConfig.GetHostName(System.Boolean)
  commentId: M:Steeltoe.Discovery.Eureka.IEurekaInstanceConfig.GetHostName(System.Boolean)
  parent: Steeltoe.Discovery.Eureka.IEurekaInstanceConfig
  isExternal: true
  name: GetHostName(Boolean)
  nameWithType: IEurekaInstanceConfig.GetHostName(Boolean)
  fullName: Steeltoe.Discovery.Eureka.IEurekaInstanceConfig.GetHostName(System.Boolean)
  spec.csharp:
  - uid: Steeltoe.Discovery.Eureka.IEurekaInstanceConfig.GetHostName(System.Boolean)
    name: GetHostName
    nameWithType: IEurekaInstanceConfig.GetHostName
    fullName: Steeltoe.Discovery.Eureka.IEurekaInstanceConfig.GetHostName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Discovery.Eureka.IEurekaInstanceConfig.GetHostName(System.Boolean)
    name: GetHostName
    nameWithType: IEurekaInstanceConfig.GetHostName
    fullName: Steeltoe.Discovery.Eureka.IEurekaInstanceConfig.GetHostName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Discovery.Eureka.IEurekaInstanceConfig.IpAddress*
  commentId: Overload:Steeltoe.Discovery.Eureka.IEurekaInstanceConfig.IpAddress
  name: IpAddress
  nameWithType: IEurekaInstanceConfig.IpAddress
  fullName: Steeltoe.Discovery.Eureka.IEurekaInstanceConfig.IpAddress
- uid: Steeltoe.Discovery.Eureka.IEurekaInstanceConfig.SecurePort
  commentId: P:Steeltoe.Discovery.Eureka.IEurekaInstanceConfig.SecurePort
  parent: Steeltoe.Discovery.Eureka.IEurekaInstanceConfig
  name: SecurePort
  nameWithType: IEurekaInstanceConfig.SecurePort
  fullName: Steeltoe.Discovery.Eureka.IEurekaInstanceConfig.SecurePort
- uid: Steeltoe.Discovery.Eureka.IEurekaInstanceConfig.NonSecurePort
  commentId: P:Steeltoe.Discovery.Eureka.IEurekaInstanceConfig.NonSecurePort
  parent: Steeltoe.Discovery.Eureka.IEurekaInstanceConfig
  name: NonSecurePort
  nameWithType: IEurekaInstanceConfig.NonSecurePort
  fullName: Steeltoe.Discovery.Eureka.IEurekaInstanceConfig.NonSecurePort
- uid: Steeltoe.Discovery.Eureka.IEurekaInstanceConfig.StatusPageUrlPath*
  commentId: Overload:Steeltoe.Discovery.Eureka.IEurekaInstanceConfig.StatusPageUrlPath
  name: StatusPageUrlPath
  nameWithType: IEurekaInstanceConfig.StatusPageUrlPath
  fullName: Steeltoe.Discovery.Eureka.IEurekaInstanceConfig.StatusPageUrlPath
- uid: Steeltoe.Discovery.Eureka.IEurekaInstanceConfig.StatusPageUrl*
  commentId: Overload:Steeltoe.Discovery.Eureka.IEurekaInstanceConfig.StatusPageUrl
  name: StatusPageUrl
  nameWithType: IEurekaInstanceConfig.StatusPageUrl
  fullName: Steeltoe.Discovery.Eureka.IEurekaInstanceConfig.StatusPageUrl
- uid: Steeltoe.Discovery.Eureka.IEurekaInstanceConfig.HomePageUrlPath*
  commentId: Overload:Steeltoe.Discovery.Eureka.IEurekaInstanceConfig.HomePageUrlPath
  name: HomePageUrlPath
  nameWithType: IEurekaInstanceConfig.HomePageUrlPath
  fullName: Steeltoe.Discovery.Eureka.IEurekaInstanceConfig.HomePageUrlPath
- uid: Steeltoe.Discovery.Eureka.IEurekaInstanceConfig.HomePageUrl*
  commentId: Overload:Steeltoe.Discovery.Eureka.IEurekaInstanceConfig.HomePageUrl
  name: HomePageUrl
  nameWithType: IEurekaInstanceConfig.HomePageUrl
  fullName: Steeltoe.Discovery.Eureka.IEurekaInstanceConfig.HomePageUrl
- uid: Steeltoe.Discovery.Eureka.IEurekaInstanceConfig.HealthCheckUrlPath*
  commentId: Overload:Steeltoe.Discovery.Eureka.IEurekaInstanceConfig.HealthCheckUrlPath
  name: HealthCheckUrlPath
  nameWithType: IEurekaInstanceConfig.HealthCheckUrlPath
  fullName: Steeltoe.Discovery.Eureka.IEurekaInstanceConfig.HealthCheckUrlPath
- uid: Steeltoe.Discovery.Eureka.IEurekaInstanceConfig.HealthCheckUrl*
  commentId: Overload:Steeltoe.Discovery.Eureka.IEurekaInstanceConfig.HealthCheckUrl
  name: HealthCheckUrl
  nameWithType: IEurekaInstanceConfig.HealthCheckUrl
  fullName: Steeltoe.Discovery.Eureka.IEurekaInstanceConfig.HealthCheckUrl
- uid: Steeltoe.Discovery.Eureka.IEurekaInstanceConfig.SecureHealthCheckUrl*
  commentId: Overload:Steeltoe.Discovery.Eureka.IEurekaInstanceConfig.SecureHealthCheckUrl
  name: SecureHealthCheckUrl
  nameWithType: IEurekaInstanceConfig.SecureHealthCheckUrl
  fullName: Steeltoe.Discovery.Eureka.IEurekaInstanceConfig.SecureHealthCheckUrl
- uid: Steeltoe.Discovery.Eureka.IEurekaInstanceConfig.DataCenterInfo
  commentId: P:Steeltoe.Discovery.Eureka.IEurekaInstanceConfig.DataCenterInfo
  parent: Steeltoe.Discovery.Eureka.IEurekaInstanceConfig
  name: DataCenterInfo
  nameWithType: IEurekaInstanceConfig.DataCenterInfo
  fullName: Steeltoe.Discovery.Eureka.IEurekaInstanceConfig.DataCenterInfo
- uid: Steeltoe.Discovery.Eureka.AppInfo.InstanceInfo
  commentId: T:Steeltoe.Discovery.Eureka.AppInfo.InstanceInfo
  parent: Steeltoe.Discovery.Eureka.AppInfo
  name: InstanceInfo
  nameWithType: InstanceInfo
  fullName: Steeltoe.Discovery.Eureka.AppInfo.InstanceInfo
- uid: Steeltoe.Discovery.Eureka.IEurekaInstanceConfig.DefaultAddressResolutionOrder*
  commentId: Overload:Steeltoe.Discovery.Eureka.IEurekaInstanceConfig.DefaultAddressResolutionOrder
  name: DefaultAddressResolutionOrder
  nameWithType: IEurekaInstanceConfig.DefaultAddressResolutionOrder
  fullName: Steeltoe.Discovery.Eureka.IEurekaInstanceConfig.DefaultAddressResolutionOrder
- uid: System.Collections.Generic.IEnumerable{System.String}
  commentId: T:System.Collections.Generic.IEnumerable{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<String>
  nameWithType: IEnumerable<String>
  fullName: System.Collections.Generic.IEnumerable<System.String>
  nameWithType.vb: IEnumerable(Of String)
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.String)
  name.vb: IEnumerable(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Discovery.Eureka.IEurekaInstanceConfig.GetHostName*
  commentId: Overload:Steeltoe.Discovery.Eureka.IEurekaInstanceConfig.GetHostName
  name: GetHostName
  nameWithType: IEurekaInstanceConfig.GetHostName
  fullName: Steeltoe.Discovery.Eureka.IEurekaInstanceConfig.GetHostName
- uid: Steeltoe.Discovery.Eureka.IEurekaInstanceConfig.HostName*
  commentId: Overload:Steeltoe.Discovery.Eureka.IEurekaInstanceConfig.HostName
  name: HostName
  nameWithType: IEurekaInstanceConfig.HostName
  fullName: Steeltoe.Discovery.Eureka.IEurekaInstanceConfig.HostName
- uid: Steeltoe.Discovery.Eureka.IEurekaInstanceConfig.PreferIpAddress*
  commentId: Overload:Steeltoe.Discovery.Eureka.IEurekaInstanceConfig.PreferIpAddress
  name: PreferIpAddress
  nameWithType: IEurekaInstanceConfig.PreferIpAddress
  fullName: Steeltoe.Discovery.Eureka.IEurekaInstanceConfig.PreferIpAddress
