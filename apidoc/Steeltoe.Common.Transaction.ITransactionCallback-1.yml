### YamlMime:ManagedReference
items:
- uid: Steeltoe.Common.Transaction.ITransactionCallback`1
  commentId: T:Steeltoe.Common.Transaction.ITransactionCallback`1
  id: ITransactionCallback`1
  parent: Steeltoe.Common.Transaction
  children:
  - Steeltoe.Common.Transaction.ITransactionCallback`1.DoInTransaction(Steeltoe.Common.Transaction.ITransactionStatus)
  langs:
  - csharp
  - vb
  name: ITransactionCallback<T>
  nameWithType: ITransactionCallback<T>
  fullName: Steeltoe.Common.Transaction.ITransactionCallback<T>
  type: Interface
  source:
    remote:
      path: src/Common/src/Abstractions/Transaction/ITransactionCallback.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: ITransactionCallback
    path: ../Steeltoe/src/Common/src/Abstractions/Transaction/ITransactionCallback.cs
    startLine: 6
  assemblies:
  - Steeltoe.Common.Abstractions
  namespace: Steeltoe.Common.Transaction
  syntax:
    content: public interface ITransactionCallback<out T>
    typeParameters:
    - id: T
    content.vb: Public Interface ITransactionCallback(Of Out T)
  nameWithType.vb: ITransactionCallback(Of T)
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
  fullName.vb: Steeltoe.Common.Transaction.ITransactionCallback(Of T)
  name.vb: ITransactionCallback(Of T)
- uid: Steeltoe.Common.Transaction.ITransactionCallback`1.DoInTransaction(Steeltoe.Common.Transaction.ITransactionStatus)
  commentId: M:Steeltoe.Common.Transaction.ITransactionCallback`1.DoInTransaction(Steeltoe.Common.Transaction.ITransactionStatus)
  id: DoInTransaction(Steeltoe.Common.Transaction.ITransactionStatus)
  parent: Steeltoe.Common.Transaction.ITransactionCallback`1
  langs:
  - csharp
  - vb
  name: DoInTransaction(ITransactionStatus)
  nameWithType: ITransactionCallback<T>.DoInTransaction(ITransactionStatus)
  fullName: Steeltoe.Common.Transaction.ITransactionCallback<T>.DoInTransaction(Steeltoe.Common.Transaction.ITransactionStatus)
  type: Method
  source:
    remote:
      path: src/Common/src/Abstractions/Transaction/ITransactionCallback.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: DoInTransaction
    path: ../Steeltoe/src/Common/src/Abstractions/Transaction/ITransactionCallback.cs
    startLine: 8
  assemblies:
  - Steeltoe.Common.Abstractions
  namespace: Steeltoe.Common.Transaction
  syntax:
    content: T DoInTransaction(ITransactionStatus status)
    parameters:
    - id: status
      type: Steeltoe.Common.Transaction.ITransactionStatus
    return:
      type: '{T}'
    content.vb: Function DoInTransaction(status As ITransactionStatus) As T
  overload: Steeltoe.Common.Transaction.ITransactionCallback`1.DoInTransaction*
  nameWithType.vb: ITransactionCallback(Of T).DoInTransaction(ITransactionStatus)
  fullName.vb: Steeltoe.Common.Transaction.ITransactionCallback(Of T).DoInTransaction(Steeltoe.Common.Transaction.ITransactionStatus)
references:
- uid: Steeltoe.Common.Transaction
  commentId: N:Steeltoe.Common.Transaction
  name: Steeltoe.Common.Transaction
  nameWithType: Steeltoe.Common.Transaction
  fullName: Steeltoe.Common.Transaction
- uid: Steeltoe.Common.Transaction.ITransactionCallback`1.DoInTransaction*
  commentId: Overload:Steeltoe.Common.Transaction.ITransactionCallback`1.DoInTransaction
  name: DoInTransaction
  nameWithType: ITransactionCallback<T>.DoInTransaction
  fullName: Steeltoe.Common.Transaction.ITransactionCallback<T>.DoInTransaction
  nameWithType.vb: ITransactionCallback(Of T).DoInTransaction
  fullName.vb: Steeltoe.Common.Transaction.ITransactionCallback(Of T).DoInTransaction
- uid: Steeltoe.Common.Transaction.ITransactionStatus
  commentId: T:Steeltoe.Common.Transaction.ITransactionStatus
  parent: Steeltoe.Common.Transaction
  name: ITransactionStatus
  nameWithType: ITransactionStatus
  fullName: Steeltoe.Common.Transaction.ITransactionStatus
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  name: T
  nameWithType: T
  fullName: T
