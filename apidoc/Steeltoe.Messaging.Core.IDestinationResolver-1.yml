### YamlMime:ManagedReference
items:
- uid: Steeltoe.Messaging.Core.IDestinationResolver`1
  commentId: T:Steeltoe.Messaging.Core.IDestinationResolver`1
  id: IDestinationResolver`1
  parent: Steeltoe.Messaging.Core
  children:
  - Steeltoe.Messaging.Core.IDestinationResolver`1.ResolveDestination(System.String)
  langs:
  - csharp
  - vb
  name: IDestinationResolver<T>
  nameWithType: IDestinationResolver<T>
  fullName: Steeltoe.Messaging.Core.IDestinationResolver<T>
  type: Interface
  source:
    remote:
      path: src/Messaging/src/Abstractions/Core/IDestinationResolver.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: IDestinationResolver
    path: ../Steeltoe/src/Messaging/src/Abstractions/Core/IDestinationResolver.cs
    startLine: 23
  assemblies:
  - Steeltoe.Messaging.Abstractions
  namespace: Steeltoe.Messaging.Core
  summary: "\nA typed strategy for resolving a string name to a destination\n"
  example: []
  syntax:
    content: 'public interface IDestinationResolver<out T> : IDestinationResolver'
    typeParameters:
    - id: T
      description: the type of destinations this resolver returns
    content.vb: >-
      Public Interface IDestinationResolver(Of Out T)

          Inherits IDestinationResolver
  nameWithType.vb: IDestinationResolver(Of T)
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
  fullName.vb: Steeltoe.Messaging.Core.IDestinationResolver(Of T)
  name.vb: IDestinationResolver(Of T)
- uid: Steeltoe.Messaging.Core.IDestinationResolver`1.ResolveDestination(System.String)
  commentId: M:Steeltoe.Messaging.Core.IDestinationResolver`1.ResolveDestination(System.String)
  id: ResolveDestination(System.String)
  parent: Steeltoe.Messaging.Core.IDestinationResolver`1
  langs:
  - csharp
  - vb
  name: ResolveDestination(String)
  nameWithType: IDestinationResolver<T>.ResolveDestination(String)
  fullName: Steeltoe.Messaging.Core.IDestinationResolver<T>.ResolveDestination(System.String)
  type: Method
  source:
    remote:
      path: src/Messaging/src/Abstractions/Core/IDestinationResolver.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: ResolveDestination
    path: ../Steeltoe/src/Messaging/src/Abstractions/Core/IDestinationResolver.cs
    startLine: 30
  assemblies:
  - Steeltoe.Messaging.Abstractions
  namespace: Steeltoe.Messaging.Core
  summary: "\nResolve the name to a destination\n"
  example: []
  syntax:
    content: T ResolveDestination(string name)
    parameters:
    - id: name
      type: System.String
      description: the name to resolve
    return:
      type: '{T}'
      description: the destination if it exists
    content.vb: Function ResolveDestination(name As String) As T
  overload: Steeltoe.Messaging.Core.IDestinationResolver`1.ResolveDestination*
  nameWithType.vb: IDestinationResolver(Of T).ResolveDestination(String)
  fullName.vb: Steeltoe.Messaging.Core.IDestinationResolver(Of T).ResolveDestination(System.String)
references:
- uid: Steeltoe.Messaging.Core
  commentId: N:Steeltoe.Messaging.Core
  name: Steeltoe.Messaging.Core
  nameWithType: Steeltoe.Messaging.Core
  fullName: Steeltoe.Messaging.Core
- uid: Steeltoe.Messaging.Core.IDestinationResolver`1.ResolveDestination*
  commentId: Overload:Steeltoe.Messaging.Core.IDestinationResolver`1.ResolveDestination
  name: ResolveDestination
  nameWithType: IDestinationResolver<T>.ResolveDestination
  fullName: Steeltoe.Messaging.Core.IDestinationResolver<T>.ResolveDestination
  nameWithType.vb: IDestinationResolver(Of T).ResolveDestination
  fullName.vb: Steeltoe.Messaging.Core.IDestinationResolver(Of T).ResolveDestination
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: T
  name: T
  nameWithType: T
  fullName: T
