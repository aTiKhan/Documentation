### YamlMime:ManagedReference
items:
- uid: Steeltoe.Messaging.Handler.Invocation.AbstractMethodMessageHandler`1.Match
  commentId: T:Steeltoe.Messaging.Handler.Invocation.AbstractMethodMessageHandler`1.Match
  id: AbstractMethodMessageHandler`1.Match
  parent: Steeltoe.Messaging.Handler.Invocation
  children:
  - Steeltoe.Messaging.Handler.Invocation.AbstractMethodMessageHandler`1.Match.#ctor(`0,Steeltoe.Messaging.Handler.HandlerMethod)
  - Steeltoe.Messaging.Handler.Invocation.AbstractMethodMessageHandler`1.Match.HandlerMethod
  - Steeltoe.Messaging.Handler.Invocation.AbstractMethodMessageHandler`1.Match.Mapping
  - Steeltoe.Messaging.Handler.Invocation.AbstractMethodMessageHandler`1.Match.ToString
  langs:
  - csharp
  - vb
  name: AbstractMethodMessageHandler<T>.Match
  nameWithType: AbstractMethodMessageHandler<T>.Match
  fullName: Steeltoe.Messaging.Handler.Invocation.AbstractMethodMessageHandler<T>.Match
  type: Class
  source:
    remote:
      path: src/Messaging/src/MessagingBase/Handler/Invocation/AbstractMethodMessageHandler.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Match
    path: ../Steeltoe/src/Messaging/src/MessagingBase/Handler/Invocation/AbstractMethodMessageHandler.cs
    startLine: 457
  assemblies:
  - Steeltoe.Messaging.MessagingBase
  namespace: Steeltoe.Messaging.Handler.Invocation
  syntax:
    content: protected class Match
    content.vb: Protected Class Match
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  nameWithType.vb: AbstractMethodMessageHandler(Of T).Match
  modifiers.csharp:
  - protected
  - class
  modifiers.vb:
  - Protected
  - Class
  fullName.vb: Steeltoe.Messaging.Handler.Invocation.AbstractMethodMessageHandler(Of T).Match
  name.vb: AbstractMethodMessageHandler(Of T).Match
- uid: Steeltoe.Messaging.Handler.Invocation.AbstractMethodMessageHandler`1.Match.Mapping
  commentId: F:Steeltoe.Messaging.Handler.Invocation.AbstractMethodMessageHandler`1.Match.Mapping
  id: Mapping
  parent: Steeltoe.Messaging.Handler.Invocation.AbstractMethodMessageHandler`1.Match
  langs:
  - csharp
  - vb
  name: Mapping
  nameWithType: AbstractMethodMessageHandler<T>.Match.Mapping
  fullName: Steeltoe.Messaging.Handler.Invocation.AbstractMethodMessageHandler<T>.Match.Mapping
  type: Field
  source:
    remote:
      path: src/Messaging/src/MessagingBase/Handler/Invocation/AbstractMethodMessageHandler.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Mapping
    path: ../Steeltoe/src/Messaging/src/MessagingBase/Handler/Invocation/AbstractMethodMessageHandler.cs
    startLine: 459
  assemblies:
  - Steeltoe.Messaging.MessagingBase
  namespace: Steeltoe.Messaging.Handler.Invocation
  syntax:
    content: public readonly T Mapping
    return:
      type: '{T}'
    content.vb: Public ReadOnly Mapping As T
  nameWithType.vb: AbstractMethodMessageHandler(Of T).Match.Mapping
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: Steeltoe.Messaging.Handler.Invocation.AbstractMethodMessageHandler(Of T).Match.Mapping
- uid: Steeltoe.Messaging.Handler.Invocation.AbstractMethodMessageHandler`1.Match.HandlerMethod
  commentId: F:Steeltoe.Messaging.Handler.Invocation.AbstractMethodMessageHandler`1.Match.HandlerMethod
  id: HandlerMethod
  parent: Steeltoe.Messaging.Handler.Invocation.AbstractMethodMessageHandler`1.Match
  langs:
  - csharp
  - vb
  name: HandlerMethod
  nameWithType: AbstractMethodMessageHandler<T>.Match.HandlerMethod
  fullName: Steeltoe.Messaging.Handler.Invocation.AbstractMethodMessageHandler<T>.Match.HandlerMethod
  type: Field
  source:
    remote:
      path: src/Messaging/src/MessagingBase/Handler/Invocation/AbstractMethodMessageHandler.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: HandlerMethod
    path: ../Steeltoe/src/Messaging/src/MessagingBase/Handler/Invocation/AbstractMethodMessageHandler.cs
    startLine: 461
  assemblies:
  - Steeltoe.Messaging.MessagingBase
  namespace: Steeltoe.Messaging.Handler.Invocation
  syntax:
    content: public readonly HandlerMethod HandlerMethod
    return:
      type: Steeltoe.Messaging.Handler.HandlerMethod
    content.vb: Public ReadOnly HandlerMethod As HandlerMethod
  nameWithType.vb: AbstractMethodMessageHandler(Of T).Match.HandlerMethod
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: Steeltoe.Messaging.Handler.Invocation.AbstractMethodMessageHandler(Of T).Match.HandlerMethod
- uid: Steeltoe.Messaging.Handler.Invocation.AbstractMethodMessageHandler`1.Match.#ctor(`0,Steeltoe.Messaging.Handler.HandlerMethod)
  commentId: M:Steeltoe.Messaging.Handler.Invocation.AbstractMethodMessageHandler`1.Match.#ctor(`0,Steeltoe.Messaging.Handler.HandlerMethod)
  id: '#ctor(`0,Steeltoe.Messaging.Handler.HandlerMethod)'
  parent: Steeltoe.Messaging.Handler.Invocation.AbstractMethodMessageHandler`1.Match
  langs:
  - csharp
  - vb
  name: Match(T, HandlerMethod)
  nameWithType: AbstractMethodMessageHandler<T>.Match.Match(T, HandlerMethod)
  fullName: Steeltoe.Messaging.Handler.Invocation.AbstractMethodMessageHandler<T>.Match.Match(T, Steeltoe.Messaging.Handler.HandlerMethod)
  type: Constructor
  source:
    remote:
      path: src/Messaging/src/MessagingBase/Handler/Invocation/AbstractMethodMessageHandler.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: .ctor
    path: ../Steeltoe/src/Messaging/src/MessagingBase/Handler/Invocation/AbstractMethodMessageHandler.cs
    startLine: 463
  assemblies:
  - Steeltoe.Messaging.MessagingBase
  namespace: Steeltoe.Messaging.Handler.Invocation
  syntax:
    content: public Match(T mapping, HandlerMethod handlerMethod)
    parameters:
    - id: mapping
      type: '{T}'
    - id: handlerMethod
      type: Steeltoe.Messaging.Handler.HandlerMethod
    content.vb: Public Sub New(mapping As T, handlerMethod As HandlerMethod)
  overload: Steeltoe.Messaging.Handler.Invocation.AbstractMethodMessageHandler`1.Match.#ctor*
  nameWithType.vb: AbstractMethodMessageHandler(Of T).Match.Match(T, HandlerMethod)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Steeltoe.Messaging.Handler.Invocation.AbstractMethodMessageHandler(Of T).Match.Match(T, Steeltoe.Messaging.Handler.HandlerMethod)
- uid: Steeltoe.Messaging.Handler.Invocation.AbstractMethodMessageHandler`1.Match.ToString
  commentId: M:Steeltoe.Messaging.Handler.Invocation.AbstractMethodMessageHandler`1.Match.ToString
  id: ToString
  parent: Steeltoe.Messaging.Handler.Invocation.AbstractMethodMessageHandler`1.Match
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: AbstractMethodMessageHandler<T>.Match.ToString()
  fullName: Steeltoe.Messaging.Handler.Invocation.AbstractMethodMessageHandler<T>.Match.ToString()
  type: Method
  source:
    remote:
      path: src/Messaging/src/MessagingBase/Handler/Invocation/AbstractMethodMessageHandler.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: ToString
    path: ../Steeltoe/src/Messaging/src/MessagingBase/Handler/Invocation/AbstractMethodMessageHandler.cs
    startLine: 469
  assemblies:
  - Steeltoe.Messaging.MessagingBase
  namespace: Steeltoe.Messaging.Handler.Invocation
  syntax:
    content: public override string ToString()
    return:
      type: System.String
    content.vb: Public Overrides Function ToString As String
  overridden: System.Object.ToString
  overload: Steeltoe.Messaging.Handler.Invocation.AbstractMethodMessageHandler`1.Match.ToString*
  nameWithType.vb: AbstractMethodMessageHandler(Of T).Match.ToString()
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: Steeltoe.Messaging.Handler.Invocation.AbstractMethodMessageHandler(Of T).Match.ToString()
references:
- uid: Steeltoe.Messaging.Handler.Invocation
  commentId: N:Steeltoe.Messaging.Handler.Invocation
  name: Steeltoe.Messaging.Handler.Invocation
  nameWithType: Steeltoe.Messaging.Handler.Invocation
  fullName: Steeltoe.Messaging.Handler.Invocation
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: Steeltoe.Messaging.Handler.HandlerMethod
  commentId: T:Steeltoe.Messaging.Handler.HandlerMethod
  parent: Steeltoe.Messaging.Handler
  name: HandlerMethod
  nameWithType: HandlerMethod
  fullName: Steeltoe.Messaging.Handler.HandlerMethod
- uid: Steeltoe.Messaging.Handler
  commentId: N:Steeltoe.Messaging.Handler
  name: Steeltoe.Messaging.Handler
  nameWithType: Steeltoe.Messaging.Handler
  fullName: Steeltoe.Messaging.Handler
- uid: Steeltoe.Messaging.Handler.Invocation.AbstractMethodMessageHandler`1.Match.#ctor*
  commentId: Overload:Steeltoe.Messaging.Handler.Invocation.AbstractMethodMessageHandler`1.Match.#ctor
  name: Match
  nameWithType: AbstractMethodMessageHandler<T>.Match.Match
  fullName: Steeltoe.Messaging.Handler.Invocation.AbstractMethodMessageHandler<T>.Match.Match
  nameWithType.vb: AbstractMethodMessageHandler(Of T).Match.Match
  fullName.vb: Steeltoe.Messaging.Handler.Invocation.AbstractMethodMessageHandler(Of T).Match.Match
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Handler.Invocation.AbstractMethodMessageHandler`1.Match.ToString*
  commentId: Overload:Steeltoe.Messaging.Handler.Invocation.AbstractMethodMessageHandler`1.Match.ToString
  name: ToString
  nameWithType: AbstractMethodMessageHandler<T>.Match.ToString
  fullName: Steeltoe.Messaging.Handler.Invocation.AbstractMethodMessageHandler<T>.Match.ToString
  nameWithType.vb: AbstractMethodMessageHandler(Of T).Match.ToString
  fullName.vb: Steeltoe.Messaging.Handler.Invocation.AbstractMethodMessageHandler(Of T).Match.ToString
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
