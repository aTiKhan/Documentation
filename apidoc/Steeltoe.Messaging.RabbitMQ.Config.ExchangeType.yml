### YamlMime:ManagedReference
items:
- uid: Steeltoe.Messaging.RabbitMQ.Config.ExchangeType
  commentId: T:Steeltoe.Messaging.RabbitMQ.Config.ExchangeType
  id: ExchangeType
  parent: Steeltoe.Messaging.RabbitMQ.Config
  children:
  - Steeltoe.Messaging.RabbitMQ.Config.ExchangeType.DIRECT
  - Steeltoe.Messaging.RabbitMQ.Config.ExchangeType.FANOUT
  - Steeltoe.Messaging.RabbitMQ.Config.ExchangeType.HEADERS
  - Steeltoe.Messaging.RabbitMQ.Config.ExchangeType.SYSTEM
  - Steeltoe.Messaging.RabbitMQ.Config.ExchangeType.TOPIC
  langs:
  - csharp
  - vb
  name: ExchangeType
  nameWithType: ExchangeType
  fullName: Steeltoe.Messaging.RabbitMQ.Config.ExchangeType
  type: Class
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Config/ExchangeType.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: ExchangeType
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Config/ExchangeType.cs
    startLine: 6
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Config
  syntax:
    content: public static class ExchangeType
    content.vb: Public Module ExchangeType
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Steeltoe.Messaging.RabbitMQ.Config.ExchangeType.DIRECT
  commentId: F:Steeltoe.Messaging.RabbitMQ.Config.ExchangeType.DIRECT
  id: DIRECT
  parent: Steeltoe.Messaging.RabbitMQ.Config.ExchangeType
  langs:
  - csharp
  - vb
  name: DIRECT
  nameWithType: ExchangeType.DIRECT
  fullName: Steeltoe.Messaging.RabbitMQ.Config.ExchangeType.DIRECT
  type: Field
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Config/ExchangeType.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: DIRECT
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Config/ExchangeType.cs
    startLine: 8
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Config
  syntax:
    content: public const string DIRECT = "direct"
    return:
      type: System.String
    content.vb: Public Const DIRECT As String = "direct"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Steeltoe.Messaging.RabbitMQ.Config.ExchangeType.TOPIC
  commentId: F:Steeltoe.Messaging.RabbitMQ.Config.ExchangeType.TOPIC
  id: TOPIC
  parent: Steeltoe.Messaging.RabbitMQ.Config.ExchangeType
  langs:
  - csharp
  - vb
  name: TOPIC
  nameWithType: ExchangeType.TOPIC
  fullName: Steeltoe.Messaging.RabbitMQ.Config.ExchangeType.TOPIC
  type: Field
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Config/ExchangeType.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: TOPIC
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Config/ExchangeType.cs
    startLine: 9
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Config
  syntax:
    content: public const string TOPIC = "topic"
    return:
      type: System.String
    content.vb: Public Const TOPIC As String = "topic"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Steeltoe.Messaging.RabbitMQ.Config.ExchangeType.FANOUT
  commentId: F:Steeltoe.Messaging.RabbitMQ.Config.ExchangeType.FANOUT
  id: FANOUT
  parent: Steeltoe.Messaging.RabbitMQ.Config.ExchangeType
  langs:
  - csharp
  - vb
  name: FANOUT
  nameWithType: ExchangeType.FANOUT
  fullName: Steeltoe.Messaging.RabbitMQ.Config.ExchangeType.FANOUT
  type: Field
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Config/ExchangeType.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: FANOUT
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Config/ExchangeType.cs
    startLine: 10
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Config
  syntax:
    content: public const string FANOUT = "fanout"
    return:
      type: System.String
    content.vb: Public Const FANOUT As String = "fanout"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Steeltoe.Messaging.RabbitMQ.Config.ExchangeType.HEADERS
  commentId: F:Steeltoe.Messaging.RabbitMQ.Config.ExchangeType.HEADERS
  id: HEADERS
  parent: Steeltoe.Messaging.RabbitMQ.Config.ExchangeType
  langs:
  - csharp
  - vb
  name: HEADERS
  nameWithType: ExchangeType.HEADERS
  fullName: Steeltoe.Messaging.RabbitMQ.Config.ExchangeType.HEADERS
  type: Field
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Config/ExchangeType.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: HEADERS
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Config/ExchangeType.cs
    startLine: 11
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Config
  syntax:
    content: public const string HEADERS = "headers"
    return:
      type: System.String
    content.vb: Public Const HEADERS As String = "headers"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Steeltoe.Messaging.RabbitMQ.Config.ExchangeType.SYSTEM
  commentId: F:Steeltoe.Messaging.RabbitMQ.Config.ExchangeType.SYSTEM
  id: SYSTEM
  parent: Steeltoe.Messaging.RabbitMQ.Config.ExchangeType
  langs:
  - csharp
  - vb
  name: SYSTEM
  nameWithType: ExchangeType.SYSTEM
  fullName: Steeltoe.Messaging.RabbitMQ.Config.ExchangeType.SYSTEM
  type: Field
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Config/ExchangeType.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: SYSTEM
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Config/ExchangeType.cs
    startLine: 12
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Config
  syntax:
    content: public const string SYSTEM = "system"
    return:
      type: System.String
    content.vb: Public Const SYSTEM As String = "system"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
references:
- uid: Steeltoe.Messaging.RabbitMQ.Config
  commentId: N:Steeltoe.Messaging.RabbitMQ.Config
  name: Steeltoe.Messaging.RabbitMQ.Config
  nameWithType: Steeltoe.Messaging.RabbitMQ.Config
  fullName: Steeltoe.Messaging.RabbitMQ.Config
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
