### YamlMime:ManagedReference
items:
- uid: Steeltoe.Common.Expression.ValueExpression`1
  commentId: T:Steeltoe.Common.Expression.ValueExpression`1
  id: ValueExpression`1
  parent: Steeltoe.Common.Expression
  children:
  - Steeltoe.Common.Expression.ValueExpression`1.#ctor(`0)
  - Steeltoe.Common.Expression.ValueExpression`1.ExpressionString
  - Steeltoe.Common.Expression.ValueExpression`1.GetValue
  - Steeltoe.Common.Expression.ValueExpression`1.GetValue(Steeltoe.Common.Expression.IEvaluationContext)
  - Steeltoe.Common.Expression.ValueExpression`1.GetValue(Steeltoe.Common.Expression.IEvaluationContext,System.Object)
  - Steeltoe.Common.Expression.ValueExpression`1.GetValue(Steeltoe.Common.Expression.IEvaluationContext,System.Object,System.Type)
  - Steeltoe.Common.Expression.ValueExpression`1.GetValue(Steeltoe.Common.Expression.IEvaluationContext,System.Type)
  - Steeltoe.Common.Expression.ValueExpression`1.GetValue(System.Object)
  - Steeltoe.Common.Expression.ValueExpression`1.GetValue(System.Object,System.Type)
  - Steeltoe.Common.Expression.ValueExpression`1.GetValue(System.Type)
  - Steeltoe.Common.Expression.ValueExpression`1.GetValue``1
  - Steeltoe.Common.Expression.ValueExpression`1.GetValue``1(Steeltoe.Common.Expression.IEvaluationContext)
  - Steeltoe.Common.Expression.ValueExpression`1.GetValue``1(Steeltoe.Common.Expression.IEvaluationContext,System.Object)
  - Steeltoe.Common.Expression.ValueExpression`1.GetValue``1(System.Object)
  - Steeltoe.Common.Expression.ValueExpression`1.GetValueType
  - Steeltoe.Common.Expression.ValueExpression`1.GetValueType(Steeltoe.Common.Expression.IEvaluationContext)
  - Steeltoe.Common.Expression.ValueExpression`1.GetValueType(Steeltoe.Common.Expression.IEvaluationContext,System.Object)
  - Steeltoe.Common.Expression.ValueExpression`1.GetValueType(System.Object)
  - Steeltoe.Common.Expression.ValueExpression`1.IsWritable(Steeltoe.Common.Expression.IEvaluationContext)
  - Steeltoe.Common.Expression.ValueExpression`1.IsWritable(Steeltoe.Common.Expression.IEvaluationContext,System.Object)
  - Steeltoe.Common.Expression.ValueExpression`1.IsWritable(System.Object)
  - Steeltoe.Common.Expression.ValueExpression`1.SetValue(Steeltoe.Common.Expression.IEvaluationContext,System.Object)
  - Steeltoe.Common.Expression.ValueExpression`1.SetValue(Steeltoe.Common.Expression.IEvaluationContext,System.Object,System.Object)
  - Steeltoe.Common.Expression.ValueExpression`1.SetValue(System.Object,System.Object)
  langs:
  - csharp
  - vb
  name: ValueExpression<V>
  nameWithType: ValueExpression<V>
  fullName: Steeltoe.Common.Expression.ValueExpression<V>
  type: Class
  source:
    remote:
      path: src/Common/src/Common/Expression/ValueExpression.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: ValueExpression
    path: ../Steeltoe/src/Common/src/Common/Expression/ValueExpression.cs
    startLine: 8
  assemblies:
  - Steeltoe.Common
  namespace: Steeltoe.Common.Expression
  syntax:
    content: 'public class ValueExpression<V> : IExpression'
    typeParameters:
    - id: V
    content.vb: >-
      Public Class ValueExpression(Of V)

          Implements IExpression
  inheritance:
  - System.Object
  implements:
  - Steeltoe.Common.Expression.IExpression
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  nameWithType.vb: ValueExpression(Of V)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
  fullName.vb: Steeltoe.Common.Expression.ValueExpression(Of V)
  name.vb: ValueExpression(Of V)
- uid: Steeltoe.Common.Expression.ValueExpression`1.ExpressionString
  commentId: P:Steeltoe.Common.Expression.ValueExpression`1.ExpressionString
  id: ExpressionString
  parent: Steeltoe.Common.Expression.ValueExpression`1
  langs:
  - csharp
  - vb
  name: ExpressionString
  nameWithType: ValueExpression<V>.ExpressionString
  fullName: Steeltoe.Common.Expression.ValueExpression<V>.ExpressionString
  type: Property
  source:
    remote:
      path: src/Common/src/Common/Expression/ValueExpression.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: ExpressionString
    path: ../Steeltoe/src/Common/src/Common/Expression/ValueExpression.cs
    startLine: 13
  assemblies:
  - Steeltoe.Common
  namespace: Steeltoe.Common.Expression
  syntax:
    content: public string ExpressionString { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property ExpressionString As String
  overload: Steeltoe.Common.Expression.ValueExpression`1.ExpressionString*
  implements:
  - Steeltoe.Common.Expression.IExpression.ExpressionString
  nameWithType.vb: ValueExpression(Of V).ExpressionString
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: Steeltoe.Common.Expression.ValueExpression(Of V).ExpressionString
- uid: Steeltoe.Common.Expression.ValueExpression`1.#ctor(`0)
  commentId: M:Steeltoe.Common.Expression.ValueExpression`1.#ctor(`0)
  id: '#ctor(`0)'
  parent: Steeltoe.Common.Expression.ValueExpression`1
  langs:
  - csharp
  - vb
  name: ValueExpression(V)
  nameWithType: ValueExpression<V>.ValueExpression(V)
  fullName: Steeltoe.Common.Expression.ValueExpression<V>.ValueExpression(V)
  type: Constructor
  source:
    remote:
      path: src/Common/src/Common/Expression/ValueExpression.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: .ctor
    path: ../Steeltoe/src/Common/src/Common/Expression/ValueExpression.cs
    startLine: 15
  assemblies:
  - Steeltoe.Common
  namespace: Steeltoe.Common.Expression
  syntax:
    content: public ValueExpression(V value)
    parameters:
    - id: value
      type: '{V}'
    content.vb: Public Sub New(value As V)
  overload: Steeltoe.Common.Expression.ValueExpression`1.#ctor*
  nameWithType.vb: ValueExpression(Of V).ValueExpression(V)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Steeltoe.Common.Expression.ValueExpression(Of V).ValueExpression(V)
- uid: Steeltoe.Common.Expression.ValueExpression`1.GetValue
  commentId: M:Steeltoe.Common.Expression.ValueExpression`1.GetValue
  id: GetValue
  parent: Steeltoe.Common.Expression.ValueExpression`1
  langs:
  - csharp
  - vb
  name: GetValue()
  nameWithType: ValueExpression<V>.GetValue()
  fullName: Steeltoe.Common.Expression.ValueExpression<V>.GetValue()
  type: Method
  source:
    remote:
      path: src/Common/src/Common/Expression/ValueExpression.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: GetValue
    path: ../Steeltoe/src/Common/src/Common/Expression/ValueExpression.cs
    startLine: 21
  assemblies:
  - Steeltoe.Common
  namespace: Steeltoe.Common.Expression
  syntax:
    content: public virtual object GetValue()
    return:
      type: System.Object
    content.vb: Public Overridable Function GetValue As Object
  overload: Steeltoe.Common.Expression.ValueExpression`1.GetValue*
  implements:
  - Steeltoe.Common.Expression.IExpression.GetValue
  nameWithType.vb: ValueExpression(Of V).GetValue()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Steeltoe.Common.Expression.ValueExpression(Of V).GetValue()
- uid: Steeltoe.Common.Expression.ValueExpression`1.GetValue(System.Type)
  commentId: M:Steeltoe.Common.Expression.ValueExpression`1.GetValue(System.Type)
  id: GetValue(System.Type)
  parent: Steeltoe.Common.Expression.ValueExpression`1
  langs:
  - csharp
  - vb
  name: GetValue(Type)
  nameWithType: ValueExpression<V>.GetValue(Type)
  fullName: Steeltoe.Common.Expression.ValueExpression<V>.GetValue(System.Type)
  type: Method
  source:
    remote:
      path: src/Common/src/Common/Expression/ValueExpression.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: GetValue
    path: ../Steeltoe/src/Common/src/Common/Expression/ValueExpression.cs
    startLine: 26
  assemblies:
  - Steeltoe.Common
  namespace: Steeltoe.Common.Expression
  syntax:
    content: public virtual object GetValue(Type desiredResultType)
    parameters:
    - id: desiredResultType
      type: System.Type
    return:
      type: System.Object
    content.vb: Public Overridable Function GetValue(desiredResultType As Type) As Object
  overload: Steeltoe.Common.Expression.ValueExpression`1.GetValue*
  implements:
  - Steeltoe.Common.Expression.IExpression.GetValue(System.Type)
  nameWithType.vb: ValueExpression(Of V).GetValue(Type)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Steeltoe.Common.Expression.ValueExpression(Of V).GetValue(System.Type)
- uid: Steeltoe.Common.Expression.ValueExpression`1.GetValue``1
  commentId: M:Steeltoe.Common.Expression.ValueExpression`1.GetValue``1
  id: GetValue``1
  parent: Steeltoe.Common.Expression.ValueExpression`1
  langs:
  - csharp
  - vb
  name: GetValue<T>()
  nameWithType: ValueExpression<V>.GetValue<T>()
  fullName: Steeltoe.Common.Expression.ValueExpression<V>.GetValue<T>()
  type: Method
  source:
    remote:
      path: src/Common/src/Common/Expression/ValueExpression.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: GetValue
    path: ../Steeltoe/src/Common/src/Common/Expression/ValueExpression.cs
    startLine: 36
  assemblies:
  - Steeltoe.Common
  namespace: Steeltoe.Common.Expression
  syntax:
    content: public virtual T GetValue<T>()
    typeParameters:
    - id: T
    return:
      type: '{T}'
    content.vb: Public Overridable Function GetValue(Of T) As T
  overload: Steeltoe.Common.Expression.ValueExpression`1.GetValue*
  implements:
  - Steeltoe.Common.Expression.IExpression.GetValue``1
  nameWithType.vb: ValueExpression(Of V).GetValue(Of T)()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Steeltoe.Common.Expression.ValueExpression(Of V).GetValue(Of T)()
  name.vb: GetValue(Of T)()
- uid: Steeltoe.Common.Expression.ValueExpression`1.GetValue(System.Object)
  commentId: M:Steeltoe.Common.Expression.ValueExpression`1.GetValue(System.Object)
  id: GetValue(System.Object)
  parent: Steeltoe.Common.Expression.ValueExpression`1
  langs:
  - csharp
  - vb
  name: GetValue(Object)
  nameWithType: ValueExpression<V>.GetValue(Object)
  fullName: Steeltoe.Common.Expression.ValueExpression<V>.GetValue(System.Object)
  type: Method
  source:
    remote:
      path: src/Common/src/Common/Expression/ValueExpression.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: GetValue
    path: ../Steeltoe/src/Common/src/Common/Expression/ValueExpression.cs
    startLine: 41
  assemblies:
  - Steeltoe.Common
  namespace: Steeltoe.Common.Expression
  syntax:
    content: public virtual object GetValue(object rootObject)
    parameters:
    - id: rootObject
      type: System.Object
    return:
      type: System.Object
    content.vb: Public Overridable Function GetValue(rootObject As Object) As Object
  overload: Steeltoe.Common.Expression.ValueExpression`1.GetValue*
  implements:
  - Steeltoe.Common.Expression.IExpression.GetValue(System.Object)
  nameWithType.vb: ValueExpression(Of V).GetValue(Object)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Steeltoe.Common.Expression.ValueExpression(Of V).GetValue(System.Object)
- uid: Steeltoe.Common.Expression.ValueExpression`1.GetValue(Steeltoe.Common.Expression.IEvaluationContext,System.Type)
  commentId: M:Steeltoe.Common.Expression.ValueExpression`1.GetValue(Steeltoe.Common.Expression.IEvaluationContext,System.Type)
  id: GetValue(Steeltoe.Common.Expression.IEvaluationContext,System.Type)
  parent: Steeltoe.Common.Expression.ValueExpression`1
  langs:
  - csharp
  - vb
  name: GetValue(IEvaluationContext, Type)
  nameWithType: ValueExpression<V>.GetValue(IEvaluationContext, Type)
  fullName: Steeltoe.Common.Expression.ValueExpression<V>.GetValue(Steeltoe.Common.Expression.IEvaluationContext, System.Type)
  type: Method
  source:
    remote:
      path: src/Common/src/Common/Expression/ValueExpression.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: GetValue
    path: ../Steeltoe/src/Common/src/Common/Expression/ValueExpression.cs
    startLine: 46
  assemblies:
  - Steeltoe.Common
  namespace: Steeltoe.Common.Expression
  syntax:
    content: public virtual object GetValue(IEvaluationContext context, Type desiredResultType)
    parameters:
    - id: context
      type: Steeltoe.Common.Expression.IEvaluationContext
    - id: desiredResultType
      type: System.Type
    return:
      type: System.Object
    content.vb: Public Overridable Function GetValue(context As IEvaluationContext, desiredResultType As Type) As Object
  overload: Steeltoe.Common.Expression.ValueExpression`1.GetValue*
  implements:
  - Steeltoe.Common.Expression.IExpression.GetValue(Steeltoe.Common.Expression.IEvaluationContext,System.Type)
  nameWithType.vb: ValueExpression(Of V).GetValue(IEvaluationContext, Type)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Steeltoe.Common.Expression.ValueExpression(Of V).GetValue(Steeltoe.Common.Expression.IEvaluationContext, System.Type)
- uid: Steeltoe.Common.Expression.ValueExpression`1.GetValue(System.Object,System.Type)
  commentId: M:Steeltoe.Common.Expression.ValueExpression`1.GetValue(System.Object,System.Type)
  id: GetValue(System.Object,System.Type)
  parent: Steeltoe.Common.Expression.ValueExpression`1
  langs:
  - csharp
  - vb
  name: GetValue(Object, Type)
  nameWithType: ValueExpression<V>.GetValue(Object, Type)
  fullName: Steeltoe.Common.Expression.ValueExpression<V>.GetValue(System.Object, System.Type)
  type: Method
  source:
    remote:
      path: src/Common/src/Common/Expression/ValueExpression.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: GetValue
    path: ../Steeltoe/src/Common/src/Common/Expression/ValueExpression.cs
    startLine: 51
  assemblies:
  - Steeltoe.Common
  namespace: Steeltoe.Common.Expression
  syntax:
    content: public virtual object GetValue(object rootObject, Type desiredResultType)
    parameters:
    - id: rootObject
      type: System.Object
    - id: desiredResultType
      type: System.Type
    return:
      type: System.Object
    content.vb: Public Overridable Function GetValue(rootObject As Object, desiredResultType As Type) As Object
  overload: Steeltoe.Common.Expression.ValueExpression`1.GetValue*
  implements:
  - Steeltoe.Common.Expression.IExpression.GetValue(System.Object,System.Type)
  nameWithType.vb: ValueExpression(Of V).GetValue(Object, Type)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Steeltoe.Common.Expression.ValueExpression(Of V).GetValue(System.Object, System.Type)
- uid: Steeltoe.Common.Expression.ValueExpression`1.GetValue``1(System.Object)
  commentId: M:Steeltoe.Common.Expression.ValueExpression`1.GetValue``1(System.Object)
  id: GetValue``1(System.Object)
  parent: Steeltoe.Common.Expression.ValueExpression`1
  langs:
  - csharp
  - vb
  name: GetValue<T>(Object)
  nameWithType: ValueExpression<V>.GetValue<T>(Object)
  fullName: Steeltoe.Common.Expression.ValueExpression<V>.GetValue<T>(System.Object)
  type: Method
  source:
    remote:
      path: src/Common/src/Common/Expression/ValueExpression.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: GetValue
    path: ../Steeltoe/src/Common/src/Common/Expression/ValueExpression.cs
    startLine: 56
  assemblies:
  - Steeltoe.Common
  namespace: Steeltoe.Common.Expression
  syntax:
    content: public virtual T GetValue<T>(object rootObject)
    parameters:
    - id: rootObject
      type: System.Object
    typeParameters:
    - id: T
    return:
      type: '{T}'
    content.vb: Public Overridable Function GetValue(Of T)(rootObject As Object) As T
  overload: Steeltoe.Common.Expression.ValueExpression`1.GetValue*
  implements:
  - Steeltoe.Common.Expression.IExpression.GetValue``1(System.Object)
  nameWithType.vb: ValueExpression(Of V).GetValue(Of T)(Object)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Steeltoe.Common.Expression.ValueExpression(Of V).GetValue(Of T)(System.Object)
  name.vb: GetValue(Of T)(Object)
- uid: Steeltoe.Common.Expression.ValueExpression`1.GetValue(Steeltoe.Common.Expression.IEvaluationContext)
  commentId: M:Steeltoe.Common.Expression.ValueExpression`1.GetValue(Steeltoe.Common.Expression.IEvaluationContext)
  id: GetValue(Steeltoe.Common.Expression.IEvaluationContext)
  parent: Steeltoe.Common.Expression.ValueExpression`1
  langs:
  - csharp
  - vb
  name: GetValue(IEvaluationContext)
  nameWithType: ValueExpression<V>.GetValue(IEvaluationContext)
  fullName: Steeltoe.Common.Expression.ValueExpression<V>.GetValue(Steeltoe.Common.Expression.IEvaluationContext)
  type: Method
  source:
    remote:
      path: src/Common/src/Common/Expression/ValueExpression.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: GetValue
    path: ../Steeltoe/src/Common/src/Common/Expression/ValueExpression.cs
    startLine: 61
  assemblies:
  - Steeltoe.Common
  namespace: Steeltoe.Common.Expression
  syntax:
    content: public virtual object GetValue(IEvaluationContext context)
    parameters:
    - id: context
      type: Steeltoe.Common.Expression.IEvaluationContext
    return:
      type: System.Object
    content.vb: Public Overridable Function GetValue(context As IEvaluationContext) As Object
  overload: Steeltoe.Common.Expression.ValueExpression`1.GetValue*
  implements:
  - Steeltoe.Common.Expression.IExpression.GetValue(Steeltoe.Common.Expression.IEvaluationContext)
  nameWithType.vb: ValueExpression(Of V).GetValue(IEvaluationContext)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Steeltoe.Common.Expression.ValueExpression(Of V).GetValue(Steeltoe.Common.Expression.IEvaluationContext)
- uid: Steeltoe.Common.Expression.ValueExpression`1.GetValue(Steeltoe.Common.Expression.IEvaluationContext,System.Object)
  commentId: M:Steeltoe.Common.Expression.ValueExpression`1.GetValue(Steeltoe.Common.Expression.IEvaluationContext,System.Object)
  id: GetValue(Steeltoe.Common.Expression.IEvaluationContext,System.Object)
  parent: Steeltoe.Common.Expression.ValueExpression`1
  langs:
  - csharp
  - vb
  name: GetValue(IEvaluationContext, Object)
  nameWithType: ValueExpression<V>.GetValue(IEvaluationContext, Object)
  fullName: Steeltoe.Common.Expression.ValueExpression<V>.GetValue(Steeltoe.Common.Expression.IEvaluationContext, System.Object)
  type: Method
  source:
    remote:
      path: src/Common/src/Common/Expression/ValueExpression.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: GetValue
    path: ../Steeltoe/src/Common/src/Common/Expression/ValueExpression.cs
    startLine: 66
  assemblies:
  - Steeltoe.Common
  namespace: Steeltoe.Common.Expression
  syntax:
    content: public virtual object GetValue(IEvaluationContext context, object rootObject)
    parameters:
    - id: context
      type: Steeltoe.Common.Expression.IEvaluationContext
    - id: rootObject
      type: System.Object
    return:
      type: System.Object
    content.vb: Public Overridable Function GetValue(context As IEvaluationContext, rootObject As Object) As Object
  overload: Steeltoe.Common.Expression.ValueExpression`1.GetValue*
  implements:
  - Steeltoe.Common.Expression.IExpression.GetValue(Steeltoe.Common.Expression.IEvaluationContext,System.Object)
  nameWithType.vb: ValueExpression(Of V).GetValue(IEvaluationContext, Object)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Steeltoe.Common.Expression.ValueExpression(Of V).GetValue(Steeltoe.Common.Expression.IEvaluationContext, System.Object)
- uid: Steeltoe.Common.Expression.ValueExpression`1.GetValue(Steeltoe.Common.Expression.IEvaluationContext,System.Object,System.Type)
  commentId: M:Steeltoe.Common.Expression.ValueExpression`1.GetValue(Steeltoe.Common.Expression.IEvaluationContext,System.Object,System.Type)
  id: GetValue(Steeltoe.Common.Expression.IEvaluationContext,System.Object,System.Type)
  parent: Steeltoe.Common.Expression.ValueExpression`1
  langs:
  - csharp
  - vb
  name: GetValue(IEvaluationContext, Object, Type)
  nameWithType: ValueExpression<V>.GetValue(IEvaluationContext, Object, Type)
  fullName: Steeltoe.Common.Expression.ValueExpression<V>.GetValue(Steeltoe.Common.Expression.IEvaluationContext, System.Object, System.Type)
  type: Method
  source:
    remote:
      path: src/Common/src/Common/Expression/ValueExpression.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: GetValue
    path: ../Steeltoe/src/Common/src/Common/Expression/ValueExpression.cs
    startLine: 71
  assemblies:
  - Steeltoe.Common
  namespace: Steeltoe.Common.Expression
  syntax:
    content: public virtual object GetValue(IEvaluationContext context, object rootObject, Type desiredResultType)
    parameters:
    - id: context
      type: Steeltoe.Common.Expression.IEvaluationContext
    - id: rootObject
      type: System.Object
    - id: desiredResultType
      type: System.Type
    return:
      type: System.Object
    content.vb: Public Overridable Function GetValue(context As IEvaluationContext, rootObject As Object, desiredResultType As Type) As Object
  overload: Steeltoe.Common.Expression.ValueExpression`1.GetValue*
  implements:
  - Steeltoe.Common.Expression.IExpression.GetValue(Steeltoe.Common.Expression.IEvaluationContext,System.Object,System.Type)
  nameWithType.vb: ValueExpression(Of V).GetValue(IEvaluationContext, Object, Type)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Steeltoe.Common.Expression.ValueExpression(Of V).GetValue(Steeltoe.Common.Expression.IEvaluationContext, System.Object, System.Type)
- uid: Steeltoe.Common.Expression.ValueExpression`1.GetValue``1(Steeltoe.Common.Expression.IEvaluationContext)
  commentId: M:Steeltoe.Common.Expression.ValueExpression`1.GetValue``1(Steeltoe.Common.Expression.IEvaluationContext)
  id: GetValue``1(Steeltoe.Common.Expression.IEvaluationContext)
  parent: Steeltoe.Common.Expression.ValueExpression`1
  langs:
  - csharp
  - vb
  name: GetValue<T>(IEvaluationContext)
  nameWithType: ValueExpression<V>.GetValue<T>(IEvaluationContext)
  fullName: Steeltoe.Common.Expression.ValueExpression<V>.GetValue<T>(Steeltoe.Common.Expression.IEvaluationContext)
  type: Method
  source:
    remote:
      path: src/Common/src/Common/Expression/ValueExpression.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: GetValue
    path: ../Steeltoe/src/Common/src/Common/Expression/ValueExpression.cs
    startLine: 76
  assemblies:
  - Steeltoe.Common
  namespace: Steeltoe.Common.Expression
  syntax:
    content: public virtual T GetValue<T>(IEvaluationContext context)
    parameters:
    - id: context
      type: Steeltoe.Common.Expression.IEvaluationContext
    typeParameters:
    - id: T
    return:
      type: '{T}'
    content.vb: Public Overridable Function GetValue(Of T)(context As IEvaluationContext) As T
  overload: Steeltoe.Common.Expression.ValueExpression`1.GetValue*
  implements:
  - Steeltoe.Common.Expression.IExpression.GetValue``1(Steeltoe.Common.Expression.IEvaluationContext)
  nameWithType.vb: ValueExpression(Of V).GetValue(Of T)(IEvaluationContext)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Steeltoe.Common.Expression.ValueExpression(Of V).GetValue(Of T)(Steeltoe.Common.Expression.IEvaluationContext)
  name.vb: GetValue(Of T)(IEvaluationContext)
- uid: Steeltoe.Common.Expression.ValueExpression`1.GetValue``1(Steeltoe.Common.Expression.IEvaluationContext,System.Object)
  commentId: M:Steeltoe.Common.Expression.ValueExpression`1.GetValue``1(Steeltoe.Common.Expression.IEvaluationContext,System.Object)
  id: GetValue``1(Steeltoe.Common.Expression.IEvaluationContext,System.Object)
  parent: Steeltoe.Common.Expression.ValueExpression`1
  langs:
  - csharp
  - vb
  name: GetValue<T>(IEvaluationContext, Object)
  nameWithType: ValueExpression<V>.GetValue<T>(IEvaluationContext, Object)
  fullName: Steeltoe.Common.Expression.ValueExpression<V>.GetValue<T>(Steeltoe.Common.Expression.IEvaluationContext, System.Object)
  type: Method
  source:
    remote:
      path: src/Common/src/Common/Expression/ValueExpression.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: GetValue
    path: ../Steeltoe/src/Common/src/Common/Expression/ValueExpression.cs
    startLine: 81
  assemblies:
  - Steeltoe.Common
  namespace: Steeltoe.Common.Expression
  syntax:
    content: public virtual T GetValue<T>(IEvaluationContext context, object rootObject)
    parameters:
    - id: context
      type: Steeltoe.Common.Expression.IEvaluationContext
    - id: rootObject
      type: System.Object
    typeParameters:
    - id: T
    return:
      type: '{T}'
    content.vb: Public Overridable Function GetValue(Of T)(context As IEvaluationContext, rootObject As Object) As T
  overload: Steeltoe.Common.Expression.ValueExpression`1.GetValue*
  implements:
  - Steeltoe.Common.Expression.IExpression.GetValue``1(Steeltoe.Common.Expression.IEvaluationContext,System.Object)
  nameWithType.vb: ValueExpression(Of V).GetValue(Of T)(IEvaluationContext, Object)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Steeltoe.Common.Expression.ValueExpression(Of V).GetValue(Of T)(Steeltoe.Common.Expression.IEvaluationContext, System.Object)
  name.vb: GetValue(Of T)(IEvaluationContext, Object)
- uid: Steeltoe.Common.Expression.ValueExpression`1.GetValueType
  commentId: M:Steeltoe.Common.Expression.ValueExpression`1.GetValueType
  id: GetValueType
  parent: Steeltoe.Common.Expression.ValueExpression`1
  langs:
  - csharp
  - vb
  name: GetValueType()
  nameWithType: ValueExpression<V>.GetValueType()
  fullName: Steeltoe.Common.Expression.ValueExpression<V>.GetValueType()
  type: Method
  source:
    remote:
      path: src/Common/src/Common/Expression/ValueExpression.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: GetValueType
    path: ../Steeltoe/src/Common/src/Common/Expression/ValueExpression.cs
    startLine: 86
  assemblies:
  - Steeltoe.Common
  namespace: Steeltoe.Common.Expression
  syntax:
    content: public virtual Type GetValueType()
    return:
      type: System.Type
    content.vb: Public Overridable Function GetValueType As Type
  overload: Steeltoe.Common.Expression.ValueExpression`1.GetValueType*
  implements:
  - Steeltoe.Common.Expression.IExpression.GetValueType
  nameWithType.vb: ValueExpression(Of V).GetValueType()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Steeltoe.Common.Expression.ValueExpression(Of V).GetValueType()
- uid: Steeltoe.Common.Expression.ValueExpression`1.GetValueType(System.Object)
  commentId: M:Steeltoe.Common.Expression.ValueExpression`1.GetValueType(System.Object)
  id: GetValueType(System.Object)
  parent: Steeltoe.Common.Expression.ValueExpression`1
  langs:
  - csharp
  - vb
  name: GetValueType(Object)
  nameWithType: ValueExpression<V>.GetValueType(Object)
  fullName: Steeltoe.Common.Expression.ValueExpression<V>.GetValueType(System.Object)
  type: Method
  source:
    remote:
      path: src/Common/src/Common/Expression/ValueExpression.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: GetValueType
    path: ../Steeltoe/src/Common/src/Common/Expression/ValueExpression.cs
    startLine: 91
  assemblies:
  - Steeltoe.Common
  namespace: Steeltoe.Common.Expression
  syntax:
    content: public virtual Type GetValueType(object rootObject)
    parameters:
    - id: rootObject
      type: System.Object
    return:
      type: System.Type
    content.vb: Public Overridable Function GetValueType(rootObject As Object) As Type
  overload: Steeltoe.Common.Expression.ValueExpression`1.GetValueType*
  implements:
  - Steeltoe.Common.Expression.IExpression.GetValueType(System.Object)
  nameWithType.vb: ValueExpression(Of V).GetValueType(Object)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Steeltoe.Common.Expression.ValueExpression(Of V).GetValueType(System.Object)
- uid: Steeltoe.Common.Expression.ValueExpression`1.GetValueType(Steeltoe.Common.Expression.IEvaluationContext)
  commentId: M:Steeltoe.Common.Expression.ValueExpression`1.GetValueType(Steeltoe.Common.Expression.IEvaluationContext)
  id: GetValueType(Steeltoe.Common.Expression.IEvaluationContext)
  parent: Steeltoe.Common.Expression.ValueExpression`1
  langs:
  - csharp
  - vb
  name: GetValueType(IEvaluationContext)
  nameWithType: ValueExpression<V>.GetValueType(IEvaluationContext)
  fullName: Steeltoe.Common.Expression.ValueExpression<V>.GetValueType(Steeltoe.Common.Expression.IEvaluationContext)
  type: Method
  source:
    remote:
      path: src/Common/src/Common/Expression/ValueExpression.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: GetValueType
    path: ../Steeltoe/src/Common/src/Common/Expression/ValueExpression.cs
    startLine: 96
  assemblies:
  - Steeltoe.Common
  namespace: Steeltoe.Common.Expression
  syntax:
    content: public virtual Type GetValueType(IEvaluationContext context)
    parameters:
    - id: context
      type: Steeltoe.Common.Expression.IEvaluationContext
    return:
      type: System.Type
    content.vb: Public Overridable Function GetValueType(context As IEvaluationContext) As Type
  overload: Steeltoe.Common.Expression.ValueExpression`1.GetValueType*
  implements:
  - Steeltoe.Common.Expression.IExpression.GetValueType(Steeltoe.Common.Expression.IEvaluationContext)
  nameWithType.vb: ValueExpression(Of V).GetValueType(IEvaluationContext)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Steeltoe.Common.Expression.ValueExpression(Of V).GetValueType(Steeltoe.Common.Expression.IEvaluationContext)
- uid: Steeltoe.Common.Expression.ValueExpression`1.GetValueType(Steeltoe.Common.Expression.IEvaluationContext,System.Object)
  commentId: M:Steeltoe.Common.Expression.ValueExpression`1.GetValueType(Steeltoe.Common.Expression.IEvaluationContext,System.Object)
  id: GetValueType(Steeltoe.Common.Expression.IEvaluationContext,System.Object)
  parent: Steeltoe.Common.Expression.ValueExpression`1
  langs:
  - csharp
  - vb
  name: GetValueType(IEvaluationContext, Object)
  nameWithType: ValueExpression<V>.GetValueType(IEvaluationContext, Object)
  fullName: Steeltoe.Common.Expression.ValueExpression<V>.GetValueType(Steeltoe.Common.Expression.IEvaluationContext, System.Object)
  type: Method
  source:
    remote:
      path: src/Common/src/Common/Expression/ValueExpression.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: GetValueType
    path: ../Steeltoe/src/Common/src/Common/Expression/ValueExpression.cs
    startLine: 101
  assemblies:
  - Steeltoe.Common
  namespace: Steeltoe.Common.Expression
  syntax:
    content: public virtual Type GetValueType(IEvaluationContext context, object rootObject)
    parameters:
    - id: context
      type: Steeltoe.Common.Expression.IEvaluationContext
    - id: rootObject
      type: System.Object
    return:
      type: System.Type
    content.vb: Public Overridable Function GetValueType(context As IEvaluationContext, rootObject As Object) As Type
  overload: Steeltoe.Common.Expression.ValueExpression`1.GetValueType*
  implements:
  - Steeltoe.Common.Expression.IExpression.GetValueType(Steeltoe.Common.Expression.IEvaluationContext,System.Object)
  nameWithType.vb: ValueExpression(Of V).GetValueType(IEvaluationContext, Object)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Steeltoe.Common.Expression.ValueExpression(Of V).GetValueType(Steeltoe.Common.Expression.IEvaluationContext, System.Object)
- uid: Steeltoe.Common.Expression.ValueExpression`1.IsWritable(System.Object)
  commentId: M:Steeltoe.Common.Expression.ValueExpression`1.IsWritable(System.Object)
  id: IsWritable(System.Object)
  parent: Steeltoe.Common.Expression.ValueExpression`1
  langs:
  - csharp
  - vb
  name: IsWritable(Object)
  nameWithType: ValueExpression<V>.IsWritable(Object)
  fullName: Steeltoe.Common.Expression.ValueExpression<V>.IsWritable(System.Object)
  type: Method
  source:
    remote:
      path: src/Common/src/Common/Expression/ValueExpression.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: IsWritable
    path: ../Steeltoe/src/Common/src/Common/Expression/ValueExpression.cs
    startLine: 106
  assemblies:
  - Steeltoe.Common
  namespace: Steeltoe.Common.Expression
  syntax:
    content: public virtual bool IsWritable(object rootObject)
    parameters:
    - id: rootObject
      type: System.Object
    return:
      type: System.Boolean
    content.vb: Public Overridable Function IsWritable(rootObject As Object) As Boolean
  overload: Steeltoe.Common.Expression.ValueExpression`1.IsWritable*
  implements:
  - Steeltoe.Common.Expression.IExpression.IsWritable(System.Object)
  nameWithType.vb: ValueExpression(Of V).IsWritable(Object)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Steeltoe.Common.Expression.ValueExpression(Of V).IsWritable(System.Object)
- uid: Steeltoe.Common.Expression.ValueExpression`1.IsWritable(Steeltoe.Common.Expression.IEvaluationContext)
  commentId: M:Steeltoe.Common.Expression.ValueExpression`1.IsWritable(Steeltoe.Common.Expression.IEvaluationContext)
  id: IsWritable(Steeltoe.Common.Expression.IEvaluationContext)
  parent: Steeltoe.Common.Expression.ValueExpression`1
  langs:
  - csharp
  - vb
  name: IsWritable(IEvaluationContext)
  nameWithType: ValueExpression<V>.IsWritable(IEvaluationContext)
  fullName: Steeltoe.Common.Expression.ValueExpression<V>.IsWritable(Steeltoe.Common.Expression.IEvaluationContext)
  type: Method
  source:
    remote:
      path: src/Common/src/Common/Expression/ValueExpression.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: IsWritable
    path: ../Steeltoe/src/Common/src/Common/Expression/ValueExpression.cs
    startLine: 111
  assemblies:
  - Steeltoe.Common
  namespace: Steeltoe.Common.Expression
  syntax:
    content: public virtual bool IsWritable(IEvaluationContext context)
    parameters:
    - id: context
      type: Steeltoe.Common.Expression.IEvaluationContext
    return:
      type: System.Boolean
    content.vb: Public Overridable Function IsWritable(context As IEvaluationContext) As Boolean
  overload: Steeltoe.Common.Expression.ValueExpression`1.IsWritable*
  implements:
  - Steeltoe.Common.Expression.IExpression.IsWritable(Steeltoe.Common.Expression.IEvaluationContext)
  nameWithType.vb: ValueExpression(Of V).IsWritable(IEvaluationContext)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Steeltoe.Common.Expression.ValueExpression(Of V).IsWritable(Steeltoe.Common.Expression.IEvaluationContext)
- uid: Steeltoe.Common.Expression.ValueExpression`1.IsWritable(Steeltoe.Common.Expression.IEvaluationContext,System.Object)
  commentId: M:Steeltoe.Common.Expression.ValueExpression`1.IsWritable(Steeltoe.Common.Expression.IEvaluationContext,System.Object)
  id: IsWritable(Steeltoe.Common.Expression.IEvaluationContext,System.Object)
  parent: Steeltoe.Common.Expression.ValueExpression`1
  langs:
  - csharp
  - vb
  name: IsWritable(IEvaluationContext, Object)
  nameWithType: ValueExpression<V>.IsWritable(IEvaluationContext, Object)
  fullName: Steeltoe.Common.Expression.ValueExpression<V>.IsWritable(Steeltoe.Common.Expression.IEvaluationContext, System.Object)
  type: Method
  source:
    remote:
      path: src/Common/src/Common/Expression/ValueExpression.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: IsWritable
    path: ../Steeltoe/src/Common/src/Common/Expression/ValueExpression.cs
    startLine: 116
  assemblies:
  - Steeltoe.Common
  namespace: Steeltoe.Common.Expression
  syntax:
    content: public virtual bool IsWritable(IEvaluationContext context, object rootObject)
    parameters:
    - id: context
      type: Steeltoe.Common.Expression.IEvaluationContext
    - id: rootObject
      type: System.Object
    return:
      type: System.Boolean
    content.vb: Public Overridable Function IsWritable(context As IEvaluationContext, rootObject As Object) As Boolean
  overload: Steeltoe.Common.Expression.ValueExpression`1.IsWritable*
  implements:
  - Steeltoe.Common.Expression.IExpression.IsWritable(Steeltoe.Common.Expression.IEvaluationContext,System.Object)
  nameWithType.vb: ValueExpression(Of V).IsWritable(IEvaluationContext, Object)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Steeltoe.Common.Expression.ValueExpression(Of V).IsWritable(Steeltoe.Common.Expression.IEvaluationContext, System.Object)
- uid: Steeltoe.Common.Expression.ValueExpression`1.SetValue(System.Object,System.Object)
  commentId: M:Steeltoe.Common.Expression.ValueExpression`1.SetValue(System.Object,System.Object)
  id: SetValue(System.Object,System.Object)
  parent: Steeltoe.Common.Expression.ValueExpression`1
  langs:
  - csharp
  - vb
  name: SetValue(Object, Object)
  nameWithType: ValueExpression<V>.SetValue(Object, Object)
  fullName: Steeltoe.Common.Expression.ValueExpression<V>.SetValue(System.Object, System.Object)
  type: Method
  source:
    remote:
      path: src/Common/src/Common/Expression/ValueExpression.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: SetValue
    path: ../Steeltoe/src/Common/src/Common/Expression/ValueExpression.cs
    startLine: 121
  assemblies:
  - Steeltoe.Common
  namespace: Steeltoe.Common.Expression
  syntax:
    content: public virtual bool SetValue(object rootObject, object value)
    parameters:
    - id: rootObject
      type: System.Object
    - id: value
      type: System.Object
    return:
      type: System.Boolean
    content.vb: Public Overridable Function SetValue(rootObject As Object, value As Object) As Boolean
  overload: Steeltoe.Common.Expression.ValueExpression`1.SetValue*
  implements:
  - Steeltoe.Common.Expression.IExpression.SetValue(System.Object,System.Object)
  nameWithType.vb: ValueExpression(Of V).SetValue(Object, Object)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Steeltoe.Common.Expression.ValueExpression(Of V).SetValue(System.Object, System.Object)
- uid: Steeltoe.Common.Expression.ValueExpression`1.SetValue(Steeltoe.Common.Expression.IEvaluationContext,System.Object)
  commentId: M:Steeltoe.Common.Expression.ValueExpression`1.SetValue(Steeltoe.Common.Expression.IEvaluationContext,System.Object)
  id: SetValue(Steeltoe.Common.Expression.IEvaluationContext,System.Object)
  parent: Steeltoe.Common.Expression.ValueExpression`1
  langs:
  - csharp
  - vb
  name: SetValue(IEvaluationContext, Object)
  nameWithType: ValueExpression<V>.SetValue(IEvaluationContext, Object)
  fullName: Steeltoe.Common.Expression.ValueExpression<V>.SetValue(Steeltoe.Common.Expression.IEvaluationContext, System.Object)
  type: Method
  source:
    remote:
      path: src/Common/src/Common/Expression/ValueExpression.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: SetValue
    path: ../Steeltoe/src/Common/src/Common/Expression/ValueExpression.cs
    startLine: 126
  assemblies:
  - Steeltoe.Common
  namespace: Steeltoe.Common.Expression
  syntax:
    content: public virtual bool SetValue(IEvaluationContext context, object value)
    parameters:
    - id: context
      type: Steeltoe.Common.Expression.IEvaluationContext
    - id: value
      type: System.Object
    return:
      type: System.Boolean
    content.vb: Public Overridable Function SetValue(context As IEvaluationContext, value As Object) As Boolean
  overload: Steeltoe.Common.Expression.ValueExpression`1.SetValue*
  implements:
  - Steeltoe.Common.Expression.IExpression.SetValue(Steeltoe.Common.Expression.IEvaluationContext,System.Object)
  nameWithType.vb: ValueExpression(Of V).SetValue(IEvaluationContext, Object)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Steeltoe.Common.Expression.ValueExpression(Of V).SetValue(Steeltoe.Common.Expression.IEvaluationContext, System.Object)
- uid: Steeltoe.Common.Expression.ValueExpression`1.SetValue(Steeltoe.Common.Expression.IEvaluationContext,System.Object,System.Object)
  commentId: M:Steeltoe.Common.Expression.ValueExpression`1.SetValue(Steeltoe.Common.Expression.IEvaluationContext,System.Object,System.Object)
  id: SetValue(Steeltoe.Common.Expression.IEvaluationContext,System.Object,System.Object)
  parent: Steeltoe.Common.Expression.ValueExpression`1
  langs:
  - csharp
  - vb
  name: SetValue(IEvaluationContext, Object, Object)
  nameWithType: ValueExpression<V>.SetValue(IEvaluationContext, Object, Object)
  fullName: Steeltoe.Common.Expression.ValueExpression<V>.SetValue(Steeltoe.Common.Expression.IEvaluationContext, System.Object, System.Object)
  type: Method
  source:
    remote:
      path: src/Common/src/Common/Expression/ValueExpression.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: SetValue
    path: ../Steeltoe/src/Common/src/Common/Expression/ValueExpression.cs
    startLine: 131
  assemblies:
  - Steeltoe.Common
  namespace: Steeltoe.Common.Expression
  syntax:
    content: public virtual bool SetValue(IEvaluationContext context, object rootObject, object value)
    parameters:
    - id: context
      type: Steeltoe.Common.Expression.IEvaluationContext
    - id: rootObject
      type: System.Object
    - id: value
      type: System.Object
    return:
      type: System.Boolean
    content.vb: Public Overridable Function SetValue(context As IEvaluationContext, rootObject As Object, value As Object) As Boolean
  overload: Steeltoe.Common.Expression.ValueExpression`1.SetValue*
  implements:
  - Steeltoe.Common.Expression.IExpression.SetValue(Steeltoe.Common.Expression.IEvaluationContext,System.Object,System.Object)
  nameWithType.vb: ValueExpression(Of V).SetValue(IEvaluationContext, Object, Object)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Steeltoe.Common.Expression.ValueExpression(Of V).SetValue(Steeltoe.Common.Expression.IEvaluationContext, System.Object, System.Object)
references:
- uid: Steeltoe.Common.Expression
  commentId: N:Steeltoe.Common.Expression
  name: Steeltoe.Common.Expression
  nameWithType: Steeltoe.Common.Expression
  fullName: Steeltoe.Common.Expression
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Steeltoe.Common.Expression.IExpression
  commentId: T:Steeltoe.Common.Expression.IExpression
  parent: Steeltoe.Common.Expression
  name: IExpression
  nameWithType: IExpression
  fullName: Steeltoe.Common.Expression.IExpression
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Steeltoe.Common.Expression.ValueExpression`1.ExpressionString*
  commentId: Overload:Steeltoe.Common.Expression.ValueExpression`1.ExpressionString
  name: ExpressionString
  nameWithType: ValueExpression<V>.ExpressionString
  fullName: Steeltoe.Common.Expression.ValueExpression<V>.ExpressionString
  nameWithType.vb: ValueExpression(Of V).ExpressionString
  fullName.vb: Steeltoe.Common.Expression.ValueExpression(Of V).ExpressionString
- uid: Steeltoe.Common.Expression.IExpression.ExpressionString
  commentId: P:Steeltoe.Common.Expression.IExpression.ExpressionString
  parent: Steeltoe.Common.Expression.IExpression
  name: ExpressionString
  nameWithType: IExpression.ExpressionString
  fullName: Steeltoe.Common.Expression.IExpression.ExpressionString
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Steeltoe.Common.Expression.ValueExpression`1.#ctor*
  commentId: Overload:Steeltoe.Common.Expression.ValueExpression`1.#ctor
  name: ValueExpression
  nameWithType: ValueExpression<V>.ValueExpression
  fullName: Steeltoe.Common.Expression.ValueExpression<V>.ValueExpression
  nameWithType.vb: ValueExpression(Of V).ValueExpression
  fullName.vb: Steeltoe.Common.Expression.ValueExpression(Of V).ValueExpression
- uid: '{V}'
  commentId: '!:V'
  definition: V
  name: V
  nameWithType: V
  fullName: V
- uid: V
  name: V
  nameWithType: V
  fullName: V
- uid: Steeltoe.Common.Expression.ValueExpression`1.GetValue*
  commentId: Overload:Steeltoe.Common.Expression.ValueExpression`1.GetValue
  name: GetValue
  nameWithType: ValueExpression<V>.GetValue
  fullName: Steeltoe.Common.Expression.ValueExpression<V>.GetValue
  nameWithType.vb: ValueExpression(Of V).GetValue
  fullName.vb: Steeltoe.Common.Expression.ValueExpression(Of V).GetValue
- uid: Steeltoe.Common.Expression.IExpression.GetValue
  commentId: M:Steeltoe.Common.Expression.IExpression.GetValue
  parent: Steeltoe.Common.Expression.IExpression
  name: GetValue()
  nameWithType: IExpression.GetValue()
  fullName: Steeltoe.Common.Expression.IExpression.GetValue()
  spec.csharp:
  - uid: Steeltoe.Common.Expression.IExpression.GetValue
    name: GetValue
    nameWithType: IExpression.GetValue
    fullName: Steeltoe.Common.Expression.IExpression.GetValue
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Common.Expression.IExpression.GetValue
    name: GetValue
    nameWithType: IExpression.GetValue
    fullName: Steeltoe.Common.Expression.IExpression.GetValue
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Common.Expression.IExpression.GetValue(System.Type)
  commentId: M:Steeltoe.Common.Expression.IExpression.GetValue(System.Type)
  parent: Steeltoe.Common.Expression.IExpression
  isExternal: true
  name: GetValue(Type)
  nameWithType: IExpression.GetValue(Type)
  fullName: Steeltoe.Common.Expression.IExpression.GetValue(System.Type)
  spec.csharp:
  - uid: Steeltoe.Common.Expression.IExpression.GetValue(System.Type)
    name: GetValue
    nameWithType: IExpression.GetValue
    fullName: Steeltoe.Common.Expression.IExpression.GetValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Common.Expression.IExpression.GetValue(System.Type)
    name: GetValue
    nameWithType: IExpression.GetValue
    fullName: Steeltoe.Common.Expression.IExpression.GetValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: Steeltoe.Common.Expression.IExpression.GetValue``1
  commentId: M:Steeltoe.Common.Expression.IExpression.GetValue``1
  parent: Steeltoe.Common.Expression.IExpression
  name: GetValue<T>()
  nameWithType: IExpression.GetValue<T>()
  fullName: Steeltoe.Common.Expression.IExpression.GetValue<T>()
  nameWithType.vb: IExpression.GetValue(Of T)()
  fullName.vb: Steeltoe.Common.Expression.IExpression.GetValue(Of T)()
  name.vb: GetValue(Of T)()
  spec.csharp:
  - uid: Steeltoe.Common.Expression.IExpression.GetValue``1
    name: GetValue<T>
    nameWithType: IExpression.GetValue<T>
    fullName: Steeltoe.Common.Expression.IExpression.GetValue<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Common.Expression.IExpression.GetValue``1
    name: GetValue(Of T)
    nameWithType: IExpression.GetValue(Of T)
    fullName: Steeltoe.Common.Expression.IExpression.GetValue(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: Steeltoe.Common.Expression.IExpression.GetValue(System.Object)
  commentId: M:Steeltoe.Common.Expression.IExpression.GetValue(System.Object)
  parent: Steeltoe.Common.Expression.IExpression
  isExternal: true
  name: GetValue(Object)
  nameWithType: IExpression.GetValue(Object)
  fullName: Steeltoe.Common.Expression.IExpression.GetValue(System.Object)
  spec.csharp:
  - uid: Steeltoe.Common.Expression.IExpression.GetValue(System.Object)
    name: GetValue
    nameWithType: IExpression.GetValue
    fullName: Steeltoe.Common.Expression.IExpression.GetValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Common.Expression.IExpression.GetValue(System.Object)
    name: GetValue
    nameWithType: IExpression.GetValue
    fullName: Steeltoe.Common.Expression.IExpression.GetValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Common.Expression.IExpression.GetValue(Steeltoe.Common.Expression.IEvaluationContext,System.Type)
  commentId: M:Steeltoe.Common.Expression.IExpression.GetValue(Steeltoe.Common.Expression.IEvaluationContext,System.Type)
  parent: Steeltoe.Common.Expression.IExpression
  isExternal: true
  name: GetValue(IEvaluationContext, Type)
  nameWithType: IExpression.GetValue(IEvaluationContext, Type)
  fullName: Steeltoe.Common.Expression.IExpression.GetValue(Steeltoe.Common.Expression.IEvaluationContext, System.Type)
  spec.csharp:
  - uid: Steeltoe.Common.Expression.IExpression.GetValue(Steeltoe.Common.Expression.IEvaluationContext,System.Type)
    name: GetValue
    nameWithType: IExpression.GetValue
    fullName: Steeltoe.Common.Expression.IExpression.GetValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Common.Expression.IEvaluationContext
    name: IEvaluationContext
    nameWithType: IEvaluationContext
    fullName: Steeltoe.Common.Expression.IEvaluationContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Common.Expression.IExpression.GetValue(Steeltoe.Common.Expression.IEvaluationContext,System.Type)
    name: GetValue
    nameWithType: IExpression.GetValue
    fullName: Steeltoe.Common.Expression.IExpression.GetValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Common.Expression.IEvaluationContext
    name: IEvaluationContext
    nameWithType: IEvaluationContext
    fullName: Steeltoe.Common.Expression.IEvaluationContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Common.Expression.IEvaluationContext
  commentId: T:Steeltoe.Common.Expression.IEvaluationContext
  parent: Steeltoe.Common.Expression
  name: IEvaluationContext
  nameWithType: IEvaluationContext
  fullName: Steeltoe.Common.Expression.IEvaluationContext
- uid: Steeltoe.Common.Expression.IExpression.GetValue(System.Object,System.Type)
  commentId: M:Steeltoe.Common.Expression.IExpression.GetValue(System.Object,System.Type)
  parent: Steeltoe.Common.Expression.IExpression
  isExternal: true
  name: GetValue(Object, Type)
  nameWithType: IExpression.GetValue(Object, Type)
  fullName: Steeltoe.Common.Expression.IExpression.GetValue(System.Object, System.Type)
  spec.csharp:
  - uid: Steeltoe.Common.Expression.IExpression.GetValue(System.Object,System.Type)
    name: GetValue
    nameWithType: IExpression.GetValue
    fullName: Steeltoe.Common.Expression.IExpression.GetValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Common.Expression.IExpression.GetValue(System.Object,System.Type)
    name: GetValue
    nameWithType: IExpression.GetValue
    fullName: Steeltoe.Common.Expression.IExpression.GetValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Common.Expression.IExpression.GetValue``1(System.Object)
  commentId: M:Steeltoe.Common.Expression.IExpression.GetValue``1(System.Object)
  parent: Steeltoe.Common.Expression.IExpression
  isExternal: true
  name: GetValue<T>(Object)
  nameWithType: IExpression.GetValue<T>(Object)
  fullName: Steeltoe.Common.Expression.IExpression.GetValue<T>(System.Object)
  nameWithType.vb: IExpression.GetValue(Of T)(Object)
  fullName.vb: Steeltoe.Common.Expression.IExpression.GetValue(Of T)(System.Object)
  name.vb: GetValue(Of T)(Object)
  spec.csharp:
  - uid: Steeltoe.Common.Expression.IExpression.GetValue``1(System.Object)
    name: GetValue<T>
    nameWithType: IExpression.GetValue<T>
    fullName: Steeltoe.Common.Expression.IExpression.GetValue<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Common.Expression.IExpression.GetValue``1(System.Object)
    name: GetValue(Of T)
    nameWithType: IExpression.GetValue(Of T)
    fullName: Steeltoe.Common.Expression.IExpression.GetValue(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Common.Expression.IExpression.GetValue(Steeltoe.Common.Expression.IEvaluationContext)
  commentId: M:Steeltoe.Common.Expression.IExpression.GetValue(Steeltoe.Common.Expression.IEvaluationContext)
  parent: Steeltoe.Common.Expression.IExpression
  name: GetValue(IEvaluationContext)
  nameWithType: IExpression.GetValue(IEvaluationContext)
  fullName: Steeltoe.Common.Expression.IExpression.GetValue(Steeltoe.Common.Expression.IEvaluationContext)
  spec.csharp:
  - uid: Steeltoe.Common.Expression.IExpression.GetValue(Steeltoe.Common.Expression.IEvaluationContext)
    name: GetValue
    nameWithType: IExpression.GetValue
    fullName: Steeltoe.Common.Expression.IExpression.GetValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Common.Expression.IEvaluationContext
    name: IEvaluationContext
    nameWithType: IEvaluationContext
    fullName: Steeltoe.Common.Expression.IEvaluationContext
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Common.Expression.IExpression.GetValue(Steeltoe.Common.Expression.IEvaluationContext)
    name: GetValue
    nameWithType: IExpression.GetValue
    fullName: Steeltoe.Common.Expression.IExpression.GetValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Common.Expression.IEvaluationContext
    name: IEvaluationContext
    nameWithType: IEvaluationContext
    fullName: Steeltoe.Common.Expression.IEvaluationContext
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Common.Expression.IExpression.GetValue(Steeltoe.Common.Expression.IEvaluationContext,System.Object)
  commentId: M:Steeltoe.Common.Expression.IExpression.GetValue(Steeltoe.Common.Expression.IEvaluationContext,System.Object)
  parent: Steeltoe.Common.Expression.IExpression
  isExternal: true
  name: GetValue(IEvaluationContext, Object)
  nameWithType: IExpression.GetValue(IEvaluationContext, Object)
  fullName: Steeltoe.Common.Expression.IExpression.GetValue(Steeltoe.Common.Expression.IEvaluationContext, System.Object)
  spec.csharp:
  - uid: Steeltoe.Common.Expression.IExpression.GetValue(Steeltoe.Common.Expression.IEvaluationContext,System.Object)
    name: GetValue
    nameWithType: IExpression.GetValue
    fullName: Steeltoe.Common.Expression.IExpression.GetValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Common.Expression.IEvaluationContext
    name: IEvaluationContext
    nameWithType: IEvaluationContext
    fullName: Steeltoe.Common.Expression.IEvaluationContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Common.Expression.IExpression.GetValue(Steeltoe.Common.Expression.IEvaluationContext,System.Object)
    name: GetValue
    nameWithType: IExpression.GetValue
    fullName: Steeltoe.Common.Expression.IExpression.GetValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Common.Expression.IEvaluationContext
    name: IEvaluationContext
    nameWithType: IEvaluationContext
    fullName: Steeltoe.Common.Expression.IEvaluationContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Common.Expression.IExpression.GetValue(Steeltoe.Common.Expression.IEvaluationContext,System.Object,System.Type)
  commentId: M:Steeltoe.Common.Expression.IExpression.GetValue(Steeltoe.Common.Expression.IEvaluationContext,System.Object,System.Type)
  parent: Steeltoe.Common.Expression.IExpression
  isExternal: true
  name: GetValue(IEvaluationContext, Object, Type)
  nameWithType: IExpression.GetValue(IEvaluationContext, Object, Type)
  fullName: Steeltoe.Common.Expression.IExpression.GetValue(Steeltoe.Common.Expression.IEvaluationContext, System.Object, System.Type)
  spec.csharp:
  - uid: Steeltoe.Common.Expression.IExpression.GetValue(Steeltoe.Common.Expression.IEvaluationContext,System.Object,System.Type)
    name: GetValue
    nameWithType: IExpression.GetValue
    fullName: Steeltoe.Common.Expression.IExpression.GetValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Common.Expression.IEvaluationContext
    name: IEvaluationContext
    nameWithType: IEvaluationContext
    fullName: Steeltoe.Common.Expression.IEvaluationContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Common.Expression.IExpression.GetValue(Steeltoe.Common.Expression.IEvaluationContext,System.Object,System.Type)
    name: GetValue
    nameWithType: IExpression.GetValue
    fullName: Steeltoe.Common.Expression.IExpression.GetValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Common.Expression.IEvaluationContext
    name: IEvaluationContext
    nameWithType: IEvaluationContext
    fullName: Steeltoe.Common.Expression.IEvaluationContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Common.Expression.IExpression.GetValue``1(Steeltoe.Common.Expression.IEvaluationContext)
  commentId: M:Steeltoe.Common.Expression.IExpression.GetValue``1(Steeltoe.Common.Expression.IEvaluationContext)
  parent: Steeltoe.Common.Expression.IExpression
  name: GetValue<T>(IEvaluationContext)
  nameWithType: IExpression.GetValue<T>(IEvaluationContext)
  fullName: Steeltoe.Common.Expression.IExpression.GetValue<T>(Steeltoe.Common.Expression.IEvaluationContext)
  nameWithType.vb: IExpression.GetValue(Of T)(IEvaluationContext)
  fullName.vb: Steeltoe.Common.Expression.IExpression.GetValue(Of T)(Steeltoe.Common.Expression.IEvaluationContext)
  name.vb: GetValue(Of T)(IEvaluationContext)
  spec.csharp:
  - uid: Steeltoe.Common.Expression.IExpression.GetValue``1(Steeltoe.Common.Expression.IEvaluationContext)
    name: GetValue<T>
    nameWithType: IExpression.GetValue<T>
    fullName: Steeltoe.Common.Expression.IExpression.GetValue<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Common.Expression.IEvaluationContext
    name: IEvaluationContext
    nameWithType: IEvaluationContext
    fullName: Steeltoe.Common.Expression.IEvaluationContext
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Common.Expression.IExpression.GetValue``1(Steeltoe.Common.Expression.IEvaluationContext)
    name: GetValue(Of T)
    nameWithType: IExpression.GetValue(Of T)
    fullName: Steeltoe.Common.Expression.IExpression.GetValue(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Common.Expression.IEvaluationContext
    name: IEvaluationContext
    nameWithType: IEvaluationContext
    fullName: Steeltoe.Common.Expression.IEvaluationContext
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Common.Expression.IExpression.GetValue``1(Steeltoe.Common.Expression.IEvaluationContext,System.Object)
  commentId: M:Steeltoe.Common.Expression.IExpression.GetValue``1(Steeltoe.Common.Expression.IEvaluationContext,System.Object)
  parent: Steeltoe.Common.Expression.IExpression
  isExternal: true
  name: GetValue<T>(IEvaluationContext, Object)
  nameWithType: IExpression.GetValue<T>(IEvaluationContext, Object)
  fullName: Steeltoe.Common.Expression.IExpression.GetValue<T>(Steeltoe.Common.Expression.IEvaluationContext, System.Object)
  nameWithType.vb: IExpression.GetValue(Of T)(IEvaluationContext, Object)
  fullName.vb: Steeltoe.Common.Expression.IExpression.GetValue(Of T)(Steeltoe.Common.Expression.IEvaluationContext, System.Object)
  name.vb: GetValue(Of T)(IEvaluationContext, Object)
  spec.csharp:
  - uid: Steeltoe.Common.Expression.IExpression.GetValue``1(Steeltoe.Common.Expression.IEvaluationContext,System.Object)
    name: GetValue<T>
    nameWithType: IExpression.GetValue<T>
    fullName: Steeltoe.Common.Expression.IExpression.GetValue<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Common.Expression.IEvaluationContext
    name: IEvaluationContext
    nameWithType: IEvaluationContext
    fullName: Steeltoe.Common.Expression.IEvaluationContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Common.Expression.IExpression.GetValue``1(Steeltoe.Common.Expression.IEvaluationContext,System.Object)
    name: GetValue(Of T)
    nameWithType: IExpression.GetValue(Of T)
    fullName: Steeltoe.Common.Expression.IExpression.GetValue(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Common.Expression.IEvaluationContext
    name: IEvaluationContext
    nameWithType: IEvaluationContext
    fullName: Steeltoe.Common.Expression.IEvaluationContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Common.Expression.ValueExpression`1.GetValueType*
  commentId: Overload:Steeltoe.Common.Expression.ValueExpression`1.GetValueType
  name: GetValueType
  nameWithType: ValueExpression<V>.GetValueType
  fullName: Steeltoe.Common.Expression.ValueExpression<V>.GetValueType
  nameWithType.vb: ValueExpression(Of V).GetValueType
  fullName.vb: Steeltoe.Common.Expression.ValueExpression(Of V).GetValueType
- uid: Steeltoe.Common.Expression.IExpression.GetValueType
  commentId: M:Steeltoe.Common.Expression.IExpression.GetValueType
  parent: Steeltoe.Common.Expression.IExpression
  name: GetValueType()
  nameWithType: IExpression.GetValueType()
  fullName: Steeltoe.Common.Expression.IExpression.GetValueType()
  spec.csharp:
  - uid: Steeltoe.Common.Expression.IExpression.GetValueType
    name: GetValueType
    nameWithType: IExpression.GetValueType
    fullName: Steeltoe.Common.Expression.IExpression.GetValueType
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Common.Expression.IExpression.GetValueType
    name: GetValueType
    nameWithType: IExpression.GetValueType
    fullName: Steeltoe.Common.Expression.IExpression.GetValueType
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Common.Expression.IExpression.GetValueType(System.Object)
  commentId: M:Steeltoe.Common.Expression.IExpression.GetValueType(System.Object)
  parent: Steeltoe.Common.Expression.IExpression
  isExternal: true
  name: GetValueType(Object)
  nameWithType: IExpression.GetValueType(Object)
  fullName: Steeltoe.Common.Expression.IExpression.GetValueType(System.Object)
  spec.csharp:
  - uid: Steeltoe.Common.Expression.IExpression.GetValueType(System.Object)
    name: GetValueType
    nameWithType: IExpression.GetValueType
    fullName: Steeltoe.Common.Expression.IExpression.GetValueType
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Common.Expression.IExpression.GetValueType(System.Object)
    name: GetValueType
    nameWithType: IExpression.GetValueType
    fullName: Steeltoe.Common.Expression.IExpression.GetValueType
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Common.Expression.IExpression.GetValueType(Steeltoe.Common.Expression.IEvaluationContext)
  commentId: M:Steeltoe.Common.Expression.IExpression.GetValueType(Steeltoe.Common.Expression.IEvaluationContext)
  parent: Steeltoe.Common.Expression.IExpression
  name: GetValueType(IEvaluationContext)
  nameWithType: IExpression.GetValueType(IEvaluationContext)
  fullName: Steeltoe.Common.Expression.IExpression.GetValueType(Steeltoe.Common.Expression.IEvaluationContext)
  spec.csharp:
  - uid: Steeltoe.Common.Expression.IExpression.GetValueType(Steeltoe.Common.Expression.IEvaluationContext)
    name: GetValueType
    nameWithType: IExpression.GetValueType
    fullName: Steeltoe.Common.Expression.IExpression.GetValueType
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Common.Expression.IEvaluationContext
    name: IEvaluationContext
    nameWithType: IEvaluationContext
    fullName: Steeltoe.Common.Expression.IEvaluationContext
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Common.Expression.IExpression.GetValueType(Steeltoe.Common.Expression.IEvaluationContext)
    name: GetValueType
    nameWithType: IExpression.GetValueType
    fullName: Steeltoe.Common.Expression.IExpression.GetValueType
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Common.Expression.IEvaluationContext
    name: IEvaluationContext
    nameWithType: IEvaluationContext
    fullName: Steeltoe.Common.Expression.IEvaluationContext
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Common.Expression.IExpression.GetValueType(Steeltoe.Common.Expression.IEvaluationContext,System.Object)
  commentId: M:Steeltoe.Common.Expression.IExpression.GetValueType(Steeltoe.Common.Expression.IEvaluationContext,System.Object)
  parent: Steeltoe.Common.Expression.IExpression
  isExternal: true
  name: GetValueType(IEvaluationContext, Object)
  nameWithType: IExpression.GetValueType(IEvaluationContext, Object)
  fullName: Steeltoe.Common.Expression.IExpression.GetValueType(Steeltoe.Common.Expression.IEvaluationContext, System.Object)
  spec.csharp:
  - uid: Steeltoe.Common.Expression.IExpression.GetValueType(Steeltoe.Common.Expression.IEvaluationContext,System.Object)
    name: GetValueType
    nameWithType: IExpression.GetValueType
    fullName: Steeltoe.Common.Expression.IExpression.GetValueType
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Common.Expression.IEvaluationContext
    name: IEvaluationContext
    nameWithType: IEvaluationContext
    fullName: Steeltoe.Common.Expression.IEvaluationContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Common.Expression.IExpression.GetValueType(Steeltoe.Common.Expression.IEvaluationContext,System.Object)
    name: GetValueType
    nameWithType: IExpression.GetValueType
    fullName: Steeltoe.Common.Expression.IExpression.GetValueType
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Common.Expression.IEvaluationContext
    name: IEvaluationContext
    nameWithType: IEvaluationContext
    fullName: Steeltoe.Common.Expression.IEvaluationContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Common.Expression.ValueExpression`1.IsWritable*
  commentId: Overload:Steeltoe.Common.Expression.ValueExpression`1.IsWritable
  name: IsWritable
  nameWithType: ValueExpression<V>.IsWritable
  fullName: Steeltoe.Common.Expression.ValueExpression<V>.IsWritable
  nameWithType.vb: ValueExpression(Of V).IsWritable
  fullName.vb: Steeltoe.Common.Expression.ValueExpression(Of V).IsWritable
- uid: Steeltoe.Common.Expression.IExpression.IsWritable(System.Object)
  commentId: M:Steeltoe.Common.Expression.IExpression.IsWritable(System.Object)
  parent: Steeltoe.Common.Expression.IExpression
  isExternal: true
  name: IsWritable(Object)
  nameWithType: IExpression.IsWritable(Object)
  fullName: Steeltoe.Common.Expression.IExpression.IsWritable(System.Object)
  spec.csharp:
  - uid: Steeltoe.Common.Expression.IExpression.IsWritable(System.Object)
    name: IsWritable
    nameWithType: IExpression.IsWritable
    fullName: Steeltoe.Common.Expression.IExpression.IsWritable
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Common.Expression.IExpression.IsWritable(System.Object)
    name: IsWritable
    nameWithType: IExpression.IsWritable
    fullName: Steeltoe.Common.Expression.IExpression.IsWritable
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Steeltoe.Common.Expression.IExpression.IsWritable(Steeltoe.Common.Expression.IEvaluationContext)
  commentId: M:Steeltoe.Common.Expression.IExpression.IsWritable(Steeltoe.Common.Expression.IEvaluationContext)
  parent: Steeltoe.Common.Expression.IExpression
  name: IsWritable(IEvaluationContext)
  nameWithType: IExpression.IsWritable(IEvaluationContext)
  fullName: Steeltoe.Common.Expression.IExpression.IsWritable(Steeltoe.Common.Expression.IEvaluationContext)
  spec.csharp:
  - uid: Steeltoe.Common.Expression.IExpression.IsWritable(Steeltoe.Common.Expression.IEvaluationContext)
    name: IsWritable
    nameWithType: IExpression.IsWritable
    fullName: Steeltoe.Common.Expression.IExpression.IsWritable
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Common.Expression.IEvaluationContext
    name: IEvaluationContext
    nameWithType: IEvaluationContext
    fullName: Steeltoe.Common.Expression.IEvaluationContext
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Common.Expression.IExpression.IsWritable(Steeltoe.Common.Expression.IEvaluationContext)
    name: IsWritable
    nameWithType: IExpression.IsWritable
    fullName: Steeltoe.Common.Expression.IExpression.IsWritable
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Common.Expression.IEvaluationContext
    name: IEvaluationContext
    nameWithType: IEvaluationContext
    fullName: Steeltoe.Common.Expression.IEvaluationContext
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Common.Expression.IExpression.IsWritable(Steeltoe.Common.Expression.IEvaluationContext,System.Object)
  commentId: M:Steeltoe.Common.Expression.IExpression.IsWritable(Steeltoe.Common.Expression.IEvaluationContext,System.Object)
  parent: Steeltoe.Common.Expression.IExpression
  isExternal: true
  name: IsWritable(IEvaluationContext, Object)
  nameWithType: IExpression.IsWritable(IEvaluationContext, Object)
  fullName: Steeltoe.Common.Expression.IExpression.IsWritable(Steeltoe.Common.Expression.IEvaluationContext, System.Object)
  spec.csharp:
  - uid: Steeltoe.Common.Expression.IExpression.IsWritable(Steeltoe.Common.Expression.IEvaluationContext,System.Object)
    name: IsWritable
    nameWithType: IExpression.IsWritable
    fullName: Steeltoe.Common.Expression.IExpression.IsWritable
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Common.Expression.IEvaluationContext
    name: IEvaluationContext
    nameWithType: IEvaluationContext
    fullName: Steeltoe.Common.Expression.IEvaluationContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Common.Expression.IExpression.IsWritable(Steeltoe.Common.Expression.IEvaluationContext,System.Object)
    name: IsWritable
    nameWithType: IExpression.IsWritable
    fullName: Steeltoe.Common.Expression.IExpression.IsWritable
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Common.Expression.IEvaluationContext
    name: IEvaluationContext
    nameWithType: IEvaluationContext
    fullName: Steeltoe.Common.Expression.IEvaluationContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Common.Expression.ValueExpression`1.SetValue*
  commentId: Overload:Steeltoe.Common.Expression.ValueExpression`1.SetValue
  name: SetValue
  nameWithType: ValueExpression<V>.SetValue
  fullName: Steeltoe.Common.Expression.ValueExpression<V>.SetValue
  nameWithType.vb: ValueExpression(Of V).SetValue
  fullName.vb: Steeltoe.Common.Expression.ValueExpression(Of V).SetValue
- uid: Steeltoe.Common.Expression.IExpression.SetValue(System.Object,System.Object)
  commentId: M:Steeltoe.Common.Expression.IExpression.SetValue(System.Object,System.Object)
  parent: Steeltoe.Common.Expression.IExpression
  isExternal: true
  name: SetValue(Object, Object)
  nameWithType: IExpression.SetValue(Object, Object)
  fullName: Steeltoe.Common.Expression.IExpression.SetValue(System.Object, System.Object)
  spec.csharp:
  - uid: Steeltoe.Common.Expression.IExpression.SetValue(System.Object,System.Object)
    name: SetValue
    nameWithType: IExpression.SetValue
    fullName: Steeltoe.Common.Expression.IExpression.SetValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Common.Expression.IExpression.SetValue(System.Object,System.Object)
    name: SetValue
    nameWithType: IExpression.SetValue
    fullName: Steeltoe.Common.Expression.IExpression.SetValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Common.Expression.IExpression.SetValue(Steeltoe.Common.Expression.IEvaluationContext,System.Object)
  commentId: M:Steeltoe.Common.Expression.IExpression.SetValue(Steeltoe.Common.Expression.IEvaluationContext,System.Object)
  parent: Steeltoe.Common.Expression.IExpression
  isExternal: true
  name: SetValue(IEvaluationContext, Object)
  nameWithType: IExpression.SetValue(IEvaluationContext, Object)
  fullName: Steeltoe.Common.Expression.IExpression.SetValue(Steeltoe.Common.Expression.IEvaluationContext, System.Object)
  spec.csharp:
  - uid: Steeltoe.Common.Expression.IExpression.SetValue(Steeltoe.Common.Expression.IEvaluationContext,System.Object)
    name: SetValue
    nameWithType: IExpression.SetValue
    fullName: Steeltoe.Common.Expression.IExpression.SetValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Common.Expression.IEvaluationContext
    name: IEvaluationContext
    nameWithType: IEvaluationContext
    fullName: Steeltoe.Common.Expression.IEvaluationContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Common.Expression.IExpression.SetValue(Steeltoe.Common.Expression.IEvaluationContext,System.Object)
    name: SetValue
    nameWithType: IExpression.SetValue
    fullName: Steeltoe.Common.Expression.IExpression.SetValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Common.Expression.IEvaluationContext
    name: IEvaluationContext
    nameWithType: IEvaluationContext
    fullName: Steeltoe.Common.Expression.IEvaluationContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Common.Expression.IExpression.SetValue(Steeltoe.Common.Expression.IEvaluationContext,System.Object,System.Object)
  commentId: M:Steeltoe.Common.Expression.IExpression.SetValue(Steeltoe.Common.Expression.IEvaluationContext,System.Object,System.Object)
  parent: Steeltoe.Common.Expression.IExpression
  isExternal: true
  name: SetValue(IEvaluationContext, Object, Object)
  nameWithType: IExpression.SetValue(IEvaluationContext, Object, Object)
  fullName: Steeltoe.Common.Expression.IExpression.SetValue(Steeltoe.Common.Expression.IEvaluationContext, System.Object, System.Object)
  spec.csharp:
  - uid: Steeltoe.Common.Expression.IExpression.SetValue(Steeltoe.Common.Expression.IEvaluationContext,System.Object,System.Object)
    name: SetValue
    nameWithType: IExpression.SetValue
    fullName: Steeltoe.Common.Expression.IExpression.SetValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Common.Expression.IEvaluationContext
    name: IEvaluationContext
    nameWithType: IEvaluationContext
    fullName: Steeltoe.Common.Expression.IEvaluationContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Common.Expression.IExpression.SetValue(Steeltoe.Common.Expression.IEvaluationContext,System.Object,System.Object)
    name: SetValue
    nameWithType: IExpression.SetValue
    fullName: Steeltoe.Common.Expression.IExpression.SetValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Common.Expression.IEvaluationContext
    name: IEvaluationContext
    nameWithType: IEvaluationContext
    fullName: Steeltoe.Common.Expression.IEvaluationContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
