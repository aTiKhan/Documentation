### YamlMime:ManagedReference
items:
- uid: Steeltoe.Messaging.RabbitMQ.Config.ExchangeBuilder
  commentId: T:Steeltoe.Messaging.RabbitMQ.Config.ExchangeBuilder
  id: ExchangeBuilder
  parent: Steeltoe.Messaging.RabbitMQ.Config
  children:
  - Steeltoe.Messaging.RabbitMQ.Config.ExchangeBuilder.#ctor(System.String,System.String)
  - Steeltoe.Messaging.RabbitMQ.Config.ExchangeBuilder.Admins(System.Object[])
  - Steeltoe.Messaging.RabbitMQ.Config.ExchangeBuilder.Alternate(System.String)
  - Steeltoe.Messaging.RabbitMQ.Config.ExchangeBuilder.AutoDelete
  - Steeltoe.Messaging.RabbitMQ.Config.ExchangeBuilder.Build
  - Steeltoe.Messaging.RabbitMQ.Config.ExchangeBuilder.Create(System.String,System.String)
  - Steeltoe.Messaging.RabbitMQ.Config.ExchangeBuilder.Delayed
  - Steeltoe.Messaging.RabbitMQ.Config.ExchangeBuilder.DirectExchange(System.String)
  - Steeltoe.Messaging.RabbitMQ.Config.ExchangeBuilder.Durable(System.Boolean)
  - Steeltoe.Messaging.RabbitMQ.Config.ExchangeBuilder.FanoutExchange(System.String)
  - Steeltoe.Messaging.RabbitMQ.Config.ExchangeBuilder.HeadersExchange(System.String)
  - Steeltoe.Messaging.RabbitMQ.Config.ExchangeBuilder.IgnoreDeclarationExceptions
  - Steeltoe.Messaging.RabbitMQ.Config.ExchangeBuilder.Internal
  - Steeltoe.Messaging.RabbitMQ.Config.ExchangeBuilder.SuppressDeclaration
  - Steeltoe.Messaging.RabbitMQ.Config.ExchangeBuilder.TopicExchange(System.String)
  - Steeltoe.Messaging.RabbitMQ.Config.ExchangeBuilder.WithArgument(System.String,System.Object)
  - Steeltoe.Messaging.RabbitMQ.Config.ExchangeBuilder.WithArguments(System.Collections.Generic.Dictionary{System.String,System.Object})
  langs:
  - csharp
  - vb
  name: ExchangeBuilder
  nameWithType: ExchangeBuilder
  fullName: Steeltoe.Messaging.RabbitMQ.Config.ExchangeBuilder
  type: Class
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Config/ExchangeBuilder.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: ExchangeBuilder
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Config/ExchangeBuilder.cs
    startLine: 9
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Config
  syntax:
    content: 'public class ExchangeBuilder : AbstractBuilder'
    content.vb: >-
      Public Class ExchangeBuilder

          Inherits AbstractBuilder
  inheritance:
  - System.Object
  - Steeltoe.Messaging.RabbitMQ.Config.AbstractBuilder
  inheritedMembers:
  - Steeltoe.Messaging.RabbitMQ.Config.AbstractBuilder.GetOrCreateArguments
  - Steeltoe.Messaging.RabbitMQ.Config.AbstractBuilder.Arguments
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Steeltoe.Messaging.RabbitMQ.Config.ExchangeBuilder.#ctor(System.String,System.String)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Config.ExchangeBuilder.#ctor(System.String,System.String)
  id: '#ctor(System.String,System.String)'
  parent: Steeltoe.Messaging.RabbitMQ.Config.ExchangeBuilder
  langs:
  - csharp
  - vb
  name: ExchangeBuilder(String, String)
  nameWithType: ExchangeBuilder.ExchangeBuilder(String, String)
  fullName: Steeltoe.Messaging.RabbitMQ.Config.ExchangeBuilder.ExchangeBuilder(System.String, System.String)
  type: Constructor
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Config/ExchangeBuilder.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: .ctor
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Config/ExchangeBuilder.cs
    startLine: 21
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Config
  syntax:
    content: public ExchangeBuilder(string name, string type)
    parameters:
    - id: name
      type: System.String
    - id: type
      type: System.String
    content.vb: Public Sub New(name As String, type As String)
  overload: Steeltoe.Messaging.RabbitMQ.Config.ExchangeBuilder.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Steeltoe.Messaging.RabbitMQ.Config.ExchangeBuilder.DirectExchange(System.String)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Config.ExchangeBuilder.DirectExchange(System.String)
  id: DirectExchange(System.String)
  parent: Steeltoe.Messaging.RabbitMQ.Config.ExchangeBuilder
  langs:
  - csharp
  - vb
  name: DirectExchange(String)
  nameWithType: ExchangeBuilder.DirectExchange(String)
  fullName: Steeltoe.Messaging.RabbitMQ.Config.ExchangeBuilder.DirectExchange(System.String)
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Config/ExchangeBuilder.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: DirectExchange
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Config/ExchangeBuilder.cs
    startLine: 27
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Config
  syntax:
    content: public static ExchangeBuilder DirectExchange(string name)
    parameters:
    - id: name
      type: System.String
    return:
      type: Steeltoe.Messaging.RabbitMQ.Config.ExchangeBuilder
    content.vb: Public Shared Function DirectExchange(name As String) As ExchangeBuilder
  overload: Steeltoe.Messaging.RabbitMQ.Config.ExchangeBuilder.DirectExchange*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Steeltoe.Messaging.RabbitMQ.Config.ExchangeBuilder.TopicExchange(System.String)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Config.ExchangeBuilder.TopicExchange(System.String)
  id: TopicExchange(System.String)
  parent: Steeltoe.Messaging.RabbitMQ.Config.ExchangeBuilder
  langs:
  - csharp
  - vb
  name: TopicExchange(String)
  nameWithType: ExchangeBuilder.TopicExchange(String)
  fullName: Steeltoe.Messaging.RabbitMQ.Config.ExchangeBuilder.TopicExchange(System.String)
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Config/ExchangeBuilder.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: TopicExchange
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Config/ExchangeBuilder.cs
    startLine: 32
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Config
  syntax:
    content: public static ExchangeBuilder TopicExchange(string name)
    parameters:
    - id: name
      type: System.String
    return:
      type: Steeltoe.Messaging.RabbitMQ.Config.ExchangeBuilder
    content.vb: Public Shared Function TopicExchange(name As String) As ExchangeBuilder
  overload: Steeltoe.Messaging.RabbitMQ.Config.ExchangeBuilder.TopicExchange*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Steeltoe.Messaging.RabbitMQ.Config.ExchangeBuilder.FanoutExchange(System.String)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Config.ExchangeBuilder.FanoutExchange(System.String)
  id: FanoutExchange(System.String)
  parent: Steeltoe.Messaging.RabbitMQ.Config.ExchangeBuilder
  langs:
  - csharp
  - vb
  name: FanoutExchange(String)
  nameWithType: ExchangeBuilder.FanoutExchange(String)
  fullName: Steeltoe.Messaging.RabbitMQ.Config.ExchangeBuilder.FanoutExchange(System.String)
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Config/ExchangeBuilder.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: FanoutExchange
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Config/ExchangeBuilder.cs
    startLine: 37
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Config
  syntax:
    content: public static ExchangeBuilder FanoutExchange(string name)
    parameters:
    - id: name
      type: System.String
    return:
      type: Steeltoe.Messaging.RabbitMQ.Config.ExchangeBuilder
    content.vb: Public Shared Function FanoutExchange(name As String) As ExchangeBuilder
  overload: Steeltoe.Messaging.RabbitMQ.Config.ExchangeBuilder.FanoutExchange*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Steeltoe.Messaging.RabbitMQ.Config.ExchangeBuilder.HeadersExchange(System.String)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Config.ExchangeBuilder.HeadersExchange(System.String)
  id: HeadersExchange(System.String)
  parent: Steeltoe.Messaging.RabbitMQ.Config.ExchangeBuilder
  langs:
  - csharp
  - vb
  name: HeadersExchange(String)
  nameWithType: ExchangeBuilder.HeadersExchange(String)
  fullName: Steeltoe.Messaging.RabbitMQ.Config.ExchangeBuilder.HeadersExchange(System.String)
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Config/ExchangeBuilder.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: HeadersExchange
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Config/ExchangeBuilder.cs
    startLine: 42
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Config
  syntax:
    content: public static ExchangeBuilder HeadersExchange(string name)
    parameters:
    - id: name
      type: System.String
    return:
      type: Steeltoe.Messaging.RabbitMQ.Config.ExchangeBuilder
    content.vb: Public Shared Function HeadersExchange(name As String) As ExchangeBuilder
  overload: Steeltoe.Messaging.RabbitMQ.Config.ExchangeBuilder.HeadersExchange*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Steeltoe.Messaging.RabbitMQ.Config.ExchangeBuilder.Create(System.String,System.String)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Config.ExchangeBuilder.Create(System.String,System.String)
  id: Create(System.String,System.String)
  parent: Steeltoe.Messaging.RabbitMQ.Config.ExchangeBuilder
  langs:
  - csharp
  - vb
  name: Create(String, String)
  nameWithType: ExchangeBuilder.Create(String, String)
  fullName: Steeltoe.Messaging.RabbitMQ.Config.ExchangeBuilder.Create(System.String, System.String)
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Config/ExchangeBuilder.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Create
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Config/ExchangeBuilder.cs
    startLine: 47
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Config
  syntax:
    content: public static IExchange Create(string exchangeName, string exchangeType)
    parameters:
    - id: exchangeName
      type: System.String
    - id: exchangeType
      type: System.String
    return:
      type: Steeltoe.Messaging.RabbitMQ.Config.IExchange
    content.vb: Public Shared Function Create(exchangeName As String, exchangeType As String) As IExchange
  overload: Steeltoe.Messaging.RabbitMQ.Config.ExchangeBuilder.Create*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Steeltoe.Messaging.RabbitMQ.Config.ExchangeBuilder.AutoDelete
  commentId: M:Steeltoe.Messaging.RabbitMQ.Config.ExchangeBuilder.AutoDelete
  id: AutoDelete
  parent: Steeltoe.Messaging.RabbitMQ.Config.ExchangeBuilder
  langs:
  - csharp
  - vb
  name: AutoDelete()
  nameWithType: ExchangeBuilder.AutoDelete()
  fullName: Steeltoe.Messaging.RabbitMQ.Config.ExchangeBuilder.AutoDelete()
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Config/ExchangeBuilder.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: AutoDelete
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Config/ExchangeBuilder.cs
    startLine: 71
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Config
  syntax:
    content: public ExchangeBuilder AutoDelete()
    return:
      type: Steeltoe.Messaging.RabbitMQ.Config.ExchangeBuilder
    content.vb: Public Function AutoDelete As ExchangeBuilder
  overload: Steeltoe.Messaging.RabbitMQ.Config.ExchangeBuilder.AutoDelete*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Steeltoe.Messaging.RabbitMQ.Config.ExchangeBuilder.Durable(System.Boolean)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Config.ExchangeBuilder.Durable(System.Boolean)
  id: Durable(System.Boolean)
  parent: Steeltoe.Messaging.RabbitMQ.Config.ExchangeBuilder
  langs:
  - csharp
  - vb
  name: Durable(Boolean)
  nameWithType: ExchangeBuilder.Durable(Boolean)
  fullName: Steeltoe.Messaging.RabbitMQ.Config.ExchangeBuilder.Durable(System.Boolean)
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Config/ExchangeBuilder.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Durable
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Config/ExchangeBuilder.cs
    startLine: 77
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Config
  syntax:
    content: public ExchangeBuilder Durable(bool isDurable)
    parameters:
    - id: isDurable
      type: System.Boolean
    return:
      type: Steeltoe.Messaging.RabbitMQ.Config.ExchangeBuilder
    content.vb: Public Function Durable(isDurable As Boolean) As ExchangeBuilder
  overload: Steeltoe.Messaging.RabbitMQ.Config.ExchangeBuilder.Durable*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Steeltoe.Messaging.RabbitMQ.Config.ExchangeBuilder.WithArgument(System.String,System.Object)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Config.ExchangeBuilder.WithArgument(System.String,System.Object)
  id: WithArgument(System.String,System.Object)
  parent: Steeltoe.Messaging.RabbitMQ.Config.ExchangeBuilder
  langs:
  - csharp
  - vb
  name: WithArgument(String, Object)
  nameWithType: ExchangeBuilder.WithArgument(String, Object)
  fullName: Steeltoe.Messaging.RabbitMQ.Config.ExchangeBuilder.WithArgument(System.String, System.Object)
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Config/ExchangeBuilder.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: WithArgument
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Config/ExchangeBuilder.cs
    startLine: 83
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Config
  syntax:
    content: public ExchangeBuilder WithArgument(string key, object value)
    parameters:
    - id: key
      type: System.String
    - id: value
      type: System.Object
    return:
      type: Steeltoe.Messaging.RabbitMQ.Config.ExchangeBuilder
    content.vb: Public Function WithArgument(key As String, value As Object) As ExchangeBuilder
  overload: Steeltoe.Messaging.RabbitMQ.Config.ExchangeBuilder.WithArgument*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Steeltoe.Messaging.RabbitMQ.Config.ExchangeBuilder.WithArguments(System.Collections.Generic.Dictionary{System.String,System.Object})
  commentId: M:Steeltoe.Messaging.RabbitMQ.Config.ExchangeBuilder.WithArguments(System.Collections.Generic.Dictionary{System.String,System.Object})
  id: WithArguments(System.Collections.Generic.Dictionary{System.String,System.Object})
  parent: Steeltoe.Messaging.RabbitMQ.Config.ExchangeBuilder
  langs:
  - csharp
  - vb
  name: WithArguments(Dictionary<String, Object>)
  nameWithType: ExchangeBuilder.WithArguments(Dictionary<String, Object>)
  fullName: Steeltoe.Messaging.RabbitMQ.Config.ExchangeBuilder.WithArguments(System.Collections.Generic.Dictionary<System.String, System.Object>)
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Config/ExchangeBuilder.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: WithArguments
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Config/ExchangeBuilder.cs
    startLine: 89
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Config
  syntax:
    content: public ExchangeBuilder WithArguments(Dictionary<string, object> arguments)
    parameters:
    - id: arguments
      type: System.Collections.Generic.Dictionary{System.String,System.Object}
    return:
      type: Steeltoe.Messaging.RabbitMQ.Config.ExchangeBuilder
    content.vb: Public Function WithArguments(arguments As Dictionary(Of String, Object)) As ExchangeBuilder
  overload: Steeltoe.Messaging.RabbitMQ.Config.ExchangeBuilder.WithArguments*
  nameWithType.vb: ExchangeBuilder.WithArguments(Dictionary(Of String, Object))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Steeltoe.Messaging.RabbitMQ.Config.ExchangeBuilder.WithArguments(System.Collections.Generic.Dictionary(Of System.String, System.Object))
  name.vb: WithArguments(Dictionary(Of String, Object))
- uid: Steeltoe.Messaging.RabbitMQ.Config.ExchangeBuilder.Alternate(System.String)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Config.ExchangeBuilder.Alternate(System.String)
  id: Alternate(System.String)
  parent: Steeltoe.Messaging.RabbitMQ.Config.ExchangeBuilder
  langs:
  - csharp
  - vb
  name: Alternate(String)
  nameWithType: ExchangeBuilder.Alternate(String)
  fullName: Steeltoe.Messaging.RabbitMQ.Config.ExchangeBuilder.Alternate(System.String)
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Config/ExchangeBuilder.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Alternate
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Config/ExchangeBuilder.cs
    startLine: 100
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Config
  syntax:
    content: public ExchangeBuilder Alternate(string exchange)
    parameters:
    - id: exchange
      type: System.String
    return:
      type: Steeltoe.Messaging.RabbitMQ.Config.ExchangeBuilder
    content.vb: Public Function Alternate(exchange As String) As ExchangeBuilder
  overload: Steeltoe.Messaging.RabbitMQ.Config.ExchangeBuilder.Alternate*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Steeltoe.Messaging.RabbitMQ.Config.ExchangeBuilder.Internal
  commentId: M:Steeltoe.Messaging.RabbitMQ.Config.ExchangeBuilder.Internal
  id: Internal
  parent: Steeltoe.Messaging.RabbitMQ.Config.ExchangeBuilder
  langs:
  - csharp
  - vb
  name: Internal()
  nameWithType: ExchangeBuilder.Internal()
  fullName: Steeltoe.Messaging.RabbitMQ.Config.ExchangeBuilder.Internal()
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Config/ExchangeBuilder.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Internal
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Config/ExchangeBuilder.cs
    startLine: 105
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Config
  syntax:
    content: public ExchangeBuilder Internal()
    return:
      type: Steeltoe.Messaging.RabbitMQ.Config.ExchangeBuilder
    content.vb: Public Function Internal As ExchangeBuilder
  overload: Steeltoe.Messaging.RabbitMQ.Config.ExchangeBuilder.Internal*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Steeltoe.Messaging.RabbitMQ.Config.ExchangeBuilder.Delayed
  commentId: M:Steeltoe.Messaging.RabbitMQ.Config.ExchangeBuilder.Delayed
  id: Delayed
  parent: Steeltoe.Messaging.RabbitMQ.Config.ExchangeBuilder
  langs:
  - csharp
  - vb
  name: Delayed()
  nameWithType: ExchangeBuilder.Delayed()
  fullName: Steeltoe.Messaging.RabbitMQ.Config.ExchangeBuilder.Delayed()
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Config/ExchangeBuilder.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Delayed
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Config/ExchangeBuilder.cs
    startLine: 111
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Config
  syntax:
    content: public ExchangeBuilder Delayed()
    return:
      type: Steeltoe.Messaging.RabbitMQ.Config.ExchangeBuilder
    content.vb: Public Function Delayed As ExchangeBuilder
  overload: Steeltoe.Messaging.RabbitMQ.Config.ExchangeBuilder.Delayed*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Steeltoe.Messaging.RabbitMQ.Config.ExchangeBuilder.IgnoreDeclarationExceptions
  commentId: M:Steeltoe.Messaging.RabbitMQ.Config.ExchangeBuilder.IgnoreDeclarationExceptions
  id: IgnoreDeclarationExceptions
  parent: Steeltoe.Messaging.RabbitMQ.Config.ExchangeBuilder
  langs:
  - csharp
  - vb
  name: IgnoreDeclarationExceptions()
  nameWithType: ExchangeBuilder.IgnoreDeclarationExceptions()
  fullName: Steeltoe.Messaging.RabbitMQ.Config.ExchangeBuilder.IgnoreDeclarationExceptions()
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Config/ExchangeBuilder.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: IgnoreDeclarationExceptions
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Config/ExchangeBuilder.cs
    startLine: 117
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Config
  syntax:
    content: public ExchangeBuilder IgnoreDeclarationExceptions()
    return:
      type: Steeltoe.Messaging.RabbitMQ.Config.ExchangeBuilder
    content.vb: Public Function IgnoreDeclarationExceptions As ExchangeBuilder
  overload: Steeltoe.Messaging.RabbitMQ.Config.ExchangeBuilder.IgnoreDeclarationExceptions*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Steeltoe.Messaging.RabbitMQ.Config.ExchangeBuilder.SuppressDeclaration
  commentId: M:Steeltoe.Messaging.RabbitMQ.Config.ExchangeBuilder.SuppressDeclaration
  id: SuppressDeclaration
  parent: Steeltoe.Messaging.RabbitMQ.Config.ExchangeBuilder
  langs:
  - csharp
  - vb
  name: SuppressDeclaration()
  nameWithType: ExchangeBuilder.SuppressDeclaration()
  fullName: Steeltoe.Messaging.RabbitMQ.Config.ExchangeBuilder.SuppressDeclaration()
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Config/ExchangeBuilder.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: SuppressDeclaration
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Config/ExchangeBuilder.cs
    startLine: 123
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Config
  syntax:
    content: public ExchangeBuilder SuppressDeclaration()
    return:
      type: Steeltoe.Messaging.RabbitMQ.Config.ExchangeBuilder
    content.vb: Public Function SuppressDeclaration As ExchangeBuilder
  overload: Steeltoe.Messaging.RabbitMQ.Config.ExchangeBuilder.SuppressDeclaration*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Steeltoe.Messaging.RabbitMQ.Config.ExchangeBuilder.Admins(System.Object[])
  commentId: M:Steeltoe.Messaging.RabbitMQ.Config.ExchangeBuilder.Admins(System.Object[])
  id: Admins(System.Object[])
  parent: Steeltoe.Messaging.RabbitMQ.Config.ExchangeBuilder
  langs:
  - csharp
  - vb
  name: Admins(Object[])
  nameWithType: ExchangeBuilder.Admins(Object[])
  fullName: Steeltoe.Messaging.RabbitMQ.Config.ExchangeBuilder.Admins(System.Object[])
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Config/ExchangeBuilder.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Admins
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Config/ExchangeBuilder.cs
    startLine: 129
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Config
  syntax:
    content: public ExchangeBuilder Admins(params object[] admins)
    parameters:
    - id: admins
      type: System.Object[]
    return:
      type: Steeltoe.Messaging.RabbitMQ.Config.ExchangeBuilder
    content.vb: Public Function Admins(ParamArray admins As Object()) As ExchangeBuilder
  overload: Steeltoe.Messaging.RabbitMQ.Config.ExchangeBuilder.Admins*
  nameWithType.vb: ExchangeBuilder.Admins(Object())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Steeltoe.Messaging.RabbitMQ.Config.ExchangeBuilder.Admins(System.Object())
  name.vb: Admins(Object())
- uid: Steeltoe.Messaging.RabbitMQ.Config.ExchangeBuilder.Build
  commentId: M:Steeltoe.Messaging.RabbitMQ.Config.ExchangeBuilder.Build
  id: Build
  parent: Steeltoe.Messaging.RabbitMQ.Config.ExchangeBuilder
  langs:
  - csharp
  - vb
  name: Build()
  nameWithType: ExchangeBuilder.Build()
  fullName: Steeltoe.Messaging.RabbitMQ.Config.ExchangeBuilder.Build()
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Config/ExchangeBuilder.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Build
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Config/ExchangeBuilder.cs
    startLine: 148
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Config
  syntax:
    content: public AbstractExchange Build()
    return:
      type: Steeltoe.Messaging.RabbitMQ.Config.AbstractExchange
    content.vb: Public Function Build As AbstractExchange
  overload: Steeltoe.Messaging.RabbitMQ.Config.ExchangeBuilder.Build*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Steeltoe.Messaging.RabbitMQ.Config
  commentId: N:Steeltoe.Messaging.RabbitMQ.Config
  name: Steeltoe.Messaging.RabbitMQ.Config
  nameWithType: Steeltoe.Messaging.RabbitMQ.Config
  fullName: Steeltoe.Messaging.RabbitMQ.Config
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Steeltoe.Messaging.RabbitMQ.Config.AbstractBuilder
  commentId: T:Steeltoe.Messaging.RabbitMQ.Config.AbstractBuilder
  parent: Steeltoe.Messaging.RabbitMQ.Config
  name: AbstractBuilder
  nameWithType: AbstractBuilder
  fullName: Steeltoe.Messaging.RabbitMQ.Config.AbstractBuilder
- uid: Steeltoe.Messaging.RabbitMQ.Config.AbstractBuilder.GetOrCreateArguments
  commentId: M:Steeltoe.Messaging.RabbitMQ.Config.AbstractBuilder.GetOrCreateArguments
  parent: Steeltoe.Messaging.RabbitMQ.Config.AbstractBuilder
  name: GetOrCreateArguments()
  nameWithType: AbstractBuilder.GetOrCreateArguments()
  fullName: Steeltoe.Messaging.RabbitMQ.Config.AbstractBuilder.GetOrCreateArguments()
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Config.AbstractBuilder.GetOrCreateArguments
    name: GetOrCreateArguments
    nameWithType: AbstractBuilder.GetOrCreateArguments
    fullName: Steeltoe.Messaging.RabbitMQ.Config.AbstractBuilder.GetOrCreateArguments
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Config.AbstractBuilder.GetOrCreateArguments
    name: GetOrCreateArguments
    nameWithType: AbstractBuilder.GetOrCreateArguments
    fullName: Steeltoe.Messaging.RabbitMQ.Config.AbstractBuilder.GetOrCreateArguments
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Config.AbstractBuilder.Arguments
  commentId: P:Steeltoe.Messaging.RabbitMQ.Config.AbstractBuilder.Arguments
  parent: Steeltoe.Messaging.RabbitMQ.Config.AbstractBuilder
  name: Arguments
  nameWithType: AbstractBuilder.Arguments
  fullName: Steeltoe.Messaging.RabbitMQ.Config.AbstractBuilder.Arguments
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Steeltoe.Messaging.RabbitMQ.Config.ExchangeBuilder.#ctor*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Config.ExchangeBuilder.#ctor
  name: ExchangeBuilder
  nameWithType: ExchangeBuilder.ExchangeBuilder
  fullName: Steeltoe.Messaging.RabbitMQ.Config.ExchangeBuilder.ExchangeBuilder
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Steeltoe.Messaging.RabbitMQ.Config.ExchangeBuilder.DirectExchange*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Config.ExchangeBuilder.DirectExchange
  name: DirectExchange
  nameWithType: ExchangeBuilder.DirectExchange
  fullName: Steeltoe.Messaging.RabbitMQ.Config.ExchangeBuilder.DirectExchange
- uid: Steeltoe.Messaging.RabbitMQ.Config.ExchangeBuilder
  commentId: T:Steeltoe.Messaging.RabbitMQ.Config.ExchangeBuilder
  parent: Steeltoe.Messaging.RabbitMQ.Config
  name: ExchangeBuilder
  nameWithType: ExchangeBuilder
  fullName: Steeltoe.Messaging.RabbitMQ.Config.ExchangeBuilder
- uid: Steeltoe.Messaging.RabbitMQ.Config.ExchangeBuilder.TopicExchange*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Config.ExchangeBuilder.TopicExchange
  name: TopicExchange
  nameWithType: ExchangeBuilder.TopicExchange
  fullName: Steeltoe.Messaging.RabbitMQ.Config.ExchangeBuilder.TopicExchange
- uid: Steeltoe.Messaging.RabbitMQ.Config.ExchangeBuilder.FanoutExchange*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Config.ExchangeBuilder.FanoutExchange
  name: FanoutExchange
  nameWithType: ExchangeBuilder.FanoutExchange
  fullName: Steeltoe.Messaging.RabbitMQ.Config.ExchangeBuilder.FanoutExchange
- uid: Steeltoe.Messaging.RabbitMQ.Config.ExchangeBuilder.HeadersExchange*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Config.ExchangeBuilder.HeadersExchange
  name: HeadersExchange
  nameWithType: ExchangeBuilder.HeadersExchange
  fullName: Steeltoe.Messaging.RabbitMQ.Config.ExchangeBuilder.HeadersExchange
- uid: Steeltoe.Messaging.RabbitMQ.Config.ExchangeBuilder.Create*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Config.ExchangeBuilder.Create
  name: Create
  nameWithType: ExchangeBuilder.Create
  fullName: Steeltoe.Messaging.RabbitMQ.Config.ExchangeBuilder.Create
- uid: Steeltoe.Messaging.RabbitMQ.Config.IExchange
  commentId: T:Steeltoe.Messaging.RabbitMQ.Config.IExchange
  parent: Steeltoe.Messaging.RabbitMQ.Config
  name: IExchange
  nameWithType: IExchange
  fullName: Steeltoe.Messaging.RabbitMQ.Config.IExchange
- uid: Steeltoe.Messaging.RabbitMQ.Config.ExchangeBuilder.AutoDelete*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Config.ExchangeBuilder.AutoDelete
  name: AutoDelete
  nameWithType: ExchangeBuilder.AutoDelete
  fullName: Steeltoe.Messaging.RabbitMQ.Config.ExchangeBuilder.AutoDelete
- uid: Steeltoe.Messaging.RabbitMQ.Config.ExchangeBuilder.Durable*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Config.ExchangeBuilder.Durable
  name: Durable
  nameWithType: ExchangeBuilder.Durable
  fullName: Steeltoe.Messaging.RabbitMQ.Config.ExchangeBuilder.Durable
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Steeltoe.Messaging.RabbitMQ.Config.ExchangeBuilder.WithArgument*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Config.ExchangeBuilder.WithArgument
  name: WithArgument
  nameWithType: ExchangeBuilder.WithArgument
  fullName: Steeltoe.Messaging.RabbitMQ.Config.ExchangeBuilder.WithArgument
- uid: Steeltoe.Messaging.RabbitMQ.Config.ExchangeBuilder.WithArguments*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Config.ExchangeBuilder.WithArguments
  name: WithArguments
  nameWithType: ExchangeBuilder.WithArguments
  fullName: Steeltoe.Messaging.RabbitMQ.Config.ExchangeBuilder.WithArguments
- uid: System.Collections.Generic.Dictionary{System.String,System.Object}
  commentId: T:System.Collections.Generic.Dictionary{System.String,System.Object}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  name: Dictionary<String, Object>
  nameWithType: Dictionary<String, Object>
  fullName: System.Collections.Generic.Dictionary<System.String, System.Object>
  nameWithType.vb: Dictionary(Of String, Object)
  fullName.vb: System.Collections.Generic.Dictionary(Of System.String, System.Object)
  name.vb: Dictionary(Of String, Object)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Dictionary`2
  commentId: T:System.Collections.Generic.Dictionary`2
  isExternal: true
  name: Dictionary<TKey, TValue>
  nameWithType: Dictionary<TKey, TValue>
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>
  nameWithType.vb: Dictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue)
  name.vb: Dictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Steeltoe.Messaging.RabbitMQ.Config.ExchangeBuilder.Alternate*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Config.ExchangeBuilder.Alternate
  name: Alternate
  nameWithType: ExchangeBuilder.Alternate
  fullName: Steeltoe.Messaging.RabbitMQ.Config.ExchangeBuilder.Alternate
- uid: Steeltoe.Messaging.RabbitMQ.Config.ExchangeBuilder.Internal*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Config.ExchangeBuilder.Internal
  name: Internal
  nameWithType: ExchangeBuilder.Internal
  fullName: Steeltoe.Messaging.RabbitMQ.Config.ExchangeBuilder.Internal
- uid: Steeltoe.Messaging.RabbitMQ.Config.ExchangeBuilder.Delayed*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Config.ExchangeBuilder.Delayed
  name: Delayed
  nameWithType: ExchangeBuilder.Delayed
  fullName: Steeltoe.Messaging.RabbitMQ.Config.ExchangeBuilder.Delayed
- uid: Steeltoe.Messaging.RabbitMQ.Config.ExchangeBuilder.IgnoreDeclarationExceptions*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Config.ExchangeBuilder.IgnoreDeclarationExceptions
  name: IgnoreDeclarationExceptions
  nameWithType: ExchangeBuilder.IgnoreDeclarationExceptions
  fullName: Steeltoe.Messaging.RabbitMQ.Config.ExchangeBuilder.IgnoreDeclarationExceptions
- uid: Steeltoe.Messaging.RabbitMQ.Config.ExchangeBuilder.SuppressDeclaration*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Config.ExchangeBuilder.SuppressDeclaration
  name: SuppressDeclaration
  nameWithType: ExchangeBuilder.SuppressDeclaration
  fullName: Steeltoe.Messaging.RabbitMQ.Config.ExchangeBuilder.SuppressDeclaration
- uid: Steeltoe.Messaging.RabbitMQ.Config.ExchangeBuilder.Admins*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Config.ExchangeBuilder.Admins
  name: Admins
  nameWithType: ExchangeBuilder.Admins
  fullName: Steeltoe.Messaging.RabbitMQ.Config.ExchangeBuilder.Admins
- uid: System.Object[]
  isExternal: true
  name: Object[]
  nameWithType: Object[]
  fullName: System.Object[]
  nameWithType.vb: Object()
  fullName.vb: System.Object()
  name.vb: Object()
  spec.csharp:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Steeltoe.Messaging.RabbitMQ.Config.ExchangeBuilder.Build*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Config.ExchangeBuilder.Build
  name: Build
  nameWithType: ExchangeBuilder.Build
  fullName: Steeltoe.Messaging.RabbitMQ.Config.ExchangeBuilder.Build
- uid: Steeltoe.Messaging.RabbitMQ.Config.AbstractExchange
  commentId: T:Steeltoe.Messaging.RabbitMQ.Config.AbstractExchange
  parent: Steeltoe.Messaging.RabbitMQ.Config
  name: AbstractExchange
  nameWithType: AbstractExchange
  fullName: Steeltoe.Messaging.RabbitMQ.Config.AbstractExchange
