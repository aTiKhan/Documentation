### YamlMime:ManagedReference
items:
- uid: Steeltoe.Messaging.Handler.HandlerMethod
  commentId: T:Steeltoe.Messaging.Handler.HandlerMethod
  id: HandlerMethod
  parent: Steeltoe.Messaging.Handler
  children:
  - Steeltoe.Messaging.Handler.HandlerMethod.#ctor(Steeltoe.Messaging.Handler.HandlerMethod)
  - Steeltoe.Messaging.Handler.HandlerMethod.#ctor(System.Object,System.Reflection.MethodInfo)
  - Steeltoe.Messaging.Handler.HandlerMethod.#ctor(System.Object,System.String,System.Type[])
  - Steeltoe.Messaging.Handler.HandlerMethod.AssertTargetBean(System.Reflection.MethodInfo,System.Object,System.Object[])
  - Steeltoe.Messaging.Handler.HandlerMethod.bean
  - Steeltoe.Messaging.Handler.HandlerMethod.Bean
  - Steeltoe.Messaging.Handler.HandlerMethod.beanType
  - Steeltoe.Messaging.Handler.HandlerMethod.BeanType
  - Steeltoe.Messaging.Handler.HandlerMethod.CreateWithResolvedBean
  - Steeltoe.Messaging.Handler.HandlerMethod.FindProvidedArgument(System.Reflection.ParameterInfo,System.Object[])
  - Steeltoe.Messaging.Handler.HandlerMethod.FormatArgumentError(System.Reflection.ParameterInfo,System.String)
  - Steeltoe.Messaging.Handler.HandlerMethod.FormatInvokeError(System.String,System.Object[])
  - Steeltoe.Messaging.Handler.HandlerMethod.IsVoid
  - Steeltoe.Messaging.Handler.HandlerMethod.method
  - Steeltoe.Messaging.Handler.HandlerMethod.Method
  - Steeltoe.Messaging.Handler.HandlerMethod.MethodParameters
  - Steeltoe.Messaging.Handler.HandlerMethod.ResolvedFromHandlerMethod
  - Steeltoe.Messaging.Handler.HandlerMethod.ReturnType
  - Steeltoe.Messaging.Handler.HandlerMethod.ShortLogMessage
  langs:
  - csharp
  - vb
  name: HandlerMethod
  nameWithType: HandlerMethod
  fullName: Steeltoe.Messaging.Handler.HandlerMethod
  type: Class
  source:
    remote:
      path: src/Messaging/src/MessagingBase/Handler/HandlerMethod.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: HandlerMethod
    path: ../Steeltoe/src/Messaging/src/MessagingBase/Handler/HandlerMethod.cs
    startLine: 11
  assemblies:
  - Steeltoe.Messaging.MessagingBase
  namespace: Steeltoe.Messaging.Handler
  syntax:
    content: public class HandlerMethod
    content.vb: Public Class HandlerMethod
  inheritance:
  - System.Object
  derivedClasses:
  - Steeltoe.Messaging.Handler.Invocation.InvocableHandlerMethod
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Steeltoe.Messaging.Handler.HandlerMethod.bean
  commentId: F:Steeltoe.Messaging.Handler.HandlerMethod.bean
  id: bean
  parent: Steeltoe.Messaging.Handler.HandlerMethod
  langs:
  - csharp
  - vb
  name: bean
  nameWithType: HandlerMethod.bean
  fullName: Steeltoe.Messaging.Handler.HandlerMethod.bean
  type: Field
  source:
    remote:
      path: src/Messaging/src/MessagingBase/Handler/HandlerMethod.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: bean
    path: ../Steeltoe/src/Messaging/src/MessagingBase/Handler/HandlerMethod.cs
    startLine: 13
  assemblies:
  - Steeltoe.Messaging.MessagingBase
  namespace: Steeltoe.Messaging.Handler
  syntax:
    content: protected readonly object bean
    return:
      type: System.Object
    content.vb: Protected ReadOnly bean As Object
  modifiers.csharp:
  - protected
  - readonly
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: Steeltoe.Messaging.Handler.HandlerMethod.method
  commentId: F:Steeltoe.Messaging.Handler.HandlerMethod.method
  id: method
  parent: Steeltoe.Messaging.Handler.HandlerMethod
  langs:
  - csharp
  - vb
  name: method
  nameWithType: HandlerMethod.method
  fullName: Steeltoe.Messaging.Handler.HandlerMethod.method
  type: Field
  source:
    remote:
      path: src/Messaging/src/MessagingBase/Handler/HandlerMethod.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: method
    path: ../Steeltoe/src/Messaging/src/MessagingBase/Handler/HandlerMethod.cs
    startLine: 14
  assemblies:
  - Steeltoe.Messaging.MessagingBase
  namespace: Steeltoe.Messaging.Handler
  syntax:
    content: protected readonly MethodInfo method
    return:
      type: System.Reflection.MethodInfo
    content.vb: Protected ReadOnly method As MethodInfo
  modifiers.csharp:
  - protected
  - readonly
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: Steeltoe.Messaging.Handler.HandlerMethod.beanType
  commentId: F:Steeltoe.Messaging.Handler.HandlerMethod.beanType
  id: beanType
  parent: Steeltoe.Messaging.Handler.HandlerMethod
  langs:
  - csharp
  - vb
  name: beanType
  nameWithType: HandlerMethod.beanType
  fullName: Steeltoe.Messaging.Handler.HandlerMethod.beanType
  type: Field
  source:
    remote:
      path: src/Messaging/src/MessagingBase/Handler/HandlerMethod.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: beanType
    path: ../Steeltoe/src/Messaging/src/MessagingBase/Handler/HandlerMethod.cs
    startLine: 15
  assemblies:
  - Steeltoe.Messaging.MessagingBase
  namespace: Steeltoe.Messaging.Handler
  syntax:
    content: protected readonly Type beanType
    return:
      type: System.Type
    content.vb: Protected ReadOnly beanType As Type
  modifiers.csharp:
  - protected
  - readonly
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: Steeltoe.Messaging.Handler.HandlerMethod.Bean
  commentId: P:Steeltoe.Messaging.Handler.HandlerMethod.Bean
  id: Bean
  parent: Steeltoe.Messaging.Handler.HandlerMethod
  langs:
  - csharp
  - vb
  name: Bean
  nameWithType: HandlerMethod.Bean
  fullName: Steeltoe.Messaging.Handler.HandlerMethod.Bean
  type: Property
  source:
    remote:
      path: src/Messaging/src/MessagingBase/Handler/HandlerMethod.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Bean
    path: ../Steeltoe/src/Messaging/src/MessagingBase/Handler/HandlerMethod.cs
    startLine: 17
  assemblies:
  - Steeltoe.Messaging.MessagingBase
  namespace: Steeltoe.Messaging.Handler
  syntax:
    content: public object Bean { get; }
    parameters: []
    return:
      type: System.Object
    content.vb: Public ReadOnly Property Bean As Object
  overload: Steeltoe.Messaging.Handler.HandlerMethod.Bean*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Steeltoe.Messaging.Handler.HandlerMethod.Method
  commentId: P:Steeltoe.Messaging.Handler.HandlerMethod.Method
  id: Method
  parent: Steeltoe.Messaging.Handler.HandlerMethod
  langs:
  - csharp
  - vb
  name: Method
  nameWithType: HandlerMethod.Method
  fullName: Steeltoe.Messaging.Handler.HandlerMethod.Method
  type: Property
  source:
    remote:
      path: src/Messaging/src/MessagingBase/Handler/HandlerMethod.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Method
    path: ../Steeltoe/src/Messaging/src/MessagingBase/Handler/HandlerMethod.cs
    startLine: 22
  assemblies:
  - Steeltoe.Messaging.MessagingBase
  namespace: Steeltoe.Messaging.Handler
  syntax:
    content: public MethodInfo Method { get; }
    parameters: []
    return:
      type: System.Reflection.MethodInfo
    content.vb: Public ReadOnly Property Method As MethodInfo
  overload: Steeltoe.Messaging.Handler.HandlerMethod.Method*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Steeltoe.Messaging.Handler.HandlerMethod.BeanType
  commentId: P:Steeltoe.Messaging.Handler.HandlerMethod.BeanType
  id: BeanType
  parent: Steeltoe.Messaging.Handler.HandlerMethod
  langs:
  - csharp
  - vb
  name: BeanType
  nameWithType: HandlerMethod.BeanType
  fullName: Steeltoe.Messaging.Handler.HandlerMethod.BeanType
  type: Property
  source:
    remote:
      path: src/Messaging/src/MessagingBase/Handler/HandlerMethod.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: BeanType
    path: ../Steeltoe/src/Messaging/src/MessagingBase/Handler/HandlerMethod.cs
    startLine: 27
  assemblies:
  - Steeltoe.Messaging.MessagingBase
  namespace: Steeltoe.Messaging.Handler
  syntax:
    content: public Type BeanType { get; }
    parameters: []
    return:
      type: System.Type
    content.vb: Public ReadOnly Property BeanType As Type
  overload: Steeltoe.Messaging.Handler.HandlerMethod.BeanType*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Steeltoe.Messaging.Handler.HandlerMethod.ResolvedFromHandlerMethod
  commentId: P:Steeltoe.Messaging.Handler.HandlerMethod.ResolvedFromHandlerMethod
  id: ResolvedFromHandlerMethod
  parent: Steeltoe.Messaging.Handler.HandlerMethod
  langs:
  - csharp
  - vb
  name: ResolvedFromHandlerMethod
  nameWithType: HandlerMethod.ResolvedFromHandlerMethod
  fullName: Steeltoe.Messaging.Handler.HandlerMethod.ResolvedFromHandlerMethod
  type: Property
  source:
    remote:
      path: src/Messaging/src/MessagingBase/Handler/HandlerMethod.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: ResolvedFromHandlerMethod
    path: ../Steeltoe/src/Messaging/src/MessagingBase/Handler/HandlerMethod.cs
    startLine: 32
  assemblies:
  - Steeltoe.Messaging.MessagingBase
  namespace: Steeltoe.Messaging.Handler
  syntax:
    content: public HandlerMethod ResolvedFromHandlerMethod { get; }
    parameters: []
    return:
      type: Steeltoe.Messaging.Handler.HandlerMethod
    content.vb: Public ReadOnly Property ResolvedFromHandlerMethod As HandlerMethod
  overload: Steeltoe.Messaging.Handler.HandlerMethod.ResolvedFromHandlerMethod*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Steeltoe.Messaging.Handler.HandlerMethod.#ctor(System.Object,System.Reflection.MethodInfo)
  commentId: M:Steeltoe.Messaging.Handler.HandlerMethod.#ctor(System.Object,System.Reflection.MethodInfo)
  id: '#ctor(System.Object,System.Reflection.MethodInfo)'
  parent: Steeltoe.Messaging.Handler.HandlerMethod
  langs:
  - csharp
  - vb
  name: HandlerMethod(Object, MethodInfo)
  nameWithType: HandlerMethod.HandlerMethod(Object, MethodInfo)
  fullName: Steeltoe.Messaging.Handler.HandlerMethod.HandlerMethod(System.Object, System.Reflection.MethodInfo)
  type: Constructor
  source:
    remote:
      path: src/Messaging/src/MessagingBase/Handler/HandlerMethod.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: .ctor
    path: ../Steeltoe/src/Messaging/src/MessagingBase/Handler/HandlerMethod.cs
    startLine: 34
  assemblies:
  - Steeltoe.Messaging.MessagingBase
  namespace: Steeltoe.Messaging.Handler
  syntax:
    content: public HandlerMethod(object bean, MethodInfo method)
    parameters:
    - id: bean
      type: System.Object
    - id: method
      type: System.Reflection.MethodInfo
    content.vb: Public Sub New(bean As Object, method As MethodInfo)
  overload: Steeltoe.Messaging.Handler.HandlerMethod.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Steeltoe.Messaging.Handler.HandlerMethod.#ctor(System.Object,System.String,System.Type[])
  commentId: M:Steeltoe.Messaging.Handler.HandlerMethod.#ctor(System.Object,System.String,System.Type[])
  id: '#ctor(System.Object,System.String,System.Type[])'
  parent: Steeltoe.Messaging.Handler.HandlerMethod
  langs:
  - csharp
  - vb
  name: HandlerMethod(Object, String, Type[])
  nameWithType: HandlerMethod.HandlerMethod(Object, String, Type[])
  fullName: Steeltoe.Messaging.Handler.HandlerMethod.HandlerMethod(System.Object, System.String, System.Type[])
  type: Constructor
  source:
    remote:
      path: src/Messaging/src/MessagingBase/Handler/HandlerMethod.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: .ctor
    path: ../Steeltoe/src/Messaging/src/MessagingBase/Handler/HandlerMethod.cs
    startLine: 51
  assemblies:
  - Steeltoe.Messaging.MessagingBase
  namespace: Steeltoe.Messaging.Handler
  syntax:
    content: public HandlerMethod(object bean, string methodName, params Type[] parameterTypes)
    parameters:
    - id: bean
      type: System.Object
    - id: methodName
      type: System.String
    - id: parameterTypes
      type: System.Type[]
    content.vb: Public Sub New(bean As Object, methodName As String, ParamArray parameterTypes As Type())
  overload: Steeltoe.Messaging.Handler.HandlerMethod.#ctor*
  nameWithType.vb: HandlerMethod.HandlerMethod(Object, String, Type())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Steeltoe.Messaging.Handler.HandlerMethod.HandlerMethod(System.Object, System.String, System.Type())
  name.vb: HandlerMethod(Object, String, Type())
- uid: Steeltoe.Messaging.Handler.HandlerMethod.IsVoid
  commentId: P:Steeltoe.Messaging.Handler.HandlerMethod.IsVoid
  id: IsVoid
  parent: Steeltoe.Messaging.Handler.HandlerMethod
  langs:
  - csharp
  - vb
  name: IsVoid
  nameWithType: HandlerMethod.IsVoid
  fullName: Steeltoe.Messaging.Handler.HandlerMethod.IsVoid
  type: Property
  source:
    remote:
      path: src/Messaging/src/MessagingBase/Handler/HandlerMethod.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: IsVoid
    path: ../Steeltoe/src/Messaging/src/MessagingBase/Handler/HandlerMethod.cs
    startLine: 86
  assemblies:
  - Steeltoe.Messaging.MessagingBase
  namespace: Steeltoe.Messaging.Handler
  syntax:
    content: public virtual bool IsVoid { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Overridable ReadOnly Property IsVoid As Boolean
  overload: Steeltoe.Messaging.Handler.HandlerMethod.IsVoid*
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: Steeltoe.Messaging.Handler.HandlerMethod.ShortLogMessage
  commentId: P:Steeltoe.Messaging.Handler.HandlerMethod.ShortLogMessage
  id: ShortLogMessage
  parent: Steeltoe.Messaging.Handler.HandlerMethod
  langs:
  - csharp
  - vb
  name: ShortLogMessage
  nameWithType: HandlerMethod.ShortLogMessage
  fullName: Steeltoe.Messaging.Handler.HandlerMethod.ShortLogMessage
  type: Property
  source:
    remote:
      path: src/Messaging/src/MessagingBase/Handler/HandlerMethod.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: ShortLogMessage
    path: ../Steeltoe/src/Messaging/src/MessagingBase/Handler/HandlerMethod.cs
    startLine: 94
  assemblies:
  - Steeltoe.Messaging.MessagingBase
  namespace: Steeltoe.Messaging.Handler
  syntax:
    content: public virtual string ShortLogMessage { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Overridable ReadOnly Property ShortLogMessage As String
  overload: Steeltoe.Messaging.Handler.HandlerMethod.ShortLogMessage*
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: Steeltoe.Messaging.Handler.HandlerMethod.MethodParameters
  commentId: P:Steeltoe.Messaging.Handler.HandlerMethod.MethodParameters
  id: MethodParameters
  parent: Steeltoe.Messaging.Handler.HandlerMethod
  langs:
  - csharp
  - vb
  name: MethodParameters
  nameWithType: HandlerMethod.MethodParameters
  fullName: Steeltoe.Messaging.Handler.HandlerMethod.MethodParameters
  type: Property
  source:
    remote:
      path: src/Messaging/src/MessagingBase/Handler/HandlerMethod.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: MethodParameters
    path: ../Steeltoe/src/Messaging/src/MessagingBase/Handler/HandlerMethod.cs
    startLine: 103
  assemblies:
  - Steeltoe.Messaging.MessagingBase
  namespace: Steeltoe.Messaging.Handler
  syntax:
    content: public virtual ParameterInfo[] MethodParameters { get; }
    parameters: []
    return:
      type: System.Reflection.ParameterInfo[]
    content.vb: Public Overridable ReadOnly Property MethodParameters As ParameterInfo()
  overload: Steeltoe.Messaging.Handler.HandlerMethod.MethodParameters*
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: Steeltoe.Messaging.Handler.HandlerMethod.ReturnType
  commentId: P:Steeltoe.Messaging.Handler.HandlerMethod.ReturnType
  id: ReturnType
  parent: Steeltoe.Messaging.Handler.HandlerMethod
  langs:
  - csharp
  - vb
  name: ReturnType
  nameWithType: HandlerMethod.ReturnType
  fullName: Steeltoe.Messaging.Handler.HandlerMethod.ReturnType
  type: Property
  source:
    remote:
      path: src/Messaging/src/MessagingBase/Handler/HandlerMethod.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: ReturnType
    path: ../Steeltoe/src/Messaging/src/MessagingBase/Handler/HandlerMethod.cs
    startLine: 108
  assemblies:
  - Steeltoe.Messaging.MessagingBase
  namespace: Steeltoe.Messaging.Handler
  syntax:
    content: public virtual ParameterInfo ReturnType { get; }
    parameters: []
    return:
      type: System.Reflection.ParameterInfo
    content.vb: Public Overridable ReadOnly Property ReturnType As ParameterInfo
  overload: Steeltoe.Messaging.Handler.HandlerMethod.ReturnType*
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: Steeltoe.Messaging.Handler.HandlerMethod.CreateWithResolvedBean
  commentId: M:Steeltoe.Messaging.Handler.HandlerMethod.CreateWithResolvedBean
  id: CreateWithResolvedBean
  parent: Steeltoe.Messaging.Handler.HandlerMethod
  langs:
  - csharp
  - vb
  name: CreateWithResolvedBean()
  nameWithType: HandlerMethod.CreateWithResolvedBean()
  fullName: Steeltoe.Messaging.Handler.HandlerMethod.CreateWithResolvedBean()
  type: Method
  source:
    remote:
      path: src/Messaging/src/MessagingBase/Handler/HandlerMethod.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: CreateWithResolvedBean
    path: ../Steeltoe/src/Messaging/src/MessagingBase/Handler/HandlerMethod.cs
    startLine: 113
  assemblies:
  - Steeltoe.Messaging.MessagingBase
  namespace: Steeltoe.Messaging.Handler
  syntax:
    content: public virtual HandlerMethod CreateWithResolvedBean()
    return:
      type: Steeltoe.Messaging.Handler.HandlerMethod
    content.vb: Public Overridable Function CreateWithResolvedBean As HandlerMethod
  overload: Steeltoe.Messaging.Handler.HandlerMethod.CreateWithResolvedBean*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Steeltoe.Messaging.Handler.HandlerMethod.FindProvidedArgument(System.Reflection.ParameterInfo,System.Object[])
  commentId: M:Steeltoe.Messaging.Handler.HandlerMethod.FindProvidedArgument(System.Reflection.ParameterInfo,System.Object[])
  id: FindProvidedArgument(System.Reflection.ParameterInfo,System.Object[])
  parent: Steeltoe.Messaging.Handler.HandlerMethod
  langs:
  - csharp
  - vb
  name: FindProvidedArgument(ParameterInfo, Object[])
  nameWithType: HandlerMethod.FindProvidedArgument(ParameterInfo, Object[])
  fullName: Steeltoe.Messaging.Handler.HandlerMethod.FindProvidedArgument(System.Reflection.ParameterInfo, System.Object[])
  type: Method
  source:
    remote:
      path: src/Messaging/src/MessagingBase/Handler/HandlerMethod.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: FindProvidedArgument
    path: ../Steeltoe/src/Messaging/src/MessagingBase/Handler/HandlerMethod.cs
    startLine: 119
  assemblies:
  - Steeltoe.Messaging.MessagingBase
  namespace: Steeltoe.Messaging.Handler
  syntax:
    content: protected static object FindProvidedArgument(ParameterInfo parameter, params object[] providedArgs)
    parameters:
    - id: parameter
      type: System.Reflection.ParameterInfo
    - id: providedArgs
      type: System.Object[]
    return:
      type: System.Object
    content.vb: Protected Shared Function FindProvidedArgument(parameter As ParameterInfo, ParamArray providedArgs As Object()) As Object
  overload: Steeltoe.Messaging.Handler.HandlerMethod.FindProvidedArgument*
  nameWithType.vb: HandlerMethod.FindProvidedArgument(ParameterInfo, Object())
  modifiers.csharp:
  - protected
  - static
  modifiers.vb:
  - Protected
  - Shared
  fullName.vb: Steeltoe.Messaging.Handler.HandlerMethod.FindProvidedArgument(System.Reflection.ParameterInfo, System.Object())
  name.vb: FindProvidedArgument(ParameterInfo, Object())
- uid: Steeltoe.Messaging.Handler.HandlerMethod.FormatArgumentError(System.Reflection.ParameterInfo,System.String)
  commentId: M:Steeltoe.Messaging.Handler.HandlerMethod.FormatArgumentError(System.Reflection.ParameterInfo,System.String)
  id: FormatArgumentError(System.Reflection.ParameterInfo,System.String)
  parent: Steeltoe.Messaging.Handler.HandlerMethod
  langs:
  - csharp
  - vb
  name: FormatArgumentError(ParameterInfo, String)
  nameWithType: HandlerMethod.FormatArgumentError(ParameterInfo, String)
  fullName: Steeltoe.Messaging.Handler.HandlerMethod.FormatArgumentError(System.Reflection.ParameterInfo, System.String)
  type: Method
  source:
    remote:
      path: src/Messaging/src/MessagingBase/Handler/HandlerMethod.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: FormatArgumentError
    path: ../Steeltoe/src/Messaging/src/MessagingBase/Handler/HandlerMethod.cs
    startLine: 135
  assemblies:
  - Steeltoe.Messaging.MessagingBase
  namespace: Steeltoe.Messaging.Handler
  syntax:
    content: protected static string FormatArgumentError(ParameterInfo param, string message)
    parameters:
    - id: param
      type: System.Reflection.ParameterInfo
    - id: message
      type: System.String
    return:
      type: System.String
    content.vb: Protected Shared Function FormatArgumentError(param As ParameterInfo, message As String) As String
  overload: Steeltoe.Messaging.Handler.HandlerMethod.FormatArgumentError*
  modifiers.csharp:
  - protected
  - static
  modifiers.vb:
  - Protected
  - Shared
- uid: Steeltoe.Messaging.Handler.HandlerMethod.#ctor(Steeltoe.Messaging.Handler.HandlerMethod)
  commentId: M:Steeltoe.Messaging.Handler.HandlerMethod.#ctor(Steeltoe.Messaging.Handler.HandlerMethod)
  id: '#ctor(Steeltoe.Messaging.Handler.HandlerMethod)'
  parent: Steeltoe.Messaging.Handler.HandlerMethod
  langs:
  - csharp
  - vb
  name: HandlerMethod(HandlerMethod)
  nameWithType: HandlerMethod.HandlerMethod(HandlerMethod)
  fullName: Steeltoe.Messaging.Handler.HandlerMethod.HandlerMethod(Steeltoe.Messaging.Handler.HandlerMethod)
  type: Constructor
  source:
    remote:
      path: src/Messaging/src/MessagingBase/Handler/HandlerMethod.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: .ctor
    path: ../Steeltoe/src/Messaging/src/MessagingBase/Handler/HandlerMethod.cs
    startLine: 141
  assemblies:
  - Steeltoe.Messaging.MessagingBase
  namespace: Steeltoe.Messaging.Handler
  syntax:
    content: protected HandlerMethod(HandlerMethod handlerMethod)
    parameters:
    - id: handlerMethod
      type: Steeltoe.Messaging.Handler.HandlerMethod
    content.vb: Protected Sub New(handlerMethod As HandlerMethod)
  overload: Steeltoe.Messaging.Handler.HandlerMethod.#ctor*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Steeltoe.Messaging.Handler.HandlerMethod.AssertTargetBean(System.Reflection.MethodInfo,System.Object,System.Object[])
  commentId: M:Steeltoe.Messaging.Handler.HandlerMethod.AssertTargetBean(System.Reflection.MethodInfo,System.Object,System.Object[])
  id: AssertTargetBean(System.Reflection.MethodInfo,System.Object,System.Object[])
  parent: Steeltoe.Messaging.Handler.HandlerMethod
  langs:
  - csharp
  - vb
  name: AssertTargetBean(MethodInfo, Object, Object[])
  nameWithType: HandlerMethod.AssertTargetBean(MethodInfo, Object, Object[])
  fullName: Steeltoe.Messaging.Handler.HandlerMethod.AssertTargetBean(System.Reflection.MethodInfo, System.Object, System.Object[])
  type: Method
  source:
    remote:
      path: src/Messaging/src/MessagingBase/Handler/HandlerMethod.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: AssertTargetBean
    path: ../Steeltoe/src/Messaging/src/MessagingBase/Handler/HandlerMethod.cs
    startLine: 153
  assemblies:
  - Steeltoe.Messaging.MessagingBase
  namespace: Steeltoe.Messaging.Handler
  syntax:
    content: protected virtual void AssertTargetBean(MethodInfo method, object targetBean, object[] args)
    parameters:
    - id: method
      type: System.Reflection.MethodInfo
    - id: targetBean
      type: System.Object
    - id: args
      type: System.Object[]
    content.vb: Protected Overridable Sub AssertTargetBean(method As MethodInfo, targetBean As Object, args As Object())
  overload: Steeltoe.Messaging.Handler.HandlerMethod.AssertTargetBean*
  nameWithType.vb: HandlerMethod.AssertTargetBean(MethodInfo, Object, Object())
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
  fullName.vb: Steeltoe.Messaging.Handler.HandlerMethod.AssertTargetBean(System.Reflection.MethodInfo, System.Object, System.Object())
  name.vb: AssertTargetBean(MethodInfo, Object, Object())
- uid: Steeltoe.Messaging.Handler.HandlerMethod.FormatInvokeError(System.String,System.Object[])
  commentId: M:Steeltoe.Messaging.Handler.HandlerMethod.FormatInvokeError(System.String,System.Object[])
  id: FormatInvokeError(System.String,System.Object[])
  parent: Steeltoe.Messaging.Handler.HandlerMethod
  langs:
  - csharp
  - vb
  name: FormatInvokeError(String, Object[])
  nameWithType: HandlerMethod.FormatInvokeError(String, Object[])
  fullName: Steeltoe.Messaging.Handler.HandlerMethod.FormatInvokeError(System.String, System.Object[])
  type: Method
  source:
    remote:
      path: src/Messaging/src/MessagingBase/Handler/HandlerMethod.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: FormatInvokeError
    path: ../Steeltoe/src/Messaging/src/MessagingBase/Handler/HandlerMethod.cs
    startLine: 166
  assemblies:
  - Steeltoe.Messaging.MessagingBase
  namespace: Steeltoe.Messaging.Handler
  syntax:
    content: protected virtual string FormatInvokeError(string text, object[] args)
    parameters:
    - id: text
      type: System.String
    - id: args
      type: System.Object[]
    return:
      type: System.String
    content.vb: Protected Overridable Function FormatInvokeError(text As String, args As Object()) As String
  overload: Steeltoe.Messaging.Handler.HandlerMethod.FormatInvokeError*
  nameWithType.vb: HandlerMethod.FormatInvokeError(String, Object())
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
  fullName.vb: Steeltoe.Messaging.Handler.HandlerMethod.FormatInvokeError(System.String, System.Object())
  name.vb: FormatInvokeError(String, Object())
references:
- uid: Steeltoe.Messaging.Handler
  commentId: N:Steeltoe.Messaging.Handler
  name: Steeltoe.Messaging.Handler
  nameWithType: Steeltoe.Messaging.Handler
  fullName: Steeltoe.Messaging.Handler
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Reflection.MethodInfo
  commentId: T:System.Reflection.MethodInfo
  parent: System.Reflection
  isExternal: true
  name: MethodInfo
  nameWithType: MethodInfo
  fullName: System.Reflection.MethodInfo
- uid: System.Reflection
  commentId: N:System.Reflection
  isExternal: true
  name: System.Reflection
  nameWithType: System.Reflection
  fullName: System.Reflection
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: Steeltoe.Messaging.Handler.HandlerMethod.Bean*
  commentId: Overload:Steeltoe.Messaging.Handler.HandlerMethod.Bean
  name: Bean
  nameWithType: HandlerMethod.Bean
  fullName: Steeltoe.Messaging.Handler.HandlerMethod.Bean
- uid: Steeltoe.Messaging.Handler.HandlerMethod.Method*
  commentId: Overload:Steeltoe.Messaging.Handler.HandlerMethod.Method
  name: Method
  nameWithType: HandlerMethod.Method
  fullName: Steeltoe.Messaging.Handler.HandlerMethod.Method
- uid: Steeltoe.Messaging.Handler.HandlerMethod.BeanType*
  commentId: Overload:Steeltoe.Messaging.Handler.HandlerMethod.BeanType
  name: BeanType
  nameWithType: HandlerMethod.BeanType
  fullName: Steeltoe.Messaging.Handler.HandlerMethod.BeanType
- uid: Steeltoe.Messaging.Handler.HandlerMethod.ResolvedFromHandlerMethod*
  commentId: Overload:Steeltoe.Messaging.Handler.HandlerMethod.ResolvedFromHandlerMethod
  name: ResolvedFromHandlerMethod
  nameWithType: HandlerMethod.ResolvedFromHandlerMethod
  fullName: Steeltoe.Messaging.Handler.HandlerMethod.ResolvedFromHandlerMethod
- uid: Steeltoe.Messaging.Handler.HandlerMethod
  commentId: T:Steeltoe.Messaging.Handler.HandlerMethod
  parent: Steeltoe.Messaging.Handler
  name: HandlerMethod
  nameWithType: HandlerMethod
  fullName: Steeltoe.Messaging.Handler.HandlerMethod
- uid: Steeltoe.Messaging.Handler.HandlerMethod.#ctor*
  commentId: Overload:Steeltoe.Messaging.Handler.HandlerMethod.#ctor
  name: HandlerMethod
  nameWithType: HandlerMethod.HandlerMethod
  fullName: Steeltoe.Messaging.Handler.HandlerMethod.HandlerMethod
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Type[]
  isExternal: true
  name: Type[]
  nameWithType: Type[]
  fullName: System.Type[]
  nameWithType.vb: Type()
  fullName.vb: System.Type()
  name.vb: Type()
  spec.csharp:
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Steeltoe.Messaging.Handler.HandlerMethod.IsVoid*
  commentId: Overload:Steeltoe.Messaging.Handler.HandlerMethod.IsVoid
  name: IsVoid
  nameWithType: HandlerMethod.IsVoid
  fullName: Steeltoe.Messaging.Handler.HandlerMethod.IsVoid
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Steeltoe.Messaging.Handler.HandlerMethod.ShortLogMessage*
  commentId: Overload:Steeltoe.Messaging.Handler.HandlerMethod.ShortLogMessage
  name: ShortLogMessage
  nameWithType: HandlerMethod.ShortLogMessage
  fullName: Steeltoe.Messaging.Handler.HandlerMethod.ShortLogMessage
- uid: Steeltoe.Messaging.Handler.HandlerMethod.MethodParameters*
  commentId: Overload:Steeltoe.Messaging.Handler.HandlerMethod.MethodParameters
  name: MethodParameters
  nameWithType: HandlerMethod.MethodParameters
  fullName: Steeltoe.Messaging.Handler.HandlerMethod.MethodParameters
- uid: System.Reflection.ParameterInfo[]
  isExternal: true
  name: ParameterInfo[]
  nameWithType: ParameterInfo[]
  fullName: System.Reflection.ParameterInfo[]
  nameWithType.vb: ParameterInfo()
  fullName.vb: System.Reflection.ParameterInfo()
  name.vb: ParameterInfo()
  spec.csharp:
  - uid: System.Reflection.ParameterInfo
    name: ParameterInfo
    nameWithType: ParameterInfo
    fullName: System.Reflection.ParameterInfo
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Reflection.ParameterInfo
    name: ParameterInfo
    nameWithType: ParameterInfo
    fullName: System.Reflection.ParameterInfo
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Steeltoe.Messaging.Handler.HandlerMethod.ReturnType*
  commentId: Overload:Steeltoe.Messaging.Handler.HandlerMethod.ReturnType
  name: ReturnType
  nameWithType: HandlerMethod.ReturnType
  fullName: Steeltoe.Messaging.Handler.HandlerMethod.ReturnType
- uid: System.Reflection.ParameterInfo
  commentId: T:System.Reflection.ParameterInfo
  parent: System.Reflection
  isExternal: true
  name: ParameterInfo
  nameWithType: ParameterInfo
  fullName: System.Reflection.ParameterInfo
- uid: Steeltoe.Messaging.Handler.HandlerMethod.CreateWithResolvedBean*
  commentId: Overload:Steeltoe.Messaging.Handler.HandlerMethod.CreateWithResolvedBean
  name: CreateWithResolvedBean
  nameWithType: HandlerMethod.CreateWithResolvedBean
  fullName: Steeltoe.Messaging.Handler.HandlerMethod.CreateWithResolvedBean
- uid: Steeltoe.Messaging.Handler.HandlerMethod.FindProvidedArgument*
  commentId: Overload:Steeltoe.Messaging.Handler.HandlerMethod.FindProvidedArgument
  name: FindProvidedArgument
  nameWithType: HandlerMethod.FindProvidedArgument
  fullName: Steeltoe.Messaging.Handler.HandlerMethod.FindProvidedArgument
- uid: System.Object[]
  isExternal: true
  name: Object[]
  nameWithType: Object[]
  fullName: System.Object[]
  nameWithType.vb: Object()
  fullName.vb: System.Object()
  name.vb: Object()
  spec.csharp:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Steeltoe.Messaging.Handler.HandlerMethod.FormatArgumentError*
  commentId: Overload:Steeltoe.Messaging.Handler.HandlerMethod.FormatArgumentError
  name: FormatArgumentError
  nameWithType: HandlerMethod.FormatArgumentError
  fullName: Steeltoe.Messaging.Handler.HandlerMethod.FormatArgumentError
- uid: Steeltoe.Messaging.Handler.HandlerMethod.AssertTargetBean*
  commentId: Overload:Steeltoe.Messaging.Handler.HandlerMethod.AssertTargetBean
  name: AssertTargetBean
  nameWithType: HandlerMethod.AssertTargetBean
  fullName: Steeltoe.Messaging.Handler.HandlerMethod.AssertTargetBean
- uid: Steeltoe.Messaging.Handler.HandlerMethod.FormatInvokeError*
  commentId: Overload:Steeltoe.Messaging.Handler.HandlerMethod.FormatInvokeError
  name: FormatInvokeError
  nameWithType: HandlerMethod.FormatInvokeError
  fullName: Steeltoe.Messaging.Handler.HandlerMethod.FormatInvokeError
