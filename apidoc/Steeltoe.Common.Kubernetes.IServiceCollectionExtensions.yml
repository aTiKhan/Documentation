### YamlMime:ManagedReference
items:
- uid: Steeltoe.Common.Kubernetes.IServiceCollectionExtensions
  commentId: T:Steeltoe.Common.Kubernetes.IServiceCollectionExtensions
  id: IServiceCollectionExtensions
  parent: Steeltoe.Common.Kubernetes
  children:
  - Steeltoe.Common.Kubernetes.IServiceCollectionExtensions.AddKubernetesApplicationInstanceInfo(IServiceCollection)
  - Steeltoe.Common.Kubernetes.IServiceCollectionExtensions.AddKubernetesClient(IServiceCollection,System.Action{KubernetesClientConfiguration})
  - Steeltoe.Common.Kubernetes.IServiceCollectionExtensions.GetKubernetesApplicationOptions(IServiceCollection)
  langs:
  - csharp
  - vb
  name: IServiceCollectionExtensions
  nameWithType: IServiceCollectionExtensions
  fullName: Steeltoe.Common.Kubernetes.IServiceCollectionExtensions
  type: Class
  source:
    remote:
      path: src/Common/src/Common.Kubernetes/IServiceCollectionExtensions.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: IServiceCollectionExtensions
    path: ../Steeltoe/src/Common/src/Common.Kubernetes/IServiceCollectionExtensions.cs
    startLine: 14
  assemblies:
  - Steeltoe.Common.Kubernetes
  namespace: Steeltoe.Common.Kubernetes
  syntax:
    content: public static class IServiceCollectionExtensions
    content.vb: Public Module IServiceCollectionExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Steeltoe.Common.Kubernetes.IServiceCollectionExtensions.AddKubernetesApplicationInstanceInfo(IServiceCollection)
  commentId: M:Steeltoe.Common.Kubernetes.IServiceCollectionExtensions.AddKubernetesApplicationInstanceInfo(IServiceCollection)
  id: AddKubernetesApplicationInstanceInfo(IServiceCollection)
  isExtensionMethod: true
  parent: Steeltoe.Common.Kubernetes.IServiceCollectionExtensions
  langs:
  - csharp
  - vb
  name: AddKubernetesApplicationInstanceInfo(IServiceCollection)
  nameWithType: IServiceCollectionExtensions.AddKubernetesApplicationInstanceInfo(IServiceCollection)
  fullName: Steeltoe.Common.Kubernetes.IServiceCollectionExtensions.AddKubernetesApplicationInstanceInfo(IServiceCollection)
  type: Method
  source:
    remote:
      path: src/Common/src/Common.Kubernetes/IServiceCollectionExtensions.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: AddKubernetesApplicationInstanceInfo
    path: ../Steeltoe/src/Common/src/Common.Kubernetes/IServiceCollectionExtensions.cs
    startLine: 20
  assemblies:
  - Steeltoe.Common.Kubernetes
  namespace: Steeltoe.Common.Kubernetes
  summary: "\nRemoves any existing <see cref=\"!:IApplicationInstanceInfo\"></see> if found. Registers a <xref href=\"Steeltoe.Common.Kubernetes.KubernetesApplicationOptions\" data-throw-if-not-resolved=\"false\"></xref>\n"
  example: []
  syntax:
    content: public static IServiceCollection AddKubernetesApplicationInstanceInfo(this IServiceCollection serviceCollection)
    parameters:
    - id: serviceCollection
      type: IServiceCollection
      description: Collection of configured services
    return:
      type: IServiceCollection
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function AddKubernetesApplicationInstanceInfo(serviceCollection As IServiceCollection) As IServiceCollection
  overload: Steeltoe.Common.Kubernetes.IServiceCollectionExtensions.AddKubernetesApplicationInstanceInfo*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Steeltoe.Common.Kubernetes.IServiceCollectionExtensions.GetKubernetesApplicationOptions(IServiceCollection)
  commentId: M:Steeltoe.Common.Kubernetes.IServiceCollectionExtensions.GetKubernetesApplicationOptions(IServiceCollection)
  id: GetKubernetesApplicationOptions(IServiceCollection)
  isExtensionMethod: true
  parent: Steeltoe.Common.Kubernetes.IServiceCollectionExtensions
  langs:
  - csharp
  - vb
  name: GetKubernetesApplicationOptions(IServiceCollection)
  nameWithType: IServiceCollectionExtensions.GetKubernetesApplicationOptions(IServiceCollection)
  fullName: Steeltoe.Common.Kubernetes.IServiceCollectionExtensions.GetKubernetesApplicationOptions(IServiceCollection)
  type: Method
  source:
    remote:
      path: src/Common/src/Common.Kubernetes/IServiceCollectionExtensions.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: GetKubernetesApplicationOptions
    path: ../Steeltoe/src/Common/src/Common.Kubernetes/IServiceCollectionExtensions.cs
    startLine: 52
  assemblies:
  - Steeltoe.Common.Kubernetes
  namespace: Steeltoe.Common.Kubernetes
  summary: "\nRetrieves <xref href=\"Steeltoe.Common.Kubernetes.KubernetesApplicationOptions\" data-throw-if-not-resolved=\"false\"></xref> from the service collection\n"
  example: []
  syntax:
    content: public static IApplicationInstanceInfo GetKubernetesApplicationOptions(this IServiceCollection serviceCollection)
    parameters:
    - id: serviceCollection
      type: IServiceCollection
      description: Collection of configured services
    return:
      type: IApplicationInstanceInfo
      description: Relevant <xref href="Steeltoe.Common.Kubernetes.KubernetesApplicationOptions" data-throw-if-not-resolved="false"></xref>
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetKubernetesApplicationOptions(serviceCollection As IServiceCollection) As IApplicationInstanceInfo
  overload: Steeltoe.Common.Kubernetes.IServiceCollectionExtensions.GetKubernetesApplicationOptions*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Steeltoe.Common.Kubernetes.IServiceCollectionExtensions.AddKubernetesClient(IServiceCollection,System.Action{KubernetesClientConfiguration})
  commentId: M:Steeltoe.Common.Kubernetes.IServiceCollectionExtensions.AddKubernetesClient(IServiceCollection,System.Action{KubernetesClientConfiguration})
  id: AddKubernetesClient(IServiceCollection,System.Action{KubernetesClientConfiguration})
  isExtensionMethod: true
  parent: Steeltoe.Common.Kubernetes.IServiceCollectionExtensions
  langs:
  - csharp
  - vb
  name: AddKubernetesClient(IServiceCollection, Action<KubernetesClientConfiguration>)
  nameWithType: IServiceCollectionExtensions.AddKubernetesClient(IServiceCollection, Action<KubernetesClientConfiguration>)
  fullName: Steeltoe.Common.Kubernetes.IServiceCollectionExtensions.AddKubernetesClient(IServiceCollection, System.Action<KubernetesClientConfiguration>)
  type: Method
  source:
    remote:
      path: src/Common/src/Common.Kubernetes/IServiceCollectionExtensions.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: AddKubernetesClient
    path: ../Steeltoe/src/Common/src/Common.Kubernetes/IServiceCollectionExtensions.cs
    startLine: 71
  assemblies:
  - Steeltoe.Common.Kubernetes
  namespace: Steeltoe.Common.Kubernetes
  summary: "\nAdd a <see cref=\"!:IKubernetes\"></see> client to the service collection\n"
  example: []
  syntax:
    content: public static IServiceCollection AddKubernetesClient(this IServiceCollection serviceCollection, Action<KubernetesClientConfiguration> kubernetesClientConfiguration = null)
    parameters:
    - id: serviceCollection
      type: IServiceCollection
      description: <see cref="!:IServiceCollection"></see>
    - id: kubernetesClientConfiguration
      type: System.Action{KubernetesClientConfiguration}
      description: Customization of the Kubernetes Client
    return:
      type: IServiceCollection
      description: Collection of configured services
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function AddKubernetesClient(serviceCollection As IServiceCollection, kubernetesClientConfiguration As Action(Of KubernetesClientConfiguration) = Nothing) As IServiceCollection
  overload: Steeltoe.Common.Kubernetes.IServiceCollectionExtensions.AddKubernetesClient*
  nameWithType.vb: IServiceCollectionExtensions.AddKubernetesClient(IServiceCollection, Action(Of KubernetesClientConfiguration))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Steeltoe.Common.Kubernetes.IServiceCollectionExtensions.AddKubernetesClient(IServiceCollection, System.Action(Of KubernetesClientConfiguration))
  name.vb: AddKubernetesClient(IServiceCollection, Action(Of KubernetesClientConfiguration))
references:
- uid: Steeltoe.Common.Kubernetes
  commentId: N:Steeltoe.Common.Kubernetes
  name: Steeltoe.Common.Kubernetes
  nameWithType: Steeltoe.Common.Kubernetes
  fullName: Steeltoe.Common.Kubernetes
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Steeltoe.Common.Kubernetes.KubernetesApplicationOptions
  commentId: T:Steeltoe.Common.Kubernetes.KubernetesApplicationOptions
  parent: Steeltoe.Common.Kubernetes
  name: KubernetesApplicationOptions
  nameWithType: KubernetesApplicationOptions
  fullName: Steeltoe.Common.Kubernetes.KubernetesApplicationOptions
- uid: Steeltoe.Common.Kubernetes.IServiceCollectionExtensions.AddKubernetesApplicationInstanceInfo*
  commentId: Overload:Steeltoe.Common.Kubernetes.IServiceCollectionExtensions.AddKubernetesApplicationInstanceInfo
  name: AddKubernetesApplicationInstanceInfo
  nameWithType: IServiceCollectionExtensions.AddKubernetesApplicationInstanceInfo
  fullName: Steeltoe.Common.Kubernetes.IServiceCollectionExtensions.AddKubernetesApplicationInstanceInfo
- uid: IServiceCollection
  isExternal: true
  name: IServiceCollection
  nameWithType: IServiceCollection
  fullName: IServiceCollection
- uid: Steeltoe.Common.Kubernetes.IServiceCollectionExtensions.GetKubernetesApplicationOptions*
  commentId: Overload:Steeltoe.Common.Kubernetes.IServiceCollectionExtensions.GetKubernetesApplicationOptions
  name: GetKubernetesApplicationOptions
  nameWithType: IServiceCollectionExtensions.GetKubernetesApplicationOptions
  fullName: Steeltoe.Common.Kubernetes.IServiceCollectionExtensions.GetKubernetesApplicationOptions
- uid: IApplicationInstanceInfo
  isExternal: true
  name: IApplicationInstanceInfo
  nameWithType: IApplicationInstanceInfo
  fullName: IApplicationInstanceInfo
- uid: Steeltoe.Common.Kubernetes.IServiceCollectionExtensions.AddKubernetesClient*
  commentId: Overload:Steeltoe.Common.Kubernetes.IServiceCollectionExtensions.AddKubernetesClient
  name: AddKubernetesClient
  nameWithType: IServiceCollectionExtensions.AddKubernetesClient
  fullName: Steeltoe.Common.Kubernetes.IServiceCollectionExtensions.AddKubernetesClient
- uid: System.Action{KubernetesClientConfiguration}
  commentId: T:System.Action{KubernetesClientConfiguration}
  parent: System
  definition: System.Action`1
  name: Action<KubernetesClientConfiguration>
  nameWithType: Action<KubernetesClientConfiguration>
  fullName: System.Action<KubernetesClientConfiguration>
  nameWithType.vb: Action(Of KubernetesClientConfiguration)
  fullName.vb: System.Action(Of KubernetesClientConfiguration)
  name.vb: Action(Of KubernetesClientConfiguration)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: KubernetesClientConfiguration
    name: KubernetesClientConfiguration
    nameWithType: KubernetesClientConfiguration
    fullName: KubernetesClientConfiguration
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: KubernetesClientConfiguration
    name: KubernetesClientConfiguration
    nameWithType: KubernetesClientConfiguration
    fullName: KubernetesClientConfiguration
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Action`1
  commentId: T:System.Action`1
  isExternal: true
  name: Action<T>
  nameWithType: Action<T>
  fullName: System.Action<T>
  nameWithType.vb: Action(Of T)
  fullName.vb: System.Action(Of T)
  name.vb: Action(Of T)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
