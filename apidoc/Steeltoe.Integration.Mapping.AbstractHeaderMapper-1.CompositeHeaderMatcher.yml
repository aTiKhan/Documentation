### YamlMime:ManagedReference
items:
- uid: Steeltoe.Integration.Mapping.AbstractHeaderMapper`1.CompositeHeaderMatcher
  commentId: T:Steeltoe.Integration.Mapping.AbstractHeaderMapper`1.CompositeHeaderMatcher
  id: AbstractHeaderMapper`1.CompositeHeaderMatcher
  parent: Steeltoe.Integration.Mapping
  children:
  - Steeltoe.Integration.Mapping.AbstractHeaderMapper`1.CompositeHeaderMatcher.#ctor(Steeltoe.Integration.Mapping.AbstractHeaderMapper{`0}.IHeaderMatcher[])
  - Steeltoe.Integration.Mapping.AbstractHeaderMapper`1.CompositeHeaderMatcher.#ctor(System.Collections.Generic.List{Steeltoe.Integration.Mapping.AbstractHeaderMapper{`0}.IHeaderMatcher})
  - Steeltoe.Integration.Mapping.AbstractHeaderMapper`1.CompositeHeaderMatcher.IsNegated
  - Steeltoe.Integration.Mapping.AbstractHeaderMapper`1.CompositeHeaderMatcher.MatchHeader(System.String)
  langs:
  - csharp
  - vb
  name: AbstractHeaderMapper<T>.CompositeHeaderMatcher
  nameWithType: AbstractHeaderMapper<T>.CompositeHeaderMatcher
  fullName: Steeltoe.Integration.Mapping.AbstractHeaderMapper<T>.CompositeHeaderMatcher
  type: Class
  source:
    remote:
      path: src/Integration/src/IntegrationBase/Mapping/AbstractHeaderMapper.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: CompositeHeaderMatcher
    path: ../Steeltoe/src/Integration/src/IntegrationBase/Mapping/AbstractHeaderMapper.cs
    startLine: 408
  assemblies:
  - Steeltoe.Integration.IntegrationBase
  namespace: Steeltoe.Integration.Mapping
  syntax:
    content: 'protected class CompositeHeaderMatcher : AbstractHeaderMapper<T>.IHeaderMatcher'
    content.vb: >-
      Protected Class CompositeHeaderMatcher

          Implements AbstractHeaderMapper(Of T).IHeaderMatcher
  inheritance:
  - System.Object
  implements:
  - Steeltoe.Integration.Mapping.AbstractHeaderMapper`1.IHeaderMatcher
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  nameWithType.vb: AbstractHeaderMapper(Of T).CompositeHeaderMatcher
  modifiers.csharp:
  - protected
  - class
  modifiers.vb:
  - Protected
  - Class
  fullName.vb: Steeltoe.Integration.Mapping.AbstractHeaderMapper(Of T).CompositeHeaderMatcher
  name.vb: AbstractHeaderMapper(Of T).CompositeHeaderMatcher
- uid: Steeltoe.Integration.Mapping.AbstractHeaderMapper`1.CompositeHeaderMatcher.#ctor(System.Collections.Generic.List{Steeltoe.Integration.Mapping.AbstractHeaderMapper{`0}.IHeaderMatcher})
  commentId: M:Steeltoe.Integration.Mapping.AbstractHeaderMapper`1.CompositeHeaderMatcher.#ctor(System.Collections.Generic.List{Steeltoe.Integration.Mapping.AbstractHeaderMapper{`0}.IHeaderMatcher})
  id: '#ctor(System.Collections.Generic.List{Steeltoe.Integration.Mapping.AbstractHeaderMapper{`0}.IHeaderMatcher})'
  parent: Steeltoe.Integration.Mapping.AbstractHeaderMapper`1.CompositeHeaderMatcher
  langs:
  - csharp
  - vb
  name: CompositeHeaderMatcher(List<AbstractHeaderMapper<T>.IHeaderMatcher>)
  nameWithType: AbstractHeaderMapper<T>.CompositeHeaderMatcher.CompositeHeaderMatcher(List<AbstractHeaderMapper<T>.IHeaderMatcher>)
  fullName: Steeltoe.Integration.Mapping.AbstractHeaderMapper<T>.CompositeHeaderMatcher.CompositeHeaderMatcher(System.Collections.Generic.List<Steeltoe.Integration.Mapping.AbstractHeaderMapper<T>.IHeaderMatcher>)
  type: Constructor
  source:
    remote:
      path: src/Integration/src/IntegrationBase/Mapping/AbstractHeaderMapper.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: .ctor
    path: ../Steeltoe/src/Integration/src/IntegrationBase/Mapping/AbstractHeaderMapper.cs
    startLine: 412
  assemblies:
  - Steeltoe.Integration.IntegrationBase
  namespace: Steeltoe.Integration.Mapping
  syntax:
    content: public CompositeHeaderMatcher(List<AbstractHeaderMapper<T>.IHeaderMatcher> strategies)
    parameters:
    - id: strategies
      type: System.Collections.Generic.List{Steeltoe.Integration.Mapping.AbstractHeaderMapper`1.IHeaderMatcher}
    content.vb: Public Sub New(strategies As List(Of AbstractHeaderMapper(Of T).IHeaderMatcher))
  overload: Steeltoe.Integration.Mapping.AbstractHeaderMapper`1.CompositeHeaderMatcher.#ctor*
  nameWithType.vb: AbstractHeaderMapper(Of T).CompositeHeaderMatcher.CompositeHeaderMatcher(List(Of AbstractHeaderMapper(Of T).IHeaderMatcher))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Steeltoe.Integration.Mapping.AbstractHeaderMapper(Of T).CompositeHeaderMatcher.CompositeHeaderMatcher(System.Collections.Generic.List(Of Steeltoe.Integration.Mapping.AbstractHeaderMapper(Of T).IHeaderMatcher))
  name.vb: CompositeHeaderMatcher(List(Of AbstractHeaderMapper(Of T).IHeaderMatcher))
- uid: Steeltoe.Integration.Mapping.AbstractHeaderMapper`1.CompositeHeaderMatcher.#ctor(Steeltoe.Integration.Mapping.AbstractHeaderMapper{`0}.IHeaderMatcher[])
  commentId: M:Steeltoe.Integration.Mapping.AbstractHeaderMapper`1.CompositeHeaderMatcher.#ctor(Steeltoe.Integration.Mapping.AbstractHeaderMapper{`0}.IHeaderMatcher[])
  id: '#ctor(Steeltoe.Integration.Mapping.AbstractHeaderMapper{`0}.IHeaderMatcher[])'
  parent: Steeltoe.Integration.Mapping.AbstractHeaderMapper`1.CompositeHeaderMatcher
  langs:
  - csharp
  - vb
  name: CompositeHeaderMatcher(AbstractHeaderMapper<T>.IHeaderMatcher[])
  nameWithType: AbstractHeaderMapper<T>.CompositeHeaderMatcher.CompositeHeaderMatcher(AbstractHeaderMapper<T>.IHeaderMatcher[])
  fullName: Steeltoe.Integration.Mapping.AbstractHeaderMapper<T>.CompositeHeaderMatcher.CompositeHeaderMatcher(Steeltoe.Integration.Mapping.AbstractHeaderMapper<T>.IHeaderMatcher[])
  type: Constructor
  source:
    remote:
      path: src/Integration/src/IntegrationBase/Mapping/AbstractHeaderMapper.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: .ctor
    path: ../Steeltoe/src/Integration/src/IntegrationBase/Mapping/AbstractHeaderMapper.cs
    startLine: 417
  assemblies:
  - Steeltoe.Integration.IntegrationBase
  namespace: Steeltoe.Integration.Mapping
  syntax:
    content: public CompositeHeaderMatcher(params AbstractHeaderMapper<T>.IHeaderMatcher[] strategies)
    parameters:
    - id: strategies
      type: Steeltoe.Integration.Mapping.AbstractHeaderMapper`1.IHeaderMatcher[]
    content.vb: Public Sub New(ParamArray strategies As AbstractHeaderMapper(Of T).IHeaderMatcher())
  overload: Steeltoe.Integration.Mapping.AbstractHeaderMapper`1.CompositeHeaderMatcher.#ctor*
  nameWithType.vb: AbstractHeaderMapper(Of T).CompositeHeaderMatcher.CompositeHeaderMatcher(AbstractHeaderMapper(Of T).IHeaderMatcher())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Steeltoe.Integration.Mapping.AbstractHeaderMapper(Of T).CompositeHeaderMatcher.CompositeHeaderMatcher(Steeltoe.Integration.Mapping.AbstractHeaderMapper(Of T).IHeaderMatcher())
  name.vb: CompositeHeaderMatcher(AbstractHeaderMapper(Of T).IHeaderMatcher())
- uid: Steeltoe.Integration.Mapping.AbstractHeaderMapper`1.CompositeHeaderMatcher.MatchHeader(System.String)
  commentId: M:Steeltoe.Integration.Mapping.AbstractHeaderMapper`1.CompositeHeaderMatcher.MatchHeader(System.String)
  id: MatchHeader(System.String)
  parent: Steeltoe.Integration.Mapping.AbstractHeaderMapper`1.CompositeHeaderMatcher
  langs:
  - csharp
  - vb
  name: MatchHeader(String)
  nameWithType: AbstractHeaderMapper<T>.CompositeHeaderMatcher.MatchHeader(String)
  fullName: Steeltoe.Integration.Mapping.AbstractHeaderMapper<T>.CompositeHeaderMatcher.MatchHeader(System.String)
  type: Method
  source:
    remote:
      path: src/Integration/src/IntegrationBase/Mapping/AbstractHeaderMapper.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: MatchHeader
    path: ../Steeltoe/src/Integration/src/IntegrationBase/Mapping/AbstractHeaderMapper.cs
    startLine: 422
  assemblies:
  - Steeltoe.Integration.IntegrationBase
  namespace: Steeltoe.Integration.Mapping
  syntax:
    content: public bool MatchHeader(string headerName)
    parameters:
    - id: headerName
      type: System.String
    return:
      type: System.Boolean
    content.vb: Public Function MatchHeader(headerName As String) As Boolean
  overload: Steeltoe.Integration.Mapping.AbstractHeaderMapper`1.CompositeHeaderMatcher.MatchHeader*
  implements:
  - Steeltoe.Integration.Mapping.AbstractHeaderMapper`1.IHeaderMatcher.MatchHeader(System.String)
  nameWithType.vb: AbstractHeaderMapper(Of T).CompositeHeaderMatcher.MatchHeader(String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Steeltoe.Integration.Mapping.AbstractHeaderMapper(Of T).CompositeHeaderMatcher.MatchHeader(System.String)
- uid: Steeltoe.Integration.Mapping.AbstractHeaderMapper`1.CompositeHeaderMatcher.IsNegated
  commentId: P:Steeltoe.Integration.Mapping.AbstractHeaderMapper`1.CompositeHeaderMatcher.IsNegated
  id: IsNegated
  parent: Steeltoe.Integration.Mapping.AbstractHeaderMapper`1.CompositeHeaderMatcher
  langs:
  - csharp
  - vb
  name: IsNegated
  nameWithType: AbstractHeaderMapper<T>.CompositeHeaderMatcher.IsNegated
  fullName: Steeltoe.Integration.Mapping.AbstractHeaderMapper<T>.CompositeHeaderMatcher.IsNegated
  type: Property
  source:
    remote:
      path: src/Integration/src/IntegrationBase/Mapping/AbstractHeaderMapper.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: IsNegated
    path: ../Steeltoe/src/Integration/src/IntegrationBase/Mapping/AbstractHeaderMapper.cs
    startLine: 440
  assemblies:
  - Steeltoe.Integration.IntegrationBase
  namespace: Steeltoe.Integration.Mapping
  syntax:
    content: public bool IsNegated { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsNegated As Boolean
  overload: Steeltoe.Integration.Mapping.AbstractHeaderMapper`1.CompositeHeaderMatcher.IsNegated*
  implements:
  - Steeltoe.Integration.Mapping.AbstractHeaderMapper`1.IHeaderMatcher.IsNegated
  nameWithType.vb: AbstractHeaderMapper(Of T).CompositeHeaderMatcher.IsNegated
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: Steeltoe.Integration.Mapping.AbstractHeaderMapper(Of T).CompositeHeaderMatcher.IsNegated
references:
- uid: Steeltoe.Integration.Mapping
  commentId: N:Steeltoe.Integration.Mapping
  name: Steeltoe.Integration.Mapping
  nameWithType: Steeltoe.Integration.Mapping
  fullName: Steeltoe.Integration.Mapping
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Steeltoe.Integration.Mapping.AbstractHeaderMapper`1.IHeaderMatcher
  commentId: T:Steeltoe.Integration.Mapping.AbstractHeaderMapper`1.IHeaderMatcher
  parent: Steeltoe.Integration.Mapping
  name: AbstractHeaderMapper.IHeaderMatcher<>
  nameWithType: AbstractHeaderMapper.IHeaderMatcher<>
  fullName: Steeltoe.Integration.Mapping.AbstractHeaderMapper.IHeaderMatcher<>
  nameWithType.vb: AbstractHeaderMapper.IHeaderMatcher(Of )
  fullName.vb: Steeltoe.Integration.Mapping.AbstractHeaderMapper.IHeaderMatcher(Of )
  name.vb: AbstractHeaderMapper.IHeaderMatcher(Of )
  spec.csharp:
  - uid: Steeltoe.Integration.Mapping.AbstractHeaderMapper`1.IHeaderMatcher
    name: AbstractHeaderMapper.IHeaderMatcher
    nameWithType: AbstractHeaderMapper.IHeaderMatcher
    fullName: Steeltoe.Integration.Mapping.AbstractHeaderMapper.IHeaderMatcher
  - name: <
    nameWithType: <
    fullName: <
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Steeltoe.Integration.Mapping.AbstractHeaderMapper`1.IHeaderMatcher
    name: AbstractHeaderMapper.IHeaderMatcher
    nameWithType: AbstractHeaderMapper.IHeaderMatcher
    fullName: Steeltoe.Integration.Mapping.AbstractHeaderMapper.IHeaderMatcher
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Steeltoe.Integration.Mapping.AbstractHeaderMapper`1.CompositeHeaderMatcher.#ctor*
  commentId: Overload:Steeltoe.Integration.Mapping.AbstractHeaderMapper`1.CompositeHeaderMatcher.#ctor
  name: CompositeHeaderMatcher
  nameWithType: AbstractHeaderMapper<T>.CompositeHeaderMatcher.CompositeHeaderMatcher
  fullName: Steeltoe.Integration.Mapping.AbstractHeaderMapper<T>.CompositeHeaderMatcher.CompositeHeaderMatcher
  nameWithType.vb: AbstractHeaderMapper(Of T).CompositeHeaderMatcher.CompositeHeaderMatcher
  fullName.vb: Steeltoe.Integration.Mapping.AbstractHeaderMapper(Of T).CompositeHeaderMatcher.CompositeHeaderMatcher
- uid: System.Collections.Generic.List{Steeltoe.Integration.Mapping.AbstractHeaderMapper`1.IHeaderMatcher}
  commentId: T:System.Collections.Generic.List{Steeltoe.Integration.Mapping.AbstractHeaderMapper`1.IHeaderMatcher}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<AbstractHeaderMapper.IHeaderMatcher<>>
  nameWithType: List<AbstractHeaderMapper.IHeaderMatcher<>>
  fullName: System.Collections.Generic.List<Steeltoe.Integration.Mapping.AbstractHeaderMapper.IHeaderMatcher<>>
  nameWithType.vb: List(Of AbstractHeaderMapper.IHeaderMatcher(Of ))
  fullName.vb: System.Collections.Generic.List(Of Steeltoe.Integration.Mapping.AbstractHeaderMapper.IHeaderMatcher(Of ))
  name.vb: List(Of AbstractHeaderMapper.IHeaderMatcher(Of ))
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Steeltoe.Integration.Mapping.AbstractHeaderMapper`1.IHeaderMatcher
    name: AbstractHeaderMapper.IHeaderMatcher
    nameWithType: AbstractHeaderMapper.IHeaderMatcher
    fullName: Steeltoe.Integration.Mapping.AbstractHeaderMapper.IHeaderMatcher
  - name: <
    nameWithType: <
    fullName: <
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Steeltoe.Integration.Mapping.AbstractHeaderMapper`1.IHeaderMatcher
    name: AbstractHeaderMapper.IHeaderMatcher
    nameWithType: AbstractHeaderMapper.IHeaderMatcher
    fullName: Steeltoe.Integration.Mapping.AbstractHeaderMapper.IHeaderMatcher
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Steeltoe.Integration.Mapping.AbstractHeaderMapper`1.IHeaderMatcher[]
  isExternal: true
  name: AbstractHeaderMapper.IHeaderMatcher<>[]
  nameWithType: AbstractHeaderMapper.IHeaderMatcher<>[]
  fullName: Steeltoe.Integration.Mapping.AbstractHeaderMapper.IHeaderMatcher<>[]
  nameWithType.vb: AbstractHeaderMapper.IHeaderMatcher(Of )()
  fullName.vb: Steeltoe.Integration.Mapping.AbstractHeaderMapper.IHeaderMatcher(Of )()
  name.vb: AbstractHeaderMapper.IHeaderMatcher(Of )()
  spec.csharp:
  - uid: Steeltoe.Integration.Mapping.AbstractHeaderMapper`1.IHeaderMatcher
    name: AbstractHeaderMapper.IHeaderMatcher
    nameWithType: AbstractHeaderMapper.IHeaderMatcher
    fullName: Steeltoe.Integration.Mapping.AbstractHeaderMapper.IHeaderMatcher
  - name: <
    nameWithType: <
    fullName: <
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: Steeltoe.Integration.Mapping.AbstractHeaderMapper`1.IHeaderMatcher
    name: AbstractHeaderMapper.IHeaderMatcher
    nameWithType: AbstractHeaderMapper.IHeaderMatcher
    fullName: Steeltoe.Integration.Mapping.AbstractHeaderMapper.IHeaderMatcher
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: )
    nameWithType: )
    fullName: )
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Steeltoe.Integration.Mapping.AbstractHeaderMapper`1.CompositeHeaderMatcher.MatchHeader*
  commentId: Overload:Steeltoe.Integration.Mapping.AbstractHeaderMapper`1.CompositeHeaderMatcher.MatchHeader
  name: MatchHeader
  nameWithType: AbstractHeaderMapper<T>.CompositeHeaderMatcher.MatchHeader
  fullName: Steeltoe.Integration.Mapping.AbstractHeaderMapper<T>.CompositeHeaderMatcher.MatchHeader
  nameWithType.vb: AbstractHeaderMapper(Of T).CompositeHeaderMatcher.MatchHeader
  fullName.vb: Steeltoe.Integration.Mapping.AbstractHeaderMapper(Of T).CompositeHeaderMatcher.MatchHeader
- uid: Steeltoe.Integration.Mapping.AbstractHeaderMapper`1.IHeaderMatcher.MatchHeader(System.String)
  commentId: M:Steeltoe.Integration.Mapping.AbstractHeaderMapper`1.IHeaderMatcher.MatchHeader(System.String)
  parent: Steeltoe.Integration.Mapping.AbstractHeaderMapper`1.IHeaderMatcher
  isExternal: true
  name: MatchHeader(String)
  nameWithType: AbstractHeaderMapper<T>.IHeaderMatcher.MatchHeader(String)
  fullName: Steeltoe.Integration.Mapping.AbstractHeaderMapper<T>.IHeaderMatcher.MatchHeader(System.String)
  nameWithType.vb: AbstractHeaderMapper(Of T).IHeaderMatcher.MatchHeader(String)
  fullName.vb: Steeltoe.Integration.Mapping.AbstractHeaderMapper(Of T).IHeaderMatcher.MatchHeader(System.String)
  spec.csharp:
  - uid: Steeltoe.Integration.Mapping.AbstractHeaderMapper`1.IHeaderMatcher.MatchHeader(System.String)
    name: MatchHeader
    nameWithType: AbstractHeaderMapper<T>.IHeaderMatcher.MatchHeader
    fullName: Steeltoe.Integration.Mapping.AbstractHeaderMapper<T>.IHeaderMatcher.MatchHeader
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Integration.Mapping.AbstractHeaderMapper`1.IHeaderMatcher.MatchHeader(System.String)
    name: MatchHeader
    nameWithType: AbstractHeaderMapper(Of T).IHeaderMatcher.MatchHeader
    fullName: Steeltoe.Integration.Mapping.AbstractHeaderMapper(Of T).IHeaderMatcher.MatchHeader
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Steeltoe.Integration.Mapping.AbstractHeaderMapper`1.CompositeHeaderMatcher.IsNegated*
  commentId: Overload:Steeltoe.Integration.Mapping.AbstractHeaderMapper`1.CompositeHeaderMatcher.IsNegated
  name: IsNegated
  nameWithType: AbstractHeaderMapper<T>.CompositeHeaderMatcher.IsNegated
  fullName: Steeltoe.Integration.Mapping.AbstractHeaderMapper<T>.CompositeHeaderMatcher.IsNegated
  nameWithType.vb: AbstractHeaderMapper(Of T).CompositeHeaderMatcher.IsNegated
  fullName.vb: Steeltoe.Integration.Mapping.AbstractHeaderMapper(Of T).CompositeHeaderMatcher.IsNegated
- uid: Steeltoe.Integration.Mapping.AbstractHeaderMapper`1.IHeaderMatcher.IsNegated
  commentId: P:Steeltoe.Integration.Mapping.AbstractHeaderMapper`1.IHeaderMatcher.IsNegated
  parent: Steeltoe.Integration.Mapping.AbstractHeaderMapper`1.IHeaderMatcher
  name: IsNegated
  nameWithType: AbstractHeaderMapper<T>.IHeaderMatcher.IsNegated
  fullName: Steeltoe.Integration.Mapping.AbstractHeaderMapper<T>.IHeaderMatcher.IsNegated
  nameWithType.vb: AbstractHeaderMapper(Of T).IHeaderMatcher.IsNegated
  fullName.vb: Steeltoe.Integration.Mapping.AbstractHeaderMapper(Of T).IHeaderMatcher.IsNegated
