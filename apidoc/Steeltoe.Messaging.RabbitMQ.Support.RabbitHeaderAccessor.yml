### YamlMime:ManagedReference
items:
- uid: Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor
  commentId: T:Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor
  id: RabbitHeaderAccessor
  parent: Steeltoe.Messaging.RabbitMQ.Support
  children:
  - Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.#ctor
  - Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.#ctor(Steeltoe.Messaging.IMessage)
  - Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.#ctor(Steeltoe.Messaging.MessageHeaders)
  - Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.AppId
  - Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.BATCH_FORMAT_LENGTH_HEADER4
  - Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.ClusterId
  - Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.ConsumerQueue
  - Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.ConsumerTag
  - Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.ContentEncoding
  - Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.ContentLength
  - Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.CorrelationId
  - Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.CreateMutableAccessor(Steeltoe.Messaging.IMessage)
  - Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.CreateMutableAccessor(Steeltoe.Messaging.IMessageHeaders)
  - Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.DEFAULT_CONTENT_TYPE
  - Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.DEFAULT_DELIVERY_MODE
  - Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.DEFAULT_PRIORITY
  - Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.Delay
  - Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.DeliveryMode
  - Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.DeliveryTag
  - Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.Expiration
  - Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.FinalRetryForMessageWithNoId
  - Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.GetAccessor(Steeltoe.Messaging.IMessage)
  - Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.GetAccessor(Steeltoe.Messaging.IMessageHeaders)
  - Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.GetMutableAccessor(Steeltoe.Messaging.IMessage)
  - Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.GetMutableAccessor(Steeltoe.Messaging.IMessageHeaders)
  - Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.GetXDeathHeader
  - Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.InferredArgumentType
  - Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.INT_MASK
  - Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.IsContentLengthSet
  - Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.IsDeliveryTagSet
  - Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.IsFinalRetryForMessageWithNoId
  - Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.IsReadOnly(System.String)
  - Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.LastInBatch
  - Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.MessageCount
  - Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.MessageId
  - Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.Priority
  - Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.PublishSequenceNumber
  - Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.ReceivedDelay
  - Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.ReceivedDeliveryMode
  - Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.ReceivedExchange
  - Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.ReceivedRoutingKey
  - Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.ReceivedUserId
  - Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.Redelivered
  - Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.ReplyTo
  - Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.ReplyToAddress
  - Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.SPRING_AUTO_DECOMPRESS
  - Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.SPRING_BATCH_FORMAT
  - Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.Target
  - Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.TargetMethod
  - Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.Timestamp
  - Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.ToMessageHeaders
  - Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.Type
  - Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.UserId
  - Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.VerifyType(System.String,System.Object)
  - Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.X_DELAY
  langs:
  - csharp
  - vb
  name: RabbitHeaderAccessor
  nameWithType: RabbitHeaderAccessor
  fullName: Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor
  type: Class
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Support/RabbitHeaderAccessor.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: RabbitHeaderAccessor
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Support/RabbitHeaderAccessor.cs
    startLine: 12
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Support
  syntax:
    content: 'public class RabbitHeaderAccessor : MessageHeaderAccessor, IMessageHeaderAccessor'
    content.vb: >-
      Public Class RabbitHeaderAccessor

          Inherits MessageHeaderAccessor

          Implements IMessageHeaderAccessor
  inheritance:
  - System.Object
  - Steeltoe.Messaging.Support.MessageHeaderAccessor
  implements:
  - Steeltoe.Messaging.Support.IMessageHeaderAccessor
  inheritedMembers:
  - Steeltoe.Messaging.Support.MessageHeaderAccessor.DEFAULT_CHARSET
  - Steeltoe.Messaging.Support.MessageHeaderAccessor.headers
  - Steeltoe.Messaging.Support.MessageHeaderAccessor.GetAccessor``1(Steeltoe.Messaging.IMessage)
  - Steeltoe.Messaging.Support.MessageHeaderAccessor.GetAccessor(Steeltoe.Messaging.IMessage,System.Type)
  - Steeltoe.Messaging.Support.MessageHeaderAccessor.GetAccessor``1(Steeltoe.Messaging.IMessageHeaders)
  - Steeltoe.Messaging.Support.MessageHeaderAccessor.GetAccessor(Steeltoe.Messaging.IMessageHeaders,System.Type)
  - Steeltoe.Messaging.Support.MessageHeaderAccessor.GetMutableAccessor``1(Steeltoe.Messaging.IMessage)
  - Steeltoe.Messaging.Support.MessageHeaderAccessor.GetMutableAccessor``1(Steeltoe.Messaging.IMessageHeaders)
  - Steeltoe.Messaging.Support.MessageHeaderAccessor.GetMutableAccessor(Steeltoe.Messaging.IMessage,System.Type)
  - Steeltoe.Messaging.Support.MessageHeaderAccessor.GetMutableAccessor(Steeltoe.Messaging.IMessageHeaders,System.Type)
  - Steeltoe.Messaging.Support.MessageHeaderAccessor.EnableTimestamp
  - Steeltoe.Messaging.Support.MessageHeaderAccessor.IdGenerator
  - Steeltoe.Messaging.Support.MessageHeaderAccessor.LeaveMutable
  - Steeltoe.Messaging.Support.MessageHeaderAccessor.IsMutable
  - Steeltoe.Messaging.Support.MessageHeaderAccessor.IsModified
  - Steeltoe.Messaging.Support.MessageHeaderAccessor.MessageHeaders
  - Steeltoe.Messaging.Support.MessageHeaderAccessor.Id
  - Steeltoe.Messaging.Support.MessageHeaderAccessor.ContentType
  - Steeltoe.Messaging.Support.MessageHeaderAccessor.ReplyChannelName
  - Steeltoe.Messaging.Support.MessageHeaderAccessor.ReplyChannel
  - Steeltoe.Messaging.Support.MessageHeaderAccessor.ErrorChannelName
  - Steeltoe.Messaging.Support.MessageHeaderAccessor.ErrorChannel
  - Steeltoe.Messaging.Support.MessageHeaderAccessor.SetImmutable
  - Steeltoe.Messaging.Support.MessageHeaderAccessor.ToDictionary
  - Steeltoe.Messaging.Support.MessageHeaderAccessor.GetHeader(System.String)
  - Steeltoe.Messaging.Support.MessageHeaderAccessor.SetHeader(System.String,System.Object)
  - Steeltoe.Messaging.Support.MessageHeaderAccessor.SetHeaderIfAbsent(System.String,System.Object)
  - Steeltoe.Messaging.Support.MessageHeaderAccessor.RemoveHeader(System.String)
  - Steeltoe.Messaging.Support.MessageHeaderAccessor.RemoveHeaders(System.String[])
  - Steeltoe.Messaging.Support.MessageHeaderAccessor.CopyHeaders(System.Collections.Generic.IDictionary{System.String,System.Object})
  - Steeltoe.Messaging.Support.MessageHeaderAccessor.CopyHeadersIfAbsent(System.Collections.Generic.IDictionary{System.String,System.Object})
  - Steeltoe.Messaging.Support.MessageHeaderAccessor.GetShortLogMessage(System.Object)
  - Steeltoe.Messaging.Support.MessageHeaderAccessor.GetDetailedLogMessage(System.Object)
  - Steeltoe.Messaging.Support.MessageHeaderAccessor.ToString
  - Steeltoe.Messaging.Support.MessageHeaderAccessor.GetShortPayloadLogMessage(System.Object)
  - Steeltoe.Messaging.Support.MessageHeaderAccessor.GetDetailedPayloadLogMessage(System.Object)
  - Steeltoe.Messaging.Support.MessageHeaderAccessor.IsReadableContentType
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.INT_MASK
  commentId: F:Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.INT_MASK
  id: INT_MASK
  parent: Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor
  langs:
  - csharp
  - vb
  name: INT_MASK
  nameWithType: RabbitHeaderAccessor.INT_MASK
  fullName: Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.INT_MASK
  type: Field
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Support/RabbitHeaderAccessor.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: INT_MASK
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Support/RabbitHeaderAccessor.cs
    startLine: 14
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Support
  syntax:
    content: public const int INT_MASK = 32
    return:
      type: System.Int32
    content.vb: Public Const INT_MASK As Integer = 32
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.DEFAULT_PRIORITY
  commentId: F:Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.DEFAULT_PRIORITY
  id: DEFAULT_PRIORITY
  parent: Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor
  langs:
  - csharp
  - vb
  name: DEFAULT_PRIORITY
  nameWithType: RabbitHeaderAccessor.DEFAULT_PRIORITY
  fullName: Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.DEFAULT_PRIORITY
  type: Field
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Support/RabbitHeaderAccessor.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: DEFAULT_PRIORITY
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Support/RabbitHeaderAccessor.cs
    startLine: 15
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Support
  syntax:
    content: public const int DEFAULT_PRIORITY = 0
    return:
      type: System.Int32
    content.vb: Public Const DEFAULT_PRIORITY As Integer = 0
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.SPRING_BATCH_FORMAT
  commentId: F:Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.SPRING_BATCH_FORMAT
  id: SPRING_BATCH_FORMAT
  parent: Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor
  langs:
  - csharp
  - vb
  name: SPRING_BATCH_FORMAT
  nameWithType: RabbitHeaderAccessor.SPRING_BATCH_FORMAT
  fullName: Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.SPRING_BATCH_FORMAT
  type: Field
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Support/RabbitHeaderAccessor.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: SPRING_BATCH_FORMAT
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Support/RabbitHeaderAccessor.cs
    startLine: 17
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Support
  syntax:
    content: public const string SPRING_BATCH_FORMAT = "springBatchFormat"
    return:
      type: System.String
    content.vb: Public Const SPRING_BATCH_FORMAT As String = "springBatchFormat"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.BATCH_FORMAT_LENGTH_HEADER4
  commentId: F:Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.BATCH_FORMAT_LENGTH_HEADER4
  id: BATCH_FORMAT_LENGTH_HEADER4
  parent: Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor
  langs:
  - csharp
  - vb
  name: BATCH_FORMAT_LENGTH_HEADER4
  nameWithType: RabbitHeaderAccessor.BATCH_FORMAT_LENGTH_HEADER4
  fullName: Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.BATCH_FORMAT_LENGTH_HEADER4
  type: Field
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Support/RabbitHeaderAccessor.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: BATCH_FORMAT_LENGTH_HEADER4
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Support/RabbitHeaderAccessor.cs
    startLine: 18
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Support
  syntax:
    content: public const string BATCH_FORMAT_LENGTH_HEADER4 = "lengthHeader4"
    return:
      type: System.String
    content.vb: Public Const BATCH_FORMAT_LENGTH_HEADER4 As String = "lengthHeader4"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.SPRING_AUTO_DECOMPRESS
  commentId: F:Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.SPRING_AUTO_DECOMPRESS
  id: SPRING_AUTO_DECOMPRESS
  parent: Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor
  langs:
  - csharp
  - vb
  name: SPRING_AUTO_DECOMPRESS
  nameWithType: RabbitHeaderAccessor.SPRING_AUTO_DECOMPRESS
  fullName: Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.SPRING_AUTO_DECOMPRESS
  type: Field
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Support/RabbitHeaderAccessor.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: SPRING_AUTO_DECOMPRESS
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Support/RabbitHeaderAccessor.cs
    startLine: 19
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Support
  syntax:
    content: public const string SPRING_AUTO_DECOMPRESS = "springAutoDecompress"
    return:
      type: System.String
    content.vb: Public Const SPRING_AUTO_DECOMPRESS As String = "springAutoDecompress"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.X_DELAY
  commentId: F:Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.X_DELAY
  id: X_DELAY
  parent: Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor
  langs:
  - csharp
  - vb
  name: X_DELAY
  nameWithType: RabbitHeaderAccessor.X_DELAY
  fullName: Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.X_DELAY
  type: Field
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Support/RabbitHeaderAccessor.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: X_DELAY
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Support/RabbitHeaderAccessor.cs
    startLine: 20
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Support
  syntax:
    content: public const string X_DELAY = "x-delay"
    return:
      type: System.String
    content.vb: Public Const X_DELAY As String = "x-delay"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.DEFAULT_CONTENT_TYPE
  commentId: F:Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.DEFAULT_CONTENT_TYPE
  id: DEFAULT_CONTENT_TYPE
  parent: Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor
  langs:
  - csharp
  - vb
  name: DEFAULT_CONTENT_TYPE
  nameWithType: RabbitHeaderAccessor.DEFAULT_CONTENT_TYPE
  fullName: Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.DEFAULT_CONTENT_TYPE
  type: Field
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Support/RabbitHeaderAccessor.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: DEFAULT_CONTENT_TYPE
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Support/RabbitHeaderAccessor.cs
    startLine: 21
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Support
  syntax:
    content: public const string DEFAULT_CONTENT_TYPE = "application/octet-stream"
    return:
      type: System.String
    content.vb: Public Const DEFAULT_CONTENT_TYPE As String = "application/octet-stream"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.DEFAULT_DELIVERY_MODE
  commentId: F:Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.DEFAULT_DELIVERY_MODE
  id: DEFAULT_DELIVERY_MODE
  parent: Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor
  langs:
  - csharp
  - vb
  name: DEFAULT_DELIVERY_MODE
  nameWithType: RabbitHeaderAccessor.DEFAULT_DELIVERY_MODE
  fullName: Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.DEFAULT_DELIVERY_MODE
  type: Field
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Support/RabbitHeaderAccessor.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: DEFAULT_DELIVERY_MODE
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Support/RabbitHeaderAccessor.cs
    startLine: 23
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Support
  syntax:
    content: public const MessageDeliveryMode DEFAULT_DELIVERY_MODE = MessageDeliveryMode.PERSISTENT
    return:
      type: Steeltoe.Messaging.RabbitMQ.Core.MessageDeliveryMode
    content.vb: Public Const DEFAULT_DELIVERY_MODE As MessageDeliveryMode = MessageDeliveryMode.PERSISTENT
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.GetAccessor(Steeltoe.Messaging.IMessage)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.GetAccessor(Steeltoe.Messaging.IMessage)
  id: GetAccessor(Steeltoe.Messaging.IMessage)
  parent: Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor
  langs:
  - csharp
  - vb
  name: GetAccessor(IMessage)
  nameWithType: RabbitHeaderAccessor.GetAccessor(IMessage)
  fullName: Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.GetAccessor(Steeltoe.Messaging.IMessage)
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Support/RabbitHeaderAccessor.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: GetAccessor
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Support/RabbitHeaderAccessor.cs
    startLine: 25
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Support
  syntax:
    content: public static RabbitHeaderAccessor GetAccessor(IMessage message)
    parameters:
    - id: message
      type: Steeltoe.Messaging.IMessage
    return:
      type: Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor
    content.vb: Public Shared Function GetAccessor(message As IMessage) As RabbitHeaderAccessor
  overload: Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.GetAccessor*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.GetAccessor(Steeltoe.Messaging.IMessageHeaders)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.GetAccessor(Steeltoe.Messaging.IMessageHeaders)
  id: GetAccessor(Steeltoe.Messaging.IMessageHeaders)
  parent: Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor
  langs:
  - csharp
  - vb
  name: GetAccessor(IMessageHeaders)
  nameWithType: RabbitHeaderAccessor.GetAccessor(IMessageHeaders)
  fullName: Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.GetAccessor(Steeltoe.Messaging.IMessageHeaders)
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Support/RabbitHeaderAccessor.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: GetAccessor
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Support/RabbitHeaderAccessor.cs
    startLine: 30
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Support
  syntax:
    content: public static RabbitHeaderAccessor GetAccessor(IMessageHeaders messageHeaders)
    parameters:
    - id: messageHeaders
      type: Steeltoe.Messaging.IMessageHeaders
    return:
      type: Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor
    content.vb: Public Shared Function GetAccessor(messageHeaders As IMessageHeaders) As RabbitHeaderAccessor
  overload: Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.GetAccessor*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.GetMutableAccessor(Steeltoe.Messaging.IMessage)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.GetMutableAccessor(Steeltoe.Messaging.IMessage)
  id: GetMutableAccessor(Steeltoe.Messaging.IMessage)
  parent: Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor
  langs:
  - csharp
  - vb
  name: GetMutableAccessor(IMessage)
  nameWithType: RabbitHeaderAccessor.GetMutableAccessor(IMessage)
  fullName: Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.GetMutableAccessor(Steeltoe.Messaging.IMessage)
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Support/RabbitHeaderAccessor.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: GetMutableAccessor
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Support/RabbitHeaderAccessor.cs
    startLine: 46
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Support
  syntax:
    content: public static RabbitHeaderAccessor GetMutableAccessor(IMessage message)
    parameters:
    - id: message
      type: Steeltoe.Messaging.IMessage
    return:
      type: Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor
    content.vb: Public Shared Function GetMutableAccessor(message As IMessage) As RabbitHeaderAccessor
  overload: Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.GetMutableAccessor*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.GetMutableAccessor(Steeltoe.Messaging.IMessageHeaders)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.GetMutableAccessor(Steeltoe.Messaging.IMessageHeaders)
  id: GetMutableAccessor(Steeltoe.Messaging.IMessageHeaders)
  parent: Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor
  langs:
  - csharp
  - vb
  name: GetMutableAccessor(IMessageHeaders)
  nameWithType: RabbitHeaderAccessor.GetMutableAccessor(IMessageHeaders)
  fullName: Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.GetMutableAccessor(Steeltoe.Messaging.IMessageHeaders)
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Support/RabbitHeaderAccessor.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: GetMutableAccessor
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Support/RabbitHeaderAccessor.cs
    startLine: 51
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Support
  syntax:
    content: public static RabbitHeaderAccessor GetMutableAccessor(IMessageHeaders headers)
    parameters:
    - id: headers
      type: Steeltoe.Messaging.IMessageHeaders
    return:
      type: Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor
    content.vb: Public Shared Function GetMutableAccessor(headers As IMessageHeaders) As RabbitHeaderAccessor
  overload: Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.GetMutableAccessor*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.#ctor
  commentId: M:Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.#ctor
  id: '#ctor'
  parent: Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor
  langs:
  - csharp
  - vb
  name: RabbitHeaderAccessor()
  nameWithType: RabbitHeaderAccessor.RabbitHeaderAccessor()
  fullName: Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.RabbitHeaderAccessor()
  type: Constructor
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Support/RabbitHeaderAccessor.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: .ctor
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Support/RabbitHeaderAccessor.cs
    startLine: 72
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Support
  syntax:
    content: public RabbitHeaderAccessor()
    content.vb: Public Sub New
  overload: Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.#ctor(Steeltoe.Messaging.IMessage)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.#ctor(Steeltoe.Messaging.IMessage)
  id: '#ctor(Steeltoe.Messaging.IMessage)'
  parent: Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor
  langs:
  - csharp
  - vb
  name: RabbitHeaderAccessor(IMessage)
  nameWithType: RabbitHeaderAccessor.RabbitHeaderAccessor(IMessage)
  fullName: Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.RabbitHeaderAccessor(Steeltoe.Messaging.IMessage)
  type: Constructor
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Support/RabbitHeaderAccessor.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: .ctor
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Support/RabbitHeaderAccessor.cs
    startLine: 77
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Support
  syntax:
    content: public RabbitHeaderAccessor(IMessage message)
    parameters:
    - id: message
      type: Steeltoe.Messaging.IMessage
    content.vb: Public Sub New(message As IMessage)
  overload: Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.#ctor(Steeltoe.Messaging.MessageHeaders)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.#ctor(Steeltoe.Messaging.MessageHeaders)
  id: '#ctor(Steeltoe.Messaging.MessageHeaders)'
  parent: Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor
  langs:
  - csharp
  - vb
  name: RabbitHeaderAccessor(MessageHeaders)
  nameWithType: RabbitHeaderAccessor.RabbitHeaderAccessor(MessageHeaders)
  fullName: Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.RabbitHeaderAccessor(Steeltoe.Messaging.MessageHeaders)
  type: Constructor
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Support/RabbitHeaderAccessor.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: .ctor
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Support/RabbitHeaderAccessor.cs
    startLine: 83
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Support
  syntax:
    content: protected RabbitHeaderAccessor(MessageHeaders headers)
    parameters:
    - id: headers
      type: Steeltoe.Messaging.MessageHeaders
    content.vb: Protected Sub New(headers As MessageHeaders)
  overload: Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.#ctor*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.AppId
  commentId: P:Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.AppId
  id: AppId
  parent: Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor
  langs:
  - csharp
  - vb
  name: AppId
  nameWithType: RabbitHeaderAccessor.AppId
  fullName: Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.AppId
  type: Property
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Support/RabbitHeaderAccessor.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: AppId
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Support/RabbitHeaderAccessor.cs
    startLine: 89
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Support
  syntax:
    content: public string AppId { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property AppId As String
  overload: Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.AppId*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.ClusterId
  commentId: P:Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.ClusterId
  id: ClusterId
  parent: Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor
  langs:
  - csharp
  - vb
  name: ClusterId
  nameWithType: RabbitHeaderAccessor.ClusterId
  fullName: Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.ClusterId
  type: Property
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Support/RabbitHeaderAccessor.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: ClusterId
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Support/RabbitHeaderAccessor.cs
    startLine: 95
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Support
  syntax:
    content: public string ClusterId { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property ClusterId As String
  overload: Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.ClusterId*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.ConsumerQueue
  commentId: P:Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.ConsumerQueue
  id: ConsumerQueue
  parent: Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor
  langs:
  - csharp
  - vb
  name: ConsumerQueue
  nameWithType: RabbitHeaderAccessor.ConsumerQueue
  fullName: Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.ConsumerQueue
  type: Property
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Support/RabbitHeaderAccessor.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: ConsumerQueue
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Support/RabbitHeaderAccessor.cs
    startLine: 101
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Support
  syntax:
    content: public string ConsumerQueue { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property ConsumerQueue As String
  overload: Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.ConsumerQueue*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.ConsumerTag
  commentId: P:Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.ConsumerTag
  id: ConsumerTag
  parent: Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor
  langs:
  - csharp
  - vb
  name: ConsumerTag
  nameWithType: RabbitHeaderAccessor.ConsumerTag
  fullName: Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.ConsumerTag
  type: Property
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Support/RabbitHeaderAccessor.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: ConsumerTag
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Support/RabbitHeaderAccessor.cs
    startLine: 107
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Support
  syntax:
    content: public string ConsumerTag { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property ConsumerTag As String
  overload: Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.ConsumerTag*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.ContentEncoding
  commentId: P:Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.ContentEncoding
  id: ContentEncoding
  parent: Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor
  langs:
  - csharp
  - vb
  name: ContentEncoding
  nameWithType: RabbitHeaderAccessor.ContentEncoding
  fullName: Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.ContentEncoding
  type: Property
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Support/RabbitHeaderAccessor.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: ContentEncoding
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Support/RabbitHeaderAccessor.cs
    startLine: 113
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Support
  syntax:
    content: public string ContentEncoding { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property ContentEncoding As String
  overload: Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.ContentEncoding*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.ContentLength
  commentId: P:Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.ContentLength
  id: ContentLength
  parent: Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor
  langs:
  - csharp
  - vb
  name: ContentLength
  nameWithType: RabbitHeaderAccessor.ContentLength
  fullName: Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.ContentLength
  type: Property
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Support/RabbitHeaderAccessor.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: ContentLength
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Support/RabbitHeaderAccessor.cs
    startLine: 119
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Support
  syntax:
    content: public long? ContentLength { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Int64}
    content.vb: Public Property ContentLength As Long?
  overload: Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.ContentLength*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.IsContentLengthSet
  commentId: P:Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.IsContentLengthSet
  id: IsContentLengthSet
  parent: Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor
  langs:
  - csharp
  - vb
  name: IsContentLengthSet
  nameWithType: RabbitHeaderAccessor.IsContentLengthSet
  fullName: Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.IsContentLengthSet
  type: Property
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Support/RabbitHeaderAccessor.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: IsContentLengthSet
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Support/RabbitHeaderAccessor.cs
    startLine: 125
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Support
  syntax:
    content: public bool IsContentLengthSet { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsContentLengthSet As Boolean
  overload: Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.IsContentLengthSet*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.CorrelationId
  commentId: P:Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.CorrelationId
  id: CorrelationId
  parent: Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor
  langs:
  - csharp
  - vb
  name: CorrelationId
  nameWithType: RabbitHeaderAccessor.CorrelationId
  fullName: Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.CorrelationId
  type: Property
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Support/RabbitHeaderAccessor.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: CorrelationId
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Support/RabbitHeaderAccessor.cs
    startLine: 127
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Support
  syntax:
    content: public string CorrelationId { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property CorrelationId As String
  overload: Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.CorrelationId*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.Delay
  commentId: P:Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.Delay
  id: Delay
  parent: Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor
  langs:
  - csharp
  - vb
  name: Delay
  nameWithType: RabbitHeaderAccessor.Delay
  fullName: Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.Delay
  type: Property
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Support/RabbitHeaderAccessor.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Delay
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Support/RabbitHeaderAccessor.cs
    startLine: 133
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Support
  syntax:
    content: public int? Delay { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Int32}
    content.vb: Public Property Delay As Integer?
  overload: Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.Delay*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.DeliveryMode
  commentId: P:Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.DeliveryMode
  id: DeliveryMode
  parent: Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor
  langs:
  - csharp
  - vb
  name: DeliveryMode
  nameWithType: RabbitHeaderAccessor.DeliveryMode
  fullName: Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.DeliveryMode
  type: Property
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Support/RabbitHeaderAccessor.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: DeliveryMode
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Support/RabbitHeaderAccessor.cs
    startLine: 153
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Support
  syntax:
    content: public MessageDeliveryMode? DeliveryMode { get; set; }
    parameters: []
    return:
      type: System.Nullable{Steeltoe.Messaging.RabbitMQ.Core.MessageDeliveryMode}
    content.vb: Public Property DeliveryMode As MessageDeliveryMode?
  overload: Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.DeliveryMode*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.DeliveryTag
  commentId: P:Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.DeliveryTag
  id: DeliveryTag
  parent: Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor
  langs:
  - csharp
  - vb
  name: DeliveryTag
  nameWithType: RabbitHeaderAccessor.DeliveryTag
  fullName: Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.DeliveryTag
  type: Property
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Support/RabbitHeaderAccessor.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: DeliveryTag
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Support/RabbitHeaderAccessor.cs
    startLine: 159
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Support
  syntax:
    content: public ulong? DeliveryTag { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.UInt64}
    content.vb: Public Property DeliveryTag As ULong?
  overload: Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.DeliveryTag*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.IsDeliveryTagSet
  commentId: P:Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.IsDeliveryTagSet
  id: IsDeliveryTagSet
  parent: Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor
  langs:
  - csharp
  - vb
  name: IsDeliveryTagSet
  nameWithType: RabbitHeaderAccessor.IsDeliveryTagSet
  fullName: Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.IsDeliveryTagSet
  type: Property
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Support/RabbitHeaderAccessor.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: IsDeliveryTagSet
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Support/RabbitHeaderAccessor.cs
    startLine: 165
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Support
  syntax:
    content: public bool IsDeliveryTagSet { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsDeliveryTagSet As Boolean
  overload: Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.IsDeliveryTagSet*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.Expiration
  commentId: P:Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.Expiration
  id: Expiration
  parent: Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor
  langs:
  - csharp
  - vb
  name: Expiration
  nameWithType: RabbitHeaderAccessor.Expiration
  fullName: Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.Expiration
  type: Property
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Support/RabbitHeaderAccessor.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Expiration
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Support/RabbitHeaderAccessor.cs
    startLine: 167
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Support
  syntax:
    content: public string Expiration { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Expiration As String
  overload: Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.Expiration*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.InferredArgumentType
  commentId: P:Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.InferredArgumentType
  id: InferredArgumentType
  parent: Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor
  langs:
  - csharp
  - vb
  name: InferredArgumentType
  nameWithType: RabbitHeaderAccessor.InferredArgumentType
  fullName: Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.InferredArgumentType
  type: Property
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Support/RabbitHeaderAccessor.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: InferredArgumentType
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Support/RabbitHeaderAccessor.cs
    startLine: 173
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Support
  syntax:
    content: public Type InferredArgumentType { get; set; }
    parameters: []
    return:
      type: System.Type
    content.vb: Public Property InferredArgumentType As Type
  overload: Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.InferredArgumentType*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.MessageCount
  commentId: P:Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.MessageCount
  id: MessageCount
  parent: Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor
  langs:
  - csharp
  - vb
  name: MessageCount
  nameWithType: RabbitHeaderAccessor.MessageCount
  fullName: Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.MessageCount
  type: Property
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Support/RabbitHeaderAccessor.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: MessageCount
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Support/RabbitHeaderAccessor.cs
    startLine: 179
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Support
  syntax:
    content: public uint? MessageCount { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.UInt32}
    content.vb: Public Property MessageCount As UInteger?
  overload: Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.MessageCount*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.MessageId
  commentId: P:Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.MessageId
  id: MessageId
  parent: Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor
  langs:
  - csharp
  - vb
  name: MessageId
  nameWithType: RabbitHeaderAccessor.MessageId
  fullName: Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.MessageId
  type: Property
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Support/RabbitHeaderAccessor.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: MessageId
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Support/RabbitHeaderAccessor.cs
    startLine: 185
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Support
  syntax:
    content: public string MessageId { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property MessageId As String
  overload: Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.MessageId*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.Priority
  commentId: P:Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.Priority
  id: Priority
  parent: Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor
  langs:
  - csharp
  - vb
  name: Priority
  nameWithType: RabbitHeaderAccessor.Priority
  fullName: Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.Priority
  type: Property
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Support/RabbitHeaderAccessor.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Priority
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Support/RabbitHeaderAccessor.cs
    startLine: 191
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Support
  syntax:
    content: public int? Priority { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Int32}
    content.vb: Public Property Priority As Integer?
  overload: Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.Priority*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.PublishSequenceNumber
  commentId: P:Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.PublishSequenceNumber
  id: PublishSequenceNumber
  parent: Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor
  langs:
  - csharp
  - vb
  name: PublishSequenceNumber
  nameWithType: RabbitHeaderAccessor.PublishSequenceNumber
  fullName: Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.PublishSequenceNumber
  type: Property
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Support/RabbitHeaderAccessor.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: PublishSequenceNumber
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Support/RabbitHeaderAccessor.cs
    startLine: 197
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Support
  syntax:
    content: public ulong? PublishSequenceNumber { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.UInt64}
    content.vb: Public Property PublishSequenceNumber As ULong?
  overload: Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.PublishSequenceNumber*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.ReceivedDelay
  commentId: P:Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.ReceivedDelay
  id: ReceivedDelay
  parent: Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor
  langs:
  - csharp
  - vb
  name: ReceivedDelay
  nameWithType: RabbitHeaderAccessor.ReceivedDelay
  fullName: Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.ReceivedDelay
  type: Property
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Support/RabbitHeaderAccessor.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: ReceivedDelay
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Support/RabbitHeaderAccessor.cs
    startLine: 203
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Support
  syntax:
    content: public int? ReceivedDelay { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Int32}
    content.vb: Public Property ReceivedDelay As Integer?
  overload: Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.ReceivedDelay*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.ReceivedDeliveryMode
  commentId: P:Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.ReceivedDeliveryMode
  id: ReceivedDeliveryMode
  parent: Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor
  langs:
  - csharp
  - vb
  name: ReceivedDeliveryMode
  nameWithType: RabbitHeaderAccessor.ReceivedDeliveryMode
  fullName: Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.ReceivedDeliveryMode
  type: Property
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Support/RabbitHeaderAccessor.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: ReceivedDeliveryMode
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Support/RabbitHeaderAccessor.cs
    startLine: 209
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Support
  syntax:
    content: public MessageDeliveryMode? ReceivedDeliveryMode { get; set; }
    parameters: []
    return:
      type: System.Nullable{Steeltoe.Messaging.RabbitMQ.Core.MessageDeliveryMode}
    content.vb: Public Property ReceivedDeliveryMode As MessageDeliveryMode?
  overload: Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.ReceivedDeliveryMode*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.ReceivedExchange
  commentId: P:Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.ReceivedExchange
  id: ReceivedExchange
  parent: Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor
  langs:
  - csharp
  - vb
  name: ReceivedExchange
  nameWithType: RabbitHeaderAccessor.ReceivedExchange
  fullName: Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.ReceivedExchange
  type: Property
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Support/RabbitHeaderAccessor.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: ReceivedExchange
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Support/RabbitHeaderAccessor.cs
    startLine: 215
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Support
  syntax:
    content: public string ReceivedExchange { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property ReceivedExchange As String
  overload: Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.ReceivedExchange*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.ReceivedRoutingKey
  commentId: P:Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.ReceivedRoutingKey
  id: ReceivedRoutingKey
  parent: Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor
  langs:
  - csharp
  - vb
  name: ReceivedRoutingKey
  nameWithType: RabbitHeaderAccessor.ReceivedRoutingKey
  fullName: Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.ReceivedRoutingKey
  type: Property
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Support/RabbitHeaderAccessor.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: ReceivedRoutingKey
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Support/RabbitHeaderAccessor.cs
    startLine: 221
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Support
  syntax:
    content: public string ReceivedRoutingKey { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property ReceivedRoutingKey As String
  overload: Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.ReceivedRoutingKey*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.ReceivedUserId
  commentId: P:Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.ReceivedUserId
  id: ReceivedUserId
  parent: Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor
  langs:
  - csharp
  - vb
  name: ReceivedUserId
  nameWithType: RabbitHeaderAccessor.ReceivedUserId
  fullName: Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.ReceivedUserId
  type: Property
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Support/RabbitHeaderAccessor.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: ReceivedUserId
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Support/RabbitHeaderAccessor.cs
    startLine: 227
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Support
  syntax:
    content: public string ReceivedUserId { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property ReceivedUserId As String
  overload: Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.ReceivedUserId*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.Redelivered
  commentId: P:Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.Redelivered
  id: Redelivered
  parent: Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor
  langs:
  - csharp
  - vb
  name: Redelivered
  nameWithType: RabbitHeaderAccessor.Redelivered
  fullName: Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.Redelivered
  type: Property
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Support/RabbitHeaderAccessor.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Redelivered
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Support/RabbitHeaderAccessor.cs
    startLine: 233
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Support
  syntax:
    content: public bool? Redelivered { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Boolean}
    content.vb: Public Property Redelivered As Boolean?
  overload: Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.Redelivered*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.ReplyTo
  commentId: P:Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.ReplyTo
  id: ReplyTo
  parent: Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor
  langs:
  - csharp
  - vb
  name: ReplyTo
  nameWithType: RabbitHeaderAccessor.ReplyTo
  fullName: Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.ReplyTo
  type: Property
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Support/RabbitHeaderAccessor.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: ReplyTo
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Support/RabbitHeaderAccessor.cs
    startLine: 239
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Support
  syntax:
    content: public string ReplyTo { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property ReplyTo As String
  overload: Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.ReplyTo*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.ReplyToAddress
  commentId: P:Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.ReplyToAddress
  id: ReplyToAddress
  parent: Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor
  langs:
  - csharp
  - vb
  name: ReplyToAddress
  nameWithType: RabbitHeaderAccessor.ReplyToAddress
  fullName: Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.ReplyToAddress
  type: Property
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Support/RabbitHeaderAccessor.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: ReplyToAddress
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Support/RabbitHeaderAccessor.cs
    startLine: 245
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Support
  syntax:
    content: public Address ReplyToAddress { get; set; }
    parameters: []
    return:
      type: Steeltoe.Messaging.RabbitMQ.Core.Address
    content.vb: Public Property ReplyToAddress As Address
  overload: Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.ReplyToAddress*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.Target
  commentId: P:Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.Target
  id: Target
  parent: Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor
  langs:
  - csharp
  - vb
  name: Target
  nameWithType: RabbitHeaderAccessor.Target
  fullName: Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.Target
  type: Property
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Support/RabbitHeaderAccessor.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Target
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Support/RabbitHeaderAccessor.cs
    startLine: 264
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Support
  syntax:
    content: public object Target { get; set; }
    parameters: []
    return:
      type: System.Object
    content.vb: Public Property Target As Object
  overload: Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.Target*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.TargetMethod
  commentId: P:Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.TargetMethod
  id: TargetMethod
  parent: Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor
  langs:
  - csharp
  - vb
  name: TargetMethod
  nameWithType: RabbitHeaderAccessor.TargetMethod
  fullName: Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.TargetMethod
  type: Property
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Support/RabbitHeaderAccessor.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: TargetMethod
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Support/RabbitHeaderAccessor.cs
    startLine: 270
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Support
  syntax:
    content: public MethodInfo TargetMethod { get; set; }
    parameters: []
    return:
      type: System.Reflection.MethodInfo
    content.vb: Public Property TargetMethod As MethodInfo
  overload: Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.TargetMethod*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.Timestamp
  commentId: P:Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.Timestamp
  id: Timestamp
  parent: Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor
  langs:
  - csharp
  - vb
  name: Timestamp
  nameWithType: RabbitHeaderAccessor.Timestamp
  fullName: Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.Timestamp
  type: Property
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Support/RabbitHeaderAccessor.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Timestamp
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Support/RabbitHeaderAccessor.cs
    startLine: 276
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Support
  syntax:
    content: public long? Timestamp { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Int64}
    content.vb: Public Property Timestamp As Long?
  overload: Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.Timestamp*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.Type
  commentId: P:Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.Type
  id: Type
  parent: Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor
  langs:
  - csharp
  - vb
  name: Type
  nameWithType: RabbitHeaderAccessor.Type
  fullName: Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.Type
  type: Property
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Support/RabbitHeaderAccessor.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Type
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Support/RabbitHeaderAccessor.cs
    startLine: 282
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Support
  syntax:
    content: public string Type { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Type As String
  overload: Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.Type*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.UserId
  commentId: P:Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.UserId
  id: UserId
  parent: Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor
  langs:
  - csharp
  - vb
  name: UserId
  nameWithType: RabbitHeaderAccessor.UserId
  fullName: Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.UserId
  type: Property
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Support/RabbitHeaderAccessor.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: UserId
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Support/RabbitHeaderAccessor.cs
    startLine: 288
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Support
  syntax:
    content: public string UserId { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property UserId As String
  overload: Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.UserId*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.FinalRetryForMessageWithNoId
  commentId: P:Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.FinalRetryForMessageWithNoId
  id: FinalRetryForMessageWithNoId
  parent: Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor
  langs:
  - csharp
  - vb
  name: FinalRetryForMessageWithNoId
  nameWithType: RabbitHeaderAccessor.FinalRetryForMessageWithNoId
  fullName: Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.FinalRetryForMessageWithNoId
  type: Property
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Support/RabbitHeaderAccessor.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: FinalRetryForMessageWithNoId
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Support/RabbitHeaderAccessor.cs
    startLine: 294
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Support
  syntax:
    content: public bool? FinalRetryForMessageWithNoId { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Boolean}
    content.vb: Public Property FinalRetryForMessageWithNoId As Boolean?
  overload: Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.FinalRetryForMessageWithNoId*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.IsFinalRetryForMessageWithNoId
  commentId: P:Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.IsFinalRetryForMessageWithNoId
  id: IsFinalRetryForMessageWithNoId
  parent: Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor
  langs:
  - csharp
  - vb
  name: IsFinalRetryForMessageWithNoId
  nameWithType: RabbitHeaderAccessor.IsFinalRetryForMessageWithNoId
  fullName: Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.IsFinalRetryForMessageWithNoId
  type: Property
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Support/RabbitHeaderAccessor.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: IsFinalRetryForMessageWithNoId
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Support/RabbitHeaderAccessor.cs
    startLine: 300
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Support
  syntax:
    content: public bool IsFinalRetryForMessageWithNoId { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsFinalRetryForMessageWithNoId As Boolean
  overload: Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.IsFinalRetryForMessageWithNoId*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.LastInBatch
  commentId: P:Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.LastInBatch
  id: LastInBatch
  parent: Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor
  langs:
  - csharp
  - vb
  name: LastInBatch
  nameWithType: RabbitHeaderAccessor.LastInBatch
  fullName: Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.LastInBatch
  type: Property
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Support/RabbitHeaderAccessor.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: LastInBatch
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Support/RabbitHeaderAccessor.cs
    startLine: 302
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Support
  syntax:
    content: public bool? LastInBatch { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Boolean}
    content.vb: Public Property LastInBatch As Boolean?
  overload: Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.LastInBatch*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.GetXDeathHeader
  commentId: M:Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.GetXDeathHeader
  id: GetXDeathHeader
  parent: Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor
  langs:
  - csharp
  - vb
  name: GetXDeathHeader()
  nameWithType: RabbitHeaderAccessor.GetXDeathHeader()
  fullName: Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.GetXDeathHeader()
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Support/RabbitHeaderAccessor.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: GetXDeathHeader
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Support/RabbitHeaderAccessor.cs
    startLine: 308
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Support
  syntax:
    content: public List<Dictionary<string, object>> GetXDeathHeader()
    return:
      type: System.Collections.Generic.List{System.Collections.Generic.Dictionary{System.String,System.Object}}
    content.vb: Public Function GetXDeathHeader As List(Of Dictionary(Of String, Object))
  overload: Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.GetXDeathHeader*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.ToMessageHeaders
  commentId: M:Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.ToMessageHeaders
  id: ToMessageHeaders
  parent: Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor
  langs:
  - csharp
  - vb
  name: ToMessageHeaders()
  nameWithType: RabbitHeaderAccessor.ToMessageHeaders()
  fullName: Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.ToMessageHeaders()
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Support/RabbitHeaderAccessor.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: ToMessageHeaders
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Support/RabbitHeaderAccessor.cs
    startLine: 313
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Support
  syntax:
    content: public override IMessageHeaders ToMessageHeaders()
    return:
      type: Steeltoe.Messaging.IMessageHeaders
    content.vb: Public Overrides Function ToMessageHeaders As IMessageHeaders
  overridden: Steeltoe.Messaging.Support.MessageHeaderAccessor.ToMessageHeaders
  overload: Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.ToMessageHeaders*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.CreateMutableAccessor(Steeltoe.Messaging.IMessage)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.CreateMutableAccessor(Steeltoe.Messaging.IMessage)
  id: CreateMutableAccessor(Steeltoe.Messaging.IMessage)
  parent: Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor
  langs:
  - csharp
  - vb
  name: CreateMutableAccessor(IMessage)
  nameWithType: RabbitHeaderAccessor.CreateMutableAccessor(IMessage)
  fullName: Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.CreateMutableAccessor(Steeltoe.Messaging.IMessage)
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Support/RabbitHeaderAccessor.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: CreateMutableAccessor
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Support/RabbitHeaderAccessor.cs
    startLine: 318
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Support
  syntax:
    content: protected RabbitHeaderAccessor CreateMutableAccessor(IMessage message)
    parameters:
    - id: message
      type: Steeltoe.Messaging.IMessage
    return:
      type: Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor
    content.vb: Protected Function CreateMutableAccessor(message As IMessage) As RabbitHeaderAccessor
  overload: Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.CreateMutableAccessor*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.CreateMutableAccessor(Steeltoe.Messaging.IMessageHeaders)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.CreateMutableAccessor(Steeltoe.Messaging.IMessageHeaders)
  id: CreateMutableAccessor(Steeltoe.Messaging.IMessageHeaders)
  parent: Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor
  langs:
  - csharp
  - vb
  name: CreateMutableAccessor(IMessageHeaders)
  nameWithType: RabbitHeaderAccessor.CreateMutableAccessor(IMessageHeaders)
  fullName: Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.CreateMutableAccessor(Steeltoe.Messaging.IMessageHeaders)
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Support/RabbitHeaderAccessor.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: CreateMutableAccessor
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Support/RabbitHeaderAccessor.cs
    startLine: 323
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Support
  syntax:
    content: protected RabbitHeaderAccessor CreateMutableAccessor(IMessageHeaders messageHeaders)
    parameters:
    - id: messageHeaders
      type: Steeltoe.Messaging.IMessageHeaders
    return:
      type: Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor
    content.vb: Protected Function CreateMutableAccessor(messageHeaders As IMessageHeaders) As RabbitHeaderAccessor
  overload: Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.CreateMutableAccessor*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.IsReadOnly(System.String)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.IsReadOnly(System.String)
  id: IsReadOnly(System.String)
  parent: Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor
  langs:
  - csharp
  - vb
  name: IsReadOnly(String)
  nameWithType: RabbitHeaderAccessor.IsReadOnly(String)
  fullName: Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.IsReadOnly(System.String)
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Support/RabbitHeaderAccessor.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: IsReadOnly
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Support/RabbitHeaderAccessor.cs
    startLine: 334
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Support
  syntax:
    content: protected override bool IsReadOnly(string headerName)
    parameters:
    - id: headerName
      type: System.String
    return:
      type: System.Boolean
    content.vb: Protected Overrides Function IsReadOnly(headerName As String) As Boolean
  overridden: Steeltoe.Messaging.Support.MessageHeaderAccessor.IsReadOnly(System.String)
  overload: Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.IsReadOnly*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.VerifyType(System.String,System.Object)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.VerifyType(System.String,System.Object)
  id: VerifyType(System.String,System.Object)
  parent: Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor
  langs:
  - csharp
  - vb
  name: VerifyType(String, Object)
  nameWithType: RabbitHeaderAccessor.VerifyType(String, Object)
  fullName: Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.VerifyType(System.String, System.Object)
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Support/RabbitHeaderAccessor.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: VerifyType
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Support/RabbitHeaderAccessor.cs
    startLine: 339
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Support
  syntax:
    content: protected override void VerifyType(string headerName, object headerValue)
    parameters:
    - id: headerName
      type: System.String
    - id: headerValue
      type: System.Object
    content.vb: Protected Overrides Sub VerifyType(headerName As String, headerValue As Object)
  overridden: Steeltoe.Messaging.Support.MessageHeaderAccessor.VerifyType(System.String,System.Object)
  overload: Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.VerifyType*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
references:
- uid: Steeltoe.Messaging.RabbitMQ.Support
  commentId: N:Steeltoe.Messaging.RabbitMQ.Support
  name: Steeltoe.Messaging.RabbitMQ.Support
  nameWithType: Steeltoe.Messaging.RabbitMQ.Support
  fullName: Steeltoe.Messaging.RabbitMQ.Support
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Steeltoe.Messaging.Support.MessageHeaderAccessor
  commentId: T:Steeltoe.Messaging.Support.MessageHeaderAccessor
  parent: Steeltoe.Messaging.Support
  name: MessageHeaderAccessor
  nameWithType: MessageHeaderAccessor
  fullName: Steeltoe.Messaging.Support.MessageHeaderAccessor
- uid: Steeltoe.Messaging.Support.IMessageHeaderAccessor
  commentId: T:Steeltoe.Messaging.Support.IMessageHeaderAccessor
  parent: Steeltoe.Messaging.Support
  name: IMessageHeaderAccessor
  nameWithType: IMessageHeaderAccessor
  fullName: Steeltoe.Messaging.Support.IMessageHeaderAccessor
- uid: Steeltoe.Messaging.Support.MessageHeaderAccessor.DEFAULT_CHARSET
  commentId: F:Steeltoe.Messaging.Support.MessageHeaderAccessor.DEFAULT_CHARSET
  parent: Steeltoe.Messaging.Support.MessageHeaderAccessor
  name: DEFAULT_CHARSET
  nameWithType: MessageHeaderAccessor.DEFAULT_CHARSET
  fullName: Steeltoe.Messaging.Support.MessageHeaderAccessor.DEFAULT_CHARSET
- uid: Steeltoe.Messaging.Support.MessageHeaderAccessor.headers
  commentId: F:Steeltoe.Messaging.Support.MessageHeaderAccessor.headers
  parent: Steeltoe.Messaging.Support.MessageHeaderAccessor
  name: headers
  nameWithType: MessageHeaderAccessor.headers
  fullName: Steeltoe.Messaging.Support.MessageHeaderAccessor.headers
- uid: Steeltoe.Messaging.Support.MessageHeaderAccessor.GetAccessor``1(Steeltoe.Messaging.IMessage)
  commentId: M:Steeltoe.Messaging.Support.MessageHeaderAccessor.GetAccessor``1(Steeltoe.Messaging.IMessage)
  parent: Steeltoe.Messaging.Support.MessageHeaderAccessor
  name: GetAccessor<T>(IMessage)
  nameWithType: MessageHeaderAccessor.GetAccessor<T>(IMessage)
  fullName: Steeltoe.Messaging.Support.MessageHeaderAccessor.GetAccessor<T>(Steeltoe.Messaging.IMessage)
  nameWithType.vb: MessageHeaderAccessor.GetAccessor(Of T)(IMessage)
  fullName.vb: Steeltoe.Messaging.Support.MessageHeaderAccessor.GetAccessor(Of T)(Steeltoe.Messaging.IMessage)
  name.vb: GetAccessor(Of T)(IMessage)
  spec.csharp:
  - uid: Steeltoe.Messaging.Support.MessageHeaderAccessor.GetAccessor``1(Steeltoe.Messaging.IMessage)
    name: GetAccessor<T>
    nameWithType: MessageHeaderAccessor.GetAccessor<T>
    fullName: Steeltoe.Messaging.Support.MessageHeaderAccessor.GetAccessor<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Support.MessageHeaderAccessor.GetAccessor``1(Steeltoe.Messaging.IMessage)
    name: GetAccessor(Of T)
    nameWithType: MessageHeaderAccessor.GetAccessor(Of T)
    fullName: Steeltoe.Messaging.Support.MessageHeaderAccessor.GetAccessor(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Support.MessageHeaderAccessor.GetAccessor(Steeltoe.Messaging.IMessage,System.Type)
  commentId: M:Steeltoe.Messaging.Support.MessageHeaderAccessor.GetAccessor(Steeltoe.Messaging.IMessage,System.Type)
  parent: Steeltoe.Messaging.Support.MessageHeaderAccessor
  isExternal: true
  name: GetAccessor(IMessage, Type)
  nameWithType: MessageHeaderAccessor.GetAccessor(IMessage, Type)
  fullName: Steeltoe.Messaging.Support.MessageHeaderAccessor.GetAccessor(Steeltoe.Messaging.IMessage, System.Type)
  spec.csharp:
  - uid: Steeltoe.Messaging.Support.MessageHeaderAccessor.GetAccessor(Steeltoe.Messaging.IMessage,System.Type)
    name: GetAccessor
    nameWithType: MessageHeaderAccessor.GetAccessor
    fullName: Steeltoe.Messaging.Support.MessageHeaderAccessor.GetAccessor
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Support.MessageHeaderAccessor.GetAccessor(Steeltoe.Messaging.IMessage,System.Type)
    name: GetAccessor
    nameWithType: MessageHeaderAccessor.GetAccessor
    fullName: Steeltoe.Messaging.Support.MessageHeaderAccessor.GetAccessor
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Support.MessageHeaderAccessor.GetAccessor``1(Steeltoe.Messaging.IMessageHeaders)
  commentId: M:Steeltoe.Messaging.Support.MessageHeaderAccessor.GetAccessor``1(Steeltoe.Messaging.IMessageHeaders)
  parent: Steeltoe.Messaging.Support.MessageHeaderAccessor
  name: GetAccessor<T>(IMessageHeaders)
  nameWithType: MessageHeaderAccessor.GetAccessor<T>(IMessageHeaders)
  fullName: Steeltoe.Messaging.Support.MessageHeaderAccessor.GetAccessor<T>(Steeltoe.Messaging.IMessageHeaders)
  nameWithType.vb: MessageHeaderAccessor.GetAccessor(Of T)(IMessageHeaders)
  fullName.vb: Steeltoe.Messaging.Support.MessageHeaderAccessor.GetAccessor(Of T)(Steeltoe.Messaging.IMessageHeaders)
  name.vb: GetAccessor(Of T)(IMessageHeaders)
  spec.csharp:
  - uid: Steeltoe.Messaging.Support.MessageHeaderAccessor.GetAccessor``1(Steeltoe.Messaging.IMessageHeaders)
    name: GetAccessor<T>
    nameWithType: MessageHeaderAccessor.GetAccessor<T>
    fullName: Steeltoe.Messaging.Support.MessageHeaderAccessor.GetAccessor<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.IMessageHeaders
    name: IMessageHeaders
    nameWithType: IMessageHeaders
    fullName: Steeltoe.Messaging.IMessageHeaders
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Support.MessageHeaderAccessor.GetAccessor``1(Steeltoe.Messaging.IMessageHeaders)
    name: GetAccessor(Of T)
    nameWithType: MessageHeaderAccessor.GetAccessor(Of T)
    fullName: Steeltoe.Messaging.Support.MessageHeaderAccessor.GetAccessor(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.IMessageHeaders
    name: IMessageHeaders
    nameWithType: IMessageHeaders
    fullName: Steeltoe.Messaging.IMessageHeaders
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Support.MessageHeaderAccessor.GetAccessor(Steeltoe.Messaging.IMessageHeaders,System.Type)
  commentId: M:Steeltoe.Messaging.Support.MessageHeaderAccessor.GetAccessor(Steeltoe.Messaging.IMessageHeaders,System.Type)
  parent: Steeltoe.Messaging.Support.MessageHeaderAccessor
  isExternal: true
  name: GetAccessor(IMessageHeaders, Type)
  nameWithType: MessageHeaderAccessor.GetAccessor(IMessageHeaders, Type)
  fullName: Steeltoe.Messaging.Support.MessageHeaderAccessor.GetAccessor(Steeltoe.Messaging.IMessageHeaders, System.Type)
  spec.csharp:
  - uid: Steeltoe.Messaging.Support.MessageHeaderAccessor.GetAccessor(Steeltoe.Messaging.IMessageHeaders,System.Type)
    name: GetAccessor
    nameWithType: MessageHeaderAccessor.GetAccessor
    fullName: Steeltoe.Messaging.Support.MessageHeaderAccessor.GetAccessor
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.IMessageHeaders
    name: IMessageHeaders
    nameWithType: IMessageHeaders
    fullName: Steeltoe.Messaging.IMessageHeaders
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Support.MessageHeaderAccessor.GetAccessor(Steeltoe.Messaging.IMessageHeaders,System.Type)
    name: GetAccessor
    nameWithType: MessageHeaderAccessor.GetAccessor
    fullName: Steeltoe.Messaging.Support.MessageHeaderAccessor.GetAccessor
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.IMessageHeaders
    name: IMessageHeaders
    nameWithType: IMessageHeaders
    fullName: Steeltoe.Messaging.IMessageHeaders
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Support.MessageHeaderAccessor.GetMutableAccessor``1(Steeltoe.Messaging.IMessage)
  commentId: M:Steeltoe.Messaging.Support.MessageHeaderAccessor.GetMutableAccessor``1(Steeltoe.Messaging.IMessage)
  parent: Steeltoe.Messaging.Support.MessageHeaderAccessor
  name: GetMutableAccessor<T>(IMessage)
  nameWithType: MessageHeaderAccessor.GetMutableAccessor<T>(IMessage)
  fullName: Steeltoe.Messaging.Support.MessageHeaderAccessor.GetMutableAccessor<T>(Steeltoe.Messaging.IMessage)
  nameWithType.vb: MessageHeaderAccessor.GetMutableAccessor(Of T)(IMessage)
  fullName.vb: Steeltoe.Messaging.Support.MessageHeaderAccessor.GetMutableAccessor(Of T)(Steeltoe.Messaging.IMessage)
  name.vb: GetMutableAccessor(Of T)(IMessage)
  spec.csharp:
  - uid: Steeltoe.Messaging.Support.MessageHeaderAccessor.GetMutableAccessor``1(Steeltoe.Messaging.IMessage)
    name: GetMutableAccessor<T>
    nameWithType: MessageHeaderAccessor.GetMutableAccessor<T>
    fullName: Steeltoe.Messaging.Support.MessageHeaderAccessor.GetMutableAccessor<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Support.MessageHeaderAccessor.GetMutableAccessor``1(Steeltoe.Messaging.IMessage)
    name: GetMutableAccessor(Of T)
    nameWithType: MessageHeaderAccessor.GetMutableAccessor(Of T)
    fullName: Steeltoe.Messaging.Support.MessageHeaderAccessor.GetMutableAccessor(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Support.MessageHeaderAccessor.GetMutableAccessor``1(Steeltoe.Messaging.IMessageHeaders)
  commentId: M:Steeltoe.Messaging.Support.MessageHeaderAccessor.GetMutableAccessor``1(Steeltoe.Messaging.IMessageHeaders)
  parent: Steeltoe.Messaging.Support.MessageHeaderAccessor
  name: GetMutableAccessor<T>(IMessageHeaders)
  nameWithType: MessageHeaderAccessor.GetMutableAccessor<T>(IMessageHeaders)
  fullName: Steeltoe.Messaging.Support.MessageHeaderAccessor.GetMutableAccessor<T>(Steeltoe.Messaging.IMessageHeaders)
  nameWithType.vb: MessageHeaderAccessor.GetMutableAccessor(Of T)(IMessageHeaders)
  fullName.vb: Steeltoe.Messaging.Support.MessageHeaderAccessor.GetMutableAccessor(Of T)(Steeltoe.Messaging.IMessageHeaders)
  name.vb: GetMutableAccessor(Of T)(IMessageHeaders)
  spec.csharp:
  - uid: Steeltoe.Messaging.Support.MessageHeaderAccessor.GetMutableAccessor``1(Steeltoe.Messaging.IMessageHeaders)
    name: GetMutableAccessor<T>
    nameWithType: MessageHeaderAccessor.GetMutableAccessor<T>
    fullName: Steeltoe.Messaging.Support.MessageHeaderAccessor.GetMutableAccessor<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.IMessageHeaders
    name: IMessageHeaders
    nameWithType: IMessageHeaders
    fullName: Steeltoe.Messaging.IMessageHeaders
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Support.MessageHeaderAccessor.GetMutableAccessor``1(Steeltoe.Messaging.IMessageHeaders)
    name: GetMutableAccessor(Of T)
    nameWithType: MessageHeaderAccessor.GetMutableAccessor(Of T)
    fullName: Steeltoe.Messaging.Support.MessageHeaderAccessor.GetMutableAccessor(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.IMessageHeaders
    name: IMessageHeaders
    nameWithType: IMessageHeaders
    fullName: Steeltoe.Messaging.IMessageHeaders
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Support.MessageHeaderAccessor.GetMutableAccessor(Steeltoe.Messaging.IMessage,System.Type)
  commentId: M:Steeltoe.Messaging.Support.MessageHeaderAccessor.GetMutableAccessor(Steeltoe.Messaging.IMessage,System.Type)
  parent: Steeltoe.Messaging.Support.MessageHeaderAccessor
  isExternal: true
  name: GetMutableAccessor(IMessage, Type)
  nameWithType: MessageHeaderAccessor.GetMutableAccessor(IMessage, Type)
  fullName: Steeltoe.Messaging.Support.MessageHeaderAccessor.GetMutableAccessor(Steeltoe.Messaging.IMessage, System.Type)
  spec.csharp:
  - uid: Steeltoe.Messaging.Support.MessageHeaderAccessor.GetMutableAccessor(Steeltoe.Messaging.IMessage,System.Type)
    name: GetMutableAccessor
    nameWithType: MessageHeaderAccessor.GetMutableAccessor
    fullName: Steeltoe.Messaging.Support.MessageHeaderAccessor.GetMutableAccessor
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Support.MessageHeaderAccessor.GetMutableAccessor(Steeltoe.Messaging.IMessage,System.Type)
    name: GetMutableAccessor
    nameWithType: MessageHeaderAccessor.GetMutableAccessor
    fullName: Steeltoe.Messaging.Support.MessageHeaderAccessor.GetMutableAccessor
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Support.MessageHeaderAccessor.GetMutableAccessor(Steeltoe.Messaging.IMessageHeaders,System.Type)
  commentId: M:Steeltoe.Messaging.Support.MessageHeaderAccessor.GetMutableAccessor(Steeltoe.Messaging.IMessageHeaders,System.Type)
  parent: Steeltoe.Messaging.Support.MessageHeaderAccessor
  isExternal: true
  name: GetMutableAccessor(IMessageHeaders, Type)
  nameWithType: MessageHeaderAccessor.GetMutableAccessor(IMessageHeaders, Type)
  fullName: Steeltoe.Messaging.Support.MessageHeaderAccessor.GetMutableAccessor(Steeltoe.Messaging.IMessageHeaders, System.Type)
  spec.csharp:
  - uid: Steeltoe.Messaging.Support.MessageHeaderAccessor.GetMutableAccessor(Steeltoe.Messaging.IMessageHeaders,System.Type)
    name: GetMutableAccessor
    nameWithType: MessageHeaderAccessor.GetMutableAccessor
    fullName: Steeltoe.Messaging.Support.MessageHeaderAccessor.GetMutableAccessor
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.IMessageHeaders
    name: IMessageHeaders
    nameWithType: IMessageHeaders
    fullName: Steeltoe.Messaging.IMessageHeaders
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Support.MessageHeaderAccessor.GetMutableAccessor(Steeltoe.Messaging.IMessageHeaders,System.Type)
    name: GetMutableAccessor
    nameWithType: MessageHeaderAccessor.GetMutableAccessor
    fullName: Steeltoe.Messaging.Support.MessageHeaderAccessor.GetMutableAccessor
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.IMessageHeaders
    name: IMessageHeaders
    nameWithType: IMessageHeaders
    fullName: Steeltoe.Messaging.IMessageHeaders
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Support.MessageHeaderAccessor.EnableTimestamp
  commentId: P:Steeltoe.Messaging.Support.MessageHeaderAccessor.EnableTimestamp
  parent: Steeltoe.Messaging.Support.MessageHeaderAccessor
  name: EnableTimestamp
  nameWithType: MessageHeaderAccessor.EnableTimestamp
  fullName: Steeltoe.Messaging.Support.MessageHeaderAccessor.EnableTimestamp
- uid: Steeltoe.Messaging.Support.MessageHeaderAccessor.IdGenerator
  commentId: P:Steeltoe.Messaging.Support.MessageHeaderAccessor.IdGenerator
  parent: Steeltoe.Messaging.Support.MessageHeaderAccessor
  name: IdGenerator
  nameWithType: MessageHeaderAccessor.IdGenerator
  fullName: Steeltoe.Messaging.Support.MessageHeaderAccessor.IdGenerator
- uid: Steeltoe.Messaging.Support.MessageHeaderAccessor.LeaveMutable
  commentId: P:Steeltoe.Messaging.Support.MessageHeaderAccessor.LeaveMutable
  parent: Steeltoe.Messaging.Support.MessageHeaderAccessor
  name: LeaveMutable
  nameWithType: MessageHeaderAccessor.LeaveMutable
  fullName: Steeltoe.Messaging.Support.MessageHeaderAccessor.LeaveMutable
- uid: Steeltoe.Messaging.Support.MessageHeaderAccessor.IsMutable
  commentId: P:Steeltoe.Messaging.Support.MessageHeaderAccessor.IsMutable
  parent: Steeltoe.Messaging.Support.MessageHeaderAccessor
  name: IsMutable
  nameWithType: MessageHeaderAccessor.IsMutable
  fullName: Steeltoe.Messaging.Support.MessageHeaderAccessor.IsMutable
- uid: Steeltoe.Messaging.Support.MessageHeaderAccessor.IsModified
  commentId: P:Steeltoe.Messaging.Support.MessageHeaderAccessor.IsModified
  parent: Steeltoe.Messaging.Support.MessageHeaderAccessor
  name: IsModified
  nameWithType: MessageHeaderAccessor.IsModified
  fullName: Steeltoe.Messaging.Support.MessageHeaderAccessor.IsModified
- uid: Steeltoe.Messaging.Support.MessageHeaderAccessor.MessageHeaders
  commentId: P:Steeltoe.Messaging.Support.MessageHeaderAccessor.MessageHeaders
  parent: Steeltoe.Messaging.Support.MessageHeaderAccessor
  name: MessageHeaders
  nameWithType: MessageHeaderAccessor.MessageHeaders
  fullName: Steeltoe.Messaging.Support.MessageHeaderAccessor.MessageHeaders
- uid: Steeltoe.Messaging.Support.MessageHeaderAccessor.Id
  commentId: P:Steeltoe.Messaging.Support.MessageHeaderAccessor.Id
  parent: Steeltoe.Messaging.Support.MessageHeaderAccessor
  name: Id
  nameWithType: MessageHeaderAccessor.Id
  fullName: Steeltoe.Messaging.Support.MessageHeaderAccessor.Id
- uid: Steeltoe.Messaging.Support.MessageHeaderAccessor.ContentType
  commentId: P:Steeltoe.Messaging.Support.MessageHeaderAccessor.ContentType
  parent: Steeltoe.Messaging.Support.MessageHeaderAccessor
  name: ContentType
  nameWithType: MessageHeaderAccessor.ContentType
  fullName: Steeltoe.Messaging.Support.MessageHeaderAccessor.ContentType
- uid: Steeltoe.Messaging.Support.MessageHeaderAccessor.ReplyChannelName
  commentId: P:Steeltoe.Messaging.Support.MessageHeaderAccessor.ReplyChannelName
  parent: Steeltoe.Messaging.Support.MessageHeaderAccessor
  name: ReplyChannelName
  nameWithType: MessageHeaderAccessor.ReplyChannelName
  fullName: Steeltoe.Messaging.Support.MessageHeaderAccessor.ReplyChannelName
- uid: Steeltoe.Messaging.Support.MessageHeaderAccessor.ReplyChannel
  commentId: P:Steeltoe.Messaging.Support.MessageHeaderAccessor.ReplyChannel
  parent: Steeltoe.Messaging.Support.MessageHeaderAccessor
  name: ReplyChannel
  nameWithType: MessageHeaderAccessor.ReplyChannel
  fullName: Steeltoe.Messaging.Support.MessageHeaderAccessor.ReplyChannel
- uid: Steeltoe.Messaging.Support.MessageHeaderAccessor.ErrorChannelName
  commentId: P:Steeltoe.Messaging.Support.MessageHeaderAccessor.ErrorChannelName
  parent: Steeltoe.Messaging.Support.MessageHeaderAccessor
  name: ErrorChannelName
  nameWithType: MessageHeaderAccessor.ErrorChannelName
  fullName: Steeltoe.Messaging.Support.MessageHeaderAccessor.ErrorChannelName
- uid: Steeltoe.Messaging.Support.MessageHeaderAccessor.ErrorChannel
  commentId: P:Steeltoe.Messaging.Support.MessageHeaderAccessor.ErrorChannel
  parent: Steeltoe.Messaging.Support.MessageHeaderAccessor
  name: ErrorChannel
  nameWithType: MessageHeaderAccessor.ErrorChannel
  fullName: Steeltoe.Messaging.Support.MessageHeaderAccessor.ErrorChannel
- uid: Steeltoe.Messaging.Support.MessageHeaderAccessor.SetImmutable
  commentId: M:Steeltoe.Messaging.Support.MessageHeaderAccessor.SetImmutable
  parent: Steeltoe.Messaging.Support.MessageHeaderAccessor
  name: SetImmutable()
  nameWithType: MessageHeaderAccessor.SetImmutable()
  fullName: Steeltoe.Messaging.Support.MessageHeaderAccessor.SetImmutable()
  spec.csharp:
  - uid: Steeltoe.Messaging.Support.MessageHeaderAccessor.SetImmutable
    name: SetImmutable
    nameWithType: MessageHeaderAccessor.SetImmutable
    fullName: Steeltoe.Messaging.Support.MessageHeaderAccessor.SetImmutable
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Support.MessageHeaderAccessor.SetImmutable
    name: SetImmutable
    nameWithType: MessageHeaderAccessor.SetImmutable
    fullName: Steeltoe.Messaging.Support.MessageHeaderAccessor.SetImmutable
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Support.MessageHeaderAccessor.ToDictionary
  commentId: M:Steeltoe.Messaging.Support.MessageHeaderAccessor.ToDictionary
  parent: Steeltoe.Messaging.Support.MessageHeaderAccessor
  name: ToDictionary()
  nameWithType: MessageHeaderAccessor.ToDictionary()
  fullName: Steeltoe.Messaging.Support.MessageHeaderAccessor.ToDictionary()
  spec.csharp:
  - uid: Steeltoe.Messaging.Support.MessageHeaderAccessor.ToDictionary
    name: ToDictionary
    nameWithType: MessageHeaderAccessor.ToDictionary
    fullName: Steeltoe.Messaging.Support.MessageHeaderAccessor.ToDictionary
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Support.MessageHeaderAccessor.ToDictionary
    name: ToDictionary
    nameWithType: MessageHeaderAccessor.ToDictionary
    fullName: Steeltoe.Messaging.Support.MessageHeaderAccessor.ToDictionary
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Support.MessageHeaderAccessor.GetHeader(System.String)
  commentId: M:Steeltoe.Messaging.Support.MessageHeaderAccessor.GetHeader(System.String)
  parent: Steeltoe.Messaging.Support.MessageHeaderAccessor
  isExternal: true
  name: GetHeader(String)
  nameWithType: MessageHeaderAccessor.GetHeader(String)
  fullName: Steeltoe.Messaging.Support.MessageHeaderAccessor.GetHeader(System.String)
  spec.csharp:
  - uid: Steeltoe.Messaging.Support.MessageHeaderAccessor.GetHeader(System.String)
    name: GetHeader
    nameWithType: MessageHeaderAccessor.GetHeader
    fullName: Steeltoe.Messaging.Support.MessageHeaderAccessor.GetHeader
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Support.MessageHeaderAccessor.GetHeader(System.String)
    name: GetHeader
    nameWithType: MessageHeaderAccessor.GetHeader
    fullName: Steeltoe.Messaging.Support.MessageHeaderAccessor.GetHeader
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Support.MessageHeaderAccessor.SetHeader(System.String,System.Object)
  commentId: M:Steeltoe.Messaging.Support.MessageHeaderAccessor.SetHeader(System.String,System.Object)
  parent: Steeltoe.Messaging.Support.MessageHeaderAccessor
  isExternal: true
  name: SetHeader(String, Object)
  nameWithType: MessageHeaderAccessor.SetHeader(String, Object)
  fullName: Steeltoe.Messaging.Support.MessageHeaderAccessor.SetHeader(System.String, System.Object)
  spec.csharp:
  - uid: Steeltoe.Messaging.Support.MessageHeaderAccessor.SetHeader(System.String,System.Object)
    name: SetHeader
    nameWithType: MessageHeaderAccessor.SetHeader
    fullName: Steeltoe.Messaging.Support.MessageHeaderAccessor.SetHeader
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Support.MessageHeaderAccessor.SetHeader(System.String,System.Object)
    name: SetHeader
    nameWithType: MessageHeaderAccessor.SetHeader
    fullName: Steeltoe.Messaging.Support.MessageHeaderAccessor.SetHeader
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Support.MessageHeaderAccessor.SetHeaderIfAbsent(System.String,System.Object)
  commentId: M:Steeltoe.Messaging.Support.MessageHeaderAccessor.SetHeaderIfAbsent(System.String,System.Object)
  parent: Steeltoe.Messaging.Support.MessageHeaderAccessor
  isExternal: true
  name: SetHeaderIfAbsent(String, Object)
  nameWithType: MessageHeaderAccessor.SetHeaderIfAbsent(String, Object)
  fullName: Steeltoe.Messaging.Support.MessageHeaderAccessor.SetHeaderIfAbsent(System.String, System.Object)
  spec.csharp:
  - uid: Steeltoe.Messaging.Support.MessageHeaderAccessor.SetHeaderIfAbsent(System.String,System.Object)
    name: SetHeaderIfAbsent
    nameWithType: MessageHeaderAccessor.SetHeaderIfAbsent
    fullName: Steeltoe.Messaging.Support.MessageHeaderAccessor.SetHeaderIfAbsent
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Support.MessageHeaderAccessor.SetHeaderIfAbsent(System.String,System.Object)
    name: SetHeaderIfAbsent
    nameWithType: MessageHeaderAccessor.SetHeaderIfAbsent
    fullName: Steeltoe.Messaging.Support.MessageHeaderAccessor.SetHeaderIfAbsent
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Support.MessageHeaderAccessor.RemoveHeader(System.String)
  commentId: M:Steeltoe.Messaging.Support.MessageHeaderAccessor.RemoveHeader(System.String)
  parent: Steeltoe.Messaging.Support.MessageHeaderAccessor
  isExternal: true
  name: RemoveHeader(String)
  nameWithType: MessageHeaderAccessor.RemoveHeader(String)
  fullName: Steeltoe.Messaging.Support.MessageHeaderAccessor.RemoveHeader(System.String)
  spec.csharp:
  - uid: Steeltoe.Messaging.Support.MessageHeaderAccessor.RemoveHeader(System.String)
    name: RemoveHeader
    nameWithType: MessageHeaderAccessor.RemoveHeader
    fullName: Steeltoe.Messaging.Support.MessageHeaderAccessor.RemoveHeader
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Support.MessageHeaderAccessor.RemoveHeader(System.String)
    name: RemoveHeader
    nameWithType: MessageHeaderAccessor.RemoveHeader
    fullName: Steeltoe.Messaging.Support.MessageHeaderAccessor.RemoveHeader
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Support.MessageHeaderAccessor.RemoveHeaders(System.String[])
  commentId: M:Steeltoe.Messaging.Support.MessageHeaderAccessor.RemoveHeaders(System.String[])
  parent: Steeltoe.Messaging.Support.MessageHeaderAccessor
  isExternal: true
  name: RemoveHeaders(String[])
  nameWithType: MessageHeaderAccessor.RemoveHeaders(String[])
  fullName: Steeltoe.Messaging.Support.MessageHeaderAccessor.RemoveHeaders(System.String[])
  nameWithType.vb: MessageHeaderAccessor.RemoveHeaders(String())
  fullName.vb: Steeltoe.Messaging.Support.MessageHeaderAccessor.RemoveHeaders(System.String())
  name.vb: RemoveHeaders(String())
  spec.csharp:
  - uid: Steeltoe.Messaging.Support.MessageHeaderAccessor.RemoveHeaders(System.String[])
    name: RemoveHeaders
    nameWithType: MessageHeaderAccessor.RemoveHeaders
    fullName: Steeltoe.Messaging.Support.MessageHeaderAccessor.RemoveHeaders
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Support.MessageHeaderAccessor.RemoveHeaders(System.String[])
    name: RemoveHeaders
    nameWithType: MessageHeaderAccessor.RemoveHeaders
    fullName: Steeltoe.Messaging.Support.MessageHeaderAccessor.RemoveHeaders
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Support.MessageHeaderAccessor.CopyHeaders(System.Collections.Generic.IDictionary{System.String,System.Object})
  commentId: M:Steeltoe.Messaging.Support.MessageHeaderAccessor.CopyHeaders(System.Collections.Generic.IDictionary{System.String,System.Object})
  parent: Steeltoe.Messaging.Support.MessageHeaderAccessor
  isExternal: true
  name: CopyHeaders(IDictionary<String, Object>)
  nameWithType: MessageHeaderAccessor.CopyHeaders(IDictionary<String, Object>)
  fullName: Steeltoe.Messaging.Support.MessageHeaderAccessor.CopyHeaders(System.Collections.Generic.IDictionary<System.String, System.Object>)
  nameWithType.vb: MessageHeaderAccessor.CopyHeaders(IDictionary(Of String, Object))
  fullName.vb: Steeltoe.Messaging.Support.MessageHeaderAccessor.CopyHeaders(System.Collections.Generic.IDictionary(Of System.String, System.Object))
  name.vb: CopyHeaders(IDictionary(Of String, Object))
  spec.csharp:
  - uid: Steeltoe.Messaging.Support.MessageHeaderAccessor.CopyHeaders(System.Collections.Generic.IDictionary{System.String,System.Object})
    name: CopyHeaders
    nameWithType: MessageHeaderAccessor.CopyHeaders
    fullName: Steeltoe.Messaging.Support.MessageHeaderAccessor.CopyHeaders
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Support.MessageHeaderAccessor.CopyHeaders(System.Collections.Generic.IDictionary{System.String,System.Object})
    name: CopyHeaders
    nameWithType: MessageHeaderAccessor.CopyHeaders
    fullName: Steeltoe.Messaging.Support.MessageHeaderAccessor.CopyHeaders
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Support.MessageHeaderAccessor.CopyHeadersIfAbsent(System.Collections.Generic.IDictionary{System.String,System.Object})
  commentId: M:Steeltoe.Messaging.Support.MessageHeaderAccessor.CopyHeadersIfAbsent(System.Collections.Generic.IDictionary{System.String,System.Object})
  parent: Steeltoe.Messaging.Support.MessageHeaderAccessor
  isExternal: true
  name: CopyHeadersIfAbsent(IDictionary<String, Object>)
  nameWithType: MessageHeaderAccessor.CopyHeadersIfAbsent(IDictionary<String, Object>)
  fullName: Steeltoe.Messaging.Support.MessageHeaderAccessor.CopyHeadersIfAbsent(System.Collections.Generic.IDictionary<System.String, System.Object>)
  nameWithType.vb: MessageHeaderAccessor.CopyHeadersIfAbsent(IDictionary(Of String, Object))
  fullName.vb: Steeltoe.Messaging.Support.MessageHeaderAccessor.CopyHeadersIfAbsent(System.Collections.Generic.IDictionary(Of System.String, System.Object))
  name.vb: CopyHeadersIfAbsent(IDictionary(Of String, Object))
  spec.csharp:
  - uid: Steeltoe.Messaging.Support.MessageHeaderAccessor.CopyHeadersIfAbsent(System.Collections.Generic.IDictionary{System.String,System.Object})
    name: CopyHeadersIfAbsent
    nameWithType: MessageHeaderAccessor.CopyHeadersIfAbsent
    fullName: Steeltoe.Messaging.Support.MessageHeaderAccessor.CopyHeadersIfAbsent
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Support.MessageHeaderAccessor.CopyHeadersIfAbsent(System.Collections.Generic.IDictionary{System.String,System.Object})
    name: CopyHeadersIfAbsent
    nameWithType: MessageHeaderAccessor.CopyHeadersIfAbsent
    fullName: Steeltoe.Messaging.Support.MessageHeaderAccessor.CopyHeadersIfAbsent
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Support.MessageHeaderAccessor.GetShortLogMessage(System.Object)
  commentId: M:Steeltoe.Messaging.Support.MessageHeaderAccessor.GetShortLogMessage(System.Object)
  parent: Steeltoe.Messaging.Support.MessageHeaderAccessor
  isExternal: true
  name: GetShortLogMessage(Object)
  nameWithType: MessageHeaderAccessor.GetShortLogMessage(Object)
  fullName: Steeltoe.Messaging.Support.MessageHeaderAccessor.GetShortLogMessage(System.Object)
  spec.csharp:
  - uid: Steeltoe.Messaging.Support.MessageHeaderAccessor.GetShortLogMessage(System.Object)
    name: GetShortLogMessage
    nameWithType: MessageHeaderAccessor.GetShortLogMessage
    fullName: Steeltoe.Messaging.Support.MessageHeaderAccessor.GetShortLogMessage
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Support.MessageHeaderAccessor.GetShortLogMessage(System.Object)
    name: GetShortLogMessage
    nameWithType: MessageHeaderAccessor.GetShortLogMessage
    fullName: Steeltoe.Messaging.Support.MessageHeaderAccessor.GetShortLogMessage
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Support.MessageHeaderAccessor.GetDetailedLogMessage(System.Object)
  commentId: M:Steeltoe.Messaging.Support.MessageHeaderAccessor.GetDetailedLogMessage(System.Object)
  parent: Steeltoe.Messaging.Support.MessageHeaderAccessor
  isExternal: true
  name: GetDetailedLogMessage(Object)
  nameWithType: MessageHeaderAccessor.GetDetailedLogMessage(Object)
  fullName: Steeltoe.Messaging.Support.MessageHeaderAccessor.GetDetailedLogMessage(System.Object)
  spec.csharp:
  - uid: Steeltoe.Messaging.Support.MessageHeaderAccessor.GetDetailedLogMessage(System.Object)
    name: GetDetailedLogMessage
    nameWithType: MessageHeaderAccessor.GetDetailedLogMessage
    fullName: Steeltoe.Messaging.Support.MessageHeaderAccessor.GetDetailedLogMessage
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Support.MessageHeaderAccessor.GetDetailedLogMessage(System.Object)
    name: GetDetailedLogMessage
    nameWithType: MessageHeaderAccessor.GetDetailedLogMessage
    fullName: Steeltoe.Messaging.Support.MessageHeaderAccessor.GetDetailedLogMessage
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Support.MessageHeaderAccessor.ToString
  commentId: M:Steeltoe.Messaging.Support.MessageHeaderAccessor.ToString
  parent: Steeltoe.Messaging.Support.MessageHeaderAccessor
  name: ToString()
  nameWithType: MessageHeaderAccessor.ToString()
  fullName: Steeltoe.Messaging.Support.MessageHeaderAccessor.ToString()
  spec.csharp:
  - uid: Steeltoe.Messaging.Support.MessageHeaderAccessor.ToString
    name: ToString
    nameWithType: MessageHeaderAccessor.ToString
    fullName: Steeltoe.Messaging.Support.MessageHeaderAccessor.ToString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Support.MessageHeaderAccessor.ToString
    name: ToString
    nameWithType: MessageHeaderAccessor.ToString
    fullName: Steeltoe.Messaging.Support.MessageHeaderAccessor.ToString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Support.MessageHeaderAccessor.GetShortPayloadLogMessage(System.Object)
  commentId: M:Steeltoe.Messaging.Support.MessageHeaderAccessor.GetShortPayloadLogMessage(System.Object)
  parent: Steeltoe.Messaging.Support.MessageHeaderAccessor
  isExternal: true
  name: GetShortPayloadLogMessage(Object)
  nameWithType: MessageHeaderAccessor.GetShortPayloadLogMessage(Object)
  fullName: Steeltoe.Messaging.Support.MessageHeaderAccessor.GetShortPayloadLogMessage(System.Object)
  spec.csharp:
  - uid: Steeltoe.Messaging.Support.MessageHeaderAccessor.GetShortPayloadLogMessage(System.Object)
    name: GetShortPayloadLogMessage
    nameWithType: MessageHeaderAccessor.GetShortPayloadLogMessage
    fullName: Steeltoe.Messaging.Support.MessageHeaderAccessor.GetShortPayloadLogMessage
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Support.MessageHeaderAccessor.GetShortPayloadLogMessage(System.Object)
    name: GetShortPayloadLogMessage
    nameWithType: MessageHeaderAccessor.GetShortPayloadLogMessage
    fullName: Steeltoe.Messaging.Support.MessageHeaderAccessor.GetShortPayloadLogMessage
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Support.MessageHeaderAccessor.GetDetailedPayloadLogMessage(System.Object)
  commentId: M:Steeltoe.Messaging.Support.MessageHeaderAccessor.GetDetailedPayloadLogMessage(System.Object)
  parent: Steeltoe.Messaging.Support.MessageHeaderAccessor
  isExternal: true
  name: GetDetailedPayloadLogMessage(Object)
  nameWithType: MessageHeaderAccessor.GetDetailedPayloadLogMessage(Object)
  fullName: Steeltoe.Messaging.Support.MessageHeaderAccessor.GetDetailedPayloadLogMessage(System.Object)
  spec.csharp:
  - uid: Steeltoe.Messaging.Support.MessageHeaderAccessor.GetDetailedPayloadLogMessage(System.Object)
    name: GetDetailedPayloadLogMessage
    nameWithType: MessageHeaderAccessor.GetDetailedPayloadLogMessage
    fullName: Steeltoe.Messaging.Support.MessageHeaderAccessor.GetDetailedPayloadLogMessage
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Support.MessageHeaderAccessor.GetDetailedPayloadLogMessage(System.Object)
    name: GetDetailedPayloadLogMessage
    nameWithType: MessageHeaderAccessor.GetDetailedPayloadLogMessage
    fullName: Steeltoe.Messaging.Support.MessageHeaderAccessor.GetDetailedPayloadLogMessage
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Support.MessageHeaderAccessor.IsReadableContentType
  commentId: M:Steeltoe.Messaging.Support.MessageHeaderAccessor.IsReadableContentType
  parent: Steeltoe.Messaging.Support.MessageHeaderAccessor
  name: IsReadableContentType()
  nameWithType: MessageHeaderAccessor.IsReadableContentType()
  fullName: Steeltoe.Messaging.Support.MessageHeaderAccessor.IsReadableContentType()
  spec.csharp:
  - uid: Steeltoe.Messaging.Support.MessageHeaderAccessor.IsReadableContentType
    name: IsReadableContentType
    nameWithType: MessageHeaderAccessor.IsReadableContentType
    fullName: Steeltoe.Messaging.Support.MessageHeaderAccessor.IsReadableContentType
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Support.MessageHeaderAccessor.IsReadableContentType
    name: IsReadableContentType
    nameWithType: MessageHeaderAccessor.IsReadableContentType
    fullName: Steeltoe.Messaging.Support.MessageHeaderAccessor.IsReadableContentType
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Steeltoe.Messaging.Support
  commentId: N:Steeltoe.Messaging.Support
  name: Steeltoe.Messaging.Support
  nameWithType: Steeltoe.Messaging.Support
  fullName: Steeltoe.Messaging.Support
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Steeltoe.Messaging.RabbitMQ.Core.MessageDeliveryMode
  commentId: T:Steeltoe.Messaging.RabbitMQ.Core.MessageDeliveryMode
  parent: Steeltoe.Messaging.RabbitMQ.Core
  name: MessageDeliveryMode
  nameWithType: MessageDeliveryMode
  fullName: Steeltoe.Messaging.RabbitMQ.Core.MessageDeliveryMode
- uid: Steeltoe.Messaging.RabbitMQ.Core
  commentId: N:Steeltoe.Messaging.RabbitMQ.Core
  name: Steeltoe.Messaging.RabbitMQ.Core
  nameWithType: Steeltoe.Messaging.RabbitMQ.Core
  fullName: Steeltoe.Messaging.RabbitMQ.Core
- uid: Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.GetAccessor*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.GetAccessor
  name: GetAccessor
  nameWithType: RabbitHeaderAccessor.GetAccessor
  fullName: Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.GetAccessor
- uid: Steeltoe.Messaging.IMessage
  commentId: T:Steeltoe.Messaging.IMessage
  parent: Steeltoe.Messaging
  name: IMessage
  nameWithType: IMessage
  fullName: Steeltoe.Messaging.IMessage
- uid: Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor
  commentId: T:Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor
  parent: Steeltoe.Messaging.RabbitMQ.Support
  name: RabbitHeaderAccessor
  nameWithType: RabbitHeaderAccessor
  fullName: Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor
- uid: Steeltoe.Messaging
  commentId: N:Steeltoe.Messaging
  name: Steeltoe.Messaging
  nameWithType: Steeltoe.Messaging
  fullName: Steeltoe.Messaging
- uid: Steeltoe.Messaging.IMessageHeaders
  commentId: T:Steeltoe.Messaging.IMessageHeaders
  parent: Steeltoe.Messaging
  name: IMessageHeaders
  nameWithType: IMessageHeaders
  fullName: Steeltoe.Messaging.IMessageHeaders
- uid: Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.GetMutableAccessor*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.GetMutableAccessor
  name: GetMutableAccessor
  nameWithType: RabbitHeaderAccessor.GetMutableAccessor
  fullName: Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.GetMutableAccessor
- uid: Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.#ctor*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.#ctor
  name: RabbitHeaderAccessor
  nameWithType: RabbitHeaderAccessor.RabbitHeaderAccessor
  fullName: Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.RabbitHeaderAccessor
- uid: Steeltoe.Messaging.MessageHeaders
  commentId: T:Steeltoe.Messaging.MessageHeaders
  parent: Steeltoe.Messaging
  name: MessageHeaders
  nameWithType: MessageHeaders
  fullName: Steeltoe.Messaging.MessageHeaders
- uid: Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.AppId*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.AppId
  name: AppId
  nameWithType: RabbitHeaderAccessor.AppId
  fullName: Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.AppId
- uid: Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.ClusterId*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.ClusterId
  name: ClusterId
  nameWithType: RabbitHeaderAccessor.ClusterId
  fullName: Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.ClusterId
- uid: Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.ConsumerQueue*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.ConsumerQueue
  name: ConsumerQueue
  nameWithType: RabbitHeaderAccessor.ConsumerQueue
  fullName: Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.ConsumerQueue
- uid: Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.ConsumerTag*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.ConsumerTag
  name: ConsumerTag
  nameWithType: RabbitHeaderAccessor.ConsumerTag
  fullName: Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.ConsumerTag
- uid: Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.ContentEncoding*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.ContentEncoding
  name: ContentEncoding
  nameWithType: RabbitHeaderAccessor.ContentEncoding
  fullName: Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.ContentEncoding
- uid: Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.ContentLength*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.ContentLength
  name: ContentLength
  nameWithType: RabbitHeaderAccessor.ContentLength
  fullName: Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.ContentLength
- uid: System.Nullable{System.Int64}
  commentId: T:System.Nullable{System.Int64}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Int64>
  nameWithType: Nullable<Int64>
  fullName: System.Nullable<System.Int64>
  nameWithType.vb: Nullable(Of Int64)
  fullName.vb: System.Nullable(Of System.Int64)
  name.vb: Nullable(Of Int64)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.IsContentLengthSet*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.IsContentLengthSet
  name: IsContentLengthSet
  nameWithType: RabbitHeaderAccessor.IsContentLengthSet
  fullName: Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.IsContentLengthSet
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.CorrelationId*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.CorrelationId
  name: CorrelationId
  nameWithType: RabbitHeaderAccessor.CorrelationId
  fullName: Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.CorrelationId
- uid: Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.Delay*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.Delay
  name: Delay
  nameWithType: RabbitHeaderAccessor.Delay
  fullName: Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.Delay
- uid: System.Nullable{System.Int32}
  commentId: T:System.Nullable{System.Int32}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Int32>
  nameWithType: Nullable<Int32>
  fullName: System.Nullable<System.Int32>
  nameWithType.vb: Nullable(Of Int32)
  fullName.vb: System.Nullable(Of System.Int32)
  name.vb: Nullable(Of Int32)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.DeliveryMode*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.DeliveryMode
  name: DeliveryMode
  nameWithType: RabbitHeaderAccessor.DeliveryMode
  fullName: Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.DeliveryMode
- uid: System.Nullable{Steeltoe.Messaging.RabbitMQ.Core.MessageDeliveryMode}
  commentId: T:System.Nullable{Steeltoe.Messaging.RabbitMQ.Core.MessageDeliveryMode}
  parent: System
  definition: System.Nullable`1
  name: Nullable<MessageDeliveryMode>
  nameWithType: Nullable<MessageDeliveryMode>
  fullName: System.Nullable<Steeltoe.Messaging.RabbitMQ.Core.MessageDeliveryMode>
  nameWithType.vb: Nullable(Of MessageDeliveryMode)
  fullName.vb: System.Nullable(Of Steeltoe.Messaging.RabbitMQ.Core.MessageDeliveryMode)
  name.vb: Nullable(Of MessageDeliveryMode)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Steeltoe.Messaging.RabbitMQ.Core.MessageDeliveryMode
    name: MessageDeliveryMode
    nameWithType: MessageDeliveryMode
    fullName: Steeltoe.Messaging.RabbitMQ.Core.MessageDeliveryMode
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Steeltoe.Messaging.RabbitMQ.Core.MessageDeliveryMode
    name: MessageDeliveryMode
    nameWithType: MessageDeliveryMode
    fullName: Steeltoe.Messaging.RabbitMQ.Core.MessageDeliveryMode
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.DeliveryTag*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.DeliveryTag
  name: DeliveryTag
  nameWithType: RabbitHeaderAccessor.DeliveryTag
  fullName: Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.DeliveryTag
- uid: System.Nullable{System.UInt64}
  commentId: T:System.Nullable{System.UInt64}
  parent: System
  definition: System.Nullable`1
  name: Nullable<UInt64>
  nameWithType: Nullable<UInt64>
  fullName: System.Nullable<System.UInt64>
  nameWithType.vb: Nullable(Of UInt64)
  fullName.vb: System.Nullable(Of System.UInt64)
  name.vb: Nullable(Of UInt64)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.UInt64
    name: UInt64
    nameWithType: UInt64
    fullName: System.UInt64
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.UInt64
    name: UInt64
    nameWithType: UInt64
    fullName: System.UInt64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.IsDeliveryTagSet*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.IsDeliveryTagSet
  name: IsDeliveryTagSet
  nameWithType: RabbitHeaderAccessor.IsDeliveryTagSet
  fullName: Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.IsDeliveryTagSet
- uid: Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.Expiration*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.Expiration
  name: Expiration
  nameWithType: RabbitHeaderAccessor.Expiration
  fullName: Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.Expiration
- uid: Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.InferredArgumentType*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.InferredArgumentType
  name: InferredArgumentType
  nameWithType: RabbitHeaderAccessor.InferredArgumentType
  fullName: Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.InferredArgumentType
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.MessageCount*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.MessageCount
  name: MessageCount
  nameWithType: RabbitHeaderAccessor.MessageCount
  fullName: Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.MessageCount
- uid: System.Nullable{System.UInt32}
  commentId: T:System.Nullable{System.UInt32}
  parent: System
  definition: System.Nullable`1
  name: Nullable<UInt32>
  nameWithType: Nullable<UInt32>
  fullName: System.Nullable<System.UInt32>
  nameWithType.vb: Nullable(Of UInt32)
  fullName.vb: System.Nullable(Of System.UInt32)
  name.vb: Nullable(Of UInt32)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.UInt32
    name: UInt32
    nameWithType: UInt32
    fullName: System.UInt32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.UInt32
    name: UInt32
    nameWithType: UInt32
    fullName: System.UInt32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.MessageId*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.MessageId
  name: MessageId
  nameWithType: RabbitHeaderAccessor.MessageId
  fullName: Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.MessageId
- uid: Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.Priority*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.Priority
  name: Priority
  nameWithType: RabbitHeaderAccessor.Priority
  fullName: Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.Priority
- uid: Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.PublishSequenceNumber*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.PublishSequenceNumber
  name: PublishSequenceNumber
  nameWithType: RabbitHeaderAccessor.PublishSequenceNumber
  fullName: Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.PublishSequenceNumber
- uid: Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.ReceivedDelay*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.ReceivedDelay
  name: ReceivedDelay
  nameWithType: RabbitHeaderAccessor.ReceivedDelay
  fullName: Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.ReceivedDelay
- uid: Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.ReceivedDeliveryMode*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.ReceivedDeliveryMode
  name: ReceivedDeliveryMode
  nameWithType: RabbitHeaderAccessor.ReceivedDeliveryMode
  fullName: Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.ReceivedDeliveryMode
- uid: Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.ReceivedExchange*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.ReceivedExchange
  name: ReceivedExchange
  nameWithType: RabbitHeaderAccessor.ReceivedExchange
  fullName: Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.ReceivedExchange
- uid: Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.ReceivedRoutingKey*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.ReceivedRoutingKey
  name: ReceivedRoutingKey
  nameWithType: RabbitHeaderAccessor.ReceivedRoutingKey
  fullName: Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.ReceivedRoutingKey
- uid: Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.ReceivedUserId*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.ReceivedUserId
  name: ReceivedUserId
  nameWithType: RabbitHeaderAccessor.ReceivedUserId
  fullName: Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.ReceivedUserId
- uid: Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.Redelivered*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.Redelivered
  name: Redelivered
  nameWithType: RabbitHeaderAccessor.Redelivered
  fullName: Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.Redelivered
- uid: System.Nullable{System.Boolean}
  commentId: T:System.Nullable{System.Boolean}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Boolean>
  nameWithType: Nullable<Boolean>
  fullName: System.Nullable<System.Boolean>
  nameWithType.vb: Nullable(Of Boolean)
  fullName.vb: System.Nullable(Of System.Boolean)
  name.vb: Nullable(Of Boolean)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.ReplyTo*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.ReplyTo
  name: ReplyTo
  nameWithType: RabbitHeaderAccessor.ReplyTo
  fullName: Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.ReplyTo
- uid: Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.ReplyToAddress*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.ReplyToAddress
  name: ReplyToAddress
  nameWithType: RabbitHeaderAccessor.ReplyToAddress
  fullName: Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.ReplyToAddress
- uid: Steeltoe.Messaging.RabbitMQ.Core.Address
  commentId: T:Steeltoe.Messaging.RabbitMQ.Core.Address
  parent: Steeltoe.Messaging.RabbitMQ.Core
  name: Address
  nameWithType: Address
  fullName: Steeltoe.Messaging.RabbitMQ.Core.Address
- uid: Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.Target*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.Target
  name: Target
  nameWithType: RabbitHeaderAccessor.Target
  fullName: Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.Target
- uid: Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.TargetMethod*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.TargetMethod
  name: TargetMethod
  nameWithType: RabbitHeaderAccessor.TargetMethod
  fullName: Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.TargetMethod
- uid: System.Reflection.MethodInfo
  commentId: T:System.Reflection.MethodInfo
  parent: System.Reflection
  isExternal: true
  name: MethodInfo
  nameWithType: MethodInfo
  fullName: System.Reflection.MethodInfo
- uid: System.Reflection
  commentId: N:System.Reflection
  isExternal: true
  name: System.Reflection
  nameWithType: System.Reflection
  fullName: System.Reflection
- uid: Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.Timestamp*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.Timestamp
  name: Timestamp
  nameWithType: RabbitHeaderAccessor.Timestamp
  fullName: Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.Timestamp
- uid: Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.Type*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.Type
  name: Type
  nameWithType: RabbitHeaderAccessor.Type
  fullName: Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.Type
- uid: Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.UserId*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.UserId
  name: UserId
  nameWithType: RabbitHeaderAccessor.UserId
  fullName: Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.UserId
- uid: Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.FinalRetryForMessageWithNoId*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.FinalRetryForMessageWithNoId
  name: FinalRetryForMessageWithNoId
  nameWithType: RabbitHeaderAccessor.FinalRetryForMessageWithNoId
  fullName: Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.FinalRetryForMessageWithNoId
- uid: Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.IsFinalRetryForMessageWithNoId*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.IsFinalRetryForMessageWithNoId
  name: IsFinalRetryForMessageWithNoId
  nameWithType: RabbitHeaderAccessor.IsFinalRetryForMessageWithNoId
  fullName: Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.IsFinalRetryForMessageWithNoId
- uid: Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.LastInBatch*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.LastInBatch
  name: LastInBatch
  nameWithType: RabbitHeaderAccessor.LastInBatch
  fullName: Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.LastInBatch
- uid: Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.GetXDeathHeader*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.GetXDeathHeader
  name: GetXDeathHeader
  nameWithType: RabbitHeaderAccessor.GetXDeathHeader
  fullName: Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.GetXDeathHeader
- uid: System.Collections.Generic.List{System.Collections.Generic.Dictionary{System.String,System.Object}}
  commentId: T:System.Collections.Generic.List{System.Collections.Generic.Dictionary{System.String,System.Object}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<Dictionary<String, Object>>
  nameWithType: List<Dictionary<String, Object>>
  fullName: System.Collections.Generic.List<System.Collections.Generic.Dictionary<System.String, System.Object>>
  nameWithType.vb: List(Of Dictionary(Of String, Object))
  fullName.vb: System.Collections.Generic.List(Of System.Collections.Generic.Dictionary(Of System.String, System.Object))
  name.vb: List(Of Dictionary(Of String, Object))
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Steeltoe.Messaging.Support.MessageHeaderAccessor.ToMessageHeaders
  commentId: M:Steeltoe.Messaging.Support.MessageHeaderAccessor.ToMessageHeaders
  parent: Steeltoe.Messaging.Support.MessageHeaderAccessor
  name: ToMessageHeaders()
  nameWithType: MessageHeaderAccessor.ToMessageHeaders()
  fullName: Steeltoe.Messaging.Support.MessageHeaderAccessor.ToMessageHeaders()
  spec.csharp:
  - uid: Steeltoe.Messaging.Support.MessageHeaderAccessor.ToMessageHeaders
    name: ToMessageHeaders
    nameWithType: MessageHeaderAccessor.ToMessageHeaders
    fullName: Steeltoe.Messaging.Support.MessageHeaderAccessor.ToMessageHeaders
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Support.MessageHeaderAccessor.ToMessageHeaders
    name: ToMessageHeaders
    nameWithType: MessageHeaderAccessor.ToMessageHeaders
    fullName: Steeltoe.Messaging.Support.MessageHeaderAccessor.ToMessageHeaders
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.ToMessageHeaders*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.ToMessageHeaders
  name: ToMessageHeaders
  nameWithType: RabbitHeaderAccessor.ToMessageHeaders
  fullName: Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.ToMessageHeaders
- uid: Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.CreateMutableAccessor*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.CreateMutableAccessor
  name: CreateMutableAccessor
  nameWithType: RabbitHeaderAccessor.CreateMutableAccessor
  fullName: Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.CreateMutableAccessor
- uid: Steeltoe.Messaging.Support.MessageHeaderAccessor.IsReadOnly(System.String)
  commentId: M:Steeltoe.Messaging.Support.MessageHeaderAccessor.IsReadOnly(System.String)
  parent: Steeltoe.Messaging.Support.MessageHeaderAccessor
  isExternal: true
  name: IsReadOnly(String)
  nameWithType: MessageHeaderAccessor.IsReadOnly(String)
  fullName: Steeltoe.Messaging.Support.MessageHeaderAccessor.IsReadOnly(System.String)
  spec.csharp:
  - uid: Steeltoe.Messaging.Support.MessageHeaderAccessor.IsReadOnly(System.String)
    name: IsReadOnly
    nameWithType: MessageHeaderAccessor.IsReadOnly
    fullName: Steeltoe.Messaging.Support.MessageHeaderAccessor.IsReadOnly
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Support.MessageHeaderAccessor.IsReadOnly(System.String)
    name: IsReadOnly
    nameWithType: MessageHeaderAccessor.IsReadOnly
    fullName: Steeltoe.Messaging.Support.MessageHeaderAccessor.IsReadOnly
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.IsReadOnly*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.IsReadOnly
  name: IsReadOnly
  nameWithType: RabbitHeaderAccessor.IsReadOnly
  fullName: Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.IsReadOnly
- uid: Steeltoe.Messaging.Support.MessageHeaderAccessor.VerifyType(System.String,System.Object)
  commentId: M:Steeltoe.Messaging.Support.MessageHeaderAccessor.VerifyType(System.String,System.Object)
  parent: Steeltoe.Messaging.Support.MessageHeaderAccessor
  isExternal: true
  name: VerifyType(String, Object)
  nameWithType: MessageHeaderAccessor.VerifyType(String, Object)
  fullName: Steeltoe.Messaging.Support.MessageHeaderAccessor.VerifyType(System.String, System.Object)
  spec.csharp:
  - uid: Steeltoe.Messaging.Support.MessageHeaderAccessor.VerifyType(System.String,System.Object)
    name: VerifyType
    nameWithType: MessageHeaderAccessor.VerifyType
    fullName: Steeltoe.Messaging.Support.MessageHeaderAccessor.VerifyType
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Support.MessageHeaderAccessor.VerifyType(System.String,System.Object)
    name: VerifyType
    nameWithType: MessageHeaderAccessor.VerifyType
    fullName: Steeltoe.Messaging.Support.MessageHeaderAccessor.VerifyType
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.VerifyType*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.VerifyType
  name: VerifyType
  nameWithType: RabbitHeaderAccessor.VerifyType
  fullName: Steeltoe.Messaging.RabbitMQ.Support.RabbitHeaderAccessor.VerifyType
