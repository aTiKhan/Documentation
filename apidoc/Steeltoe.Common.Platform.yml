### YamlMime:ManagedReference
items:
- uid: Steeltoe.Common.Platform
  commentId: T:Steeltoe.Common.Platform
  id: Platform
  parent: Steeltoe.Common
  children:
  - Steeltoe.Common.Platform.IsCloudFoundry
  - Steeltoe.Common.Platform.IsCloudHosted
  - Steeltoe.Common.Platform.IsContainerized
  - Steeltoe.Common.Platform.IsFullFramework
  - Steeltoe.Common.Platform.IsKubernetes
  - Steeltoe.Common.Platform.IsLinux
  - Steeltoe.Common.Platform.IsNetCore
  - Steeltoe.Common.Platform.IsWindows
  - Steeltoe.Common.Platform.KUBERNETES_HOST
  - Steeltoe.Common.Platform.NET_CORE
  - Steeltoe.Common.Platform.NET_FRAMEWORK
  - Steeltoe.Common.Platform.VCAP_APPLICATION
  langs:
  - csharp
  - vb
  name: Platform
  nameWithType: Platform
  fullName: Steeltoe.Common.Platform
  type: Class
  source:
    remote:
      path: src/Common/src/Common/Platform.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Platform
    path: ../Steeltoe/src/Common/src/Common/Platform.cs
    startLine: 9
  assemblies:
  - Steeltoe.Common
  namespace: Steeltoe.Common
  syntax:
    content: public static class Platform
    content.vb: Public Module Platform
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Steeltoe.Common.Platform.NET_FRAMEWORK
  commentId: F:Steeltoe.Common.Platform.NET_FRAMEWORK
  id: NET_FRAMEWORK
  parent: Steeltoe.Common.Platform
  langs:
  - csharp
  - vb
  name: NET_FRAMEWORK
  nameWithType: Platform.NET_FRAMEWORK
  fullName: Steeltoe.Common.Platform.NET_FRAMEWORK
  type: Field
  source:
    remote:
      path: src/Common/src/Common/Platform.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: NET_FRAMEWORK
    path: ../Steeltoe/src/Common/src/Common/Platform.cs
    startLine: 11
  assemblies:
  - Steeltoe.Common
  namespace: Steeltoe.Common
  syntax:
    content: public const string NET_FRAMEWORK = ".NET Framework"
    return:
      type: System.String
    content.vb: Public Const NET_FRAMEWORK As String = ".NET Framework"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Steeltoe.Common.Platform.NET_CORE
  commentId: F:Steeltoe.Common.Platform.NET_CORE
  id: NET_CORE
  parent: Steeltoe.Common.Platform
  langs:
  - csharp
  - vb
  name: NET_CORE
  nameWithType: Platform.NET_CORE
  fullName: Steeltoe.Common.Platform.NET_CORE
  type: Field
  source:
    remote:
      path: src/Common/src/Common/Platform.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: NET_CORE
    path: ../Steeltoe/src/Common/src/Common/Platform.cs
    startLine: 12
  assemblies:
  - Steeltoe.Common
  namespace: Steeltoe.Common
  syntax:
    content: public const string NET_CORE = ".NET Core"
    return:
      type: System.String
    content.vb: Public Const NET_CORE As String = ".NET Core"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Steeltoe.Common.Platform.VCAP_APPLICATION
  commentId: F:Steeltoe.Common.Platform.VCAP_APPLICATION
  id: VCAP_APPLICATION
  parent: Steeltoe.Common.Platform
  langs:
  - csharp
  - vb
  name: VCAP_APPLICATION
  nameWithType: Platform.VCAP_APPLICATION
  fullName: Steeltoe.Common.Platform.VCAP_APPLICATION
  type: Field
  source:
    remote:
      path: src/Common/src/Common/Platform.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: VCAP_APPLICATION
    path: ../Steeltoe/src/Common/src/Common/Platform.cs
    startLine: 13
  assemblies:
  - Steeltoe.Common
  namespace: Steeltoe.Common
  syntax:
    content: public const string VCAP_APPLICATION = "VCAP_APPLICATION"
    return:
      type: System.String
    content.vb: Public Const VCAP_APPLICATION As String = "VCAP_APPLICATION"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Steeltoe.Common.Platform.KUBERNETES_HOST
  commentId: F:Steeltoe.Common.Platform.KUBERNETES_HOST
  id: KUBERNETES_HOST
  parent: Steeltoe.Common.Platform
  langs:
  - csharp
  - vb
  name: KUBERNETES_HOST
  nameWithType: Platform.KUBERNETES_HOST
  fullName: Steeltoe.Common.Platform.KUBERNETES_HOST
  type: Field
  source:
    remote:
      path: src/Common/src/Common/Platform.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: KUBERNETES_HOST
    path: ../Steeltoe/src/Common/src/Common/Platform.cs
    startLine: 14
  assemblies:
  - Steeltoe.Common
  namespace: Steeltoe.Common
  syntax:
    content: public const string KUBERNETES_HOST = "KUBERNETES_SERVICE_HOST"
    return:
      type: System.String
    content.vb: Public Const KUBERNETES_HOST As String = "KUBERNETES_SERVICE_HOST"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Steeltoe.Common.Platform.IsFullFramework
  commentId: P:Steeltoe.Common.Platform.IsFullFramework
  id: IsFullFramework
  parent: Steeltoe.Common.Platform
  langs:
  - csharp
  - vb
  name: IsFullFramework
  nameWithType: Platform.IsFullFramework
  fullName: Steeltoe.Common.Platform.IsFullFramework
  type: Property
  source:
    remote:
      path: src/Common/src/Common/Platform.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: IsFullFramework
    path: ../Steeltoe/src/Common/src/Common/Platform.cs
    startLine: 16
  assemblies:
  - Steeltoe.Common
  namespace: Steeltoe.Common
  syntax:
    content: public static bool IsFullFramework { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Shared ReadOnly Property IsFullFramework As Boolean
  overload: Steeltoe.Common.Platform.IsFullFramework*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Steeltoe.Common.Platform.IsNetCore
  commentId: P:Steeltoe.Common.Platform.IsNetCore
  id: IsNetCore
  parent: Steeltoe.Common.Platform
  langs:
  - csharp
  - vb
  name: IsNetCore
  nameWithType: Platform.IsNetCore
  fullName: Steeltoe.Common.Platform.IsNetCore
  type: Property
  source:
    remote:
      path: src/Common/src/Common/Platform.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: IsNetCore
    path: ../Steeltoe/src/Common/src/Common/Platform.cs
    startLine: 18
  assemblies:
  - Steeltoe.Common
  namespace: Steeltoe.Common
  syntax:
    content: public static bool IsNetCore { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Shared ReadOnly Property IsNetCore As Boolean
  overload: Steeltoe.Common.Platform.IsNetCore*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Steeltoe.Common.Platform.IsLinux
  commentId: P:Steeltoe.Common.Platform.IsLinux
  id: IsLinux
  parent: Steeltoe.Common.Platform
  langs:
  - csharp
  - vb
  name: IsLinux
  nameWithType: Platform.IsLinux
  fullName: Steeltoe.Common.Platform.IsLinux
  type: Property
  source:
    remote:
      path: src/Common/src/Common/Platform.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: IsLinux
    path: ../Steeltoe/src/Common/src/Common/Platform.cs
    startLine: 20
  assemblies:
  - Steeltoe.Common
  namespace: Steeltoe.Common
  syntax:
    content: public static bool IsLinux { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Shared ReadOnly Property IsLinux As Boolean
  overload: Steeltoe.Common.Platform.IsLinux*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Steeltoe.Common.Platform.IsWindows
  commentId: P:Steeltoe.Common.Platform.IsWindows
  id: IsWindows
  parent: Steeltoe.Common.Platform
  langs:
  - csharp
  - vb
  name: IsWindows
  nameWithType: Platform.IsWindows
  fullName: Steeltoe.Common.Platform.IsWindows
  type: Property
  source:
    remote:
      path: src/Common/src/Common/Platform.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: IsWindows
    path: ../Steeltoe/src/Common/src/Common/Platform.cs
    startLine: 22
  assemblies:
  - Steeltoe.Common
  namespace: Steeltoe.Common
  syntax:
    content: public static bool IsWindows { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Shared ReadOnly Property IsWindows As Boolean
  overload: Steeltoe.Common.Platform.IsWindows*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Steeltoe.Common.Platform.IsContainerized
  commentId: P:Steeltoe.Common.Platform.IsContainerized
  id: IsContainerized
  parent: Steeltoe.Common.Platform
  langs:
  - csharp
  - vb
  name: IsContainerized
  nameWithType: Platform.IsContainerized
  fullName: Steeltoe.Common.Platform.IsContainerized
  type: Property
  source:
    remote:
      path: src/Common/src/Common/Platform.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: IsContainerized
    path: ../Steeltoe/src/Common/src/Common/Platform.cs
    startLine: 27
  assemblies:
  - Steeltoe.Common
  namespace: Steeltoe.Common
  summary: "\nGets a value indicating whether or not the application appears to be running in a container\n"
  example: []
  syntax:
    content: public static bool IsContainerized { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Shared ReadOnly Property IsContainerized As Boolean
  overload: Steeltoe.Common.Platform.IsContainerized*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Steeltoe.Common.Platform.IsCloudFoundry
  commentId: P:Steeltoe.Common.Platform.IsCloudFoundry
  id: IsCloudFoundry
  parent: Steeltoe.Common.Platform
  langs:
  - csharp
  - vb
  name: IsCloudFoundry
  nameWithType: Platform.IsCloudFoundry
  fullName: Steeltoe.Common.Platform.IsCloudFoundry
  type: Property
  source:
    remote:
      path: src/Common/src/Common/Platform.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: IsCloudFoundry
    path: ../Steeltoe/src/Common/src/Common/Platform.cs
    startLine: 32
  assemblies:
  - Steeltoe.Common
  namespace: Steeltoe.Common
  summary: "\nGets a value indicating whether or not the platform is Cloud Foundry by checking if VCAP_APPLICATION has been set\n"
  example: []
  syntax:
    content: public static bool IsCloudFoundry { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Shared ReadOnly Property IsCloudFoundry As Boolean
  overload: Steeltoe.Common.Platform.IsCloudFoundry*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Steeltoe.Common.Platform.IsKubernetes
  commentId: P:Steeltoe.Common.Platform.IsKubernetes
  id: IsKubernetes
  parent: Steeltoe.Common.Platform
  langs:
  - csharp
  - vb
  name: IsKubernetes
  nameWithType: Platform.IsKubernetes
  fullName: Steeltoe.Common.Platform.IsKubernetes
  type: Property
  source:
    remote:
      path: src/Common/src/Common/Platform.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: IsKubernetes
    path: ../Steeltoe/src/Common/src/Common/Platform.cs
    startLine: 37
  assemblies:
  - Steeltoe.Common
  namespace: Steeltoe.Common
  summary: "\nGets a value indicating whether or not the platform is Kubernetes by checking if KUBERNETES_HOST has been set\n"
  example: []
  syntax:
    content: public static bool IsKubernetes { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Shared ReadOnly Property IsKubernetes As Boolean
  overload: Steeltoe.Common.Platform.IsKubernetes*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Steeltoe.Common.Platform.IsCloudHosted
  commentId: P:Steeltoe.Common.Platform.IsCloudHosted
  id: IsCloudHosted
  parent: Steeltoe.Common.Platform
  langs:
  - csharp
  - vb
  name: IsCloudHosted
  nameWithType: Platform.IsCloudHosted
  fullName: Steeltoe.Common.Platform.IsCloudHosted
  type: Property
  source:
    remote:
      path: src/Common/src/Common/Platform.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: IsCloudHosted
    path: ../Steeltoe/src/Common/src/Common/Platform.cs
    startLine: 42
  assemblies:
  - Steeltoe.Common
  namespace: Steeltoe.Common
  summary: "\nGets a value indicating whether an app is running on a cloud provider. Currently supports Cloud Foundry and Kubernetes\n"
  example: []
  syntax:
    content: public static bool IsCloudHosted { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Shared ReadOnly Property IsCloudHosted As Boolean
  overload: Steeltoe.Common.Platform.IsCloudHosted*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
references:
- uid: Steeltoe.Common
  commentId: N:Steeltoe.Common
  name: Steeltoe.Common
  nameWithType: Steeltoe.Common
  fullName: Steeltoe.Common
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Steeltoe.Common.Platform.IsFullFramework*
  commentId: Overload:Steeltoe.Common.Platform.IsFullFramework
  name: IsFullFramework
  nameWithType: Platform.IsFullFramework
  fullName: Steeltoe.Common.Platform.IsFullFramework
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Steeltoe.Common.Platform.IsNetCore*
  commentId: Overload:Steeltoe.Common.Platform.IsNetCore
  name: IsNetCore
  nameWithType: Platform.IsNetCore
  fullName: Steeltoe.Common.Platform.IsNetCore
- uid: Steeltoe.Common.Platform.IsLinux*
  commentId: Overload:Steeltoe.Common.Platform.IsLinux
  name: IsLinux
  nameWithType: Platform.IsLinux
  fullName: Steeltoe.Common.Platform.IsLinux
- uid: Steeltoe.Common.Platform.IsWindows*
  commentId: Overload:Steeltoe.Common.Platform.IsWindows
  name: IsWindows
  nameWithType: Platform.IsWindows
  fullName: Steeltoe.Common.Platform.IsWindows
- uid: Steeltoe.Common.Platform.IsContainerized*
  commentId: Overload:Steeltoe.Common.Platform.IsContainerized
  name: IsContainerized
  nameWithType: Platform.IsContainerized
  fullName: Steeltoe.Common.Platform.IsContainerized
- uid: Steeltoe.Common.Platform.IsCloudFoundry*
  commentId: Overload:Steeltoe.Common.Platform.IsCloudFoundry
  name: IsCloudFoundry
  nameWithType: Platform.IsCloudFoundry
  fullName: Steeltoe.Common.Platform.IsCloudFoundry
- uid: Steeltoe.Common.Platform.IsKubernetes*
  commentId: Overload:Steeltoe.Common.Platform.IsKubernetes
  name: IsKubernetes
  nameWithType: Platform.IsKubernetes
  fullName: Steeltoe.Common.Platform.IsKubernetes
- uid: Steeltoe.Common.Platform.IsCloudHosted*
  commentId: Overload:Steeltoe.Common.Platform.IsCloudHosted
  name: IsCloudHosted
  nameWithType: Platform.IsCloudHosted
  fullName: Steeltoe.Common.Platform.IsCloudHosted
