### YamlMime:ManagedReference
items:
- uid: Steeltoe.Extensions.Configuration.IPlaceholderResolverProvider
  commentId: T:Steeltoe.Extensions.Configuration.IPlaceholderResolverProvider
  id: IPlaceholderResolverProvider
  parent: Steeltoe.Extensions.Configuration
  children:
  - Steeltoe.Extensions.Configuration.IPlaceholderResolverProvider.Providers
  - Steeltoe.Extensions.Configuration.IPlaceholderResolverProvider.ResolvedKeys
  langs:
  - csharp
  - vb
  name: IPlaceholderResolverProvider
  nameWithType: IPlaceholderResolverProvider
  fullName: Steeltoe.Extensions.Configuration.IPlaceholderResolverProvider
  type: Interface
  source:
    remote:
      path: src/Configuration/src/Abstractions/IPlaceholderResolverProvider.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: IPlaceholderResolverProvider
    path: ../Steeltoe/src/Configuration/src/Abstractions/IPlaceholderResolverProvider.cs
    startLine: 9
  assemblies:
  - Steeltoe.Extensions.Configuration.Abstractions
  namespace: Steeltoe.Extensions.Configuration
  syntax:
    content: 'public interface IPlaceholderResolverProvider : IConfigurationProvider'
    content.vb: >-
      Public Interface IPlaceholderResolverProvider

          Inherits IConfigurationProvider
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Steeltoe.Extensions.Configuration.IPlaceholderResolverProvider.Providers
  commentId: P:Steeltoe.Extensions.Configuration.IPlaceholderResolverProvider.Providers
  id: Providers
  parent: Steeltoe.Extensions.Configuration.IPlaceholderResolverProvider
  langs:
  - csharp
  - vb
  name: Providers
  nameWithType: IPlaceholderResolverProvider.Providers
  fullName: Steeltoe.Extensions.Configuration.IPlaceholderResolverProvider.Providers
  type: Property
  source:
    remote:
      path: src/Configuration/src/Abstractions/IPlaceholderResolverProvider.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Providers
    path: ../Steeltoe/src/Configuration/src/Abstractions/IPlaceholderResolverProvider.cs
    startLine: 11
  assemblies:
  - Steeltoe.Extensions.Configuration.Abstractions
  namespace: Steeltoe.Extensions.Configuration
  syntax:
    content: IList<IConfigurationProvider> Providers { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IList{IConfigurationProvider}
    content.vb: ReadOnly Property Providers As IList(Of IConfigurationProvider)
  overload: Steeltoe.Extensions.Configuration.IPlaceholderResolverProvider.Providers*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Steeltoe.Extensions.Configuration.IPlaceholderResolverProvider.ResolvedKeys
  commentId: P:Steeltoe.Extensions.Configuration.IPlaceholderResolverProvider.ResolvedKeys
  id: ResolvedKeys
  parent: Steeltoe.Extensions.Configuration.IPlaceholderResolverProvider
  langs:
  - csharp
  - vb
  name: ResolvedKeys
  nameWithType: IPlaceholderResolverProvider.ResolvedKeys
  fullName: Steeltoe.Extensions.Configuration.IPlaceholderResolverProvider.ResolvedKeys
  type: Property
  source:
    remote:
      path: src/Configuration/src/Abstractions/IPlaceholderResolverProvider.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: ResolvedKeys
    path: ../Steeltoe/src/Configuration/src/Abstractions/IPlaceholderResolverProvider.cs
    startLine: 13
  assemblies:
  - Steeltoe.Extensions.Configuration.Abstractions
  namespace: Steeltoe.Extensions.Configuration
  syntax:
    content: IList<string> ResolvedKeys { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IList{System.String}
    content.vb: ReadOnly Property ResolvedKeys As IList(Of String)
  overload: Steeltoe.Extensions.Configuration.IPlaceholderResolverProvider.ResolvedKeys*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
references:
- uid: Steeltoe.Extensions.Configuration
  commentId: N:Steeltoe.Extensions.Configuration
  name: Steeltoe.Extensions.Configuration
  nameWithType: Steeltoe.Extensions.Configuration
  fullName: Steeltoe.Extensions.Configuration
- uid: Steeltoe.Extensions.Configuration.IPlaceholderResolverProvider.Providers*
  commentId: Overload:Steeltoe.Extensions.Configuration.IPlaceholderResolverProvider.Providers
  name: Providers
  nameWithType: IPlaceholderResolverProvider.Providers
  fullName: Steeltoe.Extensions.Configuration.IPlaceholderResolverProvider.Providers
- uid: System.Collections.Generic.IList{IConfigurationProvider}
  commentId: T:System.Collections.Generic.IList{IConfigurationProvider}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<IConfigurationProvider>
  nameWithType: IList<IConfigurationProvider>
  fullName: System.Collections.Generic.IList<IConfigurationProvider>
  nameWithType.vb: IList(Of IConfigurationProvider)
  fullName.vb: System.Collections.Generic.IList(Of IConfigurationProvider)
  name.vb: IList(Of IConfigurationProvider)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: IConfigurationProvider
    name: IConfigurationProvider
    nameWithType: IConfigurationProvider
    fullName: IConfigurationProvider
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: IConfigurationProvider
    name: IConfigurationProvider
    nameWithType: IConfigurationProvider
    fullName: IConfigurationProvider
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullName.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Steeltoe.Extensions.Configuration.IPlaceholderResolverProvider.ResolvedKeys*
  commentId: Overload:Steeltoe.Extensions.Configuration.IPlaceholderResolverProvider.ResolvedKeys
  name: ResolvedKeys
  nameWithType: IPlaceholderResolverProvider.ResolvedKeys
  fullName: Steeltoe.Extensions.Configuration.IPlaceholderResolverProvider.ResolvedKeys
- uid: System.Collections.Generic.IList{System.String}
  commentId: T:System.Collections.Generic.IList{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<String>
  nameWithType: IList<String>
  fullName: System.Collections.Generic.IList<System.String>
  nameWithType.vb: IList(Of String)
  fullName.vb: System.Collections.Generic.IList(Of System.String)
  name.vb: IList(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
