### YamlMime:ManagedReference
items:
- uid: Steeltoe.Messaging.RabbitMQ.Batch.MessageBatch
  commentId: T:Steeltoe.Messaging.RabbitMQ.Batch.MessageBatch
  id: MessageBatch
  parent: Steeltoe.Messaging.RabbitMQ.Batch
  children:
  - Steeltoe.Messaging.RabbitMQ.Batch.MessageBatch.#ctor(System.String,System.String,Steeltoe.Messaging.IMessage)
  - Steeltoe.Messaging.RabbitMQ.Batch.MessageBatch.Exchange
  - Steeltoe.Messaging.RabbitMQ.Batch.MessageBatch.Message
  - Steeltoe.Messaging.RabbitMQ.Batch.MessageBatch.RoutingKey
  langs:
  - csharp
  - vb
  name: MessageBatch
  nameWithType: MessageBatch
  fullName: Steeltoe.Messaging.RabbitMQ.Batch.MessageBatch
  type: Struct
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Batch/MessageBatch.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: MessageBatch
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Batch/MessageBatch.cs
    startLine: 6
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Batch
  syntax:
    content: public struct MessageBatch
    content.vb: Public Structure MessageBatch
  inheritedMembers:
  - System.ValueType.Equals(System.Object)
  - System.ValueType.GetHashCode
  - System.ValueType.ToString
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.ReferenceEquals(System.Object,System.Object)
  modifiers.csharp:
  - public
  - struct
  modifiers.vb:
  - Public
  - Structure
- uid: Steeltoe.Messaging.RabbitMQ.Batch.MessageBatch.Exchange
  commentId: P:Steeltoe.Messaging.RabbitMQ.Batch.MessageBatch.Exchange
  id: Exchange
  parent: Steeltoe.Messaging.RabbitMQ.Batch.MessageBatch
  langs:
  - csharp
  - vb
  name: Exchange
  nameWithType: MessageBatch.Exchange
  fullName: Steeltoe.Messaging.RabbitMQ.Batch.MessageBatch.Exchange
  type: Property
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Batch/MessageBatch.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Exchange
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Batch/MessageBatch.cs
    startLine: 8
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Batch
  syntax:
    content: public string Exchange { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property Exchange As String
  overload: Steeltoe.Messaging.RabbitMQ.Batch.MessageBatch.Exchange*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Steeltoe.Messaging.RabbitMQ.Batch.MessageBatch.RoutingKey
  commentId: P:Steeltoe.Messaging.RabbitMQ.Batch.MessageBatch.RoutingKey
  id: RoutingKey
  parent: Steeltoe.Messaging.RabbitMQ.Batch.MessageBatch
  langs:
  - csharp
  - vb
  name: RoutingKey
  nameWithType: MessageBatch.RoutingKey
  fullName: Steeltoe.Messaging.RabbitMQ.Batch.MessageBatch.RoutingKey
  type: Property
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Batch/MessageBatch.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: RoutingKey
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Batch/MessageBatch.cs
    startLine: 10
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Batch
  syntax:
    content: public string RoutingKey { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property RoutingKey As String
  overload: Steeltoe.Messaging.RabbitMQ.Batch.MessageBatch.RoutingKey*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Steeltoe.Messaging.RabbitMQ.Batch.MessageBatch.Message
  commentId: P:Steeltoe.Messaging.RabbitMQ.Batch.MessageBatch.Message
  id: Message
  parent: Steeltoe.Messaging.RabbitMQ.Batch.MessageBatch
  langs:
  - csharp
  - vb
  name: Message
  nameWithType: MessageBatch.Message
  fullName: Steeltoe.Messaging.RabbitMQ.Batch.MessageBatch.Message
  type: Property
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Batch/MessageBatch.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Message
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Batch/MessageBatch.cs
    startLine: 12
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Batch
  syntax:
    content: public IMessage Message { get; }
    parameters: []
    return:
      type: Steeltoe.Messaging.IMessage
    content.vb: Public ReadOnly Property Message As IMessage
  overload: Steeltoe.Messaging.RabbitMQ.Batch.MessageBatch.Message*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Steeltoe.Messaging.RabbitMQ.Batch.MessageBatch.#ctor(System.String,System.String,Steeltoe.Messaging.IMessage)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Batch.MessageBatch.#ctor(System.String,System.String,Steeltoe.Messaging.IMessage)
  id: '#ctor(System.String,System.String,Steeltoe.Messaging.IMessage)'
  parent: Steeltoe.Messaging.RabbitMQ.Batch.MessageBatch
  langs:
  - csharp
  - vb
  name: MessageBatch(String, String, IMessage)
  nameWithType: MessageBatch.MessageBatch(String, String, IMessage)
  fullName: Steeltoe.Messaging.RabbitMQ.Batch.MessageBatch.MessageBatch(System.String, System.String, Steeltoe.Messaging.IMessage)
  type: Constructor
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Batch/MessageBatch.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: .ctor
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Batch/MessageBatch.cs
    startLine: 14
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Batch
  syntax:
    content: public MessageBatch(string exchange, string routingKey, IMessage message)
    parameters:
    - id: exchange
      type: System.String
    - id: routingKey
      type: System.String
    - id: message
      type: Steeltoe.Messaging.IMessage
    content.vb: Public Sub New(exchange As String, routingKey As String, message As IMessage)
  overload: Steeltoe.Messaging.RabbitMQ.Batch.MessageBatch.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Steeltoe.Messaging.RabbitMQ.Batch
  commentId: N:Steeltoe.Messaging.RabbitMQ.Batch
  name: Steeltoe.Messaging.RabbitMQ.Batch
  nameWithType: Steeltoe.Messaging.RabbitMQ.Batch
  fullName: Steeltoe.Messaging.RabbitMQ.Batch
- uid: System.ValueType.Equals(System.Object)
  commentId: M:System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  name: Equals(Object)
  nameWithType: ValueType.Equals(Object)
  fullName: System.ValueType.Equals(System.Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType.GetHashCode
  commentId: M:System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: true
  name: GetHashCode()
  nameWithType: ValueType.GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType.ToString
  commentId: M:System.ValueType.ToString
  parent: System.ValueType
  isExternal: true
  name: ToString()
  nameWithType: ValueType.ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType
  commentId: T:System.ValueType
  parent: System
  isExternal: true
  name: ValueType
  nameWithType: ValueType
  fullName: System.ValueType
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Steeltoe.Messaging.RabbitMQ.Batch.MessageBatch.Exchange*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Batch.MessageBatch.Exchange
  name: Exchange
  nameWithType: MessageBatch.Exchange
  fullName: Steeltoe.Messaging.RabbitMQ.Batch.MessageBatch.Exchange
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Steeltoe.Messaging.RabbitMQ.Batch.MessageBatch.RoutingKey*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Batch.MessageBatch.RoutingKey
  name: RoutingKey
  nameWithType: MessageBatch.RoutingKey
  fullName: Steeltoe.Messaging.RabbitMQ.Batch.MessageBatch.RoutingKey
- uid: Steeltoe.Messaging.RabbitMQ.Batch.MessageBatch.Message*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Batch.MessageBatch.Message
  name: Message
  nameWithType: MessageBatch.Message
  fullName: Steeltoe.Messaging.RabbitMQ.Batch.MessageBatch.Message
- uid: Steeltoe.Messaging.IMessage
  commentId: T:Steeltoe.Messaging.IMessage
  parent: Steeltoe.Messaging
  name: IMessage
  nameWithType: IMessage
  fullName: Steeltoe.Messaging.IMessage
- uid: Steeltoe.Messaging
  commentId: N:Steeltoe.Messaging
  name: Steeltoe.Messaging
  nameWithType: Steeltoe.Messaging
  fullName: Steeltoe.Messaging
- uid: Steeltoe.Messaging.RabbitMQ.Batch.MessageBatch.#ctor*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Batch.MessageBatch.#ctor
  name: MessageBatch
  nameWithType: MessageBatch.MessageBatch
  fullName: Steeltoe.Messaging.RabbitMQ.Batch.MessageBatch.MessageBatch
