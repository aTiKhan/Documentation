### YamlMime:ManagedReference
items:
- uid: Steeltoe.Messaging.RabbitMQ.Support.IListenerContainerAware
  commentId: T:Steeltoe.Messaging.RabbitMQ.Support.IListenerContainerAware
  id: IListenerContainerAware
  parent: Steeltoe.Messaging.RabbitMQ.Support
  children:
  - Steeltoe.Messaging.RabbitMQ.Support.IListenerContainerAware.GetExpectedQueueNames
  langs:
  - csharp
  - vb
  name: IListenerContainerAware
  nameWithType: IListenerContainerAware
  fullName: Steeltoe.Messaging.RabbitMQ.Support.IListenerContainerAware
  type: Interface
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Support/IListenerContainerAware.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: IListenerContainerAware
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Support/IListenerContainerAware.cs
    startLine: 8
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Support
  syntax:
    content: public interface IListenerContainerAware
    content.vb: Public Interface IListenerContainerAware
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Steeltoe.Messaging.RabbitMQ.Support.IListenerContainerAware.GetExpectedQueueNames
  commentId: M:Steeltoe.Messaging.RabbitMQ.Support.IListenerContainerAware.GetExpectedQueueNames
  id: GetExpectedQueueNames
  parent: Steeltoe.Messaging.RabbitMQ.Support.IListenerContainerAware
  langs:
  - csharp
  - vb
  name: GetExpectedQueueNames()
  nameWithType: IListenerContainerAware.GetExpectedQueueNames()
  fullName: Steeltoe.Messaging.RabbitMQ.Support.IListenerContainerAware.GetExpectedQueueNames()
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Support/IListenerContainerAware.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: GetExpectedQueueNames
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Support/IListenerContainerAware.cs
    startLine: 10
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Support
  syntax:
    content: List<string> GetExpectedQueueNames()
    return:
      type: System.Collections.Generic.List{System.String}
    content.vb: Function GetExpectedQueueNames As List(Of String)
  overload: Steeltoe.Messaging.RabbitMQ.Support.IListenerContainerAware.GetExpectedQueueNames*
references:
- uid: Steeltoe.Messaging.RabbitMQ.Support
  commentId: N:Steeltoe.Messaging.RabbitMQ.Support
  name: Steeltoe.Messaging.RabbitMQ.Support
  nameWithType: Steeltoe.Messaging.RabbitMQ.Support
  fullName: Steeltoe.Messaging.RabbitMQ.Support
- uid: Steeltoe.Messaging.RabbitMQ.Support.IListenerContainerAware.GetExpectedQueueNames*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Support.IListenerContainerAware.GetExpectedQueueNames
  name: GetExpectedQueueNames
  nameWithType: IListenerContainerAware.GetExpectedQueueNames
  fullName: Steeltoe.Messaging.RabbitMQ.Support.IListenerContainerAware.GetExpectedQueueNames
- uid: System.Collections.Generic.List{System.String}
  commentId: T:System.Collections.Generic.List{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<String>
  nameWithType: List<String>
  fullName: System.Collections.Generic.List<System.String>
  nameWithType.vb: List(Of String)
  fullName.vb: System.Collections.Generic.List(Of System.String)
  name.vb: List(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
