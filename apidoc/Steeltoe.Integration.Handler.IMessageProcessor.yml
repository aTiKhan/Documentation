### YamlMime:ManagedReference
items:
- uid: Steeltoe.Integration.Handler.IMessageProcessor
  commentId: T:Steeltoe.Integration.Handler.IMessageProcessor
  id: IMessageProcessor
  parent: Steeltoe.Integration.Handler
  children:
  - Steeltoe.Integration.Handler.IMessageProcessor.ProcessMessage(Steeltoe.Messaging.IMessage)
  langs:
  - csharp
  - vb
  name: IMessageProcessor
  nameWithType: IMessageProcessor
  fullName: Steeltoe.Integration.Handler.IMessageProcessor
  type: Interface
  source:
    remote:
      path: src/Integration/src/Abstractions/Handler/IMessageProcessor.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: IMessageProcessor
    path: ../Steeltoe/src/Integration/src/Abstractions/Handler/IMessageProcessor.cs
    startLine: 13
  assemblies:
  - Steeltoe.Integration.Abstractions
  namespace: Steeltoe.Integration.Handler
  summary: "\nThis defines the lowest-level strategy of processing a Message and returning\nsome Object(or null). Implementations will be focused on generic concerns,\nsuch as invoking a method, running a script, or evaluating an expression.\n"
  example: []
  syntax:
    content: public interface IMessageProcessor
    content.vb: Public Interface IMessageProcessor
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Steeltoe.Integration.Handler.IMessageProcessor.ProcessMessage(Steeltoe.Messaging.IMessage)
  commentId: M:Steeltoe.Integration.Handler.IMessageProcessor.ProcessMessage(Steeltoe.Messaging.IMessage)
  id: ProcessMessage(Steeltoe.Messaging.IMessage)
  parent: Steeltoe.Integration.Handler.IMessageProcessor
  langs:
  - csharp
  - vb
  name: ProcessMessage(IMessage)
  nameWithType: IMessageProcessor.ProcessMessage(IMessage)
  fullName: Steeltoe.Integration.Handler.IMessageProcessor.ProcessMessage(Steeltoe.Messaging.IMessage)
  type: Method
  source:
    remote:
      path: src/Integration/src/Abstractions/Handler/IMessageProcessor.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: ProcessMessage
    path: ../Steeltoe/src/Integration/src/Abstractions/Handler/IMessageProcessor.cs
    startLine: 20
  assemblies:
  - Steeltoe.Integration.Abstractions
  namespace: Steeltoe.Integration.Handler
  summary: "\nProcess a message and return a value or null\n"
  example: []
  syntax:
    content: object ProcessMessage(IMessage message)
    parameters:
    - id: message
      type: Steeltoe.Messaging.IMessage
      description: message to process
    return:
      type: System.Object
      description: resulting object
    content.vb: Function ProcessMessage(message As IMessage) As Object
  overload: Steeltoe.Integration.Handler.IMessageProcessor.ProcessMessage*
references:
- uid: Steeltoe.Integration.Handler
  commentId: N:Steeltoe.Integration.Handler
  name: Steeltoe.Integration.Handler
  nameWithType: Steeltoe.Integration.Handler
  fullName: Steeltoe.Integration.Handler
- uid: Steeltoe.Integration.Handler.IMessageProcessor.ProcessMessage*
  commentId: Overload:Steeltoe.Integration.Handler.IMessageProcessor.ProcessMessage
  name: ProcessMessage
  nameWithType: IMessageProcessor.ProcessMessage
  fullName: Steeltoe.Integration.Handler.IMessageProcessor.ProcessMessage
- uid: Steeltoe.Messaging.IMessage
  commentId: T:Steeltoe.Messaging.IMessage
  parent: Steeltoe.Messaging
  name: IMessage
  nameWithType: IMessage
  fullName: Steeltoe.Messaging.IMessage
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Steeltoe.Messaging
  commentId: N:Steeltoe.Messaging
  name: Steeltoe.Messaging
  nameWithType: Steeltoe.Messaging
  fullName: Steeltoe.Messaging
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
