### YamlMime:ManagedReference
items:
- uid: Steeltoe.Integration.Support.MutableMessage
  commentId: T:Steeltoe.Integration.Support.MutableMessage
  id: MutableMessage
  parent: Steeltoe.Integration.Support
  children:
  - Steeltoe.Integration.Support.MutableMessage.#ctor(System.Object)
  - Steeltoe.Integration.Support.MutableMessage.#ctor(System.Object,Steeltoe.Integration.Support.MutableMessageHeaders)
  - Steeltoe.Integration.Support.MutableMessage.#ctor(System.Object,System.Collections.Generic.IDictionary{System.String,System.Object})
  - Steeltoe.Integration.Support.MutableMessage._headers
  - Steeltoe.Integration.Support.MutableMessage._payload
  - Steeltoe.Integration.Support.MutableMessage.Equals(System.Object)
  - Steeltoe.Integration.Support.MutableMessage.GetHashCode
  - Steeltoe.Integration.Support.MutableMessage.Headers
  - Steeltoe.Integration.Support.MutableMessage.Payload
  - Steeltoe.Integration.Support.MutableMessage.RawHeaders
  - Steeltoe.Integration.Support.MutableMessage.ToString
  langs:
  - csharp
  - vb
  name: MutableMessage
  nameWithType: MutableMessage
  fullName: Steeltoe.Integration.Support.MutableMessage
  type: Class
  source:
    remote:
      path: src/Integration/src/IntegrationBase/Support/MutableMessage.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: MutableMessage
    path: ../Steeltoe/src/Integration/src/IntegrationBase/Support/MutableMessage.cs
    startLine: 12
  assemblies:
  - Steeltoe.Integration.IntegrationBase
  namespace: Steeltoe.Integration.Support
  syntax:
    content: 'public class MutableMessage : IMessage'
    content.vb: >-
      Public Class MutableMessage

          Implements IMessage
  inheritance:
  - System.Object
  derivedClasses:
  - Steeltoe.Integration.Support.MutableMessage`1
  implements:
  - Steeltoe.Messaging.IMessage
  inheritedMembers:
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Steeltoe.Integration.Support.MutableMessage._payload
  commentId: F:Steeltoe.Integration.Support.MutableMessage._payload
  id: _payload
  parent: Steeltoe.Integration.Support.MutableMessage
  langs:
  - csharp
  - vb
  name: _payload
  nameWithType: MutableMessage._payload
  fullName: Steeltoe.Integration.Support.MutableMessage._payload
  type: Field
  source:
    remote:
      path: src/Integration/src/IntegrationBase/Support/MutableMessage.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: _payload
    path: ../Steeltoe/src/Integration/src/IntegrationBase/Support/MutableMessage.cs
    startLine: 14
  assemblies:
  - Steeltoe.Integration.IntegrationBase
  namespace: Steeltoe.Integration.Support
  syntax:
    content: protected readonly object _payload
    return:
      type: System.Object
    content.vb: Protected ReadOnly _payload As Object
  modifiers.csharp:
  - protected
  - readonly
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: Steeltoe.Integration.Support.MutableMessage._headers
  commentId: F:Steeltoe.Integration.Support.MutableMessage._headers
  id: _headers
  parent: Steeltoe.Integration.Support.MutableMessage
  langs:
  - csharp
  - vb
  name: _headers
  nameWithType: MutableMessage._headers
  fullName: Steeltoe.Integration.Support.MutableMessage._headers
  type: Field
  source:
    remote:
      path: src/Integration/src/IntegrationBase/Support/MutableMessage.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: _headers
    path: ../Steeltoe/src/Integration/src/IntegrationBase/Support/MutableMessage.cs
    startLine: 16
  assemblies:
  - Steeltoe.Integration.IntegrationBase
  namespace: Steeltoe.Integration.Support
  syntax:
    content: protected readonly MutableMessageHeaders _headers
    return:
      type: Steeltoe.Integration.Support.MutableMessageHeaders
    content.vb: Protected ReadOnly _headers As MutableMessageHeaders
  modifiers.csharp:
  - protected
  - readonly
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: Steeltoe.Integration.Support.MutableMessage.#ctor(System.Object)
  commentId: M:Steeltoe.Integration.Support.MutableMessage.#ctor(System.Object)
  id: '#ctor(System.Object)'
  parent: Steeltoe.Integration.Support.MutableMessage
  langs:
  - csharp
  - vb
  name: MutableMessage(Object)
  nameWithType: MutableMessage.MutableMessage(Object)
  fullName: Steeltoe.Integration.Support.MutableMessage.MutableMessage(System.Object)
  type: Constructor
  source:
    remote:
      path: src/Integration/src/IntegrationBase/Support/MutableMessage.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: .ctor
    path: ../Steeltoe/src/Integration/src/IntegrationBase/Support/MutableMessage.cs
    startLine: 18
  assemblies:
  - Steeltoe.Integration.IntegrationBase
  namespace: Steeltoe.Integration.Support
  syntax:
    content: public MutableMessage(object payload)
    parameters:
    - id: payload
      type: System.Object
    content.vb: Public Sub New(payload As Object)
  overload: Steeltoe.Integration.Support.MutableMessage.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Steeltoe.Integration.Support.MutableMessage.#ctor(System.Object,System.Collections.Generic.IDictionary{System.String,System.Object})
  commentId: M:Steeltoe.Integration.Support.MutableMessage.#ctor(System.Object,System.Collections.Generic.IDictionary{System.String,System.Object})
  id: '#ctor(System.Object,System.Collections.Generic.IDictionary{System.String,System.Object})'
  parent: Steeltoe.Integration.Support.MutableMessage
  langs:
  - csharp
  - vb
  name: MutableMessage(Object, IDictionary<String, Object>)
  nameWithType: MutableMessage.MutableMessage(Object, IDictionary<String, Object>)
  fullName: Steeltoe.Integration.Support.MutableMessage.MutableMessage(System.Object, System.Collections.Generic.IDictionary<System.String, System.Object>)
  type: Constructor
  source:
    remote:
      path: src/Integration/src/IntegrationBase/Support/MutableMessage.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: .ctor
    path: ../Steeltoe/src/Integration/src/IntegrationBase/Support/MutableMessage.cs
    startLine: 23
  assemblies:
  - Steeltoe.Integration.IntegrationBase
  namespace: Steeltoe.Integration.Support
  syntax:
    content: public MutableMessage(object payload, IDictionary<string, object> headers)
    parameters:
    - id: payload
      type: System.Object
    - id: headers
      type: System.Collections.Generic.IDictionary{System.String,System.Object}
    content.vb: Public Sub New(payload As Object, headers As IDictionary(Of String, Object))
  overload: Steeltoe.Integration.Support.MutableMessage.#ctor*
  nameWithType.vb: MutableMessage.MutableMessage(Object, IDictionary(Of String, Object))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Steeltoe.Integration.Support.MutableMessage.MutableMessage(System.Object, System.Collections.Generic.IDictionary(Of System.String, System.Object))
  name.vb: MutableMessage(Object, IDictionary(Of String, Object))
- uid: Steeltoe.Integration.Support.MutableMessage.#ctor(System.Object,Steeltoe.Integration.Support.MutableMessageHeaders)
  commentId: M:Steeltoe.Integration.Support.MutableMessage.#ctor(System.Object,Steeltoe.Integration.Support.MutableMessageHeaders)
  id: '#ctor(System.Object,Steeltoe.Integration.Support.MutableMessageHeaders)'
  parent: Steeltoe.Integration.Support.MutableMessage
  langs:
  - csharp
  - vb
  name: MutableMessage(Object, MutableMessageHeaders)
  nameWithType: MutableMessage.MutableMessage(Object, MutableMessageHeaders)
  fullName: Steeltoe.Integration.Support.MutableMessage.MutableMessage(System.Object, Steeltoe.Integration.Support.MutableMessageHeaders)
  type: Constructor
  source:
    remote:
      path: src/Integration/src/IntegrationBase/Support/MutableMessage.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: .ctor
    path: ../Steeltoe/src/Integration/src/IntegrationBase/Support/MutableMessage.cs
    startLine: 28
  assemblies:
  - Steeltoe.Integration.IntegrationBase
  namespace: Steeltoe.Integration.Support
  syntax:
    content: public MutableMessage(object payload, MutableMessageHeaders headers)
    parameters:
    - id: payload
      type: System.Object
    - id: headers
      type: Steeltoe.Integration.Support.MutableMessageHeaders
    content.vb: Public Sub New(payload As Object, headers As MutableMessageHeaders)
  overload: Steeltoe.Integration.Support.MutableMessage.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Steeltoe.Integration.Support.MutableMessage.Headers
  commentId: P:Steeltoe.Integration.Support.MutableMessage.Headers
  id: Headers
  parent: Steeltoe.Integration.Support.MutableMessage
  langs:
  - csharp
  - vb
  name: Headers
  nameWithType: MutableMessage.Headers
  fullName: Steeltoe.Integration.Support.MutableMessage.Headers
  type: Property
  source:
    remote:
      path: src/Integration/src/IntegrationBase/Support/MutableMessage.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Headers
    path: ../Steeltoe/src/Integration/src/IntegrationBase/Support/MutableMessage.cs
    startLine: 44
  assemblies:
  - Steeltoe.Integration.IntegrationBase
  namespace: Steeltoe.Integration.Support
  syntax:
    content: public IMessageHeaders Headers { get; }
    parameters: []
    return:
      type: Steeltoe.Messaging.IMessageHeaders
    content.vb: Public ReadOnly Property Headers As IMessageHeaders
  overload: Steeltoe.Integration.Support.MutableMessage.Headers*
  implements:
  - Steeltoe.Messaging.IMessage.Headers
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Steeltoe.Integration.Support.MutableMessage.Payload
  commentId: P:Steeltoe.Integration.Support.MutableMessage.Payload
  id: Payload
  parent: Steeltoe.Integration.Support.MutableMessage
  langs:
  - csharp
  - vb
  name: Payload
  nameWithType: MutableMessage.Payload
  fullName: Steeltoe.Integration.Support.MutableMessage.Payload
  type: Property
  source:
    remote:
      path: src/Integration/src/IntegrationBase/Support/MutableMessage.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Payload
    path: ../Steeltoe/src/Integration/src/IntegrationBase/Support/MutableMessage.cs
    startLine: 49
  assemblies:
  - Steeltoe.Integration.IntegrationBase
  namespace: Steeltoe.Integration.Support
  syntax:
    content: public object Payload { get; }
    parameters: []
    return:
      type: System.Object
    content.vb: Public ReadOnly Property Payload As Object
  overload: Steeltoe.Integration.Support.MutableMessage.Payload*
  implements:
  - Steeltoe.Messaging.IMessage.Payload
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Steeltoe.Integration.Support.MutableMessage.ToString
  commentId: M:Steeltoe.Integration.Support.MutableMessage.ToString
  id: ToString
  parent: Steeltoe.Integration.Support.MutableMessage
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: MutableMessage.ToString()
  fullName: Steeltoe.Integration.Support.MutableMessage.ToString()
  type: Method
  source:
    remote:
      path: src/Integration/src/IntegrationBase/Support/MutableMessage.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: ToString
    path: ../Steeltoe/src/Integration/src/IntegrationBase/Support/MutableMessage.cs
    startLine: 54
  assemblies:
  - Steeltoe.Integration.IntegrationBase
  namespace: Steeltoe.Integration.Support
  syntax:
    content: public override string ToString()
    return:
      type: System.String
    content.vb: Public Overrides Function ToString As String
  overridden: System.Object.ToString
  overload: Steeltoe.Integration.Support.MutableMessage.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Steeltoe.Integration.Support.MutableMessage.GetHashCode
  commentId: M:Steeltoe.Integration.Support.MutableMessage.GetHashCode
  id: GetHashCode
  parent: Steeltoe.Integration.Support.MutableMessage
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: MutableMessage.GetHashCode()
  fullName: Steeltoe.Integration.Support.MutableMessage.GetHashCode()
  type: Method
  source:
    remote:
      path: src/Integration/src/IntegrationBase/Support/MutableMessage.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: GetHashCode
    path: ../Steeltoe/src/Integration/src/IntegrationBase/Support/MutableMessage.cs
    startLine: 71
  assemblies:
  - Steeltoe.Integration.IntegrationBase
  namespace: Steeltoe.Integration.Support
  syntax:
    content: public override int GetHashCode()
    return:
      type: System.Int32
    content.vb: Public Overrides Function GetHashCode As Integer
  overridden: System.Object.GetHashCode
  overload: Steeltoe.Integration.Support.MutableMessage.GetHashCode*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Steeltoe.Integration.Support.MutableMessage.Equals(System.Object)
  commentId: M:Steeltoe.Integration.Support.MutableMessage.Equals(System.Object)
  id: Equals(System.Object)
  parent: Steeltoe.Integration.Support.MutableMessage
  langs:
  - csharp
  - vb
  name: Equals(Object)
  nameWithType: MutableMessage.Equals(Object)
  fullName: Steeltoe.Integration.Support.MutableMessage.Equals(System.Object)
  type: Method
  source:
    remote:
      path: src/Integration/src/IntegrationBase/Support/MutableMessage.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Equals
    path: ../Steeltoe/src/Integration/src/IntegrationBase/Support/MutableMessage.cs
    startLine: 76
  assemblies:
  - Steeltoe.Integration.IntegrationBase
  namespace: Steeltoe.Integration.Support
  syntax:
    content: public override bool Equals(object obj)
    parameters:
    - id: obj
      type: System.Object
    return:
      type: System.Boolean
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
  overridden: System.Object.Equals(System.Object)
  overload: Steeltoe.Integration.Support.MutableMessage.Equals*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Steeltoe.Integration.Support.MutableMessage.RawHeaders
  commentId: P:Steeltoe.Integration.Support.MutableMessage.RawHeaders
  id: RawHeaders
  parent: Steeltoe.Integration.Support.MutableMessage
  langs:
  - csharp
  - vb
  name: RawHeaders
  nameWithType: MutableMessage.RawHeaders
  fullName: Steeltoe.Integration.Support.MutableMessage.RawHeaders
  type: Property
  source:
    remote:
      path: src/Integration/src/IntegrationBase/Support/MutableMessage.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: RawHeaders
    path: ../Steeltoe/src/Integration/src/IntegrationBase/Support/MutableMessage.cs
    startLine: 94
  assemblies:
  - Steeltoe.Integration.IntegrationBase
  namespace: Steeltoe.Integration.Support
  syntax:
    content: protected IDictionary<string, object> RawHeaders { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IDictionary{System.String,System.Object}
    content.vb: Protected ReadOnly Property RawHeaders As IDictionary(Of String, Object)
  overload: Steeltoe.Integration.Support.MutableMessage.RawHeaders*
  modifiers.csharp:
  - protected
  - get
  modifiers.vb:
  - Protected
  - ReadOnly
references:
- uid: Steeltoe.Integration.Support
  commentId: N:Steeltoe.Integration.Support
  name: Steeltoe.Integration.Support
  nameWithType: Steeltoe.Integration.Support
  fullName: Steeltoe.Integration.Support
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Steeltoe.Messaging.IMessage
  commentId: T:Steeltoe.Messaging.IMessage
  parent: Steeltoe.Messaging
  name: IMessage
  nameWithType: IMessage
  fullName: Steeltoe.Messaging.IMessage
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Steeltoe.Messaging
  commentId: N:Steeltoe.Messaging
  name: Steeltoe.Messaging
  nameWithType: Steeltoe.Messaging
  fullName: Steeltoe.Messaging
- uid: Steeltoe.Integration.Support.MutableMessageHeaders
  commentId: T:Steeltoe.Integration.Support.MutableMessageHeaders
  parent: Steeltoe.Integration.Support
  name: MutableMessageHeaders
  nameWithType: MutableMessageHeaders
  fullName: Steeltoe.Integration.Support.MutableMessageHeaders
- uid: Steeltoe.Integration.Support.MutableMessage.#ctor*
  commentId: Overload:Steeltoe.Integration.Support.MutableMessage.#ctor
  name: MutableMessage
  nameWithType: MutableMessage.MutableMessage
  fullName: Steeltoe.Integration.Support.MutableMessage.MutableMessage
- uid: System.Collections.Generic.IDictionary{System.String,System.Object}
  commentId: T:System.Collections.Generic.IDictionary{System.String,System.Object}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IDictionary`2
  name: IDictionary<String, Object>
  nameWithType: IDictionary<String, Object>
  fullName: System.Collections.Generic.IDictionary<System.String, System.Object>
  nameWithType.vb: IDictionary(Of String, Object)
  fullName.vb: System.Collections.Generic.IDictionary(Of System.String, System.Object)
  name.vb: IDictionary(Of String, Object)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IDictionary`2
  commentId: T:System.Collections.Generic.IDictionary`2
  isExternal: true
  name: IDictionary<TKey, TValue>
  nameWithType: IDictionary<TKey, TValue>
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>
  nameWithType.vb: IDictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.IDictionary(Of TKey, TValue)
  name.vb: IDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Steeltoe.Integration.Support.MutableMessage.Headers*
  commentId: Overload:Steeltoe.Integration.Support.MutableMessage.Headers
  name: Headers
  nameWithType: MutableMessage.Headers
  fullName: Steeltoe.Integration.Support.MutableMessage.Headers
- uid: Steeltoe.Messaging.IMessage.Headers
  commentId: P:Steeltoe.Messaging.IMessage.Headers
  parent: Steeltoe.Messaging.IMessage
  name: Headers
  nameWithType: IMessage.Headers
  fullName: Steeltoe.Messaging.IMessage.Headers
- uid: Steeltoe.Messaging.IMessageHeaders
  commentId: T:Steeltoe.Messaging.IMessageHeaders
  parent: Steeltoe.Messaging
  name: IMessageHeaders
  nameWithType: IMessageHeaders
  fullName: Steeltoe.Messaging.IMessageHeaders
- uid: Steeltoe.Integration.Support.MutableMessage.Payload*
  commentId: Overload:Steeltoe.Integration.Support.MutableMessage.Payload
  name: Payload
  nameWithType: MutableMessage.Payload
  fullName: Steeltoe.Integration.Support.MutableMessage.Payload
- uid: Steeltoe.Messaging.IMessage.Payload
  commentId: P:Steeltoe.Messaging.IMessage.Payload
  parent: Steeltoe.Messaging.IMessage
  name: Payload
  nameWithType: IMessage.Payload
  fullName: Steeltoe.Messaging.IMessage.Payload
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Integration.Support.MutableMessage.ToString*
  commentId: Overload:Steeltoe.Integration.Support.MutableMessage.ToString
  name: ToString
  nameWithType: MutableMessage.ToString
  fullName: Steeltoe.Integration.Support.MutableMessage.ToString
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Integration.Support.MutableMessage.GetHashCode*
  commentId: Overload:Steeltoe.Integration.Support.MutableMessage.GetHashCode
  name: GetHashCode
  nameWithType: MutableMessage.GetHashCode
  fullName: Steeltoe.Integration.Support.MutableMessage.GetHashCode
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Integration.Support.MutableMessage.Equals*
  commentId: Overload:Steeltoe.Integration.Support.MutableMessage.Equals
  name: Equals
  nameWithType: MutableMessage.Equals
  fullName: Steeltoe.Integration.Support.MutableMessage.Equals
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Steeltoe.Integration.Support.MutableMessage.RawHeaders*
  commentId: Overload:Steeltoe.Integration.Support.MutableMessage.RawHeaders
  name: RawHeaders
  nameWithType: MutableMessage.RawHeaders
  fullName: Steeltoe.Integration.Support.MutableMessage.RawHeaders
