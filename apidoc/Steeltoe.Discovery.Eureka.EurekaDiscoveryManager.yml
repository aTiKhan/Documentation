### YamlMime:ManagedReference
items:
- uid: Steeltoe.Discovery.Eureka.EurekaDiscoveryManager
  commentId: T:Steeltoe.Discovery.Eureka.EurekaDiscoveryManager
  id: EurekaDiscoveryManager
  parent: Steeltoe.Discovery.Eureka
  children:
  - Steeltoe.Discovery.Eureka.EurekaDiscoveryManager.#ctor(IOptionsMonitor{Steeltoe.Discovery.Eureka.EurekaClientOptions},IOptionsMonitor{Steeltoe.Discovery.Eureka.EurekaInstanceOptions},Steeltoe.Discovery.Eureka.EurekaDiscoveryClient,ILoggerFactory)
  - Steeltoe.Discovery.Eureka.EurekaDiscoveryManager.ClientConfig
  - Steeltoe.Discovery.Eureka.EurekaDiscoveryManager.InstanceConfig
  langs:
  - csharp
  - vb
  name: EurekaDiscoveryManager
  nameWithType: EurekaDiscoveryManager
  fullName: Steeltoe.Discovery.Eureka.EurekaDiscoveryManager
  type: Class
  source:
    remote:
      path: src/Discovery/src/Eureka/EurekaDiscoveryManager.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: EurekaDiscoveryManager
    path: ../Steeltoe/src/Discovery/src/Eureka/EurekaDiscoveryManager.cs
    startLine: 9
  assemblies:
  - Steeltoe.Discovery.Eureka
  namespace: Steeltoe.Discovery.Eureka
  syntax:
    content: 'public class EurekaDiscoveryManager : DiscoveryManager'
    content.vb: >-
      Public Class EurekaDiscoveryManager

          Inherits DiscoveryManager
  inheritance:
  - System.Object
  - Steeltoe.Discovery.Eureka.DiscoveryManager
  inheritedMembers:
  - Steeltoe.Discovery.Eureka.DiscoveryManager._instance
  - Steeltoe.Discovery.Eureka.DiscoveryManager.Instance
  - Steeltoe.Discovery.Eureka.DiscoveryManager.Client
  - Steeltoe.Discovery.Eureka.DiscoveryManager.LookupService
  - Steeltoe.Discovery.Eureka.DiscoveryManager._logger
  - Steeltoe.Discovery.Eureka.DiscoveryManager.Initialize(Steeltoe.Discovery.Eureka.IEurekaClientConfig,ILoggerFactory)
  - Steeltoe.Discovery.Eureka.DiscoveryManager.Initialize(Steeltoe.Discovery.Eureka.IEurekaClientConfig,Steeltoe.Discovery.Eureka.IEurekaInstanceConfig,ILoggerFactory)
  - Steeltoe.Discovery.Eureka.DiscoveryManager.Initialize(Steeltoe.Discovery.Eureka.IEurekaClientConfig,Steeltoe.Discovery.Eureka.Transport.IEurekaHttpClient,ILoggerFactory)
  - Steeltoe.Discovery.Eureka.DiscoveryManager.Initialize(Steeltoe.Discovery.Eureka.IEurekaClientConfig,Steeltoe.Discovery.Eureka.IEurekaInstanceConfig,Steeltoe.Discovery.Eureka.Transport.IEurekaHttpClient,ILoggerFactory)
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Steeltoe.Discovery.Eureka.EurekaDiscoveryManager.#ctor(IOptionsMonitor{Steeltoe.Discovery.Eureka.EurekaClientOptions},IOptionsMonitor{Steeltoe.Discovery.Eureka.EurekaInstanceOptions},Steeltoe.Discovery.Eureka.EurekaDiscoveryClient,ILoggerFactory)
  commentId: M:Steeltoe.Discovery.Eureka.EurekaDiscoveryManager.#ctor(IOptionsMonitor{Steeltoe.Discovery.Eureka.EurekaClientOptions},IOptionsMonitor{Steeltoe.Discovery.Eureka.EurekaInstanceOptions},Steeltoe.Discovery.Eureka.EurekaDiscoveryClient,ILoggerFactory)
  id: '#ctor(IOptionsMonitor{Steeltoe.Discovery.Eureka.EurekaClientOptions},IOptionsMonitor{Steeltoe.Discovery.Eureka.EurekaInstanceOptions},Steeltoe.Discovery.Eureka.EurekaDiscoveryClient,ILoggerFactory)'
  parent: Steeltoe.Discovery.Eureka.EurekaDiscoveryManager
  langs:
  - csharp
  - vb
  name: EurekaDiscoveryManager(IOptionsMonitor<EurekaClientOptions>, IOptionsMonitor<EurekaInstanceOptions>, EurekaDiscoveryClient, ILoggerFactory)
  nameWithType: EurekaDiscoveryManager.EurekaDiscoveryManager(IOptionsMonitor<EurekaClientOptions>, IOptionsMonitor<EurekaInstanceOptions>, EurekaDiscoveryClient, ILoggerFactory)
  fullName: Steeltoe.Discovery.Eureka.EurekaDiscoveryManager.EurekaDiscoveryManager(IOptionsMonitor<Steeltoe.Discovery.Eureka.EurekaClientOptions>, IOptionsMonitor<Steeltoe.Discovery.Eureka.EurekaInstanceOptions>, Steeltoe.Discovery.Eureka.EurekaDiscoveryClient, ILoggerFactory)
  type: Constructor
  source:
    remote:
      path: src/Discovery/src/Eureka/EurekaDiscoveryManager.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: .ctor
    path: ../Steeltoe/src/Discovery/src/Eureka/EurekaDiscoveryManager.cs
    startLine: 15
  assemblies:
  - Steeltoe.Discovery.Eureka
  namespace: Steeltoe.Discovery.Eureka
  syntax:
    content: public EurekaDiscoveryManager(IOptionsMonitor<EurekaClientOptions> clientConfig, IOptionsMonitor<EurekaInstanceOptions> instConfig, EurekaDiscoveryClient client, ILoggerFactory logFactory = null)
    parameters:
    - id: clientConfig
      type: IOptionsMonitor{Steeltoe.Discovery.Eureka.EurekaClientOptions}
    - id: instConfig
      type: IOptionsMonitor{Steeltoe.Discovery.Eureka.EurekaInstanceOptions}
    - id: client
      type: Steeltoe.Discovery.Eureka.EurekaDiscoveryClient
    - id: logFactory
      type: ILoggerFactory
    content.vb: Public Sub New(clientConfig As IOptionsMonitor(Of EurekaClientOptions), instConfig As IOptionsMonitor(Of EurekaInstanceOptions), client As EurekaDiscoveryClient, logFactory As ILoggerFactory = Nothing)
  overload: Steeltoe.Discovery.Eureka.EurekaDiscoveryManager.#ctor*
  nameWithType.vb: EurekaDiscoveryManager.EurekaDiscoveryManager(IOptionsMonitor(Of EurekaClientOptions), IOptionsMonitor(Of EurekaInstanceOptions), EurekaDiscoveryClient, ILoggerFactory)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Steeltoe.Discovery.Eureka.EurekaDiscoveryManager.EurekaDiscoveryManager(IOptionsMonitor(Of Steeltoe.Discovery.Eureka.EurekaClientOptions), IOptionsMonitor(Of Steeltoe.Discovery.Eureka.EurekaInstanceOptions), Steeltoe.Discovery.Eureka.EurekaDiscoveryClient, ILoggerFactory)
  name.vb: EurekaDiscoveryManager(IOptionsMonitor(Of EurekaClientOptions), IOptionsMonitor(Of EurekaInstanceOptions), EurekaDiscoveryClient, ILoggerFactory)
- uid: Steeltoe.Discovery.Eureka.EurekaDiscoveryManager.ClientConfig
  commentId: P:Steeltoe.Discovery.Eureka.EurekaDiscoveryManager.ClientConfig
  id: ClientConfig
  parent: Steeltoe.Discovery.Eureka.EurekaDiscoveryManager
  langs:
  - csharp
  - vb
  name: ClientConfig
  nameWithType: EurekaDiscoveryManager.ClientConfig
  fullName: Steeltoe.Discovery.Eureka.EurekaDiscoveryManager.ClientConfig
  type: Property
  source:
    remote:
      path: src/Discovery/src/Eureka/EurekaDiscoveryManager.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: ClientConfig
    path: ../Steeltoe/src/Discovery/src/Eureka/EurekaDiscoveryManager.cs
    startLine: 27
  assemblies:
  - Steeltoe.Discovery.Eureka
  namespace: Steeltoe.Discovery.Eureka
  syntax:
    content: public override IEurekaClientConfig ClientConfig { get; }
    parameters: []
    return:
      type: Steeltoe.Discovery.Eureka.IEurekaClientConfig
    content.vb: Public Overrides ReadOnly Property ClientConfig As IEurekaClientConfig
  overridden: Steeltoe.Discovery.Eureka.DiscoveryManager.ClientConfig
  overload: Steeltoe.Discovery.Eureka.EurekaDiscoveryManager.ClientConfig*
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: Steeltoe.Discovery.Eureka.EurekaDiscoveryManager.InstanceConfig
  commentId: P:Steeltoe.Discovery.Eureka.EurekaDiscoveryManager.InstanceConfig
  id: InstanceConfig
  parent: Steeltoe.Discovery.Eureka.EurekaDiscoveryManager
  langs:
  - csharp
  - vb
  name: InstanceConfig
  nameWithType: EurekaDiscoveryManager.InstanceConfig
  fullName: Steeltoe.Discovery.Eureka.EurekaDiscoveryManager.InstanceConfig
  type: Property
  source:
    remote:
      path: src/Discovery/src/Eureka/EurekaDiscoveryManager.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: InstanceConfig
    path: ../Steeltoe/src/Discovery/src/Eureka/EurekaDiscoveryManager.cs
    startLine: 35
  assemblies:
  - Steeltoe.Discovery.Eureka
  namespace: Steeltoe.Discovery.Eureka
  syntax:
    content: public override IEurekaInstanceConfig InstanceConfig { get; }
    parameters: []
    return:
      type: Steeltoe.Discovery.Eureka.IEurekaInstanceConfig
    content.vb: Public Overrides ReadOnly Property InstanceConfig As IEurekaInstanceConfig
  overridden: Steeltoe.Discovery.Eureka.DiscoveryManager.InstanceConfig
  overload: Steeltoe.Discovery.Eureka.EurekaDiscoveryManager.InstanceConfig*
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
references:
- uid: Steeltoe.Discovery.Eureka
  commentId: N:Steeltoe.Discovery.Eureka
  name: Steeltoe.Discovery.Eureka
  nameWithType: Steeltoe.Discovery.Eureka
  fullName: Steeltoe.Discovery.Eureka
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Steeltoe.Discovery.Eureka.DiscoveryManager
  commentId: T:Steeltoe.Discovery.Eureka.DiscoveryManager
  parent: Steeltoe.Discovery.Eureka
  name: DiscoveryManager
  nameWithType: DiscoveryManager
  fullName: Steeltoe.Discovery.Eureka.DiscoveryManager
- uid: Steeltoe.Discovery.Eureka.DiscoveryManager._instance
  commentId: F:Steeltoe.Discovery.Eureka.DiscoveryManager._instance
  parent: Steeltoe.Discovery.Eureka.DiscoveryManager
  name: _instance
  nameWithType: DiscoveryManager._instance
  fullName: Steeltoe.Discovery.Eureka.DiscoveryManager._instance
- uid: Steeltoe.Discovery.Eureka.DiscoveryManager.Instance
  commentId: P:Steeltoe.Discovery.Eureka.DiscoveryManager.Instance
  parent: Steeltoe.Discovery.Eureka.DiscoveryManager
  name: Instance
  nameWithType: DiscoveryManager.Instance
  fullName: Steeltoe.Discovery.Eureka.DiscoveryManager.Instance
- uid: Steeltoe.Discovery.Eureka.DiscoveryManager.Client
  commentId: P:Steeltoe.Discovery.Eureka.DiscoveryManager.Client
  parent: Steeltoe.Discovery.Eureka.DiscoveryManager
  name: Client
  nameWithType: DiscoveryManager.Client
  fullName: Steeltoe.Discovery.Eureka.DiscoveryManager.Client
- uid: Steeltoe.Discovery.Eureka.DiscoveryManager.LookupService
  commentId: P:Steeltoe.Discovery.Eureka.DiscoveryManager.LookupService
  parent: Steeltoe.Discovery.Eureka.DiscoveryManager
  name: LookupService
  nameWithType: DiscoveryManager.LookupService
  fullName: Steeltoe.Discovery.Eureka.DiscoveryManager.LookupService
- uid: Steeltoe.Discovery.Eureka.DiscoveryManager._logger
  commentId: F:Steeltoe.Discovery.Eureka.DiscoveryManager._logger
  parent: Steeltoe.Discovery.Eureka.DiscoveryManager
  name: _logger
  nameWithType: DiscoveryManager._logger
  fullName: Steeltoe.Discovery.Eureka.DiscoveryManager._logger
- uid: Steeltoe.Discovery.Eureka.DiscoveryManager.Initialize(Steeltoe.Discovery.Eureka.IEurekaClientConfig,ILoggerFactory)
  commentId: M:Steeltoe.Discovery.Eureka.DiscoveryManager.Initialize(Steeltoe.Discovery.Eureka.IEurekaClientConfig,ILoggerFactory)
  parent: Steeltoe.Discovery.Eureka.DiscoveryManager
  isExternal: true
  name: Initialize(IEurekaClientConfig, ILoggerFactory)
  nameWithType: DiscoveryManager.Initialize(IEurekaClientConfig, ILoggerFactory)
  fullName: Steeltoe.Discovery.Eureka.DiscoveryManager.Initialize(Steeltoe.Discovery.Eureka.IEurekaClientConfig, ILoggerFactory)
  spec.csharp:
  - uid: Steeltoe.Discovery.Eureka.DiscoveryManager.Initialize(Steeltoe.Discovery.Eureka.IEurekaClientConfig,ILoggerFactory)
    name: Initialize
    nameWithType: DiscoveryManager.Initialize
    fullName: Steeltoe.Discovery.Eureka.DiscoveryManager.Initialize
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Discovery.Eureka.IEurekaClientConfig
    name: IEurekaClientConfig
    nameWithType: IEurekaClientConfig
    fullName: Steeltoe.Discovery.Eureka.IEurekaClientConfig
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: ILoggerFactory
    name: ILoggerFactory
    nameWithType: ILoggerFactory
    fullName: ILoggerFactory
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Discovery.Eureka.DiscoveryManager.Initialize(Steeltoe.Discovery.Eureka.IEurekaClientConfig,ILoggerFactory)
    name: Initialize
    nameWithType: DiscoveryManager.Initialize
    fullName: Steeltoe.Discovery.Eureka.DiscoveryManager.Initialize
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Discovery.Eureka.IEurekaClientConfig
    name: IEurekaClientConfig
    nameWithType: IEurekaClientConfig
    fullName: Steeltoe.Discovery.Eureka.IEurekaClientConfig
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: ILoggerFactory
    name: ILoggerFactory
    nameWithType: ILoggerFactory
    fullName: ILoggerFactory
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Discovery.Eureka.DiscoveryManager.Initialize(Steeltoe.Discovery.Eureka.IEurekaClientConfig,Steeltoe.Discovery.Eureka.IEurekaInstanceConfig,ILoggerFactory)
  commentId: M:Steeltoe.Discovery.Eureka.DiscoveryManager.Initialize(Steeltoe.Discovery.Eureka.IEurekaClientConfig,Steeltoe.Discovery.Eureka.IEurekaInstanceConfig,ILoggerFactory)
  parent: Steeltoe.Discovery.Eureka.DiscoveryManager
  isExternal: true
  name: Initialize(IEurekaClientConfig, IEurekaInstanceConfig, ILoggerFactory)
  nameWithType: DiscoveryManager.Initialize(IEurekaClientConfig, IEurekaInstanceConfig, ILoggerFactory)
  fullName: Steeltoe.Discovery.Eureka.DiscoveryManager.Initialize(Steeltoe.Discovery.Eureka.IEurekaClientConfig, Steeltoe.Discovery.Eureka.IEurekaInstanceConfig, ILoggerFactory)
  spec.csharp:
  - uid: Steeltoe.Discovery.Eureka.DiscoveryManager.Initialize(Steeltoe.Discovery.Eureka.IEurekaClientConfig,Steeltoe.Discovery.Eureka.IEurekaInstanceConfig,ILoggerFactory)
    name: Initialize
    nameWithType: DiscoveryManager.Initialize
    fullName: Steeltoe.Discovery.Eureka.DiscoveryManager.Initialize
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Discovery.Eureka.IEurekaClientConfig
    name: IEurekaClientConfig
    nameWithType: IEurekaClientConfig
    fullName: Steeltoe.Discovery.Eureka.IEurekaClientConfig
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Discovery.Eureka.IEurekaInstanceConfig
    name: IEurekaInstanceConfig
    nameWithType: IEurekaInstanceConfig
    fullName: Steeltoe.Discovery.Eureka.IEurekaInstanceConfig
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: ILoggerFactory
    name: ILoggerFactory
    nameWithType: ILoggerFactory
    fullName: ILoggerFactory
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Discovery.Eureka.DiscoveryManager.Initialize(Steeltoe.Discovery.Eureka.IEurekaClientConfig,Steeltoe.Discovery.Eureka.IEurekaInstanceConfig,ILoggerFactory)
    name: Initialize
    nameWithType: DiscoveryManager.Initialize
    fullName: Steeltoe.Discovery.Eureka.DiscoveryManager.Initialize
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Discovery.Eureka.IEurekaClientConfig
    name: IEurekaClientConfig
    nameWithType: IEurekaClientConfig
    fullName: Steeltoe.Discovery.Eureka.IEurekaClientConfig
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Discovery.Eureka.IEurekaInstanceConfig
    name: IEurekaInstanceConfig
    nameWithType: IEurekaInstanceConfig
    fullName: Steeltoe.Discovery.Eureka.IEurekaInstanceConfig
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: ILoggerFactory
    name: ILoggerFactory
    nameWithType: ILoggerFactory
    fullName: ILoggerFactory
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Discovery.Eureka.DiscoveryManager.Initialize(Steeltoe.Discovery.Eureka.IEurekaClientConfig,Steeltoe.Discovery.Eureka.Transport.IEurekaHttpClient,ILoggerFactory)
  commentId: M:Steeltoe.Discovery.Eureka.DiscoveryManager.Initialize(Steeltoe.Discovery.Eureka.IEurekaClientConfig,Steeltoe.Discovery.Eureka.Transport.IEurekaHttpClient,ILoggerFactory)
  parent: Steeltoe.Discovery.Eureka.DiscoveryManager
  isExternal: true
  name: Initialize(IEurekaClientConfig, IEurekaHttpClient, ILoggerFactory)
  nameWithType: DiscoveryManager.Initialize(IEurekaClientConfig, IEurekaHttpClient, ILoggerFactory)
  fullName: Steeltoe.Discovery.Eureka.DiscoveryManager.Initialize(Steeltoe.Discovery.Eureka.IEurekaClientConfig, Steeltoe.Discovery.Eureka.Transport.IEurekaHttpClient, ILoggerFactory)
  spec.csharp:
  - uid: Steeltoe.Discovery.Eureka.DiscoveryManager.Initialize(Steeltoe.Discovery.Eureka.IEurekaClientConfig,Steeltoe.Discovery.Eureka.Transport.IEurekaHttpClient,ILoggerFactory)
    name: Initialize
    nameWithType: DiscoveryManager.Initialize
    fullName: Steeltoe.Discovery.Eureka.DiscoveryManager.Initialize
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Discovery.Eureka.IEurekaClientConfig
    name: IEurekaClientConfig
    nameWithType: IEurekaClientConfig
    fullName: Steeltoe.Discovery.Eureka.IEurekaClientConfig
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Discovery.Eureka.Transport.IEurekaHttpClient
    name: IEurekaHttpClient
    nameWithType: IEurekaHttpClient
    fullName: Steeltoe.Discovery.Eureka.Transport.IEurekaHttpClient
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: ILoggerFactory
    name: ILoggerFactory
    nameWithType: ILoggerFactory
    fullName: ILoggerFactory
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Discovery.Eureka.DiscoveryManager.Initialize(Steeltoe.Discovery.Eureka.IEurekaClientConfig,Steeltoe.Discovery.Eureka.Transport.IEurekaHttpClient,ILoggerFactory)
    name: Initialize
    nameWithType: DiscoveryManager.Initialize
    fullName: Steeltoe.Discovery.Eureka.DiscoveryManager.Initialize
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Discovery.Eureka.IEurekaClientConfig
    name: IEurekaClientConfig
    nameWithType: IEurekaClientConfig
    fullName: Steeltoe.Discovery.Eureka.IEurekaClientConfig
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Discovery.Eureka.Transport.IEurekaHttpClient
    name: IEurekaHttpClient
    nameWithType: IEurekaHttpClient
    fullName: Steeltoe.Discovery.Eureka.Transport.IEurekaHttpClient
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: ILoggerFactory
    name: ILoggerFactory
    nameWithType: ILoggerFactory
    fullName: ILoggerFactory
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Discovery.Eureka.DiscoveryManager.Initialize(Steeltoe.Discovery.Eureka.IEurekaClientConfig,Steeltoe.Discovery.Eureka.IEurekaInstanceConfig,Steeltoe.Discovery.Eureka.Transport.IEurekaHttpClient,ILoggerFactory)
  commentId: M:Steeltoe.Discovery.Eureka.DiscoveryManager.Initialize(Steeltoe.Discovery.Eureka.IEurekaClientConfig,Steeltoe.Discovery.Eureka.IEurekaInstanceConfig,Steeltoe.Discovery.Eureka.Transport.IEurekaHttpClient,ILoggerFactory)
  parent: Steeltoe.Discovery.Eureka.DiscoveryManager
  isExternal: true
  name: Initialize(IEurekaClientConfig, IEurekaInstanceConfig, IEurekaHttpClient, ILoggerFactory)
  nameWithType: DiscoveryManager.Initialize(IEurekaClientConfig, IEurekaInstanceConfig, IEurekaHttpClient, ILoggerFactory)
  fullName: Steeltoe.Discovery.Eureka.DiscoveryManager.Initialize(Steeltoe.Discovery.Eureka.IEurekaClientConfig, Steeltoe.Discovery.Eureka.IEurekaInstanceConfig, Steeltoe.Discovery.Eureka.Transport.IEurekaHttpClient, ILoggerFactory)
  spec.csharp:
  - uid: Steeltoe.Discovery.Eureka.DiscoveryManager.Initialize(Steeltoe.Discovery.Eureka.IEurekaClientConfig,Steeltoe.Discovery.Eureka.IEurekaInstanceConfig,Steeltoe.Discovery.Eureka.Transport.IEurekaHttpClient,ILoggerFactory)
    name: Initialize
    nameWithType: DiscoveryManager.Initialize
    fullName: Steeltoe.Discovery.Eureka.DiscoveryManager.Initialize
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Discovery.Eureka.IEurekaClientConfig
    name: IEurekaClientConfig
    nameWithType: IEurekaClientConfig
    fullName: Steeltoe.Discovery.Eureka.IEurekaClientConfig
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Discovery.Eureka.IEurekaInstanceConfig
    name: IEurekaInstanceConfig
    nameWithType: IEurekaInstanceConfig
    fullName: Steeltoe.Discovery.Eureka.IEurekaInstanceConfig
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Discovery.Eureka.Transport.IEurekaHttpClient
    name: IEurekaHttpClient
    nameWithType: IEurekaHttpClient
    fullName: Steeltoe.Discovery.Eureka.Transport.IEurekaHttpClient
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: ILoggerFactory
    name: ILoggerFactory
    nameWithType: ILoggerFactory
    fullName: ILoggerFactory
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Discovery.Eureka.DiscoveryManager.Initialize(Steeltoe.Discovery.Eureka.IEurekaClientConfig,Steeltoe.Discovery.Eureka.IEurekaInstanceConfig,Steeltoe.Discovery.Eureka.Transport.IEurekaHttpClient,ILoggerFactory)
    name: Initialize
    nameWithType: DiscoveryManager.Initialize
    fullName: Steeltoe.Discovery.Eureka.DiscoveryManager.Initialize
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Discovery.Eureka.IEurekaClientConfig
    name: IEurekaClientConfig
    nameWithType: IEurekaClientConfig
    fullName: Steeltoe.Discovery.Eureka.IEurekaClientConfig
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Discovery.Eureka.IEurekaInstanceConfig
    name: IEurekaInstanceConfig
    nameWithType: IEurekaInstanceConfig
    fullName: Steeltoe.Discovery.Eureka.IEurekaInstanceConfig
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Discovery.Eureka.Transport.IEurekaHttpClient
    name: IEurekaHttpClient
    nameWithType: IEurekaHttpClient
    fullName: Steeltoe.Discovery.Eureka.Transport.IEurekaHttpClient
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: ILoggerFactory
    name: ILoggerFactory
    nameWithType: ILoggerFactory
    fullName: ILoggerFactory
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Steeltoe.Discovery.Eureka.EurekaDiscoveryManager.#ctor*
  commentId: Overload:Steeltoe.Discovery.Eureka.EurekaDiscoveryManager.#ctor
  name: EurekaDiscoveryManager
  nameWithType: EurekaDiscoveryManager.EurekaDiscoveryManager
  fullName: Steeltoe.Discovery.Eureka.EurekaDiscoveryManager.EurekaDiscoveryManager
- uid: IOptionsMonitor{Steeltoe.Discovery.Eureka.EurekaClientOptions}
  commentId: '!:IOptionsMonitor{Steeltoe.Discovery.Eureka.EurekaClientOptions}'
  definition: IOptionsMonitor`1
  name: IOptionsMonitor<EurekaClientOptions>
  nameWithType: IOptionsMonitor<EurekaClientOptions>
  fullName: IOptionsMonitor<Steeltoe.Discovery.Eureka.EurekaClientOptions>
  nameWithType.vb: IOptionsMonitor(Of EurekaClientOptions)
  fullName.vb: IOptionsMonitor(Of Steeltoe.Discovery.Eureka.EurekaClientOptions)
  name.vb: IOptionsMonitor(Of EurekaClientOptions)
  spec.csharp:
  - uid: IOptionsMonitor`1
    name: IOptionsMonitor
    nameWithType: IOptionsMonitor
    fullName: IOptionsMonitor
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Steeltoe.Discovery.Eureka.EurekaClientOptions
    name: EurekaClientOptions
    nameWithType: EurekaClientOptions
    fullName: Steeltoe.Discovery.Eureka.EurekaClientOptions
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IOptionsMonitor`1
    name: IOptionsMonitor
    nameWithType: IOptionsMonitor
    fullName: IOptionsMonitor
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Steeltoe.Discovery.Eureka.EurekaClientOptions
    name: EurekaClientOptions
    nameWithType: EurekaClientOptions
    fullName: Steeltoe.Discovery.Eureka.EurekaClientOptions
  - name: )
    nameWithType: )
    fullName: )
- uid: IOptionsMonitor{Steeltoe.Discovery.Eureka.EurekaInstanceOptions}
  commentId: '!:IOptionsMonitor{Steeltoe.Discovery.Eureka.EurekaInstanceOptions}'
  definition: IOptionsMonitor`1
  name: IOptionsMonitor<EurekaInstanceOptions>
  nameWithType: IOptionsMonitor<EurekaInstanceOptions>
  fullName: IOptionsMonitor<Steeltoe.Discovery.Eureka.EurekaInstanceOptions>
  nameWithType.vb: IOptionsMonitor(Of EurekaInstanceOptions)
  fullName.vb: IOptionsMonitor(Of Steeltoe.Discovery.Eureka.EurekaInstanceOptions)
  name.vb: IOptionsMonitor(Of EurekaInstanceOptions)
  spec.csharp:
  - uid: IOptionsMonitor`1
    name: IOptionsMonitor
    nameWithType: IOptionsMonitor
    fullName: IOptionsMonitor
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Steeltoe.Discovery.Eureka.EurekaInstanceOptions
    name: EurekaInstanceOptions
    nameWithType: EurekaInstanceOptions
    fullName: Steeltoe.Discovery.Eureka.EurekaInstanceOptions
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IOptionsMonitor`1
    name: IOptionsMonitor
    nameWithType: IOptionsMonitor
    fullName: IOptionsMonitor
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Steeltoe.Discovery.Eureka.EurekaInstanceOptions
    name: EurekaInstanceOptions
    nameWithType: EurekaInstanceOptions
    fullName: Steeltoe.Discovery.Eureka.EurekaInstanceOptions
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Discovery.Eureka.EurekaDiscoveryClient
  commentId: T:Steeltoe.Discovery.Eureka.EurekaDiscoveryClient
  parent: Steeltoe.Discovery.Eureka
  name: EurekaDiscoveryClient
  nameWithType: EurekaDiscoveryClient
  fullName: Steeltoe.Discovery.Eureka.EurekaDiscoveryClient
- uid: ILoggerFactory
  isExternal: true
  name: ILoggerFactory
  nameWithType: ILoggerFactory
  fullName: ILoggerFactory
- uid: IOptionsMonitor`1
  isExternal: true
  name: IOptionsMonitor<>
  nameWithType: IOptionsMonitor<>
  fullName: IOptionsMonitor<>
  nameWithType.vb: IOptionsMonitor(Of )
  fullName.vb: IOptionsMonitor(Of )
  name.vb: IOptionsMonitor(Of )
  spec.csharp:
  - uid: IOptionsMonitor`1
    name: IOptionsMonitor
    nameWithType: IOptionsMonitor
    fullName: IOptionsMonitor
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IOptionsMonitor`1
    name: IOptionsMonitor
    nameWithType: IOptionsMonitor
    fullName: IOptionsMonitor
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Discovery.Eureka.DiscoveryManager.ClientConfig
  commentId: P:Steeltoe.Discovery.Eureka.DiscoveryManager.ClientConfig
  parent: Steeltoe.Discovery.Eureka.DiscoveryManager
  name: ClientConfig
  nameWithType: DiscoveryManager.ClientConfig
  fullName: Steeltoe.Discovery.Eureka.DiscoveryManager.ClientConfig
- uid: Steeltoe.Discovery.Eureka.EurekaDiscoveryManager.ClientConfig*
  commentId: Overload:Steeltoe.Discovery.Eureka.EurekaDiscoveryManager.ClientConfig
  name: ClientConfig
  nameWithType: EurekaDiscoveryManager.ClientConfig
  fullName: Steeltoe.Discovery.Eureka.EurekaDiscoveryManager.ClientConfig
- uid: Steeltoe.Discovery.Eureka.IEurekaClientConfig
  commentId: T:Steeltoe.Discovery.Eureka.IEurekaClientConfig
  parent: Steeltoe.Discovery.Eureka
  name: IEurekaClientConfig
  nameWithType: IEurekaClientConfig
  fullName: Steeltoe.Discovery.Eureka.IEurekaClientConfig
- uid: Steeltoe.Discovery.Eureka.DiscoveryManager.InstanceConfig
  commentId: P:Steeltoe.Discovery.Eureka.DiscoveryManager.InstanceConfig
  parent: Steeltoe.Discovery.Eureka.DiscoveryManager
  name: InstanceConfig
  nameWithType: DiscoveryManager.InstanceConfig
  fullName: Steeltoe.Discovery.Eureka.DiscoveryManager.InstanceConfig
- uid: Steeltoe.Discovery.Eureka.EurekaDiscoveryManager.InstanceConfig*
  commentId: Overload:Steeltoe.Discovery.Eureka.EurekaDiscoveryManager.InstanceConfig
  name: InstanceConfig
  nameWithType: EurekaDiscoveryManager.InstanceConfig
  fullName: Steeltoe.Discovery.Eureka.EurekaDiscoveryManager.InstanceConfig
- uid: Steeltoe.Discovery.Eureka.IEurekaInstanceConfig
  commentId: T:Steeltoe.Discovery.Eureka.IEurekaInstanceConfig
  parent: Steeltoe.Discovery.Eureka
  name: IEurekaInstanceConfig
  nameWithType: IEurekaInstanceConfig
  fullName: Steeltoe.Discovery.Eureka.IEurekaInstanceConfig
