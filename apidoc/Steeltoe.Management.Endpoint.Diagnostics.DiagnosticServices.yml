### YamlMime:ManagedReference
items:
- uid: Steeltoe.Management.Endpoint.Diagnostics.DiagnosticServices
  commentId: T:Steeltoe.Management.Endpoint.Diagnostics.DiagnosticServices
  id: DiagnosticServices
  parent: Steeltoe.Management.Endpoint.Diagnostics
  children:
  - Steeltoe.Management.Endpoint.Diagnostics.DiagnosticServices.#ctor(Steeltoe.Common.Diagnostics.IDiagnosticsManager,ILogger{Steeltoe.Management.Endpoint.Diagnostics.DiagnosticServices})
  - Steeltoe.Management.Endpoint.Diagnostics.DiagnosticServices.StartAsync(System.Threading.CancellationToken)
  - Steeltoe.Management.Endpoint.Diagnostics.DiagnosticServices.StopAsync(System.Threading.CancellationToken)
  langs:
  - csharp
  - vb
  name: DiagnosticServices
  nameWithType: DiagnosticServices
  fullName: Steeltoe.Management.Endpoint.Diagnostics.DiagnosticServices
  type: Class
  source:
    remote:
      path: src/Management/src/EndpointBase/Diagnostics/DiagnosticServices.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: DiagnosticServices
    path: ../Steeltoe/src/Management/src/EndpointBase/Diagnostics/DiagnosticServices.cs
    startLine: 12
  assemblies:
  - Steeltoe.Management.EndpointBase
  namespace: Steeltoe.Management.Endpoint.Diagnostics
  syntax:
    content: 'public class DiagnosticServices : IHostedService'
    content.vb: >-
      Public Class DiagnosticServices

          Inherits IHostedService
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Steeltoe.Management.Endpoint.Diagnostics.DiagnosticServices.#ctor(Steeltoe.Common.Diagnostics.IDiagnosticsManager,ILogger{Steeltoe.Management.Endpoint.Diagnostics.DiagnosticServices})
  commentId: M:Steeltoe.Management.Endpoint.Diagnostics.DiagnosticServices.#ctor(Steeltoe.Common.Diagnostics.IDiagnosticsManager,ILogger{Steeltoe.Management.Endpoint.Diagnostics.DiagnosticServices})
  id: '#ctor(Steeltoe.Common.Diagnostics.IDiagnosticsManager,ILogger{Steeltoe.Management.Endpoint.Diagnostics.DiagnosticServices})'
  parent: Steeltoe.Management.Endpoint.Diagnostics.DiagnosticServices
  langs:
  - csharp
  - vb
  name: DiagnosticServices(IDiagnosticsManager, ILogger<DiagnosticServices>)
  nameWithType: DiagnosticServices.DiagnosticServices(IDiagnosticsManager, ILogger<DiagnosticServices>)
  fullName: Steeltoe.Management.Endpoint.Diagnostics.DiagnosticServices.DiagnosticServices(Steeltoe.Common.Diagnostics.IDiagnosticsManager, ILogger<Steeltoe.Management.Endpoint.Diagnostics.DiagnosticServices>)
  type: Constructor
  source:
    remote:
      path: src/Management/src/EndpointBase/Diagnostics/DiagnosticServices.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: .ctor
    path: ../Steeltoe/src/Management/src/EndpointBase/Diagnostics/DiagnosticServices.cs
    startLine: 17
  assemblies:
  - Steeltoe.Management.EndpointBase
  namespace: Steeltoe.Management.Endpoint.Diagnostics
  syntax:
    content: public DiagnosticServices(IDiagnosticsManager observerManager, ILogger<DiagnosticServices> logger = null)
    parameters:
    - id: observerManager
      type: Steeltoe.Common.Diagnostics.IDiagnosticsManager
    - id: logger
      type: ILogger{Steeltoe.Management.Endpoint.Diagnostics.DiagnosticServices}
    content.vb: Public Sub New(observerManager As IDiagnosticsManager, logger As ILogger(Of DiagnosticServices) = Nothing)
  overload: Steeltoe.Management.Endpoint.Diagnostics.DiagnosticServices.#ctor*
  nameWithType.vb: DiagnosticServices.DiagnosticServices(IDiagnosticsManager, ILogger(Of DiagnosticServices))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Steeltoe.Management.Endpoint.Diagnostics.DiagnosticServices.DiagnosticServices(Steeltoe.Common.Diagnostics.IDiagnosticsManager, ILogger(Of Steeltoe.Management.Endpoint.Diagnostics.DiagnosticServices))
  name.vb: DiagnosticServices(IDiagnosticsManager, ILogger(Of DiagnosticServices))
- uid: Steeltoe.Management.Endpoint.Diagnostics.DiagnosticServices.StartAsync(System.Threading.CancellationToken)
  commentId: M:Steeltoe.Management.Endpoint.Diagnostics.DiagnosticServices.StartAsync(System.Threading.CancellationToken)
  id: StartAsync(System.Threading.CancellationToken)
  parent: Steeltoe.Management.Endpoint.Diagnostics.DiagnosticServices
  langs:
  - csharp
  - vb
  name: StartAsync(CancellationToken)
  nameWithType: DiagnosticServices.StartAsync(CancellationToken)
  fullName: Steeltoe.Management.Endpoint.Diagnostics.DiagnosticServices.StartAsync(System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Management/src/EndpointBase/Diagnostics/DiagnosticServices.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: StartAsync
    path: ../Steeltoe/src/Management/src/EndpointBase/Diagnostics/DiagnosticServices.cs
    startLine: 23
  assemblies:
  - Steeltoe.Management.EndpointBase
  namespace: Steeltoe.Management.Endpoint.Diagnostics
  syntax:
    content: public Task StartAsync(CancellationToken cancellationToken)
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function StartAsync(cancellationToken As CancellationToken) As Task
  overload: Steeltoe.Management.Endpoint.Diagnostics.DiagnosticServices.StartAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Steeltoe.Management.Endpoint.Diagnostics.DiagnosticServices.StopAsync(System.Threading.CancellationToken)
  commentId: M:Steeltoe.Management.Endpoint.Diagnostics.DiagnosticServices.StopAsync(System.Threading.CancellationToken)
  id: StopAsync(System.Threading.CancellationToken)
  parent: Steeltoe.Management.Endpoint.Diagnostics.DiagnosticServices
  langs:
  - csharp
  - vb
  name: StopAsync(CancellationToken)
  nameWithType: DiagnosticServices.StopAsync(CancellationToken)
  fullName: Steeltoe.Management.Endpoint.Diagnostics.DiagnosticServices.StopAsync(System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Management/src/EndpointBase/Diagnostics/DiagnosticServices.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: StopAsync
    path: ../Steeltoe/src/Management/src/EndpointBase/Diagnostics/DiagnosticServices.cs
    startLine: 29
  assemblies:
  - Steeltoe.Management.EndpointBase
  namespace: Steeltoe.Management.Endpoint.Diagnostics
  syntax:
    content: public Task StopAsync(CancellationToken cancellationToken)
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function StopAsync(cancellationToken As CancellationToken) As Task
  overload: Steeltoe.Management.Endpoint.Diagnostics.DiagnosticServices.StopAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Steeltoe.Management.Endpoint.Diagnostics
  commentId: N:Steeltoe.Management.Endpoint.Diagnostics
  name: Steeltoe.Management.Endpoint.Diagnostics
  nameWithType: Steeltoe.Management.Endpoint.Diagnostics
  fullName: Steeltoe.Management.Endpoint.Diagnostics
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Steeltoe.Management.Endpoint.Diagnostics.DiagnosticServices.#ctor*
  commentId: Overload:Steeltoe.Management.Endpoint.Diagnostics.DiagnosticServices.#ctor
  name: DiagnosticServices
  nameWithType: DiagnosticServices.DiagnosticServices
  fullName: Steeltoe.Management.Endpoint.Diagnostics.DiagnosticServices.DiagnosticServices
- uid: Steeltoe.Common.Diagnostics.IDiagnosticsManager
  commentId: T:Steeltoe.Common.Diagnostics.IDiagnosticsManager
  parent: Steeltoe.Common.Diagnostics
  name: IDiagnosticsManager
  nameWithType: IDiagnosticsManager
  fullName: Steeltoe.Common.Diagnostics.IDiagnosticsManager
- uid: ILogger{Steeltoe.Management.Endpoint.Diagnostics.DiagnosticServices}
  commentId: '!:ILogger{Steeltoe.Management.Endpoint.Diagnostics.DiagnosticServices}'
  definition: ILogger`1
  name: ILogger<DiagnosticServices>
  nameWithType: ILogger<DiagnosticServices>
  fullName: ILogger<Steeltoe.Management.Endpoint.Diagnostics.DiagnosticServices>
  nameWithType.vb: ILogger(Of DiagnosticServices)
  fullName.vb: ILogger(Of Steeltoe.Management.Endpoint.Diagnostics.DiagnosticServices)
  name.vb: ILogger(Of DiagnosticServices)
  spec.csharp:
  - uid: ILogger`1
    name: ILogger
    nameWithType: ILogger
    fullName: ILogger
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Steeltoe.Management.Endpoint.Diagnostics.DiagnosticServices
    name: DiagnosticServices
    nameWithType: DiagnosticServices
    fullName: Steeltoe.Management.Endpoint.Diagnostics.DiagnosticServices
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: ILogger`1
    name: ILogger
    nameWithType: ILogger
    fullName: ILogger
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Steeltoe.Management.Endpoint.Diagnostics.DiagnosticServices
    name: DiagnosticServices
    nameWithType: DiagnosticServices
    fullName: Steeltoe.Management.Endpoint.Diagnostics.DiagnosticServices
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Common.Diagnostics
  commentId: N:Steeltoe.Common.Diagnostics
  name: Steeltoe.Common.Diagnostics
  nameWithType: Steeltoe.Common.Diagnostics
  fullName: Steeltoe.Common.Diagnostics
- uid: ILogger`1
  isExternal: true
  name: ILogger<>
  nameWithType: ILogger<>
  fullName: ILogger<>
  nameWithType.vb: ILogger(Of )
  fullName.vb: ILogger(Of )
  name.vb: ILogger(Of )
  spec.csharp:
  - uid: ILogger`1
    name: ILogger
    nameWithType: ILogger
    fullName: ILogger
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: ILogger`1
    name: ILogger
    nameWithType: ILogger
    fullName: ILogger
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Management.Endpoint.Diagnostics.DiagnosticServices.StartAsync*
  commentId: Overload:Steeltoe.Management.Endpoint.Diagnostics.DiagnosticServices.StartAsync
  name: StartAsync
  nameWithType: DiagnosticServices.StartAsync
  fullName: Steeltoe.Management.Endpoint.Diagnostics.DiagnosticServices.StartAsync
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: true
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: Steeltoe.Management.Endpoint.Diagnostics.DiagnosticServices.StopAsync*
  commentId: Overload:Steeltoe.Management.Endpoint.Diagnostics.DiagnosticServices.StopAsync
  name: StopAsync
  nameWithType: DiagnosticServices.StopAsync
  fullName: Steeltoe.Management.Endpoint.Diagnostics.DiagnosticServices.StopAsync
