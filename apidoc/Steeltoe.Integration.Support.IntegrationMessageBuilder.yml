### YamlMime:ManagedReference
items:
- uid: Steeltoe.Integration.Support.IntegrationMessageBuilder
  commentId: T:Steeltoe.Integration.Support.IntegrationMessageBuilder
  id: IntegrationMessageBuilder
  parent: Steeltoe.Integration.Support
  children:
  - Steeltoe.Integration.Support.IntegrationMessageBuilder.Build
  - Steeltoe.Integration.Support.IntegrationMessageBuilder.CopyHeaders(System.Collections.Generic.IDictionary{System.String,System.Object})
  - Steeltoe.Integration.Support.IntegrationMessageBuilder.CopyHeadersIfAbsent(System.Collections.Generic.IDictionary{System.String,System.Object})
  - Steeltoe.Integration.Support.IntegrationMessageBuilder.CorrelationId
  - Steeltoe.Integration.Support.IntegrationMessageBuilder.FromMessage(Steeltoe.Messaging.IMessage)
  - Steeltoe.Integration.Support.IntegrationMessageBuilder.Headers
  - Steeltoe.Integration.Support.IntegrationMessageBuilder.Payload
  - Steeltoe.Integration.Support.IntegrationMessageBuilder.ReadOnlyHeaders(System.Collections.Generic.IList{System.String})
  - Steeltoe.Integration.Support.IntegrationMessageBuilder.RemoveHeader(System.String)
  - Steeltoe.Integration.Support.IntegrationMessageBuilder.RemoveHeaders(System.String[])
  - Steeltoe.Integration.Support.IntegrationMessageBuilder.SequenceDetails
  - Steeltoe.Integration.Support.IntegrationMessageBuilder.SequenceNumber
  - Steeltoe.Integration.Support.IntegrationMessageBuilder.SequenceSize
  - Steeltoe.Integration.Support.IntegrationMessageBuilder.SetHeader(System.String,System.Object)
  - Steeltoe.Integration.Support.IntegrationMessageBuilder.SetHeaderIfAbsent(System.String,System.Object)
  - Steeltoe.Integration.Support.IntegrationMessageBuilder.WithPayload(System.Object)
  langs:
  - csharp
  - vb
  name: IntegrationMessageBuilder
  nameWithType: IntegrationMessageBuilder
  fullName: Steeltoe.Integration.Support.IntegrationMessageBuilder
  type: Class
  source:
    remote:
      path: src/Integration/src/IntegrationBase/Support/IntegrationMessageBuilder.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: IntegrationMessageBuilder
    path: ../Steeltoe/src/Integration/src/IntegrationBase/Support/IntegrationMessageBuilder.cs
    startLine: 176
  assemblies:
  - Steeltoe.Integration.IntegrationBase
  namespace: Steeltoe.Integration.Support
  syntax:
    content: 'public class IntegrationMessageBuilder : AbstractMessageBuilder, IMessageBuilder'
    content.vb: >-
      Public Class IntegrationMessageBuilder

          Inherits AbstractMessageBuilder

          Implements IMessageBuilder
  inheritance:
  - System.Object
  - Steeltoe.Integration.Support.AbstractMessageBuilder
  derivedClasses:
  - Steeltoe.Integration.Support.IntegrationMessageBuilder`1
  implements:
  - Steeltoe.Integration.Support.IMessageBuilder
  inheritedMembers:
  - Steeltoe.Integration.Support.AbstractMessageBuilder._payload
  - Steeltoe.Integration.Support.AbstractMessageBuilder._originalMessage
  - Steeltoe.Integration.Support.AbstractMessageBuilder._headerAccessor
  - Steeltoe.Integration.Support.AbstractMessageBuilder._modified
  - Steeltoe.Integration.Support.AbstractMessageBuilder._readOnlyHeaders
  - Steeltoe.Integration.Support.AbstractMessageBuilder.SetExpirationDate(System.Int64)
  - Steeltoe.Integration.Support.AbstractMessageBuilder.SetExpirationDate(System.Nullable{System.DateTime})
  - Steeltoe.Integration.Support.AbstractMessageBuilder.SetCorrelationId(System.Object)
  - Steeltoe.Integration.Support.AbstractMessageBuilder.PushSequenceDetails(System.Object,System.Int32,System.Int32)
  - Steeltoe.Integration.Support.AbstractMessageBuilder.PopSequenceDetails
  - Steeltoe.Integration.Support.AbstractMessageBuilder.SetReplyChannel(Steeltoe.Messaging.IMessageChannel)
  - Steeltoe.Integration.Support.AbstractMessageBuilder.SetReplyChannelName(System.String)
  - Steeltoe.Integration.Support.AbstractMessageBuilder.SetErrorChannel(Steeltoe.Messaging.IMessageChannel)
  - Steeltoe.Integration.Support.AbstractMessageBuilder.SetErrorChannelName(System.String)
  - Steeltoe.Integration.Support.AbstractMessageBuilder.SetSequenceNumber(System.Int32)
  - Steeltoe.Integration.Support.AbstractMessageBuilder.SetSequenceSize(System.Int32)
  - Steeltoe.Integration.Support.AbstractMessageBuilder.SetPriority(System.Int32)
  - Steeltoe.Integration.Support.AbstractMessageBuilder.FilterAndCopyHeadersIfAbsent(System.Collections.Generic.IDictionary{System.String,System.Object},System.String[])
  - Steeltoe.Integration.Support.AbstractMessageBuilder.ContainsReadOnly(Steeltoe.Messaging.IMessageHeaders)
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Steeltoe.Integration.Support.IntegrationMessageBuilder.Payload
  commentId: P:Steeltoe.Integration.Support.IntegrationMessageBuilder.Payload
  id: Payload
  parent: Steeltoe.Integration.Support.IntegrationMessageBuilder
  langs:
  - csharp
  - vb
  name: Payload
  nameWithType: IntegrationMessageBuilder.Payload
  fullName: Steeltoe.Integration.Support.IntegrationMessageBuilder.Payload
  type: Property
  source:
    remote:
      path: src/Integration/src/IntegrationBase/Support/IntegrationMessageBuilder.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Payload
    path: ../Steeltoe/src/Integration/src/IntegrationBase/Support/IntegrationMessageBuilder.cs
    startLine: 183
  assemblies:
  - Steeltoe.Integration.IntegrationBase
  namespace: Steeltoe.Integration.Support
  syntax:
    content: public override object Payload { get; }
    parameters: []
    return:
      type: System.Object
    content.vb: Public Overrides ReadOnly Property Payload As Object
  overridden: Steeltoe.Integration.Support.AbstractMessageBuilder.Payload
  overload: Steeltoe.Integration.Support.IntegrationMessageBuilder.Payload*
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: Steeltoe.Integration.Support.IntegrationMessageBuilder.Headers
  commentId: P:Steeltoe.Integration.Support.IntegrationMessageBuilder.Headers
  id: Headers
  parent: Steeltoe.Integration.Support.IntegrationMessageBuilder
  langs:
  - csharp
  - vb
  name: Headers
  nameWithType: IntegrationMessageBuilder.Headers
  fullName: Steeltoe.Integration.Support.IntegrationMessageBuilder.Headers
  type: Property
  source:
    remote:
      path: src/Integration/src/IntegrationBase/Support/IntegrationMessageBuilder.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Headers
    path: ../Steeltoe/src/Integration/src/IntegrationBase/Support/IntegrationMessageBuilder.cs
    startLine: 188
  assemblies:
  - Steeltoe.Integration.IntegrationBase
  namespace: Steeltoe.Integration.Support
  syntax:
    content: public override IDictionary<string, object> Headers { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IDictionary{System.String,System.Object}
    content.vb: Public Overrides ReadOnly Property Headers As IDictionary(Of String, Object)
  overridden: Steeltoe.Integration.Support.AbstractMessageBuilder.Headers
  overload: Steeltoe.Integration.Support.IntegrationMessageBuilder.Headers*
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: Steeltoe.Integration.Support.IntegrationMessageBuilder.FromMessage(Steeltoe.Messaging.IMessage)
  commentId: M:Steeltoe.Integration.Support.IntegrationMessageBuilder.FromMessage(Steeltoe.Messaging.IMessage)
  id: FromMessage(Steeltoe.Messaging.IMessage)
  parent: Steeltoe.Integration.Support.IntegrationMessageBuilder
  langs:
  - csharp
  - vb
  name: FromMessage(IMessage)
  nameWithType: IntegrationMessageBuilder.FromMessage(IMessage)
  fullName: Steeltoe.Integration.Support.IntegrationMessageBuilder.FromMessage(Steeltoe.Messaging.IMessage)
  type: Method
  source:
    remote:
      path: src/Integration/src/IntegrationBase/Support/IntegrationMessageBuilder.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: FromMessage
    path: ../Steeltoe/src/Integration/src/IntegrationBase/Support/IntegrationMessageBuilder.cs
    startLine: 193
  assemblies:
  - Steeltoe.Integration.IntegrationBase
  namespace: Steeltoe.Integration.Support
  syntax:
    content: public static IntegrationMessageBuilder FromMessage(IMessage message)
    parameters:
    - id: message
      type: Steeltoe.Messaging.IMessage
    return:
      type: Steeltoe.Integration.Support.IntegrationMessageBuilder
    content.vb: Public Shared Function FromMessage(message As IMessage) As IntegrationMessageBuilder
  overload: Steeltoe.Integration.Support.IntegrationMessageBuilder.FromMessage*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Steeltoe.Integration.Support.IntegrationMessageBuilder.WithPayload(System.Object)
  commentId: M:Steeltoe.Integration.Support.IntegrationMessageBuilder.WithPayload(System.Object)
  id: WithPayload(System.Object)
  parent: Steeltoe.Integration.Support.IntegrationMessageBuilder
  langs:
  - csharp
  - vb
  name: WithPayload(Object)
  nameWithType: IntegrationMessageBuilder.WithPayload(Object)
  fullName: Steeltoe.Integration.Support.IntegrationMessageBuilder.WithPayload(System.Object)
  type: Method
  source:
    remote:
      path: src/Integration/src/IntegrationBase/Support/IntegrationMessageBuilder.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: WithPayload
    path: ../Steeltoe/src/Integration/src/IntegrationBase/Support/IntegrationMessageBuilder.cs
    startLine: 203
  assemblies:
  - Steeltoe.Integration.IntegrationBase
  namespace: Steeltoe.Integration.Support
  syntax:
    content: public static IntegrationMessageBuilder WithPayload(object payload)
    parameters:
    - id: payload
      type: System.Object
    return:
      type: Steeltoe.Integration.Support.IntegrationMessageBuilder
    content.vb: Public Shared Function WithPayload(payload As Object) As IntegrationMessageBuilder
  overload: Steeltoe.Integration.Support.IntegrationMessageBuilder.WithPayload*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Steeltoe.Integration.Support.IntegrationMessageBuilder.SetHeader(System.String,System.Object)
  commentId: M:Steeltoe.Integration.Support.IntegrationMessageBuilder.SetHeader(System.String,System.Object)
  id: SetHeader(System.String,System.Object)
  parent: Steeltoe.Integration.Support.IntegrationMessageBuilder
  langs:
  - csharp
  - vb
  name: SetHeader(String, Object)
  nameWithType: IntegrationMessageBuilder.SetHeader(String, Object)
  fullName: Steeltoe.Integration.Support.IntegrationMessageBuilder.SetHeader(System.String, System.Object)
  type: Method
  source:
    remote:
      path: src/Integration/src/IntegrationBase/Support/IntegrationMessageBuilder.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: SetHeader
    path: ../Steeltoe/src/Integration/src/IntegrationBase/Support/IntegrationMessageBuilder.cs
    startLine: 208
  assemblies:
  - Steeltoe.Integration.IntegrationBase
  namespace: Steeltoe.Integration.Support
  syntax:
    content: public override IMessageBuilder SetHeader(string headerName, object headerValue)
    parameters:
    - id: headerName
      type: System.String
    - id: headerValue
      type: System.Object
    return:
      type: Steeltoe.Integration.Support.IMessageBuilder
    content.vb: Public Overrides Function SetHeader(headerName As String, headerValue As Object) As IMessageBuilder
  overridden: Steeltoe.Integration.Support.AbstractMessageBuilder.SetHeader(System.String,System.Object)
  overload: Steeltoe.Integration.Support.IntegrationMessageBuilder.SetHeader*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Steeltoe.Integration.Support.IntegrationMessageBuilder.SetHeaderIfAbsent(System.String,System.Object)
  commentId: M:Steeltoe.Integration.Support.IntegrationMessageBuilder.SetHeaderIfAbsent(System.String,System.Object)
  id: SetHeaderIfAbsent(System.String,System.Object)
  parent: Steeltoe.Integration.Support.IntegrationMessageBuilder
  langs:
  - csharp
  - vb
  name: SetHeaderIfAbsent(String, Object)
  nameWithType: IntegrationMessageBuilder.SetHeaderIfAbsent(String, Object)
  fullName: Steeltoe.Integration.Support.IntegrationMessageBuilder.SetHeaderIfAbsent(System.String, System.Object)
  type: Method
  source:
    remote:
      path: src/Integration/src/IntegrationBase/Support/IntegrationMessageBuilder.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: SetHeaderIfAbsent
    path: ../Steeltoe/src/Integration/src/IntegrationBase/Support/IntegrationMessageBuilder.cs
    startLine: 214
  assemblies:
  - Steeltoe.Integration.IntegrationBase
  namespace: Steeltoe.Integration.Support
  syntax:
    content: public override IMessageBuilder SetHeaderIfAbsent(string headerName, object headerValue)
    parameters:
    - id: headerName
      type: System.String
    - id: headerValue
      type: System.Object
    return:
      type: Steeltoe.Integration.Support.IMessageBuilder
    content.vb: Public Overrides Function SetHeaderIfAbsent(headerName As String, headerValue As Object) As IMessageBuilder
  overridden: Steeltoe.Integration.Support.AbstractMessageBuilder.SetHeaderIfAbsent(System.String,System.Object)
  overload: Steeltoe.Integration.Support.IntegrationMessageBuilder.SetHeaderIfAbsent*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Steeltoe.Integration.Support.IntegrationMessageBuilder.RemoveHeaders(System.String[])
  commentId: M:Steeltoe.Integration.Support.IntegrationMessageBuilder.RemoveHeaders(System.String[])
  id: RemoveHeaders(System.String[])
  parent: Steeltoe.Integration.Support.IntegrationMessageBuilder
  langs:
  - csharp
  - vb
  name: RemoveHeaders(String[])
  nameWithType: IntegrationMessageBuilder.RemoveHeaders(String[])
  fullName: Steeltoe.Integration.Support.IntegrationMessageBuilder.RemoveHeaders(System.String[])
  type: Method
  source:
    remote:
      path: src/Integration/src/IntegrationBase/Support/IntegrationMessageBuilder.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: RemoveHeaders
    path: ../Steeltoe/src/Integration/src/IntegrationBase/Support/IntegrationMessageBuilder.cs
    startLine: 220
  assemblies:
  - Steeltoe.Integration.IntegrationBase
  namespace: Steeltoe.Integration.Support
  syntax:
    content: public override IMessageBuilder RemoveHeaders(params string[] headerPatterns)
    parameters:
    - id: headerPatterns
      type: System.String[]
    return:
      type: Steeltoe.Integration.Support.IMessageBuilder
    content.vb: Public Overrides Function RemoveHeaders(ParamArray headerPatterns As String()) As IMessageBuilder
  overridden: Steeltoe.Integration.Support.AbstractMessageBuilder.RemoveHeaders(System.String[])
  overload: Steeltoe.Integration.Support.IntegrationMessageBuilder.RemoveHeaders*
  nameWithType.vb: IntegrationMessageBuilder.RemoveHeaders(String())
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: Steeltoe.Integration.Support.IntegrationMessageBuilder.RemoveHeaders(System.String())
  name.vb: RemoveHeaders(String())
- uid: Steeltoe.Integration.Support.IntegrationMessageBuilder.RemoveHeader(System.String)
  commentId: M:Steeltoe.Integration.Support.IntegrationMessageBuilder.RemoveHeader(System.String)
  id: RemoveHeader(System.String)
  parent: Steeltoe.Integration.Support.IntegrationMessageBuilder
  langs:
  - csharp
  - vb
  name: RemoveHeader(String)
  nameWithType: IntegrationMessageBuilder.RemoveHeader(String)
  fullName: Steeltoe.Integration.Support.IntegrationMessageBuilder.RemoveHeader(System.String)
  type: Method
  source:
    remote:
      path: src/Integration/src/IntegrationBase/Support/IntegrationMessageBuilder.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: RemoveHeader
    path: ../Steeltoe/src/Integration/src/IntegrationBase/Support/IntegrationMessageBuilder.cs
    startLine: 226
  assemblies:
  - Steeltoe.Integration.IntegrationBase
  namespace: Steeltoe.Integration.Support
  syntax:
    content: public override IMessageBuilder RemoveHeader(string headerName)
    parameters:
    - id: headerName
      type: System.String
    return:
      type: Steeltoe.Integration.Support.IMessageBuilder
    content.vb: Public Overrides Function RemoveHeader(headerName As String) As IMessageBuilder
  overridden: Steeltoe.Integration.Support.AbstractMessageBuilder.RemoveHeader(System.String)
  overload: Steeltoe.Integration.Support.IntegrationMessageBuilder.RemoveHeader*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Steeltoe.Integration.Support.IntegrationMessageBuilder.CopyHeaders(System.Collections.Generic.IDictionary{System.String,System.Object})
  commentId: M:Steeltoe.Integration.Support.IntegrationMessageBuilder.CopyHeaders(System.Collections.Generic.IDictionary{System.String,System.Object})
  id: CopyHeaders(System.Collections.Generic.IDictionary{System.String,System.Object})
  parent: Steeltoe.Integration.Support.IntegrationMessageBuilder
  langs:
  - csharp
  - vb
  name: CopyHeaders(IDictionary<String, Object>)
  nameWithType: IntegrationMessageBuilder.CopyHeaders(IDictionary<String, Object>)
  fullName: Steeltoe.Integration.Support.IntegrationMessageBuilder.CopyHeaders(System.Collections.Generic.IDictionary<System.String, System.Object>)
  type: Method
  source:
    remote:
      path: src/Integration/src/IntegrationBase/Support/IntegrationMessageBuilder.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: CopyHeaders
    path: ../Steeltoe/src/Integration/src/IntegrationBase/Support/IntegrationMessageBuilder.cs
    startLine: 236
  assemblies:
  - Steeltoe.Integration.IntegrationBase
  namespace: Steeltoe.Integration.Support
  syntax:
    content: public override IMessageBuilder CopyHeaders(IDictionary<string, object> headersToCopy)
    parameters:
    - id: headersToCopy
      type: System.Collections.Generic.IDictionary{System.String,System.Object}
    return:
      type: Steeltoe.Integration.Support.IMessageBuilder
    content.vb: Public Overrides Function CopyHeaders(headersToCopy As IDictionary(Of String, Object)) As IMessageBuilder
  overridden: Steeltoe.Integration.Support.AbstractMessageBuilder.CopyHeaders(System.Collections.Generic.IDictionary{System.String,System.Object})
  overload: Steeltoe.Integration.Support.IntegrationMessageBuilder.CopyHeaders*
  nameWithType.vb: IntegrationMessageBuilder.CopyHeaders(IDictionary(Of String, Object))
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: Steeltoe.Integration.Support.IntegrationMessageBuilder.CopyHeaders(System.Collections.Generic.IDictionary(Of System.String, System.Object))
  name.vb: CopyHeaders(IDictionary(Of String, Object))
- uid: Steeltoe.Integration.Support.IntegrationMessageBuilder.CopyHeadersIfAbsent(System.Collections.Generic.IDictionary{System.String,System.Object})
  commentId: M:Steeltoe.Integration.Support.IntegrationMessageBuilder.CopyHeadersIfAbsent(System.Collections.Generic.IDictionary{System.String,System.Object})
  id: CopyHeadersIfAbsent(System.Collections.Generic.IDictionary{System.String,System.Object})
  parent: Steeltoe.Integration.Support.IntegrationMessageBuilder
  langs:
  - csharp
  - vb
  name: CopyHeadersIfAbsent(IDictionary<String, Object>)
  nameWithType: IntegrationMessageBuilder.CopyHeadersIfAbsent(IDictionary<String, Object>)
  fullName: Steeltoe.Integration.Support.IntegrationMessageBuilder.CopyHeadersIfAbsent(System.Collections.Generic.IDictionary<System.String, System.Object>)
  type: Method
  source:
    remote:
      path: src/Integration/src/IntegrationBase/Support/IntegrationMessageBuilder.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: CopyHeadersIfAbsent
    path: ../Steeltoe/src/Integration/src/IntegrationBase/Support/IntegrationMessageBuilder.cs
    startLine: 242
  assemblies:
  - Steeltoe.Integration.IntegrationBase
  namespace: Steeltoe.Integration.Support
  syntax:
    content: public override IMessageBuilder CopyHeadersIfAbsent(IDictionary<string, object> headersToCopy)
    parameters:
    - id: headersToCopy
      type: System.Collections.Generic.IDictionary{System.String,System.Object}
    return:
      type: Steeltoe.Integration.Support.IMessageBuilder
    content.vb: Public Overrides Function CopyHeadersIfAbsent(headersToCopy As IDictionary(Of String, Object)) As IMessageBuilder
  overridden: Steeltoe.Integration.Support.AbstractMessageBuilder.CopyHeadersIfAbsent(System.Collections.Generic.IDictionary{System.String,System.Object})
  overload: Steeltoe.Integration.Support.IntegrationMessageBuilder.CopyHeadersIfAbsent*
  nameWithType.vb: IntegrationMessageBuilder.CopyHeadersIfAbsent(IDictionary(Of String, Object))
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: Steeltoe.Integration.Support.IntegrationMessageBuilder.CopyHeadersIfAbsent(System.Collections.Generic.IDictionary(Of System.String, System.Object))
  name.vb: CopyHeadersIfAbsent(IDictionary(Of String, Object))
- uid: Steeltoe.Integration.Support.IntegrationMessageBuilder.SequenceDetails
  commentId: P:Steeltoe.Integration.Support.IntegrationMessageBuilder.SequenceDetails
  id: SequenceDetails
  parent: Steeltoe.Integration.Support.IntegrationMessageBuilder
  langs:
  - csharp
  - vb
  name: SequenceDetails
  nameWithType: IntegrationMessageBuilder.SequenceDetails
  fullName: Steeltoe.Integration.Support.IntegrationMessageBuilder.SequenceDetails
  type: Property
  source:
    remote:
      path: src/Integration/src/IntegrationBase/Support/IntegrationMessageBuilder.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: SequenceDetails
    path: ../Steeltoe/src/Integration/src/IntegrationBase/Support/IntegrationMessageBuilder.cs
    startLine: 259
  assemblies:
  - Steeltoe.Integration.IntegrationBase
  namespace: Steeltoe.Integration.Support
  syntax:
    content: protected override List<List<object>> SequenceDetails { get; }
    parameters: []
    return:
      type: System.Collections.Generic.List{System.Collections.Generic.List{System.Object}}
    content.vb: Protected Overrides ReadOnly Property SequenceDetails As List(Of List(Of Object))
  overridden: Steeltoe.Integration.Support.AbstractMessageBuilder.SequenceDetails
  overload: Steeltoe.Integration.Support.IntegrationMessageBuilder.SequenceDetails*
  modifiers.csharp:
  - protected
  - override
  - get
  modifiers.vb:
  - Protected
  - Overrides
  - ReadOnly
- uid: Steeltoe.Integration.Support.IntegrationMessageBuilder.CorrelationId
  commentId: P:Steeltoe.Integration.Support.IntegrationMessageBuilder.CorrelationId
  id: CorrelationId
  parent: Steeltoe.Integration.Support.IntegrationMessageBuilder
  langs:
  - csharp
  - vb
  name: CorrelationId
  nameWithType: IntegrationMessageBuilder.CorrelationId
  fullName: Steeltoe.Integration.Support.IntegrationMessageBuilder.CorrelationId
  type: Property
  source:
    remote:
      path: src/Integration/src/IntegrationBase/Support/IntegrationMessageBuilder.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: CorrelationId
    path: ../Steeltoe/src/Integration/src/IntegrationBase/Support/IntegrationMessageBuilder.cs
    startLine: 264
  assemblies:
  - Steeltoe.Integration.IntegrationBase
  namespace: Steeltoe.Integration.Support
  syntax:
    content: protected override object CorrelationId { get; }
    parameters: []
    return:
      type: System.Object
    content.vb: Protected Overrides ReadOnly Property CorrelationId As Object
  overridden: Steeltoe.Integration.Support.AbstractMessageBuilder.CorrelationId
  overload: Steeltoe.Integration.Support.IntegrationMessageBuilder.CorrelationId*
  modifiers.csharp:
  - protected
  - override
  - get
  modifiers.vb:
  - Protected
  - Overrides
  - ReadOnly
- uid: Steeltoe.Integration.Support.IntegrationMessageBuilder.SequenceNumber
  commentId: P:Steeltoe.Integration.Support.IntegrationMessageBuilder.SequenceNumber
  id: SequenceNumber
  parent: Steeltoe.Integration.Support.IntegrationMessageBuilder
  langs:
  - csharp
  - vb
  name: SequenceNumber
  nameWithType: IntegrationMessageBuilder.SequenceNumber
  fullName: Steeltoe.Integration.Support.IntegrationMessageBuilder.SequenceNumber
  type: Property
  source:
    remote:
      path: src/Integration/src/IntegrationBase/Support/IntegrationMessageBuilder.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: SequenceNumber
    path: ../Steeltoe/src/Integration/src/IntegrationBase/Support/IntegrationMessageBuilder.cs
    startLine: 269
  assemblies:
  - Steeltoe.Integration.IntegrationBase
  namespace: Steeltoe.Integration.Support
  syntax:
    content: protected override object SequenceNumber { get; }
    parameters: []
    return:
      type: System.Object
    content.vb: Protected Overrides ReadOnly Property SequenceNumber As Object
  overridden: Steeltoe.Integration.Support.AbstractMessageBuilder.SequenceNumber
  overload: Steeltoe.Integration.Support.IntegrationMessageBuilder.SequenceNumber*
  modifiers.csharp:
  - protected
  - override
  - get
  modifiers.vb:
  - Protected
  - Overrides
  - ReadOnly
- uid: Steeltoe.Integration.Support.IntegrationMessageBuilder.SequenceSize
  commentId: P:Steeltoe.Integration.Support.IntegrationMessageBuilder.SequenceSize
  id: SequenceSize
  parent: Steeltoe.Integration.Support.IntegrationMessageBuilder
  langs:
  - csharp
  - vb
  name: SequenceSize
  nameWithType: IntegrationMessageBuilder.SequenceSize
  fullName: Steeltoe.Integration.Support.IntegrationMessageBuilder.SequenceSize
  type: Property
  source:
    remote:
      path: src/Integration/src/IntegrationBase/Support/IntegrationMessageBuilder.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: SequenceSize
    path: ../Steeltoe/src/Integration/src/IntegrationBase/Support/IntegrationMessageBuilder.cs
    startLine: 274
  assemblies:
  - Steeltoe.Integration.IntegrationBase
  namespace: Steeltoe.Integration.Support
  syntax:
    content: protected override object SequenceSize { get; }
    parameters: []
    return:
      type: System.Object
    content.vb: Protected Overrides ReadOnly Property SequenceSize As Object
  overridden: Steeltoe.Integration.Support.AbstractMessageBuilder.SequenceSize
  overload: Steeltoe.Integration.Support.IntegrationMessageBuilder.SequenceSize*
  modifiers.csharp:
  - protected
  - override
  - get
  modifiers.vb:
  - Protected
  - Overrides
  - ReadOnly
- uid: Steeltoe.Integration.Support.IntegrationMessageBuilder.ReadOnlyHeaders(System.Collections.Generic.IList{System.String})
  commentId: M:Steeltoe.Integration.Support.IntegrationMessageBuilder.ReadOnlyHeaders(System.Collections.Generic.IList{System.String})
  id: ReadOnlyHeaders(System.Collections.Generic.IList{System.String})
  parent: Steeltoe.Integration.Support.IntegrationMessageBuilder
  langs:
  - csharp
  - vb
  name: ReadOnlyHeaders(IList<String>)
  nameWithType: IntegrationMessageBuilder.ReadOnlyHeaders(IList<String>)
  fullName: Steeltoe.Integration.Support.IntegrationMessageBuilder.ReadOnlyHeaders(System.Collections.Generic.IList<System.String>)
  type: Method
  source:
    remote:
      path: src/Integration/src/IntegrationBase/Support/IntegrationMessageBuilder.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: ReadOnlyHeaders
    path: ../Steeltoe/src/Integration/src/IntegrationBase/Support/IntegrationMessageBuilder.cs
    startLine: 279
  assemblies:
  - Steeltoe.Integration.IntegrationBase
  namespace: Steeltoe.Integration.Support
  syntax:
    content: public IMessageBuilder ReadOnlyHeaders(IList<string> readOnlyHeaders)
    parameters:
    - id: readOnlyHeaders
      type: System.Collections.Generic.IList{System.String}
    return:
      type: Steeltoe.Integration.Support.IMessageBuilder
    content.vb: Public Function ReadOnlyHeaders(readOnlyHeaders As IList(Of String)) As IMessageBuilder
  overload: Steeltoe.Integration.Support.IntegrationMessageBuilder.ReadOnlyHeaders*
  nameWithType.vb: IntegrationMessageBuilder.ReadOnlyHeaders(IList(Of String))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Steeltoe.Integration.Support.IntegrationMessageBuilder.ReadOnlyHeaders(System.Collections.Generic.IList(Of System.String))
  name.vb: ReadOnlyHeaders(IList(Of String))
- uid: Steeltoe.Integration.Support.IntegrationMessageBuilder.Build
  commentId: M:Steeltoe.Integration.Support.IntegrationMessageBuilder.Build
  id: Build
  parent: Steeltoe.Integration.Support.IntegrationMessageBuilder
  langs:
  - csharp
  - vb
  name: Build()
  nameWithType: IntegrationMessageBuilder.Build()
  fullName: Steeltoe.Integration.Support.IntegrationMessageBuilder.Build()
  type: Method
  source:
    remote:
      path: src/Integration/src/IntegrationBase/Support/IntegrationMessageBuilder.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Build
    path: ../Steeltoe/src/Integration/src/IntegrationBase/Support/IntegrationMessageBuilder.cs
    startLine: 286
  assemblies:
  - Steeltoe.Integration.IntegrationBase
  namespace: Steeltoe.Integration.Support
  syntax:
    content: public override IMessage Build()
    return:
      type: Steeltoe.Messaging.IMessage
    content.vb: Public Overrides Function Build As IMessage
  overridden: Steeltoe.Integration.Support.AbstractMessageBuilder.Build
  overload: Steeltoe.Integration.Support.IntegrationMessageBuilder.Build*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: Steeltoe.Integration.Support
  commentId: N:Steeltoe.Integration.Support
  name: Steeltoe.Integration.Support
  nameWithType: Steeltoe.Integration.Support
  fullName: Steeltoe.Integration.Support
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Steeltoe.Integration.Support.AbstractMessageBuilder
  commentId: T:Steeltoe.Integration.Support.AbstractMessageBuilder
  parent: Steeltoe.Integration.Support
  name: AbstractMessageBuilder
  nameWithType: AbstractMessageBuilder
  fullName: Steeltoe.Integration.Support.AbstractMessageBuilder
- uid: Steeltoe.Integration.Support.IMessageBuilder
  commentId: T:Steeltoe.Integration.Support.IMessageBuilder
  parent: Steeltoe.Integration.Support
  name: IMessageBuilder
  nameWithType: IMessageBuilder
  fullName: Steeltoe.Integration.Support.IMessageBuilder
- uid: Steeltoe.Integration.Support.AbstractMessageBuilder._payload
  commentId: F:Steeltoe.Integration.Support.AbstractMessageBuilder._payload
  parent: Steeltoe.Integration.Support.AbstractMessageBuilder
  name: _payload
  nameWithType: AbstractMessageBuilder._payload
  fullName: Steeltoe.Integration.Support.AbstractMessageBuilder._payload
- uid: Steeltoe.Integration.Support.AbstractMessageBuilder._originalMessage
  commentId: F:Steeltoe.Integration.Support.AbstractMessageBuilder._originalMessage
  parent: Steeltoe.Integration.Support.AbstractMessageBuilder
  name: _originalMessage
  nameWithType: AbstractMessageBuilder._originalMessage
  fullName: Steeltoe.Integration.Support.AbstractMessageBuilder._originalMessage
- uid: Steeltoe.Integration.Support.AbstractMessageBuilder._headerAccessor
  commentId: F:Steeltoe.Integration.Support.AbstractMessageBuilder._headerAccessor
  parent: Steeltoe.Integration.Support.AbstractMessageBuilder
  name: _headerAccessor
  nameWithType: AbstractMessageBuilder._headerAccessor
  fullName: Steeltoe.Integration.Support.AbstractMessageBuilder._headerAccessor
- uid: Steeltoe.Integration.Support.AbstractMessageBuilder._modified
  commentId: F:Steeltoe.Integration.Support.AbstractMessageBuilder._modified
  parent: Steeltoe.Integration.Support.AbstractMessageBuilder
  name: _modified
  nameWithType: AbstractMessageBuilder._modified
  fullName: Steeltoe.Integration.Support.AbstractMessageBuilder._modified
- uid: Steeltoe.Integration.Support.AbstractMessageBuilder._readOnlyHeaders
  commentId: F:Steeltoe.Integration.Support.AbstractMessageBuilder._readOnlyHeaders
  parent: Steeltoe.Integration.Support.AbstractMessageBuilder
  name: _readOnlyHeaders
  nameWithType: AbstractMessageBuilder._readOnlyHeaders
  fullName: Steeltoe.Integration.Support.AbstractMessageBuilder._readOnlyHeaders
- uid: Steeltoe.Integration.Support.AbstractMessageBuilder.SetExpirationDate(System.Int64)
  commentId: M:Steeltoe.Integration.Support.AbstractMessageBuilder.SetExpirationDate(System.Int64)
  parent: Steeltoe.Integration.Support.AbstractMessageBuilder
  isExternal: true
  name: SetExpirationDate(Int64)
  nameWithType: AbstractMessageBuilder.SetExpirationDate(Int64)
  fullName: Steeltoe.Integration.Support.AbstractMessageBuilder.SetExpirationDate(System.Int64)
  spec.csharp:
  - uid: Steeltoe.Integration.Support.AbstractMessageBuilder.SetExpirationDate(System.Int64)
    name: SetExpirationDate
    nameWithType: AbstractMessageBuilder.SetExpirationDate
    fullName: Steeltoe.Integration.Support.AbstractMessageBuilder.SetExpirationDate
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Integration.Support.AbstractMessageBuilder.SetExpirationDate(System.Int64)
    name: SetExpirationDate
    nameWithType: AbstractMessageBuilder.SetExpirationDate
    fullName: Steeltoe.Integration.Support.AbstractMessageBuilder.SetExpirationDate
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Integration.Support.AbstractMessageBuilder.SetExpirationDate(System.Nullable{System.DateTime})
  commentId: M:Steeltoe.Integration.Support.AbstractMessageBuilder.SetExpirationDate(System.Nullable{System.DateTime})
  parent: Steeltoe.Integration.Support.AbstractMessageBuilder
  isExternal: true
  name: SetExpirationDate(Nullable<DateTime>)
  nameWithType: AbstractMessageBuilder.SetExpirationDate(Nullable<DateTime>)
  fullName: Steeltoe.Integration.Support.AbstractMessageBuilder.SetExpirationDate(System.Nullable<System.DateTime>)
  nameWithType.vb: AbstractMessageBuilder.SetExpirationDate(Nullable(Of DateTime))
  fullName.vb: Steeltoe.Integration.Support.AbstractMessageBuilder.SetExpirationDate(System.Nullable(Of System.DateTime))
  name.vb: SetExpirationDate(Nullable(Of DateTime))
  spec.csharp:
  - uid: Steeltoe.Integration.Support.AbstractMessageBuilder.SetExpirationDate(System.Nullable{System.DateTime})
    name: SetExpirationDate
    nameWithType: AbstractMessageBuilder.SetExpirationDate
    fullName: Steeltoe.Integration.Support.AbstractMessageBuilder.SetExpirationDate
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Integration.Support.AbstractMessageBuilder.SetExpirationDate(System.Nullable{System.DateTime})
    name: SetExpirationDate
    nameWithType: AbstractMessageBuilder.SetExpirationDate
    fullName: Steeltoe.Integration.Support.AbstractMessageBuilder.SetExpirationDate
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Integration.Support.AbstractMessageBuilder.SetCorrelationId(System.Object)
  commentId: M:Steeltoe.Integration.Support.AbstractMessageBuilder.SetCorrelationId(System.Object)
  parent: Steeltoe.Integration.Support.AbstractMessageBuilder
  isExternal: true
  name: SetCorrelationId(Object)
  nameWithType: AbstractMessageBuilder.SetCorrelationId(Object)
  fullName: Steeltoe.Integration.Support.AbstractMessageBuilder.SetCorrelationId(System.Object)
  spec.csharp:
  - uid: Steeltoe.Integration.Support.AbstractMessageBuilder.SetCorrelationId(System.Object)
    name: SetCorrelationId
    nameWithType: AbstractMessageBuilder.SetCorrelationId
    fullName: Steeltoe.Integration.Support.AbstractMessageBuilder.SetCorrelationId
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Integration.Support.AbstractMessageBuilder.SetCorrelationId(System.Object)
    name: SetCorrelationId
    nameWithType: AbstractMessageBuilder.SetCorrelationId
    fullName: Steeltoe.Integration.Support.AbstractMessageBuilder.SetCorrelationId
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Integration.Support.AbstractMessageBuilder.PushSequenceDetails(System.Object,System.Int32,System.Int32)
  commentId: M:Steeltoe.Integration.Support.AbstractMessageBuilder.PushSequenceDetails(System.Object,System.Int32,System.Int32)
  parent: Steeltoe.Integration.Support.AbstractMessageBuilder
  isExternal: true
  name: PushSequenceDetails(Object, Int32, Int32)
  nameWithType: AbstractMessageBuilder.PushSequenceDetails(Object, Int32, Int32)
  fullName: Steeltoe.Integration.Support.AbstractMessageBuilder.PushSequenceDetails(System.Object, System.Int32, System.Int32)
  spec.csharp:
  - uid: Steeltoe.Integration.Support.AbstractMessageBuilder.PushSequenceDetails(System.Object,System.Int32,System.Int32)
    name: PushSequenceDetails
    nameWithType: AbstractMessageBuilder.PushSequenceDetails
    fullName: Steeltoe.Integration.Support.AbstractMessageBuilder.PushSequenceDetails
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Integration.Support.AbstractMessageBuilder.PushSequenceDetails(System.Object,System.Int32,System.Int32)
    name: PushSequenceDetails
    nameWithType: AbstractMessageBuilder.PushSequenceDetails
    fullName: Steeltoe.Integration.Support.AbstractMessageBuilder.PushSequenceDetails
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Integration.Support.AbstractMessageBuilder.PopSequenceDetails
  commentId: M:Steeltoe.Integration.Support.AbstractMessageBuilder.PopSequenceDetails
  parent: Steeltoe.Integration.Support.AbstractMessageBuilder
  name: PopSequenceDetails()
  nameWithType: AbstractMessageBuilder.PopSequenceDetails()
  fullName: Steeltoe.Integration.Support.AbstractMessageBuilder.PopSequenceDetails()
  spec.csharp:
  - uid: Steeltoe.Integration.Support.AbstractMessageBuilder.PopSequenceDetails
    name: PopSequenceDetails
    nameWithType: AbstractMessageBuilder.PopSequenceDetails
    fullName: Steeltoe.Integration.Support.AbstractMessageBuilder.PopSequenceDetails
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Integration.Support.AbstractMessageBuilder.PopSequenceDetails
    name: PopSequenceDetails
    nameWithType: AbstractMessageBuilder.PopSequenceDetails
    fullName: Steeltoe.Integration.Support.AbstractMessageBuilder.PopSequenceDetails
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Integration.Support.AbstractMessageBuilder.SetReplyChannel(Steeltoe.Messaging.IMessageChannel)
  commentId: M:Steeltoe.Integration.Support.AbstractMessageBuilder.SetReplyChannel(Steeltoe.Messaging.IMessageChannel)
  parent: Steeltoe.Integration.Support.AbstractMessageBuilder
  name: SetReplyChannel(IMessageChannel)
  nameWithType: AbstractMessageBuilder.SetReplyChannel(IMessageChannel)
  fullName: Steeltoe.Integration.Support.AbstractMessageBuilder.SetReplyChannel(Steeltoe.Messaging.IMessageChannel)
  spec.csharp:
  - uid: Steeltoe.Integration.Support.AbstractMessageBuilder.SetReplyChannel(Steeltoe.Messaging.IMessageChannel)
    name: SetReplyChannel
    nameWithType: AbstractMessageBuilder.SetReplyChannel
    fullName: Steeltoe.Integration.Support.AbstractMessageBuilder.SetReplyChannel
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.IMessageChannel
    name: IMessageChannel
    nameWithType: IMessageChannel
    fullName: Steeltoe.Messaging.IMessageChannel
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Integration.Support.AbstractMessageBuilder.SetReplyChannel(Steeltoe.Messaging.IMessageChannel)
    name: SetReplyChannel
    nameWithType: AbstractMessageBuilder.SetReplyChannel
    fullName: Steeltoe.Integration.Support.AbstractMessageBuilder.SetReplyChannel
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.IMessageChannel
    name: IMessageChannel
    nameWithType: IMessageChannel
    fullName: Steeltoe.Messaging.IMessageChannel
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Integration.Support.AbstractMessageBuilder.SetReplyChannelName(System.String)
  commentId: M:Steeltoe.Integration.Support.AbstractMessageBuilder.SetReplyChannelName(System.String)
  parent: Steeltoe.Integration.Support.AbstractMessageBuilder
  isExternal: true
  name: SetReplyChannelName(String)
  nameWithType: AbstractMessageBuilder.SetReplyChannelName(String)
  fullName: Steeltoe.Integration.Support.AbstractMessageBuilder.SetReplyChannelName(System.String)
  spec.csharp:
  - uid: Steeltoe.Integration.Support.AbstractMessageBuilder.SetReplyChannelName(System.String)
    name: SetReplyChannelName
    nameWithType: AbstractMessageBuilder.SetReplyChannelName
    fullName: Steeltoe.Integration.Support.AbstractMessageBuilder.SetReplyChannelName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Integration.Support.AbstractMessageBuilder.SetReplyChannelName(System.String)
    name: SetReplyChannelName
    nameWithType: AbstractMessageBuilder.SetReplyChannelName
    fullName: Steeltoe.Integration.Support.AbstractMessageBuilder.SetReplyChannelName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Integration.Support.AbstractMessageBuilder.SetErrorChannel(Steeltoe.Messaging.IMessageChannel)
  commentId: M:Steeltoe.Integration.Support.AbstractMessageBuilder.SetErrorChannel(Steeltoe.Messaging.IMessageChannel)
  parent: Steeltoe.Integration.Support.AbstractMessageBuilder
  name: SetErrorChannel(IMessageChannel)
  nameWithType: AbstractMessageBuilder.SetErrorChannel(IMessageChannel)
  fullName: Steeltoe.Integration.Support.AbstractMessageBuilder.SetErrorChannel(Steeltoe.Messaging.IMessageChannel)
  spec.csharp:
  - uid: Steeltoe.Integration.Support.AbstractMessageBuilder.SetErrorChannel(Steeltoe.Messaging.IMessageChannel)
    name: SetErrorChannel
    nameWithType: AbstractMessageBuilder.SetErrorChannel
    fullName: Steeltoe.Integration.Support.AbstractMessageBuilder.SetErrorChannel
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.IMessageChannel
    name: IMessageChannel
    nameWithType: IMessageChannel
    fullName: Steeltoe.Messaging.IMessageChannel
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Integration.Support.AbstractMessageBuilder.SetErrorChannel(Steeltoe.Messaging.IMessageChannel)
    name: SetErrorChannel
    nameWithType: AbstractMessageBuilder.SetErrorChannel
    fullName: Steeltoe.Integration.Support.AbstractMessageBuilder.SetErrorChannel
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.IMessageChannel
    name: IMessageChannel
    nameWithType: IMessageChannel
    fullName: Steeltoe.Messaging.IMessageChannel
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Integration.Support.AbstractMessageBuilder.SetErrorChannelName(System.String)
  commentId: M:Steeltoe.Integration.Support.AbstractMessageBuilder.SetErrorChannelName(System.String)
  parent: Steeltoe.Integration.Support.AbstractMessageBuilder
  isExternal: true
  name: SetErrorChannelName(String)
  nameWithType: AbstractMessageBuilder.SetErrorChannelName(String)
  fullName: Steeltoe.Integration.Support.AbstractMessageBuilder.SetErrorChannelName(System.String)
  spec.csharp:
  - uid: Steeltoe.Integration.Support.AbstractMessageBuilder.SetErrorChannelName(System.String)
    name: SetErrorChannelName
    nameWithType: AbstractMessageBuilder.SetErrorChannelName
    fullName: Steeltoe.Integration.Support.AbstractMessageBuilder.SetErrorChannelName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Integration.Support.AbstractMessageBuilder.SetErrorChannelName(System.String)
    name: SetErrorChannelName
    nameWithType: AbstractMessageBuilder.SetErrorChannelName
    fullName: Steeltoe.Integration.Support.AbstractMessageBuilder.SetErrorChannelName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Integration.Support.AbstractMessageBuilder.SetSequenceNumber(System.Int32)
  commentId: M:Steeltoe.Integration.Support.AbstractMessageBuilder.SetSequenceNumber(System.Int32)
  parent: Steeltoe.Integration.Support.AbstractMessageBuilder
  isExternal: true
  name: SetSequenceNumber(Int32)
  nameWithType: AbstractMessageBuilder.SetSequenceNumber(Int32)
  fullName: Steeltoe.Integration.Support.AbstractMessageBuilder.SetSequenceNumber(System.Int32)
  spec.csharp:
  - uid: Steeltoe.Integration.Support.AbstractMessageBuilder.SetSequenceNumber(System.Int32)
    name: SetSequenceNumber
    nameWithType: AbstractMessageBuilder.SetSequenceNumber
    fullName: Steeltoe.Integration.Support.AbstractMessageBuilder.SetSequenceNumber
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Integration.Support.AbstractMessageBuilder.SetSequenceNumber(System.Int32)
    name: SetSequenceNumber
    nameWithType: AbstractMessageBuilder.SetSequenceNumber
    fullName: Steeltoe.Integration.Support.AbstractMessageBuilder.SetSequenceNumber
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Integration.Support.AbstractMessageBuilder.SetSequenceSize(System.Int32)
  commentId: M:Steeltoe.Integration.Support.AbstractMessageBuilder.SetSequenceSize(System.Int32)
  parent: Steeltoe.Integration.Support.AbstractMessageBuilder
  isExternal: true
  name: SetSequenceSize(Int32)
  nameWithType: AbstractMessageBuilder.SetSequenceSize(Int32)
  fullName: Steeltoe.Integration.Support.AbstractMessageBuilder.SetSequenceSize(System.Int32)
  spec.csharp:
  - uid: Steeltoe.Integration.Support.AbstractMessageBuilder.SetSequenceSize(System.Int32)
    name: SetSequenceSize
    nameWithType: AbstractMessageBuilder.SetSequenceSize
    fullName: Steeltoe.Integration.Support.AbstractMessageBuilder.SetSequenceSize
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Integration.Support.AbstractMessageBuilder.SetSequenceSize(System.Int32)
    name: SetSequenceSize
    nameWithType: AbstractMessageBuilder.SetSequenceSize
    fullName: Steeltoe.Integration.Support.AbstractMessageBuilder.SetSequenceSize
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Integration.Support.AbstractMessageBuilder.SetPriority(System.Int32)
  commentId: M:Steeltoe.Integration.Support.AbstractMessageBuilder.SetPriority(System.Int32)
  parent: Steeltoe.Integration.Support.AbstractMessageBuilder
  isExternal: true
  name: SetPriority(Int32)
  nameWithType: AbstractMessageBuilder.SetPriority(Int32)
  fullName: Steeltoe.Integration.Support.AbstractMessageBuilder.SetPriority(System.Int32)
  spec.csharp:
  - uid: Steeltoe.Integration.Support.AbstractMessageBuilder.SetPriority(System.Int32)
    name: SetPriority
    nameWithType: AbstractMessageBuilder.SetPriority
    fullName: Steeltoe.Integration.Support.AbstractMessageBuilder.SetPriority
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Integration.Support.AbstractMessageBuilder.SetPriority(System.Int32)
    name: SetPriority
    nameWithType: AbstractMessageBuilder.SetPriority
    fullName: Steeltoe.Integration.Support.AbstractMessageBuilder.SetPriority
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Integration.Support.AbstractMessageBuilder.FilterAndCopyHeadersIfAbsent(System.Collections.Generic.IDictionary{System.String,System.Object},System.String[])
  commentId: M:Steeltoe.Integration.Support.AbstractMessageBuilder.FilterAndCopyHeadersIfAbsent(System.Collections.Generic.IDictionary{System.String,System.Object},System.String[])
  parent: Steeltoe.Integration.Support.AbstractMessageBuilder
  isExternal: true
  name: FilterAndCopyHeadersIfAbsent(IDictionary<String, Object>, String[])
  nameWithType: AbstractMessageBuilder.FilterAndCopyHeadersIfAbsent(IDictionary<String, Object>, String[])
  fullName: Steeltoe.Integration.Support.AbstractMessageBuilder.FilterAndCopyHeadersIfAbsent(System.Collections.Generic.IDictionary<System.String, System.Object>, System.String[])
  nameWithType.vb: AbstractMessageBuilder.FilterAndCopyHeadersIfAbsent(IDictionary(Of String, Object), String())
  fullName.vb: Steeltoe.Integration.Support.AbstractMessageBuilder.FilterAndCopyHeadersIfAbsent(System.Collections.Generic.IDictionary(Of System.String, System.Object), System.String())
  name.vb: FilterAndCopyHeadersIfAbsent(IDictionary(Of String, Object), String())
  spec.csharp:
  - uid: Steeltoe.Integration.Support.AbstractMessageBuilder.FilterAndCopyHeadersIfAbsent(System.Collections.Generic.IDictionary{System.String,System.Object},System.String[])
    name: FilterAndCopyHeadersIfAbsent
    nameWithType: AbstractMessageBuilder.FilterAndCopyHeadersIfAbsent
    fullName: Steeltoe.Integration.Support.AbstractMessageBuilder.FilterAndCopyHeadersIfAbsent
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Integration.Support.AbstractMessageBuilder.FilterAndCopyHeadersIfAbsent(System.Collections.Generic.IDictionary{System.String,System.Object},System.String[])
    name: FilterAndCopyHeadersIfAbsent
    nameWithType: AbstractMessageBuilder.FilterAndCopyHeadersIfAbsent
    fullName: Steeltoe.Integration.Support.AbstractMessageBuilder.FilterAndCopyHeadersIfAbsent
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Integration.Support.AbstractMessageBuilder.ContainsReadOnly(Steeltoe.Messaging.IMessageHeaders)
  commentId: M:Steeltoe.Integration.Support.AbstractMessageBuilder.ContainsReadOnly(Steeltoe.Messaging.IMessageHeaders)
  parent: Steeltoe.Integration.Support.AbstractMessageBuilder
  name: ContainsReadOnly(IMessageHeaders)
  nameWithType: AbstractMessageBuilder.ContainsReadOnly(IMessageHeaders)
  fullName: Steeltoe.Integration.Support.AbstractMessageBuilder.ContainsReadOnly(Steeltoe.Messaging.IMessageHeaders)
  spec.csharp:
  - uid: Steeltoe.Integration.Support.AbstractMessageBuilder.ContainsReadOnly(Steeltoe.Messaging.IMessageHeaders)
    name: ContainsReadOnly
    nameWithType: AbstractMessageBuilder.ContainsReadOnly
    fullName: Steeltoe.Integration.Support.AbstractMessageBuilder.ContainsReadOnly
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.IMessageHeaders
    name: IMessageHeaders
    nameWithType: IMessageHeaders
    fullName: Steeltoe.Messaging.IMessageHeaders
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Integration.Support.AbstractMessageBuilder.ContainsReadOnly(Steeltoe.Messaging.IMessageHeaders)
    name: ContainsReadOnly
    nameWithType: AbstractMessageBuilder.ContainsReadOnly
    fullName: Steeltoe.Integration.Support.AbstractMessageBuilder.ContainsReadOnly
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.IMessageHeaders
    name: IMessageHeaders
    nameWithType: IMessageHeaders
    fullName: Steeltoe.Messaging.IMessageHeaders
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Steeltoe.Integration.Support.AbstractMessageBuilder.Payload
  commentId: P:Steeltoe.Integration.Support.AbstractMessageBuilder.Payload
  parent: Steeltoe.Integration.Support.AbstractMessageBuilder
  name: Payload
  nameWithType: AbstractMessageBuilder.Payload
  fullName: Steeltoe.Integration.Support.AbstractMessageBuilder.Payload
- uid: Steeltoe.Integration.Support.IntegrationMessageBuilder.Payload*
  commentId: Overload:Steeltoe.Integration.Support.IntegrationMessageBuilder.Payload
  name: Payload
  nameWithType: IntegrationMessageBuilder.Payload
  fullName: Steeltoe.Integration.Support.IntegrationMessageBuilder.Payload
- uid: Steeltoe.Integration.Support.AbstractMessageBuilder.Headers
  commentId: P:Steeltoe.Integration.Support.AbstractMessageBuilder.Headers
  parent: Steeltoe.Integration.Support.AbstractMessageBuilder
  name: Headers
  nameWithType: AbstractMessageBuilder.Headers
  fullName: Steeltoe.Integration.Support.AbstractMessageBuilder.Headers
- uid: Steeltoe.Integration.Support.IntegrationMessageBuilder.Headers*
  commentId: Overload:Steeltoe.Integration.Support.IntegrationMessageBuilder.Headers
  name: Headers
  nameWithType: IntegrationMessageBuilder.Headers
  fullName: Steeltoe.Integration.Support.IntegrationMessageBuilder.Headers
- uid: System.Collections.Generic.IDictionary{System.String,System.Object}
  commentId: T:System.Collections.Generic.IDictionary{System.String,System.Object}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IDictionary`2
  name: IDictionary<String, Object>
  nameWithType: IDictionary<String, Object>
  fullName: System.Collections.Generic.IDictionary<System.String, System.Object>
  nameWithType.vb: IDictionary(Of String, Object)
  fullName.vb: System.Collections.Generic.IDictionary(Of System.String, System.Object)
  name.vb: IDictionary(Of String, Object)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IDictionary`2
  commentId: T:System.Collections.Generic.IDictionary`2
  isExternal: true
  name: IDictionary<TKey, TValue>
  nameWithType: IDictionary<TKey, TValue>
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>
  nameWithType.vb: IDictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.IDictionary(Of TKey, TValue)
  name.vb: IDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Steeltoe.Integration.Support.IntegrationMessageBuilder.FromMessage*
  commentId: Overload:Steeltoe.Integration.Support.IntegrationMessageBuilder.FromMessage
  name: FromMessage
  nameWithType: IntegrationMessageBuilder.FromMessage
  fullName: Steeltoe.Integration.Support.IntegrationMessageBuilder.FromMessage
- uid: Steeltoe.Messaging.IMessage
  commentId: T:Steeltoe.Messaging.IMessage
  parent: Steeltoe.Messaging
  name: IMessage
  nameWithType: IMessage
  fullName: Steeltoe.Messaging.IMessage
- uid: Steeltoe.Integration.Support.IntegrationMessageBuilder
  commentId: T:Steeltoe.Integration.Support.IntegrationMessageBuilder
  parent: Steeltoe.Integration.Support
  name: IntegrationMessageBuilder
  nameWithType: IntegrationMessageBuilder
  fullName: Steeltoe.Integration.Support.IntegrationMessageBuilder
- uid: Steeltoe.Messaging
  commentId: N:Steeltoe.Messaging
  name: Steeltoe.Messaging
  nameWithType: Steeltoe.Messaging
  fullName: Steeltoe.Messaging
- uid: Steeltoe.Integration.Support.IntegrationMessageBuilder.WithPayload*
  commentId: Overload:Steeltoe.Integration.Support.IntegrationMessageBuilder.WithPayload
  name: WithPayload
  nameWithType: IntegrationMessageBuilder.WithPayload
  fullName: Steeltoe.Integration.Support.IntegrationMessageBuilder.WithPayload
- uid: Steeltoe.Integration.Support.AbstractMessageBuilder.SetHeader(System.String,System.Object)
  commentId: M:Steeltoe.Integration.Support.AbstractMessageBuilder.SetHeader(System.String,System.Object)
  parent: Steeltoe.Integration.Support.AbstractMessageBuilder
  isExternal: true
  name: SetHeader(String, Object)
  nameWithType: AbstractMessageBuilder.SetHeader(String, Object)
  fullName: Steeltoe.Integration.Support.AbstractMessageBuilder.SetHeader(System.String, System.Object)
  spec.csharp:
  - uid: Steeltoe.Integration.Support.AbstractMessageBuilder.SetHeader(System.String,System.Object)
    name: SetHeader
    nameWithType: AbstractMessageBuilder.SetHeader
    fullName: Steeltoe.Integration.Support.AbstractMessageBuilder.SetHeader
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Integration.Support.AbstractMessageBuilder.SetHeader(System.String,System.Object)
    name: SetHeader
    nameWithType: AbstractMessageBuilder.SetHeader
    fullName: Steeltoe.Integration.Support.AbstractMessageBuilder.SetHeader
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Integration.Support.IntegrationMessageBuilder.SetHeader*
  commentId: Overload:Steeltoe.Integration.Support.IntegrationMessageBuilder.SetHeader
  name: SetHeader
  nameWithType: IntegrationMessageBuilder.SetHeader
  fullName: Steeltoe.Integration.Support.IntegrationMessageBuilder.SetHeader
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Steeltoe.Integration.Support.AbstractMessageBuilder.SetHeaderIfAbsent(System.String,System.Object)
  commentId: M:Steeltoe.Integration.Support.AbstractMessageBuilder.SetHeaderIfAbsent(System.String,System.Object)
  parent: Steeltoe.Integration.Support.AbstractMessageBuilder
  isExternal: true
  name: SetHeaderIfAbsent(String, Object)
  nameWithType: AbstractMessageBuilder.SetHeaderIfAbsent(String, Object)
  fullName: Steeltoe.Integration.Support.AbstractMessageBuilder.SetHeaderIfAbsent(System.String, System.Object)
  spec.csharp:
  - uid: Steeltoe.Integration.Support.AbstractMessageBuilder.SetHeaderIfAbsent(System.String,System.Object)
    name: SetHeaderIfAbsent
    nameWithType: AbstractMessageBuilder.SetHeaderIfAbsent
    fullName: Steeltoe.Integration.Support.AbstractMessageBuilder.SetHeaderIfAbsent
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Integration.Support.AbstractMessageBuilder.SetHeaderIfAbsent(System.String,System.Object)
    name: SetHeaderIfAbsent
    nameWithType: AbstractMessageBuilder.SetHeaderIfAbsent
    fullName: Steeltoe.Integration.Support.AbstractMessageBuilder.SetHeaderIfAbsent
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Integration.Support.IntegrationMessageBuilder.SetHeaderIfAbsent*
  commentId: Overload:Steeltoe.Integration.Support.IntegrationMessageBuilder.SetHeaderIfAbsent
  name: SetHeaderIfAbsent
  nameWithType: IntegrationMessageBuilder.SetHeaderIfAbsent
  fullName: Steeltoe.Integration.Support.IntegrationMessageBuilder.SetHeaderIfAbsent
- uid: Steeltoe.Integration.Support.AbstractMessageBuilder.RemoveHeaders(System.String[])
  commentId: M:Steeltoe.Integration.Support.AbstractMessageBuilder.RemoveHeaders(System.String[])
  parent: Steeltoe.Integration.Support.AbstractMessageBuilder
  isExternal: true
  name: RemoveHeaders(String[])
  nameWithType: AbstractMessageBuilder.RemoveHeaders(String[])
  fullName: Steeltoe.Integration.Support.AbstractMessageBuilder.RemoveHeaders(System.String[])
  nameWithType.vb: AbstractMessageBuilder.RemoveHeaders(String())
  fullName.vb: Steeltoe.Integration.Support.AbstractMessageBuilder.RemoveHeaders(System.String())
  name.vb: RemoveHeaders(String())
  spec.csharp:
  - uid: Steeltoe.Integration.Support.AbstractMessageBuilder.RemoveHeaders(System.String[])
    name: RemoveHeaders
    nameWithType: AbstractMessageBuilder.RemoveHeaders
    fullName: Steeltoe.Integration.Support.AbstractMessageBuilder.RemoveHeaders
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Integration.Support.AbstractMessageBuilder.RemoveHeaders(System.String[])
    name: RemoveHeaders
    nameWithType: AbstractMessageBuilder.RemoveHeaders
    fullName: Steeltoe.Integration.Support.AbstractMessageBuilder.RemoveHeaders
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Integration.Support.IntegrationMessageBuilder.RemoveHeaders*
  commentId: Overload:Steeltoe.Integration.Support.IntegrationMessageBuilder.RemoveHeaders
  name: RemoveHeaders
  nameWithType: IntegrationMessageBuilder.RemoveHeaders
  fullName: Steeltoe.Integration.Support.IntegrationMessageBuilder.RemoveHeaders
- uid: System.String[]
  isExternal: true
  name: String[]
  nameWithType: String[]
  fullName: System.String[]
  nameWithType.vb: String()
  fullName.vb: System.String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Steeltoe.Integration.Support.AbstractMessageBuilder.RemoveHeader(System.String)
  commentId: M:Steeltoe.Integration.Support.AbstractMessageBuilder.RemoveHeader(System.String)
  parent: Steeltoe.Integration.Support.AbstractMessageBuilder
  isExternal: true
  name: RemoveHeader(String)
  nameWithType: AbstractMessageBuilder.RemoveHeader(String)
  fullName: Steeltoe.Integration.Support.AbstractMessageBuilder.RemoveHeader(System.String)
  spec.csharp:
  - uid: Steeltoe.Integration.Support.AbstractMessageBuilder.RemoveHeader(System.String)
    name: RemoveHeader
    nameWithType: AbstractMessageBuilder.RemoveHeader
    fullName: Steeltoe.Integration.Support.AbstractMessageBuilder.RemoveHeader
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Integration.Support.AbstractMessageBuilder.RemoveHeader(System.String)
    name: RemoveHeader
    nameWithType: AbstractMessageBuilder.RemoveHeader
    fullName: Steeltoe.Integration.Support.AbstractMessageBuilder.RemoveHeader
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Integration.Support.IntegrationMessageBuilder.RemoveHeader*
  commentId: Overload:Steeltoe.Integration.Support.IntegrationMessageBuilder.RemoveHeader
  name: RemoveHeader
  nameWithType: IntegrationMessageBuilder.RemoveHeader
  fullName: Steeltoe.Integration.Support.IntegrationMessageBuilder.RemoveHeader
- uid: Steeltoe.Integration.Support.AbstractMessageBuilder.CopyHeaders(System.Collections.Generic.IDictionary{System.String,System.Object})
  commentId: M:Steeltoe.Integration.Support.AbstractMessageBuilder.CopyHeaders(System.Collections.Generic.IDictionary{System.String,System.Object})
  parent: Steeltoe.Integration.Support.AbstractMessageBuilder
  isExternal: true
  name: CopyHeaders(IDictionary<String, Object>)
  nameWithType: AbstractMessageBuilder.CopyHeaders(IDictionary<String, Object>)
  fullName: Steeltoe.Integration.Support.AbstractMessageBuilder.CopyHeaders(System.Collections.Generic.IDictionary<System.String, System.Object>)
  nameWithType.vb: AbstractMessageBuilder.CopyHeaders(IDictionary(Of String, Object))
  fullName.vb: Steeltoe.Integration.Support.AbstractMessageBuilder.CopyHeaders(System.Collections.Generic.IDictionary(Of System.String, System.Object))
  name.vb: CopyHeaders(IDictionary(Of String, Object))
  spec.csharp:
  - uid: Steeltoe.Integration.Support.AbstractMessageBuilder.CopyHeaders(System.Collections.Generic.IDictionary{System.String,System.Object})
    name: CopyHeaders
    nameWithType: AbstractMessageBuilder.CopyHeaders
    fullName: Steeltoe.Integration.Support.AbstractMessageBuilder.CopyHeaders
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Integration.Support.AbstractMessageBuilder.CopyHeaders(System.Collections.Generic.IDictionary{System.String,System.Object})
    name: CopyHeaders
    nameWithType: AbstractMessageBuilder.CopyHeaders
    fullName: Steeltoe.Integration.Support.AbstractMessageBuilder.CopyHeaders
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Integration.Support.IntegrationMessageBuilder.CopyHeaders*
  commentId: Overload:Steeltoe.Integration.Support.IntegrationMessageBuilder.CopyHeaders
  name: CopyHeaders
  nameWithType: IntegrationMessageBuilder.CopyHeaders
  fullName: Steeltoe.Integration.Support.IntegrationMessageBuilder.CopyHeaders
- uid: Steeltoe.Integration.Support.AbstractMessageBuilder.CopyHeadersIfAbsent(System.Collections.Generic.IDictionary{System.String,System.Object})
  commentId: M:Steeltoe.Integration.Support.AbstractMessageBuilder.CopyHeadersIfAbsent(System.Collections.Generic.IDictionary{System.String,System.Object})
  parent: Steeltoe.Integration.Support.AbstractMessageBuilder
  isExternal: true
  name: CopyHeadersIfAbsent(IDictionary<String, Object>)
  nameWithType: AbstractMessageBuilder.CopyHeadersIfAbsent(IDictionary<String, Object>)
  fullName: Steeltoe.Integration.Support.AbstractMessageBuilder.CopyHeadersIfAbsent(System.Collections.Generic.IDictionary<System.String, System.Object>)
  nameWithType.vb: AbstractMessageBuilder.CopyHeadersIfAbsent(IDictionary(Of String, Object))
  fullName.vb: Steeltoe.Integration.Support.AbstractMessageBuilder.CopyHeadersIfAbsent(System.Collections.Generic.IDictionary(Of System.String, System.Object))
  name.vb: CopyHeadersIfAbsent(IDictionary(Of String, Object))
  spec.csharp:
  - uid: Steeltoe.Integration.Support.AbstractMessageBuilder.CopyHeadersIfAbsent(System.Collections.Generic.IDictionary{System.String,System.Object})
    name: CopyHeadersIfAbsent
    nameWithType: AbstractMessageBuilder.CopyHeadersIfAbsent
    fullName: Steeltoe.Integration.Support.AbstractMessageBuilder.CopyHeadersIfAbsent
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Integration.Support.AbstractMessageBuilder.CopyHeadersIfAbsent(System.Collections.Generic.IDictionary{System.String,System.Object})
    name: CopyHeadersIfAbsent
    nameWithType: AbstractMessageBuilder.CopyHeadersIfAbsent
    fullName: Steeltoe.Integration.Support.AbstractMessageBuilder.CopyHeadersIfAbsent
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Integration.Support.IntegrationMessageBuilder.CopyHeadersIfAbsent*
  commentId: Overload:Steeltoe.Integration.Support.IntegrationMessageBuilder.CopyHeadersIfAbsent
  name: CopyHeadersIfAbsent
  nameWithType: IntegrationMessageBuilder.CopyHeadersIfAbsent
  fullName: Steeltoe.Integration.Support.IntegrationMessageBuilder.CopyHeadersIfAbsent
- uid: Steeltoe.Integration.Support.AbstractMessageBuilder.SequenceDetails
  commentId: P:Steeltoe.Integration.Support.AbstractMessageBuilder.SequenceDetails
  parent: Steeltoe.Integration.Support.AbstractMessageBuilder
  name: SequenceDetails
  nameWithType: AbstractMessageBuilder.SequenceDetails
  fullName: Steeltoe.Integration.Support.AbstractMessageBuilder.SequenceDetails
- uid: Steeltoe.Integration.Support.IntegrationMessageBuilder.SequenceDetails*
  commentId: Overload:Steeltoe.Integration.Support.IntegrationMessageBuilder.SequenceDetails
  name: SequenceDetails
  nameWithType: IntegrationMessageBuilder.SequenceDetails
  fullName: Steeltoe.Integration.Support.IntegrationMessageBuilder.SequenceDetails
- uid: System.Collections.Generic.List{System.Collections.Generic.List{System.Object}}
  commentId: T:System.Collections.Generic.List{System.Collections.Generic.List{System.Object}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<List<Object>>
  nameWithType: List<List<Object>>
  fullName: System.Collections.Generic.List<System.Collections.Generic.List<System.Object>>
  nameWithType.vb: List(Of List(Of Object))
  fullName.vb: System.Collections.Generic.List(Of System.Collections.Generic.List(Of System.Object))
  name.vb: List(Of List(Of Object))
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Integration.Support.AbstractMessageBuilder.CorrelationId
  commentId: P:Steeltoe.Integration.Support.AbstractMessageBuilder.CorrelationId
  parent: Steeltoe.Integration.Support.AbstractMessageBuilder
  name: CorrelationId
  nameWithType: AbstractMessageBuilder.CorrelationId
  fullName: Steeltoe.Integration.Support.AbstractMessageBuilder.CorrelationId
- uid: Steeltoe.Integration.Support.IntegrationMessageBuilder.CorrelationId*
  commentId: Overload:Steeltoe.Integration.Support.IntegrationMessageBuilder.CorrelationId
  name: CorrelationId
  nameWithType: IntegrationMessageBuilder.CorrelationId
  fullName: Steeltoe.Integration.Support.IntegrationMessageBuilder.CorrelationId
- uid: Steeltoe.Integration.Support.AbstractMessageBuilder.SequenceNumber
  commentId: P:Steeltoe.Integration.Support.AbstractMessageBuilder.SequenceNumber
  parent: Steeltoe.Integration.Support.AbstractMessageBuilder
  name: SequenceNumber
  nameWithType: AbstractMessageBuilder.SequenceNumber
  fullName: Steeltoe.Integration.Support.AbstractMessageBuilder.SequenceNumber
- uid: Steeltoe.Integration.Support.IntegrationMessageBuilder.SequenceNumber*
  commentId: Overload:Steeltoe.Integration.Support.IntegrationMessageBuilder.SequenceNumber
  name: SequenceNumber
  nameWithType: IntegrationMessageBuilder.SequenceNumber
  fullName: Steeltoe.Integration.Support.IntegrationMessageBuilder.SequenceNumber
- uid: Steeltoe.Integration.Support.AbstractMessageBuilder.SequenceSize
  commentId: P:Steeltoe.Integration.Support.AbstractMessageBuilder.SequenceSize
  parent: Steeltoe.Integration.Support.AbstractMessageBuilder
  name: SequenceSize
  nameWithType: AbstractMessageBuilder.SequenceSize
  fullName: Steeltoe.Integration.Support.AbstractMessageBuilder.SequenceSize
- uid: Steeltoe.Integration.Support.IntegrationMessageBuilder.SequenceSize*
  commentId: Overload:Steeltoe.Integration.Support.IntegrationMessageBuilder.SequenceSize
  name: SequenceSize
  nameWithType: IntegrationMessageBuilder.SequenceSize
  fullName: Steeltoe.Integration.Support.IntegrationMessageBuilder.SequenceSize
- uid: Steeltoe.Integration.Support.IntegrationMessageBuilder.ReadOnlyHeaders*
  commentId: Overload:Steeltoe.Integration.Support.IntegrationMessageBuilder.ReadOnlyHeaders
  name: ReadOnlyHeaders
  nameWithType: IntegrationMessageBuilder.ReadOnlyHeaders
  fullName: Steeltoe.Integration.Support.IntegrationMessageBuilder.ReadOnlyHeaders
- uid: System.Collections.Generic.IList{System.String}
  commentId: T:System.Collections.Generic.IList{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<String>
  nameWithType: IList<String>
  fullName: System.Collections.Generic.IList<System.String>
  nameWithType.vb: IList(Of String)
  fullName.vb: System.Collections.Generic.IList(Of System.String)
  name.vb: IList(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullName.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Integration.Support.AbstractMessageBuilder.Build
  commentId: M:Steeltoe.Integration.Support.AbstractMessageBuilder.Build
  parent: Steeltoe.Integration.Support.AbstractMessageBuilder
  name: Build()
  nameWithType: AbstractMessageBuilder.Build()
  fullName: Steeltoe.Integration.Support.AbstractMessageBuilder.Build()
  spec.csharp:
  - uid: Steeltoe.Integration.Support.AbstractMessageBuilder.Build
    name: Build
    nameWithType: AbstractMessageBuilder.Build
    fullName: Steeltoe.Integration.Support.AbstractMessageBuilder.Build
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Integration.Support.AbstractMessageBuilder.Build
    name: Build
    nameWithType: AbstractMessageBuilder.Build
    fullName: Steeltoe.Integration.Support.AbstractMessageBuilder.Build
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Integration.Support.IntegrationMessageBuilder.Build*
  commentId: Overload:Steeltoe.Integration.Support.IntegrationMessageBuilder.Build
  name: Build
  nameWithType: IntegrationMessageBuilder.Build
  fullName: Steeltoe.Integration.Support.IntegrationMessageBuilder.Build
