### YamlMime:ManagedReference
items:
- uid: Steeltoe.Extensions.Logging.DynamicSerilog.SerilogDynamicProvider
  commentId: T:Steeltoe.Extensions.Logging.DynamicSerilog.SerilogDynamicProvider
  id: SerilogDynamicProvider
  parent: Steeltoe.Extensions.Logging.DynamicSerilog
  children:
  - Steeltoe.Extensions.Logging.DynamicSerilog.SerilogDynamicProvider.#ctor(IConfiguration,Steeltoe.Extensions.Logging.DynamicSerilog.ISerilogOptions,Logger,LoggingLevelSwitch)
  - Steeltoe.Extensions.Logging.DynamicSerilog.SerilogDynamicProvider.CreateLogger(System.String)
  - Steeltoe.Extensions.Logging.DynamicSerilog.SerilogDynamicProvider.Dispose
  - Steeltoe.Extensions.Logging.DynamicSerilog.SerilogDynamicProvider.Dispose(System.Boolean)
  - Steeltoe.Extensions.Logging.DynamicSerilog.SerilogDynamicProvider.Finalize
  - Steeltoe.Extensions.Logging.DynamicSerilog.SerilogDynamicProvider.GetLoggerConfigurations
  - Steeltoe.Extensions.Logging.DynamicSerilog.SerilogDynamicProvider.SetLogLevel(System.String,System.Nullable{LogLevel})
  langs:
  - csharp
  - vb
  name: SerilogDynamicProvider
  nameWithType: SerilogDynamicProvider
  fullName: Steeltoe.Extensions.Logging.DynamicSerilog.SerilogDynamicProvider
  type: Class
  source:
    remote:
      path: src/Logging/src/DynamicSerilogBase/SerilogDynamicProvider.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: SerilogDynamicProvider
    path: ../Steeltoe/src/Logging/src/DynamicSerilogBase/SerilogDynamicProvider.cs
    startLine: 20
  assemblies:
  - Steeltoe.Extensions.Logging.DynamicSerilogBase
  namespace: Steeltoe.Extensions.Logging.DynamicSerilog
  summary: "\nA wrapper for the <see cref=\"!:Serilog.Core.Logger\"></see> to dynamically set log levels\n"
  example: []
  syntax:
    content: 'public class SerilogDynamicProvider : IDynamicLoggerProvider, ILoggerProvider'
    content.vb: >-
      Public Class SerilogDynamicProvider

          Implements IDynamicLoggerProvider, ILoggerProvider
  inheritance:
  - System.Object
  implements:
  - Steeltoe.Extensions.Logging.IDynamicLoggerProvider
  - ILoggerProvider
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Steeltoe.Extensions.Logging.DynamicSerilog.SerilogDynamicProvider.#ctor(IConfiguration,Steeltoe.Extensions.Logging.DynamicSerilog.ISerilogOptions,Logger,LoggingLevelSwitch)
  commentId: M:Steeltoe.Extensions.Logging.DynamicSerilog.SerilogDynamicProvider.#ctor(IConfiguration,Steeltoe.Extensions.Logging.DynamicSerilog.ISerilogOptions,Logger,LoggingLevelSwitch)
  id: '#ctor(IConfiguration,Steeltoe.Extensions.Logging.DynamicSerilog.ISerilogOptions,Logger,LoggingLevelSwitch)'
  parent: Steeltoe.Extensions.Logging.DynamicSerilog.SerilogDynamicProvider
  langs:
  - csharp
  - vb
  name: SerilogDynamicProvider(IConfiguration, ISerilogOptions, Logger, LoggingLevelSwitch)
  nameWithType: SerilogDynamicProvider.SerilogDynamicProvider(IConfiguration, ISerilogOptions, Logger, LoggingLevelSwitch)
  fullName: Steeltoe.Extensions.Logging.DynamicSerilog.SerilogDynamicProvider.SerilogDynamicProvider(IConfiguration, Steeltoe.Extensions.Logging.DynamicSerilog.ISerilogOptions, Logger, LoggingLevelSwitch)
  type: Constructor
  source:
    remote:
      path: src/Logging/src/DynamicSerilogBase/SerilogDynamicProvider.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: .ctor
    path: ../Steeltoe/src/Logging/src/DynamicSerilogBase/SerilogDynamicProvider.cs
    startLine: 40
  assemblies:
  - Steeltoe.Extensions.Logging.DynamicSerilogBase
  namespace: Steeltoe.Extensions.Logging.DynamicSerilog
  summary: "\nInitializes a new instance of the <xref href=\"Steeltoe.Extensions.Logging.DynamicSerilog.SerilogDynamicProvider\" data-throw-if-not-resolved=\"false\"></xref> class.\nAny Serilog settings can be passed in the IConfiguration as needed.\n"
  example: []
  syntax:
    content: public SerilogDynamicProvider(IConfiguration configuration, ISerilogOptions options = null, Logger logger = null, LoggingLevelSwitch loggingLevelSwitch = null)
    parameters:
    - id: configuration
      type: IConfiguration
      description: Serilog readable <see cref="!:IConfiguration"></see>
    - id: options
      type: Steeltoe.Extensions.Logging.DynamicSerilog.ISerilogOptions
      description: Subset of Serilog options managed by wrapper<xref href="Steeltoe.Extensions.Logging.DynamicSerilog.ISerilogOptions" data-throw-if-not-resolved="false"></xref>
    - id: logger
      type: Logger
      description: Serilog logger<see cref="!:Serilog.Core.Logger"></see>
    - id: loggingLevelSwitch
      type: LoggingLevelSwitch
      description: Serilog global log level switch<see cref="!:LoggingLevelSwitch"></see>
    content.vb: Public Sub New(configuration As IConfiguration, options As ISerilogOptions = Nothing, logger As Logger = Nothing, loggingLevelSwitch As LoggingLevelSwitch = Nothing)
  overload: Steeltoe.Extensions.Logging.DynamicSerilog.SerilogDynamicProvider.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Steeltoe.Extensions.Logging.DynamicSerilog.SerilogDynamicProvider.CreateLogger(System.String)
  commentId: M:Steeltoe.Extensions.Logging.DynamicSerilog.SerilogDynamicProvider.CreateLogger(System.String)
  id: CreateLogger(System.String)
  parent: Steeltoe.Extensions.Logging.DynamicSerilog.SerilogDynamicProvider
  langs:
  - csharp
  - vb
  name: CreateLogger(String)
  nameWithType: SerilogDynamicProvider.CreateLogger(String)
  fullName: Steeltoe.Extensions.Logging.DynamicSerilog.SerilogDynamicProvider.CreateLogger(System.String)
  type: Method
  source:
    remote:
      path: src/Logging/src/DynamicSerilogBase/SerilogDynamicProvider.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: CreateLogger
    path: ../Steeltoe/src/Logging/src/DynamicSerilogBase/SerilogDynamicProvider.cs
    startLine: 77
  assemblies:
  - Steeltoe.Extensions.Logging.DynamicSerilogBase
  namespace: Steeltoe.Extensions.Logging.DynamicSerilog
  syntax:
    content: public ILogger CreateLogger(string categoryName)
    parameters:
    - id: categoryName
      type: System.String
    return:
      type: ILogger
    content.vb: Public Function CreateLogger(categoryName As String) As ILogger
  overload: Steeltoe.Extensions.Logging.DynamicSerilog.SerilogDynamicProvider.CreateLogger*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Steeltoe.Extensions.Logging.DynamicSerilog.SerilogDynamicProvider.GetLoggerConfigurations
  commentId: M:Steeltoe.Extensions.Logging.DynamicSerilog.SerilogDynamicProvider.GetLoggerConfigurations
  id: GetLoggerConfigurations
  parent: Steeltoe.Extensions.Logging.DynamicSerilog.SerilogDynamicProvider
  langs:
  - csharp
  - vb
  name: GetLoggerConfigurations()
  nameWithType: SerilogDynamicProvider.GetLoggerConfigurations()
  fullName: Steeltoe.Extensions.Logging.DynamicSerilog.SerilogDynamicProvider.GetLoggerConfigurations()
  type: Method
  source:
    remote:
      path: src/Logging/src/DynamicSerilogBase/SerilogDynamicProvider.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: GetLoggerConfigurations
    path: ../Steeltoe/src/Logging/src/DynamicSerilogBase/SerilogDynamicProvider.cs
    startLine: 92
  assemblies:
  - Steeltoe.Extensions.Logging.DynamicSerilogBase
  namespace: Steeltoe.Extensions.Logging.DynamicSerilog
  syntax:
    content: public ICollection<ILoggerConfiguration> GetLoggerConfigurations()
    return:
      type: System.Collections.Generic.ICollection{Steeltoe.Extensions.Logging.ILoggerConfiguration}
    content.vb: Public Function GetLoggerConfigurations As ICollection(Of ILoggerConfiguration)
  overload: Steeltoe.Extensions.Logging.DynamicSerilog.SerilogDynamicProvider.GetLoggerConfigurations*
  implements:
  - Steeltoe.Extensions.Logging.IDynamicLoggerProvider.GetLoggerConfigurations
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Steeltoe.Extensions.Logging.DynamicSerilog.SerilogDynamicProvider.SetLogLevel(System.String,System.Nullable{LogLevel})
  commentId: M:Steeltoe.Extensions.Logging.DynamicSerilog.SerilogDynamicProvider.SetLogLevel(System.String,System.Nullable{LogLevel})
  id: SetLogLevel(System.String,System.Nullable{LogLevel})
  parent: Steeltoe.Extensions.Logging.DynamicSerilog.SerilogDynamicProvider
  langs:
  - csharp
  - vb
  name: SetLogLevel(String, Nullable<LogLevel>)
  nameWithType: SerilogDynamicProvider.SetLogLevel(String, Nullable<LogLevel>)
  fullName: Steeltoe.Extensions.Logging.DynamicSerilog.SerilogDynamicProvider.SetLogLevel(System.String, System.Nullable<LogLevel>)
  type: Method
  source:
    remote:
      path: src/Logging/src/DynamicSerilogBase/SerilogDynamicProvider.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: SetLogLevel
    path: ../Steeltoe/src/Logging/src/DynamicSerilogBase/SerilogDynamicProvider.cs
    startLine: 127
  assemblies:
  - Steeltoe.Extensions.Logging.DynamicSerilogBase
  namespace: Steeltoe.Extensions.Logging.DynamicSerilog
  syntax:
    content: public void SetLogLevel(string category, LogLevel? level)
    parameters:
    - id: category
      type: System.String
    - id: level
      type: System.Nullable{LogLevel}
    content.vb: Public Sub SetLogLevel(category As String, level As LogLevel?)
  overload: Steeltoe.Extensions.Logging.DynamicSerilog.SerilogDynamicProvider.SetLogLevel*
  nameWithType.vb: SerilogDynamicProvider.SetLogLevel(String, Nullable(Of LogLevel))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Steeltoe.Extensions.Logging.DynamicSerilog.SerilogDynamicProvider.SetLogLevel(System.String, System.Nullable(Of LogLevel))
  name.vb: SetLogLevel(String, Nullable(Of LogLevel))
- uid: Steeltoe.Extensions.Logging.DynamicSerilog.SerilogDynamicProvider.Dispose
  commentId: M:Steeltoe.Extensions.Logging.DynamicSerilog.SerilogDynamicProvider.Dispose
  id: Dispose
  parent: Steeltoe.Extensions.Logging.DynamicSerilog.SerilogDynamicProvider
  langs:
  - csharp
  - vb
  name: Dispose()
  nameWithType: SerilogDynamicProvider.Dispose()
  fullName: Steeltoe.Extensions.Logging.DynamicSerilog.SerilogDynamicProvider.Dispose()
  type: Method
  source:
    remote:
      path: src/Logging/src/DynamicSerilogBase/SerilogDynamicProvider.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Dispose
    path: ../Steeltoe/src/Logging/src/DynamicSerilogBase/SerilogDynamicProvider.cs
    startLine: 176
  assemblies:
  - Steeltoe.Extensions.Logging.DynamicSerilogBase
  namespace: Steeltoe.Extensions.Logging.DynamicSerilog
  syntax:
    content: public void Dispose()
    content.vb: Public Sub Dispose
  overload: Steeltoe.Extensions.Logging.DynamicSerilog.SerilogDynamicProvider.Dispose*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Steeltoe.Extensions.Logging.DynamicSerilog.SerilogDynamicProvider.Dispose(System.Boolean)
  commentId: M:Steeltoe.Extensions.Logging.DynamicSerilog.SerilogDynamicProvider.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: Steeltoe.Extensions.Logging.DynamicSerilog.SerilogDynamicProvider
  langs:
  - csharp
  - vb
  name: Dispose(Boolean)
  nameWithType: SerilogDynamicProvider.Dispose(Boolean)
  fullName: Steeltoe.Extensions.Logging.DynamicSerilog.SerilogDynamicProvider.Dispose(System.Boolean)
  type: Method
  source:
    remote:
      path: src/Logging/src/DynamicSerilogBase/SerilogDynamicProvider.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Dispose
    path: ../Steeltoe/src/Logging/src/DynamicSerilogBase/SerilogDynamicProvider.cs
    startLine: 182
  assemblies:
  - Steeltoe.Extensions.Logging.DynamicSerilogBase
  namespace: Steeltoe.Extensions.Logging.DynamicSerilog
  syntax:
    content: protected virtual void Dispose(bool disposing)
    parameters:
    - id: disposing
      type: System.Boolean
    content.vb: Protected Overridable Sub Dispose(disposing As Boolean)
  overload: Steeltoe.Extensions.Logging.DynamicSerilog.SerilogDynamicProvider.Dispose*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: Steeltoe.Extensions.Logging.DynamicSerilog.SerilogDynamicProvider.Finalize
  commentId: M:Steeltoe.Extensions.Logging.DynamicSerilog.SerilogDynamicProvider.Finalize
  id: Finalize
  parent: Steeltoe.Extensions.Logging.DynamicSerilog.SerilogDynamicProvider
  langs:
  - csharp
  - vb
  name: Finalize()
  nameWithType: SerilogDynamicProvider.Finalize()
  fullName: Steeltoe.Extensions.Logging.DynamicSerilog.SerilogDynamicProvider.Finalize()
  type: Method
  source:
    remote:
      path: src/Logging/src/DynamicSerilogBase/SerilogDynamicProvider.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Finalize
    path: ../Steeltoe/src/Logging/src/DynamicSerilogBase/SerilogDynamicProvider.cs
    startLine: 198
  assemblies:
  - Steeltoe.Extensions.Logging.DynamicSerilogBase
  namespace: Steeltoe.Extensions.Logging.DynamicSerilog
  syntax:
    content: protected void Finalize()
    content.vb: Protected Sub Finalize
  overload: Steeltoe.Extensions.Logging.DynamicSerilog.SerilogDynamicProvider.Finalize*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
references:
- uid: Steeltoe.Extensions.Logging.DynamicSerilog
  commentId: N:Steeltoe.Extensions.Logging.DynamicSerilog
  name: Steeltoe.Extensions.Logging.DynamicSerilog
  nameWithType: Steeltoe.Extensions.Logging.DynamicSerilog
  fullName: Steeltoe.Extensions.Logging.DynamicSerilog
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Steeltoe.Extensions.Logging.IDynamicLoggerProvider
  commentId: T:Steeltoe.Extensions.Logging.IDynamicLoggerProvider
  parent: Steeltoe.Extensions.Logging
  name: IDynamicLoggerProvider
  nameWithType: IDynamicLoggerProvider
  fullName: Steeltoe.Extensions.Logging.IDynamicLoggerProvider
- uid: ILoggerProvider
  isExternal: true
  name: ILoggerProvider
  nameWithType: ILoggerProvider
  fullName: ILoggerProvider
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Steeltoe.Extensions.Logging
  commentId: N:Steeltoe.Extensions.Logging
  name: Steeltoe.Extensions.Logging
  nameWithType: Steeltoe.Extensions.Logging
  fullName: Steeltoe.Extensions.Logging
- uid: Steeltoe.Extensions.Logging.DynamicSerilog.SerilogDynamicProvider
  commentId: T:Steeltoe.Extensions.Logging.DynamicSerilog.SerilogDynamicProvider
  name: SerilogDynamicProvider
  nameWithType: SerilogDynamicProvider
  fullName: Steeltoe.Extensions.Logging.DynamicSerilog.SerilogDynamicProvider
- uid: Steeltoe.Extensions.Logging.DynamicSerilog.ISerilogOptions
  commentId: T:Steeltoe.Extensions.Logging.DynamicSerilog.ISerilogOptions
  parent: Steeltoe.Extensions.Logging.DynamicSerilog
  name: ISerilogOptions
  nameWithType: ISerilogOptions
  fullName: Steeltoe.Extensions.Logging.DynamicSerilog.ISerilogOptions
- uid: Steeltoe.Extensions.Logging.DynamicSerilog.SerilogDynamicProvider.#ctor*
  commentId: Overload:Steeltoe.Extensions.Logging.DynamicSerilog.SerilogDynamicProvider.#ctor
  name: SerilogDynamicProvider
  nameWithType: SerilogDynamicProvider.SerilogDynamicProvider
  fullName: Steeltoe.Extensions.Logging.DynamicSerilog.SerilogDynamicProvider.SerilogDynamicProvider
- uid: IConfiguration
  isExternal: true
  name: IConfiguration
  nameWithType: IConfiguration
  fullName: IConfiguration
- uid: Logger
  commentId: '!:Logger'
  isExternal: true
  name: Logger
  nameWithType: Logger
  fullName: Logger
- uid: LoggingLevelSwitch
  commentId: '!:LoggingLevelSwitch'
  isExternal: true
  name: LoggingLevelSwitch
  nameWithType: LoggingLevelSwitch
  fullName: LoggingLevelSwitch
- uid: Steeltoe.Extensions.Logging.DynamicSerilog.SerilogDynamicProvider.CreateLogger*
  commentId: Overload:Steeltoe.Extensions.Logging.DynamicSerilog.SerilogDynamicProvider.CreateLogger
  name: CreateLogger
  nameWithType: SerilogDynamicProvider.CreateLogger
  fullName: Steeltoe.Extensions.Logging.DynamicSerilog.SerilogDynamicProvider.CreateLogger
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: ILogger
  isExternal: true
  name: ILogger
  nameWithType: ILogger
  fullName: ILogger
- uid: Steeltoe.Extensions.Logging.DynamicSerilog.SerilogDynamicProvider.GetLoggerConfigurations*
  commentId: Overload:Steeltoe.Extensions.Logging.DynamicSerilog.SerilogDynamicProvider.GetLoggerConfigurations
  name: GetLoggerConfigurations
  nameWithType: SerilogDynamicProvider.GetLoggerConfigurations
  fullName: Steeltoe.Extensions.Logging.DynamicSerilog.SerilogDynamicProvider.GetLoggerConfigurations
- uid: Steeltoe.Extensions.Logging.IDynamicLoggerProvider.GetLoggerConfigurations
  commentId: M:Steeltoe.Extensions.Logging.IDynamicLoggerProvider.GetLoggerConfigurations
  parent: Steeltoe.Extensions.Logging.IDynamicLoggerProvider
  name: GetLoggerConfigurations()
  nameWithType: IDynamicLoggerProvider.GetLoggerConfigurations()
  fullName: Steeltoe.Extensions.Logging.IDynamicLoggerProvider.GetLoggerConfigurations()
  spec.csharp:
  - uid: Steeltoe.Extensions.Logging.IDynamicLoggerProvider.GetLoggerConfigurations
    name: GetLoggerConfigurations
    nameWithType: IDynamicLoggerProvider.GetLoggerConfigurations
    fullName: Steeltoe.Extensions.Logging.IDynamicLoggerProvider.GetLoggerConfigurations
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Extensions.Logging.IDynamicLoggerProvider.GetLoggerConfigurations
    name: GetLoggerConfigurations
    nameWithType: IDynamicLoggerProvider.GetLoggerConfigurations
    fullName: Steeltoe.Extensions.Logging.IDynamicLoggerProvider.GetLoggerConfigurations
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.ICollection{Steeltoe.Extensions.Logging.ILoggerConfiguration}
  commentId: T:System.Collections.Generic.ICollection{Steeltoe.Extensions.Logging.ILoggerConfiguration}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.ICollection`1
  name: ICollection<ILoggerConfiguration>
  nameWithType: ICollection<ILoggerConfiguration>
  fullName: System.Collections.Generic.ICollection<Steeltoe.Extensions.Logging.ILoggerConfiguration>
  nameWithType.vb: ICollection(Of ILoggerConfiguration)
  fullName.vb: System.Collections.Generic.ICollection(Of Steeltoe.Extensions.Logging.ILoggerConfiguration)
  name.vb: ICollection(Of ILoggerConfiguration)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Steeltoe.Extensions.Logging.ILoggerConfiguration
    name: ILoggerConfiguration
    nameWithType: ILoggerConfiguration
    fullName: Steeltoe.Extensions.Logging.ILoggerConfiguration
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Steeltoe.Extensions.Logging.ILoggerConfiguration
    name: ILoggerConfiguration
    nameWithType: ILoggerConfiguration
    fullName: Steeltoe.Extensions.Logging.ILoggerConfiguration
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.ICollection`1
  commentId: T:System.Collections.Generic.ICollection`1
  isExternal: true
  name: ICollection<T>
  nameWithType: ICollection<T>
  fullName: System.Collections.Generic.ICollection<T>
  nameWithType.vb: ICollection(Of T)
  fullName.vb: System.Collections.Generic.ICollection(Of T)
  name.vb: ICollection(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Steeltoe.Extensions.Logging.DynamicSerilog.SerilogDynamicProvider.SetLogLevel*
  commentId: Overload:Steeltoe.Extensions.Logging.DynamicSerilog.SerilogDynamicProvider.SetLogLevel
  name: SetLogLevel
  nameWithType: SerilogDynamicProvider.SetLogLevel
  fullName: Steeltoe.Extensions.Logging.DynamicSerilog.SerilogDynamicProvider.SetLogLevel
- uid: System.Nullable{LogLevel}
  commentId: T:System.Nullable{LogLevel}
  parent: System
  definition: System.Nullable`1
  name: Nullable<LogLevel>
  nameWithType: Nullable<LogLevel>
  fullName: System.Nullable<LogLevel>
  nameWithType.vb: Nullable(Of LogLevel)
  fullName.vb: System.Nullable(Of LogLevel)
  name.vb: Nullable(Of LogLevel)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: LogLevel
    name: LogLevel
    nameWithType: LogLevel
    fullName: LogLevel
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: LogLevel
    name: LogLevel
    nameWithType: LogLevel
    fullName: LogLevel
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Extensions.Logging.DynamicSerilog.SerilogDynamicProvider.Dispose*
  commentId: Overload:Steeltoe.Extensions.Logging.DynamicSerilog.SerilogDynamicProvider.Dispose
  name: Dispose
  nameWithType: SerilogDynamicProvider.Dispose
  fullName: Steeltoe.Extensions.Logging.DynamicSerilog.SerilogDynamicProvider.Dispose
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Steeltoe.Extensions.Logging.DynamicSerilog.SerilogDynamicProvider.Finalize*
  commentId: Overload:Steeltoe.Extensions.Logging.DynamicSerilog.SerilogDynamicProvider.Finalize
  name: Finalize
  nameWithType: SerilogDynamicProvider.Finalize
  fullName: Steeltoe.Extensions.Logging.DynamicSerilog.SerilogDynamicProvider.Finalize
