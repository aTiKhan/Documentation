### YamlMime:ManagedReference
items:
- uid: Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer
  commentId: T:Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer
  id: BlockingQueueConsumer
  parent: Steeltoe.Messaging.RabbitMQ.Listener
  children:
  - Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.#ctor(Steeltoe.Messaging.RabbitMQ.Connection.IConnectionFactory,Steeltoe.Messaging.RabbitMQ.Support.IMessageHeadersConverter,Steeltoe.Messaging.RabbitMQ.Util.ActiveObjectCounter{Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer},Steeltoe.Messaging.RabbitMQ.Core.AcknowledgeMode,System.Boolean,System.UInt16,Microsoft.Extensions.Logging.ILoggerFactory,System.String[])
  - Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.#ctor(Steeltoe.Messaging.RabbitMQ.Connection.IConnectionFactory,Steeltoe.Messaging.RabbitMQ.Support.IMessageHeadersConverter,Steeltoe.Messaging.RabbitMQ.Util.ActiveObjectCounter{Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer},Steeltoe.Messaging.RabbitMQ.Core.AcknowledgeMode,System.Boolean,System.UInt16,System.Boolean,Microsoft.Extensions.Logging.ILoggerFactory,System.String[])
  - Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.#ctor(Steeltoe.Messaging.RabbitMQ.Connection.IConnectionFactory,Steeltoe.Messaging.RabbitMQ.Support.IMessageHeadersConverter,Steeltoe.Messaging.RabbitMQ.Util.ActiveObjectCounter{Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer},Steeltoe.Messaging.RabbitMQ.Core.AcknowledgeMode,System.Boolean,System.UInt16,System.Boolean,System.Collections.Generic.Dictionary{System.String,System.Object},Microsoft.Extensions.Logging.ILoggerFactory,System.String[])
  - Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.#ctor(Steeltoe.Messaging.RabbitMQ.Connection.IConnectionFactory,Steeltoe.Messaging.RabbitMQ.Support.IMessageHeadersConverter,Steeltoe.Messaging.RabbitMQ.Util.ActiveObjectCounter{Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer},Steeltoe.Messaging.RabbitMQ.Core.AcknowledgeMode,System.Boolean,System.UInt16,System.Boolean,System.Collections.Generic.Dictionary{System.String,System.Object},System.Boolean,Microsoft.Extensions.Logging.ILoggerFactory,System.String[])
  - Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.#ctor(Steeltoe.Messaging.RabbitMQ.Connection.IConnectionFactory,Steeltoe.Messaging.RabbitMQ.Support.IMessageHeadersConverter,Steeltoe.Messaging.RabbitMQ.Util.ActiveObjectCounter{Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer},Steeltoe.Messaging.RabbitMQ.Core.AcknowledgeMode,System.Boolean,System.UInt16,System.Boolean,System.Collections.Generic.Dictionary{System.String,System.Object},System.Boolean,System.Boolean,Microsoft.Extensions.Logging.ILoggerFactory,System.String[])
  - Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.AbortStarted
  - Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.AcknowledgeMode
  - Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.ActiveObjectCounter
  - Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.BackOffExecution
  - Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.BasicCancel
  - Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.BasicCancel(System.Boolean)
  - Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.Cancel
  - Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.Cancelled
  - Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.Channel
  - Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.ClearDeliveryTags
  - Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.CommitIfNecessary(System.Boolean)
  - Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.ConnectionFactory
  - Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.ConsumerArgs
  - Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.DeclarationRetries
  - Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.Declaring
  - Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.DefaultRequeueRejected
  - Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.DeliveryTags
  - Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.Exclusive
  - Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.FailedDeclarationRetryInterval
  - Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.GetConsumerTags
  - Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.HasDelivery
  - Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.LastRetryDeclaration
  - Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.LocallyTransacted
  - Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.Logger
  - Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.LoggerFactory
  - Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.MessageHeadersConverter
  - Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.MissingQueues
  - Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.NextMessage
  - Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.NextMessage(System.Int32)
  - Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.NoLocal
  - Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.NormalCancel
  - Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.PrefetchCount
  - Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.Queue
  - Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.QueueCount
  - Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.Queues
  - Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.ResourceHolder
  - Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.RetryDeclarationInterval
  - Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.RollbackOnExceptionIfNecessary(System.Exception)
  - Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.Shutdown
  - Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.ShutdownTimeout
  - Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.Start
  - Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.Stop
  - Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.TagStrategy
  - Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.ToString
  - Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.Transactional
  langs:
  - csharp
  - vb
  name: BlockingQueueConsumer
  nameWithType: BlockingQueueConsumer
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer
  type: Class
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Listener/BlockingQueueConsumer.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: BlockingQueueConsumer
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Listener/BlockingQueueConsumer.cs
    startLine: 28
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Listener
  syntax:
    content: public class BlockingQueueConsumer
    content.vb: Public Class BlockingQueueConsumer
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.#ctor(Steeltoe.Messaging.RabbitMQ.Connection.IConnectionFactory,Steeltoe.Messaging.RabbitMQ.Support.IMessageHeadersConverter,Steeltoe.Messaging.RabbitMQ.Util.ActiveObjectCounter{Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer},Steeltoe.Messaging.RabbitMQ.Core.AcknowledgeMode,System.Boolean,System.UInt16,Microsoft.Extensions.Logging.ILoggerFactory,System.String[])
  commentId: M:Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.#ctor(Steeltoe.Messaging.RabbitMQ.Connection.IConnectionFactory,Steeltoe.Messaging.RabbitMQ.Support.IMessageHeadersConverter,Steeltoe.Messaging.RabbitMQ.Util.ActiveObjectCounter{Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer},Steeltoe.Messaging.RabbitMQ.Core.AcknowledgeMode,System.Boolean,System.UInt16,Microsoft.Extensions.Logging.ILoggerFactory,System.String[])
  id: '#ctor(Steeltoe.Messaging.RabbitMQ.Connection.IConnectionFactory,Steeltoe.Messaging.RabbitMQ.Support.IMessageHeadersConverter,Steeltoe.Messaging.RabbitMQ.Util.ActiveObjectCounter{Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer},Steeltoe.Messaging.RabbitMQ.Core.AcknowledgeMode,System.Boolean,System.UInt16,Microsoft.Extensions.Logging.ILoggerFactory,System.String[])'
  parent: Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer
  langs:
  - csharp
  - vb
  name: BlockingQueueConsumer(IConnectionFactory, IMessageHeadersConverter, ActiveObjectCounter<BlockingQueueConsumer>, AcknowledgeMode, Boolean, UInt16, ILoggerFactory, String[])
  nameWithType: BlockingQueueConsumer.BlockingQueueConsumer(IConnectionFactory, IMessageHeadersConverter, ActiveObjectCounter<BlockingQueueConsumer>, AcknowledgeMode, Boolean, UInt16, ILoggerFactory, String[])
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.BlockingQueueConsumer(Steeltoe.Messaging.RabbitMQ.Connection.IConnectionFactory, Steeltoe.Messaging.RabbitMQ.Support.IMessageHeadersConverter, Steeltoe.Messaging.RabbitMQ.Util.ActiveObjectCounter<Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer>, Steeltoe.Messaging.RabbitMQ.Core.AcknowledgeMode, System.Boolean, System.UInt16, Microsoft.Extensions.Logging.ILoggerFactory, System.String[])
  type: Constructor
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Listener/BlockingQueueConsumer.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: .ctor
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Listener/BlockingQueueConsumer.cs
    startLine: 33
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Listener
  syntax:
    content: public BlockingQueueConsumer(IConnectionFactory connectionFactory, IMessageHeadersConverter messagePropertiesConverter, ActiveObjectCounter<BlockingQueueConsumer> activeObjectCounter, AcknowledgeMode acknowledgeMode, bool transactional, ushort prefetchCount, ILoggerFactory loggerFactory, params string[] queues)
    parameters:
    - id: connectionFactory
      type: Steeltoe.Messaging.RabbitMQ.Connection.IConnectionFactory
    - id: messagePropertiesConverter
      type: Steeltoe.Messaging.RabbitMQ.Support.IMessageHeadersConverter
    - id: activeObjectCounter
      type: Steeltoe.Messaging.RabbitMQ.Util.ActiveObjectCounter{Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer}
    - id: acknowledgeMode
      type: Steeltoe.Messaging.RabbitMQ.Core.AcknowledgeMode
    - id: transactional
      type: System.Boolean
    - id: prefetchCount
      type: System.UInt16
    - id: loggerFactory
      type: Microsoft.Extensions.Logging.ILoggerFactory
    - id: queues
      type: System.String[]
    content.vb: Public Sub New(connectionFactory As IConnectionFactory, messagePropertiesConverter As IMessageHeadersConverter, activeObjectCounter As ActiveObjectCounter(Of BlockingQueueConsumer), acknowledgeMode As AcknowledgeMode, transactional As Boolean, prefetchCount As UShort, loggerFactory As ILoggerFactory, ParamArray queues As String())
  overload: Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.#ctor*
  nameWithType.vb: BlockingQueueConsumer.BlockingQueueConsumer(IConnectionFactory, IMessageHeadersConverter, ActiveObjectCounter(Of BlockingQueueConsumer), AcknowledgeMode, Boolean, UInt16, ILoggerFactory, String())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.BlockingQueueConsumer(Steeltoe.Messaging.RabbitMQ.Connection.IConnectionFactory, Steeltoe.Messaging.RabbitMQ.Support.IMessageHeadersConverter, Steeltoe.Messaging.RabbitMQ.Util.ActiveObjectCounter(Of Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer), Steeltoe.Messaging.RabbitMQ.Core.AcknowledgeMode, System.Boolean, System.UInt16, Microsoft.Extensions.Logging.ILoggerFactory, System.String())
  name.vb: BlockingQueueConsumer(IConnectionFactory, IMessageHeadersConverter, ActiveObjectCounter(Of BlockingQueueConsumer), AcknowledgeMode, Boolean, UInt16, ILoggerFactory, String())
- uid: Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.#ctor(Steeltoe.Messaging.RabbitMQ.Connection.IConnectionFactory,Steeltoe.Messaging.RabbitMQ.Support.IMessageHeadersConverter,Steeltoe.Messaging.RabbitMQ.Util.ActiveObjectCounter{Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer},Steeltoe.Messaging.RabbitMQ.Core.AcknowledgeMode,System.Boolean,System.UInt16,System.Boolean,Microsoft.Extensions.Logging.ILoggerFactory,System.String[])
  commentId: M:Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.#ctor(Steeltoe.Messaging.RabbitMQ.Connection.IConnectionFactory,Steeltoe.Messaging.RabbitMQ.Support.IMessageHeadersConverter,Steeltoe.Messaging.RabbitMQ.Util.ActiveObjectCounter{Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer},Steeltoe.Messaging.RabbitMQ.Core.AcknowledgeMode,System.Boolean,System.UInt16,System.Boolean,Microsoft.Extensions.Logging.ILoggerFactory,System.String[])
  id: '#ctor(Steeltoe.Messaging.RabbitMQ.Connection.IConnectionFactory,Steeltoe.Messaging.RabbitMQ.Support.IMessageHeadersConverter,Steeltoe.Messaging.RabbitMQ.Util.ActiveObjectCounter{Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer},Steeltoe.Messaging.RabbitMQ.Core.AcknowledgeMode,System.Boolean,System.UInt16,System.Boolean,Microsoft.Extensions.Logging.ILoggerFactory,System.String[])'
  parent: Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer
  langs:
  - csharp
  - vb
  name: BlockingQueueConsumer(IConnectionFactory, IMessageHeadersConverter, ActiveObjectCounter<BlockingQueueConsumer>, AcknowledgeMode, Boolean, UInt16, Boolean, ILoggerFactory, String[])
  nameWithType: BlockingQueueConsumer.BlockingQueueConsumer(IConnectionFactory, IMessageHeadersConverter, ActiveObjectCounter<BlockingQueueConsumer>, AcknowledgeMode, Boolean, UInt16, Boolean, ILoggerFactory, String[])
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.BlockingQueueConsumer(Steeltoe.Messaging.RabbitMQ.Connection.IConnectionFactory, Steeltoe.Messaging.RabbitMQ.Support.IMessageHeadersConverter, Steeltoe.Messaging.RabbitMQ.Util.ActiveObjectCounter<Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer>, Steeltoe.Messaging.RabbitMQ.Core.AcknowledgeMode, System.Boolean, System.UInt16, System.Boolean, Microsoft.Extensions.Logging.ILoggerFactory, System.String[])
  type: Constructor
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Listener/BlockingQueueConsumer.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: .ctor
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Listener/BlockingQueueConsumer.cs
    startLine: 46
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Listener
  syntax:
    content: public BlockingQueueConsumer(IConnectionFactory connectionFactory, IMessageHeadersConverter messagePropertiesConverter, ActiveObjectCounter<BlockingQueueConsumer> activeObjectCounter, AcknowledgeMode acknowledgeMode, bool transactional, ushort prefetchCount, bool defaultRequeueRejected, ILoggerFactory loggerFactory, params string[] queues)
    parameters:
    - id: connectionFactory
      type: Steeltoe.Messaging.RabbitMQ.Connection.IConnectionFactory
    - id: messagePropertiesConverter
      type: Steeltoe.Messaging.RabbitMQ.Support.IMessageHeadersConverter
    - id: activeObjectCounter
      type: Steeltoe.Messaging.RabbitMQ.Util.ActiveObjectCounter{Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer}
    - id: acknowledgeMode
      type: Steeltoe.Messaging.RabbitMQ.Core.AcknowledgeMode
    - id: transactional
      type: System.Boolean
    - id: prefetchCount
      type: System.UInt16
    - id: defaultRequeueRejected
      type: System.Boolean
    - id: loggerFactory
      type: Microsoft.Extensions.Logging.ILoggerFactory
    - id: queues
      type: System.String[]
    content.vb: Public Sub New(connectionFactory As IConnectionFactory, messagePropertiesConverter As IMessageHeadersConverter, activeObjectCounter As ActiveObjectCounter(Of BlockingQueueConsumer), acknowledgeMode As AcknowledgeMode, transactional As Boolean, prefetchCount As UShort, defaultRequeueRejected As Boolean, loggerFactory As ILoggerFactory, ParamArray queues As String())
  overload: Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.#ctor*
  nameWithType.vb: BlockingQueueConsumer.BlockingQueueConsumer(IConnectionFactory, IMessageHeadersConverter, ActiveObjectCounter(Of BlockingQueueConsumer), AcknowledgeMode, Boolean, UInt16, Boolean, ILoggerFactory, String())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.BlockingQueueConsumer(Steeltoe.Messaging.RabbitMQ.Connection.IConnectionFactory, Steeltoe.Messaging.RabbitMQ.Support.IMessageHeadersConverter, Steeltoe.Messaging.RabbitMQ.Util.ActiveObjectCounter(Of Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer), Steeltoe.Messaging.RabbitMQ.Core.AcknowledgeMode, System.Boolean, System.UInt16, System.Boolean, Microsoft.Extensions.Logging.ILoggerFactory, System.String())
  name.vb: BlockingQueueConsumer(IConnectionFactory, IMessageHeadersConverter, ActiveObjectCounter(Of BlockingQueueConsumer), AcknowledgeMode, Boolean, UInt16, Boolean, ILoggerFactory, String())
- uid: Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.#ctor(Steeltoe.Messaging.RabbitMQ.Connection.IConnectionFactory,Steeltoe.Messaging.RabbitMQ.Support.IMessageHeadersConverter,Steeltoe.Messaging.RabbitMQ.Util.ActiveObjectCounter{Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer},Steeltoe.Messaging.RabbitMQ.Core.AcknowledgeMode,System.Boolean,System.UInt16,System.Boolean,System.Collections.Generic.Dictionary{System.String,System.Object},Microsoft.Extensions.Logging.ILoggerFactory,System.String[])
  commentId: M:Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.#ctor(Steeltoe.Messaging.RabbitMQ.Connection.IConnectionFactory,Steeltoe.Messaging.RabbitMQ.Support.IMessageHeadersConverter,Steeltoe.Messaging.RabbitMQ.Util.ActiveObjectCounter{Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer},Steeltoe.Messaging.RabbitMQ.Core.AcknowledgeMode,System.Boolean,System.UInt16,System.Boolean,System.Collections.Generic.Dictionary{System.String,System.Object},Microsoft.Extensions.Logging.ILoggerFactory,System.String[])
  id: '#ctor(Steeltoe.Messaging.RabbitMQ.Connection.IConnectionFactory,Steeltoe.Messaging.RabbitMQ.Support.IMessageHeadersConverter,Steeltoe.Messaging.RabbitMQ.Util.ActiveObjectCounter{Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer},Steeltoe.Messaging.RabbitMQ.Core.AcknowledgeMode,System.Boolean,System.UInt16,System.Boolean,System.Collections.Generic.Dictionary{System.String,System.Object},Microsoft.Extensions.Logging.ILoggerFactory,System.String[])'
  parent: Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer
  langs:
  - csharp
  - vb
  name: BlockingQueueConsumer(IConnectionFactory, IMessageHeadersConverter, ActiveObjectCounter<BlockingQueueConsumer>, AcknowledgeMode, Boolean, UInt16, Boolean, Dictionary<String, Object>, ILoggerFactory, String[])
  nameWithType: BlockingQueueConsumer.BlockingQueueConsumer(IConnectionFactory, IMessageHeadersConverter, ActiveObjectCounter<BlockingQueueConsumer>, AcknowledgeMode, Boolean, UInt16, Boolean, Dictionary<String, Object>, ILoggerFactory, String[])
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.BlockingQueueConsumer(Steeltoe.Messaging.RabbitMQ.Connection.IConnectionFactory, Steeltoe.Messaging.RabbitMQ.Support.IMessageHeadersConverter, Steeltoe.Messaging.RabbitMQ.Util.ActiveObjectCounter<Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer>, Steeltoe.Messaging.RabbitMQ.Core.AcknowledgeMode, System.Boolean, System.UInt16, System.Boolean, System.Collections.Generic.Dictionary<System.String, System.Object>, Microsoft.Extensions.Logging.ILoggerFactory, System.String[])
  type: Constructor
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Listener/BlockingQueueConsumer.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: .ctor
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Listener/BlockingQueueConsumer.cs
    startLine: 60
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Listener
  syntax:
    content: public BlockingQueueConsumer(IConnectionFactory connectionFactory, IMessageHeadersConverter messagePropertiesConverter, ActiveObjectCounter<BlockingQueueConsumer> activeObjectCounter, AcknowledgeMode acknowledgeMode, bool transactional, ushort prefetchCount, bool defaultRequeueRejected, Dictionary<string, object> consumerArgs, ILoggerFactory loggerFactory, params string[] queues)
    parameters:
    - id: connectionFactory
      type: Steeltoe.Messaging.RabbitMQ.Connection.IConnectionFactory
    - id: messagePropertiesConverter
      type: Steeltoe.Messaging.RabbitMQ.Support.IMessageHeadersConverter
    - id: activeObjectCounter
      type: Steeltoe.Messaging.RabbitMQ.Util.ActiveObjectCounter{Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer}
    - id: acknowledgeMode
      type: Steeltoe.Messaging.RabbitMQ.Core.AcknowledgeMode
    - id: transactional
      type: System.Boolean
    - id: prefetchCount
      type: System.UInt16
    - id: defaultRequeueRejected
      type: System.Boolean
    - id: consumerArgs
      type: System.Collections.Generic.Dictionary{System.String,System.Object}
    - id: loggerFactory
      type: Microsoft.Extensions.Logging.ILoggerFactory
    - id: queues
      type: System.String[]
    content.vb: Public Sub New(connectionFactory As IConnectionFactory, messagePropertiesConverter As IMessageHeadersConverter, activeObjectCounter As ActiveObjectCounter(Of BlockingQueueConsumer), acknowledgeMode As AcknowledgeMode, transactional As Boolean, prefetchCount As UShort, defaultRequeueRejected As Boolean, consumerArgs As Dictionary(Of String, Object), loggerFactory As ILoggerFactory, ParamArray queues As String())
  overload: Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.#ctor*
  nameWithType.vb: BlockingQueueConsumer.BlockingQueueConsumer(IConnectionFactory, IMessageHeadersConverter, ActiveObjectCounter(Of BlockingQueueConsumer), AcknowledgeMode, Boolean, UInt16, Boolean, Dictionary(Of String, Object), ILoggerFactory, String())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.BlockingQueueConsumer(Steeltoe.Messaging.RabbitMQ.Connection.IConnectionFactory, Steeltoe.Messaging.RabbitMQ.Support.IMessageHeadersConverter, Steeltoe.Messaging.RabbitMQ.Util.ActiveObjectCounter(Of Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer), Steeltoe.Messaging.RabbitMQ.Core.AcknowledgeMode, System.Boolean, System.UInt16, System.Boolean, System.Collections.Generic.Dictionary(Of System.String, System.Object), Microsoft.Extensions.Logging.ILoggerFactory, System.String())
  name.vb: BlockingQueueConsumer(IConnectionFactory, IMessageHeadersConverter, ActiveObjectCounter(Of BlockingQueueConsumer), AcknowledgeMode, Boolean, UInt16, Boolean, Dictionary(Of String, Object), ILoggerFactory, String())
- uid: Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.#ctor(Steeltoe.Messaging.RabbitMQ.Connection.IConnectionFactory,Steeltoe.Messaging.RabbitMQ.Support.IMessageHeadersConverter,Steeltoe.Messaging.RabbitMQ.Util.ActiveObjectCounter{Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer},Steeltoe.Messaging.RabbitMQ.Core.AcknowledgeMode,System.Boolean,System.UInt16,System.Boolean,System.Collections.Generic.Dictionary{System.String,System.Object},System.Boolean,Microsoft.Extensions.Logging.ILoggerFactory,System.String[])
  commentId: M:Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.#ctor(Steeltoe.Messaging.RabbitMQ.Connection.IConnectionFactory,Steeltoe.Messaging.RabbitMQ.Support.IMessageHeadersConverter,Steeltoe.Messaging.RabbitMQ.Util.ActiveObjectCounter{Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer},Steeltoe.Messaging.RabbitMQ.Core.AcknowledgeMode,System.Boolean,System.UInt16,System.Boolean,System.Collections.Generic.Dictionary{System.String,System.Object},System.Boolean,Microsoft.Extensions.Logging.ILoggerFactory,System.String[])
  id: '#ctor(Steeltoe.Messaging.RabbitMQ.Connection.IConnectionFactory,Steeltoe.Messaging.RabbitMQ.Support.IMessageHeadersConverter,Steeltoe.Messaging.RabbitMQ.Util.ActiveObjectCounter{Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer},Steeltoe.Messaging.RabbitMQ.Core.AcknowledgeMode,System.Boolean,System.UInt16,System.Boolean,System.Collections.Generic.Dictionary{System.String,System.Object},System.Boolean,Microsoft.Extensions.Logging.ILoggerFactory,System.String[])'
  parent: Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer
  langs:
  - csharp
  - vb
  name: BlockingQueueConsumer(IConnectionFactory, IMessageHeadersConverter, ActiveObjectCounter<BlockingQueueConsumer>, AcknowledgeMode, Boolean, UInt16, Boolean, Dictionary<String, Object>, Boolean, ILoggerFactory, String[])
  nameWithType: BlockingQueueConsumer.BlockingQueueConsumer(IConnectionFactory, IMessageHeadersConverter, ActiveObjectCounter<BlockingQueueConsumer>, AcknowledgeMode, Boolean, UInt16, Boolean, Dictionary<String, Object>, Boolean, ILoggerFactory, String[])
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.BlockingQueueConsumer(Steeltoe.Messaging.RabbitMQ.Connection.IConnectionFactory, Steeltoe.Messaging.RabbitMQ.Support.IMessageHeadersConverter, Steeltoe.Messaging.RabbitMQ.Util.ActiveObjectCounter<Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer>, Steeltoe.Messaging.RabbitMQ.Core.AcknowledgeMode, System.Boolean, System.UInt16, System.Boolean, System.Collections.Generic.Dictionary<System.String, System.Object>, System.Boolean, Microsoft.Extensions.Logging.ILoggerFactory, System.String[])
  type: Constructor
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Listener/BlockingQueueConsumer.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: .ctor
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Listener/BlockingQueueConsumer.cs
    startLine: 75
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Listener
  syntax:
    content: public BlockingQueueConsumer(IConnectionFactory connectionFactory, IMessageHeadersConverter messagePropertiesConverter, ActiveObjectCounter<BlockingQueueConsumer> activeObjectCounter, AcknowledgeMode acknowledgeMode, bool transactional, ushort prefetchCount, bool defaultRequeueRejected, Dictionary<string, object> consumerArgs, bool exclusive, ILoggerFactory loggerFactory, params string[] queues)
    parameters:
    - id: connectionFactory
      type: Steeltoe.Messaging.RabbitMQ.Connection.IConnectionFactory
    - id: messagePropertiesConverter
      type: Steeltoe.Messaging.RabbitMQ.Support.IMessageHeadersConverter
    - id: activeObjectCounter
      type: Steeltoe.Messaging.RabbitMQ.Util.ActiveObjectCounter{Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer}
    - id: acknowledgeMode
      type: Steeltoe.Messaging.RabbitMQ.Core.AcknowledgeMode
    - id: transactional
      type: System.Boolean
    - id: prefetchCount
      type: System.UInt16
    - id: defaultRequeueRejected
      type: System.Boolean
    - id: consumerArgs
      type: System.Collections.Generic.Dictionary{System.String,System.Object}
    - id: exclusive
      type: System.Boolean
    - id: loggerFactory
      type: Microsoft.Extensions.Logging.ILoggerFactory
    - id: queues
      type: System.String[]
    content.vb: Public Sub New(connectionFactory As IConnectionFactory, messagePropertiesConverter As IMessageHeadersConverter, activeObjectCounter As ActiveObjectCounter(Of BlockingQueueConsumer), acknowledgeMode As AcknowledgeMode, transactional As Boolean, prefetchCount As UShort, defaultRequeueRejected As Boolean, consumerArgs As Dictionary(Of String, Object), exclusive As Boolean, loggerFactory As ILoggerFactory, ParamArray queues As String())
  overload: Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.#ctor*
  nameWithType.vb: BlockingQueueConsumer.BlockingQueueConsumer(IConnectionFactory, IMessageHeadersConverter, ActiveObjectCounter(Of BlockingQueueConsumer), AcknowledgeMode, Boolean, UInt16, Boolean, Dictionary(Of String, Object), Boolean, ILoggerFactory, String())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.BlockingQueueConsumer(Steeltoe.Messaging.RabbitMQ.Connection.IConnectionFactory, Steeltoe.Messaging.RabbitMQ.Support.IMessageHeadersConverter, Steeltoe.Messaging.RabbitMQ.Util.ActiveObjectCounter(Of Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer), Steeltoe.Messaging.RabbitMQ.Core.AcknowledgeMode, System.Boolean, System.UInt16, System.Boolean, System.Collections.Generic.Dictionary(Of System.String, System.Object), System.Boolean, Microsoft.Extensions.Logging.ILoggerFactory, System.String())
  name.vb: BlockingQueueConsumer(IConnectionFactory, IMessageHeadersConverter, ActiveObjectCounter(Of BlockingQueueConsumer), AcknowledgeMode, Boolean, UInt16, Boolean, Dictionary(Of String, Object), Boolean, ILoggerFactory, String())
- uid: Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.#ctor(Steeltoe.Messaging.RabbitMQ.Connection.IConnectionFactory,Steeltoe.Messaging.RabbitMQ.Support.IMessageHeadersConverter,Steeltoe.Messaging.RabbitMQ.Util.ActiveObjectCounter{Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer},Steeltoe.Messaging.RabbitMQ.Core.AcknowledgeMode,System.Boolean,System.UInt16,System.Boolean,System.Collections.Generic.Dictionary{System.String,System.Object},System.Boolean,System.Boolean,Microsoft.Extensions.Logging.ILoggerFactory,System.String[])
  commentId: M:Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.#ctor(Steeltoe.Messaging.RabbitMQ.Connection.IConnectionFactory,Steeltoe.Messaging.RabbitMQ.Support.IMessageHeadersConverter,Steeltoe.Messaging.RabbitMQ.Util.ActiveObjectCounter{Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer},Steeltoe.Messaging.RabbitMQ.Core.AcknowledgeMode,System.Boolean,System.UInt16,System.Boolean,System.Collections.Generic.Dictionary{System.String,System.Object},System.Boolean,System.Boolean,Microsoft.Extensions.Logging.ILoggerFactory,System.String[])
  id: '#ctor(Steeltoe.Messaging.RabbitMQ.Connection.IConnectionFactory,Steeltoe.Messaging.RabbitMQ.Support.IMessageHeadersConverter,Steeltoe.Messaging.RabbitMQ.Util.ActiveObjectCounter{Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer},Steeltoe.Messaging.RabbitMQ.Core.AcknowledgeMode,System.Boolean,System.UInt16,System.Boolean,System.Collections.Generic.Dictionary{System.String,System.Object},System.Boolean,System.Boolean,Microsoft.Extensions.Logging.ILoggerFactory,System.String[])'
  parent: Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer
  langs:
  - csharp
  - vb
  name: BlockingQueueConsumer(IConnectionFactory, IMessageHeadersConverter, ActiveObjectCounter<BlockingQueueConsumer>, AcknowledgeMode, Boolean, UInt16, Boolean, Dictionary<String, Object>, Boolean, Boolean, ILoggerFactory, String[])
  nameWithType: BlockingQueueConsumer.BlockingQueueConsumer(IConnectionFactory, IMessageHeadersConverter, ActiveObjectCounter<BlockingQueueConsumer>, AcknowledgeMode, Boolean, UInt16, Boolean, Dictionary<String, Object>, Boolean, Boolean, ILoggerFactory, String[])
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.BlockingQueueConsumer(Steeltoe.Messaging.RabbitMQ.Connection.IConnectionFactory, Steeltoe.Messaging.RabbitMQ.Support.IMessageHeadersConverter, Steeltoe.Messaging.RabbitMQ.Util.ActiveObjectCounter<Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer>, Steeltoe.Messaging.RabbitMQ.Core.AcknowledgeMode, System.Boolean, System.UInt16, System.Boolean, System.Collections.Generic.Dictionary<System.String, System.Object>, System.Boolean, System.Boolean, Microsoft.Extensions.Logging.ILoggerFactory, System.String[])
  type: Constructor
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Listener/BlockingQueueConsumer.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: .ctor
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Listener/BlockingQueueConsumer.cs
    startLine: 91
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Listener
  syntax:
    content: public BlockingQueueConsumer(IConnectionFactory connectionFactory, IMessageHeadersConverter messagePropertiesConverter, ActiveObjectCounter<BlockingQueueConsumer> activeObjectCounter, AcknowledgeMode acknowledgeMode, bool transactional, ushort prefetchCount, bool defaultRequeueRejected, Dictionary<string, object> consumerArgs, bool noLocal, bool exclusive, ILoggerFactory loggerFactory, params string[] queues)
    parameters:
    - id: connectionFactory
      type: Steeltoe.Messaging.RabbitMQ.Connection.IConnectionFactory
    - id: messagePropertiesConverter
      type: Steeltoe.Messaging.RabbitMQ.Support.IMessageHeadersConverter
    - id: activeObjectCounter
      type: Steeltoe.Messaging.RabbitMQ.Util.ActiveObjectCounter{Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer}
    - id: acknowledgeMode
      type: Steeltoe.Messaging.RabbitMQ.Core.AcknowledgeMode
    - id: transactional
      type: System.Boolean
    - id: prefetchCount
      type: System.UInt16
    - id: defaultRequeueRejected
      type: System.Boolean
    - id: consumerArgs
      type: System.Collections.Generic.Dictionary{System.String,System.Object}
    - id: noLocal
      type: System.Boolean
    - id: exclusive
      type: System.Boolean
    - id: loggerFactory
      type: Microsoft.Extensions.Logging.ILoggerFactory
    - id: queues
      type: System.String[]
    content.vb: Public Sub New(connectionFactory As IConnectionFactory, messagePropertiesConverter As IMessageHeadersConverter, activeObjectCounter As ActiveObjectCounter(Of BlockingQueueConsumer), acknowledgeMode As AcknowledgeMode, transactional As Boolean, prefetchCount As UShort, defaultRequeueRejected As Boolean, consumerArgs As Dictionary(Of String, Object), noLocal As Boolean, exclusive As Boolean, loggerFactory As ILoggerFactory, ParamArray queues As String())
  overload: Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.#ctor*
  nameWithType.vb: BlockingQueueConsumer.BlockingQueueConsumer(IConnectionFactory, IMessageHeadersConverter, ActiveObjectCounter(Of BlockingQueueConsumer), AcknowledgeMode, Boolean, UInt16, Boolean, Dictionary(Of String, Object), Boolean, Boolean, ILoggerFactory, String())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.BlockingQueueConsumer(Steeltoe.Messaging.RabbitMQ.Connection.IConnectionFactory, Steeltoe.Messaging.RabbitMQ.Support.IMessageHeadersConverter, Steeltoe.Messaging.RabbitMQ.Util.ActiveObjectCounter(Of Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer), Steeltoe.Messaging.RabbitMQ.Core.AcknowledgeMode, System.Boolean, System.UInt16, System.Boolean, System.Collections.Generic.Dictionary(Of System.String, System.Object), System.Boolean, System.Boolean, Microsoft.Extensions.Logging.ILoggerFactory, System.String())
  name.vb: BlockingQueueConsumer(IConnectionFactory, IMessageHeadersConverter, ActiveObjectCounter(Of BlockingQueueConsumer), AcknowledgeMode, Boolean, UInt16, Boolean, Dictionary(Of String, Object), Boolean, Boolean, ILoggerFactory, String())
- uid: Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.Logger
  commentId: P:Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.Logger
  id: Logger
  parent: Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer
  langs:
  - csharp
  - vb
  name: Logger
  nameWithType: BlockingQueueConsumer.Logger
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.Logger
  type: Property
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Listener/BlockingQueueConsumer.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Logger
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Listener/BlockingQueueConsumer.cs
    startLine: 128
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Listener
  syntax:
    content: public ILogger<BlockingQueueConsumer> Logger { get; }
    parameters: []
    return:
      type: Microsoft.Extensions.Logging.ILogger{Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer}
    content.vb: Public ReadOnly Property Logger As ILogger(Of BlockingQueueConsumer)
  overload: Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.Logger*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.MessageHeadersConverter
  commentId: P:Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.MessageHeadersConverter
  id: MessageHeadersConverter
  parent: Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer
  langs:
  - csharp
  - vb
  name: MessageHeadersConverter
  nameWithType: BlockingQueueConsumer.MessageHeadersConverter
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.MessageHeadersConverter
  type: Property
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Listener/BlockingQueueConsumer.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: MessageHeadersConverter
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Listener/BlockingQueueConsumer.cs
    startLine: 130
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Listener
  syntax:
    content: public IMessageHeadersConverter MessageHeadersConverter { get; set; }
    parameters: []
    return:
      type: Steeltoe.Messaging.RabbitMQ.Support.IMessageHeadersConverter
    content.vb: Public Property MessageHeadersConverter As IMessageHeadersConverter
  overload: Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.MessageHeadersConverter*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.Queue
  commentId: P:Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.Queue
  id: Queue
  parent: Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer
  langs:
  - csharp
  - vb
  name: Queue
  nameWithType: BlockingQueueConsumer.Queue
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.Queue
  type: Property
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Listener/BlockingQueueConsumer.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Queue
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Listener/BlockingQueueConsumer.cs
    startLine: 132
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Listener
  syntax:
    content: public BlockingCollection<Delivery> Queue { get; }
    parameters: []
    return:
      type: System.Collections.Concurrent.BlockingCollection{Steeltoe.Messaging.RabbitMQ.Support.Delivery}
    content.vb: Public ReadOnly Property Queue As BlockingCollection(Of Delivery)
  overload: Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.Queue*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.LoggerFactory
  commentId: P:Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.LoggerFactory
  id: LoggerFactory
  parent: Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer
  langs:
  - csharp
  - vb
  name: LoggerFactory
  nameWithType: BlockingQueueConsumer.LoggerFactory
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.LoggerFactory
  type: Property
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Listener/BlockingQueueConsumer.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: LoggerFactory
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Listener/BlockingQueueConsumer.cs
    startLine: 134
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Listener
  syntax:
    content: public ILoggerFactory LoggerFactory { get; }
    parameters: []
    return:
      type: Microsoft.Extensions.Logging.ILoggerFactory
    content.vb: Public ReadOnly Property LoggerFactory As ILoggerFactory
  overload: Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.LoggerFactory*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.ConnectionFactory
  commentId: P:Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.ConnectionFactory
  id: ConnectionFactory
  parent: Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer
  langs:
  - csharp
  - vb
  name: ConnectionFactory
  nameWithType: BlockingQueueConsumer.ConnectionFactory
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.ConnectionFactory
  type: Property
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Listener/BlockingQueueConsumer.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: ConnectionFactory
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Listener/BlockingQueueConsumer.cs
    startLine: 136
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Listener
  syntax:
    content: public IConnectionFactory ConnectionFactory { get; }
    parameters: []
    return:
      type: Steeltoe.Messaging.RabbitMQ.Connection.IConnectionFactory
    content.vb: Public ReadOnly Property ConnectionFactory As IConnectionFactory
  overload: Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.ConnectionFactory*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.ActiveObjectCounter
  commentId: P:Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.ActiveObjectCounter
  id: ActiveObjectCounter
  parent: Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer
  langs:
  - csharp
  - vb
  name: ActiveObjectCounter
  nameWithType: BlockingQueueConsumer.ActiveObjectCounter
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.ActiveObjectCounter
  type: Property
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Listener/BlockingQueueConsumer.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: ActiveObjectCounter
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Listener/BlockingQueueConsumer.cs
    startLine: 138
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Listener
  syntax:
    content: public ActiveObjectCounter<BlockingQueueConsumer> ActiveObjectCounter { get; }
    parameters: []
    return:
      type: Steeltoe.Messaging.RabbitMQ.Util.ActiveObjectCounter{Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer}
    content.vb: Public ReadOnly Property ActiveObjectCounter As ActiveObjectCounter(Of BlockingQueueConsumer)
  overload: Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.ActiveObjectCounter*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.Transactional
  commentId: P:Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.Transactional
  id: Transactional
  parent: Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer
  langs:
  - csharp
  - vb
  name: Transactional
  nameWithType: BlockingQueueConsumer.Transactional
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.Transactional
  type: Property
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Listener/BlockingQueueConsumer.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Transactional
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Listener/BlockingQueueConsumer.cs
    startLine: 140
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Listener
  syntax:
    content: public bool Transactional { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property Transactional As Boolean
  overload: Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.Transactional*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.PrefetchCount
  commentId: P:Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.PrefetchCount
  id: PrefetchCount
  parent: Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer
  langs:
  - csharp
  - vb
  name: PrefetchCount
  nameWithType: BlockingQueueConsumer.PrefetchCount
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.PrefetchCount
  type: Property
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Listener/BlockingQueueConsumer.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: PrefetchCount
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Listener/BlockingQueueConsumer.cs
    startLine: 142
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Listener
  syntax:
    content: public ushort PrefetchCount { get; }
    parameters: []
    return:
      type: System.UInt16
    content.vb: Public ReadOnly Property PrefetchCount As UShort
  overload: Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.PrefetchCount*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.Queues
  commentId: P:Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.Queues
  id: Queues
  parent: Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer
  langs:
  - csharp
  - vb
  name: Queues
  nameWithType: BlockingQueueConsumer.Queues
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.Queues
  type: Property
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Listener/BlockingQueueConsumer.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Queues
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Listener/BlockingQueueConsumer.cs
    startLine: 144
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Listener
  syntax:
    content: public List<string> Queues { get; }
    parameters: []
    return:
      type: System.Collections.Generic.List{System.String}
    content.vb: Public ReadOnly Property Queues As List(Of String)
  overload: Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.Queues*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.AcknowledgeMode
  commentId: P:Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.AcknowledgeMode
  id: AcknowledgeMode
  parent: Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer
  langs:
  - csharp
  - vb
  name: AcknowledgeMode
  nameWithType: BlockingQueueConsumer.AcknowledgeMode
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.AcknowledgeMode
  type: Property
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Listener/BlockingQueueConsumer.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: AcknowledgeMode
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Listener/BlockingQueueConsumer.cs
    startLine: 146
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Listener
  syntax:
    content: public AcknowledgeMode AcknowledgeMode { get; }
    parameters: []
    return:
      type: Steeltoe.Messaging.RabbitMQ.Core.AcknowledgeMode
    content.vb: Public ReadOnly Property AcknowledgeMode As AcknowledgeMode
  overload: Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.AcknowledgeMode*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.Channel
  commentId: P:Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.Channel
  id: Channel
  parent: Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer
  langs:
  - csharp
  - vb
  name: Channel
  nameWithType: BlockingQueueConsumer.Channel
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.Channel
  type: Property
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Listener/BlockingQueueConsumer.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Channel
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Listener/BlockingQueueConsumer.cs
    startLine: 148
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Listener
  syntax:
    content: public IModel Channel { get; }
    parameters: []
    return:
      type: RabbitMQ.Client.IModel
    content.vb: Public ReadOnly Property Channel As IModel
  overload: Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.Channel*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.Exclusive
  commentId: P:Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.Exclusive
  id: Exclusive
  parent: Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer
  langs:
  - csharp
  - vb
  name: Exclusive
  nameWithType: BlockingQueueConsumer.Exclusive
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.Exclusive
  type: Property
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Listener/BlockingQueueConsumer.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Exclusive
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Listener/BlockingQueueConsumer.cs
    startLine: 150
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Listener
  syntax:
    content: public bool Exclusive { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property Exclusive As Boolean
  overload: Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.Exclusive*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.NoLocal
  commentId: P:Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.NoLocal
  id: NoLocal
  parent: Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer
  langs:
  - csharp
  - vb
  name: NoLocal
  nameWithType: BlockingQueueConsumer.NoLocal
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.NoLocal
  type: Property
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Listener/BlockingQueueConsumer.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: NoLocal
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Listener/BlockingQueueConsumer.cs
    startLine: 152
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Listener
  syntax:
    content: public bool NoLocal { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property NoLocal As Boolean
  overload: Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.NoLocal*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.Cancel
  commentId: P:Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.Cancel
  id: Cancel
  parent: Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer
  langs:
  - csharp
  - vb
  name: Cancel
  nameWithType: BlockingQueueConsumer.Cancel
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.Cancel
  type: Property
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Listener/BlockingQueueConsumer.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Cancel
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Listener/BlockingQueueConsumer.cs
    startLine: 154
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Listener
  syntax:
    content: public AtomicBoolean Cancel { get; }
    parameters: []
    return:
      type: Steeltoe.Common.Util.AtomicBoolean
    content.vb: Public ReadOnly Property Cancel As AtomicBoolean
  overload: Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.Cancel*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.DefaultRequeueRejected
  commentId: P:Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.DefaultRequeueRejected
  id: DefaultRequeueRejected
  parent: Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer
  langs:
  - csharp
  - vb
  name: DefaultRequeueRejected
  nameWithType: BlockingQueueConsumer.DefaultRequeueRejected
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.DefaultRequeueRejected
  type: Property
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Listener/BlockingQueueConsumer.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: DefaultRequeueRejected
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Listener/BlockingQueueConsumer.cs
    startLine: 156
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Listener
  syntax:
    content: public bool DefaultRequeueRejected { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property DefaultRequeueRejected As Boolean
  overload: Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.DefaultRequeueRejected*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.ConsumerArgs
  commentId: P:Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.ConsumerArgs
  id: ConsumerArgs
  parent: Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer
  langs:
  - csharp
  - vb
  name: ConsumerArgs
  nameWithType: BlockingQueueConsumer.ConsumerArgs
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.ConsumerArgs
  type: Property
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Listener/BlockingQueueConsumer.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: ConsumerArgs
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Listener/BlockingQueueConsumer.cs
    startLine: 158
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Listener
  syntax:
    content: public Dictionary<string, object> ConsumerArgs { get; }
    parameters: []
    return:
      type: System.Collections.Generic.Dictionary{System.String,System.Object}
    content.vb: Public ReadOnly Property ConsumerArgs As Dictionary(Of String, Object)
  overload: Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.ConsumerArgs*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.Shutdown
  commentId: P:Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.Shutdown
  id: Shutdown
  parent: Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer
  langs:
  - csharp
  - vb
  name: Shutdown
  nameWithType: BlockingQueueConsumer.Shutdown
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.Shutdown
  type: Property
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Listener/BlockingQueueConsumer.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Shutdown
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Listener/BlockingQueueConsumer.cs
    startLine: 160
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Listener
  syntax:
    content: public ShutdownEventArgs Shutdown { get; }
    parameters: []
    return:
      type: RabbitMQ.Client.ShutdownEventArgs
    content.vb: Public ReadOnly Property Shutdown As ShutdownEventArgs
  overload: Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.Shutdown*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.DeliveryTags
  commentId: P:Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.DeliveryTags
  id: DeliveryTags
  parent: Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer
  langs:
  - csharp
  - vb
  name: DeliveryTags
  nameWithType: BlockingQueueConsumer.DeliveryTags
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.DeliveryTags
  type: Property
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Listener/BlockingQueueConsumer.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: DeliveryTags
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Listener/BlockingQueueConsumer.cs
    startLine: 162
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Listener
  syntax:
    content: public HashSet<ulong> DeliveryTags { get; }
    parameters: []
    return:
      type: System.Collections.Generic.HashSet{System.UInt64}
    content.vb: Public ReadOnly Property DeliveryTags As HashSet(Of ULong)
  overload: Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.DeliveryTags*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.AbortStarted
  commentId: P:Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.AbortStarted
  id: AbortStarted
  parent: Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer
  langs:
  - csharp
  - vb
  name: AbortStarted
  nameWithType: BlockingQueueConsumer.AbortStarted
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.AbortStarted
  type: Property
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Listener/BlockingQueueConsumer.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: AbortStarted
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Listener/BlockingQueueConsumer.cs
    startLine: 164
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Listener
  syntax:
    content: public long AbortStarted { get; }
    parameters: []
    return:
      type: System.Int64
    content.vb: Public ReadOnly Property AbortStarted As Long
  overload: Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.AbortStarted*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.NormalCancel
  commentId: P:Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.NormalCancel
  id: NormalCancel
  parent: Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer
  langs:
  - csharp
  - vb
  name: NormalCancel
  nameWithType: BlockingQueueConsumer.NormalCancel
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.NormalCancel
  type: Property
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Listener/BlockingQueueConsumer.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: NormalCancel
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Listener/BlockingQueueConsumer.cs
    startLine: 166
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Listener
  syntax:
    content: public bool NormalCancel { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property NormalCancel As Boolean
  overload: Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.NormalCancel*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.Declaring
  commentId: P:Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.Declaring
  id: Declaring
  parent: Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer
  langs:
  - csharp
  - vb
  name: Declaring
  nameWithType: BlockingQueueConsumer.Declaring
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.Declaring
  type: Property
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Listener/BlockingQueueConsumer.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Declaring
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Listener/BlockingQueueConsumer.cs
    startLine: 168
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Listener
  syntax:
    content: public bool Declaring { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property Declaring As Boolean
  overload: Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.Declaring*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.ShutdownTimeout
  commentId: P:Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.ShutdownTimeout
  id: ShutdownTimeout
  parent: Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer
  langs:
  - csharp
  - vb
  name: ShutdownTimeout
  nameWithType: BlockingQueueConsumer.ShutdownTimeout
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.ShutdownTimeout
  type: Property
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Listener/BlockingQueueConsumer.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: ShutdownTimeout
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Listener/BlockingQueueConsumer.cs
    startLine: 170
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Listener
  syntax:
    content: public int ShutdownTimeout { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property ShutdownTimeout As Integer
  overload: Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.ShutdownTimeout*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.DeclarationRetries
  commentId: P:Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.DeclarationRetries
  id: DeclarationRetries
  parent: Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer
  langs:
  - csharp
  - vb
  name: DeclarationRetries
  nameWithType: BlockingQueueConsumer.DeclarationRetries
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.DeclarationRetries
  type: Property
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Listener/BlockingQueueConsumer.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: DeclarationRetries
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Listener/BlockingQueueConsumer.cs
    startLine: 172
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Listener
  syntax:
    content: public int DeclarationRetries { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property DeclarationRetries As Integer
  overload: Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.DeclarationRetries*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.FailedDeclarationRetryInterval
  commentId: P:Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.FailedDeclarationRetryInterval
  id: FailedDeclarationRetryInterval
  parent: Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer
  langs:
  - csharp
  - vb
  name: FailedDeclarationRetryInterval
  nameWithType: BlockingQueueConsumer.FailedDeclarationRetryInterval
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.FailedDeclarationRetryInterval
  type: Property
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Listener/BlockingQueueConsumer.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: FailedDeclarationRetryInterval
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Listener/BlockingQueueConsumer.cs
    startLine: 174
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Listener
  syntax:
    content: public int FailedDeclarationRetryInterval { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property FailedDeclarationRetryInterval As Integer
  overload: Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.FailedDeclarationRetryInterval*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.RetryDeclarationInterval
  commentId: P:Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.RetryDeclarationInterval
  id: RetryDeclarationInterval
  parent: Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer
  langs:
  - csharp
  - vb
  name: RetryDeclarationInterval
  nameWithType: BlockingQueueConsumer.RetryDeclarationInterval
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.RetryDeclarationInterval
  type: Property
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Listener/BlockingQueueConsumer.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: RetryDeclarationInterval
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Listener/BlockingQueueConsumer.cs
    startLine: 176
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Listener
  syntax:
    content: public int RetryDeclarationInterval { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property RetryDeclarationInterval As Integer
  overload: Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.RetryDeclarationInterval*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.TagStrategy
  commentId: P:Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.TagStrategy
  id: TagStrategy
  parent: Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer
  langs:
  - csharp
  - vb
  name: TagStrategy
  nameWithType: BlockingQueueConsumer.TagStrategy
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.TagStrategy
  type: Property
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Listener/BlockingQueueConsumer.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: TagStrategy
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Listener/BlockingQueueConsumer.cs
    startLine: 178
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Listener
  syntax:
    content: public IConsumerTagStrategy TagStrategy { get; set; }
    parameters: []
    return:
      type: Steeltoe.Messaging.RabbitMQ.Core.IConsumerTagStrategy
    content.vb: Public Property TagStrategy As IConsumerTagStrategy
  overload: Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.TagStrategy*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.BackOffExecution
  commentId: P:Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.BackOffExecution
  id: BackOffExecution
  parent: Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer
  langs:
  - csharp
  - vb
  name: BackOffExecution
  nameWithType: BlockingQueueConsumer.BackOffExecution
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.BackOffExecution
  type: Property
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Listener/BlockingQueueConsumer.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: BackOffExecution
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Listener/BlockingQueueConsumer.cs
    startLine: 180
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Listener
  syntax:
    content: public IBackOffExecution BackOffExecution { get; set; }
    parameters: []
    return:
      type: Steeltoe.Common.Util.IBackOffExecution
    content.vb: Public Property BackOffExecution As IBackOffExecution
  overload: Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.BackOffExecution*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.LocallyTransacted
  commentId: P:Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.LocallyTransacted
  id: LocallyTransacted
  parent: Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer
  langs:
  - csharp
  - vb
  name: LocallyTransacted
  nameWithType: BlockingQueueConsumer.LocallyTransacted
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.LocallyTransacted
  type: Property
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Listener/BlockingQueueConsumer.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: LocallyTransacted
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Listener/BlockingQueueConsumer.cs
    startLine: 182
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Listener
  syntax:
    content: public bool LocallyTransacted { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property LocallyTransacted As Boolean
  overload: Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.LocallyTransacted*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.QueueCount
  commentId: P:Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.QueueCount
  id: QueueCount
  parent: Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer
  langs:
  - csharp
  - vb
  name: QueueCount
  nameWithType: BlockingQueueConsumer.QueueCount
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.QueueCount
  type: Property
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Listener/BlockingQueueConsumer.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: QueueCount
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Listener/BlockingQueueConsumer.cs
    startLine: 184
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Listener
  syntax:
    content: public int QueueCount { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property QueueCount As Integer
  overload: Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.QueueCount*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.MissingQueues
  commentId: P:Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.MissingQueues
  id: MissingQueues
  parent: Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer
  langs:
  - csharp
  - vb
  name: MissingQueues
  nameWithType: BlockingQueueConsumer.MissingQueues
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.MissingQueues
  type: Property
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Listener/BlockingQueueConsumer.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: MissingQueues
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Listener/BlockingQueueConsumer.cs
    startLine: 186
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Listener
  syntax:
    content: public HashSet<string> MissingQueues { get; }
    parameters: []
    return:
      type: System.Collections.Generic.HashSet{System.String}
    content.vb: Public ReadOnly Property MissingQueues As HashSet(Of String)
  overload: Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.MissingQueues*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.LastRetryDeclaration
  commentId: P:Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.LastRetryDeclaration
  id: LastRetryDeclaration
  parent: Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer
  langs:
  - csharp
  - vb
  name: LastRetryDeclaration
  nameWithType: BlockingQueueConsumer.LastRetryDeclaration
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.LastRetryDeclaration
  type: Property
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Listener/BlockingQueueConsumer.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: LastRetryDeclaration
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Listener/BlockingQueueConsumer.cs
    startLine: 188
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Listener
  syntax:
    content: public long LastRetryDeclaration { get; set; }
    parameters: []
    return:
      type: System.Int64
    content.vb: Public Property LastRetryDeclaration As Long
  overload: Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.LastRetryDeclaration*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.ResourceHolder
  commentId: P:Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.ResourceHolder
  id: ResourceHolder
  parent: Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer
  langs:
  - csharp
  - vb
  name: ResourceHolder
  nameWithType: BlockingQueueConsumer.ResourceHolder
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.ResourceHolder
  type: Property
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Listener/BlockingQueueConsumer.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: ResourceHolder
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Listener/BlockingQueueConsumer.cs
    startLine: 190
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Listener
  syntax:
    content: public RabbitResourceHolder ResourceHolder { get; set; }
    parameters: []
    return:
      type: Steeltoe.Messaging.RabbitMQ.Connection.RabbitResourceHolder
    content.vb: Public Property ResourceHolder As RabbitResourceHolder
  overload: Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.ResourceHolder*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.GetConsumerTags
  commentId: M:Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.GetConsumerTags
  id: GetConsumerTags
  parent: Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer
  langs:
  - csharp
  - vb
  name: GetConsumerTags()
  nameWithType: BlockingQueueConsumer.GetConsumerTags()
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.GetConsumerTags()
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Listener/BlockingQueueConsumer.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: GetConsumerTags
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Listener/BlockingQueueConsumer.cs
    startLine: 194
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Listener
  syntax:
    content: public List<string> GetConsumerTags()
    return:
      type: System.Collections.Generic.List{System.String}
    content.vb: Public Function GetConsumerTags As List(Of String)
  overload: Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.GetConsumerTags*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.ClearDeliveryTags
  commentId: M:Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.ClearDeliveryTags
  id: ClearDeliveryTags
  parent: Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer
  langs:
  - csharp
  - vb
  name: ClearDeliveryTags()
  nameWithType: BlockingQueueConsumer.ClearDeliveryTags()
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.ClearDeliveryTags()
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Listener/BlockingQueueConsumer.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: ClearDeliveryTags
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Listener/BlockingQueueConsumer.cs
    startLine: 203
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Listener
  syntax:
    content: public void ClearDeliveryTags()
    content.vb: Public Sub ClearDeliveryTags
  overload: Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.ClearDeliveryTags*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.NextMessage
  commentId: M:Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.NextMessage
  id: NextMessage
  parent: Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer
  langs:
  - csharp
  - vb
  name: NextMessage()
  nameWithType: BlockingQueueConsumer.NextMessage()
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.NextMessage()
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Listener/BlockingQueueConsumer.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: NextMessage
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Listener/BlockingQueueConsumer.cs
    startLine: 208
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Listener
  syntax:
    content: public IMessage NextMessage()
    return:
      type: Steeltoe.Messaging.IMessage
    content.vb: Public Function NextMessage As IMessage
  overload: Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.NextMessage*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.NextMessage(System.Int32)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.NextMessage(System.Int32)
  id: NextMessage(System.Int32)
  parent: Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer
  langs:
  - csharp
  - vb
  name: NextMessage(Int32)
  nameWithType: BlockingQueueConsumer.NextMessage(Int32)
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.NextMessage(System.Int32)
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Listener/BlockingQueueConsumer.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: NextMessage
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Listener/BlockingQueueConsumer.cs
    startLine: 214
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Listener
  syntax:
    content: public IMessage NextMessage(int timeout)
    parameters:
    - id: timeout
      type: System.Int32
    return:
      type: Steeltoe.Messaging.IMessage
    content.vb: Public Function NextMessage(timeout As Integer) As IMessage
  overload: Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.NextMessage*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.Start
  commentId: M:Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.Start
  id: Start
  parent: Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer
  langs:
  - csharp
  - vb
  name: Start()
  nameWithType: BlockingQueueConsumer.Start()
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.Start()
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Listener/BlockingQueueConsumer.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Start
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Listener/BlockingQueueConsumer.cs
    startLine: 233
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Listener
  syntax:
    content: public void Start()
    content.vb: Public Sub Start
  overload: Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.Start*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.Stop
  commentId: M:Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.Stop
  id: Stop
  parent: Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer
  langs:
  - csharp
  - vb
  name: Stop()
  nameWithType: BlockingQueueConsumer.Stop()
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.Stop()
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Listener/BlockingQueueConsumer.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Stop
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Listener/BlockingQueueConsumer.cs
    startLine: 254
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Listener
  syntax:
    content: public void Stop()
    content.vb: Public Sub Stop
  overload: Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.Stop*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.RollbackOnExceptionIfNecessary(System.Exception)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.RollbackOnExceptionIfNecessary(System.Exception)
  id: RollbackOnExceptionIfNecessary(System.Exception)
  parent: Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer
  langs:
  - csharp
  - vb
  name: RollbackOnExceptionIfNecessary(Exception)
  nameWithType: BlockingQueueConsumer.RollbackOnExceptionIfNecessary(Exception)
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.RollbackOnExceptionIfNecessary(System.Exception)
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Listener/BlockingQueueConsumer.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: RollbackOnExceptionIfNecessary
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Listener/BlockingQueueConsumer.cs
    startLine: 281
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Listener
  syntax:
    content: public void RollbackOnExceptionIfNecessary(Exception ex)
    parameters:
    - id: ex
      type: System.Exception
    content.vb: Public Sub RollbackOnExceptionIfNecessary(ex As Exception)
  overload: Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.RollbackOnExceptionIfNecessary*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.CommitIfNecessary(System.Boolean)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.CommitIfNecessary(System.Boolean)
  id: CommitIfNecessary(System.Boolean)
  parent: Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer
  langs:
  - csharp
  - vb
  name: CommitIfNecessary(Boolean)
  nameWithType: BlockingQueueConsumer.CommitIfNecessary(Boolean)
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.CommitIfNecessary(System.Boolean)
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Listener/BlockingQueueConsumer.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: CommitIfNecessary
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Listener/BlockingQueueConsumer.cs
    startLine: 318
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Listener
  syntax:
    content: public bool CommitIfNecessary(bool localTx)
    parameters:
    - id: localTx
      type: System.Boolean
    return:
      type: System.Boolean
    content.vb: Public Function CommitIfNecessary(localTx As Boolean) As Boolean
  overload: Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.CommitIfNecessary*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.ToString
  commentId: M:Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.ToString
  id: ToString
  parent: Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: BlockingQueueConsumer.ToString()
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.ToString()
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Listener/BlockingQueueConsumer.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: ToString
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Listener/BlockingQueueConsumer.cs
    startLine: 349
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Listener
  syntax:
    content: public override string ToString()
    return:
      type: System.String
    content.vb: Public Overrides Function ToString As String
  overridden: System.Object.ToString
  overload: Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.HasDelivery
  commentId: P:Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.HasDelivery
  id: HasDelivery
  parent: Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer
  langs:
  - csharp
  - vb
  name: HasDelivery
  nameWithType: BlockingQueueConsumer.HasDelivery
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.HasDelivery
  type: Property
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Listener/BlockingQueueConsumer.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: HasDelivery
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Listener/BlockingQueueConsumer.cs
    startLine: 362
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Listener
  syntax:
    content: protected bool HasDelivery { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Protected ReadOnly Property HasDelivery As Boolean
  overload: Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.HasDelivery*
  modifiers.csharp:
  - protected
  - get
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.Cancelled
  commentId: P:Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.Cancelled
  id: Cancelled
  parent: Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer
  langs:
  - csharp
  - vb
  name: Cancelled
  nameWithType: BlockingQueueConsumer.Cancelled
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.Cancelled
  type: Property
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Listener/BlockingQueueConsumer.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Cancelled
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Listener/BlockingQueueConsumer.cs
    startLine: 364
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Listener
  syntax:
    content: protected bool Cancelled { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Protected ReadOnly Property Cancelled As Boolean
  overload: Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.Cancelled*
  modifiers.csharp:
  - protected
  - get
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.BasicCancel
  commentId: M:Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.BasicCancel
  id: BasicCancel
  parent: Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer
  langs:
  - csharp
  - vb
  name: BasicCancel()
  nameWithType: BlockingQueueConsumer.BasicCancel()
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.BasicCancel()
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Listener/BlockingQueueConsumer.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: BasicCancel
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Listener/BlockingQueueConsumer.cs
    startLine: 374
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Listener
  syntax:
    content: protected void BasicCancel()
    content.vb: Protected Sub BasicCancel
  overload: Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.BasicCancel*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.BasicCancel(System.Boolean)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.BasicCancel(System.Boolean)
  id: BasicCancel(System.Boolean)
  parent: Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer
  langs:
  - csharp
  - vb
  name: BasicCancel(Boolean)
  nameWithType: BlockingQueueConsumer.BasicCancel(Boolean)
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.BasicCancel(System.Boolean)
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Listener/BlockingQueueConsumer.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: BasicCancel
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Listener/BlockingQueueConsumer.cs
    startLine: 379
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Listener
  syntax:
    content: protected void BasicCancel(bool expected)
    parameters:
    - id: expected
      type: System.Boolean
    content.vb: Protected Sub BasicCancel(expected As Boolean)
  overload: Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.BasicCancel*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
references:
- uid: Steeltoe.Messaging.RabbitMQ.Listener
  commentId: N:Steeltoe.Messaging.RabbitMQ.Listener
  name: Steeltoe.Messaging.RabbitMQ.Listener
  nameWithType: Steeltoe.Messaging.RabbitMQ.Listener
  fullName: Steeltoe.Messaging.RabbitMQ.Listener
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.#ctor*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.#ctor
  name: BlockingQueueConsumer
  nameWithType: BlockingQueueConsumer.BlockingQueueConsumer
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.BlockingQueueConsumer
- uid: Steeltoe.Messaging.RabbitMQ.Connection.IConnectionFactory
  commentId: T:Steeltoe.Messaging.RabbitMQ.Connection.IConnectionFactory
  parent: Steeltoe.Messaging.RabbitMQ.Connection
  name: IConnectionFactory
  nameWithType: IConnectionFactory
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.IConnectionFactory
- uid: Steeltoe.Messaging.RabbitMQ.Support.IMessageHeadersConverter
  commentId: T:Steeltoe.Messaging.RabbitMQ.Support.IMessageHeadersConverter
  parent: Steeltoe.Messaging.RabbitMQ.Support
  name: IMessageHeadersConverter
  nameWithType: IMessageHeadersConverter
  fullName: Steeltoe.Messaging.RabbitMQ.Support.IMessageHeadersConverter
- uid: Steeltoe.Messaging.RabbitMQ.Util.ActiveObjectCounter{Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer}
  commentId: T:Steeltoe.Messaging.RabbitMQ.Util.ActiveObjectCounter{Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer}
  parent: Steeltoe.Messaging.RabbitMQ.Util
  definition: Steeltoe.Messaging.RabbitMQ.Util.ActiveObjectCounter`1
  name: ActiveObjectCounter<BlockingQueueConsumer>
  nameWithType: ActiveObjectCounter<BlockingQueueConsumer>
  fullName: Steeltoe.Messaging.RabbitMQ.Util.ActiveObjectCounter<Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer>
  nameWithType.vb: ActiveObjectCounter(Of BlockingQueueConsumer)
  fullName.vb: Steeltoe.Messaging.RabbitMQ.Util.ActiveObjectCounter(Of Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer)
  name.vb: ActiveObjectCounter(Of BlockingQueueConsumer)
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Util.ActiveObjectCounter`1
    name: ActiveObjectCounter
    nameWithType: ActiveObjectCounter
    fullName: Steeltoe.Messaging.RabbitMQ.Util.ActiveObjectCounter
  - name: <
    nameWithType: <
    fullName: <
  - uid: Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer
    name: BlockingQueueConsumer
    nameWithType: BlockingQueueConsumer
    fullName: Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Util.ActiveObjectCounter`1
    name: ActiveObjectCounter
    nameWithType: ActiveObjectCounter
    fullName: Steeltoe.Messaging.RabbitMQ.Util.ActiveObjectCounter
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer
    name: BlockingQueueConsumer
    nameWithType: BlockingQueueConsumer
    fullName: Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Core.AcknowledgeMode
  commentId: T:Steeltoe.Messaging.RabbitMQ.Core.AcknowledgeMode
  parent: Steeltoe.Messaging.RabbitMQ.Core
  name: AcknowledgeMode
  nameWithType: AcknowledgeMode
  fullName: Steeltoe.Messaging.RabbitMQ.Core.AcknowledgeMode
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.UInt16
  commentId: T:System.UInt16
  parent: System
  isExternal: true
  name: UInt16
  nameWithType: UInt16
  fullName: System.UInt16
- uid: Microsoft.Extensions.Logging.ILoggerFactory
  commentId: T:Microsoft.Extensions.Logging.ILoggerFactory
  parent: Microsoft.Extensions.Logging
  isExternal: true
  name: ILoggerFactory
  nameWithType: ILoggerFactory
  fullName: Microsoft.Extensions.Logging.ILoggerFactory
- uid: System.String[]
  isExternal: true
  name: String[]
  nameWithType: String[]
  fullName: System.String[]
  nameWithType.vb: String()
  fullName.vb: System.String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Steeltoe.Messaging.RabbitMQ.Connection
  commentId: N:Steeltoe.Messaging.RabbitMQ.Connection
  name: Steeltoe.Messaging.RabbitMQ.Connection
  nameWithType: Steeltoe.Messaging.RabbitMQ.Connection
  fullName: Steeltoe.Messaging.RabbitMQ.Connection
- uid: Steeltoe.Messaging.RabbitMQ.Support
  commentId: N:Steeltoe.Messaging.RabbitMQ.Support
  name: Steeltoe.Messaging.RabbitMQ.Support
  nameWithType: Steeltoe.Messaging.RabbitMQ.Support
  fullName: Steeltoe.Messaging.RabbitMQ.Support
- uid: Steeltoe.Messaging.RabbitMQ.Util.ActiveObjectCounter`1
  commentId: T:Steeltoe.Messaging.RabbitMQ.Util.ActiveObjectCounter`1
  name: ActiveObjectCounter<T>
  nameWithType: ActiveObjectCounter<T>
  fullName: Steeltoe.Messaging.RabbitMQ.Util.ActiveObjectCounter<T>
  nameWithType.vb: ActiveObjectCounter(Of T)
  fullName.vb: Steeltoe.Messaging.RabbitMQ.Util.ActiveObjectCounter(Of T)
  name.vb: ActiveObjectCounter(Of T)
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Util.ActiveObjectCounter`1
    name: ActiveObjectCounter
    nameWithType: ActiveObjectCounter
    fullName: Steeltoe.Messaging.RabbitMQ.Util.ActiveObjectCounter
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Util.ActiveObjectCounter`1
    name: ActiveObjectCounter
    nameWithType: ActiveObjectCounter
    fullName: Steeltoe.Messaging.RabbitMQ.Util.ActiveObjectCounter
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Util
  commentId: N:Steeltoe.Messaging.RabbitMQ.Util
  name: Steeltoe.Messaging.RabbitMQ.Util
  nameWithType: Steeltoe.Messaging.RabbitMQ.Util
  fullName: Steeltoe.Messaging.RabbitMQ.Util
- uid: Steeltoe.Messaging.RabbitMQ.Core
  commentId: N:Steeltoe.Messaging.RabbitMQ.Core
  name: Steeltoe.Messaging.RabbitMQ.Core
  nameWithType: Steeltoe.Messaging.RabbitMQ.Core
  fullName: Steeltoe.Messaging.RabbitMQ.Core
- uid: Microsoft.Extensions.Logging
  commentId: N:Microsoft.Extensions.Logging
  isExternal: true
  name: Microsoft.Extensions.Logging
  nameWithType: Microsoft.Extensions.Logging
  fullName: Microsoft.Extensions.Logging
- uid: System.Collections.Generic.Dictionary{System.String,System.Object}
  commentId: T:System.Collections.Generic.Dictionary{System.String,System.Object}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  name: Dictionary<String, Object>
  nameWithType: Dictionary<String, Object>
  fullName: System.Collections.Generic.Dictionary<System.String, System.Object>
  nameWithType.vb: Dictionary(Of String, Object)
  fullName.vb: System.Collections.Generic.Dictionary(Of System.String, System.Object)
  name.vb: Dictionary(Of String, Object)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Dictionary`2
  commentId: T:System.Collections.Generic.Dictionary`2
  isExternal: true
  name: Dictionary<TKey, TValue>
  nameWithType: Dictionary<TKey, TValue>
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>
  nameWithType.vb: Dictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue)
  name.vb: Dictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.Logger*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.Logger
  name: Logger
  nameWithType: BlockingQueueConsumer.Logger
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.Logger
- uid: Microsoft.Extensions.Logging.ILogger{Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer}
  commentId: T:Microsoft.Extensions.Logging.ILogger{Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer}
  parent: Microsoft.Extensions.Logging
  definition: Microsoft.Extensions.Logging.ILogger`1
  name: ILogger<BlockingQueueConsumer>
  nameWithType: ILogger<BlockingQueueConsumer>
  fullName: Microsoft.Extensions.Logging.ILogger<Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer>
  nameWithType.vb: ILogger(Of BlockingQueueConsumer)
  fullName.vb: Microsoft.Extensions.Logging.ILogger(Of Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer)
  name.vb: ILogger(Of BlockingQueueConsumer)
  spec.csharp:
  - uid: Microsoft.Extensions.Logging.ILogger`1
    name: ILogger
    nameWithType: ILogger
    fullName: Microsoft.Extensions.Logging.ILogger
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer
    name: BlockingQueueConsumer
    nameWithType: BlockingQueueConsumer
    fullName: Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Extensions.Logging.ILogger`1
    name: ILogger
    nameWithType: ILogger
    fullName: Microsoft.Extensions.Logging.ILogger
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer
    name: BlockingQueueConsumer
    nameWithType: BlockingQueueConsumer
    fullName: Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.Logging.ILogger`1
  commentId: T:Microsoft.Extensions.Logging.ILogger`1
  isExternal: true
  name: ILogger<TCategoryName>
  nameWithType: ILogger<TCategoryName>
  fullName: Microsoft.Extensions.Logging.ILogger<TCategoryName>
  nameWithType.vb: ILogger(Of TCategoryName)
  fullName.vb: Microsoft.Extensions.Logging.ILogger(Of TCategoryName)
  name.vb: ILogger(Of TCategoryName)
  spec.csharp:
  - uid: Microsoft.Extensions.Logging.ILogger`1
    name: ILogger
    nameWithType: ILogger
    fullName: Microsoft.Extensions.Logging.ILogger
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TCategoryName
    nameWithType: TCategoryName
    fullName: TCategoryName
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Extensions.Logging.ILogger`1
    name: ILogger
    nameWithType: ILogger
    fullName: Microsoft.Extensions.Logging.ILogger
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TCategoryName
    nameWithType: TCategoryName
    fullName: TCategoryName
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.MessageHeadersConverter*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.MessageHeadersConverter
  name: MessageHeadersConverter
  nameWithType: BlockingQueueConsumer.MessageHeadersConverter
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.MessageHeadersConverter
- uid: Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.Queue*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.Queue
  name: Queue
  nameWithType: BlockingQueueConsumer.Queue
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.Queue
- uid: System.Collections.Concurrent.BlockingCollection{Steeltoe.Messaging.RabbitMQ.Support.Delivery}
  commentId: T:System.Collections.Concurrent.BlockingCollection{Steeltoe.Messaging.RabbitMQ.Support.Delivery}
  parent: System.Collections.Concurrent
  definition: System.Collections.Concurrent.BlockingCollection`1
  name: BlockingCollection<Delivery>
  nameWithType: BlockingCollection<Delivery>
  fullName: System.Collections.Concurrent.BlockingCollection<Steeltoe.Messaging.RabbitMQ.Support.Delivery>
  nameWithType.vb: BlockingCollection(Of Delivery)
  fullName.vb: System.Collections.Concurrent.BlockingCollection(Of Steeltoe.Messaging.RabbitMQ.Support.Delivery)
  name.vb: BlockingCollection(Of Delivery)
  spec.csharp:
  - uid: System.Collections.Concurrent.BlockingCollection`1
    name: BlockingCollection
    nameWithType: BlockingCollection
    fullName: System.Collections.Concurrent.BlockingCollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Steeltoe.Messaging.RabbitMQ.Support.Delivery
    name: Delivery
    nameWithType: Delivery
    fullName: Steeltoe.Messaging.RabbitMQ.Support.Delivery
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Concurrent.BlockingCollection`1
    name: BlockingCollection
    nameWithType: BlockingCollection
    fullName: System.Collections.Concurrent.BlockingCollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Steeltoe.Messaging.RabbitMQ.Support.Delivery
    name: Delivery
    nameWithType: Delivery
    fullName: Steeltoe.Messaging.RabbitMQ.Support.Delivery
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Concurrent.BlockingCollection`1
  commentId: T:System.Collections.Concurrent.BlockingCollection`1
  isExternal: true
  name: BlockingCollection<T>
  nameWithType: BlockingCollection<T>
  fullName: System.Collections.Concurrent.BlockingCollection<T>
  nameWithType.vb: BlockingCollection(Of T)
  fullName.vb: System.Collections.Concurrent.BlockingCollection(Of T)
  name.vb: BlockingCollection(Of T)
  spec.csharp:
  - uid: System.Collections.Concurrent.BlockingCollection`1
    name: BlockingCollection
    nameWithType: BlockingCollection
    fullName: System.Collections.Concurrent.BlockingCollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Concurrent.BlockingCollection`1
    name: BlockingCollection
    nameWithType: BlockingCollection
    fullName: System.Collections.Concurrent.BlockingCollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Concurrent
  commentId: N:System.Collections.Concurrent
  isExternal: true
  name: System.Collections.Concurrent
  nameWithType: System.Collections.Concurrent
  fullName: System.Collections.Concurrent
- uid: Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.LoggerFactory*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.LoggerFactory
  name: LoggerFactory
  nameWithType: BlockingQueueConsumer.LoggerFactory
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.LoggerFactory
- uid: Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.ConnectionFactory*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.ConnectionFactory
  name: ConnectionFactory
  nameWithType: BlockingQueueConsumer.ConnectionFactory
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.ConnectionFactory
- uid: Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.ActiveObjectCounter*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.ActiveObjectCounter
  name: ActiveObjectCounter
  nameWithType: BlockingQueueConsumer.ActiveObjectCounter
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.ActiveObjectCounter
- uid: Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.Transactional*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.Transactional
  name: Transactional
  nameWithType: BlockingQueueConsumer.Transactional
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.Transactional
- uid: Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.PrefetchCount*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.PrefetchCount
  name: PrefetchCount
  nameWithType: BlockingQueueConsumer.PrefetchCount
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.PrefetchCount
- uid: Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.Queues*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.Queues
  name: Queues
  nameWithType: BlockingQueueConsumer.Queues
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.Queues
- uid: System.Collections.Generic.List{System.String}
  commentId: T:System.Collections.Generic.List{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<String>
  nameWithType: List<String>
  fullName: System.Collections.Generic.List<System.String>
  nameWithType.vb: List(Of String)
  fullName.vb: System.Collections.Generic.List(Of System.String)
  name.vb: List(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.AcknowledgeMode*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.AcknowledgeMode
  name: AcknowledgeMode
  nameWithType: BlockingQueueConsumer.AcknowledgeMode
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.AcknowledgeMode
- uid: Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.Channel*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.Channel
  name: Channel
  nameWithType: BlockingQueueConsumer.Channel
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.Channel
- uid: RabbitMQ.Client.IModel
  commentId: T:RabbitMQ.Client.IModel
  parent: RabbitMQ.Client
  isExternal: true
  name: IModel
  nameWithType: IModel
  fullName: RabbitMQ.Client.IModel
- uid: RabbitMQ.Client
  commentId: N:RabbitMQ.Client
  isExternal: true
  name: RabbitMQ.Client
  nameWithType: RabbitMQ.Client
  fullName: RabbitMQ.Client
- uid: Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.Exclusive*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.Exclusive
  name: Exclusive
  nameWithType: BlockingQueueConsumer.Exclusive
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.Exclusive
- uid: Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.NoLocal*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.NoLocal
  name: NoLocal
  nameWithType: BlockingQueueConsumer.NoLocal
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.NoLocal
- uid: Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.Cancel*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.Cancel
  name: Cancel
  nameWithType: BlockingQueueConsumer.Cancel
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.Cancel
- uid: Steeltoe.Common.Util.AtomicBoolean
  commentId: T:Steeltoe.Common.Util.AtomicBoolean
  parent: Steeltoe.Common.Util
  name: AtomicBoolean
  nameWithType: AtomicBoolean
  fullName: Steeltoe.Common.Util.AtomicBoolean
- uid: Steeltoe.Common.Util
  commentId: N:Steeltoe.Common.Util
  name: Steeltoe.Common.Util
  nameWithType: Steeltoe.Common.Util
  fullName: Steeltoe.Common.Util
- uid: Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.DefaultRequeueRejected*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.DefaultRequeueRejected
  name: DefaultRequeueRejected
  nameWithType: BlockingQueueConsumer.DefaultRequeueRejected
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.DefaultRequeueRejected
- uid: Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.ConsumerArgs*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.ConsumerArgs
  name: ConsumerArgs
  nameWithType: BlockingQueueConsumer.ConsumerArgs
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.ConsumerArgs
- uid: Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.Shutdown*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.Shutdown
  name: Shutdown
  nameWithType: BlockingQueueConsumer.Shutdown
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.Shutdown
- uid: RabbitMQ.Client.ShutdownEventArgs
  commentId: T:RabbitMQ.Client.ShutdownEventArgs
  parent: RabbitMQ.Client
  isExternal: true
  name: ShutdownEventArgs
  nameWithType: ShutdownEventArgs
  fullName: RabbitMQ.Client.ShutdownEventArgs
- uid: Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.DeliveryTags*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.DeliveryTags
  name: DeliveryTags
  nameWithType: BlockingQueueConsumer.DeliveryTags
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.DeliveryTags
- uid: System.Collections.Generic.HashSet{System.UInt64}
  commentId: T:System.Collections.Generic.HashSet{System.UInt64}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.HashSet`1
  name: HashSet<UInt64>
  nameWithType: HashSet<UInt64>
  fullName: System.Collections.Generic.HashSet<System.UInt64>
  nameWithType.vb: HashSet(Of UInt64)
  fullName.vb: System.Collections.Generic.HashSet(Of System.UInt64)
  name.vb: HashSet(Of UInt64)
  spec.csharp:
  - uid: System.Collections.Generic.HashSet`1
    name: HashSet
    nameWithType: HashSet
    fullName: System.Collections.Generic.HashSet
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.UInt64
    name: UInt64
    nameWithType: UInt64
    fullName: System.UInt64
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.HashSet`1
    name: HashSet
    nameWithType: HashSet
    fullName: System.Collections.Generic.HashSet
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.UInt64
    name: UInt64
    nameWithType: UInt64
    fullName: System.UInt64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.HashSet`1
  commentId: T:System.Collections.Generic.HashSet`1
  isExternal: true
  name: HashSet<T>
  nameWithType: HashSet<T>
  fullName: System.Collections.Generic.HashSet<T>
  nameWithType.vb: HashSet(Of T)
  fullName.vb: System.Collections.Generic.HashSet(Of T)
  name.vb: HashSet(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.HashSet`1
    name: HashSet
    nameWithType: HashSet
    fullName: System.Collections.Generic.HashSet
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.HashSet`1
    name: HashSet
    nameWithType: HashSet
    fullName: System.Collections.Generic.HashSet
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.AbortStarted*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.AbortStarted
  name: AbortStarted
  nameWithType: BlockingQueueConsumer.AbortStarted
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.AbortStarted
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.NormalCancel*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.NormalCancel
  name: NormalCancel
  nameWithType: BlockingQueueConsumer.NormalCancel
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.NormalCancel
- uid: Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.Declaring*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.Declaring
  name: Declaring
  nameWithType: BlockingQueueConsumer.Declaring
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.Declaring
- uid: Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.ShutdownTimeout*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.ShutdownTimeout
  name: ShutdownTimeout
  nameWithType: BlockingQueueConsumer.ShutdownTimeout
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.ShutdownTimeout
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.DeclarationRetries*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.DeclarationRetries
  name: DeclarationRetries
  nameWithType: BlockingQueueConsumer.DeclarationRetries
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.DeclarationRetries
- uid: Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.FailedDeclarationRetryInterval*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.FailedDeclarationRetryInterval
  name: FailedDeclarationRetryInterval
  nameWithType: BlockingQueueConsumer.FailedDeclarationRetryInterval
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.FailedDeclarationRetryInterval
- uid: Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.RetryDeclarationInterval*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.RetryDeclarationInterval
  name: RetryDeclarationInterval
  nameWithType: BlockingQueueConsumer.RetryDeclarationInterval
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.RetryDeclarationInterval
- uid: Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.TagStrategy*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.TagStrategy
  name: TagStrategy
  nameWithType: BlockingQueueConsumer.TagStrategy
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.TagStrategy
- uid: Steeltoe.Messaging.RabbitMQ.Core.IConsumerTagStrategy
  commentId: T:Steeltoe.Messaging.RabbitMQ.Core.IConsumerTagStrategy
  parent: Steeltoe.Messaging.RabbitMQ.Core
  name: IConsumerTagStrategy
  nameWithType: IConsumerTagStrategy
  fullName: Steeltoe.Messaging.RabbitMQ.Core.IConsumerTagStrategy
- uid: Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.BackOffExecution*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.BackOffExecution
  name: BackOffExecution
  nameWithType: BlockingQueueConsumer.BackOffExecution
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.BackOffExecution
- uid: Steeltoe.Common.Util.IBackOffExecution
  commentId: T:Steeltoe.Common.Util.IBackOffExecution
  parent: Steeltoe.Common.Util
  name: IBackOffExecution
  nameWithType: IBackOffExecution
  fullName: Steeltoe.Common.Util.IBackOffExecution
- uid: Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.LocallyTransacted*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.LocallyTransacted
  name: LocallyTransacted
  nameWithType: BlockingQueueConsumer.LocallyTransacted
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.LocallyTransacted
- uid: Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.QueueCount*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.QueueCount
  name: QueueCount
  nameWithType: BlockingQueueConsumer.QueueCount
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.QueueCount
- uid: Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.MissingQueues*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.MissingQueues
  name: MissingQueues
  nameWithType: BlockingQueueConsumer.MissingQueues
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.MissingQueues
- uid: System.Collections.Generic.HashSet{System.String}
  commentId: T:System.Collections.Generic.HashSet{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.HashSet`1
  name: HashSet<String>
  nameWithType: HashSet<String>
  fullName: System.Collections.Generic.HashSet<System.String>
  nameWithType.vb: HashSet(Of String)
  fullName.vb: System.Collections.Generic.HashSet(Of System.String)
  name.vb: HashSet(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.HashSet`1
    name: HashSet
    nameWithType: HashSet
    fullName: System.Collections.Generic.HashSet
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.HashSet`1
    name: HashSet
    nameWithType: HashSet
    fullName: System.Collections.Generic.HashSet
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.LastRetryDeclaration*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.LastRetryDeclaration
  name: LastRetryDeclaration
  nameWithType: BlockingQueueConsumer.LastRetryDeclaration
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.LastRetryDeclaration
- uid: Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.ResourceHolder*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.ResourceHolder
  name: ResourceHolder
  nameWithType: BlockingQueueConsumer.ResourceHolder
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.ResourceHolder
- uid: Steeltoe.Messaging.RabbitMQ.Connection.RabbitResourceHolder
  commentId: T:Steeltoe.Messaging.RabbitMQ.Connection.RabbitResourceHolder
  parent: Steeltoe.Messaging.RabbitMQ.Connection
  name: RabbitResourceHolder
  nameWithType: RabbitResourceHolder
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.RabbitResourceHolder
- uid: Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.GetConsumerTags*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.GetConsumerTags
  name: GetConsumerTags
  nameWithType: BlockingQueueConsumer.GetConsumerTags
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.GetConsumerTags
- uid: Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.ClearDeliveryTags*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.ClearDeliveryTags
  name: ClearDeliveryTags
  nameWithType: BlockingQueueConsumer.ClearDeliveryTags
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.ClearDeliveryTags
- uid: Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.NextMessage*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.NextMessage
  name: NextMessage
  nameWithType: BlockingQueueConsumer.NextMessage
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.NextMessage
- uid: Steeltoe.Messaging.IMessage
  commentId: T:Steeltoe.Messaging.IMessage
  parent: Steeltoe.Messaging
  name: IMessage
  nameWithType: IMessage
  fullName: Steeltoe.Messaging.IMessage
- uid: Steeltoe.Messaging
  commentId: N:Steeltoe.Messaging
  name: Steeltoe.Messaging
  nameWithType: Steeltoe.Messaging
  fullName: Steeltoe.Messaging
- uid: Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.Start*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.Start
  name: Start
  nameWithType: BlockingQueueConsumer.Start
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.Start
- uid: Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.Stop*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.Stop
  name: Stop
  nameWithType: BlockingQueueConsumer.Stop
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.Stop
- uid: Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.RollbackOnExceptionIfNecessary*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.RollbackOnExceptionIfNecessary
  name: RollbackOnExceptionIfNecessary
  nameWithType: BlockingQueueConsumer.RollbackOnExceptionIfNecessary
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.RollbackOnExceptionIfNecessary
- uid: System.Exception
  commentId: T:System.Exception
  parent: System
  isExternal: true
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.CommitIfNecessary*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.CommitIfNecessary
  name: CommitIfNecessary
  nameWithType: BlockingQueueConsumer.CommitIfNecessary
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.CommitIfNecessary
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.ToString*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.ToString
  name: ToString
  nameWithType: BlockingQueueConsumer.ToString
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.ToString
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.HasDelivery*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.HasDelivery
  name: HasDelivery
  nameWithType: BlockingQueueConsumer.HasDelivery
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.HasDelivery
- uid: Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.Cancelled*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.Cancelled
  name: Cancelled
  nameWithType: BlockingQueueConsumer.Cancelled
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.Cancelled
- uid: Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.BasicCancel*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.BasicCancel
  name: BasicCancel
  nameWithType: BlockingQueueConsumer.BasicCancel
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.BlockingQueueConsumer.BasicCancel
