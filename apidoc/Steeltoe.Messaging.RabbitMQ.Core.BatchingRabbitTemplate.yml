### YamlMime:ManagedReference
items:
- uid: Steeltoe.Messaging.RabbitMQ.Core.BatchingRabbitTemplate
  commentId: T:Steeltoe.Messaging.RabbitMQ.Core.BatchingRabbitTemplate
  id: BatchingRabbitTemplate
  parent: Steeltoe.Messaging.RabbitMQ.Core
  children:
  - Steeltoe.Messaging.RabbitMQ.Core.BatchingRabbitTemplate.#ctor(Microsoft.Extensions.Options.IOptionsMonitor{Steeltoe.Messaging.RabbitMQ.Config.RabbitOptions},Steeltoe.Messaging.RabbitMQ.Connection.IConnectionFactory,Steeltoe.Messaging.Converter.ISmartMessageConverter,Steeltoe.Messaging.RabbitMQ.Batch.IBatchingStrategy,Microsoft.Extensions.Logging.ILogger)
  - Steeltoe.Messaging.RabbitMQ.Core.BatchingRabbitTemplate.#ctor(Microsoft.Extensions.Options.IOptionsMonitor{Steeltoe.Messaging.RabbitMQ.Config.RabbitOptions},Steeltoe.Messaging.RabbitMQ.Connection.IConnectionFactory,Steeltoe.Messaging.RabbitMQ.Batch.IBatchingStrategy,Microsoft.Extensions.Logging.ILogger)
  - Steeltoe.Messaging.RabbitMQ.Core.BatchingRabbitTemplate.#ctor(Steeltoe.Messaging.RabbitMQ.Batch.IBatchingStrategy)
  - Steeltoe.Messaging.RabbitMQ.Core.BatchingRabbitTemplate.#ctor(Steeltoe.Messaging.RabbitMQ.Config.RabbitOptions,Steeltoe.Messaging.RabbitMQ.Connection.IConnectionFactory,Steeltoe.Messaging.Converter.ISmartMessageConverter,Steeltoe.Messaging.RabbitMQ.Batch.IBatchingStrategy,Microsoft.Extensions.Logging.ILogger)
  - Steeltoe.Messaging.RabbitMQ.Core.BatchingRabbitTemplate.#ctor(Steeltoe.Messaging.RabbitMQ.Config.RabbitOptions,Steeltoe.Messaging.RabbitMQ.Connection.IConnectionFactory,Steeltoe.Messaging.RabbitMQ.Batch.IBatchingStrategy,Microsoft.Extensions.Logging.ILogger)
  - Steeltoe.Messaging.RabbitMQ.Core.BatchingRabbitTemplate.#ctor(Steeltoe.Messaging.RabbitMQ.Connection.IConnectionFactory,Steeltoe.Messaging.RabbitMQ.Batch.IBatchingStrategy)
  - Steeltoe.Messaging.RabbitMQ.Core.BatchingRabbitTemplate.Flush
  - Steeltoe.Messaging.RabbitMQ.Core.BatchingRabbitTemplate.FlushAsync(System.Threading.CancellationToken)
  - Steeltoe.Messaging.RabbitMQ.Core.BatchingRabbitTemplate.Send(System.String,System.String,Steeltoe.Messaging.IMessage,Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData)
  langs:
  - csharp
  - vb
  name: BatchingRabbitTemplate
  nameWithType: BatchingRabbitTemplate
  fullName: Steeltoe.Messaging.RabbitMQ.Core.BatchingRabbitTemplate
  type: Class
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Core/BatchingRabbitTemplate.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: BatchingRabbitTemplate
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Core/BatchingRabbitTemplate.cs
    startLine: 16
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Core
  syntax:
    content: 'public class BatchingRabbitTemplate : RabbitTemplate, IMessageSendingOperations<RabbitDestination>, IMessageReceivingOperations<RabbitDestination>, IMessageRequestReplyOperations<RabbitDestination>, IRabbitTemplate, IMessageListener, IListenerContainerAware, IPublisherCallbackChannel.IListener, IServiceNameAware, IDisposable'
    content.vb: >-
      Public Class BatchingRabbitTemplate

          Inherits RabbitTemplate

          Implements IMessageSendingOperations(Of RabbitDestination), IMessageReceivingOperations(Of RabbitDestination), IMessageRequestReplyOperations(Of RabbitDestination), IRabbitTemplate, IMessageListener, IListenerContainerAware, IPublisherCallbackChannel.IListener, IServiceNameAware, IDisposable
  inheritance:
  - System.Object
  - Steeltoe.Messaging.Core.AbstractMessageSendingTemplate{Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination}
  - Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate{Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination}
  - Steeltoe.Messaging.Core.AbstractMessagingTemplate{Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination}
  - Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate
  implements:
  - Steeltoe.Messaging.Core.IMessageSendingOperations{Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination}
  - Steeltoe.Messaging.Core.IMessageReceivingOperations{Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination}
  - Steeltoe.Messaging.Core.IMessageRequestReplyOperations{Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination}
  - Steeltoe.Messaging.RabbitMQ.Core.IRabbitTemplate
  - Steeltoe.Messaging.RabbitMQ.Listener.IMessageListener
  - Steeltoe.Messaging.RabbitMQ.Support.IListenerContainerAware
  - Steeltoe.Messaging.RabbitMQ.Connection.IPublisherCallbackChannel.IListener
  - Steeltoe.Common.Services.IServiceNameAware
  - System.IDisposable
  inheritedMembers:
  - Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.DEFAULT_SERVICE_NAME
  - Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate._logger
  - Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConnectionFactory
  - Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.IsChannelTransacted
  - Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.RoutingKey
  - Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.Exchange
  - Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.DefaultReceiveQueue
  - Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ContainerAckMode
  - Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.Encoding
  - Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ReplyAddress
  - Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ReceiveTimeout
  - Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ReplyTimeout
  - Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.MessagePropertiesConverter
  - Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConfirmCallback
  - Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ReturnCallback
  - Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.Mandatory
  - Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.MandatoryExpression
  - Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.MandatoryExpressionString
  - Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.SendConnectionFactorySelectorExpression
  - Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ReceiveConnectionFactorySelectorExpression
  - Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.CorrelationKey
  - Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.EvaluationContext
  - Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.RetryTemplate
  - Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.RecoveryCallback
  - Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.BeforePublishPostProcessors
  - Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.AfterReceivePostProcessors
  - Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.CorrelationDataPostProcessor
  - Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.UseTemporaryReplyQueues
  - Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.UseDirectReplyToContainer
  - Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.UserIdExpression
  - Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.UserIdExpressionString
  - Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ServiceName
  - Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.UserCorrelationId
  - Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.UsePublisherConnection
  - Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.NoLocalReplyConsumer
  - Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ReplyErrorHandler
  - Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.IsRunning
  - Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.UUID
  - Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.IsConfirmListener
  - Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.IsReturnListener
  - Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.Options
  - Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.SetBeforePublishPostProcessors(Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor[])
  - Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.AddBeforePublishPostProcessors(Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor[])
  - Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.RemoveBeforePublishPostProcessor(Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor)
  - Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.SetAfterReceivePostProcessors(Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor[])
  - Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.AddAfterReceivePostProcessors(Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor[])
  - Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.RemoveAfterReceivePostProcessor(Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor)
  - Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.HandleConfirm(Steeltoe.Messaging.RabbitMQ.Connection.PendingConfirm,System.Boolean)
  - Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.HandleReturn(System.Int32,System.String,System.String,System.String,RabbitMQ.Client.IBasicProperties,System.Byte[])
  - Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.Revoke(RabbitMQ.Client.IModel)
  - Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.OnMessageBatch(System.Collections.Generic.List{Steeltoe.Messaging.IMessage})
  - Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.OnMessage(Steeltoe.Messaging.IMessage)
  - Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.GetExpectedQueueNames
  - Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.Send(System.String,Steeltoe.Messaging.IMessage)
  - Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.Send(System.String,System.String,Steeltoe.Messaging.IMessage)
  - Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.SendAsync(System.String,Steeltoe.Messaging.IMessage,System.Threading.CancellationToken)
  - Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.SendAsync(System.String,System.String,Steeltoe.Messaging.IMessage,System.Threading.CancellationToken)
  - Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.SendAsync(System.String,System.String,Steeltoe.Messaging.IMessage,Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData,System.Threading.CancellationToken)
  - Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertAndSend(System.Object,Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor)
  - Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertAndSend(System.Object,Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor,Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData)
  - Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertAndSend(System.String,System.Object)
  - Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertAndSend(System.String,System.Object,Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData)
  - Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertAndSend(System.String,System.Object,Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor)
  - Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertAndSend(System.String,System.Object,Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor,Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData)
  - Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertAndSend(System.String,System.String,System.Object)
  - Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertAndSend(System.String,System.String,System.Object,Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData)
  - Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertAndSend(System.String,System.String,System.Object,Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor)
  - Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertAndSend(System.String,System.String,System.Object,Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor,Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData)
  - Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertAndSendAsync(System.Object,Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor,System.Threading.CancellationToken)
  - Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertAndSendAsync(System.Object,Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor,Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData,System.Threading.CancellationToken)
  - Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertAndSendAsync(System.String,System.Object,System.Threading.CancellationToken)
  - Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertAndSendAsync(System.String,System.Object,Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData,System.Threading.CancellationToken)
  - Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertAndSendAsync(System.String,System.Object,Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor,System.Threading.CancellationToken)
  - Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertAndSendAsync(System.String,System.Object,Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor,Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData,System.Threading.CancellationToken)
  - Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertAndSendAsync(System.String,System.String,System.Object,System.Threading.CancellationToken)
  - Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertAndSendAsync(System.String,System.String,System.Object,Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData,System.Threading.CancellationToken)
  - Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertAndSendAsync(System.String,System.String,System.Object,Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor,System.Threading.CancellationToken)
  - Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertAndSendAsync(System.String,System.String,System.Object,Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor,Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData,System.Threading.CancellationToken)
  - Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ReceiveAsync(System.String,System.Threading.CancellationToken)
  - Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ReceiveAsync(System.Int32,System.Threading.CancellationToken)
  - Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ReceiveAsync(System.String,System.Int32,System.Threading.CancellationToken)
  - Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.Receive(System.Int32)
  - Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.Receive(System.String)
  - Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.Receive(System.String,System.Int32)
  - Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ReceiveAndConvert``1(System.Int32)
  - Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ReceiveAndConvert``1(System.String)
  - Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ReceiveAndConvert``1(System.String,System.Int32)
  - Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ReceiveAndConvert(System.Type)
  - Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ReceiveAndConvert(System.String,System.Type)
  - Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ReceiveAndConvert(System.Int32,System.Type)
  - Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ReceiveAndConvert(System.String,System.Int32,System.Type)
  - Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ReceiveAndConvertAsync``1(System.Int32,System.Threading.CancellationToken)
  - Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ReceiveAndConvertAsync``1(System.String,System.Threading.CancellationToken)
  - Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ReceiveAndConvertAsync``1(System.String,System.Int32,System.Threading.CancellationToken)
  - Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ReceiveAndConvertAsync(System.Type,System.Threading.CancellationToken)
  - Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ReceiveAndConvertAsync(System.String,System.Type,System.Threading.CancellationToken)
  - Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ReceiveAndConvertAsync(System.Int32,System.Type,System.Threading.CancellationToken)
  - Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ReceiveAndConvertAsync(System.String,System.Int32,System.Type,System.Threading.CancellationToken)
  - Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ReceiveAndReply``2(System.Func{{R},{S}})
  - Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ReceiveAndReply``2(System.String,System.Func{{R},{S}})
  - Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ReceiveAndReply``2(System.Func{{R},{S}},System.String,System.String)
  - Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ReceiveAndReply``2(System.String,System.Func{{R},{S}},System.String,System.String)
  - Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ReceiveAndReply``2(System.Func{{R},{S}},System.Func{Steeltoe.Messaging.IMessage,{S},Steeltoe.Messaging.RabbitMQ.Core.Address})
  - Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ReceiveAndReply``2(System.String,System.Func{{R},{S}},System.Func{Steeltoe.Messaging.IMessage,{S},Steeltoe.Messaging.RabbitMQ.Core.Address})
  - Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.SendAndReceive(Steeltoe.Messaging.IMessage,Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData)
  - Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.SendAndReceive(System.String,Steeltoe.Messaging.IMessage)
  - Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.SendAndReceive(System.String,Steeltoe.Messaging.IMessage,Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData)
  - Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.SendAndReceive(System.String,System.String,Steeltoe.Messaging.IMessage)
  - Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.SendAndReceive(System.String,System.String,Steeltoe.Messaging.IMessage,Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData)
  - Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.SendAndReceiveAsync(Steeltoe.Messaging.IMessage,Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData,System.Threading.CancellationToken)
  - Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.SendAndReceiveAsync(System.String,Steeltoe.Messaging.IMessage,System.Threading.CancellationToken)
  - Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.SendAndReceiveAsync(System.String,Steeltoe.Messaging.IMessage,Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData,System.Threading.CancellationToken)
  - Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.SendAndReceiveAsync(System.String,System.String,Steeltoe.Messaging.IMessage,System.Threading.CancellationToken)
  - Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.SendAndReceiveAsync(System.String,System.String,Steeltoe.Messaging.IMessage,Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData,System.Threading.CancellationToken)
  - Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceive``1(System.Object,Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData)
  - Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceive``1(System.Object,Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor)
  - Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceive``1(System.Object,Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor,Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData)
  - Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceive``1(System.String,System.Object)
  - Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceive``1(System.String,System.Object,Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData)
  - Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceive``1(System.String,System.Object,Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor)
  - Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceive``1(System.String,System.Object,Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor,Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData)
  - Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceive``1(System.String,System.String,System.Object)
  - Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceive``1(System.String,System.String,System.Object,Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData)
  - Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceive``1(System.String,System.String,System.Object,Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor)
  - Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceive``1(System.String,System.String,System.Object,Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor,Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData)
  - Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceiveAsync``1(System.Object,Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData,System.Threading.CancellationToken)
  - Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceiveAsync``1(System.Object,Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor,System.Threading.CancellationToken)
  - Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceiveAsync``1(System.Object,Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor,Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData,System.Threading.CancellationToken)
  - Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceiveAsync``1(System.String,System.Object,System.Threading.CancellationToken)
  - Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceiveAsync``1(System.String,System.Object,Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData,System.Threading.CancellationToken)
  - Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceiveAsync``1(System.String,System.Object,Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor,System.Threading.CancellationToken)
  - Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceiveAsync``1(System.String,System.Object,Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor,Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData,System.Threading.CancellationToken)
  - Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceiveAsync``1(System.String,System.String,System.Object,System.Threading.CancellationToken)
  - Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceiveAsync``1(System.String,System.String,System.Object,Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData,System.Threading.CancellationToken)
  - Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceiveAsync``1(System.String,System.String,System.Object,Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor,System.Threading.CancellationToken)
  - Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceiveAsync``1(System.String,System.String,System.Object,Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor,Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData,System.Threading.CancellationToken)
  - Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceiveAsType(System.Object,System.Type)
  - Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceiveAsType(System.Object,Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData,System.Type)
  - Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceiveAsType(System.Object,Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor,System.Type)
  - Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceiveAsType(System.Object,Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor,Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData,System.Type)
  - Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceiveAsType(System.String,System.Object,System.Type)
  - Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceiveAsType(System.String,System.Object,Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData,System.Type)
  - Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceiveAsType(System.String,System.Object,Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor,System.Type)
  - Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceiveAsType(System.String,System.Object,Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor,Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData,System.Type)
  - Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceiveAsType(System.String,System.String,System.Object,System.Type)
  - Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceiveAsType(System.String,System.String,System.Object,Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData,System.Type)
  - Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceiveAsType(System.String,System.String,System.Object,Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor,System.Type)
  - Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceiveAsType(System.String,System.String,System.Object,Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor,Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData,System.Type)
  - Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceiveAsTypeAsync(System.Object,System.Type,System.Threading.CancellationToken)
  - Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceiveAsTypeAsync(System.Object,Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData,System.Type,System.Threading.CancellationToken)
  - Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceiveAsTypeAsync(System.Object,Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor,System.Type,System.Threading.CancellationToken)
  - Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceiveAsTypeAsync(System.Object,Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor,Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData,System.Type,System.Threading.CancellationToken)
  - Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceiveAsTypeAsync(System.String,System.Object,System.Type,System.Threading.CancellationToken)
  - Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceiveAsTypeAsync(System.String,System.Object,Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData,System.Type,System.Threading.CancellationToken)
  - Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceiveAsTypeAsync(System.String,System.Object,Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor,System.Type,System.Threading.CancellationToken)
  - Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceiveAsTypeAsync(System.String,System.Object,Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor,Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData,System.Type,System.Threading.CancellationToken)
  - Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceiveAsTypeAsync(System.String,System.String,System.Object,System.Type,System.Threading.CancellationToken)
  - Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceiveAsTypeAsync(System.String,System.String,System.Object,Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData,System.Type,System.Threading.CancellationToken)
  - Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceiveAsTypeAsync(System.String,System.String,System.Object,Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor,System.Type,System.Threading.CancellationToken)
  - Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceiveAsTypeAsync(System.String,System.String,System.Object,Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor,Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData,System.Type,System.Threading.CancellationToken)
  - Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.CorrelationConvertAndSend(System.Object,Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData)
  - Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.GetUnconfirmed(System.Int64)
  - Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.GetUnconfirmedCount
  - Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.Execute(System.Action{RabbitMQ.Client.IModel})
  - Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.Execute``1(System.Func{RabbitMQ.Client.IModel,{T}})
  - Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.AddListener(RabbitMQ.Client.IModel)
  - Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.Invoke``1(System.Func{Steeltoe.Messaging.RabbitMQ.Core.IRabbitTemplate,{T}})
  - Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.Invoke``1(System.Func{Steeltoe.Messaging.RabbitMQ.Core.IRabbitTemplate,{T}},System.Action{System.Object,RabbitMQ.Client.Events.BasicAckEventArgs},System.Action{System.Object,RabbitMQ.Client.Events.BasicNackEventArgs})
  - Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.WaitForConfirms(System.Int32)
  - Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.WaitForConfirmsOrDie(System.Int32)
  - Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.DetermineConfirmsReturnsCapability(Steeltoe.Messaging.RabbitMQ.Connection.IConnectionFactory)
  - Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.IsMandatoryFor(Steeltoe.Messaging.IMessage)
  - Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.Dispose
  - Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.Start
  - Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.Stop
  - Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertMessageIfNecessary(System.Object)
  - Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.DoSendAndReceiveWithTemporary(System.String,System.String,Steeltoe.Messaging.IMessage,Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData,System.Threading.CancellationToken)
  - Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.DoReceiveAndConvert(System.String,System.Int32,System.Type,System.Threading.CancellationToken)
  - Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.DoReceive(System.String,System.Int32,System.Threading.CancellationToken)
  - Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.DoReceive(Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination)
  - Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.DoReceiveAsync(Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination,System.Threading.CancellationToken)
  - Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.DoSendAsync(Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination,Steeltoe.Messaging.IMessage,System.Threading.CancellationToken)
  - Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.DoSendAndReceiveAsync(Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination,Steeltoe.Messaging.IMessage,System.Threading.CancellationToken)
  - Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.DoSendAndReceive(Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination,Steeltoe.Messaging.IMessage)
  - Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.DoSendAndReceive(System.String,System.String,Steeltoe.Messaging.IMessage,Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData,System.Threading.CancellationToken)
  - Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.DoSendAndReceiveWithFixed(System.String,System.String,Steeltoe.Messaging.IMessage,Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData,System.Threading.CancellationToken)
  - Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.DoSendAndReceiveWithDirect(System.String,System.String,Steeltoe.Messaging.IMessage,Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData,System.Threading.CancellationToken)
  - Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.DoReceiveNoWait(System.String,System.Threading.CancellationToken)
  - Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.DoSend(RabbitMQ.Client.IModel,System.String,System.String,Steeltoe.Messaging.IMessage,System.Boolean,Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData,System.Threading.CancellationToken)
  - Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.DoSend(Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination,Steeltoe.Messaging.IMessage)
  - Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.SendToRabbit(RabbitMQ.Client.IModel,System.String,System.String,System.Boolean,Steeltoe.Messaging.IMessage)
  - Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.IsChannelLocallyTransacted(RabbitMQ.Client.IModel)
  - Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.CreateConnection
  - Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.GetTransactionalResourceHolder
  - Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertRabbitAccessException(System.Exception)
  - Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceiveRaw(System.String,System.String,System.Object,Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor,Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData)
  - Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.GetDefaultExchange
  - Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.GetDefaultRoutingKey
  - Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.UseDirectReplyTo
  - Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ReplyTimedOut(System.String)
  - Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.DoStart
  - Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.DoStop
  - Steeltoe.Messaging.Core.AbstractMessagingTemplate{Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination}.ConvertSendAndReceiveAsync``1(System.Object,System.Threading.CancellationToken)
  - Steeltoe.Messaging.Core.AbstractMessagingTemplate{Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination}.ConvertSendAndReceiveAsync``1(Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination,System.Object,System.Threading.CancellationToken)
  - Steeltoe.Messaging.Core.AbstractMessagingTemplate{Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination}.ConvertSendAndReceiveAsync``1(Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object},System.Threading.CancellationToken)
  - Steeltoe.Messaging.Core.AbstractMessagingTemplate{Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination}.ConvertSendAndReceiveAsync``1(System.Object,Steeltoe.Messaging.Core.IMessagePostProcessor,System.Threading.CancellationToken)
  - Steeltoe.Messaging.Core.AbstractMessagingTemplate{Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination}.ConvertSendAndReceiveAsync``1(Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination,System.Object,Steeltoe.Messaging.Core.IMessagePostProcessor,System.Threading.CancellationToken)
  - Steeltoe.Messaging.Core.AbstractMessagingTemplate{Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination}.ConvertSendAndReceiveAsync``1(Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object},Steeltoe.Messaging.Core.IMessagePostProcessor,System.Threading.CancellationToken)
  - Steeltoe.Messaging.Core.AbstractMessagingTemplate{Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination}.SendAndReceiveAsync(Steeltoe.Messaging.IMessage,System.Threading.CancellationToken)
  - Steeltoe.Messaging.Core.AbstractMessagingTemplate{Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination}.SendAndReceiveAsync(Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination,Steeltoe.Messaging.IMessage,System.Threading.CancellationToken)
  - Steeltoe.Messaging.Core.AbstractMessagingTemplate{Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination}.ConvertSendAndReceive``1(System.Object)
  - Steeltoe.Messaging.Core.AbstractMessagingTemplate{Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination}.ConvertSendAndReceive``1(Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination,System.Object)
  - Steeltoe.Messaging.Core.AbstractMessagingTemplate{Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination}.ConvertSendAndReceive``1(Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object})
  - Steeltoe.Messaging.Core.AbstractMessagingTemplate{Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination}.ConvertSendAndReceive``1(System.Object,Steeltoe.Messaging.Core.IMessagePostProcessor)
  - Steeltoe.Messaging.Core.AbstractMessagingTemplate{Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination}.ConvertSendAndReceive``1(Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination,System.Object,Steeltoe.Messaging.Core.IMessagePostProcessor)
  - Steeltoe.Messaging.Core.AbstractMessagingTemplate{Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination}.ConvertSendAndReceive``1(Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object},Steeltoe.Messaging.Core.IMessagePostProcessor)
  - Steeltoe.Messaging.Core.AbstractMessagingTemplate{Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination}.SendAndReceive(Steeltoe.Messaging.IMessage)
  - Steeltoe.Messaging.Core.AbstractMessagingTemplate{Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination}.SendAndReceive(Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination,Steeltoe.Messaging.IMessage)
  - Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate{Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination}.DefaultReceiveDestination
  - Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate{Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination}.ThrowReceivedExceptions
  - Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate{Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination}.ReceiveAsync(System.Threading.CancellationToken)
  - Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate{Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination}.ReceiveAsync(Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination,System.Threading.CancellationToken)
  - Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate{Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination}.ReceiveAndConvertAsync``1(System.Threading.CancellationToken)
  - Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate{Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination}.ReceiveAndConvertAsync``1(Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination,System.Threading.CancellationToken)
  - Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate{Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination}.Receive
  - Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate{Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination}.Receive(Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination)
  - Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate{Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination}.ReceiveAndConvert``1
  - Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate{Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination}.ReceiveAndConvert``1(Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination)
  - Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate{Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination}.RequiredDefaultReceiveDestination
  - Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate{Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination}.DoConvert``1(Steeltoe.Messaging.IMessage)
  - Steeltoe.Messaging.Core.AbstractMessageSendingTemplate{Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination}.CONVERSION_HINT_HEADER
  - Steeltoe.Messaging.Core.AbstractMessageSendingTemplate{Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination}.DefaultSendDestination
  - Steeltoe.Messaging.Core.AbstractMessageSendingTemplate{Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination}.MessageConverter
  - Steeltoe.Messaging.Core.AbstractMessageSendingTemplate{Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination}.ConvertAndSendAsync(System.Object,System.Threading.CancellationToken)
  - Steeltoe.Messaging.Core.AbstractMessageSendingTemplate{Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination}.ConvertAndSendAsync(Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination,System.Object,System.Threading.CancellationToken)
  - Steeltoe.Messaging.Core.AbstractMessageSendingTemplate{Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination}.ConvertAndSendAsync(Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object},System.Threading.CancellationToken)
  - Steeltoe.Messaging.Core.AbstractMessageSendingTemplate{Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination}.ConvertAndSendAsync(System.Object,Steeltoe.Messaging.Core.IMessagePostProcessor,System.Threading.CancellationToken)
  - Steeltoe.Messaging.Core.AbstractMessageSendingTemplate{Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination}.ConvertAndSendAsync(Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination,System.Object,Steeltoe.Messaging.Core.IMessagePostProcessor,System.Threading.CancellationToken)
  - Steeltoe.Messaging.Core.AbstractMessageSendingTemplate{Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination}.ConvertAndSendAsync(Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object},Steeltoe.Messaging.Core.IMessagePostProcessor,System.Threading.CancellationToken)
  - Steeltoe.Messaging.Core.AbstractMessageSendingTemplate{Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination}.SendAsync(Steeltoe.Messaging.IMessage,System.Threading.CancellationToken)
  - Steeltoe.Messaging.Core.AbstractMessageSendingTemplate{Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination}.SendAsync(Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination,Steeltoe.Messaging.IMessage,System.Threading.CancellationToken)
  - Steeltoe.Messaging.Core.AbstractMessageSendingTemplate{Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination}.ConvertAndSend(System.Object)
  - Steeltoe.Messaging.Core.AbstractMessageSendingTemplate{Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination}.ConvertAndSend(Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination,System.Object)
  - Steeltoe.Messaging.Core.AbstractMessageSendingTemplate{Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination}.ConvertAndSend(Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object})
  - Steeltoe.Messaging.Core.AbstractMessageSendingTemplate{Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination}.ConvertAndSend(System.Object,Steeltoe.Messaging.Core.IMessagePostProcessor)
  - Steeltoe.Messaging.Core.AbstractMessageSendingTemplate{Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination}.ConvertAndSend(Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination,System.Object,Steeltoe.Messaging.Core.IMessagePostProcessor)
  - Steeltoe.Messaging.Core.AbstractMessageSendingTemplate{Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination}.ConvertAndSend(Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object},Steeltoe.Messaging.Core.IMessagePostProcessor)
  - Steeltoe.Messaging.Core.AbstractMessageSendingTemplate{Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination}.Send(Steeltoe.Messaging.IMessage)
  - Steeltoe.Messaging.Core.AbstractMessageSendingTemplate{Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination}.Send(Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination,Steeltoe.Messaging.IMessage)
  - Steeltoe.Messaging.Core.AbstractMessageSendingTemplate{Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination}.RequiredDefaultSendDestination
  - Steeltoe.Messaging.Core.AbstractMessageSendingTemplate{Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination}.DoConvert(System.Object,System.Collections.Generic.IDictionary{System.String,System.Object},Steeltoe.Messaging.Core.IMessagePostProcessor)
  - Steeltoe.Messaging.Core.AbstractMessageSendingTemplate{Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination}.ProcessHeadersToSend(System.Collections.Generic.IDictionary{System.String,System.Object})
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Steeltoe.Messaging.RabbitMQ.Core.BatchingRabbitTemplate.#ctor(Microsoft.Extensions.Options.IOptionsMonitor{Steeltoe.Messaging.RabbitMQ.Config.RabbitOptions},Steeltoe.Messaging.RabbitMQ.Connection.IConnectionFactory,Steeltoe.Messaging.Converter.ISmartMessageConverter,Steeltoe.Messaging.RabbitMQ.Batch.IBatchingStrategy,Microsoft.Extensions.Logging.ILogger)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Core.BatchingRabbitTemplate.#ctor(Microsoft.Extensions.Options.IOptionsMonitor{Steeltoe.Messaging.RabbitMQ.Config.RabbitOptions},Steeltoe.Messaging.RabbitMQ.Connection.IConnectionFactory,Steeltoe.Messaging.Converter.ISmartMessageConverter,Steeltoe.Messaging.RabbitMQ.Batch.IBatchingStrategy,Microsoft.Extensions.Logging.ILogger)
  id: '#ctor(Microsoft.Extensions.Options.IOptionsMonitor{Steeltoe.Messaging.RabbitMQ.Config.RabbitOptions},Steeltoe.Messaging.RabbitMQ.Connection.IConnectionFactory,Steeltoe.Messaging.Converter.ISmartMessageConverter,Steeltoe.Messaging.RabbitMQ.Batch.IBatchingStrategy,Microsoft.Extensions.Logging.ILogger)'
  parent: Steeltoe.Messaging.RabbitMQ.Core.BatchingRabbitTemplate
  langs:
  - csharp
  - vb
  name: BatchingRabbitTemplate(IOptionsMonitor<RabbitOptions>, IConnectionFactory, ISmartMessageConverter, IBatchingStrategy, ILogger)
  nameWithType: BatchingRabbitTemplate.BatchingRabbitTemplate(IOptionsMonitor<RabbitOptions>, IConnectionFactory, ISmartMessageConverter, IBatchingStrategy, ILogger)
  fullName: Steeltoe.Messaging.RabbitMQ.Core.BatchingRabbitTemplate.BatchingRabbitTemplate(Microsoft.Extensions.Options.IOptionsMonitor<Steeltoe.Messaging.RabbitMQ.Config.RabbitOptions>, Steeltoe.Messaging.RabbitMQ.Connection.IConnectionFactory, Steeltoe.Messaging.Converter.ISmartMessageConverter, Steeltoe.Messaging.RabbitMQ.Batch.IBatchingStrategy, Microsoft.Extensions.Logging.ILogger)
  type: Constructor
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Core/BatchingRabbitTemplate.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: .ctor
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Core/BatchingRabbitTemplate.cs
    startLine: 24
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Core
  syntax:
    content: public BatchingRabbitTemplate(IOptionsMonitor<RabbitOptions> optionsMonitor, IConnectionFactory connectionFactory, ISmartMessageConverter messageConverter, IBatchingStrategy batchingStrategy, ILogger logger = null)
    parameters:
    - id: optionsMonitor
      type: Microsoft.Extensions.Options.IOptionsMonitor{Steeltoe.Messaging.RabbitMQ.Config.RabbitOptions}
    - id: connectionFactory
      type: Steeltoe.Messaging.RabbitMQ.Connection.IConnectionFactory
    - id: messageConverter
      type: Steeltoe.Messaging.Converter.ISmartMessageConverter
    - id: batchingStrategy
      type: Steeltoe.Messaging.RabbitMQ.Batch.IBatchingStrategy
    - id: logger
      type: Microsoft.Extensions.Logging.ILogger
    content.vb: Public Sub New(optionsMonitor As IOptionsMonitor(Of RabbitOptions), connectionFactory As IConnectionFactory, messageConverter As ISmartMessageConverter, batchingStrategy As IBatchingStrategy, logger As ILogger = Nothing)
  overload: Steeltoe.Messaging.RabbitMQ.Core.BatchingRabbitTemplate.#ctor*
  nameWithType.vb: BatchingRabbitTemplate.BatchingRabbitTemplate(IOptionsMonitor(Of RabbitOptions), IConnectionFactory, ISmartMessageConverter, IBatchingStrategy, ILogger)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Steeltoe.Messaging.RabbitMQ.Core.BatchingRabbitTemplate.BatchingRabbitTemplate(Microsoft.Extensions.Options.IOptionsMonitor(Of Steeltoe.Messaging.RabbitMQ.Config.RabbitOptions), Steeltoe.Messaging.RabbitMQ.Connection.IConnectionFactory, Steeltoe.Messaging.Converter.ISmartMessageConverter, Steeltoe.Messaging.RabbitMQ.Batch.IBatchingStrategy, Microsoft.Extensions.Logging.ILogger)
  name.vb: BatchingRabbitTemplate(IOptionsMonitor(Of RabbitOptions), IConnectionFactory, ISmartMessageConverter, IBatchingStrategy, ILogger)
- uid: Steeltoe.Messaging.RabbitMQ.Core.BatchingRabbitTemplate.#ctor(Steeltoe.Messaging.RabbitMQ.Config.RabbitOptions,Steeltoe.Messaging.RabbitMQ.Connection.IConnectionFactory,Steeltoe.Messaging.Converter.ISmartMessageConverter,Steeltoe.Messaging.RabbitMQ.Batch.IBatchingStrategy,Microsoft.Extensions.Logging.ILogger)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Core.BatchingRabbitTemplate.#ctor(Steeltoe.Messaging.RabbitMQ.Config.RabbitOptions,Steeltoe.Messaging.RabbitMQ.Connection.IConnectionFactory,Steeltoe.Messaging.Converter.ISmartMessageConverter,Steeltoe.Messaging.RabbitMQ.Batch.IBatchingStrategy,Microsoft.Extensions.Logging.ILogger)
  id: '#ctor(Steeltoe.Messaging.RabbitMQ.Config.RabbitOptions,Steeltoe.Messaging.RabbitMQ.Connection.IConnectionFactory,Steeltoe.Messaging.Converter.ISmartMessageConverter,Steeltoe.Messaging.RabbitMQ.Batch.IBatchingStrategy,Microsoft.Extensions.Logging.ILogger)'
  parent: Steeltoe.Messaging.RabbitMQ.Core.BatchingRabbitTemplate
  langs:
  - csharp
  - vb
  name: BatchingRabbitTemplate(RabbitOptions, IConnectionFactory, ISmartMessageConverter, IBatchingStrategy, ILogger)
  nameWithType: BatchingRabbitTemplate.BatchingRabbitTemplate(RabbitOptions, IConnectionFactory, ISmartMessageConverter, IBatchingStrategy, ILogger)
  fullName: Steeltoe.Messaging.RabbitMQ.Core.BatchingRabbitTemplate.BatchingRabbitTemplate(Steeltoe.Messaging.RabbitMQ.Config.RabbitOptions, Steeltoe.Messaging.RabbitMQ.Connection.IConnectionFactory, Steeltoe.Messaging.Converter.ISmartMessageConverter, Steeltoe.Messaging.RabbitMQ.Batch.IBatchingStrategy, Microsoft.Extensions.Logging.ILogger)
  type: Constructor
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Core/BatchingRabbitTemplate.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: .ctor
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Core/BatchingRabbitTemplate.cs
    startLine: 35
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Core
  syntax:
    content: public BatchingRabbitTemplate(RabbitOptions options, IConnectionFactory connectionFactory, ISmartMessageConverter messageConverter, IBatchingStrategy batchingStrategy, ILogger logger = null)
    parameters:
    - id: options
      type: Steeltoe.Messaging.RabbitMQ.Config.RabbitOptions
    - id: connectionFactory
      type: Steeltoe.Messaging.RabbitMQ.Connection.IConnectionFactory
    - id: messageConverter
      type: Steeltoe.Messaging.Converter.ISmartMessageConverter
    - id: batchingStrategy
      type: Steeltoe.Messaging.RabbitMQ.Batch.IBatchingStrategy
    - id: logger
      type: Microsoft.Extensions.Logging.ILogger
    content.vb: Public Sub New(options As RabbitOptions, connectionFactory As IConnectionFactory, messageConverter As ISmartMessageConverter, batchingStrategy As IBatchingStrategy, logger As ILogger = Nothing)
  overload: Steeltoe.Messaging.RabbitMQ.Core.BatchingRabbitTemplate.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Steeltoe.Messaging.RabbitMQ.Core.BatchingRabbitTemplate.#ctor(Microsoft.Extensions.Options.IOptionsMonitor{Steeltoe.Messaging.RabbitMQ.Config.RabbitOptions},Steeltoe.Messaging.RabbitMQ.Connection.IConnectionFactory,Steeltoe.Messaging.RabbitMQ.Batch.IBatchingStrategy,Microsoft.Extensions.Logging.ILogger)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Core.BatchingRabbitTemplate.#ctor(Microsoft.Extensions.Options.IOptionsMonitor{Steeltoe.Messaging.RabbitMQ.Config.RabbitOptions},Steeltoe.Messaging.RabbitMQ.Connection.IConnectionFactory,Steeltoe.Messaging.RabbitMQ.Batch.IBatchingStrategy,Microsoft.Extensions.Logging.ILogger)
  id: '#ctor(Microsoft.Extensions.Options.IOptionsMonitor{Steeltoe.Messaging.RabbitMQ.Config.RabbitOptions},Steeltoe.Messaging.RabbitMQ.Connection.IConnectionFactory,Steeltoe.Messaging.RabbitMQ.Batch.IBatchingStrategy,Microsoft.Extensions.Logging.ILogger)'
  parent: Steeltoe.Messaging.RabbitMQ.Core.BatchingRabbitTemplate
  langs:
  - csharp
  - vb
  name: BatchingRabbitTemplate(IOptionsMonitor<RabbitOptions>, IConnectionFactory, IBatchingStrategy, ILogger)
  nameWithType: BatchingRabbitTemplate.BatchingRabbitTemplate(IOptionsMonitor<RabbitOptions>, IConnectionFactory, IBatchingStrategy, ILogger)
  fullName: Steeltoe.Messaging.RabbitMQ.Core.BatchingRabbitTemplate.BatchingRabbitTemplate(Microsoft.Extensions.Options.IOptionsMonitor<Steeltoe.Messaging.RabbitMQ.Config.RabbitOptions>, Steeltoe.Messaging.RabbitMQ.Connection.IConnectionFactory, Steeltoe.Messaging.RabbitMQ.Batch.IBatchingStrategy, Microsoft.Extensions.Logging.ILogger)
  type: Constructor
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Core/BatchingRabbitTemplate.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: .ctor
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Core/BatchingRabbitTemplate.cs
    startLine: 46
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Core
  syntax:
    content: public BatchingRabbitTemplate(IOptionsMonitor<RabbitOptions> optionsMonitor, IConnectionFactory connectionFactory, IBatchingStrategy batchingStrategy, ILogger logger = null)
    parameters:
    - id: optionsMonitor
      type: Microsoft.Extensions.Options.IOptionsMonitor{Steeltoe.Messaging.RabbitMQ.Config.RabbitOptions}
    - id: connectionFactory
      type: Steeltoe.Messaging.RabbitMQ.Connection.IConnectionFactory
    - id: batchingStrategy
      type: Steeltoe.Messaging.RabbitMQ.Batch.IBatchingStrategy
    - id: logger
      type: Microsoft.Extensions.Logging.ILogger
    content.vb: Public Sub New(optionsMonitor As IOptionsMonitor(Of RabbitOptions), connectionFactory As IConnectionFactory, batchingStrategy As IBatchingStrategy, logger As ILogger = Nothing)
  overload: Steeltoe.Messaging.RabbitMQ.Core.BatchingRabbitTemplate.#ctor*
  nameWithType.vb: BatchingRabbitTemplate.BatchingRabbitTemplate(IOptionsMonitor(Of RabbitOptions), IConnectionFactory, IBatchingStrategy, ILogger)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Steeltoe.Messaging.RabbitMQ.Core.BatchingRabbitTemplate.BatchingRabbitTemplate(Microsoft.Extensions.Options.IOptionsMonitor(Of Steeltoe.Messaging.RabbitMQ.Config.RabbitOptions), Steeltoe.Messaging.RabbitMQ.Connection.IConnectionFactory, Steeltoe.Messaging.RabbitMQ.Batch.IBatchingStrategy, Microsoft.Extensions.Logging.ILogger)
  name.vb: BatchingRabbitTemplate(IOptionsMonitor(Of RabbitOptions), IConnectionFactory, IBatchingStrategy, ILogger)
- uid: Steeltoe.Messaging.RabbitMQ.Core.BatchingRabbitTemplate.#ctor(Steeltoe.Messaging.RabbitMQ.Config.RabbitOptions,Steeltoe.Messaging.RabbitMQ.Connection.IConnectionFactory,Steeltoe.Messaging.RabbitMQ.Batch.IBatchingStrategy,Microsoft.Extensions.Logging.ILogger)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Core.BatchingRabbitTemplate.#ctor(Steeltoe.Messaging.RabbitMQ.Config.RabbitOptions,Steeltoe.Messaging.RabbitMQ.Connection.IConnectionFactory,Steeltoe.Messaging.RabbitMQ.Batch.IBatchingStrategy,Microsoft.Extensions.Logging.ILogger)
  id: '#ctor(Steeltoe.Messaging.RabbitMQ.Config.RabbitOptions,Steeltoe.Messaging.RabbitMQ.Connection.IConnectionFactory,Steeltoe.Messaging.RabbitMQ.Batch.IBatchingStrategy,Microsoft.Extensions.Logging.ILogger)'
  parent: Steeltoe.Messaging.RabbitMQ.Core.BatchingRabbitTemplate
  langs:
  - csharp
  - vb
  name: BatchingRabbitTemplate(RabbitOptions, IConnectionFactory, IBatchingStrategy, ILogger)
  nameWithType: BatchingRabbitTemplate.BatchingRabbitTemplate(RabbitOptions, IConnectionFactory, IBatchingStrategy, ILogger)
  fullName: Steeltoe.Messaging.RabbitMQ.Core.BatchingRabbitTemplate.BatchingRabbitTemplate(Steeltoe.Messaging.RabbitMQ.Config.RabbitOptions, Steeltoe.Messaging.RabbitMQ.Connection.IConnectionFactory, Steeltoe.Messaging.RabbitMQ.Batch.IBatchingStrategy, Microsoft.Extensions.Logging.ILogger)
  type: Constructor
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Core/BatchingRabbitTemplate.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: .ctor
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Core/BatchingRabbitTemplate.cs
    startLine: 56
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Core
  syntax:
    content: public BatchingRabbitTemplate(RabbitOptions options, IConnectionFactory connectionFactory, IBatchingStrategy batchingStrategy, ILogger logger = null)
    parameters:
    - id: options
      type: Steeltoe.Messaging.RabbitMQ.Config.RabbitOptions
    - id: connectionFactory
      type: Steeltoe.Messaging.RabbitMQ.Connection.IConnectionFactory
    - id: batchingStrategy
      type: Steeltoe.Messaging.RabbitMQ.Batch.IBatchingStrategy
    - id: logger
      type: Microsoft.Extensions.Logging.ILogger
    content.vb: Public Sub New(options As RabbitOptions, connectionFactory As IConnectionFactory, batchingStrategy As IBatchingStrategy, logger As ILogger = Nothing)
  overload: Steeltoe.Messaging.RabbitMQ.Core.BatchingRabbitTemplate.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Steeltoe.Messaging.RabbitMQ.Core.BatchingRabbitTemplate.#ctor(Steeltoe.Messaging.RabbitMQ.Connection.IConnectionFactory,Steeltoe.Messaging.RabbitMQ.Batch.IBatchingStrategy)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Core.BatchingRabbitTemplate.#ctor(Steeltoe.Messaging.RabbitMQ.Connection.IConnectionFactory,Steeltoe.Messaging.RabbitMQ.Batch.IBatchingStrategy)
  id: '#ctor(Steeltoe.Messaging.RabbitMQ.Connection.IConnectionFactory,Steeltoe.Messaging.RabbitMQ.Batch.IBatchingStrategy)'
  parent: Steeltoe.Messaging.RabbitMQ.Core.BatchingRabbitTemplate
  langs:
  - csharp
  - vb
  name: BatchingRabbitTemplate(IConnectionFactory, IBatchingStrategy)
  nameWithType: BatchingRabbitTemplate.BatchingRabbitTemplate(IConnectionFactory, IBatchingStrategy)
  fullName: Steeltoe.Messaging.RabbitMQ.Core.BatchingRabbitTemplate.BatchingRabbitTemplate(Steeltoe.Messaging.RabbitMQ.Connection.IConnectionFactory, Steeltoe.Messaging.RabbitMQ.Batch.IBatchingStrategy)
  type: Constructor
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Core/BatchingRabbitTemplate.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: .ctor
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Core/BatchingRabbitTemplate.cs
    startLine: 66
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Core
  syntax:
    content: public BatchingRabbitTemplate(IConnectionFactory connectionFactory, IBatchingStrategy batchingStrategy)
    parameters:
    - id: connectionFactory
      type: Steeltoe.Messaging.RabbitMQ.Connection.IConnectionFactory
    - id: batchingStrategy
      type: Steeltoe.Messaging.RabbitMQ.Batch.IBatchingStrategy
    content.vb: Public Sub New(connectionFactory As IConnectionFactory, batchingStrategy As IBatchingStrategy)
  overload: Steeltoe.Messaging.RabbitMQ.Core.BatchingRabbitTemplate.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Steeltoe.Messaging.RabbitMQ.Core.BatchingRabbitTemplate.#ctor(Steeltoe.Messaging.RabbitMQ.Batch.IBatchingStrategy)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Core.BatchingRabbitTemplate.#ctor(Steeltoe.Messaging.RabbitMQ.Batch.IBatchingStrategy)
  id: '#ctor(Steeltoe.Messaging.RabbitMQ.Batch.IBatchingStrategy)'
  parent: Steeltoe.Messaging.RabbitMQ.Core.BatchingRabbitTemplate
  langs:
  - csharp
  - vb
  name: BatchingRabbitTemplate(IBatchingStrategy)
  nameWithType: BatchingRabbitTemplate.BatchingRabbitTemplate(IBatchingStrategy)
  fullName: Steeltoe.Messaging.RabbitMQ.Core.BatchingRabbitTemplate.BatchingRabbitTemplate(Steeltoe.Messaging.RabbitMQ.Batch.IBatchingStrategy)
  type: Constructor
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Core/BatchingRabbitTemplate.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: .ctor
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Core/BatchingRabbitTemplate.cs
    startLine: 72
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Core
  syntax:
    content: public BatchingRabbitTemplate(IBatchingStrategy batchingStrategy)
    parameters:
    - id: batchingStrategy
      type: Steeltoe.Messaging.RabbitMQ.Batch.IBatchingStrategy
    content.vb: Public Sub New(batchingStrategy As IBatchingStrategy)
  overload: Steeltoe.Messaging.RabbitMQ.Core.BatchingRabbitTemplate.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Steeltoe.Messaging.RabbitMQ.Core.BatchingRabbitTemplate.Send(System.String,System.String,Steeltoe.Messaging.IMessage,Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Core.BatchingRabbitTemplate.Send(System.String,System.String,Steeltoe.Messaging.IMessage,Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData)
  id: Send(System.String,System.String,Steeltoe.Messaging.IMessage,Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData)
  parent: Steeltoe.Messaging.RabbitMQ.Core.BatchingRabbitTemplate
  langs:
  - csharp
  - vb
  name: Send(String, String, IMessage, CorrelationData)
  nameWithType: BatchingRabbitTemplate.Send(String, String, IMessage, CorrelationData)
  fullName: Steeltoe.Messaging.RabbitMQ.Core.BatchingRabbitTemplate.Send(System.String, System.String, Steeltoe.Messaging.IMessage, Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData)
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Core/BatchingRabbitTemplate.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Send
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Core/BatchingRabbitTemplate.cs
    startLine: 77
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Core
  syntax:
    content: public override void Send(string exchange, string routingKey, IMessage message, CorrelationData correlationData)
    parameters:
    - id: exchange
      type: System.String
    - id: routingKey
      type: System.String
    - id: message
      type: Steeltoe.Messaging.IMessage
    - id: correlationData
      type: Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData
    content.vb: Public Overrides Sub Send(exchange As String, routingKey As String, message As IMessage, correlationData As CorrelationData)
  overridden: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.Send(System.String,System.String,Steeltoe.Messaging.IMessage,Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData)
  overload: Steeltoe.Messaging.RabbitMQ.Core.BatchingRabbitTemplate.Send*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Steeltoe.Messaging.RabbitMQ.Core.BatchingRabbitTemplate.Flush
  commentId: M:Steeltoe.Messaging.RabbitMQ.Core.BatchingRabbitTemplate.Flush
  id: Flush
  parent: Steeltoe.Messaging.RabbitMQ.Core.BatchingRabbitTemplate
  langs:
  - csharp
  - vb
  name: Flush()
  nameWithType: BatchingRabbitTemplate.Flush()
  fullName: Steeltoe.Messaging.RabbitMQ.Core.BatchingRabbitTemplate.Flush()
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Core/BatchingRabbitTemplate.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Flush
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Core/BatchingRabbitTemplate.cs
    startLine: 116
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Core
  syntax:
    content: public void Flush()
    content.vb: Public Sub Flush
  overload: Steeltoe.Messaging.RabbitMQ.Core.BatchingRabbitTemplate.Flush*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Steeltoe.Messaging.RabbitMQ.Core.BatchingRabbitTemplate.FlushAsync(System.Threading.CancellationToken)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Core.BatchingRabbitTemplate.FlushAsync(System.Threading.CancellationToken)
  id: FlushAsync(System.Threading.CancellationToken)
  parent: Steeltoe.Messaging.RabbitMQ.Core.BatchingRabbitTemplate
  langs:
  - csharp
  - vb
  name: FlushAsync(CancellationToken)
  nameWithType: BatchingRabbitTemplate.FlushAsync(CancellationToken)
  fullName: Steeltoe.Messaging.RabbitMQ.Core.BatchingRabbitTemplate.FlushAsync(System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Core/BatchingRabbitTemplate.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: FlushAsync
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Core/BatchingRabbitTemplate.cs
    startLine: 121
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Core
  syntax:
    content: public Task FlushAsync(CancellationToken cancellationToken)
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function FlushAsync(cancellationToken As CancellationToken) As Task
  overload: Steeltoe.Messaging.RabbitMQ.Core.BatchingRabbitTemplate.FlushAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Steeltoe.Messaging.RabbitMQ.Core
  commentId: N:Steeltoe.Messaging.RabbitMQ.Core
  name: Steeltoe.Messaging.RabbitMQ.Core
  nameWithType: Steeltoe.Messaging.RabbitMQ.Core
  fullName: Steeltoe.Messaging.RabbitMQ.Core
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate{Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination}
  commentId: T:Steeltoe.Messaging.Core.AbstractMessageSendingTemplate{Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination}
  parent: Steeltoe.Messaging.Core
  definition: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1
  name: AbstractMessageSendingTemplate<RabbitDestination>
  nameWithType: AbstractMessageSendingTemplate<RabbitDestination>
  fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate<Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination>
  nameWithType.vb: AbstractMessageSendingTemplate(Of RabbitDestination)
  fullName.vb: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate(Of Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination)
  name.vb: AbstractMessageSendingTemplate(Of RabbitDestination)
  spec.csharp:
  - uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1
    name: AbstractMessageSendingTemplate
    nameWithType: AbstractMessageSendingTemplate
    fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate
  - name: <
    nameWithType: <
    fullName: <
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination
    name: RabbitDestination
    nameWithType: RabbitDestination
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1
    name: AbstractMessageSendingTemplate
    nameWithType: AbstractMessageSendingTemplate
    fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination
    name: RabbitDestination
    nameWithType: RabbitDestination
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate{Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination}
  commentId: T:Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate{Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination}
  parent: Steeltoe.Messaging.Core
  definition: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate`1
  name: AbstractMessageReceivingTemplate<RabbitDestination>
  nameWithType: AbstractMessageReceivingTemplate<RabbitDestination>
  fullName: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate<Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination>
  nameWithType.vb: AbstractMessageReceivingTemplate(Of RabbitDestination)
  fullName.vb: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate(Of Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination)
  name.vb: AbstractMessageReceivingTemplate(Of RabbitDestination)
  spec.csharp:
  - uid: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate`1
    name: AbstractMessageReceivingTemplate
    nameWithType: AbstractMessageReceivingTemplate
    fullName: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate
  - name: <
    nameWithType: <
    fullName: <
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination
    name: RabbitDestination
    nameWithType: RabbitDestination
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate`1
    name: AbstractMessageReceivingTemplate
    nameWithType: AbstractMessageReceivingTemplate
    fullName: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination
    name: RabbitDestination
    nameWithType: RabbitDestination
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Core.AbstractMessagingTemplate{Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination}
  commentId: T:Steeltoe.Messaging.Core.AbstractMessagingTemplate{Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination}
  parent: Steeltoe.Messaging.Core
  definition: Steeltoe.Messaging.Core.AbstractMessagingTemplate`1
  name: AbstractMessagingTemplate<RabbitDestination>
  nameWithType: AbstractMessagingTemplate<RabbitDestination>
  fullName: Steeltoe.Messaging.Core.AbstractMessagingTemplate<Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination>
  nameWithType.vb: AbstractMessagingTemplate(Of RabbitDestination)
  fullName.vb: Steeltoe.Messaging.Core.AbstractMessagingTemplate(Of Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination)
  name.vb: AbstractMessagingTemplate(Of RabbitDestination)
  spec.csharp:
  - uid: Steeltoe.Messaging.Core.AbstractMessagingTemplate`1
    name: AbstractMessagingTemplate
    nameWithType: AbstractMessagingTemplate
    fullName: Steeltoe.Messaging.Core.AbstractMessagingTemplate
  - name: <
    nameWithType: <
    fullName: <
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination
    name: RabbitDestination
    nameWithType: RabbitDestination
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Steeltoe.Messaging.Core.AbstractMessagingTemplate`1
    name: AbstractMessagingTemplate
    nameWithType: AbstractMessagingTemplate
    fullName: Steeltoe.Messaging.Core.AbstractMessagingTemplate
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination
    name: RabbitDestination
    nameWithType: RabbitDestination
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate
  commentId: T:Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate
  parent: Steeltoe.Messaging.RabbitMQ.Core
  name: RabbitTemplate
  nameWithType: RabbitTemplate
  fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate
- uid: Steeltoe.Messaging.Core.IMessageSendingOperations{Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination}
  commentId: T:Steeltoe.Messaging.Core.IMessageSendingOperations{Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination}
  parent: Steeltoe.Messaging.Core
  definition: Steeltoe.Messaging.Core.IMessageSendingOperations`1
  name: IMessageSendingOperations<RabbitDestination>
  nameWithType: IMessageSendingOperations<RabbitDestination>
  fullName: Steeltoe.Messaging.Core.IMessageSendingOperations<Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination>
  nameWithType.vb: IMessageSendingOperations(Of RabbitDestination)
  fullName.vb: Steeltoe.Messaging.Core.IMessageSendingOperations(Of Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination)
  name.vb: IMessageSendingOperations(Of RabbitDestination)
  spec.csharp:
  - uid: Steeltoe.Messaging.Core.IMessageSendingOperations`1
    name: IMessageSendingOperations
    nameWithType: IMessageSendingOperations
    fullName: Steeltoe.Messaging.Core.IMessageSendingOperations
  - name: <
    nameWithType: <
    fullName: <
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination
    name: RabbitDestination
    nameWithType: RabbitDestination
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Steeltoe.Messaging.Core.IMessageSendingOperations`1
    name: IMessageSendingOperations
    nameWithType: IMessageSendingOperations
    fullName: Steeltoe.Messaging.Core.IMessageSendingOperations
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination
    name: RabbitDestination
    nameWithType: RabbitDestination
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Core.IMessageReceivingOperations{Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination}
  commentId: T:Steeltoe.Messaging.Core.IMessageReceivingOperations{Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination}
  parent: Steeltoe.Messaging.Core
  definition: Steeltoe.Messaging.Core.IMessageReceivingOperations`1
  name: IMessageReceivingOperations<RabbitDestination>
  nameWithType: IMessageReceivingOperations<RabbitDestination>
  fullName: Steeltoe.Messaging.Core.IMessageReceivingOperations<Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination>
  nameWithType.vb: IMessageReceivingOperations(Of RabbitDestination)
  fullName.vb: Steeltoe.Messaging.Core.IMessageReceivingOperations(Of Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination)
  name.vb: IMessageReceivingOperations(Of RabbitDestination)
  spec.csharp:
  - uid: Steeltoe.Messaging.Core.IMessageReceivingOperations`1
    name: IMessageReceivingOperations
    nameWithType: IMessageReceivingOperations
    fullName: Steeltoe.Messaging.Core.IMessageReceivingOperations
  - name: <
    nameWithType: <
    fullName: <
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination
    name: RabbitDestination
    nameWithType: RabbitDestination
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Steeltoe.Messaging.Core.IMessageReceivingOperations`1
    name: IMessageReceivingOperations
    nameWithType: IMessageReceivingOperations
    fullName: Steeltoe.Messaging.Core.IMessageReceivingOperations
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination
    name: RabbitDestination
    nameWithType: RabbitDestination
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Core.IMessageRequestReplyOperations{Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination}
  commentId: T:Steeltoe.Messaging.Core.IMessageRequestReplyOperations{Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination}
  parent: Steeltoe.Messaging.Core
  definition: Steeltoe.Messaging.Core.IMessageRequestReplyOperations`1
  name: IMessageRequestReplyOperations<RabbitDestination>
  nameWithType: IMessageRequestReplyOperations<RabbitDestination>
  fullName: Steeltoe.Messaging.Core.IMessageRequestReplyOperations<Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination>
  nameWithType.vb: IMessageRequestReplyOperations(Of RabbitDestination)
  fullName.vb: Steeltoe.Messaging.Core.IMessageRequestReplyOperations(Of Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination)
  name.vb: IMessageRequestReplyOperations(Of RabbitDestination)
  spec.csharp:
  - uid: Steeltoe.Messaging.Core.IMessageRequestReplyOperations`1
    name: IMessageRequestReplyOperations
    nameWithType: IMessageRequestReplyOperations
    fullName: Steeltoe.Messaging.Core.IMessageRequestReplyOperations
  - name: <
    nameWithType: <
    fullName: <
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination
    name: RabbitDestination
    nameWithType: RabbitDestination
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Steeltoe.Messaging.Core.IMessageRequestReplyOperations`1
    name: IMessageRequestReplyOperations
    nameWithType: IMessageRequestReplyOperations
    fullName: Steeltoe.Messaging.Core.IMessageRequestReplyOperations
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination
    name: RabbitDestination
    nameWithType: RabbitDestination
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Core.IRabbitTemplate
  commentId: T:Steeltoe.Messaging.RabbitMQ.Core.IRabbitTemplate
  parent: Steeltoe.Messaging.RabbitMQ.Core
  name: IRabbitTemplate
  nameWithType: IRabbitTemplate
  fullName: Steeltoe.Messaging.RabbitMQ.Core.IRabbitTemplate
- uid: Steeltoe.Messaging.RabbitMQ.Listener.IMessageListener
  commentId: T:Steeltoe.Messaging.RabbitMQ.Listener.IMessageListener
  parent: Steeltoe.Messaging.RabbitMQ.Listener
  name: IMessageListener
  nameWithType: IMessageListener
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.IMessageListener
- uid: Steeltoe.Messaging.RabbitMQ.Support.IListenerContainerAware
  commentId: T:Steeltoe.Messaging.RabbitMQ.Support.IListenerContainerAware
  parent: Steeltoe.Messaging.RabbitMQ.Support
  name: IListenerContainerAware
  nameWithType: IListenerContainerAware
  fullName: Steeltoe.Messaging.RabbitMQ.Support.IListenerContainerAware
- uid: Steeltoe.Messaging.RabbitMQ.Connection.IPublisherCallbackChannel.IListener
  commentId: T:Steeltoe.Messaging.RabbitMQ.Connection.IPublisherCallbackChannel.IListener
  parent: Steeltoe.Messaging.RabbitMQ.Connection
  name: IPublisherCallbackChannel.IListener
  nameWithType: IPublisherCallbackChannel.IListener
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.IPublisherCallbackChannel.IListener
- uid: Steeltoe.Common.Services.IServiceNameAware
  commentId: T:Steeltoe.Common.Services.IServiceNameAware
  parent: Steeltoe.Common.Services
  name: IServiceNameAware
  nameWithType: IServiceNameAware
  fullName: Steeltoe.Common.Services.IServiceNameAware
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.DEFAULT_SERVICE_NAME
  commentId: F:Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.DEFAULT_SERVICE_NAME
  parent: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate
  name: DEFAULT_SERVICE_NAME
  nameWithType: RabbitTemplate.DEFAULT_SERVICE_NAME
  fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.DEFAULT_SERVICE_NAME
- uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate._logger
  commentId: F:Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate._logger
  parent: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate
  name: _logger
  nameWithType: RabbitTemplate._logger
  fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate._logger
- uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConnectionFactory
  commentId: P:Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConnectionFactory
  parent: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate
  name: ConnectionFactory
  nameWithType: RabbitTemplate.ConnectionFactory
  fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConnectionFactory
- uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.IsChannelTransacted
  commentId: P:Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.IsChannelTransacted
  parent: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate
  name: IsChannelTransacted
  nameWithType: RabbitTemplate.IsChannelTransacted
  fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.IsChannelTransacted
- uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.RoutingKey
  commentId: P:Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.RoutingKey
  parent: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate
  name: RoutingKey
  nameWithType: RabbitTemplate.RoutingKey
  fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.RoutingKey
- uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.Exchange
  commentId: P:Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.Exchange
  parent: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate
  name: Exchange
  nameWithType: RabbitTemplate.Exchange
  fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.Exchange
- uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.DefaultReceiveQueue
  commentId: P:Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.DefaultReceiveQueue
  parent: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate
  name: DefaultReceiveQueue
  nameWithType: RabbitTemplate.DefaultReceiveQueue
  fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.DefaultReceiveQueue
- uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ContainerAckMode
  commentId: P:Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ContainerAckMode
  parent: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate
  name: ContainerAckMode
  nameWithType: RabbitTemplate.ContainerAckMode
  fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ContainerAckMode
- uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.Encoding
  commentId: P:Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.Encoding
  parent: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate
  name: Encoding
  nameWithType: RabbitTemplate.Encoding
  fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.Encoding
- uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ReplyAddress
  commentId: P:Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ReplyAddress
  parent: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate
  name: ReplyAddress
  nameWithType: RabbitTemplate.ReplyAddress
  fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ReplyAddress
- uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ReceiveTimeout
  commentId: P:Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ReceiveTimeout
  parent: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate
  name: ReceiveTimeout
  nameWithType: RabbitTemplate.ReceiveTimeout
  fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ReceiveTimeout
- uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ReplyTimeout
  commentId: P:Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ReplyTimeout
  parent: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate
  name: ReplyTimeout
  nameWithType: RabbitTemplate.ReplyTimeout
  fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ReplyTimeout
- uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.MessagePropertiesConverter
  commentId: P:Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.MessagePropertiesConverter
  parent: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate
  name: MessagePropertiesConverter
  nameWithType: RabbitTemplate.MessagePropertiesConverter
  fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.MessagePropertiesConverter
- uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConfirmCallback
  commentId: P:Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConfirmCallback
  parent: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate
  name: ConfirmCallback
  nameWithType: RabbitTemplate.ConfirmCallback
  fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConfirmCallback
- uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ReturnCallback
  commentId: P:Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ReturnCallback
  parent: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate
  name: ReturnCallback
  nameWithType: RabbitTemplate.ReturnCallback
  fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ReturnCallback
- uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.Mandatory
  commentId: P:Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.Mandatory
  parent: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate
  name: Mandatory
  nameWithType: RabbitTemplate.Mandatory
  fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.Mandatory
- uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.MandatoryExpression
  commentId: P:Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.MandatoryExpression
  parent: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate
  name: MandatoryExpression
  nameWithType: RabbitTemplate.MandatoryExpression
  fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.MandatoryExpression
- uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.MandatoryExpressionString
  commentId: P:Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.MandatoryExpressionString
  parent: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate
  name: MandatoryExpressionString
  nameWithType: RabbitTemplate.MandatoryExpressionString
  fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.MandatoryExpressionString
- uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.SendConnectionFactorySelectorExpression
  commentId: P:Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.SendConnectionFactorySelectorExpression
  parent: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate
  name: SendConnectionFactorySelectorExpression
  nameWithType: RabbitTemplate.SendConnectionFactorySelectorExpression
  fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.SendConnectionFactorySelectorExpression
- uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ReceiveConnectionFactorySelectorExpression
  commentId: P:Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ReceiveConnectionFactorySelectorExpression
  parent: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate
  name: ReceiveConnectionFactorySelectorExpression
  nameWithType: RabbitTemplate.ReceiveConnectionFactorySelectorExpression
  fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ReceiveConnectionFactorySelectorExpression
- uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.CorrelationKey
  commentId: P:Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.CorrelationKey
  parent: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate
  name: CorrelationKey
  nameWithType: RabbitTemplate.CorrelationKey
  fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.CorrelationKey
- uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.EvaluationContext
  commentId: P:Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.EvaluationContext
  parent: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate
  name: EvaluationContext
  nameWithType: RabbitTemplate.EvaluationContext
  fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.EvaluationContext
- uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.RetryTemplate
  commentId: P:Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.RetryTemplate
  parent: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate
  name: RetryTemplate
  nameWithType: RabbitTemplate.RetryTemplate
  fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.RetryTemplate
- uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.RecoveryCallback
  commentId: P:Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.RecoveryCallback
  parent: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate
  name: RecoveryCallback
  nameWithType: RabbitTemplate.RecoveryCallback
  fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.RecoveryCallback
- uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.BeforePublishPostProcessors
  commentId: P:Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.BeforePublishPostProcessors
  parent: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate
  name: BeforePublishPostProcessors
  nameWithType: RabbitTemplate.BeforePublishPostProcessors
  fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.BeforePublishPostProcessors
- uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.AfterReceivePostProcessors
  commentId: P:Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.AfterReceivePostProcessors
  parent: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate
  name: AfterReceivePostProcessors
  nameWithType: RabbitTemplate.AfterReceivePostProcessors
  fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.AfterReceivePostProcessors
- uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.CorrelationDataPostProcessor
  commentId: P:Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.CorrelationDataPostProcessor
  parent: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate
  name: CorrelationDataPostProcessor
  nameWithType: RabbitTemplate.CorrelationDataPostProcessor
  fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.CorrelationDataPostProcessor
- uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.UseTemporaryReplyQueues
  commentId: P:Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.UseTemporaryReplyQueues
  parent: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate
  name: UseTemporaryReplyQueues
  nameWithType: RabbitTemplate.UseTemporaryReplyQueues
  fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.UseTemporaryReplyQueues
- uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.UseDirectReplyToContainer
  commentId: P:Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.UseDirectReplyToContainer
  parent: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate
  name: UseDirectReplyToContainer
  nameWithType: RabbitTemplate.UseDirectReplyToContainer
  fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.UseDirectReplyToContainer
- uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.UserIdExpression
  commentId: P:Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.UserIdExpression
  parent: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate
  name: UserIdExpression
  nameWithType: RabbitTemplate.UserIdExpression
  fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.UserIdExpression
- uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.UserIdExpressionString
  commentId: P:Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.UserIdExpressionString
  parent: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate
  name: UserIdExpressionString
  nameWithType: RabbitTemplate.UserIdExpressionString
  fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.UserIdExpressionString
- uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ServiceName
  commentId: P:Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ServiceName
  parent: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate
  name: ServiceName
  nameWithType: RabbitTemplate.ServiceName
  fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ServiceName
- uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.UserCorrelationId
  commentId: P:Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.UserCorrelationId
  parent: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate
  name: UserCorrelationId
  nameWithType: RabbitTemplate.UserCorrelationId
  fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.UserCorrelationId
- uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.UsePublisherConnection
  commentId: P:Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.UsePublisherConnection
  parent: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate
  name: UsePublisherConnection
  nameWithType: RabbitTemplate.UsePublisherConnection
  fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.UsePublisherConnection
- uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.NoLocalReplyConsumer
  commentId: P:Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.NoLocalReplyConsumer
  parent: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate
  name: NoLocalReplyConsumer
  nameWithType: RabbitTemplate.NoLocalReplyConsumer
  fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.NoLocalReplyConsumer
- uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ReplyErrorHandler
  commentId: P:Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ReplyErrorHandler
  parent: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate
  name: ReplyErrorHandler
  nameWithType: RabbitTemplate.ReplyErrorHandler
  fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ReplyErrorHandler
- uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.IsRunning
  commentId: P:Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.IsRunning
  parent: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate
  name: IsRunning
  nameWithType: RabbitTemplate.IsRunning
  fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.IsRunning
- uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.UUID
  commentId: P:Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.UUID
  parent: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate
  name: UUID
  nameWithType: RabbitTemplate.UUID
  fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.UUID
- uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.IsConfirmListener
  commentId: P:Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.IsConfirmListener
  parent: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate
  name: IsConfirmListener
  nameWithType: RabbitTemplate.IsConfirmListener
  fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.IsConfirmListener
- uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.IsReturnListener
  commentId: P:Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.IsReturnListener
  parent: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate
  name: IsReturnListener
  nameWithType: RabbitTemplate.IsReturnListener
  fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.IsReturnListener
- uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.Options
  commentId: P:Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.Options
  parent: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate
  name: Options
  nameWithType: RabbitTemplate.Options
  fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.Options
- uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.SetBeforePublishPostProcessors(Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor[])
  commentId: M:Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.SetBeforePublishPostProcessors(Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor[])
  parent: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate
  name: SetBeforePublishPostProcessors(IMessagePostProcessor[])
  nameWithType: RabbitTemplate.SetBeforePublishPostProcessors(IMessagePostProcessor[])
  fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.SetBeforePublishPostProcessors(Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor[])
  nameWithType.vb: RabbitTemplate.SetBeforePublishPostProcessors(IMessagePostProcessor())
  fullName.vb: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.SetBeforePublishPostProcessors(Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor())
  name.vb: SetBeforePublishPostProcessors(IMessagePostProcessor())
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.SetBeforePublishPostProcessors(Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor[])
    name: SetBeforePublishPostProcessors
    nameWithType: RabbitTemplate.SetBeforePublishPostProcessors
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.SetBeforePublishPostProcessors
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor
    name: IMessagePostProcessor
    nameWithType: IMessagePostProcessor
    fullName: Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.SetBeforePublishPostProcessors(Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor[])
    name: SetBeforePublishPostProcessors
    nameWithType: RabbitTemplate.SetBeforePublishPostProcessors
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.SetBeforePublishPostProcessors
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor
    name: IMessagePostProcessor
    nameWithType: IMessagePostProcessor
    fullName: Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.AddBeforePublishPostProcessors(Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor[])
  commentId: M:Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.AddBeforePublishPostProcessors(Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor[])
  parent: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate
  name: AddBeforePublishPostProcessors(IMessagePostProcessor[])
  nameWithType: RabbitTemplate.AddBeforePublishPostProcessors(IMessagePostProcessor[])
  fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.AddBeforePublishPostProcessors(Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor[])
  nameWithType.vb: RabbitTemplate.AddBeforePublishPostProcessors(IMessagePostProcessor())
  fullName.vb: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.AddBeforePublishPostProcessors(Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor())
  name.vb: AddBeforePublishPostProcessors(IMessagePostProcessor())
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.AddBeforePublishPostProcessors(Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor[])
    name: AddBeforePublishPostProcessors
    nameWithType: RabbitTemplate.AddBeforePublishPostProcessors
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.AddBeforePublishPostProcessors
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor
    name: IMessagePostProcessor
    nameWithType: IMessagePostProcessor
    fullName: Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.AddBeforePublishPostProcessors(Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor[])
    name: AddBeforePublishPostProcessors
    nameWithType: RabbitTemplate.AddBeforePublishPostProcessors
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.AddBeforePublishPostProcessors
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor
    name: IMessagePostProcessor
    nameWithType: IMessagePostProcessor
    fullName: Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.RemoveBeforePublishPostProcessor(Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.RemoveBeforePublishPostProcessor(Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor)
  parent: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate
  name: RemoveBeforePublishPostProcessor(IMessagePostProcessor)
  nameWithType: RabbitTemplate.RemoveBeforePublishPostProcessor(IMessagePostProcessor)
  fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.RemoveBeforePublishPostProcessor(Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor)
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.RemoveBeforePublishPostProcessor(Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor)
    name: RemoveBeforePublishPostProcessor
    nameWithType: RabbitTemplate.RemoveBeforePublishPostProcessor
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.RemoveBeforePublishPostProcessor
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor
    name: IMessagePostProcessor
    nameWithType: IMessagePostProcessor
    fullName: Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.RemoveBeforePublishPostProcessor(Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor)
    name: RemoveBeforePublishPostProcessor
    nameWithType: RabbitTemplate.RemoveBeforePublishPostProcessor
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.RemoveBeforePublishPostProcessor
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor
    name: IMessagePostProcessor
    nameWithType: IMessagePostProcessor
    fullName: Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.SetAfterReceivePostProcessors(Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor[])
  commentId: M:Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.SetAfterReceivePostProcessors(Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor[])
  parent: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate
  name: SetAfterReceivePostProcessors(IMessagePostProcessor[])
  nameWithType: RabbitTemplate.SetAfterReceivePostProcessors(IMessagePostProcessor[])
  fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.SetAfterReceivePostProcessors(Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor[])
  nameWithType.vb: RabbitTemplate.SetAfterReceivePostProcessors(IMessagePostProcessor())
  fullName.vb: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.SetAfterReceivePostProcessors(Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor())
  name.vb: SetAfterReceivePostProcessors(IMessagePostProcessor())
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.SetAfterReceivePostProcessors(Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor[])
    name: SetAfterReceivePostProcessors
    nameWithType: RabbitTemplate.SetAfterReceivePostProcessors
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.SetAfterReceivePostProcessors
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor
    name: IMessagePostProcessor
    nameWithType: IMessagePostProcessor
    fullName: Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.SetAfterReceivePostProcessors(Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor[])
    name: SetAfterReceivePostProcessors
    nameWithType: RabbitTemplate.SetAfterReceivePostProcessors
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.SetAfterReceivePostProcessors
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor
    name: IMessagePostProcessor
    nameWithType: IMessagePostProcessor
    fullName: Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.AddAfterReceivePostProcessors(Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor[])
  commentId: M:Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.AddAfterReceivePostProcessors(Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor[])
  parent: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate
  name: AddAfterReceivePostProcessors(IMessagePostProcessor[])
  nameWithType: RabbitTemplate.AddAfterReceivePostProcessors(IMessagePostProcessor[])
  fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.AddAfterReceivePostProcessors(Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor[])
  nameWithType.vb: RabbitTemplate.AddAfterReceivePostProcessors(IMessagePostProcessor())
  fullName.vb: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.AddAfterReceivePostProcessors(Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor())
  name.vb: AddAfterReceivePostProcessors(IMessagePostProcessor())
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.AddAfterReceivePostProcessors(Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor[])
    name: AddAfterReceivePostProcessors
    nameWithType: RabbitTemplate.AddAfterReceivePostProcessors
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.AddAfterReceivePostProcessors
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor
    name: IMessagePostProcessor
    nameWithType: IMessagePostProcessor
    fullName: Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.AddAfterReceivePostProcessors(Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor[])
    name: AddAfterReceivePostProcessors
    nameWithType: RabbitTemplate.AddAfterReceivePostProcessors
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.AddAfterReceivePostProcessors
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor
    name: IMessagePostProcessor
    nameWithType: IMessagePostProcessor
    fullName: Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.RemoveAfterReceivePostProcessor(Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.RemoveAfterReceivePostProcessor(Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor)
  parent: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate
  name: RemoveAfterReceivePostProcessor(IMessagePostProcessor)
  nameWithType: RabbitTemplate.RemoveAfterReceivePostProcessor(IMessagePostProcessor)
  fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.RemoveAfterReceivePostProcessor(Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor)
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.RemoveAfterReceivePostProcessor(Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor)
    name: RemoveAfterReceivePostProcessor
    nameWithType: RabbitTemplate.RemoveAfterReceivePostProcessor
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.RemoveAfterReceivePostProcessor
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor
    name: IMessagePostProcessor
    nameWithType: IMessagePostProcessor
    fullName: Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.RemoveAfterReceivePostProcessor(Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor)
    name: RemoveAfterReceivePostProcessor
    nameWithType: RabbitTemplate.RemoveAfterReceivePostProcessor
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.RemoveAfterReceivePostProcessor
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor
    name: IMessagePostProcessor
    nameWithType: IMessagePostProcessor
    fullName: Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.HandleConfirm(Steeltoe.Messaging.RabbitMQ.Connection.PendingConfirm,System.Boolean)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.HandleConfirm(Steeltoe.Messaging.RabbitMQ.Connection.PendingConfirm,System.Boolean)
  parent: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate
  isExternal: true
  name: HandleConfirm(PendingConfirm, Boolean)
  nameWithType: RabbitTemplate.HandleConfirm(PendingConfirm, Boolean)
  fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.HandleConfirm(Steeltoe.Messaging.RabbitMQ.Connection.PendingConfirm, System.Boolean)
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.HandleConfirm(Steeltoe.Messaging.RabbitMQ.Connection.PendingConfirm,System.Boolean)
    name: HandleConfirm
    nameWithType: RabbitTemplate.HandleConfirm
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.HandleConfirm
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.RabbitMQ.Connection.PendingConfirm
    name: PendingConfirm
    nameWithType: PendingConfirm
    fullName: Steeltoe.Messaging.RabbitMQ.Connection.PendingConfirm
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.HandleConfirm(Steeltoe.Messaging.RabbitMQ.Connection.PendingConfirm,System.Boolean)
    name: HandleConfirm
    nameWithType: RabbitTemplate.HandleConfirm
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.HandleConfirm
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.RabbitMQ.Connection.PendingConfirm
    name: PendingConfirm
    nameWithType: PendingConfirm
    fullName: Steeltoe.Messaging.RabbitMQ.Connection.PendingConfirm
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.HandleReturn(System.Int32,System.String,System.String,System.String,RabbitMQ.Client.IBasicProperties,System.Byte[])
  commentId: M:Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.HandleReturn(System.Int32,System.String,System.String,System.String,RabbitMQ.Client.IBasicProperties,System.Byte[])
  parent: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate
  isExternal: true
  name: HandleReturn(Int32, String, String, String, IBasicProperties, Byte[])
  nameWithType: RabbitTemplate.HandleReturn(Int32, String, String, String, IBasicProperties, Byte[])
  fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.HandleReturn(System.Int32, System.String, System.String, System.String, RabbitMQ.Client.IBasicProperties, System.Byte[])
  nameWithType.vb: RabbitTemplate.HandleReturn(Int32, String, String, String, IBasicProperties, Byte())
  fullName.vb: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.HandleReturn(System.Int32, System.String, System.String, System.String, RabbitMQ.Client.IBasicProperties, System.Byte())
  name.vb: HandleReturn(Int32, String, String, String, IBasicProperties, Byte())
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.HandleReturn(System.Int32,System.String,System.String,System.String,RabbitMQ.Client.IBasicProperties,System.Byte[])
    name: HandleReturn
    nameWithType: RabbitTemplate.HandleReturn
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.HandleReturn
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: RabbitMQ.Client.IBasicProperties
    name: IBasicProperties
    nameWithType: IBasicProperties
    fullName: RabbitMQ.Client.IBasicProperties
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.HandleReturn(System.Int32,System.String,System.String,System.String,RabbitMQ.Client.IBasicProperties,System.Byte[])
    name: HandleReturn
    nameWithType: RabbitTemplate.HandleReturn
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.HandleReturn
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: RabbitMQ.Client.IBasicProperties
    name: IBasicProperties
    nameWithType: IBasicProperties
    fullName: RabbitMQ.Client.IBasicProperties
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.Revoke(RabbitMQ.Client.IModel)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.Revoke(RabbitMQ.Client.IModel)
  parent: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate
  isExternal: true
  name: Revoke(IModel)
  nameWithType: RabbitTemplate.Revoke(IModel)
  fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.Revoke(RabbitMQ.Client.IModel)
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.Revoke(RabbitMQ.Client.IModel)
    name: Revoke
    nameWithType: RabbitTemplate.Revoke
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.Revoke
  - name: (
    nameWithType: (
    fullName: (
  - uid: RabbitMQ.Client.IModel
    name: IModel
    nameWithType: IModel
    fullName: RabbitMQ.Client.IModel
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.Revoke(RabbitMQ.Client.IModel)
    name: Revoke
    nameWithType: RabbitTemplate.Revoke
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.Revoke
  - name: (
    nameWithType: (
    fullName: (
  - uid: RabbitMQ.Client.IModel
    name: IModel
    nameWithType: IModel
    fullName: RabbitMQ.Client.IModel
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.OnMessageBatch(System.Collections.Generic.List{Steeltoe.Messaging.IMessage})
  commentId: M:Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.OnMessageBatch(System.Collections.Generic.List{Steeltoe.Messaging.IMessage})
  parent: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate
  isExternal: true
  name: OnMessageBatch(List<IMessage>)
  nameWithType: RabbitTemplate.OnMessageBatch(List<IMessage>)
  fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.OnMessageBatch(System.Collections.Generic.List<Steeltoe.Messaging.IMessage>)
  nameWithType.vb: RabbitTemplate.OnMessageBatch(List(Of IMessage))
  fullName.vb: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.OnMessageBatch(System.Collections.Generic.List(Of Steeltoe.Messaging.IMessage))
  name.vb: OnMessageBatch(List(Of IMessage))
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.OnMessageBatch(System.Collections.Generic.List{Steeltoe.Messaging.IMessage})
    name: OnMessageBatch
    nameWithType: RabbitTemplate.OnMessageBatch
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.OnMessageBatch
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.OnMessageBatch(System.Collections.Generic.List{Steeltoe.Messaging.IMessage})
    name: OnMessageBatch
    nameWithType: RabbitTemplate.OnMessageBatch
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.OnMessageBatch
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.OnMessage(Steeltoe.Messaging.IMessage)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.OnMessage(Steeltoe.Messaging.IMessage)
  parent: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate
  name: OnMessage(IMessage)
  nameWithType: RabbitTemplate.OnMessage(IMessage)
  fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.OnMessage(Steeltoe.Messaging.IMessage)
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.OnMessage(Steeltoe.Messaging.IMessage)
    name: OnMessage
    nameWithType: RabbitTemplate.OnMessage
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.OnMessage
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.OnMessage(Steeltoe.Messaging.IMessage)
    name: OnMessage
    nameWithType: RabbitTemplate.OnMessage
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.OnMessage
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.GetExpectedQueueNames
  commentId: M:Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.GetExpectedQueueNames
  parent: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate
  name: GetExpectedQueueNames()
  nameWithType: RabbitTemplate.GetExpectedQueueNames()
  fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.GetExpectedQueueNames()
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.GetExpectedQueueNames
    name: GetExpectedQueueNames
    nameWithType: RabbitTemplate.GetExpectedQueueNames
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.GetExpectedQueueNames
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.GetExpectedQueueNames
    name: GetExpectedQueueNames
    nameWithType: RabbitTemplate.GetExpectedQueueNames
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.GetExpectedQueueNames
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.Send(System.String,Steeltoe.Messaging.IMessage)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.Send(System.String,Steeltoe.Messaging.IMessage)
  parent: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate
  isExternal: true
  name: Send(String, IMessage)
  nameWithType: RabbitTemplate.Send(String, IMessage)
  fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.Send(System.String, Steeltoe.Messaging.IMessage)
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.Send(System.String,Steeltoe.Messaging.IMessage)
    name: Send
    nameWithType: RabbitTemplate.Send
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.Send
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.Send(System.String,Steeltoe.Messaging.IMessage)
    name: Send
    nameWithType: RabbitTemplate.Send
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.Send
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.Send(System.String,System.String,Steeltoe.Messaging.IMessage)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.Send(System.String,System.String,Steeltoe.Messaging.IMessage)
  parent: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate
  isExternal: true
  name: Send(String, String, IMessage)
  nameWithType: RabbitTemplate.Send(String, String, IMessage)
  fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.Send(System.String, System.String, Steeltoe.Messaging.IMessage)
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.Send(System.String,System.String,Steeltoe.Messaging.IMessage)
    name: Send
    nameWithType: RabbitTemplate.Send
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.Send
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.Send(System.String,System.String,Steeltoe.Messaging.IMessage)
    name: Send
    nameWithType: RabbitTemplate.Send
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.Send
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.SendAsync(System.String,Steeltoe.Messaging.IMessage,System.Threading.CancellationToken)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.SendAsync(System.String,Steeltoe.Messaging.IMessage,System.Threading.CancellationToken)
  parent: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate
  isExternal: true
  name: SendAsync(String, IMessage, CancellationToken)
  nameWithType: RabbitTemplate.SendAsync(String, IMessage, CancellationToken)
  fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.SendAsync(System.String, Steeltoe.Messaging.IMessage, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.SendAsync(System.String,Steeltoe.Messaging.IMessage,System.Threading.CancellationToken)
    name: SendAsync
    nameWithType: RabbitTemplate.SendAsync
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.SendAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.SendAsync(System.String,Steeltoe.Messaging.IMessage,System.Threading.CancellationToken)
    name: SendAsync
    nameWithType: RabbitTemplate.SendAsync
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.SendAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.SendAsync(System.String,System.String,Steeltoe.Messaging.IMessage,System.Threading.CancellationToken)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.SendAsync(System.String,System.String,Steeltoe.Messaging.IMessage,System.Threading.CancellationToken)
  parent: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate
  isExternal: true
  name: SendAsync(String, String, IMessage, CancellationToken)
  nameWithType: RabbitTemplate.SendAsync(String, String, IMessage, CancellationToken)
  fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.SendAsync(System.String, System.String, Steeltoe.Messaging.IMessage, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.SendAsync(System.String,System.String,Steeltoe.Messaging.IMessage,System.Threading.CancellationToken)
    name: SendAsync
    nameWithType: RabbitTemplate.SendAsync
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.SendAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.SendAsync(System.String,System.String,Steeltoe.Messaging.IMessage,System.Threading.CancellationToken)
    name: SendAsync
    nameWithType: RabbitTemplate.SendAsync
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.SendAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.SendAsync(System.String,System.String,Steeltoe.Messaging.IMessage,Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData,System.Threading.CancellationToken)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.SendAsync(System.String,System.String,Steeltoe.Messaging.IMessage,Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData,System.Threading.CancellationToken)
  parent: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate
  isExternal: true
  name: SendAsync(String, String, IMessage, CorrelationData, CancellationToken)
  nameWithType: RabbitTemplate.SendAsync(String, String, IMessage, CorrelationData, CancellationToken)
  fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.SendAsync(System.String, System.String, Steeltoe.Messaging.IMessage, Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.SendAsync(System.String,System.String,Steeltoe.Messaging.IMessage,Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData,System.Threading.CancellationToken)
    name: SendAsync
    nameWithType: RabbitTemplate.SendAsync
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.SendAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData
    name: CorrelationData
    nameWithType: CorrelationData
    fullName: Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.SendAsync(System.String,System.String,Steeltoe.Messaging.IMessage,Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData,System.Threading.CancellationToken)
    name: SendAsync
    nameWithType: RabbitTemplate.SendAsync
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.SendAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData
    name: CorrelationData
    nameWithType: CorrelationData
    fullName: Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertAndSend(System.Object,Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertAndSend(System.Object,Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor)
  parent: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate
  isExternal: true
  name: ConvertAndSend(Object, IMessagePostProcessor)
  nameWithType: RabbitTemplate.ConvertAndSend(Object, IMessagePostProcessor)
  fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertAndSend(System.Object, Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor)
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertAndSend(System.Object,Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor)
    name: ConvertAndSend
    nameWithType: RabbitTemplate.ConvertAndSend
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertAndSend
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor
    name: IMessagePostProcessor
    nameWithType: IMessagePostProcessor
    fullName: Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertAndSend(System.Object,Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor)
    name: ConvertAndSend
    nameWithType: RabbitTemplate.ConvertAndSend
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertAndSend
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor
    name: IMessagePostProcessor
    nameWithType: IMessagePostProcessor
    fullName: Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertAndSend(System.Object,Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor,Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertAndSend(System.Object,Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor,Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData)
  parent: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate
  isExternal: true
  name: ConvertAndSend(Object, IMessagePostProcessor, CorrelationData)
  nameWithType: RabbitTemplate.ConvertAndSend(Object, IMessagePostProcessor, CorrelationData)
  fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertAndSend(System.Object, Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor, Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData)
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertAndSend(System.Object,Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor,Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData)
    name: ConvertAndSend
    nameWithType: RabbitTemplate.ConvertAndSend
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertAndSend
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor
    name: IMessagePostProcessor
    nameWithType: IMessagePostProcessor
    fullName: Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData
    name: CorrelationData
    nameWithType: CorrelationData
    fullName: Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertAndSend(System.Object,Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor,Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData)
    name: ConvertAndSend
    nameWithType: RabbitTemplate.ConvertAndSend
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertAndSend
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor
    name: IMessagePostProcessor
    nameWithType: IMessagePostProcessor
    fullName: Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData
    name: CorrelationData
    nameWithType: CorrelationData
    fullName: Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertAndSend(System.String,System.Object)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertAndSend(System.String,System.Object)
  parent: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate
  isExternal: true
  name: ConvertAndSend(String, Object)
  nameWithType: RabbitTemplate.ConvertAndSend(String, Object)
  fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertAndSend(System.String, System.Object)
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertAndSend(System.String,System.Object)
    name: ConvertAndSend
    nameWithType: RabbitTemplate.ConvertAndSend
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertAndSend
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertAndSend(System.String,System.Object)
    name: ConvertAndSend
    nameWithType: RabbitTemplate.ConvertAndSend
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertAndSend
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertAndSend(System.String,System.Object,Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertAndSend(System.String,System.Object,Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData)
  parent: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate
  isExternal: true
  name: ConvertAndSend(String, Object, CorrelationData)
  nameWithType: RabbitTemplate.ConvertAndSend(String, Object, CorrelationData)
  fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertAndSend(System.String, System.Object, Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData)
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertAndSend(System.String,System.Object,Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData)
    name: ConvertAndSend
    nameWithType: RabbitTemplate.ConvertAndSend
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertAndSend
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData
    name: CorrelationData
    nameWithType: CorrelationData
    fullName: Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertAndSend(System.String,System.Object,Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData)
    name: ConvertAndSend
    nameWithType: RabbitTemplate.ConvertAndSend
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertAndSend
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData
    name: CorrelationData
    nameWithType: CorrelationData
    fullName: Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertAndSend(System.String,System.Object,Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertAndSend(System.String,System.Object,Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor)
  parent: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate
  isExternal: true
  name: ConvertAndSend(String, Object, IMessagePostProcessor)
  nameWithType: RabbitTemplate.ConvertAndSend(String, Object, IMessagePostProcessor)
  fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertAndSend(System.String, System.Object, Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor)
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertAndSend(System.String,System.Object,Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor)
    name: ConvertAndSend
    nameWithType: RabbitTemplate.ConvertAndSend
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertAndSend
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor
    name: IMessagePostProcessor
    nameWithType: IMessagePostProcessor
    fullName: Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertAndSend(System.String,System.Object,Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor)
    name: ConvertAndSend
    nameWithType: RabbitTemplate.ConvertAndSend
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertAndSend
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor
    name: IMessagePostProcessor
    nameWithType: IMessagePostProcessor
    fullName: Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertAndSend(System.String,System.Object,Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor,Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertAndSend(System.String,System.Object,Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor,Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData)
  parent: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate
  isExternal: true
  name: ConvertAndSend(String, Object, IMessagePostProcessor, CorrelationData)
  nameWithType: RabbitTemplate.ConvertAndSend(String, Object, IMessagePostProcessor, CorrelationData)
  fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertAndSend(System.String, System.Object, Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor, Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData)
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertAndSend(System.String,System.Object,Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor,Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData)
    name: ConvertAndSend
    nameWithType: RabbitTemplate.ConvertAndSend
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertAndSend
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor
    name: IMessagePostProcessor
    nameWithType: IMessagePostProcessor
    fullName: Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData
    name: CorrelationData
    nameWithType: CorrelationData
    fullName: Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertAndSend(System.String,System.Object,Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor,Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData)
    name: ConvertAndSend
    nameWithType: RabbitTemplate.ConvertAndSend
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertAndSend
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor
    name: IMessagePostProcessor
    nameWithType: IMessagePostProcessor
    fullName: Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData
    name: CorrelationData
    nameWithType: CorrelationData
    fullName: Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertAndSend(System.String,System.String,System.Object)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertAndSend(System.String,System.String,System.Object)
  parent: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate
  isExternal: true
  name: ConvertAndSend(String, String, Object)
  nameWithType: RabbitTemplate.ConvertAndSend(String, String, Object)
  fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertAndSend(System.String, System.String, System.Object)
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertAndSend(System.String,System.String,System.Object)
    name: ConvertAndSend
    nameWithType: RabbitTemplate.ConvertAndSend
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertAndSend
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertAndSend(System.String,System.String,System.Object)
    name: ConvertAndSend
    nameWithType: RabbitTemplate.ConvertAndSend
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertAndSend
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertAndSend(System.String,System.String,System.Object,Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertAndSend(System.String,System.String,System.Object,Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData)
  parent: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate
  isExternal: true
  name: ConvertAndSend(String, String, Object, CorrelationData)
  nameWithType: RabbitTemplate.ConvertAndSend(String, String, Object, CorrelationData)
  fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertAndSend(System.String, System.String, System.Object, Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData)
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertAndSend(System.String,System.String,System.Object,Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData)
    name: ConvertAndSend
    nameWithType: RabbitTemplate.ConvertAndSend
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertAndSend
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData
    name: CorrelationData
    nameWithType: CorrelationData
    fullName: Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertAndSend(System.String,System.String,System.Object,Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData)
    name: ConvertAndSend
    nameWithType: RabbitTemplate.ConvertAndSend
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertAndSend
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData
    name: CorrelationData
    nameWithType: CorrelationData
    fullName: Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertAndSend(System.String,System.String,System.Object,Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertAndSend(System.String,System.String,System.Object,Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor)
  parent: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate
  isExternal: true
  name: ConvertAndSend(String, String, Object, IMessagePostProcessor)
  nameWithType: RabbitTemplate.ConvertAndSend(String, String, Object, IMessagePostProcessor)
  fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertAndSend(System.String, System.String, System.Object, Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor)
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertAndSend(System.String,System.String,System.Object,Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor)
    name: ConvertAndSend
    nameWithType: RabbitTemplate.ConvertAndSend
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertAndSend
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor
    name: IMessagePostProcessor
    nameWithType: IMessagePostProcessor
    fullName: Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertAndSend(System.String,System.String,System.Object,Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor)
    name: ConvertAndSend
    nameWithType: RabbitTemplate.ConvertAndSend
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertAndSend
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor
    name: IMessagePostProcessor
    nameWithType: IMessagePostProcessor
    fullName: Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertAndSend(System.String,System.String,System.Object,Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor,Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertAndSend(System.String,System.String,System.Object,Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor,Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData)
  parent: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate
  isExternal: true
  name: ConvertAndSend(String, String, Object, IMessagePostProcessor, CorrelationData)
  nameWithType: RabbitTemplate.ConvertAndSend(String, String, Object, IMessagePostProcessor, CorrelationData)
  fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertAndSend(System.String, System.String, System.Object, Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor, Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData)
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertAndSend(System.String,System.String,System.Object,Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor,Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData)
    name: ConvertAndSend
    nameWithType: RabbitTemplate.ConvertAndSend
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertAndSend
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor
    name: IMessagePostProcessor
    nameWithType: IMessagePostProcessor
    fullName: Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData
    name: CorrelationData
    nameWithType: CorrelationData
    fullName: Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertAndSend(System.String,System.String,System.Object,Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor,Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData)
    name: ConvertAndSend
    nameWithType: RabbitTemplate.ConvertAndSend
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertAndSend
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor
    name: IMessagePostProcessor
    nameWithType: IMessagePostProcessor
    fullName: Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData
    name: CorrelationData
    nameWithType: CorrelationData
    fullName: Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertAndSendAsync(System.Object,Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor,System.Threading.CancellationToken)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertAndSendAsync(System.Object,Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor,System.Threading.CancellationToken)
  parent: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate
  isExternal: true
  name: ConvertAndSendAsync(Object, IMessagePostProcessor, CancellationToken)
  nameWithType: RabbitTemplate.ConvertAndSendAsync(Object, IMessagePostProcessor, CancellationToken)
  fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertAndSendAsync(System.Object, Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertAndSendAsync(System.Object,Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor,System.Threading.CancellationToken)
    name: ConvertAndSendAsync
    nameWithType: RabbitTemplate.ConvertAndSendAsync
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertAndSendAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor
    name: IMessagePostProcessor
    nameWithType: IMessagePostProcessor
    fullName: Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertAndSendAsync(System.Object,Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor,System.Threading.CancellationToken)
    name: ConvertAndSendAsync
    nameWithType: RabbitTemplate.ConvertAndSendAsync
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertAndSendAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor
    name: IMessagePostProcessor
    nameWithType: IMessagePostProcessor
    fullName: Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertAndSendAsync(System.Object,Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor,Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData,System.Threading.CancellationToken)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertAndSendAsync(System.Object,Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor,Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData,System.Threading.CancellationToken)
  parent: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate
  isExternal: true
  name: ConvertAndSendAsync(Object, IMessagePostProcessor, CorrelationData, CancellationToken)
  nameWithType: RabbitTemplate.ConvertAndSendAsync(Object, IMessagePostProcessor, CorrelationData, CancellationToken)
  fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertAndSendAsync(System.Object, Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor, Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertAndSendAsync(System.Object,Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor,Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData,System.Threading.CancellationToken)
    name: ConvertAndSendAsync
    nameWithType: RabbitTemplate.ConvertAndSendAsync
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertAndSendAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor
    name: IMessagePostProcessor
    nameWithType: IMessagePostProcessor
    fullName: Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData
    name: CorrelationData
    nameWithType: CorrelationData
    fullName: Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertAndSendAsync(System.Object,Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor,Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData,System.Threading.CancellationToken)
    name: ConvertAndSendAsync
    nameWithType: RabbitTemplate.ConvertAndSendAsync
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertAndSendAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor
    name: IMessagePostProcessor
    nameWithType: IMessagePostProcessor
    fullName: Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData
    name: CorrelationData
    nameWithType: CorrelationData
    fullName: Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertAndSendAsync(System.String,System.Object,System.Threading.CancellationToken)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertAndSendAsync(System.String,System.Object,System.Threading.CancellationToken)
  parent: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate
  isExternal: true
  name: ConvertAndSendAsync(String, Object, CancellationToken)
  nameWithType: RabbitTemplate.ConvertAndSendAsync(String, Object, CancellationToken)
  fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertAndSendAsync(System.String, System.Object, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertAndSendAsync(System.String,System.Object,System.Threading.CancellationToken)
    name: ConvertAndSendAsync
    nameWithType: RabbitTemplate.ConvertAndSendAsync
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertAndSendAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertAndSendAsync(System.String,System.Object,System.Threading.CancellationToken)
    name: ConvertAndSendAsync
    nameWithType: RabbitTemplate.ConvertAndSendAsync
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertAndSendAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertAndSendAsync(System.String,System.Object,Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData,System.Threading.CancellationToken)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertAndSendAsync(System.String,System.Object,Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData,System.Threading.CancellationToken)
  parent: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate
  isExternal: true
  name: ConvertAndSendAsync(String, Object, CorrelationData, CancellationToken)
  nameWithType: RabbitTemplate.ConvertAndSendAsync(String, Object, CorrelationData, CancellationToken)
  fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertAndSendAsync(System.String, System.Object, Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertAndSendAsync(System.String,System.Object,Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData,System.Threading.CancellationToken)
    name: ConvertAndSendAsync
    nameWithType: RabbitTemplate.ConvertAndSendAsync
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertAndSendAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData
    name: CorrelationData
    nameWithType: CorrelationData
    fullName: Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertAndSendAsync(System.String,System.Object,Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData,System.Threading.CancellationToken)
    name: ConvertAndSendAsync
    nameWithType: RabbitTemplate.ConvertAndSendAsync
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertAndSendAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData
    name: CorrelationData
    nameWithType: CorrelationData
    fullName: Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertAndSendAsync(System.String,System.Object,Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor,System.Threading.CancellationToken)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertAndSendAsync(System.String,System.Object,Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor,System.Threading.CancellationToken)
  parent: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate
  isExternal: true
  name: ConvertAndSendAsync(String, Object, IMessagePostProcessor, CancellationToken)
  nameWithType: RabbitTemplate.ConvertAndSendAsync(String, Object, IMessagePostProcessor, CancellationToken)
  fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertAndSendAsync(System.String, System.Object, Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertAndSendAsync(System.String,System.Object,Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor,System.Threading.CancellationToken)
    name: ConvertAndSendAsync
    nameWithType: RabbitTemplate.ConvertAndSendAsync
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertAndSendAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor
    name: IMessagePostProcessor
    nameWithType: IMessagePostProcessor
    fullName: Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertAndSendAsync(System.String,System.Object,Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor,System.Threading.CancellationToken)
    name: ConvertAndSendAsync
    nameWithType: RabbitTemplate.ConvertAndSendAsync
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertAndSendAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor
    name: IMessagePostProcessor
    nameWithType: IMessagePostProcessor
    fullName: Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertAndSendAsync(System.String,System.Object,Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor,Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData,System.Threading.CancellationToken)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertAndSendAsync(System.String,System.Object,Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor,Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData,System.Threading.CancellationToken)
  parent: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate
  isExternal: true
  name: ConvertAndSendAsync(String, Object, IMessagePostProcessor, CorrelationData, CancellationToken)
  nameWithType: RabbitTemplate.ConvertAndSendAsync(String, Object, IMessagePostProcessor, CorrelationData, CancellationToken)
  fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertAndSendAsync(System.String, System.Object, Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor, Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertAndSendAsync(System.String,System.Object,Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor,Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData,System.Threading.CancellationToken)
    name: ConvertAndSendAsync
    nameWithType: RabbitTemplate.ConvertAndSendAsync
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertAndSendAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor
    name: IMessagePostProcessor
    nameWithType: IMessagePostProcessor
    fullName: Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData
    name: CorrelationData
    nameWithType: CorrelationData
    fullName: Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertAndSendAsync(System.String,System.Object,Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor,Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData,System.Threading.CancellationToken)
    name: ConvertAndSendAsync
    nameWithType: RabbitTemplate.ConvertAndSendAsync
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertAndSendAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor
    name: IMessagePostProcessor
    nameWithType: IMessagePostProcessor
    fullName: Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData
    name: CorrelationData
    nameWithType: CorrelationData
    fullName: Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertAndSendAsync(System.String,System.String,System.Object,System.Threading.CancellationToken)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertAndSendAsync(System.String,System.String,System.Object,System.Threading.CancellationToken)
  parent: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate
  isExternal: true
  name: ConvertAndSendAsync(String, String, Object, CancellationToken)
  nameWithType: RabbitTemplate.ConvertAndSendAsync(String, String, Object, CancellationToken)
  fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertAndSendAsync(System.String, System.String, System.Object, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertAndSendAsync(System.String,System.String,System.Object,System.Threading.CancellationToken)
    name: ConvertAndSendAsync
    nameWithType: RabbitTemplate.ConvertAndSendAsync
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertAndSendAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertAndSendAsync(System.String,System.String,System.Object,System.Threading.CancellationToken)
    name: ConvertAndSendAsync
    nameWithType: RabbitTemplate.ConvertAndSendAsync
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertAndSendAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertAndSendAsync(System.String,System.String,System.Object,Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData,System.Threading.CancellationToken)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertAndSendAsync(System.String,System.String,System.Object,Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData,System.Threading.CancellationToken)
  parent: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate
  isExternal: true
  name: ConvertAndSendAsync(String, String, Object, CorrelationData, CancellationToken)
  nameWithType: RabbitTemplate.ConvertAndSendAsync(String, String, Object, CorrelationData, CancellationToken)
  fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertAndSendAsync(System.String, System.String, System.Object, Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertAndSendAsync(System.String,System.String,System.Object,Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData,System.Threading.CancellationToken)
    name: ConvertAndSendAsync
    nameWithType: RabbitTemplate.ConvertAndSendAsync
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertAndSendAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData
    name: CorrelationData
    nameWithType: CorrelationData
    fullName: Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertAndSendAsync(System.String,System.String,System.Object,Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData,System.Threading.CancellationToken)
    name: ConvertAndSendAsync
    nameWithType: RabbitTemplate.ConvertAndSendAsync
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertAndSendAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData
    name: CorrelationData
    nameWithType: CorrelationData
    fullName: Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertAndSendAsync(System.String,System.String,System.Object,Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor,System.Threading.CancellationToken)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertAndSendAsync(System.String,System.String,System.Object,Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor,System.Threading.CancellationToken)
  parent: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate
  isExternal: true
  name: ConvertAndSendAsync(String, String, Object, IMessagePostProcessor, CancellationToken)
  nameWithType: RabbitTemplate.ConvertAndSendAsync(String, String, Object, IMessagePostProcessor, CancellationToken)
  fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertAndSendAsync(System.String, System.String, System.Object, Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertAndSendAsync(System.String,System.String,System.Object,Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor,System.Threading.CancellationToken)
    name: ConvertAndSendAsync
    nameWithType: RabbitTemplate.ConvertAndSendAsync
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertAndSendAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor
    name: IMessagePostProcessor
    nameWithType: IMessagePostProcessor
    fullName: Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertAndSendAsync(System.String,System.String,System.Object,Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor,System.Threading.CancellationToken)
    name: ConvertAndSendAsync
    nameWithType: RabbitTemplate.ConvertAndSendAsync
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertAndSendAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor
    name: IMessagePostProcessor
    nameWithType: IMessagePostProcessor
    fullName: Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertAndSendAsync(System.String,System.String,System.Object,Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor,Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData,System.Threading.CancellationToken)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertAndSendAsync(System.String,System.String,System.Object,Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor,Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData,System.Threading.CancellationToken)
  parent: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate
  isExternal: true
  name: ConvertAndSendAsync(String, String, Object, IMessagePostProcessor, CorrelationData, CancellationToken)
  nameWithType: RabbitTemplate.ConvertAndSendAsync(String, String, Object, IMessagePostProcessor, CorrelationData, CancellationToken)
  fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertAndSendAsync(System.String, System.String, System.Object, Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor, Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertAndSendAsync(System.String,System.String,System.Object,Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor,Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData,System.Threading.CancellationToken)
    name: ConvertAndSendAsync
    nameWithType: RabbitTemplate.ConvertAndSendAsync
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertAndSendAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor
    name: IMessagePostProcessor
    nameWithType: IMessagePostProcessor
    fullName: Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData
    name: CorrelationData
    nameWithType: CorrelationData
    fullName: Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertAndSendAsync(System.String,System.String,System.Object,Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor,Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData,System.Threading.CancellationToken)
    name: ConvertAndSendAsync
    nameWithType: RabbitTemplate.ConvertAndSendAsync
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertAndSendAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor
    name: IMessagePostProcessor
    nameWithType: IMessagePostProcessor
    fullName: Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData
    name: CorrelationData
    nameWithType: CorrelationData
    fullName: Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ReceiveAsync(System.String,System.Threading.CancellationToken)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ReceiveAsync(System.String,System.Threading.CancellationToken)
  parent: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate
  isExternal: true
  name: ReceiveAsync(String, CancellationToken)
  nameWithType: RabbitTemplate.ReceiveAsync(String, CancellationToken)
  fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ReceiveAsync(System.String, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ReceiveAsync(System.String,System.Threading.CancellationToken)
    name: ReceiveAsync
    nameWithType: RabbitTemplate.ReceiveAsync
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ReceiveAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ReceiveAsync(System.String,System.Threading.CancellationToken)
    name: ReceiveAsync
    nameWithType: RabbitTemplate.ReceiveAsync
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ReceiveAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ReceiveAsync(System.Int32,System.Threading.CancellationToken)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ReceiveAsync(System.Int32,System.Threading.CancellationToken)
  parent: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate
  isExternal: true
  name: ReceiveAsync(Int32, CancellationToken)
  nameWithType: RabbitTemplate.ReceiveAsync(Int32, CancellationToken)
  fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ReceiveAsync(System.Int32, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ReceiveAsync(System.Int32,System.Threading.CancellationToken)
    name: ReceiveAsync
    nameWithType: RabbitTemplate.ReceiveAsync
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ReceiveAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ReceiveAsync(System.Int32,System.Threading.CancellationToken)
    name: ReceiveAsync
    nameWithType: RabbitTemplate.ReceiveAsync
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ReceiveAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ReceiveAsync(System.String,System.Int32,System.Threading.CancellationToken)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ReceiveAsync(System.String,System.Int32,System.Threading.CancellationToken)
  parent: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate
  isExternal: true
  name: ReceiveAsync(String, Int32, CancellationToken)
  nameWithType: RabbitTemplate.ReceiveAsync(String, Int32, CancellationToken)
  fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ReceiveAsync(System.String, System.Int32, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ReceiveAsync(System.String,System.Int32,System.Threading.CancellationToken)
    name: ReceiveAsync
    nameWithType: RabbitTemplate.ReceiveAsync
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ReceiveAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ReceiveAsync(System.String,System.Int32,System.Threading.CancellationToken)
    name: ReceiveAsync
    nameWithType: RabbitTemplate.ReceiveAsync
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ReceiveAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.Receive(System.Int32)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.Receive(System.Int32)
  parent: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate
  isExternal: true
  name: Receive(Int32)
  nameWithType: RabbitTemplate.Receive(Int32)
  fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.Receive(System.Int32)
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.Receive(System.Int32)
    name: Receive
    nameWithType: RabbitTemplate.Receive
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.Receive
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.Receive(System.Int32)
    name: Receive
    nameWithType: RabbitTemplate.Receive
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.Receive
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.Receive(System.String)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.Receive(System.String)
  parent: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate
  isExternal: true
  name: Receive(String)
  nameWithType: RabbitTemplate.Receive(String)
  fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.Receive(System.String)
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.Receive(System.String)
    name: Receive
    nameWithType: RabbitTemplate.Receive
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.Receive
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.Receive(System.String)
    name: Receive
    nameWithType: RabbitTemplate.Receive
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.Receive
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.Receive(System.String,System.Int32)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.Receive(System.String,System.Int32)
  parent: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate
  isExternal: true
  name: Receive(String, Int32)
  nameWithType: RabbitTemplate.Receive(String, Int32)
  fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.Receive(System.String, System.Int32)
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.Receive(System.String,System.Int32)
    name: Receive
    nameWithType: RabbitTemplate.Receive
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.Receive
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.Receive(System.String,System.Int32)
    name: Receive
    nameWithType: RabbitTemplate.Receive
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.Receive
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ReceiveAndConvert``1(System.Int32)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ReceiveAndConvert``1(System.Int32)
  parent: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate
  isExternal: true
  name: ReceiveAndConvert<T>(Int32)
  nameWithType: RabbitTemplate.ReceiveAndConvert<T>(Int32)
  fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ReceiveAndConvert<T>(System.Int32)
  nameWithType.vb: RabbitTemplate.ReceiveAndConvert(Of T)(Int32)
  fullName.vb: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ReceiveAndConvert(Of T)(System.Int32)
  name.vb: ReceiveAndConvert(Of T)(Int32)
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ReceiveAndConvert``1(System.Int32)
    name: ReceiveAndConvert<T>
    nameWithType: RabbitTemplate.ReceiveAndConvert<T>
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ReceiveAndConvert<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ReceiveAndConvert``1(System.Int32)
    name: ReceiveAndConvert(Of T)
    nameWithType: RabbitTemplate.ReceiveAndConvert(Of T)
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ReceiveAndConvert(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ReceiveAndConvert``1(System.String)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ReceiveAndConvert``1(System.String)
  parent: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate
  isExternal: true
  name: ReceiveAndConvert<T>(String)
  nameWithType: RabbitTemplate.ReceiveAndConvert<T>(String)
  fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ReceiveAndConvert<T>(System.String)
  nameWithType.vb: RabbitTemplate.ReceiveAndConvert(Of T)(String)
  fullName.vb: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ReceiveAndConvert(Of T)(System.String)
  name.vb: ReceiveAndConvert(Of T)(String)
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ReceiveAndConvert``1(System.String)
    name: ReceiveAndConvert<T>
    nameWithType: RabbitTemplate.ReceiveAndConvert<T>
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ReceiveAndConvert<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ReceiveAndConvert``1(System.String)
    name: ReceiveAndConvert(Of T)
    nameWithType: RabbitTemplate.ReceiveAndConvert(Of T)
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ReceiveAndConvert(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ReceiveAndConvert``1(System.String,System.Int32)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ReceiveAndConvert``1(System.String,System.Int32)
  parent: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate
  isExternal: true
  name: ReceiveAndConvert<T>(String, Int32)
  nameWithType: RabbitTemplate.ReceiveAndConvert<T>(String, Int32)
  fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ReceiveAndConvert<T>(System.String, System.Int32)
  nameWithType.vb: RabbitTemplate.ReceiveAndConvert(Of T)(String, Int32)
  fullName.vb: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ReceiveAndConvert(Of T)(System.String, System.Int32)
  name.vb: ReceiveAndConvert(Of T)(String, Int32)
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ReceiveAndConvert``1(System.String,System.Int32)
    name: ReceiveAndConvert<T>
    nameWithType: RabbitTemplate.ReceiveAndConvert<T>
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ReceiveAndConvert<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ReceiveAndConvert``1(System.String,System.Int32)
    name: ReceiveAndConvert(Of T)
    nameWithType: RabbitTemplate.ReceiveAndConvert(Of T)
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ReceiveAndConvert(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ReceiveAndConvert(System.Type)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ReceiveAndConvert(System.Type)
  parent: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate
  isExternal: true
  name: ReceiveAndConvert(Type)
  nameWithType: RabbitTemplate.ReceiveAndConvert(Type)
  fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ReceiveAndConvert(System.Type)
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ReceiveAndConvert(System.Type)
    name: ReceiveAndConvert
    nameWithType: RabbitTemplate.ReceiveAndConvert
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ReceiveAndConvert
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ReceiveAndConvert(System.Type)
    name: ReceiveAndConvert
    nameWithType: RabbitTemplate.ReceiveAndConvert
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ReceiveAndConvert
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ReceiveAndConvert(System.String,System.Type)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ReceiveAndConvert(System.String,System.Type)
  parent: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate
  isExternal: true
  name: ReceiveAndConvert(String, Type)
  nameWithType: RabbitTemplate.ReceiveAndConvert(String, Type)
  fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ReceiveAndConvert(System.String, System.Type)
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ReceiveAndConvert(System.String,System.Type)
    name: ReceiveAndConvert
    nameWithType: RabbitTemplate.ReceiveAndConvert
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ReceiveAndConvert
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ReceiveAndConvert(System.String,System.Type)
    name: ReceiveAndConvert
    nameWithType: RabbitTemplate.ReceiveAndConvert
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ReceiveAndConvert
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ReceiveAndConvert(System.Int32,System.Type)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ReceiveAndConvert(System.Int32,System.Type)
  parent: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate
  isExternal: true
  name: ReceiveAndConvert(Int32, Type)
  nameWithType: RabbitTemplate.ReceiveAndConvert(Int32, Type)
  fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ReceiveAndConvert(System.Int32, System.Type)
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ReceiveAndConvert(System.Int32,System.Type)
    name: ReceiveAndConvert
    nameWithType: RabbitTemplate.ReceiveAndConvert
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ReceiveAndConvert
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ReceiveAndConvert(System.Int32,System.Type)
    name: ReceiveAndConvert
    nameWithType: RabbitTemplate.ReceiveAndConvert
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ReceiveAndConvert
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ReceiveAndConvert(System.String,System.Int32,System.Type)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ReceiveAndConvert(System.String,System.Int32,System.Type)
  parent: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate
  isExternal: true
  name: ReceiveAndConvert(String, Int32, Type)
  nameWithType: RabbitTemplate.ReceiveAndConvert(String, Int32, Type)
  fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ReceiveAndConvert(System.String, System.Int32, System.Type)
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ReceiveAndConvert(System.String,System.Int32,System.Type)
    name: ReceiveAndConvert
    nameWithType: RabbitTemplate.ReceiveAndConvert
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ReceiveAndConvert
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ReceiveAndConvert(System.String,System.Int32,System.Type)
    name: ReceiveAndConvert
    nameWithType: RabbitTemplate.ReceiveAndConvert
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ReceiveAndConvert
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ReceiveAndConvertAsync``1(System.Int32,System.Threading.CancellationToken)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ReceiveAndConvertAsync``1(System.Int32,System.Threading.CancellationToken)
  parent: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate
  isExternal: true
  name: ReceiveAndConvertAsync<T>(Int32, CancellationToken)
  nameWithType: RabbitTemplate.ReceiveAndConvertAsync<T>(Int32, CancellationToken)
  fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ReceiveAndConvertAsync<T>(System.Int32, System.Threading.CancellationToken)
  nameWithType.vb: RabbitTemplate.ReceiveAndConvertAsync(Of T)(Int32, CancellationToken)
  fullName.vb: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ReceiveAndConvertAsync(Of T)(System.Int32, System.Threading.CancellationToken)
  name.vb: ReceiveAndConvertAsync(Of T)(Int32, CancellationToken)
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ReceiveAndConvertAsync``1(System.Int32,System.Threading.CancellationToken)
    name: ReceiveAndConvertAsync<T>
    nameWithType: RabbitTemplate.ReceiveAndConvertAsync<T>
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ReceiveAndConvertAsync<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ReceiveAndConvertAsync``1(System.Int32,System.Threading.CancellationToken)
    name: ReceiveAndConvertAsync(Of T)
    nameWithType: RabbitTemplate.ReceiveAndConvertAsync(Of T)
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ReceiveAndConvertAsync(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ReceiveAndConvertAsync``1(System.String,System.Threading.CancellationToken)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ReceiveAndConvertAsync``1(System.String,System.Threading.CancellationToken)
  parent: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate
  isExternal: true
  name: ReceiveAndConvertAsync<T>(String, CancellationToken)
  nameWithType: RabbitTemplate.ReceiveAndConvertAsync<T>(String, CancellationToken)
  fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ReceiveAndConvertAsync<T>(System.String, System.Threading.CancellationToken)
  nameWithType.vb: RabbitTemplate.ReceiveAndConvertAsync(Of T)(String, CancellationToken)
  fullName.vb: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ReceiveAndConvertAsync(Of T)(System.String, System.Threading.CancellationToken)
  name.vb: ReceiveAndConvertAsync(Of T)(String, CancellationToken)
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ReceiveAndConvertAsync``1(System.String,System.Threading.CancellationToken)
    name: ReceiveAndConvertAsync<T>
    nameWithType: RabbitTemplate.ReceiveAndConvertAsync<T>
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ReceiveAndConvertAsync<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ReceiveAndConvertAsync``1(System.String,System.Threading.CancellationToken)
    name: ReceiveAndConvertAsync(Of T)
    nameWithType: RabbitTemplate.ReceiveAndConvertAsync(Of T)
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ReceiveAndConvertAsync(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ReceiveAndConvertAsync``1(System.String,System.Int32,System.Threading.CancellationToken)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ReceiveAndConvertAsync``1(System.String,System.Int32,System.Threading.CancellationToken)
  parent: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate
  isExternal: true
  name: ReceiveAndConvertAsync<T>(String, Int32, CancellationToken)
  nameWithType: RabbitTemplate.ReceiveAndConvertAsync<T>(String, Int32, CancellationToken)
  fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ReceiveAndConvertAsync<T>(System.String, System.Int32, System.Threading.CancellationToken)
  nameWithType.vb: RabbitTemplate.ReceiveAndConvertAsync(Of T)(String, Int32, CancellationToken)
  fullName.vb: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ReceiveAndConvertAsync(Of T)(System.String, System.Int32, System.Threading.CancellationToken)
  name.vb: ReceiveAndConvertAsync(Of T)(String, Int32, CancellationToken)
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ReceiveAndConvertAsync``1(System.String,System.Int32,System.Threading.CancellationToken)
    name: ReceiveAndConvertAsync<T>
    nameWithType: RabbitTemplate.ReceiveAndConvertAsync<T>
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ReceiveAndConvertAsync<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ReceiveAndConvertAsync``1(System.String,System.Int32,System.Threading.CancellationToken)
    name: ReceiveAndConvertAsync(Of T)
    nameWithType: RabbitTemplate.ReceiveAndConvertAsync(Of T)
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ReceiveAndConvertAsync(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ReceiveAndConvertAsync(System.Type,System.Threading.CancellationToken)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ReceiveAndConvertAsync(System.Type,System.Threading.CancellationToken)
  parent: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate
  isExternal: true
  name: ReceiveAndConvertAsync(Type, CancellationToken)
  nameWithType: RabbitTemplate.ReceiveAndConvertAsync(Type, CancellationToken)
  fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ReceiveAndConvertAsync(System.Type, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ReceiveAndConvertAsync(System.Type,System.Threading.CancellationToken)
    name: ReceiveAndConvertAsync
    nameWithType: RabbitTemplate.ReceiveAndConvertAsync
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ReceiveAndConvertAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ReceiveAndConvertAsync(System.Type,System.Threading.CancellationToken)
    name: ReceiveAndConvertAsync
    nameWithType: RabbitTemplate.ReceiveAndConvertAsync
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ReceiveAndConvertAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ReceiveAndConvertAsync(System.String,System.Type,System.Threading.CancellationToken)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ReceiveAndConvertAsync(System.String,System.Type,System.Threading.CancellationToken)
  parent: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate
  isExternal: true
  name: ReceiveAndConvertAsync(String, Type, CancellationToken)
  nameWithType: RabbitTemplate.ReceiveAndConvertAsync(String, Type, CancellationToken)
  fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ReceiveAndConvertAsync(System.String, System.Type, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ReceiveAndConvertAsync(System.String,System.Type,System.Threading.CancellationToken)
    name: ReceiveAndConvertAsync
    nameWithType: RabbitTemplate.ReceiveAndConvertAsync
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ReceiveAndConvertAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ReceiveAndConvertAsync(System.String,System.Type,System.Threading.CancellationToken)
    name: ReceiveAndConvertAsync
    nameWithType: RabbitTemplate.ReceiveAndConvertAsync
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ReceiveAndConvertAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ReceiveAndConvertAsync(System.Int32,System.Type,System.Threading.CancellationToken)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ReceiveAndConvertAsync(System.Int32,System.Type,System.Threading.CancellationToken)
  parent: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate
  isExternal: true
  name: ReceiveAndConvertAsync(Int32, Type, CancellationToken)
  nameWithType: RabbitTemplate.ReceiveAndConvertAsync(Int32, Type, CancellationToken)
  fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ReceiveAndConvertAsync(System.Int32, System.Type, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ReceiveAndConvertAsync(System.Int32,System.Type,System.Threading.CancellationToken)
    name: ReceiveAndConvertAsync
    nameWithType: RabbitTemplate.ReceiveAndConvertAsync
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ReceiveAndConvertAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ReceiveAndConvertAsync(System.Int32,System.Type,System.Threading.CancellationToken)
    name: ReceiveAndConvertAsync
    nameWithType: RabbitTemplate.ReceiveAndConvertAsync
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ReceiveAndConvertAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ReceiveAndConvertAsync(System.String,System.Int32,System.Type,System.Threading.CancellationToken)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ReceiveAndConvertAsync(System.String,System.Int32,System.Type,System.Threading.CancellationToken)
  parent: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate
  isExternal: true
  name: ReceiveAndConvertAsync(String, Int32, Type, CancellationToken)
  nameWithType: RabbitTemplate.ReceiveAndConvertAsync(String, Int32, Type, CancellationToken)
  fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ReceiveAndConvertAsync(System.String, System.Int32, System.Type, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ReceiveAndConvertAsync(System.String,System.Int32,System.Type,System.Threading.CancellationToken)
    name: ReceiveAndConvertAsync
    nameWithType: RabbitTemplate.ReceiveAndConvertAsync
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ReceiveAndConvertAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ReceiveAndConvertAsync(System.String,System.Int32,System.Type,System.Threading.CancellationToken)
    name: ReceiveAndConvertAsync
    nameWithType: RabbitTemplate.ReceiveAndConvertAsync
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ReceiveAndConvertAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ReceiveAndReply``2(System.Func{{R},{S}})
  commentId: M:Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ReceiveAndReply``2(System.Func{``0,``1})
  parent: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate
  definition: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ReceiveAndReply``2(System.Func{``0,``1})
  name: ReceiveAndReply<R, S>(Func<R, S>)
  nameWithType: RabbitTemplate.ReceiveAndReply<R, S>(Func<R, S>)
  fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ReceiveAndReply<R, S>(System.Func<R, S>)
  nameWithType.vb: RabbitTemplate.ReceiveAndReply(Of R, S)(Func(Of R, S))
  fullName.vb: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ReceiveAndReply(Of R, S)(System.Func(Of R, S))
  name.vb: ReceiveAndReply(Of R, S)(Func(Of R, S))
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ReceiveAndReply``2(System.Func{``0,``1})
    name: ReceiveAndReply<R, S>
    nameWithType: RabbitTemplate.ReceiveAndReply<R, S>
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ReceiveAndReply<R, S>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: R
    nameWithType: R
    fullName: R
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: S
    nameWithType: S
    fullName: S
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ReceiveAndReply``2(System.Func{``0,``1})
    name: ReceiveAndReply(Of R, S)
    nameWithType: RabbitTemplate.ReceiveAndReply(Of R, S)
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ReceiveAndReply(Of R, S)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: R
    nameWithType: R
    fullName: R
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: S
    nameWithType: S
    fullName: S
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ReceiveAndReply``2(System.String,System.Func{{R},{S}})
  commentId: M:Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ReceiveAndReply``2(System.String,System.Func{``0,``1})
  parent: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate
  definition: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ReceiveAndReply``2(System.String,System.Func{``0,``1})
  name: ReceiveAndReply<R, S>(String, Func<R, S>)
  nameWithType: RabbitTemplate.ReceiveAndReply<R, S>(String, Func<R, S>)
  fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ReceiveAndReply<R, S>(System.String, System.Func<R, S>)
  nameWithType.vb: RabbitTemplate.ReceiveAndReply(Of R, S)(String, Func(Of R, S))
  fullName.vb: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ReceiveAndReply(Of R, S)(System.String, System.Func(Of R, S))
  name.vb: ReceiveAndReply(Of R, S)(String, Func(Of R, S))
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ReceiveAndReply``2(System.String,System.Func{``0,``1})
    name: ReceiveAndReply<R, S>
    nameWithType: RabbitTemplate.ReceiveAndReply<R, S>
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ReceiveAndReply<R, S>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: R
    nameWithType: R
    fullName: R
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: S
    nameWithType: S
    fullName: S
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ReceiveAndReply``2(System.String,System.Func{``0,``1})
    name: ReceiveAndReply(Of R, S)
    nameWithType: RabbitTemplate.ReceiveAndReply(Of R, S)
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ReceiveAndReply(Of R, S)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: R
    nameWithType: R
    fullName: R
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: S
    nameWithType: S
    fullName: S
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ReceiveAndReply``2(System.Func{{R},{S}},System.String,System.String)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ReceiveAndReply``2(System.Func{``0,``1},System.String,System.String)
  parent: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate
  definition: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ReceiveAndReply``2(System.Func{``0,``1},System.String,System.String)
  name: ReceiveAndReply<R, S>(Func<R, S>, String, String)
  nameWithType: RabbitTemplate.ReceiveAndReply<R, S>(Func<R, S>, String, String)
  fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ReceiveAndReply<R, S>(System.Func<R, S>, System.String, System.String)
  nameWithType.vb: RabbitTemplate.ReceiveAndReply(Of R, S)(Func(Of R, S), String, String)
  fullName.vb: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ReceiveAndReply(Of R, S)(System.Func(Of R, S), System.String, System.String)
  name.vb: ReceiveAndReply(Of R, S)(Func(Of R, S), String, String)
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ReceiveAndReply``2(System.Func{``0,``1},System.String,System.String)
    name: ReceiveAndReply<R, S>
    nameWithType: RabbitTemplate.ReceiveAndReply<R, S>
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ReceiveAndReply<R, S>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: R
    nameWithType: R
    fullName: R
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: S
    nameWithType: S
    fullName: S
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ReceiveAndReply``2(System.Func{``0,``1},System.String,System.String)
    name: ReceiveAndReply(Of R, S)
    nameWithType: RabbitTemplate.ReceiveAndReply(Of R, S)
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ReceiveAndReply(Of R, S)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: R
    nameWithType: R
    fullName: R
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: S
    nameWithType: S
    fullName: S
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ReceiveAndReply``2(System.String,System.Func{{R},{S}},System.String,System.String)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ReceiveAndReply``2(System.String,System.Func{``0,``1},System.String,System.String)
  parent: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate
  definition: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ReceiveAndReply``2(System.String,System.Func{``0,``1},System.String,System.String)
  name: ReceiveAndReply<R, S>(String, Func<R, S>, String, String)
  nameWithType: RabbitTemplate.ReceiveAndReply<R, S>(String, Func<R, S>, String, String)
  fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ReceiveAndReply<R, S>(System.String, System.Func<R, S>, System.String, System.String)
  nameWithType.vb: RabbitTemplate.ReceiveAndReply(Of R, S)(String, Func(Of R, S), String, String)
  fullName.vb: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ReceiveAndReply(Of R, S)(System.String, System.Func(Of R, S), System.String, System.String)
  name.vb: ReceiveAndReply(Of R, S)(String, Func(Of R, S), String, String)
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ReceiveAndReply``2(System.String,System.Func{``0,``1},System.String,System.String)
    name: ReceiveAndReply<R, S>
    nameWithType: RabbitTemplate.ReceiveAndReply<R, S>
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ReceiveAndReply<R, S>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: R
    nameWithType: R
    fullName: R
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: S
    nameWithType: S
    fullName: S
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ReceiveAndReply``2(System.String,System.Func{``0,``1},System.String,System.String)
    name: ReceiveAndReply(Of R, S)
    nameWithType: RabbitTemplate.ReceiveAndReply(Of R, S)
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ReceiveAndReply(Of R, S)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: R
    nameWithType: R
    fullName: R
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: S
    nameWithType: S
    fullName: S
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ReceiveAndReply``2(System.Func{{R},{S}},System.Func{Steeltoe.Messaging.IMessage,{S},Steeltoe.Messaging.RabbitMQ.Core.Address})
  commentId: M:Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ReceiveAndReply``2(System.Func{``0,``1},System.Func{Steeltoe.Messaging.IMessage,``1,Steeltoe.Messaging.RabbitMQ.Core.Address})
  parent: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate
  definition: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ReceiveAndReply``2(System.Func{``0,``1},System.Func{Steeltoe.Messaging.IMessage,``1,Steeltoe.Messaging.RabbitMQ.Core.Address})
  name: ReceiveAndReply<R, S>(Func<R, S>, Func<IMessage, S, Address>)
  nameWithType: RabbitTemplate.ReceiveAndReply<R, S>(Func<R, S>, Func<IMessage, S, Address>)
  fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ReceiveAndReply<R, S>(System.Func<R, S>, System.Func<Steeltoe.Messaging.IMessage, S, Steeltoe.Messaging.RabbitMQ.Core.Address>)
  nameWithType.vb: RabbitTemplate.ReceiveAndReply(Of R, S)(Func(Of R, S), Func(Of IMessage, S, Address))
  fullName.vb: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ReceiveAndReply(Of R, S)(System.Func(Of R, S), System.Func(Of Steeltoe.Messaging.IMessage, S, Steeltoe.Messaging.RabbitMQ.Core.Address))
  name.vb: ReceiveAndReply(Of R, S)(Func(Of R, S), Func(Of IMessage, S, Address))
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ReceiveAndReply``2(System.Func{``0,``1},System.Func{Steeltoe.Messaging.IMessage,``1,Steeltoe.Messaging.RabbitMQ.Core.Address})
    name: ReceiveAndReply<R, S>
    nameWithType: RabbitTemplate.ReceiveAndReply<R, S>
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ReceiveAndReply<R, S>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: R
    nameWithType: R
    fullName: R
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: S
    nameWithType: S
    fullName: S
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: S
    nameWithType: S
    fullName: S
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.RabbitMQ.Core.Address
    name: Address
    nameWithType: Address
    fullName: Steeltoe.Messaging.RabbitMQ.Core.Address
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ReceiveAndReply``2(System.Func{``0,``1},System.Func{Steeltoe.Messaging.IMessage,``1,Steeltoe.Messaging.RabbitMQ.Core.Address})
    name: ReceiveAndReply(Of R, S)
    nameWithType: RabbitTemplate.ReceiveAndReply(Of R, S)
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ReceiveAndReply(Of R, S)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: R
    nameWithType: R
    fullName: R
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: S
    nameWithType: S
    fullName: S
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: S
    nameWithType: S
    fullName: S
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.RabbitMQ.Core.Address
    name: Address
    nameWithType: Address
    fullName: Steeltoe.Messaging.RabbitMQ.Core.Address
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ReceiveAndReply``2(System.String,System.Func{{R},{S}},System.Func{Steeltoe.Messaging.IMessage,{S},Steeltoe.Messaging.RabbitMQ.Core.Address})
  commentId: M:Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ReceiveAndReply``2(System.String,System.Func{``0,``1},System.Func{Steeltoe.Messaging.IMessage,``1,Steeltoe.Messaging.RabbitMQ.Core.Address})
  parent: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate
  definition: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ReceiveAndReply``2(System.String,System.Func{``0,``1},System.Func{Steeltoe.Messaging.IMessage,``1,Steeltoe.Messaging.RabbitMQ.Core.Address})
  name: ReceiveAndReply<R, S>(String, Func<R, S>, Func<IMessage, S, Address>)
  nameWithType: RabbitTemplate.ReceiveAndReply<R, S>(String, Func<R, S>, Func<IMessage, S, Address>)
  fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ReceiveAndReply<R, S>(System.String, System.Func<R, S>, System.Func<Steeltoe.Messaging.IMessage, S, Steeltoe.Messaging.RabbitMQ.Core.Address>)
  nameWithType.vb: RabbitTemplate.ReceiveAndReply(Of R, S)(String, Func(Of R, S), Func(Of IMessage, S, Address))
  fullName.vb: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ReceiveAndReply(Of R, S)(System.String, System.Func(Of R, S), System.Func(Of Steeltoe.Messaging.IMessage, S, Steeltoe.Messaging.RabbitMQ.Core.Address))
  name.vb: ReceiveAndReply(Of R, S)(String, Func(Of R, S), Func(Of IMessage, S, Address))
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ReceiveAndReply``2(System.String,System.Func{``0,``1},System.Func{Steeltoe.Messaging.IMessage,``1,Steeltoe.Messaging.RabbitMQ.Core.Address})
    name: ReceiveAndReply<R, S>
    nameWithType: RabbitTemplate.ReceiveAndReply<R, S>
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ReceiveAndReply<R, S>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: R
    nameWithType: R
    fullName: R
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: S
    nameWithType: S
    fullName: S
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: S
    nameWithType: S
    fullName: S
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.RabbitMQ.Core.Address
    name: Address
    nameWithType: Address
    fullName: Steeltoe.Messaging.RabbitMQ.Core.Address
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ReceiveAndReply``2(System.String,System.Func{``0,``1},System.Func{Steeltoe.Messaging.IMessage,``1,Steeltoe.Messaging.RabbitMQ.Core.Address})
    name: ReceiveAndReply(Of R, S)
    nameWithType: RabbitTemplate.ReceiveAndReply(Of R, S)
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ReceiveAndReply(Of R, S)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: R
    nameWithType: R
    fullName: R
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: S
    nameWithType: S
    fullName: S
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: S
    nameWithType: S
    fullName: S
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.RabbitMQ.Core.Address
    name: Address
    nameWithType: Address
    fullName: Steeltoe.Messaging.RabbitMQ.Core.Address
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.SendAndReceive(Steeltoe.Messaging.IMessage,Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.SendAndReceive(Steeltoe.Messaging.IMessage,Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData)
  parent: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate
  name: SendAndReceive(IMessage, CorrelationData)
  nameWithType: RabbitTemplate.SendAndReceive(IMessage, CorrelationData)
  fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.SendAndReceive(Steeltoe.Messaging.IMessage, Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData)
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.SendAndReceive(Steeltoe.Messaging.IMessage,Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData)
    name: SendAndReceive
    nameWithType: RabbitTemplate.SendAndReceive
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.SendAndReceive
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData
    name: CorrelationData
    nameWithType: CorrelationData
    fullName: Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.SendAndReceive(Steeltoe.Messaging.IMessage,Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData)
    name: SendAndReceive
    nameWithType: RabbitTemplate.SendAndReceive
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.SendAndReceive
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData
    name: CorrelationData
    nameWithType: CorrelationData
    fullName: Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.SendAndReceive(System.String,Steeltoe.Messaging.IMessage)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.SendAndReceive(System.String,Steeltoe.Messaging.IMessage)
  parent: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate
  isExternal: true
  name: SendAndReceive(String, IMessage)
  nameWithType: RabbitTemplate.SendAndReceive(String, IMessage)
  fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.SendAndReceive(System.String, Steeltoe.Messaging.IMessage)
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.SendAndReceive(System.String,Steeltoe.Messaging.IMessage)
    name: SendAndReceive
    nameWithType: RabbitTemplate.SendAndReceive
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.SendAndReceive
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.SendAndReceive(System.String,Steeltoe.Messaging.IMessage)
    name: SendAndReceive
    nameWithType: RabbitTemplate.SendAndReceive
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.SendAndReceive
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.SendAndReceive(System.String,Steeltoe.Messaging.IMessage,Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.SendAndReceive(System.String,Steeltoe.Messaging.IMessage,Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData)
  parent: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate
  isExternal: true
  name: SendAndReceive(String, IMessage, CorrelationData)
  nameWithType: RabbitTemplate.SendAndReceive(String, IMessage, CorrelationData)
  fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.SendAndReceive(System.String, Steeltoe.Messaging.IMessage, Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData)
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.SendAndReceive(System.String,Steeltoe.Messaging.IMessage,Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData)
    name: SendAndReceive
    nameWithType: RabbitTemplate.SendAndReceive
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.SendAndReceive
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData
    name: CorrelationData
    nameWithType: CorrelationData
    fullName: Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.SendAndReceive(System.String,Steeltoe.Messaging.IMessage,Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData)
    name: SendAndReceive
    nameWithType: RabbitTemplate.SendAndReceive
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.SendAndReceive
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData
    name: CorrelationData
    nameWithType: CorrelationData
    fullName: Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.SendAndReceive(System.String,System.String,Steeltoe.Messaging.IMessage)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.SendAndReceive(System.String,System.String,Steeltoe.Messaging.IMessage)
  parent: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate
  isExternal: true
  name: SendAndReceive(String, String, IMessage)
  nameWithType: RabbitTemplate.SendAndReceive(String, String, IMessage)
  fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.SendAndReceive(System.String, System.String, Steeltoe.Messaging.IMessage)
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.SendAndReceive(System.String,System.String,Steeltoe.Messaging.IMessage)
    name: SendAndReceive
    nameWithType: RabbitTemplate.SendAndReceive
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.SendAndReceive
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.SendAndReceive(System.String,System.String,Steeltoe.Messaging.IMessage)
    name: SendAndReceive
    nameWithType: RabbitTemplate.SendAndReceive
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.SendAndReceive
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.SendAndReceive(System.String,System.String,Steeltoe.Messaging.IMessage,Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.SendAndReceive(System.String,System.String,Steeltoe.Messaging.IMessage,Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData)
  parent: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate
  isExternal: true
  name: SendAndReceive(String, String, IMessage, CorrelationData)
  nameWithType: RabbitTemplate.SendAndReceive(String, String, IMessage, CorrelationData)
  fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.SendAndReceive(System.String, System.String, Steeltoe.Messaging.IMessage, Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData)
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.SendAndReceive(System.String,System.String,Steeltoe.Messaging.IMessage,Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData)
    name: SendAndReceive
    nameWithType: RabbitTemplate.SendAndReceive
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.SendAndReceive
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData
    name: CorrelationData
    nameWithType: CorrelationData
    fullName: Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.SendAndReceive(System.String,System.String,Steeltoe.Messaging.IMessage,Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData)
    name: SendAndReceive
    nameWithType: RabbitTemplate.SendAndReceive
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.SendAndReceive
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData
    name: CorrelationData
    nameWithType: CorrelationData
    fullName: Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.SendAndReceiveAsync(Steeltoe.Messaging.IMessage,Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData,System.Threading.CancellationToken)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.SendAndReceiveAsync(Steeltoe.Messaging.IMessage,Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData,System.Threading.CancellationToken)
  parent: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate
  isExternal: true
  name: SendAndReceiveAsync(IMessage, CorrelationData, CancellationToken)
  nameWithType: RabbitTemplate.SendAndReceiveAsync(IMessage, CorrelationData, CancellationToken)
  fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.SendAndReceiveAsync(Steeltoe.Messaging.IMessage, Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.SendAndReceiveAsync(Steeltoe.Messaging.IMessage,Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData,System.Threading.CancellationToken)
    name: SendAndReceiveAsync
    nameWithType: RabbitTemplate.SendAndReceiveAsync
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.SendAndReceiveAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData
    name: CorrelationData
    nameWithType: CorrelationData
    fullName: Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.SendAndReceiveAsync(Steeltoe.Messaging.IMessage,Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData,System.Threading.CancellationToken)
    name: SendAndReceiveAsync
    nameWithType: RabbitTemplate.SendAndReceiveAsync
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.SendAndReceiveAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData
    name: CorrelationData
    nameWithType: CorrelationData
    fullName: Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.SendAndReceiveAsync(System.String,Steeltoe.Messaging.IMessage,System.Threading.CancellationToken)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.SendAndReceiveAsync(System.String,Steeltoe.Messaging.IMessage,System.Threading.CancellationToken)
  parent: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate
  isExternal: true
  name: SendAndReceiveAsync(String, IMessage, CancellationToken)
  nameWithType: RabbitTemplate.SendAndReceiveAsync(String, IMessage, CancellationToken)
  fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.SendAndReceiveAsync(System.String, Steeltoe.Messaging.IMessage, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.SendAndReceiveAsync(System.String,Steeltoe.Messaging.IMessage,System.Threading.CancellationToken)
    name: SendAndReceiveAsync
    nameWithType: RabbitTemplate.SendAndReceiveAsync
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.SendAndReceiveAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.SendAndReceiveAsync(System.String,Steeltoe.Messaging.IMessage,System.Threading.CancellationToken)
    name: SendAndReceiveAsync
    nameWithType: RabbitTemplate.SendAndReceiveAsync
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.SendAndReceiveAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.SendAndReceiveAsync(System.String,Steeltoe.Messaging.IMessage,Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData,System.Threading.CancellationToken)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.SendAndReceiveAsync(System.String,Steeltoe.Messaging.IMessage,Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData,System.Threading.CancellationToken)
  parent: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate
  isExternal: true
  name: SendAndReceiveAsync(String, IMessage, CorrelationData, CancellationToken)
  nameWithType: RabbitTemplate.SendAndReceiveAsync(String, IMessage, CorrelationData, CancellationToken)
  fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.SendAndReceiveAsync(System.String, Steeltoe.Messaging.IMessage, Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.SendAndReceiveAsync(System.String,Steeltoe.Messaging.IMessage,Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData,System.Threading.CancellationToken)
    name: SendAndReceiveAsync
    nameWithType: RabbitTemplate.SendAndReceiveAsync
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.SendAndReceiveAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData
    name: CorrelationData
    nameWithType: CorrelationData
    fullName: Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.SendAndReceiveAsync(System.String,Steeltoe.Messaging.IMessage,Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData,System.Threading.CancellationToken)
    name: SendAndReceiveAsync
    nameWithType: RabbitTemplate.SendAndReceiveAsync
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.SendAndReceiveAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData
    name: CorrelationData
    nameWithType: CorrelationData
    fullName: Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.SendAndReceiveAsync(System.String,System.String,Steeltoe.Messaging.IMessage,System.Threading.CancellationToken)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.SendAndReceiveAsync(System.String,System.String,Steeltoe.Messaging.IMessage,System.Threading.CancellationToken)
  parent: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate
  isExternal: true
  name: SendAndReceiveAsync(String, String, IMessage, CancellationToken)
  nameWithType: RabbitTemplate.SendAndReceiveAsync(String, String, IMessage, CancellationToken)
  fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.SendAndReceiveAsync(System.String, System.String, Steeltoe.Messaging.IMessage, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.SendAndReceiveAsync(System.String,System.String,Steeltoe.Messaging.IMessage,System.Threading.CancellationToken)
    name: SendAndReceiveAsync
    nameWithType: RabbitTemplate.SendAndReceiveAsync
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.SendAndReceiveAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.SendAndReceiveAsync(System.String,System.String,Steeltoe.Messaging.IMessage,System.Threading.CancellationToken)
    name: SendAndReceiveAsync
    nameWithType: RabbitTemplate.SendAndReceiveAsync
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.SendAndReceiveAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.SendAndReceiveAsync(System.String,System.String,Steeltoe.Messaging.IMessage,Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData,System.Threading.CancellationToken)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.SendAndReceiveAsync(System.String,System.String,Steeltoe.Messaging.IMessage,Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData,System.Threading.CancellationToken)
  parent: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate
  isExternal: true
  name: SendAndReceiveAsync(String, String, IMessage, CorrelationData, CancellationToken)
  nameWithType: RabbitTemplate.SendAndReceiveAsync(String, String, IMessage, CorrelationData, CancellationToken)
  fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.SendAndReceiveAsync(System.String, System.String, Steeltoe.Messaging.IMessage, Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.SendAndReceiveAsync(System.String,System.String,Steeltoe.Messaging.IMessage,Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData,System.Threading.CancellationToken)
    name: SendAndReceiveAsync
    nameWithType: RabbitTemplate.SendAndReceiveAsync
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.SendAndReceiveAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData
    name: CorrelationData
    nameWithType: CorrelationData
    fullName: Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.SendAndReceiveAsync(System.String,System.String,Steeltoe.Messaging.IMessage,Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData,System.Threading.CancellationToken)
    name: SendAndReceiveAsync
    nameWithType: RabbitTemplate.SendAndReceiveAsync
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.SendAndReceiveAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData
    name: CorrelationData
    nameWithType: CorrelationData
    fullName: Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceive``1(System.Object,Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceive``1(System.Object,Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData)
  parent: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate
  isExternal: true
  name: ConvertSendAndReceive<T>(Object, CorrelationData)
  nameWithType: RabbitTemplate.ConvertSendAndReceive<T>(Object, CorrelationData)
  fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceive<T>(System.Object, Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData)
  nameWithType.vb: RabbitTemplate.ConvertSendAndReceive(Of T)(Object, CorrelationData)
  fullName.vb: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceive(Of T)(System.Object, Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData)
  name.vb: ConvertSendAndReceive(Of T)(Object, CorrelationData)
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceive``1(System.Object,Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData)
    name: ConvertSendAndReceive<T>
    nameWithType: RabbitTemplate.ConvertSendAndReceive<T>
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceive<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData
    name: CorrelationData
    nameWithType: CorrelationData
    fullName: Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceive``1(System.Object,Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData)
    name: ConvertSendAndReceive(Of T)
    nameWithType: RabbitTemplate.ConvertSendAndReceive(Of T)
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceive(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData
    name: CorrelationData
    nameWithType: CorrelationData
    fullName: Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceive``1(System.Object,Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceive``1(System.Object,Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor)
  parent: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate
  isExternal: true
  name: ConvertSendAndReceive<T>(Object, IMessagePostProcessor)
  nameWithType: RabbitTemplate.ConvertSendAndReceive<T>(Object, IMessagePostProcessor)
  fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceive<T>(System.Object, Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor)
  nameWithType.vb: RabbitTemplate.ConvertSendAndReceive(Of T)(Object, IMessagePostProcessor)
  fullName.vb: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceive(Of T)(System.Object, Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor)
  name.vb: ConvertSendAndReceive(Of T)(Object, IMessagePostProcessor)
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceive``1(System.Object,Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor)
    name: ConvertSendAndReceive<T>
    nameWithType: RabbitTemplate.ConvertSendAndReceive<T>
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceive<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor
    name: IMessagePostProcessor
    nameWithType: IMessagePostProcessor
    fullName: Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceive``1(System.Object,Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor)
    name: ConvertSendAndReceive(Of T)
    nameWithType: RabbitTemplate.ConvertSendAndReceive(Of T)
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceive(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor
    name: IMessagePostProcessor
    nameWithType: IMessagePostProcessor
    fullName: Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceive``1(System.Object,Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor,Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceive``1(System.Object,Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor,Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData)
  parent: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate
  isExternal: true
  name: ConvertSendAndReceive<T>(Object, IMessagePostProcessor, CorrelationData)
  nameWithType: RabbitTemplate.ConvertSendAndReceive<T>(Object, IMessagePostProcessor, CorrelationData)
  fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceive<T>(System.Object, Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor, Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData)
  nameWithType.vb: RabbitTemplate.ConvertSendAndReceive(Of T)(Object, IMessagePostProcessor, CorrelationData)
  fullName.vb: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceive(Of T)(System.Object, Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor, Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData)
  name.vb: ConvertSendAndReceive(Of T)(Object, IMessagePostProcessor, CorrelationData)
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceive``1(System.Object,Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor,Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData)
    name: ConvertSendAndReceive<T>
    nameWithType: RabbitTemplate.ConvertSendAndReceive<T>
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceive<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor
    name: IMessagePostProcessor
    nameWithType: IMessagePostProcessor
    fullName: Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData
    name: CorrelationData
    nameWithType: CorrelationData
    fullName: Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceive``1(System.Object,Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor,Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData)
    name: ConvertSendAndReceive(Of T)
    nameWithType: RabbitTemplate.ConvertSendAndReceive(Of T)
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceive(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor
    name: IMessagePostProcessor
    nameWithType: IMessagePostProcessor
    fullName: Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData
    name: CorrelationData
    nameWithType: CorrelationData
    fullName: Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceive``1(System.String,System.Object)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceive``1(System.String,System.Object)
  parent: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate
  isExternal: true
  name: ConvertSendAndReceive<T>(String, Object)
  nameWithType: RabbitTemplate.ConvertSendAndReceive<T>(String, Object)
  fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceive<T>(System.String, System.Object)
  nameWithType.vb: RabbitTemplate.ConvertSendAndReceive(Of T)(String, Object)
  fullName.vb: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceive(Of T)(System.String, System.Object)
  name.vb: ConvertSendAndReceive(Of T)(String, Object)
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceive``1(System.String,System.Object)
    name: ConvertSendAndReceive<T>
    nameWithType: RabbitTemplate.ConvertSendAndReceive<T>
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceive<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceive``1(System.String,System.Object)
    name: ConvertSendAndReceive(Of T)
    nameWithType: RabbitTemplate.ConvertSendAndReceive(Of T)
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceive(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceive``1(System.String,System.Object,Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceive``1(System.String,System.Object,Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData)
  parent: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate
  isExternal: true
  name: ConvertSendAndReceive<T>(String, Object, CorrelationData)
  nameWithType: RabbitTemplate.ConvertSendAndReceive<T>(String, Object, CorrelationData)
  fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceive<T>(System.String, System.Object, Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData)
  nameWithType.vb: RabbitTemplate.ConvertSendAndReceive(Of T)(String, Object, CorrelationData)
  fullName.vb: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceive(Of T)(System.String, System.Object, Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData)
  name.vb: ConvertSendAndReceive(Of T)(String, Object, CorrelationData)
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceive``1(System.String,System.Object,Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData)
    name: ConvertSendAndReceive<T>
    nameWithType: RabbitTemplate.ConvertSendAndReceive<T>
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceive<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData
    name: CorrelationData
    nameWithType: CorrelationData
    fullName: Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceive``1(System.String,System.Object,Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData)
    name: ConvertSendAndReceive(Of T)
    nameWithType: RabbitTemplate.ConvertSendAndReceive(Of T)
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceive(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData
    name: CorrelationData
    nameWithType: CorrelationData
    fullName: Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceive``1(System.String,System.Object,Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceive``1(System.String,System.Object,Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor)
  parent: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate
  isExternal: true
  name: ConvertSendAndReceive<T>(String, Object, IMessagePostProcessor)
  nameWithType: RabbitTemplate.ConvertSendAndReceive<T>(String, Object, IMessagePostProcessor)
  fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceive<T>(System.String, System.Object, Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor)
  nameWithType.vb: RabbitTemplate.ConvertSendAndReceive(Of T)(String, Object, IMessagePostProcessor)
  fullName.vb: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceive(Of T)(System.String, System.Object, Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor)
  name.vb: ConvertSendAndReceive(Of T)(String, Object, IMessagePostProcessor)
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceive``1(System.String,System.Object,Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor)
    name: ConvertSendAndReceive<T>
    nameWithType: RabbitTemplate.ConvertSendAndReceive<T>
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceive<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor
    name: IMessagePostProcessor
    nameWithType: IMessagePostProcessor
    fullName: Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceive``1(System.String,System.Object,Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor)
    name: ConvertSendAndReceive(Of T)
    nameWithType: RabbitTemplate.ConvertSendAndReceive(Of T)
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceive(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor
    name: IMessagePostProcessor
    nameWithType: IMessagePostProcessor
    fullName: Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceive``1(System.String,System.Object,Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor,Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceive``1(System.String,System.Object,Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor,Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData)
  parent: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate
  isExternal: true
  name: ConvertSendAndReceive<T>(String, Object, IMessagePostProcessor, CorrelationData)
  nameWithType: RabbitTemplate.ConvertSendAndReceive<T>(String, Object, IMessagePostProcessor, CorrelationData)
  fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceive<T>(System.String, System.Object, Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor, Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData)
  nameWithType.vb: RabbitTemplate.ConvertSendAndReceive(Of T)(String, Object, IMessagePostProcessor, CorrelationData)
  fullName.vb: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceive(Of T)(System.String, System.Object, Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor, Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData)
  name.vb: ConvertSendAndReceive(Of T)(String, Object, IMessagePostProcessor, CorrelationData)
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceive``1(System.String,System.Object,Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor,Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData)
    name: ConvertSendAndReceive<T>
    nameWithType: RabbitTemplate.ConvertSendAndReceive<T>
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceive<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor
    name: IMessagePostProcessor
    nameWithType: IMessagePostProcessor
    fullName: Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData
    name: CorrelationData
    nameWithType: CorrelationData
    fullName: Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceive``1(System.String,System.Object,Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor,Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData)
    name: ConvertSendAndReceive(Of T)
    nameWithType: RabbitTemplate.ConvertSendAndReceive(Of T)
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceive(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor
    name: IMessagePostProcessor
    nameWithType: IMessagePostProcessor
    fullName: Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData
    name: CorrelationData
    nameWithType: CorrelationData
    fullName: Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceive``1(System.String,System.String,System.Object)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceive``1(System.String,System.String,System.Object)
  parent: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate
  isExternal: true
  name: ConvertSendAndReceive<T>(String, String, Object)
  nameWithType: RabbitTemplate.ConvertSendAndReceive<T>(String, String, Object)
  fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceive<T>(System.String, System.String, System.Object)
  nameWithType.vb: RabbitTemplate.ConvertSendAndReceive(Of T)(String, String, Object)
  fullName.vb: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceive(Of T)(System.String, System.String, System.Object)
  name.vb: ConvertSendAndReceive(Of T)(String, String, Object)
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceive``1(System.String,System.String,System.Object)
    name: ConvertSendAndReceive<T>
    nameWithType: RabbitTemplate.ConvertSendAndReceive<T>
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceive<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceive``1(System.String,System.String,System.Object)
    name: ConvertSendAndReceive(Of T)
    nameWithType: RabbitTemplate.ConvertSendAndReceive(Of T)
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceive(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceive``1(System.String,System.String,System.Object,Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceive``1(System.String,System.String,System.Object,Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData)
  parent: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate
  isExternal: true
  name: ConvertSendAndReceive<T>(String, String, Object, CorrelationData)
  nameWithType: RabbitTemplate.ConvertSendAndReceive<T>(String, String, Object, CorrelationData)
  fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceive<T>(System.String, System.String, System.Object, Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData)
  nameWithType.vb: RabbitTemplate.ConvertSendAndReceive(Of T)(String, String, Object, CorrelationData)
  fullName.vb: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceive(Of T)(System.String, System.String, System.Object, Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData)
  name.vb: ConvertSendAndReceive(Of T)(String, String, Object, CorrelationData)
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceive``1(System.String,System.String,System.Object,Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData)
    name: ConvertSendAndReceive<T>
    nameWithType: RabbitTemplate.ConvertSendAndReceive<T>
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceive<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData
    name: CorrelationData
    nameWithType: CorrelationData
    fullName: Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceive``1(System.String,System.String,System.Object,Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData)
    name: ConvertSendAndReceive(Of T)
    nameWithType: RabbitTemplate.ConvertSendAndReceive(Of T)
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceive(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData
    name: CorrelationData
    nameWithType: CorrelationData
    fullName: Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceive``1(System.String,System.String,System.Object,Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceive``1(System.String,System.String,System.Object,Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor)
  parent: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate
  isExternal: true
  name: ConvertSendAndReceive<T>(String, String, Object, IMessagePostProcessor)
  nameWithType: RabbitTemplate.ConvertSendAndReceive<T>(String, String, Object, IMessagePostProcessor)
  fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceive<T>(System.String, System.String, System.Object, Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor)
  nameWithType.vb: RabbitTemplate.ConvertSendAndReceive(Of T)(String, String, Object, IMessagePostProcessor)
  fullName.vb: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceive(Of T)(System.String, System.String, System.Object, Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor)
  name.vb: ConvertSendAndReceive(Of T)(String, String, Object, IMessagePostProcessor)
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceive``1(System.String,System.String,System.Object,Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor)
    name: ConvertSendAndReceive<T>
    nameWithType: RabbitTemplate.ConvertSendAndReceive<T>
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceive<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor
    name: IMessagePostProcessor
    nameWithType: IMessagePostProcessor
    fullName: Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceive``1(System.String,System.String,System.Object,Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor)
    name: ConvertSendAndReceive(Of T)
    nameWithType: RabbitTemplate.ConvertSendAndReceive(Of T)
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceive(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor
    name: IMessagePostProcessor
    nameWithType: IMessagePostProcessor
    fullName: Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceive``1(System.String,System.String,System.Object,Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor,Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceive``1(System.String,System.String,System.Object,Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor,Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData)
  parent: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate
  isExternal: true
  name: ConvertSendAndReceive<T>(String, String, Object, IMessagePostProcessor, CorrelationData)
  nameWithType: RabbitTemplate.ConvertSendAndReceive<T>(String, String, Object, IMessagePostProcessor, CorrelationData)
  fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceive<T>(System.String, System.String, System.Object, Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor, Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData)
  nameWithType.vb: RabbitTemplate.ConvertSendAndReceive(Of T)(String, String, Object, IMessagePostProcessor, CorrelationData)
  fullName.vb: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceive(Of T)(System.String, System.String, System.Object, Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor, Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData)
  name.vb: ConvertSendAndReceive(Of T)(String, String, Object, IMessagePostProcessor, CorrelationData)
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceive``1(System.String,System.String,System.Object,Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor,Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData)
    name: ConvertSendAndReceive<T>
    nameWithType: RabbitTemplate.ConvertSendAndReceive<T>
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceive<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor
    name: IMessagePostProcessor
    nameWithType: IMessagePostProcessor
    fullName: Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData
    name: CorrelationData
    nameWithType: CorrelationData
    fullName: Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceive``1(System.String,System.String,System.Object,Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor,Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData)
    name: ConvertSendAndReceive(Of T)
    nameWithType: RabbitTemplate.ConvertSendAndReceive(Of T)
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceive(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor
    name: IMessagePostProcessor
    nameWithType: IMessagePostProcessor
    fullName: Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData
    name: CorrelationData
    nameWithType: CorrelationData
    fullName: Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceiveAsync``1(System.Object,Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData,System.Threading.CancellationToken)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceiveAsync``1(System.Object,Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData,System.Threading.CancellationToken)
  parent: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate
  isExternal: true
  name: ConvertSendAndReceiveAsync<T>(Object, CorrelationData, CancellationToken)
  nameWithType: RabbitTemplate.ConvertSendAndReceiveAsync<T>(Object, CorrelationData, CancellationToken)
  fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceiveAsync<T>(System.Object, Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData, System.Threading.CancellationToken)
  nameWithType.vb: RabbitTemplate.ConvertSendAndReceiveAsync(Of T)(Object, CorrelationData, CancellationToken)
  fullName.vb: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceiveAsync(Of T)(System.Object, Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData, System.Threading.CancellationToken)
  name.vb: ConvertSendAndReceiveAsync(Of T)(Object, CorrelationData, CancellationToken)
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceiveAsync``1(System.Object,Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData,System.Threading.CancellationToken)
    name: ConvertSendAndReceiveAsync<T>
    nameWithType: RabbitTemplate.ConvertSendAndReceiveAsync<T>
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceiveAsync<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData
    name: CorrelationData
    nameWithType: CorrelationData
    fullName: Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceiveAsync``1(System.Object,Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData,System.Threading.CancellationToken)
    name: ConvertSendAndReceiveAsync(Of T)
    nameWithType: RabbitTemplate.ConvertSendAndReceiveAsync(Of T)
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceiveAsync(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData
    name: CorrelationData
    nameWithType: CorrelationData
    fullName: Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceiveAsync``1(System.Object,Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor,System.Threading.CancellationToken)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceiveAsync``1(System.Object,Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor,System.Threading.CancellationToken)
  parent: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate
  isExternal: true
  name: ConvertSendAndReceiveAsync<T>(Object, IMessagePostProcessor, CancellationToken)
  nameWithType: RabbitTemplate.ConvertSendAndReceiveAsync<T>(Object, IMessagePostProcessor, CancellationToken)
  fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceiveAsync<T>(System.Object, Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor, System.Threading.CancellationToken)
  nameWithType.vb: RabbitTemplate.ConvertSendAndReceiveAsync(Of T)(Object, IMessagePostProcessor, CancellationToken)
  fullName.vb: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceiveAsync(Of T)(System.Object, Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor, System.Threading.CancellationToken)
  name.vb: ConvertSendAndReceiveAsync(Of T)(Object, IMessagePostProcessor, CancellationToken)
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceiveAsync``1(System.Object,Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor,System.Threading.CancellationToken)
    name: ConvertSendAndReceiveAsync<T>
    nameWithType: RabbitTemplate.ConvertSendAndReceiveAsync<T>
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceiveAsync<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor
    name: IMessagePostProcessor
    nameWithType: IMessagePostProcessor
    fullName: Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceiveAsync``1(System.Object,Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor,System.Threading.CancellationToken)
    name: ConvertSendAndReceiveAsync(Of T)
    nameWithType: RabbitTemplate.ConvertSendAndReceiveAsync(Of T)
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceiveAsync(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor
    name: IMessagePostProcessor
    nameWithType: IMessagePostProcessor
    fullName: Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceiveAsync``1(System.Object,Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor,Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData,System.Threading.CancellationToken)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceiveAsync``1(System.Object,Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor,Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData,System.Threading.CancellationToken)
  parent: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate
  isExternal: true
  name: ConvertSendAndReceiveAsync<T>(Object, IMessagePostProcessor, CorrelationData, CancellationToken)
  nameWithType: RabbitTemplate.ConvertSendAndReceiveAsync<T>(Object, IMessagePostProcessor, CorrelationData, CancellationToken)
  fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceiveAsync<T>(System.Object, Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor, Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData, System.Threading.CancellationToken)
  nameWithType.vb: RabbitTemplate.ConvertSendAndReceiveAsync(Of T)(Object, IMessagePostProcessor, CorrelationData, CancellationToken)
  fullName.vb: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceiveAsync(Of T)(System.Object, Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor, Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData, System.Threading.CancellationToken)
  name.vb: ConvertSendAndReceiveAsync(Of T)(Object, IMessagePostProcessor, CorrelationData, CancellationToken)
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceiveAsync``1(System.Object,Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor,Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData,System.Threading.CancellationToken)
    name: ConvertSendAndReceiveAsync<T>
    nameWithType: RabbitTemplate.ConvertSendAndReceiveAsync<T>
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceiveAsync<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor
    name: IMessagePostProcessor
    nameWithType: IMessagePostProcessor
    fullName: Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData
    name: CorrelationData
    nameWithType: CorrelationData
    fullName: Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceiveAsync``1(System.Object,Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor,Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData,System.Threading.CancellationToken)
    name: ConvertSendAndReceiveAsync(Of T)
    nameWithType: RabbitTemplate.ConvertSendAndReceiveAsync(Of T)
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceiveAsync(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor
    name: IMessagePostProcessor
    nameWithType: IMessagePostProcessor
    fullName: Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData
    name: CorrelationData
    nameWithType: CorrelationData
    fullName: Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceiveAsync``1(System.String,System.Object,System.Threading.CancellationToken)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceiveAsync``1(System.String,System.Object,System.Threading.CancellationToken)
  parent: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate
  isExternal: true
  name: ConvertSendAndReceiveAsync<T>(String, Object, CancellationToken)
  nameWithType: RabbitTemplate.ConvertSendAndReceiveAsync<T>(String, Object, CancellationToken)
  fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceiveAsync<T>(System.String, System.Object, System.Threading.CancellationToken)
  nameWithType.vb: RabbitTemplate.ConvertSendAndReceiveAsync(Of T)(String, Object, CancellationToken)
  fullName.vb: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceiveAsync(Of T)(System.String, System.Object, System.Threading.CancellationToken)
  name.vb: ConvertSendAndReceiveAsync(Of T)(String, Object, CancellationToken)
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceiveAsync``1(System.String,System.Object,System.Threading.CancellationToken)
    name: ConvertSendAndReceiveAsync<T>
    nameWithType: RabbitTemplate.ConvertSendAndReceiveAsync<T>
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceiveAsync<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceiveAsync``1(System.String,System.Object,System.Threading.CancellationToken)
    name: ConvertSendAndReceiveAsync(Of T)
    nameWithType: RabbitTemplate.ConvertSendAndReceiveAsync(Of T)
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceiveAsync(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceiveAsync``1(System.String,System.Object,Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData,System.Threading.CancellationToken)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceiveAsync``1(System.String,System.Object,Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData,System.Threading.CancellationToken)
  parent: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate
  isExternal: true
  name: ConvertSendAndReceiveAsync<T>(String, Object, CorrelationData, CancellationToken)
  nameWithType: RabbitTemplate.ConvertSendAndReceiveAsync<T>(String, Object, CorrelationData, CancellationToken)
  fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceiveAsync<T>(System.String, System.Object, Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData, System.Threading.CancellationToken)
  nameWithType.vb: RabbitTemplate.ConvertSendAndReceiveAsync(Of T)(String, Object, CorrelationData, CancellationToken)
  fullName.vb: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceiveAsync(Of T)(System.String, System.Object, Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData, System.Threading.CancellationToken)
  name.vb: ConvertSendAndReceiveAsync(Of T)(String, Object, CorrelationData, CancellationToken)
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceiveAsync``1(System.String,System.Object,Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData,System.Threading.CancellationToken)
    name: ConvertSendAndReceiveAsync<T>
    nameWithType: RabbitTemplate.ConvertSendAndReceiveAsync<T>
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceiveAsync<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData
    name: CorrelationData
    nameWithType: CorrelationData
    fullName: Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceiveAsync``1(System.String,System.Object,Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData,System.Threading.CancellationToken)
    name: ConvertSendAndReceiveAsync(Of T)
    nameWithType: RabbitTemplate.ConvertSendAndReceiveAsync(Of T)
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceiveAsync(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData
    name: CorrelationData
    nameWithType: CorrelationData
    fullName: Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceiveAsync``1(System.String,System.Object,Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor,System.Threading.CancellationToken)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceiveAsync``1(System.String,System.Object,Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor,System.Threading.CancellationToken)
  parent: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate
  isExternal: true
  name: ConvertSendAndReceiveAsync<T>(String, Object, IMessagePostProcessor, CancellationToken)
  nameWithType: RabbitTemplate.ConvertSendAndReceiveAsync<T>(String, Object, IMessagePostProcessor, CancellationToken)
  fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceiveAsync<T>(System.String, System.Object, Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor, System.Threading.CancellationToken)
  nameWithType.vb: RabbitTemplate.ConvertSendAndReceiveAsync(Of T)(String, Object, IMessagePostProcessor, CancellationToken)
  fullName.vb: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceiveAsync(Of T)(System.String, System.Object, Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor, System.Threading.CancellationToken)
  name.vb: ConvertSendAndReceiveAsync(Of T)(String, Object, IMessagePostProcessor, CancellationToken)
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceiveAsync``1(System.String,System.Object,Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor,System.Threading.CancellationToken)
    name: ConvertSendAndReceiveAsync<T>
    nameWithType: RabbitTemplate.ConvertSendAndReceiveAsync<T>
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceiveAsync<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor
    name: IMessagePostProcessor
    nameWithType: IMessagePostProcessor
    fullName: Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceiveAsync``1(System.String,System.Object,Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor,System.Threading.CancellationToken)
    name: ConvertSendAndReceiveAsync(Of T)
    nameWithType: RabbitTemplate.ConvertSendAndReceiveAsync(Of T)
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceiveAsync(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor
    name: IMessagePostProcessor
    nameWithType: IMessagePostProcessor
    fullName: Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceiveAsync``1(System.String,System.Object,Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor,Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData,System.Threading.CancellationToken)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceiveAsync``1(System.String,System.Object,Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor,Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData,System.Threading.CancellationToken)
  parent: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate
  isExternal: true
  name: ConvertSendAndReceiveAsync<T>(String, Object, IMessagePostProcessor, CorrelationData, CancellationToken)
  nameWithType: RabbitTemplate.ConvertSendAndReceiveAsync<T>(String, Object, IMessagePostProcessor, CorrelationData, CancellationToken)
  fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceiveAsync<T>(System.String, System.Object, Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor, Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData, System.Threading.CancellationToken)
  nameWithType.vb: RabbitTemplate.ConvertSendAndReceiveAsync(Of T)(String, Object, IMessagePostProcessor, CorrelationData, CancellationToken)
  fullName.vb: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceiveAsync(Of T)(System.String, System.Object, Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor, Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData, System.Threading.CancellationToken)
  name.vb: ConvertSendAndReceiveAsync(Of T)(String, Object, IMessagePostProcessor, CorrelationData, CancellationToken)
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceiveAsync``1(System.String,System.Object,Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor,Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData,System.Threading.CancellationToken)
    name: ConvertSendAndReceiveAsync<T>
    nameWithType: RabbitTemplate.ConvertSendAndReceiveAsync<T>
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceiveAsync<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor
    name: IMessagePostProcessor
    nameWithType: IMessagePostProcessor
    fullName: Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData
    name: CorrelationData
    nameWithType: CorrelationData
    fullName: Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceiveAsync``1(System.String,System.Object,Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor,Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData,System.Threading.CancellationToken)
    name: ConvertSendAndReceiveAsync(Of T)
    nameWithType: RabbitTemplate.ConvertSendAndReceiveAsync(Of T)
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceiveAsync(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor
    name: IMessagePostProcessor
    nameWithType: IMessagePostProcessor
    fullName: Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData
    name: CorrelationData
    nameWithType: CorrelationData
    fullName: Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceiveAsync``1(System.String,System.String,System.Object,System.Threading.CancellationToken)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceiveAsync``1(System.String,System.String,System.Object,System.Threading.CancellationToken)
  parent: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate
  isExternal: true
  name: ConvertSendAndReceiveAsync<T>(String, String, Object, CancellationToken)
  nameWithType: RabbitTemplate.ConvertSendAndReceiveAsync<T>(String, String, Object, CancellationToken)
  fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceiveAsync<T>(System.String, System.String, System.Object, System.Threading.CancellationToken)
  nameWithType.vb: RabbitTemplate.ConvertSendAndReceiveAsync(Of T)(String, String, Object, CancellationToken)
  fullName.vb: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceiveAsync(Of T)(System.String, System.String, System.Object, System.Threading.CancellationToken)
  name.vb: ConvertSendAndReceiveAsync(Of T)(String, String, Object, CancellationToken)
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceiveAsync``1(System.String,System.String,System.Object,System.Threading.CancellationToken)
    name: ConvertSendAndReceiveAsync<T>
    nameWithType: RabbitTemplate.ConvertSendAndReceiveAsync<T>
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceiveAsync<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceiveAsync``1(System.String,System.String,System.Object,System.Threading.CancellationToken)
    name: ConvertSendAndReceiveAsync(Of T)
    nameWithType: RabbitTemplate.ConvertSendAndReceiveAsync(Of T)
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceiveAsync(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceiveAsync``1(System.String,System.String,System.Object,Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData,System.Threading.CancellationToken)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceiveAsync``1(System.String,System.String,System.Object,Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData,System.Threading.CancellationToken)
  parent: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate
  isExternal: true
  name: ConvertSendAndReceiveAsync<T>(String, String, Object, CorrelationData, CancellationToken)
  nameWithType: RabbitTemplate.ConvertSendAndReceiveAsync<T>(String, String, Object, CorrelationData, CancellationToken)
  fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceiveAsync<T>(System.String, System.String, System.Object, Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData, System.Threading.CancellationToken)
  nameWithType.vb: RabbitTemplate.ConvertSendAndReceiveAsync(Of T)(String, String, Object, CorrelationData, CancellationToken)
  fullName.vb: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceiveAsync(Of T)(System.String, System.String, System.Object, Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData, System.Threading.CancellationToken)
  name.vb: ConvertSendAndReceiveAsync(Of T)(String, String, Object, CorrelationData, CancellationToken)
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceiveAsync``1(System.String,System.String,System.Object,Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData,System.Threading.CancellationToken)
    name: ConvertSendAndReceiveAsync<T>
    nameWithType: RabbitTemplate.ConvertSendAndReceiveAsync<T>
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceiveAsync<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData
    name: CorrelationData
    nameWithType: CorrelationData
    fullName: Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceiveAsync``1(System.String,System.String,System.Object,Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData,System.Threading.CancellationToken)
    name: ConvertSendAndReceiveAsync(Of T)
    nameWithType: RabbitTemplate.ConvertSendAndReceiveAsync(Of T)
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceiveAsync(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData
    name: CorrelationData
    nameWithType: CorrelationData
    fullName: Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceiveAsync``1(System.String,System.String,System.Object,Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor,System.Threading.CancellationToken)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceiveAsync``1(System.String,System.String,System.Object,Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor,System.Threading.CancellationToken)
  parent: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate
  isExternal: true
  name: ConvertSendAndReceiveAsync<T>(String, String, Object, IMessagePostProcessor, CancellationToken)
  nameWithType: RabbitTemplate.ConvertSendAndReceiveAsync<T>(String, String, Object, IMessagePostProcessor, CancellationToken)
  fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceiveAsync<T>(System.String, System.String, System.Object, Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor, System.Threading.CancellationToken)
  nameWithType.vb: RabbitTemplate.ConvertSendAndReceiveAsync(Of T)(String, String, Object, IMessagePostProcessor, CancellationToken)
  fullName.vb: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceiveAsync(Of T)(System.String, System.String, System.Object, Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor, System.Threading.CancellationToken)
  name.vb: ConvertSendAndReceiveAsync(Of T)(String, String, Object, IMessagePostProcessor, CancellationToken)
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceiveAsync``1(System.String,System.String,System.Object,Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor,System.Threading.CancellationToken)
    name: ConvertSendAndReceiveAsync<T>
    nameWithType: RabbitTemplate.ConvertSendAndReceiveAsync<T>
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceiveAsync<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor
    name: IMessagePostProcessor
    nameWithType: IMessagePostProcessor
    fullName: Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceiveAsync``1(System.String,System.String,System.Object,Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor,System.Threading.CancellationToken)
    name: ConvertSendAndReceiveAsync(Of T)
    nameWithType: RabbitTemplate.ConvertSendAndReceiveAsync(Of T)
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceiveAsync(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor
    name: IMessagePostProcessor
    nameWithType: IMessagePostProcessor
    fullName: Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceiveAsync``1(System.String,System.String,System.Object,Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor,Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData,System.Threading.CancellationToken)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceiveAsync``1(System.String,System.String,System.Object,Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor,Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData,System.Threading.CancellationToken)
  parent: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate
  isExternal: true
  name: ConvertSendAndReceiveAsync<T>(String, String, Object, IMessagePostProcessor, CorrelationData, CancellationToken)
  nameWithType: RabbitTemplate.ConvertSendAndReceiveAsync<T>(String, String, Object, IMessagePostProcessor, CorrelationData, CancellationToken)
  fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceiveAsync<T>(System.String, System.String, System.Object, Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor, Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData, System.Threading.CancellationToken)
  nameWithType.vb: RabbitTemplate.ConvertSendAndReceiveAsync(Of T)(String, String, Object, IMessagePostProcessor, CorrelationData, CancellationToken)
  fullName.vb: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceiveAsync(Of T)(System.String, System.String, System.Object, Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor, Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData, System.Threading.CancellationToken)
  name.vb: ConvertSendAndReceiveAsync(Of T)(String, String, Object, IMessagePostProcessor, CorrelationData, CancellationToken)
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceiveAsync``1(System.String,System.String,System.Object,Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor,Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData,System.Threading.CancellationToken)
    name: ConvertSendAndReceiveAsync<T>
    nameWithType: RabbitTemplate.ConvertSendAndReceiveAsync<T>
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceiveAsync<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor
    name: IMessagePostProcessor
    nameWithType: IMessagePostProcessor
    fullName: Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData
    name: CorrelationData
    nameWithType: CorrelationData
    fullName: Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceiveAsync``1(System.String,System.String,System.Object,Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor,Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData,System.Threading.CancellationToken)
    name: ConvertSendAndReceiveAsync(Of T)
    nameWithType: RabbitTemplate.ConvertSendAndReceiveAsync(Of T)
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceiveAsync(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor
    name: IMessagePostProcessor
    nameWithType: IMessagePostProcessor
    fullName: Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData
    name: CorrelationData
    nameWithType: CorrelationData
    fullName: Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceiveAsType(System.Object,System.Type)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceiveAsType(System.Object,System.Type)
  parent: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate
  isExternal: true
  name: ConvertSendAndReceiveAsType(Object, Type)
  nameWithType: RabbitTemplate.ConvertSendAndReceiveAsType(Object, Type)
  fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceiveAsType(System.Object, System.Type)
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceiveAsType(System.Object,System.Type)
    name: ConvertSendAndReceiveAsType
    nameWithType: RabbitTemplate.ConvertSendAndReceiveAsType
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceiveAsType
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceiveAsType(System.Object,System.Type)
    name: ConvertSendAndReceiveAsType
    nameWithType: RabbitTemplate.ConvertSendAndReceiveAsType
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceiveAsType
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceiveAsType(System.Object,Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData,System.Type)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceiveAsType(System.Object,Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData,System.Type)
  parent: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate
  isExternal: true
  name: ConvertSendAndReceiveAsType(Object, CorrelationData, Type)
  nameWithType: RabbitTemplate.ConvertSendAndReceiveAsType(Object, CorrelationData, Type)
  fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceiveAsType(System.Object, Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData, System.Type)
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceiveAsType(System.Object,Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData,System.Type)
    name: ConvertSendAndReceiveAsType
    nameWithType: RabbitTemplate.ConvertSendAndReceiveAsType
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceiveAsType
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData
    name: CorrelationData
    nameWithType: CorrelationData
    fullName: Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceiveAsType(System.Object,Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData,System.Type)
    name: ConvertSendAndReceiveAsType
    nameWithType: RabbitTemplate.ConvertSendAndReceiveAsType
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceiveAsType
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData
    name: CorrelationData
    nameWithType: CorrelationData
    fullName: Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceiveAsType(System.Object,Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor,System.Type)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceiveAsType(System.Object,Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor,System.Type)
  parent: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate
  isExternal: true
  name: ConvertSendAndReceiveAsType(Object, IMessagePostProcessor, Type)
  nameWithType: RabbitTemplate.ConvertSendAndReceiveAsType(Object, IMessagePostProcessor, Type)
  fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceiveAsType(System.Object, Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor, System.Type)
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceiveAsType(System.Object,Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor,System.Type)
    name: ConvertSendAndReceiveAsType
    nameWithType: RabbitTemplate.ConvertSendAndReceiveAsType
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceiveAsType
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor
    name: IMessagePostProcessor
    nameWithType: IMessagePostProcessor
    fullName: Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceiveAsType(System.Object,Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor,System.Type)
    name: ConvertSendAndReceiveAsType
    nameWithType: RabbitTemplate.ConvertSendAndReceiveAsType
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceiveAsType
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor
    name: IMessagePostProcessor
    nameWithType: IMessagePostProcessor
    fullName: Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceiveAsType(System.Object,Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor,Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData,System.Type)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceiveAsType(System.Object,Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor,Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData,System.Type)
  parent: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate
  isExternal: true
  name: ConvertSendAndReceiveAsType(Object, IMessagePostProcessor, CorrelationData, Type)
  nameWithType: RabbitTemplate.ConvertSendAndReceiveAsType(Object, IMessagePostProcessor, CorrelationData, Type)
  fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceiveAsType(System.Object, Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor, Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData, System.Type)
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceiveAsType(System.Object,Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor,Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData,System.Type)
    name: ConvertSendAndReceiveAsType
    nameWithType: RabbitTemplate.ConvertSendAndReceiveAsType
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceiveAsType
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor
    name: IMessagePostProcessor
    nameWithType: IMessagePostProcessor
    fullName: Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData
    name: CorrelationData
    nameWithType: CorrelationData
    fullName: Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceiveAsType(System.Object,Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor,Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData,System.Type)
    name: ConvertSendAndReceiveAsType
    nameWithType: RabbitTemplate.ConvertSendAndReceiveAsType
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceiveAsType
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor
    name: IMessagePostProcessor
    nameWithType: IMessagePostProcessor
    fullName: Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData
    name: CorrelationData
    nameWithType: CorrelationData
    fullName: Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceiveAsType(System.String,System.Object,System.Type)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceiveAsType(System.String,System.Object,System.Type)
  parent: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate
  isExternal: true
  name: ConvertSendAndReceiveAsType(String, Object, Type)
  nameWithType: RabbitTemplate.ConvertSendAndReceiveAsType(String, Object, Type)
  fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceiveAsType(System.String, System.Object, System.Type)
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceiveAsType(System.String,System.Object,System.Type)
    name: ConvertSendAndReceiveAsType
    nameWithType: RabbitTemplate.ConvertSendAndReceiveAsType
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceiveAsType
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceiveAsType(System.String,System.Object,System.Type)
    name: ConvertSendAndReceiveAsType
    nameWithType: RabbitTemplate.ConvertSendAndReceiveAsType
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceiveAsType
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceiveAsType(System.String,System.Object,Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData,System.Type)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceiveAsType(System.String,System.Object,Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData,System.Type)
  parent: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate
  isExternal: true
  name: ConvertSendAndReceiveAsType(String, Object, CorrelationData, Type)
  nameWithType: RabbitTemplate.ConvertSendAndReceiveAsType(String, Object, CorrelationData, Type)
  fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceiveAsType(System.String, System.Object, Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData, System.Type)
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceiveAsType(System.String,System.Object,Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData,System.Type)
    name: ConvertSendAndReceiveAsType
    nameWithType: RabbitTemplate.ConvertSendAndReceiveAsType
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceiveAsType
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData
    name: CorrelationData
    nameWithType: CorrelationData
    fullName: Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceiveAsType(System.String,System.Object,Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData,System.Type)
    name: ConvertSendAndReceiveAsType
    nameWithType: RabbitTemplate.ConvertSendAndReceiveAsType
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceiveAsType
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData
    name: CorrelationData
    nameWithType: CorrelationData
    fullName: Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceiveAsType(System.String,System.Object,Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor,System.Type)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceiveAsType(System.String,System.Object,Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor,System.Type)
  parent: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate
  isExternal: true
  name: ConvertSendAndReceiveAsType(String, Object, IMessagePostProcessor, Type)
  nameWithType: RabbitTemplate.ConvertSendAndReceiveAsType(String, Object, IMessagePostProcessor, Type)
  fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceiveAsType(System.String, System.Object, Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor, System.Type)
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceiveAsType(System.String,System.Object,Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor,System.Type)
    name: ConvertSendAndReceiveAsType
    nameWithType: RabbitTemplate.ConvertSendAndReceiveAsType
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceiveAsType
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor
    name: IMessagePostProcessor
    nameWithType: IMessagePostProcessor
    fullName: Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceiveAsType(System.String,System.Object,Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor,System.Type)
    name: ConvertSendAndReceiveAsType
    nameWithType: RabbitTemplate.ConvertSendAndReceiveAsType
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceiveAsType
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor
    name: IMessagePostProcessor
    nameWithType: IMessagePostProcessor
    fullName: Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceiveAsType(System.String,System.Object,Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor,Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData,System.Type)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceiveAsType(System.String,System.Object,Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor,Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData,System.Type)
  parent: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate
  isExternal: true
  name: ConvertSendAndReceiveAsType(String, Object, IMessagePostProcessor, CorrelationData, Type)
  nameWithType: RabbitTemplate.ConvertSendAndReceiveAsType(String, Object, IMessagePostProcessor, CorrelationData, Type)
  fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceiveAsType(System.String, System.Object, Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor, Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData, System.Type)
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceiveAsType(System.String,System.Object,Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor,Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData,System.Type)
    name: ConvertSendAndReceiveAsType
    nameWithType: RabbitTemplate.ConvertSendAndReceiveAsType
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceiveAsType
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor
    name: IMessagePostProcessor
    nameWithType: IMessagePostProcessor
    fullName: Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData
    name: CorrelationData
    nameWithType: CorrelationData
    fullName: Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceiveAsType(System.String,System.Object,Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor,Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData,System.Type)
    name: ConvertSendAndReceiveAsType
    nameWithType: RabbitTemplate.ConvertSendAndReceiveAsType
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceiveAsType
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor
    name: IMessagePostProcessor
    nameWithType: IMessagePostProcessor
    fullName: Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData
    name: CorrelationData
    nameWithType: CorrelationData
    fullName: Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceiveAsType(System.String,System.String,System.Object,System.Type)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceiveAsType(System.String,System.String,System.Object,System.Type)
  parent: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate
  isExternal: true
  name: ConvertSendAndReceiveAsType(String, String, Object, Type)
  nameWithType: RabbitTemplate.ConvertSendAndReceiveAsType(String, String, Object, Type)
  fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceiveAsType(System.String, System.String, System.Object, System.Type)
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceiveAsType(System.String,System.String,System.Object,System.Type)
    name: ConvertSendAndReceiveAsType
    nameWithType: RabbitTemplate.ConvertSendAndReceiveAsType
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceiveAsType
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceiveAsType(System.String,System.String,System.Object,System.Type)
    name: ConvertSendAndReceiveAsType
    nameWithType: RabbitTemplate.ConvertSendAndReceiveAsType
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceiveAsType
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceiveAsType(System.String,System.String,System.Object,Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData,System.Type)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceiveAsType(System.String,System.String,System.Object,Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData,System.Type)
  parent: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate
  isExternal: true
  name: ConvertSendAndReceiveAsType(String, String, Object, CorrelationData, Type)
  nameWithType: RabbitTemplate.ConvertSendAndReceiveAsType(String, String, Object, CorrelationData, Type)
  fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceiveAsType(System.String, System.String, System.Object, Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData, System.Type)
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceiveAsType(System.String,System.String,System.Object,Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData,System.Type)
    name: ConvertSendAndReceiveAsType
    nameWithType: RabbitTemplate.ConvertSendAndReceiveAsType
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceiveAsType
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData
    name: CorrelationData
    nameWithType: CorrelationData
    fullName: Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceiveAsType(System.String,System.String,System.Object,Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData,System.Type)
    name: ConvertSendAndReceiveAsType
    nameWithType: RabbitTemplate.ConvertSendAndReceiveAsType
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceiveAsType
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData
    name: CorrelationData
    nameWithType: CorrelationData
    fullName: Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceiveAsType(System.String,System.String,System.Object,Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor,System.Type)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceiveAsType(System.String,System.String,System.Object,Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor,System.Type)
  parent: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate
  isExternal: true
  name: ConvertSendAndReceiveAsType(String, String, Object, IMessagePostProcessor, Type)
  nameWithType: RabbitTemplate.ConvertSendAndReceiveAsType(String, String, Object, IMessagePostProcessor, Type)
  fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceiveAsType(System.String, System.String, System.Object, Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor, System.Type)
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceiveAsType(System.String,System.String,System.Object,Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor,System.Type)
    name: ConvertSendAndReceiveAsType
    nameWithType: RabbitTemplate.ConvertSendAndReceiveAsType
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceiveAsType
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor
    name: IMessagePostProcessor
    nameWithType: IMessagePostProcessor
    fullName: Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceiveAsType(System.String,System.String,System.Object,Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor,System.Type)
    name: ConvertSendAndReceiveAsType
    nameWithType: RabbitTemplate.ConvertSendAndReceiveAsType
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceiveAsType
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor
    name: IMessagePostProcessor
    nameWithType: IMessagePostProcessor
    fullName: Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceiveAsType(System.String,System.String,System.Object,Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor,Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData,System.Type)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceiveAsType(System.String,System.String,System.Object,Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor,Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData,System.Type)
  parent: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate
  isExternal: true
  name: ConvertSendAndReceiveAsType(String, String, Object, IMessagePostProcessor, CorrelationData, Type)
  nameWithType: RabbitTemplate.ConvertSendAndReceiveAsType(String, String, Object, IMessagePostProcessor, CorrelationData, Type)
  fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceiveAsType(System.String, System.String, System.Object, Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor, Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData, System.Type)
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceiveAsType(System.String,System.String,System.Object,Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor,Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData,System.Type)
    name: ConvertSendAndReceiveAsType
    nameWithType: RabbitTemplate.ConvertSendAndReceiveAsType
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceiveAsType
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor
    name: IMessagePostProcessor
    nameWithType: IMessagePostProcessor
    fullName: Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData
    name: CorrelationData
    nameWithType: CorrelationData
    fullName: Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceiveAsType(System.String,System.String,System.Object,Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor,Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData,System.Type)
    name: ConvertSendAndReceiveAsType
    nameWithType: RabbitTemplate.ConvertSendAndReceiveAsType
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceiveAsType
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor
    name: IMessagePostProcessor
    nameWithType: IMessagePostProcessor
    fullName: Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData
    name: CorrelationData
    nameWithType: CorrelationData
    fullName: Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceiveAsTypeAsync(System.Object,System.Type,System.Threading.CancellationToken)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceiveAsTypeAsync(System.Object,System.Type,System.Threading.CancellationToken)
  parent: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate
  isExternal: true
  name: ConvertSendAndReceiveAsTypeAsync(Object, Type, CancellationToken)
  nameWithType: RabbitTemplate.ConvertSendAndReceiveAsTypeAsync(Object, Type, CancellationToken)
  fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceiveAsTypeAsync(System.Object, System.Type, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceiveAsTypeAsync(System.Object,System.Type,System.Threading.CancellationToken)
    name: ConvertSendAndReceiveAsTypeAsync
    nameWithType: RabbitTemplate.ConvertSendAndReceiveAsTypeAsync
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceiveAsTypeAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceiveAsTypeAsync(System.Object,System.Type,System.Threading.CancellationToken)
    name: ConvertSendAndReceiveAsTypeAsync
    nameWithType: RabbitTemplate.ConvertSendAndReceiveAsTypeAsync
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceiveAsTypeAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceiveAsTypeAsync(System.Object,Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData,System.Type,System.Threading.CancellationToken)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceiveAsTypeAsync(System.Object,Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData,System.Type,System.Threading.CancellationToken)
  parent: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate
  isExternal: true
  name: ConvertSendAndReceiveAsTypeAsync(Object, CorrelationData, Type, CancellationToken)
  nameWithType: RabbitTemplate.ConvertSendAndReceiveAsTypeAsync(Object, CorrelationData, Type, CancellationToken)
  fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceiveAsTypeAsync(System.Object, Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData, System.Type, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceiveAsTypeAsync(System.Object,Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData,System.Type,System.Threading.CancellationToken)
    name: ConvertSendAndReceiveAsTypeAsync
    nameWithType: RabbitTemplate.ConvertSendAndReceiveAsTypeAsync
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceiveAsTypeAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData
    name: CorrelationData
    nameWithType: CorrelationData
    fullName: Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceiveAsTypeAsync(System.Object,Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData,System.Type,System.Threading.CancellationToken)
    name: ConvertSendAndReceiveAsTypeAsync
    nameWithType: RabbitTemplate.ConvertSendAndReceiveAsTypeAsync
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceiveAsTypeAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData
    name: CorrelationData
    nameWithType: CorrelationData
    fullName: Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceiveAsTypeAsync(System.Object,Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor,System.Type,System.Threading.CancellationToken)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceiveAsTypeAsync(System.Object,Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor,System.Type,System.Threading.CancellationToken)
  parent: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate
  isExternal: true
  name: ConvertSendAndReceiveAsTypeAsync(Object, IMessagePostProcessor, Type, CancellationToken)
  nameWithType: RabbitTemplate.ConvertSendAndReceiveAsTypeAsync(Object, IMessagePostProcessor, Type, CancellationToken)
  fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceiveAsTypeAsync(System.Object, Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor, System.Type, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceiveAsTypeAsync(System.Object,Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor,System.Type,System.Threading.CancellationToken)
    name: ConvertSendAndReceiveAsTypeAsync
    nameWithType: RabbitTemplate.ConvertSendAndReceiveAsTypeAsync
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceiveAsTypeAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor
    name: IMessagePostProcessor
    nameWithType: IMessagePostProcessor
    fullName: Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceiveAsTypeAsync(System.Object,Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor,System.Type,System.Threading.CancellationToken)
    name: ConvertSendAndReceiveAsTypeAsync
    nameWithType: RabbitTemplate.ConvertSendAndReceiveAsTypeAsync
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceiveAsTypeAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor
    name: IMessagePostProcessor
    nameWithType: IMessagePostProcessor
    fullName: Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceiveAsTypeAsync(System.Object,Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor,Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData,System.Type,System.Threading.CancellationToken)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceiveAsTypeAsync(System.Object,Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor,Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData,System.Type,System.Threading.CancellationToken)
  parent: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate
  isExternal: true
  name: ConvertSendAndReceiveAsTypeAsync(Object, IMessagePostProcessor, CorrelationData, Type, CancellationToken)
  nameWithType: RabbitTemplate.ConvertSendAndReceiveAsTypeAsync(Object, IMessagePostProcessor, CorrelationData, Type, CancellationToken)
  fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceiveAsTypeAsync(System.Object, Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor, Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData, System.Type, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceiveAsTypeAsync(System.Object,Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor,Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData,System.Type,System.Threading.CancellationToken)
    name: ConvertSendAndReceiveAsTypeAsync
    nameWithType: RabbitTemplate.ConvertSendAndReceiveAsTypeAsync
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceiveAsTypeAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor
    name: IMessagePostProcessor
    nameWithType: IMessagePostProcessor
    fullName: Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData
    name: CorrelationData
    nameWithType: CorrelationData
    fullName: Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceiveAsTypeAsync(System.Object,Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor,Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData,System.Type,System.Threading.CancellationToken)
    name: ConvertSendAndReceiveAsTypeAsync
    nameWithType: RabbitTemplate.ConvertSendAndReceiveAsTypeAsync
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceiveAsTypeAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor
    name: IMessagePostProcessor
    nameWithType: IMessagePostProcessor
    fullName: Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData
    name: CorrelationData
    nameWithType: CorrelationData
    fullName: Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceiveAsTypeAsync(System.String,System.Object,System.Type,System.Threading.CancellationToken)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceiveAsTypeAsync(System.String,System.Object,System.Type,System.Threading.CancellationToken)
  parent: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate
  isExternal: true
  name: ConvertSendAndReceiveAsTypeAsync(String, Object, Type, CancellationToken)
  nameWithType: RabbitTemplate.ConvertSendAndReceiveAsTypeAsync(String, Object, Type, CancellationToken)
  fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceiveAsTypeAsync(System.String, System.Object, System.Type, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceiveAsTypeAsync(System.String,System.Object,System.Type,System.Threading.CancellationToken)
    name: ConvertSendAndReceiveAsTypeAsync
    nameWithType: RabbitTemplate.ConvertSendAndReceiveAsTypeAsync
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceiveAsTypeAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceiveAsTypeAsync(System.String,System.Object,System.Type,System.Threading.CancellationToken)
    name: ConvertSendAndReceiveAsTypeAsync
    nameWithType: RabbitTemplate.ConvertSendAndReceiveAsTypeAsync
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceiveAsTypeAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceiveAsTypeAsync(System.String,System.Object,Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData,System.Type,System.Threading.CancellationToken)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceiveAsTypeAsync(System.String,System.Object,Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData,System.Type,System.Threading.CancellationToken)
  parent: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate
  isExternal: true
  name: ConvertSendAndReceiveAsTypeAsync(String, Object, CorrelationData, Type, CancellationToken)
  nameWithType: RabbitTemplate.ConvertSendAndReceiveAsTypeAsync(String, Object, CorrelationData, Type, CancellationToken)
  fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceiveAsTypeAsync(System.String, System.Object, Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData, System.Type, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceiveAsTypeAsync(System.String,System.Object,Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData,System.Type,System.Threading.CancellationToken)
    name: ConvertSendAndReceiveAsTypeAsync
    nameWithType: RabbitTemplate.ConvertSendAndReceiveAsTypeAsync
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceiveAsTypeAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData
    name: CorrelationData
    nameWithType: CorrelationData
    fullName: Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceiveAsTypeAsync(System.String,System.Object,Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData,System.Type,System.Threading.CancellationToken)
    name: ConvertSendAndReceiveAsTypeAsync
    nameWithType: RabbitTemplate.ConvertSendAndReceiveAsTypeAsync
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceiveAsTypeAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData
    name: CorrelationData
    nameWithType: CorrelationData
    fullName: Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceiveAsTypeAsync(System.String,System.Object,Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor,System.Type,System.Threading.CancellationToken)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceiveAsTypeAsync(System.String,System.Object,Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor,System.Type,System.Threading.CancellationToken)
  parent: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate
  isExternal: true
  name: ConvertSendAndReceiveAsTypeAsync(String, Object, IMessagePostProcessor, Type, CancellationToken)
  nameWithType: RabbitTemplate.ConvertSendAndReceiveAsTypeAsync(String, Object, IMessagePostProcessor, Type, CancellationToken)
  fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceiveAsTypeAsync(System.String, System.Object, Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor, System.Type, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceiveAsTypeAsync(System.String,System.Object,Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor,System.Type,System.Threading.CancellationToken)
    name: ConvertSendAndReceiveAsTypeAsync
    nameWithType: RabbitTemplate.ConvertSendAndReceiveAsTypeAsync
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceiveAsTypeAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor
    name: IMessagePostProcessor
    nameWithType: IMessagePostProcessor
    fullName: Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceiveAsTypeAsync(System.String,System.Object,Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor,System.Type,System.Threading.CancellationToken)
    name: ConvertSendAndReceiveAsTypeAsync
    nameWithType: RabbitTemplate.ConvertSendAndReceiveAsTypeAsync
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceiveAsTypeAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor
    name: IMessagePostProcessor
    nameWithType: IMessagePostProcessor
    fullName: Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceiveAsTypeAsync(System.String,System.Object,Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor,Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData,System.Type,System.Threading.CancellationToken)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceiveAsTypeAsync(System.String,System.Object,Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor,Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData,System.Type,System.Threading.CancellationToken)
  parent: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate
  isExternal: true
  name: ConvertSendAndReceiveAsTypeAsync(String, Object, IMessagePostProcessor, CorrelationData, Type, CancellationToken)
  nameWithType: RabbitTemplate.ConvertSendAndReceiveAsTypeAsync(String, Object, IMessagePostProcessor, CorrelationData, Type, CancellationToken)
  fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceiveAsTypeAsync(System.String, System.Object, Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor, Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData, System.Type, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceiveAsTypeAsync(System.String,System.Object,Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor,Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData,System.Type,System.Threading.CancellationToken)
    name: ConvertSendAndReceiveAsTypeAsync
    nameWithType: RabbitTemplate.ConvertSendAndReceiveAsTypeAsync
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceiveAsTypeAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor
    name: IMessagePostProcessor
    nameWithType: IMessagePostProcessor
    fullName: Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData
    name: CorrelationData
    nameWithType: CorrelationData
    fullName: Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceiveAsTypeAsync(System.String,System.Object,Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor,Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData,System.Type,System.Threading.CancellationToken)
    name: ConvertSendAndReceiveAsTypeAsync
    nameWithType: RabbitTemplate.ConvertSendAndReceiveAsTypeAsync
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceiveAsTypeAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor
    name: IMessagePostProcessor
    nameWithType: IMessagePostProcessor
    fullName: Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData
    name: CorrelationData
    nameWithType: CorrelationData
    fullName: Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceiveAsTypeAsync(System.String,System.String,System.Object,System.Type,System.Threading.CancellationToken)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceiveAsTypeAsync(System.String,System.String,System.Object,System.Type,System.Threading.CancellationToken)
  parent: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate
  isExternal: true
  name: ConvertSendAndReceiveAsTypeAsync(String, String, Object, Type, CancellationToken)
  nameWithType: RabbitTemplate.ConvertSendAndReceiveAsTypeAsync(String, String, Object, Type, CancellationToken)
  fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceiveAsTypeAsync(System.String, System.String, System.Object, System.Type, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceiveAsTypeAsync(System.String,System.String,System.Object,System.Type,System.Threading.CancellationToken)
    name: ConvertSendAndReceiveAsTypeAsync
    nameWithType: RabbitTemplate.ConvertSendAndReceiveAsTypeAsync
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceiveAsTypeAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceiveAsTypeAsync(System.String,System.String,System.Object,System.Type,System.Threading.CancellationToken)
    name: ConvertSendAndReceiveAsTypeAsync
    nameWithType: RabbitTemplate.ConvertSendAndReceiveAsTypeAsync
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceiveAsTypeAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceiveAsTypeAsync(System.String,System.String,System.Object,Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData,System.Type,System.Threading.CancellationToken)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceiveAsTypeAsync(System.String,System.String,System.Object,Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData,System.Type,System.Threading.CancellationToken)
  parent: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate
  isExternal: true
  name: ConvertSendAndReceiveAsTypeAsync(String, String, Object, CorrelationData, Type, CancellationToken)
  nameWithType: RabbitTemplate.ConvertSendAndReceiveAsTypeAsync(String, String, Object, CorrelationData, Type, CancellationToken)
  fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceiveAsTypeAsync(System.String, System.String, System.Object, Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData, System.Type, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceiveAsTypeAsync(System.String,System.String,System.Object,Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData,System.Type,System.Threading.CancellationToken)
    name: ConvertSendAndReceiveAsTypeAsync
    nameWithType: RabbitTemplate.ConvertSendAndReceiveAsTypeAsync
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceiveAsTypeAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData
    name: CorrelationData
    nameWithType: CorrelationData
    fullName: Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceiveAsTypeAsync(System.String,System.String,System.Object,Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData,System.Type,System.Threading.CancellationToken)
    name: ConvertSendAndReceiveAsTypeAsync
    nameWithType: RabbitTemplate.ConvertSendAndReceiveAsTypeAsync
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceiveAsTypeAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData
    name: CorrelationData
    nameWithType: CorrelationData
    fullName: Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceiveAsTypeAsync(System.String,System.String,System.Object,Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor,System.Type,System.Threading.CancellationToken)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceiveAsTypeAsync(System.String,System.String,System.Object,Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor,System.Type,System.Threading.CancellationToken)
  parent: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate
  isExternal: true
  name: ConvertSendAndReceiveAsTypeAsync(String, String, Object, IMessagePostProcessor, Type, CancellationToken)
  nameWithType: RabbitTemplate.ConvertSendAndReceiveAsTypeAsync(String, String, Object, IMessagePostProcessor, Type, CancellationToken)
  fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceiveAsTypeAsync(System.String, System.String, System.Object, Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor, System.Type, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceiveAsTypeAsync(System.String,System.String,System.Object,Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor,System.Type,System.Threading.CancellationToken)
    name: ConvertSendAndReceiveAsTypeAsync
    nameWithType: RabbitTemplate.ConvertSendAndReceiveAsTypeAsync
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceiveAsTypeAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor
    name: IMessagePostProcessor
    nameWithType: IMessagePostProcessor
    fullName: Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceiveAsTypeAsync(System.String,System.String,System.Object,Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor,System.Type,System.Threading.CancellationToken)
    name: ConvertSendAndReceiveAsTypeAsync
    nameWithType: RabbitTemplate.ConvertSendAndReceiveAsTypeAsync
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceiveAsTypeAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor
    name: IMessagePostProcessor
    nameWithType: IMessagePostProcessor
    fullName: Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceiveAsTypeAsync(System.String,System.String,System.Object,Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor,Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData,System.Type,System.Threading.CancellationToken)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceiveAsTypeAsync(System.String,System.String,System.Object,Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor,Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData,System.Type,System.Threading.CancellationToken)
  parent: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate
  isExternal: true
  name: ConvertSendAndReceiveAsTypeAsync(String, String, Object, IMessagePostProcessor, CorrelationData, Type, CancellationToken)
  nameWithType: RabbitTemplate.ConvertSendAndReceiveAsTypeAsync(String, String, Object, IMessagePostProcessor, CorrelationData, Type, CancellationToken)
  fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceiveAsTypeAsync(System.String, System.String, System.Object, Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor, Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData, System.Type, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceiveAsTypeAsync(System.String,System.String,System.Object,Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor,Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData,System.Type,System.Threading.CancellationToken)
    name: ConvertSendAndReceiveAsTypeAsync
    nameWithType: RabbitTemplate.ConvertSendAndReceiveAsTypeAsync
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceiveAsTypeAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor
    name: IMessagePostProcessor
    nameWithType: IMessagePostProcessor
    fullName: Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData
    name: CorrelationData
    nameWithType: CorrelationData
    fullName: Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceiveAsTypeAsync(System.String,System.String,System.Object,Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor,Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData,System.Type,System.Threading.CancellationToken)
    name: ConvertSendAndReceiveAsTypeAsync
    nameWithType: RabbitTemplate.ConvertSendAndReceiveAsTypeAsync
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceiveAsTypeAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor
    name: IMessagePostProcessor
    nameWithType: IMessagePostProcessor
    fullName: Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData
    name: CorrelationData
    nameWithType: CorrelationData
    fullName: Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.CorrelationConvertAndSend(System.Object,Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.CorrelationConvertAndSend(System.Object,Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData)
  parent: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate
  isExternal: true
  name: CorrelationConvertAndSend(Object, CorrelationData)
  nameWithType: RabbitTemplate.CorrelationConvertAndSend(Object, CorrelationData)
  fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.CorrelationConvertAndSend(System.Object, Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData)
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.CorrelationConvertAndSend(System.Object,Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData)
    name: CorrelationConvertAndSend
    nameWithType: RabbitTemplate.CorrelationConvertAndSend
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.CorrelationConvertAndSend
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData
    name: CorrelationData
    nameWithType: CorrelationData
    fullName: Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.CorrelationConvertAndSend(System.Object,Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData)
    name: CorrelationConvertAndSend
    nameWithType: RabbitTemplate.CorrelationConvertAndSend
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.CorrelationConvertAndSend
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData
    name: CorrelationData
    nameWithType: CorrelationData
    fullName: Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.GetUnconfirmed(System.Int64)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.GetUnconfirmed(System.Int64)
  parent: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate
  isExternal: true
  name: GetUnconfirmed(Int64)
  nameWithType: RabbitTemplate.GetUnconfirmed(Int64)
  fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.GetUnconfirmed(System.Int64)
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.GetUnconfirmed(System.Int64)
    name: GetUnconfirmed
    nameWithType: RabbitTemplate.GetUnconfirmed
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.GetUnconfirmed
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.GetUnconfirmed(System.Int64)
    name: GetUnconfirmed
    nameWithType: RabbitTemplate.GetUnconfirmed
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.GetUnconfirmed
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.GetUnconfirmedCount
  commentId: M:Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.GetUnconfirmedCount
  parent: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate
  name: GetUnconfirmedCount()
  nameWithType: RabbitTemplate.GetUnconfirmedCount()
  fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.GetUnconfirmedCount()
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.GetUnconfirmedCount
    name: GetUnconfirmedCount
    nameWithType: RabbitTemplate.GetUnconfirmedCount
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.GetUnconfirmedCount
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.GetUnconfirmedCount
    name: GetUnconfirmedCount
    nameWithType: RabbitTemplate.GetUnconfirmedCount
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.GetUnconfirmedCount
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.Execute(System.Action{RabbitMQ.Client.IModel})
  commentId: M:Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.Execute(System.Action{RabbitMQ.Client.IModel})
  parent: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate
  isExternal: true
  name: Execute(Action<IModel>)
  nameWithType: RabbitTemplate.Execute(Action<IModel>)
  fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.Execute(System.Action<RabbitMQ.Client.IModel>)
  nameWithType.vb: RabbitTemplate.Execute(Action(Of IModel))
  fullName.vb: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.Execute(System.Action(Of RabbitMQ.Client.IModel))
  name.vb: Execute(Action(Of IModel))
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.Execute(System.Action{RabbitMQ.Client.IModel})
    name: Execute
    nameWithType: RabbitTemplate.Execute
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.Execute
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: RabbitMQ.Client.IModel
    name: IModel
    nameWithType: IModel
    fullName: RabbitMQ.Client.IModel
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.Execute(System.Action{RabbitMQ.Client.IModel})
    name: Execute
    nameWithType: RabbitTemplate.Execute
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.Execute
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: RabbitMQ.Client.IModel
    name: IModel
    nameWithType: IModel
    fullName: RabbitMQ.Client.IModel
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.Execute``1(System.Func{RabbitMQ.Client.IModel,{T}})
  commentId: M:Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.Execute``1(System.Func{RabbitMQ.Client.IModel,``0})
  parent: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate
  definition: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.Execute``1(System.Func{RabbitMQ.Client.IModel,``0})
  name: Execute<T>(Func<IModel, T>)
  nameWithType: RabbitTemplate.Execute<T>(Func<IModel, T>)
  fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.Execute<T>(System.Func<RabbitMQ.Client.IModel, T>)
  nameWithType.vb: RabbitTemplate.Execute(Of T)(Func(Of IModel, T))
  fullName.vb: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.Execute(Of T)(System.Func(Of RabbitMQ.Client.IModel, T))
  name.vb: Execute(Of T)(Func(Of IModel, T))
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.Execute``1(System.Func{RabbitMQ.Client.IModel,``0})
    name: Execute<T>
    nameWithType: RabbitTemplate.Execute<T>
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.Execute<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: RabbitMQ.Client.IModel
    name: IModel
    nameWithType: IModel
    fullName: RabbitMQ.Client.IModel
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.Execute``1(System.Func{RabbitMQ.Client.IModel,``0})
    name: Execute(Of T)
    nameWithType: RabbitTemplate.Execute(Of T)
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.Execute(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: RabbitMQ.Client.IModel
    name: IModel
    nameWithType: IModel
    fullName: RabbitMQ.Client.IModel
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.AddListener(RabbitMQ.Client.IModel)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.AddListener(RabbitMQ.Client.IModel)
  parent: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate
  isExternal: true
  name: AddListener(IModel)
  nameWithType: RabbitTemplate.AddListener(IModel)
  fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.AddListener(RabbitMQ.Client.IModel)
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.AddListener(RabbitMQ.Client.IModel)
    name: AddListener
    nameWithType: RabbitTemplate.AddListener
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.AddListener
  - name: (
    nameWithType: (
    fullName: (
  - uid: RabbitMQ.Client.IModel
    name: IModel
    nameWithType: IModel
    fullName: RabbitMQ.Client.IModel
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.AddListener(RabbitMQ.Client.IModel)
    name: AddListener
    nameWithType: RabbitTemplate.AddListener
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.AddListener
  - name: (
    nameWithType: (
    fullName: (
  - uid: RabbitMQ.Client.IModel
    name: IModel
    nameWithType: IModel
    fullName: RabbitMQ.Client.IModel
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.Invoke``1(System.Func{Steeltoe.Messaging.RabbitMQ.Core.IRabbitTemplate,{T}})
  commentId: M:Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.Invoke``1(System.Func{Steeltoe.Messaging.RabbitMQ.Core.IRabbitTemplate,``0})
  parent: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate
  definition: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.Invoke``1(System.Func{Steeltoe.Messaging.RabbitMQ.Core.IRabbitTemplate,``0})
  name: Invoke<T>(Func<IRabbitTemplate, T>)
  nameWithType: RabbitTemplate.Invoke<T>(Func<IRabbitTemplate, T>)
  fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.Invoke<T>(System.Func<Steeltoe.Messaging.RabbitMQ.Core.IRabbitTemplate, T>)
  nameWithType.vb: RabbitTemplate.Invoke(Of T)(Func(Of IRabbitTemplate, T))
  fullName.vb: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.Invoke(Of T)(System.Func(Of Steeltoe.Messaging.RabbitMQ.Core.IRabbitTemplate, T))
  name.vb: Invoke(Of T)(Func(Of IRabbitTemplate, T))
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.Invoke``1(System.Func{Steeltoe.Messaging.RabbitMQ.Core.IRabbitTemplate,``0})
    name: Invoke<T>
    nameWithType: RabbitTemplate.Invoke<T>
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.Invoke<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Steeltoe.Messaging.RabbitMQ.Core.IRabbitTemplate
    name: IRabbitTemplate
    nameWithType: IRabbitTemplate
    fullName: Steeltoe.Messaging.RabbitMQ.Core.IRabbitTemplate
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.Invoke``1(System.Func{Steeltoe.Messaging.RabbitMQ.Core.IRabbitTemplate,``0})
    name: Invoke(Of T)
    nameWithType: RabbitTemplate.Invoke(Of T)
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.Invoke(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Steeltoe.Messaging.RabbitMQ.Core.IRabbitTemplate
    name: IRabbitTemplate
    nameWithType: IRabbitTemplate
    fullName: Steeltoe.Messaging.RabbitMQ.Core.IRabbitTemplate
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.Invoke``1(System.Func{Steeltoe.Messaging.RabbitMQ.Core.IRabbitTemplate,{T}},System.Action{System.Object,RabbitMQ.Client.Events.BasicAckEventArgs},System.Action{System.Object,RabbitMQ.Client.Events.BasicNackEventArgs})
  commentId: M:Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.Invoke``1(System.Func{Steeltoe.Messaging.RabbitMQ.Core.IRabbitTemplate,``0},System.Action{System.Object,RabbitMQ.Client.Events.BasicAckEventArgs},System.Action{System.Object,RabbitMQ.Client.Events.BasicNackEventArgs})
  parent: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate
  definition: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.Invoke``1(System.Func{Steeltoe.Messaging.RabbitMQ.Core.IRabbitTemplate,``0},System.Action{System.Object,RabbitMQ.Client.Events.BasicAckEventArgs},System.Action{System.Object,RabbitMQ.Client.Events.BasicNackEventArgs})
  name: Invoke<T>(Func<IRabbitTemplate, T>, Action<Object, BasicAckEventArgs>, Action<Object, BasicNackEventArgs>)
  nameWithType: RabbitTemplate.Invoke<T>(Func<IRabbitTemplate, T>, Action<Object, BasicAckEventArgs>, Action<Object, BasicNackEventArgs>)
  fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.Invoke<T>(System.Func<Steeltoe.Messaging.RabbitMQ.Core.IRabbitTemplate, T>, System.Action<System.Object, RabbitMQ.Client.Events.BasicAckEventArgs>, System.Action<System.Object, RabbitMQ.Client.Events.BasicNackEventArgs>)
  nameWithType.vb: RabbitTemplate.Invoke(Of T)(Func(Of IRabbitTemplate, T), Action(Of Object, BasicAckEventArgs), Action(Of Object, BasicNackEventArgs))
  fullName.vb: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.Invoke(Of T)(System.Func(Of Steeltoe.Messaging.RabbitMQ.Core.IRabbitTemplate, T), System.Action(Of System.Object, RabbitMQ.Client.Events.BasicAckEventArgs), System.Action(Of System.Object, RabbitMQ.Client.Events.BasicNackEventArgs))
  name.vb: Invoke(Of T)(Func(Of IRabbitTemplate, T), Action(Of Object, BasicAckEventArgs), Action(Of Object, BasicNackEventArgs))
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.Invoke``1(System.Func{Steeltoe.Messaging.RabbitMQ.Core.IRabbitTemplate,``0},System.Action{System.Object,RabbitMQ.Client.Events.BasicAckEventArgs},System.Action{System.Object,RabbitMQ.Client.Events.BasicNackEventArgs})
    name: Invoke<T>
    nameWithType: RabbitTemplate.Invoke<T>
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.Invoke<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Steeltoe.Messaging.RabbitMQ.Core.IRabbitTemplate
    name: IRabbitTemplate
    nameWithType: IRabbitTemplate
    fullName: Steeltoe.Messaging.RabbitMQ.Core.IRabbitTemplate
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`2
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: RabbitMQ.Client.Events.BasicAckEventArgs
    name: BasicAckEventArgs
    nameWithType: BasicAckEventArgs
    fullName: RabbitMQ.Client.Events.BasicAckEventArgs
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`2
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: RabbitMQ.Client.Events.BasicNackEventArgs
    name: BasicNackEventArgs
    nameWithType: BasicNackEventArgs
    fullName: RabbitMQ.Client.Events.BasicNackEventArgs
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.Invoke``1(System.Func{Steeltoe.Messaging.RabbitMQ.Core.IRabbitTemplate,``0},System.Action{System.Object,RabbitMQ.Client.Events.BasicAckEventArgs},System.Action{System.Object,RabbitMQ.Client.Events.BasicNackEventArgs})
    name: Invoke(Of T)
    nameWithType: RabbitTemplate.Invoke(Of T)
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.Invoke(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Steeltoe.Messaging.RabbitMQ.Core.IRabbitTemplate
    name: IRabbitTemplate
    nameWithType: IRabbitTemplate
    fullName: Steeltoe.Messaging.RabbitMQ.Core.IRabbitTemplate
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`2
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: RabbitMQ.Client.Events.BasicAckEventArgs
    name: BasicAckEventArgs
    nameWithType: BasicAckEventArgs
    fullName: RabbitMQ.Client.Events.BasicAckEventArgs
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`2
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: RabbitMQ.Client.Events.BasicNackEventArgs
    name: BasicNackEventArgs
    nameWithType: BasicNackEventArgs
    fullName: RabbitMQ.Client.Events.BasicNackEventArgs
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.WaitForConfirms(System.Int32)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.WaitForConfirms(System.Int32)
  parent: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate
  isExternal: true
  name: WaitForConfirms(Int32)
  nameWithType: RabbitTemplate.WaitForConfirms(Int32)
  fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.WaitForConfirms(System.Int32)
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.WaitForConfirms(System.Int32)
    name: WaitForConfirms
    nameWithType: RabbitTemplate.WaitForConfirms
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.WaitForConfirms
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.WaitForConfirms(System.Int32)
    name: WaitForConfirms
    nameWithType: RabbitTemplate.WaitForConfirms
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.WaitForConfirms
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.WaitForConfirmsOrDie(System.Int32)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.WaitForConfirmsOrDie(System.Int32)
  parent: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate
  isExternal: true
  name: WaitForConfirmsOrDie(Int32)
  nameWithType: RabbitTemplate.WaitForConfirmsOrDie(Int32)
  fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.WaitForConfirmsOrDie(System.Int32)
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.WaitForConfirmsOrDie(System.Int32)
    name: WaitForConfirmsOrDie
    nameWithType: RabbitTemplate.WaitForConfirmsOrDie
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.WaitForConfirmsOrDie
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.WaitForConfirmsOrDie(System.Int32)
    name: WaitForConfirmsOrDie
    nameWithType: RabbitTemplate.WaitForConfirmsOrDie
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.WaitForConfirmsOrDie
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.DetermineConfirmsReturnsCapability(Steeltoe.Messaging.RabbitMQ.Connection.IConnectionFactory)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.DetermineConfirmsReturnsCapability(Steeltoe.Messaging.RabbitMQ.Connection.IConnectionFactory)
  parent: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate
  name: DetermineConfirmsReturnsCapability(IConnectionFactory)
  nameWithType: RabbitTemplate.DetermineConfirmsReturnsCapability(IConnectionFactory)
  fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.DetermineConfirmsReturnsCapability(Steeltoe.Messaging.RabbitMQ.Connection.IConnectionFactory)
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.DetermineConfirmsReturnsCapability(Steeltoe.Messaging.RabbitMQ.Connection.IConnectionFactory)
    name: DetermineConfirmsReturnsCapability
    nameWithType: RabbitTemplate.DetermineConfirmsReturnsCapability
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.DetermineConfirmsReturnsCapability
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.RabbitMQ.Connection.IConnectionFactory
    name: IConnectionFactory
    nameWithType: IConnectionFactory
    fullName: Steeltoe.Messaging.RabbitMQ.Connection.IConnectionFactory
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.DetermineConfirmsReturnsCapability(Steeltoe.Messaging.RabbitMQ.Connection.IConnectionFactory)
    name: DetermineConfirmsReturnsCapability
    nameWithType: RabbitTemplate.DetermineConfirmsReturnsCapability
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.DetermineConfirmsReturnsCapability
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.RabbitMQ.Connection.IConnectionFactory
    name: IConnectionFactory
    nameWithType: IConnectionFactory
    fullName: Steeltoe.Messaging.RabbitMQ.Connection.IConnectionFactory
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.IsMandatoryFor(Steeltoe.Messaging.IMessage)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.IsMandatoryFor(Steeltoe.Messaging.IMessage)
  parent: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate
  name: IsMandatoryFor(IMessage)
  nameWithType: RabbitTemplate.IsMandatoryFor(IMessage)
  fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.IsMandatoryFor(Steeltoe.Messaging.IMessage)
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.IsMandatoryFor(Steeltoe.Messaging.IMessage)
    name: IsMandatoryFor
    nameWithType: RabbitTemplate.IsMandatoryFor
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.IsMandatoryFor
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.IsMandatoryFor(Steeltoe.Messaging.IMessage)
    name: IsMandatoryFor
    nameWithType: RabbitTemplate.IsMandatoryFor
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.IsMandatoryFor
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.Dispose
  commentId: M:Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.Dispose
  parent: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate
  name: Dispose()
  nameWithType: RabbitTemplate.Dispose()
  fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.Dispose()
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.Dispose
    name: Dispose
    nameWithType: RabbitTemplate.Dispose
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.Dispose
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.Dispose
    name: Dispose
    nameWithType: RabbitTemplate.Dispose
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.Dispose
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.Start
  commentId: M:Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.Start
  parent: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate
  name: Start()
  nameWithType: RabbitTemplate.Start()
  fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.Start()
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.Start
    name: Start
    nameWithType: RabbitTemplate.Start
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.Start
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.Start
    name: Start
    nameWithType: RabbitTemplate.Start
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.Start
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.Stop
  commentId: M:Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.Stop
  parent: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate
  name: Stop()
  nameWithType: RabbitTemplate.Stop()
  fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.Stop()
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.Stop
    name: Stop
    nameWithType: RabbitTemplate.Stop
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.Stop
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.Stop
    name: Stop
    nameWithType: RabbitTemplate.Stop
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.Stop
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertMessageIfNecessary(System.Object)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertMessageIfNecessary(System.Object)
  parent: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate
  isExternal: true
  name: ConvertMessageIfNecessary(Object)
  nameWithType: RabbitTemplate.ConvertMessageIfNecessary(Object)
  fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertMessageIfNecessary(System.Object)
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertMessageIfNecessary(System.Object)
    name: ConvertMessageIfNecessary
    nameWithType: RabbitTemplate.ConvertMessageIfNecessary
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertMessageIfNecessary
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertMessageIfNecessary(System.Object)
    name: ConvertMessageIfNecessary
    nameWithType: RabbitTemplate.ConvertMessageIfNecessary
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertMessageIfNecessary
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.DoSendAndReceiveWithTemporary(System.String,System.String,Steeltoe.Messaging.IMessage,Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData,System.Threading.CancellationToken)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.DoSendAndReceiveWithTemporary(System.String,System.String,Steeltoe.Messaging.IMessage,Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData,System.Threading.CancellationToken)
  parent: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate
  isExternal: true
  name: DoSendAndReceiveWithTemporary(String, String, IMessage, CorrelationData, CancellationToken)
  nameWithType: RabbitTemplate.DoSendAndReceiveWithTemporary(String, String, IMessage, CorrelationData, CancellationToken)
  fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.DoSendAndReceiveWithTemporary(System.String, System.String, Steeltoe.Messaging.IMessage, Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.DoSendAndReceiveWithTemporary(System.String,System.String,Steeltoe.Messaging.IMessage,Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData,System.Threading.CancellationToken)
    name: DoSendAndReceiveWithTemporary
    nameWithType: RabbitTemplate.DoSendAndReceiveWithTemporary
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.DoSendAndReceiveWithTemporary
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData
    name: CorrelationData
    nameWithType: CorrelationData
    fullName: Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.DoSendAndReceiveWithTemporary(System.String,System.String,Steeltoe.Messaging.IMessage,Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData,System.Threading.CancellationToken)
    name: DoSendAndReceiveWithTemporary
    nameWithType: RabbitTemplate.DoSendAndReceiveWithTemporary
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.DoSendAndReceiveWithTemporary
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData
    name: CorrelationData
    nameWithType: CorrelationData
    fullName: Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.DoReceiveAndConvert(System.String,System.Int32,System.Type,System.Threading.CancellationToken)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.DoReceiveAndConvert(System.String,System.Int32,System.Type,System.Threading.CancellationToken)
  parent: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate
  isExternal: true
  name: DoReceiveAndConvert(String, Int32, Type, CancellationToken)
  nameWithType: RabbitTemplate.DoReceiveAndConvert(String, Int32, Type, CancellationToken)
  fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.DoReceiveAndConvert(System.String, System.Int32, System.Type, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.DoReceiveAndConvert(System.String,System.Int32,System.Type,System.Threading.CancellationToken)
    name: DoReceiveAndConvert
    nameWithType: RabbitTemplate.DoReceiveAndConvert
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.DoReceiveAndConvert
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.DoReceiveAndConvert(System.String,System.Int32,System.Type,System.Threading.CancellationToken)
    name: DoReceiveAndConvert
    nameWithType: RabbitTemplate.DoReceiveAndConvert
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.DoReceiveAndConvert
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.DoReceive(System.String,System.Int32,System.Threading.CancellationToken)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.DoReceive(System.String,System.Int32,System.Threading.CancellationToken)
  parent: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate
  isExternal: true
  name: DoReceive(String, Int32, CancellationToken)
  nameWithType: RabbitTemplate.DoReceive(String, Int32, CancellationToken)
  fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.DoReceive(System.String, System.Int32, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.DoReceive(System.String,System.Int32,System.Threading.CancellationToken)
    name: DoReceive
    nameWithType: RabbitTemplate.DoReceive
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.DoReceive
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.DoReceive(System.String,System.Int32,System.Threading.CancellationToken)
    name: DoReceive
    nameWithType: RabbitTemplate.DoReceive
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.DoReceive
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.DoReceive(Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.DoReceive(Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination)
  parent: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate
  name: DoReceive(RabbitDestination)
  nameWithType: RabbitTemplate.DoReceive(RabbitDestination)
  fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.DoReceive(Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination)
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.DoReceive(Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination)
    name: DoReceive
    nameWithType: RabbitTemplate.DoReceive
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.DoReceive
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination
    name: RabbitDestination
    nameWithType: RabbitDestination
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.DoReceive(Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination)
    name: DoReceive
    nameWithType: RabbitTemplate.DoReceive
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.DoReceive
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination
    name: RabbitDestination
    nameWithType: RabbitDestination
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.DoReceiveAsync(Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination,System.Threading.CancellationToken)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.DoReceiveAsync(Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination,System.Threading.CancellationToken)
  parent: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate
  isExternal: true
  name: DoReceiveAsync(RabbitDestination, CancellationToken)
  nameWithType: RabbitTemplate.DoReceiveAsync(RabbitDestination, CancellationToken)
  fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.DoReceiveAsync(Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.DoReceiveAsync(Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination,System.Threading.CancellationToken)
    name: DoReceiveAsync
    nameWithType: RabbitTemplate.DoReceiveAsync
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.DoReceiveAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination
    name: RabbitDestination
    nameWithType: RabbitDestination
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.DoReceiveAsync(Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination,System.Threading.CancellationToken)
    name: DoReceiveAsync
    nameWithType: RabbitTemplate.DoReceiveAsync
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.DoReceiveAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination
    name: RabbitDestination
    nameWithType: RabbitDestination
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.DoSendAsync(Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination,Steeltoe.Messaging.IMessage,System.Threading.CancellationToken)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.DoSendAsync(Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination,Steeltoe.Messaging.IMessage,System.Threading.CancellationToken)
  parent: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate
  isExternal: true
  name: DoSendAsync(RabbitDestination, IMessage, CancellationToken)
  nameWithType: RabbitTemplate.DoSendAsync(RabbitDestination, IMessage, CancellationToken)
  fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.DoSendAsync(Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination, Steeltoe.Messaging.IMessage, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.DoSendAsync(Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination,Steeltoe.Messaging.IMessage,System.Threading.CancellationToken)
    name: DoSendAsync
    nameWithType: RabbitTemplate.DoSendAsync
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.DoSendAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination
    name: RabbitDestination
    nameWithType: RabbitDestination
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.DoSendAsync(Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination,Steeltoe.Messaging.IMessage,System.Threading.CancellationToken)
    name: DoSendAsync
    nameWithType: RabbitTemplate.DoSendAsync
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.DoSendAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination
    name: RabbitDestination
    nameWithType: RabbitDestination
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.DoSendAndReceiveAsync(Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination,Steeltoe.Messaging.IMessage,System.Threading.CancellationToken)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.DoSendAndReceiveAsync(Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination,Steeltoe.Messaging.IMessage,System.Threading.CancellationToken)
  parent: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate
  isExternal: true
  name: DoSendAndReceiveAsync(RabbitDestination, IMessage, CancellationToken)
  nameWithType: RabbitTemplate.DoSendAndReceiveAsync(RabbitDestination, IMessage, CancellationToken)
  fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.DoSendAndReceiveAsync(Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination, Steeltoe.Messaging.IMessage, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.DoSendAndReceiveAsync(Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination,Steeltoe.Messaging.IMessage,System.Threading.CancellationToken)
    name: DoSendAndReceiveAsync
    nameWithType: RabbitTemplate.DoSendAndReceiveAsync
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.DoSendAndReceiveAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination
    name: RabbitDestination
    nameWithType: RabbitDestination
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.DoSendAndReceiveAsync(Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination,Steeltoe.Messaging.IMessage,System.Threading.CancellationToken)
    name: DoSendAndReceiveAsync
    nameWithType: RabbitTemplate.DoSendAndReceiveAsync
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.DoSendAndReceiveAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination
    name: RabbitDestination
    nameWithType: RabbitDestination
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.DoSendAndReceive(Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination,Steeltoe.Messaging.IMessage)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.DoSendAndReceive(Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination,Steeltoe.Messaging.IMessage)
  parent: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate
  name: DoSendAndReceive(RabbitDestination, IMessage)
  nameWithType: RabbitTemplate.DoSendAndReceive(RabbitDestination, IMessage)
  fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.DoSendAndReceive(Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination, Steeltoe.Messaging.IMessage)
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.DoSendAndReceive(Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination,Steeltoe.Messaging.IMessage)
    name: DoSendAndReceive
    nameWithType: RabbitTemplate.DoSendAndReceive
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.DoSendAndReceive
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination
    name: RabbitDestination
    nameWithType: RabbitDestination
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.DoSendAndReceive(Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination,Steeltoe.Messaging.IMessage)
    name: DoSendAndReceive
    nameWithType: RabbitTemplate.DoSendAndReceive
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.DoSendAndReceive
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination
    name: RabbitDestination
    nameWithType: RabbitDestination
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.DoSendAndReceive(System.String,System.String,Steeltoe.Messaging.IMessage,Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData,System.Threading.CancellationToken)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.DoSendAndReceive(System.String,System.String,Steeltoe.Messaging.IMessage,Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData,System.Threading.CancellationToken)
  parent: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate
  isExternal: true
  name: DoSendAndReceive(String, String, IMessage, CorrelationData, CancellationToken)
  nameWithType: RabbitTemplate.DoSendAndReceive(String, String, IMessage, CorrelationData, CancellationToken)
  fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.DoSendAndReceive(System.String, System.String, Steeltoe.Messaging.IMessage, Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.DoSendAndReceive(System.String,System.String,Steeltoe.Messaging.IMessage,Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData,System.Threading.CancellationToken)
    name: DoSendAndReceive
    nameWithType: RabbitTemplate.DoSendAndReceive
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.DoSendAndReceive
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData
    name: CorrelationData
    nameWithType: CorrelationData
    fullName: Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.DoSendAndReceive(System.String,System.String,Steeltoe.Messaging.IMessage,Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData,System.Threading.CancellationToken)
    name: DoSendAndReceive
    nameWithType: RabbitTemplate.DoSendAndReceive
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.DoSendAndReceive
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData
    name: CorrelationData
    nameWithType: CorrelationData
    fullName: Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.DoSendAndReceiveWithFixed(System.String,System.String,Steeltoe.Messaging.IMessage,Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData,System.Threading.CancellationToken)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.DoSendAndReceiveWithFixed(System.String,System.String,Steeltoe.Messaging.IMessage,Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData,System.Threading.CancellationToken)
  parent: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate
  isExternal: true
  name: DoSendAndReceiveWithFixed(String, String, IMessage, CorrelationData, CancellationToken)
  nameWithType: RabbitTemplate.DoSendAndReceiveWithFixed(String, String, IMessage, CorrelationData, CancellationToken)
  fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.DoSendAndReceiveWithFixed(System.String, System.String, Steeltoe.Messaging.IMessage, Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.DoSendAndReceiveWithFixed(System.String,System.String,Steeltoe.Messaging.IMessage,Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData,System.Threading.CancellationToken)
    name: DoSendAndReceiveWithFixed
    nameWithType: RabbitTemplate.DoSendAndReceiveWithFixed
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.DoSendAndReceiveWithFixed
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData
    name: CorrelationData
    nameWithType: CorrelationData
    fullName: Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.DoSendAndReceiveWithFixed(System.String,System.String,Steeltoe.Messaging.IMessage,Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData,System.Threading.CancellationToken)
    name: DoSendAndReceiveWithFixed
    nameWithType: RabbitTemplate.DoSendAndReceiveWithFixed
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.DoSendAndReceiveWithFixed
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData
    name: CorrelationData
    nameWithType: CorrelationData
    fullName: Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.DoSendAndReceiveWithDirect(System.String,System.String,Steeltoe.Messaging.IMessage,Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData,System.Threading.CancellationToken)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.DoSendAndReceiveWithDirect(System.String,System.String,Steeltoe.Messaging.IMessage,Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData,System.Threading.CancellationToken)
  parent: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate
  isExternal: true
  name: DoSendAndReceiveWithDirect(String, String, IMessage, CorrelationData, CancellationToken)
  nameWithType: RabbitTemplate.DoSendAndReceiveWithDirect(String, String, IMessage, CorrelationData, CancellationToken)
  fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.DoSendAndReceiveWithDirect(System.String, System.String, Steeltoe.Messaging.IMessage, Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.DoSendAndReceiveWithDirect(System.String,System.String,Steeltoe.Messaging.IMessage,Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData,System.Threading.CancellationToken)
    name: DoSendAndReceiveWithDirect
    nameWithType: RabbitTemplate.DoSendAndReceiveWithDirect
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.DoSendAndReceiveWithDirect
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData
    name: CorrelationData
    nameWithType: CorrelationData
    fullName: Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.DoSendAndReceiveWithDirect(System.String,System.String,Steeltoe.Messaging.IMessage,Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData,System.Threading.CancellationToken)
    name: DoSendAndReceiveWithDirect
    nameWithType: RabbitTemplate.DoSendAndReceiveWithDirect
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.DoSendAndReceiveWithDirect
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData
    name: CorrelationData
    nameWithType: CorrelationData
    fullName: Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.DoReceiveNoWait(System.String,System.Threading.CancellationToken)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.DoReceiveNoWait(System.String,System.Threading.CancellationToken)
  parent: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate
  isExternal: true
  name: DoReceiveNoWait(String, CancellationToken)
  nameWithType: RabbitTemplate.DoReceiveNoWait(String, CancellationToken)
  fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.DoReceiveNoWait(System.String, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.DoReceiveNoWait(System.String,System.Threading.CancellationToken)
    name: DoReceiveNoWait
    nameWithType: RabbitTemplate.DoReceiveNoWait
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.DoReceiveNoWait
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.DoReceiveNoWait(System.String,System.Threading.CancellationToken)
    name: DoReceiveNoWait
    nameWithType: RabbitTemplate.DoReceiveNoWait
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.DoReceiveNoWait
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.DoSend(RabbitMQ.Client.IModel,System.String,System.String,Steeltoe.Messaging.IMessage,System.Boolean,Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData,System.Threading.CancellationToken)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.DoSend(RabbitMQ.Client.IModel,System.String,System.String,Steeltoe.Messaging.IMessage,System.Boolean,Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData,System.Threading.CancellationToken)
  parent: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate
  isExternal: true
  name: DoSend(IModel, String, String, IMessage, Boolean, CorrelationData, CancellationToken)
  nameWithType: RabbitTemplate.DoSend(IModel, String, String, IMessage, Boolean, CorrelationData, CancellationToken)
  fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.DoSend(RabbitMQ.Client.IModel, System.String, System.String, Steeltoe.Messaging.IMessage, System.Boolean, Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.DoSend(RabbitMQ.Client.IModel,System.String,System.String,Steeltoe.Messaging.IMessage,System.Boolean,Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData,System.Threading.CancellationToken)
    name: DoSend
    nameWithType: RabbitTemplate.DoSend
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.DoSend
  - name: (
    nameWithType: (
    fullName: (
  - uid: RabbitMQ.Client.IModel
    name: IModel
    nameWithType: IModel
    fullName: RabbitMQ.Client.IModel
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData
    name: CorrelationData
    nameWithType: CorrelationData
    fullName: Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.DoSend(RabbitMQ.Client.IModel,System.String,System.String,Steeltoe.Messaging.IMessage,System.Boolean,Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData,System.Threading.CancellationToken)
    name: DoSend
    nameWithType: RabbitTemplate.DoSend
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.DoSend
  - name: (
    nameWithType: (
    fullName: (
  - uid: RabbitMQ.Client.IModel
    name: IModel
    nameWithType: IModel
    fullName: RabbitMQ.Client.IModel
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData
    name: CorrelationData
    nameWithType: CorrelationData
    fullName: Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.DoSend(Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination,Steeltoe.Messaging.IMessage)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.DoSend(Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination,Steeltoe.Messaging.IMessage)
  parent: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate
  name: DoSend(RabbitDestination, IMessage)
  nameWithType: RabbitTemplate.DoSend(RabbitDestination, IMessage)
  fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.DoSend(Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination, Steeltoe.Messaging.IMessage)
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.DoSend(Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination,Steeltoe.Messaging.IMessage)
    name: DoSend
    nameWithType: RabbitTemplate.DoSend
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.DoSend
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination
    name: RabbitDestination
    nameWithType: RabbitDestination
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.DoSend(Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination,Steeltoe.Messaging.IMessage)
    name: DoSend
    nameWithType: RabbitTemplate.DoSend
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.DoSend
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination
    name: RabbitDestination
    nameWithType: RabbitDestination
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.SendToRabbit(RabbitMQ.Client.IModel,System.String,System.String,System.Boolean,Steeltoe.Messaging.IMessage)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.SendToRabbit(RabbitMQ.Client.IModel,System.String,System.String,System.Boolean,Steeltoe.Messaging.IMessage)
  parent: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate
  isExternal: true
  name: SendToRabbit(IModel, String, String, Boolean, IMessage)
  nameWithType: RabbitTemplate.SendToRabbit(IModel, String, String, Boolean, IMessage)
  fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.SendToRabbit(RabbitMQ.Client.IModel, System.String, System.String, System.Boolean, Steeltoe.Messaging.IMessage)
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.SendToRabbit(RabbitMQ.Client.IModel,System.String,System.String,System.Boolean,Steeltoe.Messaging.IMessage)
    name: SendToRabbit
    nameWithType: RabbitTemplate.SendToRabbit
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.SendToRabbit
  - name: (
    nameWithType: (
    fullName: (
  - uid: RabbitMQ.Client.IModel
    name: IModel
    nameWithType: IModel
    fullName: RabbitMQ.Client.IModel
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.SendToRabbit(RabbitMQ.Client.IModel,System.String,System.String,System.Boolean,Steeltoe.Messaging.IMessage)
    name: SendToRabbit
    nameWithType: RabbitTemplate.SendToRabbit
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.SendToRabbit
  - name: (
    nameWithType: (
    fullName: (
  - uid: RabbitMQ.Client.IModel
    name: IModel
    nameWithType: IModel
    fullName: RabbitMQ.Client.IModel
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.IsChannelLocallyTransacted(RabbitMQ.Client.IModel)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.IsChannelLocallyTransacted(RabbitMQ.Client.IModel)
  parent: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate
  isExternal: true
  name: IsChannelLocallyTransacted(IModel)
  nameWithType: RabbitTemplate.IsChannelLocallyTransacted(IModel)
  fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.IsChannelLocallyTransacted(RabbitMQ.Client.IModel)
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.IsChannelLocallyTransacted(RabbitMQ.Client.IModel)
    name: IsChannelLocallyTransacted
    nameWithType: RabbitTemplate.IsChannelLocallyTransacted
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.IsChannelLocallyTransacted
  - name: (
    nameWithType: (
    fullName: (
  - uid: RabbitMQ.Client.IModel
    name: IModel
    nameWithType: IModel
    fullName: RabbitMQ.Client.IModel
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.IsChannelLocallyTransacted(RabbitMQ.Client.IModel)
    name: IsChannelLocallyTransacted
    nameWithType: RabbitTemplate.IsChannelLocallyTransacted
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.IsChannelLocallyTransacted
  - name: (
    nameWithType: (
    fullName: (
  - uid: RabbitMQ.Client.IModel
    name: IModel
    nameWithType: IModel
    fullName: RabbitMQ.Client.IModel
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.CreateConnection
  commentId: M:Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.CreateConnection
  parent: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate
  name: CreateConnection()
  nameWithType: RabbitTemplate.CreateConnection()
  fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.CreateConnection()
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.CreateConnection
    name: CreateConnection
    nameWithType: RabbitTemplate.CreateConnection
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.CreateConnection
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.CreateConnection
    name: CreateConnection
    nameWithType: RabbitTemplate.CreateConnection
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.CreateConnection
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.GetTransactionalResourceHolder
  commentId: M:Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.GetTransactionalResourceHolder
  parent: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate
  name: GetTransactionalResourceHolder()
  nameWithType: RabbitTemplate.GetTransactionalResourceHolder()
  fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.GetTransactionalResourceHolder()
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.GetTransactionalResourceHolder
    name: GetTransactionalResourceHolder
    nameWithType: RabbitTemplate.GetTransactionalResourceHolder
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.GetTransactionalResourceHolder
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.GetTransactionalResourceHolder
    name: GetTransactionalResourceHolder
    nameWithType: RabbitTemplate.GetTransactionalResourceHolder
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.GetTransactionalResourceHolder
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertRabbitAccessException(System.Exception)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertRabbitAccessException(System.Exception)
  parent: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate
  isExternal: true
  name: ConvertRabbitAccessException(Exception)
  nameWithType: RabbitTemplate.ConvertRabbitAccessException(Exception)
  fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertRabbitAccessException(System.Exception)
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertRabbitAccessException(System.Exception)
    name: ConvertRabbitAccessException
    nameWithType: RabbitTemplate.ConvertRabbitAccessException
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertRabbitAccessException
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertRabbitAccessException(System.Exception)
    name: ConvertRabbitAccessException
    nameWithType: RabbitTemplate.ConvertRabbitAccessException
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertRabbitAccessException
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceiveRaw(System.String,System.String,System.Object,Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor,Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceiveRaw(System.String,System.String,System.Object,Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor,Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData)
  parent: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate
  isExternal: true
  name: ConvertSendAndReceiveRaw(String, String, Object, IMessagePostProcessor, CorrelationData)
  nameWithType: RabbitTemplate.ConvertSendAndReceiveRaw(String, String, Object, IMessagePostProcessor, CorrelationData)
  fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceiveRaw(System.String, System.String, System.Object, Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor, Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData)
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceiveRaw(System.String,System.String,System.Object,Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor,Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData)
    name: ConvertSendAndReceiveRaw
    nameWithType: RabbitTemplate.ConvertSendAndReceiveRaw
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceiveRaw
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor
    name: IMessagePostProcessor
    nameWithType: IMessagePostProcessor
    fullName: Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData
    name: CorrelationData
    nameWithType: CorrelationData
    fullName: Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceiveRaw(System.String,System.String,System.Object,Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor,Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData)
    name: ConvertSendAndReceiveRaw
    nameWithType: RabbitTemplate.ConvertSendAndReceiveRaw
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ConvertSendAndReceiveRaw
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor
    name: IMessagePostProcessor
    nameWithType: IMessagePostProcessor
    fullName: Steeltoe.Messaging.RabbitMQ.Core.IMessagePostProcessor
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData
    name: CorrelationData
    nameWithType: CorrelationData
    fullName: Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.GetDefaultExchange
  commentId: M:Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.GetDefaultExchange
  parent: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate
  name: GetDefaultExchange()
  nameWithType: RabbitTemplate.GetDefaultExchange()
  fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.GetDefaultExchange()
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.GetDefaultExchange
    name: GetDefaultExchange
    nameWithType: RabbitTemplate.GetDefaultExchange
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.GetDefaultExchange
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.GetDefaultExchange
    name: GetDefaultExchange
    nameWithType: RabbitTemplate.GetDefaultExchange
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.GetDefaultExchange
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.GetDefaultRoutingKey
  commentId: M:Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.GetDefaultRoutingKey
  parent: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate
  name: GetDefaultRoutingKey()
  nameWithType: RabbitTemplate.GetDefaultRoutingKey()
  fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.GetDefaultRoutingKey()
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.GetDefaultRoutingKey
    name: GetDefaultRoutingKey
    nameWithType: RabbitTemplate.GetDefaultRoutingKey
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.GetDefaultRoutingKey
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.GetDefaultRoutingKey
    name: GetDefaultRoutingKey
    nameWithType: RabbitTemplate.GetDefaultRoutingKey
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.GetDefaultRoutingKey
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.UseDirectReplyTo
  commentId: M:Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.UseDirectReplyTo
  parent: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate
  name: UseDirectReplyTo()
  nameWithType: RabbitTemplate.UseDirectReplyTo()
  fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.UseDirectReplyTo()
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.UseDirectReplyTo
    name: UseDirectReplyTo
    nameWithType: RabbitTemplate.UseDirectReplyTo
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.UseDirectReplyTo
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.UseDirectReplyTo
    name: UseDirectReplyTo
    nameWithType: RabbitTemplate.UseDirectReplyTo
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.UseDirectReplyTo
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ReplyTimedOut(System.String)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ReplyTimedOut(System.String)
  parent: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate
  isExternal: true
  name: ReplyTimedOut(String)
  nameWithType: RabbitTemplate.ReplyTimedOut(String)
  fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ReplyTimedOut(System.String)
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ReplyTimedOut(System.String)
    name: ReplyTimedOut
    nameWithType: RabbitTemplate.ReplyTimedOut
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ReplyTimedOut
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ReplyTimedOut(System.String)
    name: ReplyTimedOut
    nameWithType: RabbitTemplate.ReplyTimedOut
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ReplyTimedOut
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.DoStart
  commentId: M:Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.DoStart
  parent: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate
  name: DoStart()
  nameWithType: RabbitTemplate.DoStart()
  fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.DoStart()
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.DoStart
    name: DoStart
    nameWithType: RabbitTemplate.DoStart
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.DoStart
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.DoStart
    name: DoStart
    nameWithType: RabbitTemplate.DoStart
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.DoStart
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.DoStop
  commentId: M:Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.DoStop
  parent: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate
  name: DoStop()
  nameWithType: RabbitTemplate.DoStop()
  fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.DoStop()
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.DoStop
    name: DoStop
    nameWithType: RabbitTemplate.DoStop
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.DoStop
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.DoStop
    name: DoStop
    nameWithType: RabbitTemplate.DoStop
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.DoStop
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Core.AbstractMessagingTemplate{Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination}.ConvertSendAndReceiveAsync``1(System.Object,System.Threading.CancellationToken)
  commentId: M:Steeltoe.Messaging.Core.AbstractMessagingTemplate{Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination}.ConvertSendAndReceiveAsync``1(System.Object,System.Threading.CancellationToken)
  parent: Steeltoe.Messaging.Core.AbstractMessagingTemplate{Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination}
  definition: Steeltoe.Messaging.Core.AbstractMessagingTemplate`1.ConvertSendAndReceiveAsync``1(System.Object,System.Threading.CancellationToken)
  name: ConvertSendAndReceiveAsync<T>(Object, CancellationToken)
  nameWithType: AbstractMessagingTemplate<RabbitDestination>.ConvertSendAndReceiveAsync<T>(Object, CancellationToken)
  fullName: Steeltoe.Messaging.Core.AbstractMessagingTemplate<Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination>.ConvertSendAndReceiveAsync<T>(System.Object, System.Threading.CancellationToken)
  nameWithType.vb: AbstractMessagingTemplate(Of RabbitDestination).ConvertSendAndReceiveAsync(Of T)(Object, CancellationToken)
  fullName.vb: Steeltoe.Messaging.Core.AbstractMessagingTemplate(Of Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination).ConvertSendAndReceiveAsync(Of T)(System.Object, System.Threading.CancellationToken)
  name.vb: ConvertSendAndReceiveAsync(Of T)(Object, CancellationToken)
  spec.csharp:
  - uid: Steeltoe.Messaging.Core.AbstractMessagingTemplate`1.ConvertSendAndReceiveAsync``1(System.Object,System.Threading.CancellationToken)
    name: ConvertSendAndReceiveAsync<T>
    nameWithType: AbstractMessagingTemplate<RabbitDestination>.ConvertSendAndReceiveAsync<T>
    fullName: Steeltoe.Messaging.Core.AbstractMessagingTemplate<Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination>.ConvertSendAndReceiveAsync<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Core.AbstractMessagingTemplate`1.ConvertSendAndReceiveAsync``1(System.Object,System.Threading.CancellationToken)
    name: ConvertSendAndReceiveAsync(Of T)
    nameWithType: AbstractMessagingTemplate(Of RabbitDestination).ConvertSendAndReceiveAsync(Of T)
    fullName: Steeltoe.Messaging.Core.AbstractMessagingTemplate(Of Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination).ConvertSendAndReceiveAsync(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Core.AbstractMessagingTemplate{Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination}.ConvertSendAndReceiveAsync``1(Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination,System.Object,System.Threading.CancellationToken)
  commentId: M:Steeltoe.Messaging.Core.AbstractMessagingTemplate{Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination}.ConvertSendAndReceiveAsync``1(Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination,System.Object,System.Threading.CancellationToken)
  parent: Steeltoe.Messaging.Core.AbstractMessagingTemplate{Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination}
  definition: Steeltoe.Messaging.Core.AbstractMessagingTemplate`1.ConvertSendAndReceiveAsync``1(`0,System.Object,System.Threading.CancellationToken)
  name: ConvertSendAndReceiveAsync<T>(RabbitDestination, Object, CancellationToken)
  nameWithType: AbstractMessagingTemplate<RabbitDestination>.ConvertSendAndReceiveAsync<T>(RabbitDestination, Object, CancellationToken)
  fullName: Steeltoe.Messaging.Core.AbstractMessagingTemplate<Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination>.ConvertSendAndReceiveAsync<T>(Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination, System.Object, System.Threading.CancellationToken)
  nameWithType.vb: AbstractMessagingTemplate(Of RabbitDestination).ConvertSendAndReceiveAsync(Of T)(RabbitDestination, Object, CancellationToken)
  fullName.vb: Steeltoe.Messaging.Core.AbstractMessagingTemplate(Of Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination).ConvertSendAndReceiveAsync(Of T)(Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination, System.Object, System.Threading.CancellationToken)
  name.vb: ConvertSendAndReceiveAsync(Of T)(RabbitDestination, Object, CancellationToken)
  spec.csharp:
  - uid: Steeltoe.Messaging.Core.AbstractMessagingTemplate`1.ConvertSendAndReceiveAsync``1(`0,System.Object,System.Threading.CancellationToken)
    name: ConvertSendAndReceiveAsync<T>
    nameWithType: AbstractMessagingTemplate<RabbitDestination>.ConvertSendAndReceiveAsync<T>
    fullName: Steeltoe.Messaging.Core.AbstractMessagingTemplate<Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination>.ConvertSendAndReceiveAsync<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination
    name: RabbitDestination
    nameWithType: RabbitDestination
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Core.AbstractMessagingTemplate`1.ConvertSendAndReceiveAsync``1(`0,System.Object,System.Threading.CancellationToken)
    name: ConvertSendAndReceiveAsync(Of T)
    nameWithType: AbstractMessagingTemplate(Of RabbitDestination).ConvertSendAndReceiveAsync(Of T)
    fullName: Steeltoe.Messaging.Core.AbstractMessagingTemplate(Of Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination).ConvertSendAndReceiveAsync(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination
    name: RabbitDestination
    nameWithType: RabbitDestination
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Core.AbstractMessagingTemplate{Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination}.ConvertSendAndReceiveAsync``1(Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object},System.Threading.CancellationToken)
  commentId: M:Steeltoe.Messaging.Core.AbstractMessagingTemplate{Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination}.ConvertSendAndReceiveAsync``1(Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object},System.Threading.CancellationToken)
  parent: Steeltoe.Messaging.Core.AbstractMessagingTemplate{Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination}
  definition: Steeltoe.Messaging.Core.AbstractMessagingTemplate`1.ConvertSendAndReceiveAsync``1(`0,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object},System.Threading.CancellationToken)
  name: ConvertSendAndReceiveAsync<T>(RabbitDestination, Object, IDictionary<String, Object>, CancellationToken)
  nameWithType: AbstractMessagingTemplate<RabbitDestination>.ConvertSendAndReceiveAsync<T>(RabbitDestination, Object, IDictionary<String, Object>, CancellationToken)
  fullName: Steeltoe.Messaging.Core.AbstractMessagingTemplate<Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination>.ConvertSendAndReceiveAsync<T>(Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination, System.Object, System.Collections.Generic.IDictionary<System.String, System.Object>, System.Threading.CancellationToken)
  nameWithType.vb: AbstractMessagingTemplate(Of RabbitDestination).ConvertSendAndReceiveAsync(Of T)(RabbitDestination, Object, IDictionary(Of String, Object), CancellationToken)
  fullName.vb: Steeltoe.Messaging.Core.AbstractMessagingTemplate(Of Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination).ConvertSendAndReceiveAsync(Of T)(Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination, System.Object, System.Collections.Generic.IDictionary(Of System.String, System.Object), System.Threading.CancellationToken)
  name.vb: ConvertSendAndReceiveAsync(Of T)(RabbitDestination, Object, IDictionary(Of String, Object), CancellationToken)
  spec.csharp:
  - uid: Steeltoe.Messaging.Core.AbstractMessagingTemplate`1.ConvertSendAndReceiveAsync``1(`0,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object},System.Threading.CancellationToken)
    name: ConvertSendAndReceiveAsync<T>
    nameWithType: AbstractMessagingTemplate<RabbitDestination>.ConvertSendAndReceiveAsync<T>
    fullName: Steeltoe.Messaging.Core.AbstractMessagingTemplate<Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination>.ConvertSendAndReceiveAsync<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination
    name: RabbitDestination
    nameWithType: RabbitDestination
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Core.AbstractMessagingTemplate`1.ConvertSendAndReceiveAsync``1(`0,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object},System.Threading.CancellationToken)
    name: ConvertSendAndReceiveAsync(Of T)
    nameWithType: AbstractMessagingTemplate(Of RabbitDestination).ConvertSendAndReceiveAsync(Of T)
    fullName: Steeltoe.Messaging.Core.AbstractMessagingTemplate(Of Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination).ConvertSendAndReceiveAsync(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination
    name: RabbitDestination
    nameWithType: RabbitDestination
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Core.AbstractMessagingTemplate{Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination}.ConvertSendAndReceiveAsync``1(System.Object,Steeltoe.Messaging.Core.IMessagePostProcessor,System.Threading.CancellationToken)
  commentId: M:Steeltoe.Messaging.Core.AbstractMessagingTemplate{Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination}.ConvertSendAndReceiveAsync``1(System.Object,Steeltoe.Messaging.Core.IMessagePostProcessor,System.Threading.CancellationToken)
  parent: Steeltoe.Messaging.Core.AbstractMessagingTemplate{Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination}
  definition: Steeltoe.Messaging.Core.AbstractMessagingTemplate`1.ConvertSendAndReceiveAsync``1(System.Object,Steeltoe.Messaging.Core.IMessagePostProcessor,System.Threading.CancellationToken)
  name: ConvertSendAndReceiveAsync<T>(Object, IMessagePostProcessor, CancellationToken)
  nameWithType: AbstractMessagingTemplate<RabbitDestination>.ConvertSendAndReceiveAsync<T>(Object, IMessagePostProcessor, CancellationToken)
  fullName: Steeltoe.Messaging.Core.AbstractMessagingTemplate<Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination>.ConvertSendAndReceiveAsync<T>(System.Object, Steeltoe.Messaging.Core.IMessagePostProcessor, System.Threading.CancellationToken)
  nameWithType.vb: AbstractMessagingTemplate(Of RabbitDestination).ConvertSendAndReceiveAsync(Of T)(Object, IMessagePostProcessor, CancellationToken)
  fullName.vb: Steeltoe.Messaging.Core.AbstractMessagingTemplate(Of Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination).ConvertSendAndReceiveAsync(Of T)(System.Object, Steeltoe.Messaging.Core.IMessagePostProcessor, System.Threading.CancellationToken)
  name.vb: ConvertSendAndReceiveAsync(Of T)(Object, IMessagePostProcessor, CancellationToken)
  spec.csharp:
  - uid: Steeltoe.Messaging.Core.AbstractMessagingTemplate`1.ConvertSendAndReceiveAsync``1(System.Object,Steeltoe.Messaging.Core.IMessagePostProcessor,System.Threading.CancellationToken)
    name: ConvertSendAndReceiveAsync<T>
    nameWithType: AbstractMessagingTemplate<RabbitDestination>.ConvertSendAndReceiveAsync<T>
    fullName: Steeltoe.Messaging.Core.AbstractMessagingTemplate<Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination>.ConvertSendAndReceiveAsync<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.Core.IMessagePostProcessor
    name: IMessagePostProcessor
    nameWithType: IMessagePostProcessor
    fullName: Steeltoe.Messaging.Core.IMessagePostProcessor
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Core.AbstractMessagingTemplate`1.ConvertSendAndReceiveAsync``1(System.Object,Steeltoe.Messaging.Core.IMessagePostProcessor,System.Threading.CancellationToken)
    name: ConvertSendAndReceiveAsync(Of T)
    nameWithType: AbstractMessagingTemplate(Of RabbitDestination).ConvertSendAndReceiveAsync(Of T)
    fullName: Steeltoe.Messaging.Core.AbstractMessagingTemplate(Of Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination).ConvertSendAndReceiveAsync(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.Core.IMessagePostProcessor
    name: IMessagePostProcessor
    nameWithType: IMessagePostProcessor
    fullName: Steeltoe.Messaging.Core.IMessagePostProcessor
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Core.AbstractMessagingTemplate{Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination}.ConvertSendAndReceiveAsync``1(Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination,System.Object,Steeltoe.Messaging.Core.IMessagePostProcessor,System.Threading.CancellationToken)
  commentId: M:Steeltoe.Messaging.Core.AbstractMessagingTemplate{Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination}.ConvertSendAndReceiveAsync``1(Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination,System.Object,Steeltoe.Messaging.Core.IMessagePostProcessor,System.Threading.CancellationToken)
  parent: Steeltoe.Messaging.Core.AbstractMessagingTemplate{Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination}
  definition: Steeltoe.Messaging.Core.AbstractMessagingTemplate`1.ConvertSendAndReceiveAsync``1(`0,System.Object,Steeltoe.Messaging.Core.IMessagePostProcessor,System.Threading.CancellationToken)
  name: ConvertSendAndReceiveAsync<T>(RabbitDestination, Object, IMessagePostProcessor, CancellationToken)
  nameWithType: AbstractMessagingTemplate<RabbitDestination>.ConvertSendAndReceiveAsync<T>(RabbitDestination, Object, IMessagePostProcessor, CancellationToken)
  fullName: Steeltoe.Messaging.Core.AbstractMessagingTemplate<Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination>.ConvertSendAndReceiveAsync<T>(Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination, System.Object, Steeltoe.Messaging.Core.IMessagePostProcessor, System.Threading.CancellationToken)
  nameWithType.vb: AbstractMessagingTemplate(Of RabbitDestination).ConvertSendAndReceiveAsync(Of T)(RabbitDestination, Object, IMessagePostProcessor, CancellationToken)
  fullName.vb: Steeltoe.Messaging.Core.AbstractMessagingTemplate(Of Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination).ConvertSendAndReceiveAsync(Of T)(Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination, System.Object, Steeltoe.Messaging.Core.IMessagePostProcessor, System.Threading.CancellationToken)
  name.vb: ConvertSendAndReceiveAsync(Of T)(RabbitDestination, Object, IMessagePostProcessor, CancellationToken)
  spec.csharp:
  - uid: Steeltoe.Messaging.Core.AbstractMessagingTemplate`1.ConvertSendAndReceiveAsync``1(`0,System.Object,Steeltoe.Messaging.Core.IMessagePostProcessor,System.Threading.CancellationToken)
    name: ConvertSendAndReceiveAsync<T>
    nameWithType: AbstractMessagingTemplate<RabbitDestination>.ConvertSendAndReceiveAsync<T>
    fullName: Steeltoe.Messaging.Core.AbstractMessagingTemplate<Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination>.ConvertSendAndReceiveAsync<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination
    name: RabbitDestination
    nameWithType: RabbitDestination
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.Core.IMessagePostProcessor
    name: IMessagePostProcessor
    nameWithType: IMessagePostProcessor
    fullName: Steeltoe.Messaging.Core.IMessagePostProcessor
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Core.AbstractMessagingTemplate`1.ConvertSendAndReceiveAsync``1(`0,System.Object,Steeltoe.Messaging.Core.IMessagePostProcessor,System.Threading.CancellationToken)
    name: ConvertSendAndReceiveAsync(Of T)
    nameWithType: AbstractMessagingTemplate(Of RabbitDestination).ConvertSendAndReceiveAsync(Of T)
    fullName: Steeltoe.Messaging.Core.AbstractMessagingTemplate(Of Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination).ConvertSendAndReceiveAsync(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination
    name: RabbitDestination
    nameWithType: RabbitDestination
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.Core.IMessagePostProcessor
    name: IMessagePostProcessor
    nameWithType: IMessagePostProcessor
    fullName: Steeltoe.Messaging.Core.IMessagePostProcessor
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Core.AbstractMessagingTemplate{Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination}.ConvertSendAndReceiveAsync``1(Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object},Steeltoe.Messaging.Core.IMessagePostProcessor,System.Threading.CancellationToken)
  commentId: M:Steeltoe.Messaging.Core.AbstractMessagingTemplate{Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination}.ConvertSendAndReceiveAsync``1(Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object},Steeltoe.Messaging.Core.IMessagePostProcessor,System.Threading.CancellationToken)
  parent: Steeltoe.Messaging.Core.AbstractMessagingTemplate{Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination}
  definition: Steeltoe.Messaging.Core.AbstractMessagingTemplate`1.ConvertSendAndReceiveAsync``1(`0,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object},Steeltoe.Messaging.Core.IMessagePostProcessor,System.Threading.CancellationToken)
  name: ConvertSendAndReceiveAsync<T>(RabbitDestination, Object, IDictionary<String, Object>, IMessagePostProcessor, CancellationToken)
  nameWithType: AbstractMessagingTemplate<RabbitDestination>.ConvertSendAndReceiveAsync<T>(RabbitDestination, Object, IDictionary<String, Object>, IMessagePostProcessor, CancellationToken)
  fullName: Steeltoe.Messaging.Core.AbstractMessagingTemplate<Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination>.ConvertSendAndReceiveAsync<T>(Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination, System.Object, System.Collections.Generic.IDictionary<System.String, System.Object>, Steeltoe.Messaging.Core.IMessagePostProcessor, System.Threading.CancellationToken)
  nameWithType.vb: AbstractMessagingTemplate(Of RabbitDestination).ConvertSendAndReceiveAsync(Of T)(RabbitDestination, Object, IDictionary(Of String, Object), IMessagePostProcessor, CancellationToken)
  fullName.vb: Steeltoe.Messaging.Core.AbstractMessagingTemplate(Of Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination).ConvertSendAndReceiveAsync(Of T)(Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination, System.Object, System.Collections.Generic.IDictionary(Of System.String, System.Object), Steeltoe.Messaging.Core.IMessagePostProcessor, System.Threading.CancellationToken)
  name.vb: ConvertSendAndReceiveAsync(Of T)(RabbitDestination, Object, IDictionary(Of String, Object), IMessagePostProcessor, CancellationToken)
  spec.csharp:
  - uid: Steeltoe.Messaging.Core.AbstractMessagingTemplate`1.ConvertSendAndReceiveAsync``1(`0,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object},Steeltoe.Messaging.Core.IMessagePostProcessor,System.Threading.CancellationToken)
    name: ConvertSendAndReceiveAsync<T>
    nameWithType: AbstractMessagingTemplate<RabbitDestination>.ConvertSendAndReceiveAsync<T>
    fullName: Steeltoe.Messaging.Core.AbstractMessagingTemplate<Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination>.ConvertSendAndReceiveAsync<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination
    name: RabbitDestination
    nameWithType: RabbitDestination
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.Core.IMessagePostProcessor
    name: IMessagePostProcessor
    nameWithType: IMessagePostProcessor
    fullName: Steeltoe.Messaging.Core.IMessagePostProcessor
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Core.AbstractMessagingTemplate`1.ConvertSendAndReceiveAsync``1(`0,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object},Steeltoe.Messaging.Core.IMessagePostProcessor,System.Threading.CancellationToken)
    name: ConvertSendAndReceiveAsync(Of T)
    nameWithType: AbstractMessagingTemplate(Of RabbitDestination).ConvertSendAndReceiveAsync(Of T)
    fullName: Steeltoe.Messaging.Core.AbstractMessagingTemplate(Of Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination).ConvertSendAndReceiveAsync(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination
    name: RabbitDestination
    nameWithType: RabbitDestination
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.Core.IMessagePostProcessor
    name: IMessagePostProcessor
    nameWithType: IMessagePostProcessor
    fullName: Steeltoe.Messaging.Core.IMessagePostProcessor
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Core.AbstractMessagingTemplate{Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination}.SendAndReceiveAsync(Steeltoe.Messaging.IMessage,System.Threading.CancellationToken)
  commentId: M:Steeltoe.Messaging.Core.AbstractMessagingTemplate{Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination}.SendAndReceiveAsync(Steeltoe.Messaging.IMessage,System.Threading.CancellationToken)
  parent: Steeltoe.Messaging.Core.AbstractMessagingTemplate{Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination}
  definition: Steeltoe.Messaging.Core.AbstractMessagingTemplate`1.SendAndReceiveAsync(Steeltoe.Messaging.IMessage,System.Threading.CancellationToken)
  name: SendAndReceiveAsync(IMessage, CancellationToken)
  nameWithType: AbstractMessagingTemplate<RabbitDestination>.SendAndReceiveAsync(IMessage, CancellationToken)
  fullName: Steeltoe.Messaging.Core.AbstractMessagingTemplate<Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination>.SendAndReceiveAsync(Steeltoe.Messaging.IMessage, System.Threading.CancellationToken)
  nameWithType.vb: AbstractMessagingTemplate(Of RabbitDestination).SendAndReceiveAsync(IMessage, CancellationToken)
  fullName.vb: Steeltoe.Messaging.Core.AbstractMessagingTemplate(Of Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination).SendAndReceiveAsync(Steeltoe.Messaging.IMessage, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Steeltoe.Messaging.Core.AbstractMessagingTemplate`1.SendAndReceiveAsync(Steeltoe.Messaging.IMessage,System.Threading.CancellationToken)
    name: SendAndReceiveAsync
    nameWithType: AbstractMessagingTemplate<RabbitDestination>.SendAndReceiveAsync
    fullName: Steeltoe.Messaging.Core.AbstractMessagingTemplate<Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination>.SendAndReceiveAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Core.AbstractMessagingTemplate`1.SendAndReceiveAsync(Steeltoe.Messaging.IMessage,System.Threading.CancellationToken)
    name: SendAndReceiveAsync
    nameWithType: AbstractMessagingTemplate(Of RabbitDestination).SendAndReceiveAsync
    fullName: Steeltoe.Messaging.Core.AbstractMessagingTemplate(Of Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination).SendAndReceiveAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Core.AbstractMessagingTemplate{Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination}.SendAndReceiveAsync(Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination,Steeltoe.Messaging.IMessage,System.Threading.CancellationToken)
  commentId: M:Steeltoe.Messaging.Core.AbstractMessagingTemplate{Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination}.SendAndReceiveAsync(Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination,Steeltoe.Messaging.IMessage,System.Threading.CancellationToken)
  parent: Steeltoe.Messaging.Core.AbstractMessagingTemplate{Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination}
  definition: Steeltoe.Messaging.Core.AbstractMessagingTemplate`1.SendAndReceiveAsync(`0,Steeltoe.Messaging.IMessage,System.Threading.CancellationToken)
  name: SendAndReceiveAsync(RabbitDestination, IMessage, CancellationToken)
  nameWithType: AbstractMessagingTemplate<RabbitDestination>.SendAndReceiveAsync(RabbitDestination, IMessage, CancellationToken)
  fullName: Steeltoe.Messaging.Core.AbstractMessagingTemplate<Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination>.SendAndReceiveAsync(Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination, Steeltoe.Messaging.IMessage, System.Threading.CancellationToken)
  nameWithType.vb: AbstractMessagingTemplate(Of RabbitDestination).SendAndReceiveAsync(RabbitDestination, IMessage, CancellationToken)
  fullName.vb: Steeltoe.Messaging.Core.AbstractMessagingTemplate(Of Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination).SendAndReceiveAsync(Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination, Steeltoe.Messaging.IMessage, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Steeltoe.Messaging.Core.AbstractMessagingTemplate`1.SendAndReceiveAsync(`0,Steeltoe.Messaging.IMessage,System.Threading.CancellationToken)
    name: SendAndReceiveAsync
    nameWithType: AbstractMessagingTemplate<RabbitDestination>.SendAndReceiveAsync
    fullName: Steeltoe.Messaging.Core.AbstractMessagingTemplate<Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination>.SendAndReceiveAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination
    name: RabbitDestination
    nameWithType: RabbitDestination
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Core.AbstractMessagingTemplate`1.SendAndReceiveAsync(`0,Steeltoe.Messaging.IMessage,System.Threading.CancellationToken)
    name: SendAndReceiveAsync
    nameWithType: AbstractMessagingTemplate(Of RabbitDestination).SendAndReceiveAsync
    fullName: Steeltoe.Messaging.Core.AbstractMessagingTemplate(Of Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination).SendAndReceiveAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination
    name: RabbitDestination
    nameWithType: RabbitDestination
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Core.AbstractMessagingTemplate{Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination}.ConvertSendAndReceive``1(System.Object)
  commentId: M:Steeltoe.Messaging.Core.AbstractMessagingTemplate{Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination}.ConvertSendAndReceive``1(System.Object)
  parent: Steeltoe.Messaging.Core.AbstractMessagingTemplate{Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination}
  definition: Steeltoe.Messaging.Core.AbstractMessagingTemplate`1.ConvertSendAndReceive``1(System.Object)
  name: ConvertSendAndReceive<T>(Object)
  nameWithType: AbstractMessagingTemplate<RabbitDestination>.ConvertSendAndReceive<T>(Object)
  fullName: Steeltoe.Messaging.Core.AbstractMessagingTemplate<Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination>.ConvertSendAndReceive<T>(System.Object)
  nameWithType.vb: AbstractMessagingTemplate(Of RabbitDestination).ConvertSendAndReceive(Of T)(Object)
  fullName.vb: Steeltoe.Messaging.Core.AbstractMessagingTemplate(Of Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination).ConvertSendAndReceive(Of T)(System.Object)
  name.vb: ConvertSendAndReceive(Of T)(Object)
  spec.csharp:
  - uid: Steeltoe.Messaging.Core.AbstractMessagingTemplate`1.ConvertSendAndReceive``1(System.Object)
    name: ConvertSendAndReceive<T>
    nameWithType: AbstractMessagingTemplate<RabbitDestination>.ConvertSendAndReceive<T>
    fullName: Steeltoe.Messaging.Core.AbstractMessagingTemplate<Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination>.ConvertSendAndReceive<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Core.AbstractMessagingTemplate`1.ConvertSendAndReceive``1(System.Object)
    name: ConvertSendAndReceive(Of T)
    nameWithType: AbstractMessagingTemplate(Of RabbitDestination).ConvertSendAndReceive(Of T)
    fullName: Steeltoe.Messaging.Core.AbstractMessagingTemplate(Of Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination).ConvertSendAndReceive(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Core.AbstractMessagingTemplate{Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination}.ConvertSendAndReceive``1(Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination,System.Object)
  commentId: M:Steeltoe.Messaging.Core.AbstractMessagingTemplate{Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination}.ConvertSendAndReceive``1(Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination,System.Object)
  parent: Steeltoe.Messaging.Core.AbstractMessagingTemplate{Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination}
  definition: Steeltoe.Messaging.Core.AbstractMessagingTemplate`1.ConvertSendAndReceive``1(`0,System.Object)
  name: ConvertSendAndReceive<T>(RabbitDestination, Object)
  nameWithType: AbstractMessagingTemplate<RabbitDestination>.ConvertSendAndReceive<T>(RabbitDestination, Object)
  fullName: Steeltoe.Messaging.Core.AbstractMessagingTemplate<Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination>.ConvertSendAndReceive<T>(Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination, System.Object)
  nameWithType.vb: AbstractMessagingTemplate(Of RabbitDestination).ConvertSendAndReceive(Of T)(RabbitDestination, Object)
  fullName.vb: Steeltoe.Messaging.Core.AbstractMessagingTemplate(Of Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination).ConvertSendAndReceive(Of T)(Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination, System.Object)
  name.vb: ConvertSendAndReceive(Of T)(RabbitDestination, Object)
  spec.csharp:
  - uid: Steeltoe.Messaging.Core.AbstractMessagingTemplate`1.ConvertSendAndReceive``1(`0,System.Object)
    name: ConvertSendAndReceive<T>
    nameWithType: AbstractMessagingTemplate<RabbitDestination>.ConvertSendAndReceive<T>
    fullName: Steeltoe.Messaging.Core.AbstractMessagingTemplate<Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination>.ConvertSendAndReceive<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination
    name: RabbitDestination
    nameWithType: RabbitDestination
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Core.AbstractMessagingTemplate`1.ConvertSendAndReceive``1(`0,System.Object)
    name: ConvertSendAndReceive(Of T)
    nameWithType: AbstractMessagingTemplate(Of RabbitDestination).ConvertSendAndReceive(Of T)
    fullName: Steeltoe.Messaging.Core.AbstractMessagingTemplate(Of Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination).ConvertSendAndReceive(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination
    name: RabbitDestination
    nameWithType: RabbitDestination
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Core.AbstractMessagingTemplate{Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination}.ConvertSendAndReceive``1(Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object})
  commentId: M:Steeltoe.Messaging.Core.AbstractMessagingTemplate{Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination}.ConvertSendAndReceive``1(Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object})
  parent: Steeltoe.Messaging.Core.AbstractMessagingTemplate{Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination}
  definition: Steeltoe.Messaging.Core.AbstractMessagingTemplate`1.ConvertSendAndReceive``1(`0,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object})
  name: ConvertSendAndReceive<T>(RabbitDestination, Object, IDictionary<String, Object>)
  nameWithType: AbstractMessagingTemplate<RabbitDestination>.ConvertSendAndReceive<T>(RabbitDestination, Object, IDictionary<String, Object>)
  fullName: Steeltoe.Messaging.Core.AbstractMessagingTemplate<Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination>.ConvertSendAndReceive<T>(Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination, System.Object, System.Collections.Generic.IDictionary<System.String, System.Object>)
  nameWithType.vb: AbstractMessagingTemplate(Of RabbitDestination).ConvertSendAndReceive(Of T)(RabbitDestination, Object, IDictionary(Of String, Object))
  fullName.vb: Steeltoe.Messaging.Core.AbstractMessagingTemplate(Of Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination).ConvertSendAndReceive(Of T)(Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination, System.Object, System.Collections.Generic.IDictionary(Of System.String, System.Object))
  name.vb: ConvertSendAndReceive(Of T)(RabbitDestination, Object, IDictionary(Of String, Object))
  spec.csharp:
  - uid: Steeltoe.Messaging.Core.AbstractMessagingTemplate`1.ConvertSendAndReceive``1(`0,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object})
    name: ConvertSendAndReceive<T>
    nameWithType: AbstractMessagingTemplate<RabbitDestination>.ConvertSendAndReceive<T>
    fullName: Steeltoe.Messaging.Core.AbstractMessagingTemplate<Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination>.ConvertSendAndReceive<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination
    name: RabbitDestination
    nameWithType: RabbitDestination
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Core.AbstractMessagingTemplate`1.ConvertSendAndReceive``1(`0,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object})
    name: ConvertSendAndReceive(Of T)
    nameWithType: AbstractMessagingTemplate(Of RabbitDestination).ConvertSendAndReceive(Of T)
    fullName: Steeltoe.Messaging.Core.AbstractMessagingTemplate(Of Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination).ConvertSendAndReceive(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination
    name: RabbitDestination
    nameWithType: RabbitDestination
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Core.AbstractMessagingTemplate{Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination}.ConvertSendAndReceive``1(System.Object,Steeltoe.Messaging.Core.IMessagePostProcessor)
  commentId: M:Steeltoe.Messaging.Core.AbstractMessagingTemplate{Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination}.ConvertSendAndReceive``1(System.Object,Steeltoe.Messaging.Core.IMessagePostProcessor)
  parent: Steeltoe.Messaging.Core.AbstractMessagingTemplate{Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination}
  definition: Steeltoe.Messaging.Core.AbstractMessagingTemplate`1.ConvertSendAndReceive``1(System.Object,Steeltoe.Messaging.Core.IMessagePostProcessor)
  name: ConvertSendAndReceive<T>(Object, IMessagePostProcessor)
  nameWithType: AbstractMessagingTemplate<RabbitDestination>.ConvertSendAndReceive<T>(Object, IMessagePostProcessor)
  fullName: Steeltoe.Messaging.Core.AbstractMessagingTemplate<Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination>.ConvertSendAndReceive<T>(System.Object, Steeltoe.Messaging.Core.IMessagePostProcessor)
  nameWithType.vb: AbstractMessagingTemplate(Of RabbitDestination).ConvertSendAndReceive(Of T)(Object, IMessagePostProcessor)
  fullName.vb: Steeltoe.Messaging.Core.AbstractMessagingTemplate(Of Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination).ConvertSendAndReceive(Of T)(System.Object, Steeltoe.Messaging.Core.IMessagePostProcessor)
  name.vb: ConvertSendAndReceive(Of T)(Object, IMessagePostProcessor)
  spec.csharp:
  - uid: Steeltoe.Messaging.Core.AbstractMessagingTemplate`1.ConvertSendAndReceive``1(System.Object,Steeltoe.Messaging.Core.IMessagePostProcessor)
    name: ConvertSendAndReceive<T>
    nameWithType: AbstractMessagingTemplate<RabbitDestination>.ConvertSendAndReceive<T>
    fullName: Steeltoe.Messaging.Core.AbstractMessagingTemplate<Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination>.ConvertSendAndReceive<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.Core.IMessagePostProcessor
    name: IMessagePostProcessor
    nameWithType: IMessagePostProcessor
    fullName: Steeltoe.Messaging.Core.IMessagePostProcessor
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Core.AbstractMessagingTemplate`1.ConvertSendAndReceive``1(System.Object,Steeltoe.Messaging.Core.IMessagePostProcessor)
    name: ConvertSendAndReceive(Of T)
    nameWithType: AbstractMessagingTemplate(Of RabbitDestination).ConvertSendAndReceive(Of T)
    fullName: Steeltoe.Messaging.Core.AbstractMessagingTemplate(Of Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination).ConvertSendAndReceive(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.Core.IMessagePostProcessor
    name: IMessagePostProcessor
    nameWithType: IMessagePostProcessor
    fullName: Steeltoe.Messaging.Core.IMessagePostProcessor
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Core.AbstractMessagingTemplate{Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination}.ConvertSendAndReceive``1(Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination,System.Object,Steeltoe.Messaging.Core.IMessagePostProcessor)
  commentId: M:Steeltoe.Messaging.Core.AbstractMessagingTemplate{Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination}.ConvertSendAndReceive``1(Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination,System.Object,Steeltoe.Messaging.Core.IMessagePostProcessor)
  parent: Steeltoe.Messaging.Core.AbstractMessagingTemplate{Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination}
  definition: Steeltoe.Messaging.Core.AbstractMessagingTemplate`1.ConvertSendAndReceive``1(`0,System.Object,Steeltoe.Messaging.Core.IMessagePostProcessor)
  name: ConvertSendAndReceive<T>(RabbitDestination, Object, IMessagePostProcessor)
  nameWithType: AbstractMessagingTemplate<RabbitDestination>.ConvertSendAndReceive<T>(RabbitDestination, Object, IMessagePostProcessor)
  fullName: Steeltoe.Messaging.Core.AbstractMessagingTemplate<Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination>.ConvertSendAndReceive<T>(Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination, System.Object, Steeltoe.Messaging.Core.IMessagePostProcessor)
  nameWithType.vb: AbstractMessagingTemplate(Of RabbitDestination).ConvertSendAndReceive(Of T)(RabbitDestination, Object, IMessagePostProcessor)
  fullName.vb: Steeltoe.Messaging.Core.AbstractMessagingTemplate(Of Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination).ConvertSendAndReceive(Of T)(Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination, System.Object, Steeltoe.Messaging.Core.IMessagePostProcessor)
  name.vb: ConvertSendAndReceive(Of T)(RabbitDestination, Object, IMessagePostProcessor)
  spec.csharp:
  - uid: Steeltoe.Messaging.Core.AbstractMessagingTemplate`1.ConvertSendAndReceive``1(`0,System.Object,Steeltoe.Messaging.Core.IMessagePostProcessor)
    name: ConvertSendAndReceive<T>
    nameWithType: AbstractMessagingTemplate<RabbitDestination>.ConvertSendAndReceive<T>
    fullName: Steeltoe.Messaging.Core.AbstractMessagingTemplate<Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination>.ConvertSendAndReceive<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination
    name: RabbitDestination
    nameWithType: RabbitDestination
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.Core.IMessagePostProcessor
    name: IMessagePostProcessor
    nameWithType: IMessagePostProcessor
    fullName: Steeltoe.Messaging.Core.IMessagePostProcessor
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Core.AbstractMessagingTemplate`1.ConvertSendAndReceive``1(`0,System.Object,Steeltoe.Messaging.Core.IMessagePostProcessor)
    name: ConvertSendAndReceive(Of T)
    nameWithType: AbstractMessagingTemplate(Of RabbitDestination).ConvertSendAndReceive(Of T)
    fullName: Steeltoe.Messaging.Core.AbstractMessagingTemplate(Of Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination).ConvertSendAndReceive(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination
    name: RabbitDestination
    nameWithType: RabbitDestination
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.Core.IMessagePostProcessor
    name: IMessagePostProcessor
    nameWithType: IMessagePostProcessor
    fullName: Steeltoe.Messaging.Core.IMessagePostProcessor
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Core.AbstractMessagingTemplate{Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination}.ConvertSendAndReceive``1(Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object},Steeltoe.Messaging.Core.IMessagePostProcessor)
  commentId: M:Steeltoe.Messaging.Core.AbstractMessagingTemplate{Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination}.ConvertSendAndReceive``1(Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object},Steeltoe.Messaging.Core.IMessagePostProcessor)
  parent: Steeltoe.Messaging.Core.AbstractMessagingTemplate{Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination}
  definition: Steeltoe.Messaging.Core.AbstractMessagingTemplate`1.ConvertSendAndReceive``1(`0,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object},Steeltoe.Messaging.Core.IMessagePostProcessor)
  name: ConvertSendAndReceive<T>(RabbitDestination, Object, IDictionary<String, Object>, IMessagePostProcessor)
  nameWithType: AbstractMessagingTemplate<RabbitDestination>.ConvertSendAndReceive<T>(RabbitDestination, Object, IDictionary<String, Object>, IMessagePostProcessor)
  fullName: Steeltoe.Messaging.Core.AbstractMessagingTemplate<Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination>.ConvertSendAndReceive<T>(Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination, System.Object, System.Collections.Generic.IDictionary<System.String, System.Object>, Steeltoe.Messaging.Core.IMessagePostProcessor)
  nameWithType.vb: AbstractMessagingTemplate(Of RabbitDestination).ConvertSendAndReceive(Of T)(RabbitDestination, Object, IDictionary(Of String, Object), IMessagePostProcessor)
  fullName.vb: Steeltoe.Messaging.Core.AbstractMessagingTemplate(Of Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination).ConvertSendAndReceive(Of T)(Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination, System.Object, System.Collections.Generic.IDictionary(Of System.String, System.Object), Steeltoe.Messaging.Core.IMessagePostProcessor)
  name.vb: ConvertSendAndReceive(Of T)(RabbitDestination, Object, IDictionary(Of String, Object), IMessagePostProcessor)
  spec.csharp:
  - uid: Steeltoe.Messaging.Core.AbstractMessagingTemplate`1.ConvertSendAndReceive``1(`0,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object},Steeltoe.Messaging.Core.IMessagePostProcessor)
    name: ConvertSendAndReceive<T>
    nameWithType: AbstractMessagingTemplate<RabbitDestination>.ConvertSendAndReceive<T>
    fullName: Steeltoe.Messaging.Core.AbstractMessagingTemplate<Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination>.ConvertSendAndReceive<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination
    name: RabbitDestination
    nameWithType: RabbitDestination
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.Core.IMessagePostProcessor
    name: IMessagePostProcessor
    nameWithType: IMessagePostProcessor
    fullName: Steeltoe.Messaging.Core.IMessagePostProcessor
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Core.AbstractMessagingTemplate`1.ConvertSendAndReceive``1(`0,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object},Steeltoe.Messaging.Core.IMessagePostProcessor)
    name: ConvertSendAndReceive(Of T)
    nameWithType: AbstractMessagingTemplate(Of RabbitDestination).ConvertSendAndReceive(Of T)
    fullName: Steeltoe.Messaging.Core.AbstractMessagingTemplate(Of Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination).ConvertSendAndReceive(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination
    name: RabbitDestination
    nameWithType: RabbitDestination
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.Core.IMessagePostProcessor
    name: IMessagePostProcessor
    nameWithType: IMessagePostProcessor
    fullName: Steeltoe.Messaging.Core.IMessagePostProcessor
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Core.AbstractMessagingTemplate{Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination}.SendAndReceive(Steeltoe.Messaging.IMessage)
  commentId: M:Steeltoe.Messaging.Core.AbstractMessagingTemplate{Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination}.SendAndReceive(Steeltoe.Messaging.IMessage)
  parent: Steeltoe.Messaging.Core.AbstractMessagingTemplate{Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination}
  definition: Steeltoe.Messaging.Core.AbstractMessagingTemplate`1.SendAndReceive(Steeltoe.Messaging.IMessage)
  name: SendAndReceive(IMessage)
  nameWithType: AbstractMessagingTemplate<RabbitDestination>.SendAndReceive(IMessage)
  fullName: Steeltoe.Messaging.Core.AbstractMessagingTemplate<Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination>.SendAndReceive(Steeltoe.Messaging.IMessage)
  nameWithType.vb: AbstractMessagingTemplate(Of RabbitDestination).SendAndReceive(IMessage)
  fullName.vb: Steeltoe.Messaging.Core.AbstractMessagingTemplate(Of Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination).SendAndReceive(Steeltoe.Messaging.IMessage)
  spec.csharp:
  - uid: Steeltoe.Messaging.Core.AbstractMessagingTemplate`1.SendAndReceive(Steeltoe.Messaging.IMessage)
    name: SendAndReceive
    nameWithType: AbstractMessagingTemplate<RabbitDestination>.SendAndReceive
    fullName: Steeltoe.Messaging.Core.AbstractMessagingTemplate<Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination>.SendAndReceive
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Core.AbstractMessagingTemplate`1.SendAndReceive(Steeltoe.Messaging.IMessage)
    name: SendAndReceive
    nameWithType: AbstractMessagingTemplate(Of RabbitDestination).SendAndReceive
    fullName: Steeltoe.Messaging.Core.AbstractMessagingTemplate(Of Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination).SendAndReceive
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Core.AbstractMessagingTemplate{Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination}.SendAndReceive(Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination,Steeltoe.Messaging.IMessage)
  commentId: M:Steeltoe.Messaging.Core.AbstractMessagingTemplate{Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination}.SendAndReceive(Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination,Steeltoe.Messaging.IMessage)
  parent: Steeltoe.Messaging.Core.AbstractMessagingTemplate{Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination}
  definition: Steeltoe.Messaging.Core.AbstractMessagingTemplate`1.SendAndReceive(`0,Steeltoe.Messaging.IMessage)
  name: SendAndReceive(RabbitDestination, IMessage)
  nameWithType: AbstractMessagingTemplate<RabbitDestination>.SendAndReceive(RabbitDestination, IMessage)
  fullName: Steeltoe.Messaging.Core.AbstractMessagingTemplate<Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination>.SendAndReceive(Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination, Steeltoe.Messaging.IMessage)
  nameWithType.vb: AbstractMessagingTemplate(Of RabbitDestination).SendAndReceive(RabbitDestination, IMessage)
  fullName.vb: Steeltoe.Messaging.Core.AbstractMessagingTemplate(Of Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination).SendAndReceive(Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination, Steeltoe.Messaging.IMessage)
  spec.csharp:
  - uid: Steeltoe.Messaging.Core.AbstractMessagingTemplate`1.SendAndReceive(`0,Steeltoe.Messaging.IMessage)
    name: SendAndReceive
    nameWithType: AbstractMessagingTemplate<RabbitDestination>.SendAndReceive
    fullName: Steeltoe.Messaging.Core.AbstractMessagingTemplate<Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination>.SendAndReceive
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination
    name: RabbitDestination
    nameWithType: RabbitDestination
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Core.AbstractMessagingTemplate`1.SendAndReceive(`0,Steeltoe.Messaging.IMessage)
    name: SendAndReceive
    nameWithType: AbstractMessagingTemplate(Of RabbitDestination).SendAndReceive
    fullName: Steeltoe.Messaging.Core.AbstractMessagingTemplate(Of Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination).SendAndReceive
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination
    name: RabbitDestination
    nameWithType: RabbitDestination
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate{Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination}.DefaultReceiveDestination
  commentId: P:Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate{Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination}.DefaultReceiveDestination
  parent: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate{Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination}
  definition: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate`1.DefaultReceiveDestination
  name: DefaultReceiveDestination
  nameWithType: AbstractMessageReceivingTemplate<RabbitDestination>.DefaultReceiveDestination
  fullName: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate<Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination>.DefaultReceiveDestination
  nameWithType.vb: AbstractMessageReceivingTemplate(Of RabbitDestination).DefaultReceiveDestination
  fullName.vb: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate(Of Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination).DefaultReceiveDestination
- uid: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate{Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination}.ThrowReceivedExceptions
  commentId: P:Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate{Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination}.ThrowReceivedExceptions
  parent: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate{Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination}
  definition: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate`1.ThrowReceivedExceptions
  name: ThrowReceivedExceptions
  nameWithType: AbstractMessageReceivingTemplate<RabbitDestination>.ThrowReceivedExceptions
  fullName: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate<Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination>.ThrowReceivedExceptions
  nameWithType.vb: AbstractMessageReceivingTemplate(Of RabbitDestination).ThrowReceivedExceptions
  fullName.vb: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate(Of Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination).ThrowReceivedExceptions
- uid: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate{Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination}.ReceiveAsync(System.Threading.CancellationToken)
  commentId: M:Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate{Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination}.ReceiveAsync(System.Threading.CancellationToken)
  parent: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate{Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination}
  definition: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate`1.ReceiveAsync(System.Threading.CancellationToken)
  name: ReceiveAsync(CancellationToken)
  nameWithType: AbstractMessageReceivingTemplate<RabbitDestination>.ReceiveAsync(CancellationToken)
  fullName: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate<Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination>.ReceiveAsync(System.Threading.CancellationToken)
  nameWithType.vb: AbstractMessageReceivingTemplate(Of RabbitDestination).ReceiveAsync(CancellationToken)
  fullName.vb: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate(Of Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination).ReceiveAsync(System.Threading.CancellationToken)
  spec.csharp:
  - uid: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate`1.ReceiveAsync(System.Threading.CancellationToken)
    name: ReceiveAsync
    nameWithType: AbstractMessageReceivingTemplate<RabbitDestination>.ReceiveAsync
    fullName: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate<Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination>.ReceiveAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate`1.ReceiveAsync(System.Threading.CancellationToken)
    name: ReceiveAsync
    nameWithType: AbstractMessageReceivingTemplate(Of RabbitDestination).ReceiveAsync
    fullName: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate(Of Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination).ReceiveAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate{Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination}.ReceiveAsync(Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination,System.Threading.CancellationToken)
  commentId: M:Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate{Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination}.ReceiveAsync(Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination,System.Threading.CancellationToken)
  parent: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate{Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination}
  definition: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate`1.ReceiveAsync(`0,System.Threading.CancellationToken)
  name: ReceiveAsync(RabbitDestination, CancellationToken)
  nameWithType: AbstractMessageReceivingTemplate<RabbitDestination>.ReceiveAsync(RabbitDestination, CancellationToken)
  fullName: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate<Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination>.ReceiveAsync(Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination, System.Threading.CancellationToken)
  nameWithType.vb: AbstractMessageReceivingTemplate(Of RabbitDestination).ReceiveAsync(RabbitDestination, CancellationToken)
  fullName.vb: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate(Of Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination).ReceiveAsync(Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate`1.ReceiveAsync(`0,System.Threading.CancellationToken)
    name: ReceiveAsync
    nameWithType: AbstractMessageReceivingTemplate<RabbitDestination>.ReceiveAsync
    fullName: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate<Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination>.ReceiveAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination
    name: RabbitDestination
    nameWithType: RabbitDestination
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate`1.ReceiveAsync(`0,System.Threading.CancellationToken)
    name: ReceiveAsync
    nameWithType: AbstractMessageReceivingTemplate(Of RabbitDestination).ReceiveAsync
    fullName: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate(Of Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination).ReceiveAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination
    name: RabbitDestination
    nameWithType: RabbitDestination
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate{Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination}.ReceiveAndConvertAsync``1(System.Threading.CancellationToken)
  commentId: M:Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate{Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination}.ReceiveAndConvertAsync``1(System.Threading.CancellationToken)
  parent: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate{Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination}
  definition: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate`1.ReceiveAndConvertAsync``1(System.Threading.CancellationToken)
  name: ReceiveAndConvertAsync<T>(CancellationToken)
  nameWithType: AbstractMessageReceivingTemplate<RabbitDestination>.ReceiveAndConvertAsync<T>(CancellationToken)
  fullName: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate<Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination>.ReceiveAndConvertAsync<T>(System.Threading.CancellationToken)
  nameWithType.vb: AbstractMessageReceivingTemplate(Of RabbitDestination).ReceiveAndConvertAsync(Of T)(CancellationToken)
  fullName.vb: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate(Of Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination).ReceiveAndConvertAsync(Of T)(System.Threading.CancellationToken)
  name.vb: ReceiveAndConvertAsync(Of T)(CancellationToken)
  spec.csharp:
  - uid: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate`1.ReceiveAndConvertAsync``1(System.Threading.CancellationToken)
    name: ReceiveAndConvertAsync<T>
    nameWithType: AbstractMessageReceivingTemplate<RabbitDestination>.ReceiveAndConvertAsync<T>
    fullName: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate<Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination>.ReceiveAndConvertAsync<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate`1.ReceiveAndConvertAsync``1(System.Threading.CancellationToken)
    name: ReceiveAndConvertAsync(Of T)
    nameWithType: AbstractMessageReceivingTemplate(Of RabbitDestination).ReceiveAndConvertAsync(Of T)
    fullName: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate(Of Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination).ReceiveAndConvertAsync(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate{Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination}.ReceiveAndConvertAsync``1(Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination,System.Threading.CancellationToken)
  commentId: M:Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate{Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination}.ReceiveAndConvertAsync``1(Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination,System.Threading.CancellationToken)
  parent: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate{Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination}
  definition: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate`1.ReceiveAndConvertAsync``1(`0,System.Threading.CancellationToken)
  name: ReceiveAndConvertAsync<T>(RabbitDestination, CancellationToken)
  nameWithType: AbstractMessageReceivingTemplate<RabbitDestination>.ReceiveAndConvertAsync<T>(RabbitDestination, CancellationToken)
  fullName: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate<Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination>.ReceiveAndConvertAsync<T>(Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination, System.Threading.CancellationToken)
  nameWithType.vb: AbstractMessageReceivingTemplate(Of RabbitDestination).ReceiveAndConvertAsync(Of T)(RabbitDestination, CancellationToken)
  fullName.vb: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate(Of Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination).ReceiveAndConvertAsync(Of T)(Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination, System.Threading.CancellationToken)
  name.vb: ReceiveAndConvertAsync(Of T)(RabbitDestination, CancellationToken)
  spec.csharp:
  - uid: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate`1.ReceiveAndConvertAsync``1(`0,System.Threading.CancellationToken)
    name: ReceiveAndConvertAsync<T>
    nameWithType: AbstractMessageReceivingTemplate<RabbitDestination>.ReceiveAndConvertAsync<T>
    fullName: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate<Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination>.ReceiveAndConvertAsync<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination
    name: RabbitDestination
    nameWithType: RabbitDestination
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate`1.ReceiveAndConvertAsync``1(`0,System.Threading.CancellationToken)
    name: ReceiveAndConvertAsync(Of T)
    nameWithType: AbstractMessageReceivingTemplate(Of RabbitDestination).ReceiveAndConvertAsync(Of T)
    fullName: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate(Of Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination).ReceiveAndConvertAsync(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination
    name: RabbitDestination
    nameWithType: RabbitDestination
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate{Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination}.Receive
  commentId: M:Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate{Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination}.Receive
  parent: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate{Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination}
  definition: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate`1.Receive
  name: Receive()
  nameWithType: AbstractMessageReceivingTemplate<RabbitDestination>.Receive()
  fullName: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate<Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination>.Receive()
  nameWithType.vb: AbstractMessageReceivingTemplate(Of RabbitDestination).Receive()
  fullName.vb: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate(Of Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination).Receive()
  spec.csharp:
  - uid: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate`1.Receive
    name: Receive
    nameWithType: AbstractMessageReceivingTemplate<RabbitDestination>.Receive
    fullName: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate<Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination>.Receive
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate`1.Receive
    name: Receive
    nameWithType: AbstractMessageReceivingTemplate(Of RabbitDestination).Receive
    fullName: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate(Of Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination).Receive
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate{Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination}.Receive(Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination)
  commentId: M:Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate{Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination}.Receive(Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination)
  parent: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate{Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination}
  definition: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate`1.Receive(`0)
  name: Receive(RabbitDestination)
  nameWithType: AbstractMessageReceivingTemplate<RabbitDestination>.Receive(RabbitDestination)
  fullName: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate<Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination>.Receive(Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination)
  nameWithType.vb: AbstractMessageReceivingTemplate(Of RabbitDestination).Receive(RabbitDestination)
  fullName.vb: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate(Of Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination).Receive(Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination)
  spec.csharp:
  - uid: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate`1.Receive(`0)
    name: Receive
    nameWithType: AbstractMessageReceivingTemplate<RabbitDestination>.Receive
    fullName: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate<Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination>.Receive
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination
    name: RabbitDestination
    nameWithType: RabbitDestination
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate`1.Receive(`0)
    name: Receive
    nameWithType: AbstractMessageReceivingTemplate(Of RabbitDestination).Receive
    fullName: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate(Of Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination).Receive
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination
    name: RabbitDestination
    nameWithType: RabbitDestination
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate{Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination}.ReceiveAndConvert``1
  commentId: M:Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate{Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination}.ReceiveAndConvert``1
  parent: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate{Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination}
  definition: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate`1.ReceiveAndConvert``1
  name: ReceiveAndConvert<T>()
  nameWithType: AbstractMessageReceivingTemplate<RabbitDestination>.ReceiveAndConvert<T>()
  fullName: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate<Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination>.ReceiveAndConvert<T>()
  nameWithType.vb: AbstractMessageReceivingTemplate(Of RabbitDestination).ReceiveAndConvert(Of T)()
  fullName.vb: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate(Of Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination).ReceiveAndConvert(Of T)()
  name.vb: ReceiveAndConvert(Of T)()
  spec.csharp:
  - uid: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate`1.ReceiveAndConvert``1
    name: ReceiveAndConvert<T>
    nameWithType: AbstractMessageReceivingTemplate<RabbitDestination>.ReceiveAndConvert<T>
    fullName: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate<Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination>.ReceiveAndConvert<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate`1.ReceiveAndConvert``1
    name: ReceiveAndConvert(Of T)
    nameWithType: AbstractMessageReceivingTemplate(Of RabbitDestination).ReceiveAndConvert(Of T)
    fullName: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate(Of Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination).ReceiveAndConvert(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate{Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination}.ReceiveAndConvert``1(Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination)
  commentId: M:Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate{Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination}.ReceiveAndConvert``1(Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination)
  parent: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate{Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination}
  definition: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate`1.ReceiveAndConvert``1(`0)
  name: ReceiveAndConvert<T>(RabbitDestination)
  nameWithType: AbstractMessageReceivingTemplate<RabbitDestination>.ReceiveAndConvert<T>(RabbitDestination)
  fullName: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate<Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination>.ReceiveAndConvert<T>(Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination)
  nameWithType.vb: AbstractMessageReceivingTemplate(Of RabbitDestination).ReceiveAndConvert(Of T)(RabbitDestination)
  fullName.vb: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate(Of Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination).ReceiveAndConvert(Of T)(Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination)
  name.vb: ReceiveAndConvert(Of T)(RabbitDestination)
  spec.csharp:
  - uid: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate`1.ReceiveAndConvert``1(`0)
    name: ReceiveAndConvert<T>
    nameWithType: AbstractMessageReceivingTemplate<RabbitDestination>.ReceiveAndConvert<T>
    fullName: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate<Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination>.ReceiveAndConvert<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination
    name: RabbitDestination
    nameWithType: RabbitDestination
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate`1.ReceiveAndConvert``1(`0)
    name: ReceiveAndConvert(Of T)
    nameWithType: AbstractMessageReceivingTemplate(Of RabbitDestination).ReceiveAndConvert(Of T)
    fullName: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate(Of Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination).ReceiveAndConvert(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination
    name: RabbitDestination
    nameWithType: RabbitDestination
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate{Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination}.RequiredDefaultReceiveDestination
  commentId: P:Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate{Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination}.RequiredDefaultReceiveDestination
  parent: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate{Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination}
  definition: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate`1.RequiredDefaultReceiveDestination
  name: RequiredDefaultReceiveDestination
  nameWithType: AbstractMessageReceivingTemplate<RabbitDestination>.RequiredDefaultReceiveDestination
  fullName: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate<Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination>.RequiredDefaultReceiveDestination
  nameWithType.vb: AbstractMessageReceivingTemplate(Of RabbitDestination).RequiredDefaultReceiveDestination
  fullName.vb: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate(Of Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination).RequiredDefaultReceiveDestination
- uid: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate{Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination}.DoConvert``1(Steeltoe.Messaging.IMessage)
  commentId: M:Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate{Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination}.DoConvert``1(Steeltoe.Messaging.IMessage)
  parent: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate{Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination}
  definition: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate`1.DoConvert``1(Steeltoe.Messaging.IMessage)
  name: DoConvert<T>(IMessage)
  nameWithType: AbstractMessageReceivingTemplate<RabbitDestination>.DoConvert<T>(IMessage)
  fullName: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate<Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination>.DoConvert<T>(Steeltoe.Messaging.IMessage)
  nameWithType.vb: AbstractMessageReceivingTemplate(Of RabbitDestination).DoConvert(Of T)(IMessage)
  fullName.vb: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate(Of Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination).DoConvert(Of T)(Steeltoe.Messaging.IMessage)
  name.vb: DoConvert(Of T)(IMessage)
  spec.csharp:
  - uid: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate`1.DoConvert``1(Steeltoe.Messaging.IMessage)
    name: DoConvert<T>
    nameWithType: AbstractMessageReceivingTemplate<RabbitDestination>.DoConvert<T>
    fullName: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate<Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination>.DoConvert<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate`1.DoConvert``1(Steeltoe.Messaging.IMessage)
    name: DoConvert(Of T)
    nameWithType: AbstractMessageReceivingTemplate(Of RabbitDestination).DoConvert(Of T)
    fullName: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate(Of Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination).DoConvert(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate{Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination}.CONVERSION_HINT_HEADER
  commentId: F:Steeltoe.Messaging.Core.AbstractMessageSendingTemplate{Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination}.CONVERSION_HINT_HEADER
  parent: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate{Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination}
  definition: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.CONVERSION_HINT_HEADER
  name: CONVERSION_HINT_HEADER
  nameWithType: AbstractMessageSendingTemplate<RabbitDestination>.CONVERSION_HINT_HEADER
  fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate<Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination>.CONVERSION_HINT_HEADER
  nameWithType.vb: AbstractMessageSendingTemplate(Of RabbitDestination).CONVERSION_HINT_HEADER
  fullName.vb: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate(Of Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination).CONVERSION_HINT_HEADER
- uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate{Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination}.DefaultSendDestination
  commentId: P:Steeltoe.Messaging.Core.AbstractMessageSendingTemplate{Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination}.DefaultSendDestination
  parent: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate{Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination}
  definition: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.DefaultSendDestination
  name: DefaultSendDestination
  nameWithType: AbstractMessageSendingTemplate<RabbitDestination>.DefaultSendDestination
  fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate<Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination>.DefaultSendDestination
  nameWithType.vb: AbstractMessageSendingTemplate(Of RabbitDestination).DefaultSendDestination
  fullName.vb: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate(Of Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination).DefaultSendDestination
- uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate{Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination}.MessageConverter
  commentId: P:Steeltoe.Messaging.Core.AbstractMessageSendingTemplate{Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination}.MessageConverter
  parent: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate{Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination}
  definition: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.MessageConverter
  name: MessageConverter
  nameWithType: AbstractMessageSendingTemplate<RabbitDestination>.MessageConverter
  fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate<Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination>.MessageConverter
  nameWithType.vb: AbstractMessageSendingTemplate(Of RabbitDestination).MessageConverter
  fullName.vb: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate(Of Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination).MessageConverter
- uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate{Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination}.ConvertAndSendAsync(System.Object,System.Threading.CancellationToken)
  commentId: M:Steeltoe.Messaging.Core.AbstractMessageSendingTemplate{Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination}.ConvertAndSendAsync(System.Object,System.Threading.CancellationToken)
  parent: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate{Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination}
  definition: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.ConvertAndSendAsync(System.Object,System.Threading.CancellationToken)
  name: ConvertAndSendAsync(Object, CancellationToken)
  nameWithType: AbstractMessageSendingTemplate<RabbitDestination>.ConvertAndSendAsync(Object, CancellationToken)
  fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate<Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination>.ConvertAndSendAsync(System.Object, System.Threading.CancellationToken)
  nameWithType.vb: AbstractMessageSendingTemplate(Of RabbitDestination).ConvertAndSendAsync(Object, CancellationToken)
  fullName.vb: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate(Of Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination).ConvertAndSendAsync(System.Object, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.ConvertAndSendAsync(System.Object,System.Threading.CancellationToken)
    name: ConvertAndSendAsync
    nameWithType: AbstractMessageSendingTemplate<RabbitDestination>.ConvertAndSendAsync
    fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate<Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination>.ConvertAndSendAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.ConvertAndSendAsync(System.Object,System.Threading.CancellationToken)
    name: ConvertAndSendAsync
    nameWithType: AbstractMessageSendingTemplate(Of RabbitDestination).ConvertAndSendAsync
    fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate(Of Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination).ConvertAndSendAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate{Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination}.ConvertAndSendAsync(Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination,System.Object,System.Threading.CancellationToken)
  commentId: M:Steeltoe.Messaging.Core.AbstractMessageSendingTemplate{Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination}.ConvertAndSendAsync(Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination,System.Object,System.Threading.CancellationToken)
  parent: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate{Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination}
  definition: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.ConvertAndSendAsync(`0,System.Object,System.Threading.CancellationToken)
  name: ConvertAndSendAsync(RabbitDestination, Object, CancellationToken)
  nameWithType: AbstractMessageSendingTemplate<RabbitDestination>.ConvertAndSendAsync(RabbitDestination, Object, CancellationToken)
  fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate<Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination>.ConvertAndSendAsync(Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination, System.Object, System.Threading.CancellationToken)
  nameWithType.vb: AbstractMessageSendingTemplate(Of RabbitDestination).ConvertAndSendAsync(RabbitDestination, Object, CancellationToken)
  fullName.vb: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate(Of Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination).ConvertAndSendAsync(Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination, System.Object, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.ConvertAndSendAsync(`0,System.Object,System.Threading.CancellationToken)
    name: ConvertAndSendAsync
    nameWithType: AbstractMessageSendingTemplate<RabbitDestination>.ConvertAndSendAsync
    fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate<Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination>.ConvertAndSendAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination
    name: RabbitDestination
    nameWithType: RabbitDestination
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.ConvertAndSendAsync(`0,System.Object,System.Threading.CancellationToken)
    name: ConvertAndSendAsync
    nameWithType: AbstractMessageSendingTemplate(Of RabbitDestination).ConvertAndSendAsync
    fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate(Of Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination).ConvertAndSendAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination
    name: RabbitDestination
    nameWithType: RabbitDestination
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate{Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination}.ConvertAndSendAsync(Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object},System.Threading.CancellationToken)
  commentId: M:Steeltoe.Messaging.Core.AbstractMessageSendingTemplate{Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination}.ConvertAndSendAsync(Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object},System.Threading.CancellationToken)
  parent: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate{Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination}
  definition: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.ConvertAndSendAsync(`0,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object},System.Threading.CancellationToken)
  name: ConvertAndSendAsync(RabbitDestination, Object, IDictionary<String, Object>, CancellationToken)
  nameWithType: AbstractMessageSendingTemplate<RabbitDestination>.ConvertAndSendAsync(RabbitDestination, Object, IDictionary<String, Object>, CancellationToken)
  fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate<Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination>.ConvertAndSendAsync(Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination, System.Object, System.Collections.Generic.IDictionary<System.String, System.Object>, System.Threading.CancellationToken)
  nameWithType.vb: AbstractMessageSendingTemplate(Of RabbitDestination).ConvertAndSendAsync(RabbitDestination, Object, IDictionary(Of String, Object), CancellationToken)
  fullName.vb: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate(Of Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination).ConvertAndSendAsync(Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination, System.Object, System.Collections.Generic.IDictionary(Of System.String, System.Object), System.Threading.CancellationToken)
  name.vb: ConvertAndSendAsync(RabbitDestination, Object, IDictionary(Of String, Object), CancellationToken)
  spec.csharp:
  - uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.ConvertAndSendAsync(`0,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object},System.Threading.CancellationToken)
    name: ConvertAndSendAsync
    nameWithType: AbstractMessageSendingTemplate<RabbitDestination>.ConvertAndSendAsync
    fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate<Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination>.ConvertAndSendAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination
    name: RabbitDestination
    nameWithType: RabbitDestination
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.ConvertAndSendAsync(`0,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object},System.Threading.CancellationToken)
    name: ConvertAndSendAsync
    nameWithType: AbstractMessageSendingTemplate(Of RabbitDestination).ConvertAndSendAsync
    fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate(Of Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination).ConvertAndSendAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination
    name: RabbitDestination
    nameWithType: RabbitDestination
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate{Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination}.ConvertAndSendAsync(System.Object,Steeltoe.Messaging.Core.IMessagePostProcessor,System.Threading.CancellationToken)
  commentId: M:Steeltoe.Messaging.Core.AbstractMessageSendingTemplate{Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination}.ConvertAndSendAsync(System.Object,Steeltoe.Messaging.Core.IMessagePostProcessor,System.Threading.CancellationToken)
  parent: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate{Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination}
  definition: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.ConvertAndSendAsync(System.Object,Steeltoe.Messaging.Core.IMessagePostProcessor,System.Threading.CancellationToken)
  name: ConvertAndSendAsync(Object, IMessagePostProcessor, CancellationToken)
  nameWithType: AbstractMessageSendingTemplate<RabbitDestination>.ConvertAndSendAsync(Object, IMessagePostProcessor, CancellationToken)
  fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate<Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination>.ConvertAndSendAsync(System.Object, Steeltoe.Messaging.Core.IMessagePostProcessor, System.Threading.CancellationToken)
  nameWithType.vb: AbstractMessageSendingTemplate(Of RabbitDestination).ConvertAndSendAsync(Object, IMessagePostProcessor, CancellationToken)
  fullName.vb: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate(Of Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination).ConvertAndSendAsync(System.Object, Steeltoe.Messaging.Core.IMessagePostProcessor, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.ConvertAndSendAsync(System.Object,Steeltoe.Messaging.Core.IMessagePostProcessor,System.Threading.CancellationToken)
    name: ConvertAndSendAsync
    nameWithType: AbstractMessageSendingTemplate<RabbitDestination>.ConvertAndSendAsync
    fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate<Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination>.ConvertAndSendAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.Core.IMessagePostProcessor
    name: IMessagePostProcessor
    nameWithType: IMessagePostProcessor
    fullName: Steeltoe.Messaging.Core.IMessagePostProcessor
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.ConvertAndSendAsync(System.Object,Steeltoe.Messaging.Core.IMessagePostProcessor,System.Threading.CancellationToken)
    name: ConvertAndSendAsync
    nameWithType: AbstractMessageSendingTemplate(Of RabbitDestination).ConvertAndSendAsync
    fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate(Of Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination).ConvertAndSendAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.Core.IMessagePostProcessor
    name: IMessagePostProcessor
    nameWithType: IMessagePostProcessor
    fullName: Steeltoe.Messaging.Core.IMessagePostProcessor
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate{Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination}.ConvertAndSendAsync(Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination,System.Object,Steeltoe.Messaging.Core.IMessagePostProcessor,System.Threading.CancellationToken)
  commentId: M:Steeltoe.Messaging.Core.AbstractMessageSendingTemplate{Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination}.ConvertAndSendAsync(Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination,System.Object,Steeltoe.Messaging.Core.IMessagePostProcessor,System.Threading.CancellationToken)
  parent: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate{Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination}
  definition: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.ConvertAndSendAsync(`0,System.Object,Steeltoe.Messaging.Core.IMessagePostProcessor,System.Threading.CancellationToken)
  name: ConvertAndSendAsync(RabbitDestination, Object, IMessagePostProcessor, CancellationToken)
  nameWithType: AbstractMessageSendingTemplate<RabbitDestination>.ConvertAndSendAsync(RabbitDestination, Object, IMessagePostProcessor, CancellationToken)
  fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate<Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination>.ConvertAndSendAsync(Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination, System.Object, Steeltoe.Messaging.Core.IMessagePostProcessor, System.Threading.CancellationToken)
  nameWithType.vb: AbstractMessageSendingTemplate(Of RabbitDestination).ConvertAndSendAsync(RabbitDestination, Object, IMessagePostProcessor, CancellationToken)
  fullName.vb: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate(Of Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination).ConvertAndSendAsync(Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination, System.Object, Steeltoe.Messaging.Core.IMessagePostProcessor, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.ConvertAndSendAsync(`0,System.Object,Steeltoe.Messaging.Core.IMessagePostProcessor,System.Threading.CancellationToken)
    name: ConvertAndSendAsync
    nameWithType: AbstractMessageSendingTemplate<RabbitDestination>.ConvertAndSendAsync
    fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate<Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination>.ConvertAndSendAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination
    name: RabbitDestination
    nameWithType: RabbitDestination
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.Core.IMessagePostProcessor
    name: IMessagePostProcessor
    nameWithType: IMessagePostProcessor
    fullName: Steeltoe.Messaging.Core.IMessagePostProcessor
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.ConvertAndSendAsync(`0,System.Object,Steeltoe.Messaging.Core.IMessagePostProcessor,System.Threading.CancellationToken)
    name: ConvertAndSendAsync
    nameWithType: AbstractMessageSendingTemplate(Of RabbitDestination).ConvertAndSendAsync
    fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate(Of Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination).ConvertAndSendAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination
    name: RabbitDestination
    nameWithType: RabbitDestination
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.Core.IMessagePostProcessor
    name: IMessagePostProcessor
    nameWithType: IMessagePostProcessor
    fullName: Steeltoe.Messaging.Core.IMessagePostProcessor
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate{Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination}.ConvertAndSendAsync(Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object},Steeltoe.Messaging.Core.IMessagePostProcessor,System.Threading.CancellationToken)
  commentId: M:Steeltoe.Messaging.Core.AbstractMessageSendingTemplate{Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination}.ConvertAndSendAsync(Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object},Steeltoe.Messaging.Core.IMessagePostProcessor,System.Threading.CancellationToken)
  parent: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate{Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination}
  definition: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.ConvertAndSendAsync(`0,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object},Steeltoe.Messaging.Core.IMessagePostProcessor,System.Threading.CancellationToken)
  name: ConvertAndSendAsync(RabbitDestination, Object, IDictionary<String, Object>, IMessagePostProcessor, CancellationToken)
  nameWithType: AbstractMessageSendingTemplate<RabbitDestination>.ConvertAndSendAsync(RabbitDestination, Object, IDictionary<String, Object>, IMessagePostProcessor, CancellationToken)
  fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate<Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination>.ConvertAndSendAsync(Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination, System.Object, System.Collections.Generic.IDictionary<System.String, System.Object>, Steeltoe.Messaging.Core.IMessagePostProcessor, System.Threading.CancellationToken)
  nameWithType.vb: AbstractMessageSendingTemplate(Of RabbitDestination).ConvertAndSendAsync(RabbitDestination, Object, IDictionary(Of String, Object), IMessagePostProcessor, CancellationToken)
  fullName.vb: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate(Of Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination).ConvertAndSendAsync(Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination, System.Object, System.Collections.Generic.IDictionary(Of System.String, System.Object), Steeltoe.Messaging.Core.IMessagePostProcessor, System.Threading.CancellationToken)
  name.vb: ConvertAndSendAsync(RabbitDestination, Object, IDictionary(Of String, Object), IMessagePostProcessor, CancellationToken)
  spec.csharp:
  - uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.ConvertAndSendAsync(`0,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object},Steeltoe.Messaging.Core.IMessagePostProcessor,System.Threading.CancellationToken)
    name: ConvertAndSendAsync
    nameWithType: AbstractMessageSendingTemplate<RabbitDestination>.ConvertAndSendAsync
    fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate<Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination>.ConvertAndSendAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination
    name: RabbitDestination
    nameWithType: RabbitDestination
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.Core.IMessagePostProcessor
    name: IMessagePostProcessor
    nameWithType: IMessagePostProcessor
    fullName: Steeltoe.Messaging.Core.IMessagePostProcessor
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.ConvertAndSendAsync(`0,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object},Steeltoe.Messaging.Core.IMessagePostProcessor,System.Threading.CancellationToken)
    name: ConvertAndSendAsync
    nameWithType: AbstractMessageSendingTemplate(Of RabbitDestination).ConvertAndSendAsync
    fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate(Of Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination).ConvertAndSendAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination
    name: RabbitDestination
    nameWithType: RabbitDestination
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.Core.IMessagePostProcessor
    name: IMessagePostProcessor
    nameWithType: IMessagePostProcessor
    fullName: Steeltoe.Messaging.Core.IMessagePostProcessor
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate{Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination}.SendAsync(Steeltoe.Messaging.IMessage,System.Threading.CancellationToken)
  commentId: M:Steeltoe.Messaging.Core.AbstractMessageSendingTemplate{Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination}.SendAsync(Steeltoe.Messaging.IMessage,System.Threading.CancellationToken)
  parent: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate{Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination}
  definition: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.SendAsync(Steeltoe.Messaging.IMessage,System.Threading.CancellationToken)
  name: SendAsync(IMessage, CancellationToken)
  nameWithType: AbstractMessageSendingTemplate<RabbitDestination>.SendAsync(IMessage, CancellationToken)
  fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate<Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination>.SendAsync(Steeltoe.Messaging.IMessage, System.Threading.CancellationToken)
  nameWithType.vb: AbstractMessageSendingTemplate(Of RabbitDestination).SendAsync(IMessage, CancellationToken)
  fullName.vb: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate(Of Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination).SendAsync(Steeltoe.Messaging.IMessage, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.SendAsync(Steeltoe.Messaging.IMessage,System.Threading.CancellationToken)
    name: SendAsync
    nameWithType: AbstractMessageSendingTemplate<RabbitDestination>.SendAsync
    fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate<Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination>.SendAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.SendAsync(Steeltoe.Messaging.IMessage,System.Threading.CancellationToken)
    name: SendAsync
    nameWithType: AbstractMessageSendingTemplate(Of RabbitDestination).SendAsync
    fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate(Of Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination).SendAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate{Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination}.SendAsync(Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination,Steeltoe.Messaging.IMessage,System.Threading.CancellationToken)
  commentId: M:Steeltoe.Messaging.Core.AbstractMessageSendingTemplate{Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination}.SendAsync(Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination,Steeltoe.Messaging.IMessage,System.Threading.CancellationToken)
  parent: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate{Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination}
  definition: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.SendAsync(`0,Steeltoe.Messaging.IMessage,System.Threading.CancellationToken)
  name: SendAsync(RabbitDestination, IMessage, CancellationToken)
  nameWithType: AbstractMessageSendingTemplate<RabbitDestination>.SendAsync(RabbitDestination, IMessage, CancellationToken)
  fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate<Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination>.SendAsync(Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination, Steeltoe.Messaging.IMessage, System.Threading.CancellationToken)
  nameWithType.vb: AbstractMessageSendingTemplate(Of RabbitDestination).SendAsync(RabbitDestination, IMessage, CancellationToken)
  fullName.vb: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate(Of Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination).SendAsync(Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination, Steeltoe.Messaging.IMessage, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.SendAsync(`0,Steeltoe.Messaging.IMessage,System.Threading.CancellationToken)
    name: SendAsync
    nameWithType: AbstractMessageSendingTemplate<RabbitDestination>.SendAsync
    fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate<Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination>.SendAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination
    name: RabbitDestination
    nameWithType: RabbitDestination
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.SendAsync(`0,Steeltoe.Messaging.IMessage,System.Threading.CancellationToken)
    name: SendAsync
    nameWithType: AbstractMessageSendingTemplate(Of RabbitDestination).SendAsync
    fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate(Of Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination).SendAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination
    name: RabbitDestination
    nameWithType: RabbitDestination
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate{Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination}.ConvertAndSend(System.Object)
  commentId: M:Steeltoe.Messaging.Core.AbstractMessageSendingTemplate{Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination}.ConvertAndSend(System.Object)
  parent: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate{Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination}
  definition: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.ConvertAndSend(System.Object)
  name: ConvertAndSend(Object)
  nameWithType: AbstractMessageSendingTemplate<RabbitDestination>.ConvertAndSend(Object)
  fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate<Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination>.ConvertAndSend(System.Object)
  nameWithType.vb: AbstractMessageSendingTemplate(Of RabbitDestination).ConvertAndSend(Object)
  fullName.vb: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate(Of Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination).ConvertAndSend(System.Object)
  spec.csharp:
  - uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.ConvertAndSend(System.Object)
    name: ConvertAndSend
    nameWithType: AbstractMessageSendingTemplate<RabbitDestination>.ConvertAndSend
    fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate<Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination>.ConvertAndSend
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.ConvertAndSend(System.Object)
    name: ConvertAndSend
    nameWithType: AbstractMessageSendingTemplate(Of RabbitDestination).ConvertAndSend
    fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate(Of Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination).ConvertAndSend
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate{Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination}.ConvertAndSend(Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination,System.Object)
  commentId: M:Steeltoe.Messaging.Core.AbstractMessageSendingTemplate{Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination}.ConvertAndSend(Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination,System.Object)
  parent: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate{Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination}
  definition: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.ConvertAndSend(`0,System.Object)
  name: ConvertAndSend(RabbitDestination, Object)
  nameWithType: AbstractMessageSendingTemplate<RabbitDestination>.ConvertAndSend(RabbitDestination, Object)
  fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate<Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination>.ConvertAndSend(Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination, System.Object)
  nameWithType.vb: AbstractMessageSendingTemplate(Of RabbitDestination).ConvertAndSend(RabbitDestination, Object)
  fullName.vb: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate(Of Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination).ConvertAndSend(Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination, System.Object)
  spec.csharp:
  - uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.ConvertAndSend(`0,System.Object)
    name: ConvertAndSend
    nameWithType: AbstractMessageSendingTemplate<RabbitDestination>.ConvertAndSend
    fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate<Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination>.ConvertAndSend
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination
    name: RabbitDestination
    nameWithType: RabbitDestination
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.ConvertAndSend(`0,System.Object)
    name: ConvertAndSend
    nameWithType: AbstractMessageSendingTemplate(Of RabbitDestination).ConvertAndSend
    fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate(Of Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination).ConvertAndSend
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination
    name: RabbitDestination
    nameWithType: RabbitDestination
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate{Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination}.ConvertAndSend(Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object})
  commentId: M:Steeltoe.Messaging.Core.AbstractMessageSendingTemplate{Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination}.ConvertAndSend(Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object})
  parent: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate{Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination}
  definition: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.ConvertAndSend(`0,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object})
  name: ConvertAndSend(RabbitDestination, Object, IDictionary<String, Object>)
  nameWithType: AbstractMessageSendingTemplate<RabbitDestination>.ConvertAndSend(RabbitDestination, Object, IDictionary<String, Object>)
  fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate<Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination>.ConvertAndSend(Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination, System.Object, System.Collections.Generic.IDictionary<System.String, System.Object>)
  nameWithType.vb: AbstractMessageSendingTemplate(Of RabbitDestination).ConvertAndSend(RabbitDestination, Object, IDictionary(Of String, Object))
  fullName.vb: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate(Of Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination).ConvertAndSend(Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination, System.Object, System.Collections.Generic.IDictionary(Of System.String, System.Object))
  name.vb: ConvertAndSend(RabbitDestination, Object, IDictionary(Of String, Object))
  spec.csharp:
  - uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.ConvertAndSend(`0,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object})
    name: ConvertAndSend
    nameWithType: AbstractMessageSendingTemplate<RabbitDestination>.ConvertAndSend
    fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate<Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination>.ConvertAndSend
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination
    name: RabbitDestination
    nameWithType: RabbitDestination
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.ConvertAndSend(`0,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object})
    name: ConvertAndSend
    nameWithType: AbstractMessageSendingTemplate(Of RabbitDestination).ConvertAndSend
    fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate(Of Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination).ConvertAndSend
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination
    name: RabbitDestination
    nameWithType: RabbitDestination
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate{Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination}.ConvertAndSend(System.Object,Steeltoe.Messaging.Core.IMessagePostProcessor)
  commentId: M:Steeltoe.Messaging.Core.AbstractMessageSendingTemplate{Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination}.ConvertAndSend(System.Object,Steeltoe.Messaging.Core.IMessagePostProcessor)
  parent: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate{Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination}
  definition: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.ConvertAndSend(System.Object,Steeltoe.Messaging.Core.IMessagePostProcessor)
  name: ConvertAndSend(Object, IMessagePostProcessor)
  nameWithType: AbstractMessageSendingTemplate<RabbitDestination>.ConvertAndSend(Object, IMessagePostProcessor)
  fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate<Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination>.ConvertAndSend(System.Object, Steeltoe.Messaging.Core.IMessagePostProcessor)
  nameWithType.vb: AbstractMessageSendingTemplate(Of RabbitDestination).ConvertAndSend(Object, IMessagePostProcessor)
  fullName.vb: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate(Of Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination).ConvertAndSend(System.Object, Steeltoe.Messaging.Core.IMessagePostProcessor)
  spec.csharp:
  - uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.ConvertAndSend(System.Object,Steeltoe.Messaging.Core.IMessagePostProcessor)
    name: ConvertAndSend
    nameWithType: AbstractMessageSendingTemplate<RabbitDestination>.ConvertAndSend
    fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate<Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination>.ConvertAndSend
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.Core.IMessagePostProcessor
    name: IMessagePostProcessor
    nameWithType: IMessagePostProcessor
    fullName: Steeltoe.Messaging.Core.IMessagePostProcessor
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.ConvertAndSend(System.Object,Steeltoe.Messaging.Core.IMessagePostProcessor)
    name: ConvertAndSend
    nameWithType: AbstractMessageSendingTemplate(Of RabbitDestination).ConvertAndSend
    fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate(Of Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination).ConvertAndSend
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.Core.IMessagePostProcessor
    name: IMessagePostProcessor
    nameWithType: IMessagePostProcessor
    fullName: Steeltoe.Messaging.Core.IMessagePostProcessor
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate{Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination}.ConvertAndSend(Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination,System.Object,Steeltoe.Messaging.Core.IMessagePostProcessor)
  commentId: M:Steeltoe.Messaging.Core.AbstractMessageSendingTemplate{Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination}.ConvertAndSend(Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination,System.Object,Steeltoe.Messaging.Core.IMessagePostProcessor)
  parent: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate{Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination}
  definition: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.ConvertAndSend(`0,System.Object,Steeltoe.Messaging.Core.IMessagePostProcessor)
  name: ConvertAndSend(RabbitDestination, Object, IMessagePostProcessor)
  nameWithType: AbstractMessageSendingTemplate<RabbitDestination>.ConvertAndSend(RabbitDestination, Object, IMessagePostProcessor)
  fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate<Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination>.ConvertAndSend(Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination, System.Object, Steeltoe.Messaging.Core.IMessagePostProcessor)
  nameWithType.vb: AbstractMessageSendingTemplate(Of RabbitDestination).ConvertAndSend(RabbitDestination, Object, IMessagePostProcessor)
  fullName.vb: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate(Of Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination).ConvertAndSend(Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination, System.Object, Steeltoe.Messaging.Core.IMessagePostProcessor)
  spec.csharp:
  - uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.ConvertAndSend(`0,System.Object,Steeltoe.Messaging.Core.IMessagePostProcessor)
    name: ConvertAndSend
    nameWithType: AbstractMessageSendingTemplate<RabbitDestination>.ConvertAndSend
    fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate<Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination>.ConvertAndSend
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination
    name: RabbitDestination
    nameWithType: RabbitDestination
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.Core.IMessagePostProcessor
    name: IMessagePostProcessor
    nameWithType: IMessagePostProcessor
    fullName: Steeltoe.Messaging.Core.IMessagePostProcessor
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.ConvertAndSend(`0,System.Object,Steeltoe.Messaging.Core.IMessagePostProcessor)
    name: ConvertAndSend
    nameWithType: AbstractMessageSendingTemplate(Of RabbitDestination).ConvertAndSend
    fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate(Of Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination).ConvertAndSend
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination
    name: RabbitDestination
    nameWithType: RabbitDestination
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.Core.IMessagePostProcessor
    name: IMessagePostProcessor
    nameWithType: IMessagePostProcessor
    fullName: Steeltoe.Messaging.Core.IMessagePostProcessor
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate{Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination}.ConvertAndSend(Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object},Steeltoe.Messaging.Core.IMessagePostProcessor)
  commentId: M:Steeltoe.Messaging.Core.AbstractMessageSendingTemplate{Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination}.ConvertAndSend(Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object},Steeltoe.Messaging.Core.IMessagePostProcessor)
  parent: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate{Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination}
  definition: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.ConvertAndSend(`0,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object},Steeltoe.Messaging.Core.IMessagePostProcessor)
  name: ConvertAndSend(RabbitDestination, Object, IDictionary<String, Object>, IMessagePostProcessor)
  nameWithType: AbstractMessageSendingTemplate<RabbitDestination>.ConvertAndSend(RabbitDestination, Object, IDictionary<String, Object>, IMessagePostProcessor)
  fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate<Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination>.ConvertAndSend(Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination, System.Object, System.Collections.Generic.IDictionary<System.String, System.Object>, Steeltoe.Messaging.Core.IMessagePostProcessor)
  nameWithType.vb: AbstractMessageSendingTemplate(Of RabbitDestination).ConvertAndSend(RabbitDestination, Object, IDictionary(Of String, Object), IMessagePostProcessor)
  fullName.vb: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate(Of Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination).ConvertAndSend(Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination, System.Object, System.Collections.Generic.IDictionary(Of System.String, System.Object), Steeltoe.Messaging.Core.IMessagePostProcessor)
  name.vb: ConvertAndSend(RabbitDestination, Object, IDictionary(Of String, Object), IMessagePostProcessor)
  spec.csharp:
  - uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.ConvertAndSend(`0,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object},Steeltoe.Messaging.Core.IMessagePostProcessor)
    name: ConvertAndSend
    nameWithType: AbstractMessageSendingTemplate<RabbitDestination>.ConvertAndSend
    fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate<Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination>.ConvertAndSend
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination
    name: RabbitDestination
    nameWithType: RabbitDestination
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.Core.IMessagePostProcessor
    name: IMessagePostProcessor
    nameWithType: IMessagePostProcessor
    fullName: Steeltoe.Messaging.Core.IMessagePostProcessor
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.ConvertAndSend(`0,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object},Steeltoe.Messaging.Core.IMessagePostProcessor)
    name: ConvertAndSend
    nameWithType: AbstractMessageSendingTemplate(Of RabbitDestination).ConvertAndSend
    fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate(Of Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination).ConvertAndSend
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination
    name: RabbitDestination
    nameWithType: RabbitDestination
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.Core.IMessagePostProcessor
    name: IMessagePostProcessor
    nameWithType: IMessagePostProcessor
    fullName: Steeltoe.Messaging.Core.IMessagePostProcessor
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate{Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination}.Send(Steeltoe.Messaging.IMessage)
  commentId: M:Steeltoe.Messaging.Core.AbstractMessageSendingTemplate{Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination}.Send(Steeltoe.Messaging.IMessage)
  parent: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate{Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination}
  definition: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.Send(Steeltoe.Messaging.IMessage)
  name: Send(IMessage)
  nameWithType: AbstractMessageSendingTemplate<RabbitDestination>.Send(IMessage)
  fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate<Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination>.Send(Steeltoe.Messaging.IMessage)
  nameWithType.vb: AbstractMessageSendingTemplate(Of RabbitDestination).Send(IMessage)
  fullName.vb: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate(Of Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination).Send(Steeltoe.Messaging.IMessage)
  spec.csharp:
  - uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.Send(Steeltoe.Messaging.IMessage)
    name: Send
    nameWithType: AbstractMessageSendingTemplate<RabbitDestination>.Send
    fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate<Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination>.Send
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.Send(Steeltoe.Messaging.IMessage)
    name: Send
    nameWithType: AbstractMessageSendingTemplate(Of RabbitDestination).Send
    fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate(Of Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination).Send
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate{Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination}.Send(Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination,Steeltoe.Messaging.IMessage)
  commentId: M:Steeltoe.Messaging.Core.AbstractMessageSendingTemplate{Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination}.Send(Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination,Steeltoe.Messaging.IMessage)
  parent: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate{Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination}
  definition: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.Send(`0,Steeltoe.Messaging.IMessage)
  name: Send(RabbitDestination, IMessage)
  nameWithType: AbstractMessageSendingTemplate<RabbitDestination>.Send(RabbitDestination, IMessage)
  fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate<Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination>.Send(Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination, Steeltoe.Messaging.IMessage)
  nameWithType.vb: AbstractMessageSendingTemplate(Of RabbitDestination).Send(RabbitDestination, IMessage)
  fullName.vb: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate(Of Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination).Send(Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination, Steeltoe.Messaging.IMessage)
  spec.csharp:
  - uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.Send(`0,Steeltoe.Messaging.IMessage)
    name: Send
    nameWithType: AbstractMessageSendingTemplate<RabbitDestination>.Send
    fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate<Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination>.Send
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination
    name: RabbitDestination
    nameWithType: RabbitDestination
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.Send(`0,Steeltoe.Messaging.IMessage)
    name: Send
    nameWithType: AbstractMessageSendingTemplate(Of RabbitDestination).Send
    fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate(Of Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination).Send
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination
    name: RabbitDestination
    nameWithType: RabbitDestination
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate{Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination}.RequiredDefaultSendDestination
  commentId: P:Steeltoe.Messaging.Core.AbstractMessageSendingTemplate{Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination}.RequiredDefaultSendDestination
  parent: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate{Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination}
  definition: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.RequiredDefaultSendDestination
  name: RequiredDefaultSendDestination
  nameWithType: AbstractMessageSendingTemplate<RabbitDestination>.RequiredDefaultSendDestination
  fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate<Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination>.RequiredDefaultSendDestination
  nameWithType.vb: AbstractMessageSendingTemplate(Of RabbitDestination).RequiredDefaultSendDestination
  fullName.vb: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate(Of Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination).RequiredDefaultSendDestination
- uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate{Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination}.DoConvert(System.Object,System.Collections.Generic.IDictionary{System.String,System.Object},Steeltoe.Messaging.Core.IMessagePostProcessor)
  commentId: M:Steeltoe.Messaging.Core.AbstractMessageSendingTemplate{Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination}.DoConvert(System.Object,System.Collections.Generic.IDictionary{System.String,System.Object},Steeltoe.Messaging.Core.IMessagePostProcessor)
  parent: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate{Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination}
  definition: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.DoConvert(System.Object,System.Collections.Generic.IDictionary{System.String,System.Object},Steeltoe.Messaging.Core.IMessagePostProcessor)
  name: DoConvert(Object, IDictionary<String, Object>, IMessagePostProcessor)
  nameWithType: AbstractMessageSendingTemplate<RabbitDestination>.DoConvert(Object, IDictionary<String, Object>, IMessagePostProcessor)
  fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate<Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination>.DoConvert(System.Object, System.Collections.Generic.IDictionary<System.String, System.Object>, Steeltoe.Messaging.Core.IMessagePostProcessor)
  nameWithType.vb: AbstractMessageSendingTemplate(Of RabbitDestination).DoConvert(Object, IDictionary(Of String, Object), IMessagePostProcessor)
  fullName.vb: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate(Of Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination).DoConvert(System.Object, System.Collections.Generic.IDictionary(Of System.String, System.Object), Steeltoe.Messaging.Core.IMessagePostProcessor)
  name.vb: DoConvert(Object, IDictionary(Of String, Object), IMessagePostProcessor)
  spec.csharp:
  - uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.DoConvert(System.Object,System.Collections.Generic.IDictionary{System.String,System.Object},Steeltoe.Messaging.Core.IMessagePostProcessor)
    name: DoConvert
    nameWithType: AbstractMessageSendingTemplate<RabbitDestination>.DoConvert
    fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate<Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination>.DoConvert
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.Core.IMessagePostProcessor
    name: IMessagePostProcessor
    nameWithType: IMessagePostProcessor
    fullName: Steeltoe.Messaging.Core.IMessagePostProcessor
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.DoConvert(System.Object,System.Collections.Generic.IDictionary{System.String,System.Object},Steeltoe.Messaging.Core.IMessagePostProcessor)
    name: DoConvert
    nameWithType: AbstractMessageSendingTemplate(Of RabbitDestination).DoConvert
    fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate(Of Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination).DoConvert
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.Core.IMessagePostProcessor
    name: IMessagePostProcessor
    nameWithType: IMessagePostProcessor
    fullName: Steeltoe.Messaging.Core.IMessagePostProcessor
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate{Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination}.ProcessHeadersToSend(System.Collections.Generic.IDictionary{System.String,System.Object})
  commentId: M:Steeltoe.Messaging.Core.AbstractMessageSendingTemplate{Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination}.ProcessHeadersToSend(System.Collections.Generic.IDictionary{System.String,System.Object})
  parent: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate{Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination}
  definition: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.ProcessHeadersToSend(System.Collections.Generic.IDictionary{System.String,System.Object})
  name: ProcessHeadersToSend(IDictionary<String, Object>)
  nameWithType: AbstractMessageSendingTemplate<RabbitDestination>.ProcessHeadersToSend(IDictionary<String, Object>)
  fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate<Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination>.ProcessHeadersToSend(System.Collections.Generic.IDictionary<System.String, System.Object>)
  nameWithType.vb: AbstractMessageSendingTemplate(Of RabbitDestination).ProcessHeadersToSend(IDictionary(Of String, Object))
  fullName.vb: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate(Of Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination).ProcessHeadersToSend(System.Collections.Generic.IDictionary(Of System.String, System.Object))
  name.vb: ProcessHeadersToSend(IDictionary(Of String, Object))
  spec.csharp:
  - uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.ProcessHeadersToSend(System.Collections.Generic.IDictionary{System.String,System.Object})
    name: ProcessHeadersToSend
    nameWithType: AbstractMessageSendingTemplate<RabbitDestination>.ProcessHeadersToSend
    fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate<Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination>.ProcessHeadersToSend
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.ProcessHeadersToSend(System.Collections.Generic.IDictionary{System.String,System.Object})
    name: ProcessHeadersToSend
    nameWithType: AbstractMessageSendingTemplate(Of RabbitDestination).ProcessHeadersToSend
    fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate(Of Steeltoe.Messaging.RabbitMQ.Core.RabbitDestination).ProcessHeadersToSend
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1
  commentId: T:Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1
  name: AbstractMessageSendingTemplate<D>
  nameWithType: AbstractMessageSendingTemplate<D>
  fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate<D>
  nameWithType.vb: AbstractMessageSendingTemplate(Of D)
  fullName.vb: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate(Of D)
  name.vb: AbstractMessageSendingTemplate(Of D)
  spec.csharp:
  - uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1
    name: AbstractMessageSendingTemplate
    nameWithType: AbstractMessageSendingTemplate
    fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate
  - name: <
    nameWithType: <
    fullName: <
  - name: D
    nameWithType: D
    fullName: D
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1
    name: AbstractMessageSendingTemplate
    nameWithType: AbstractMessageSendingTemplate
    fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: D
    nameWithType: D
    fullName: D
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Core
  commentId: N:Steeltoe.Messaging.Core
  name: Steeltoe.Messaging.Core
  nameWithType: Steeltoe.Messaging.Core
  fullName: Steeltoe.Messaging.Core
- uid: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate`1
  commentId: T:Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate`1
  name: AbstractMessageReceivingTemplate<D>
  nameWithType: AbstractMessageReceivingTemplate<D>
  fullName: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate<D>
  nameWithType.vb: AbstractMessageReceivingTemplate(Of D)
  fullName.vb: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate(Of D)
  name.vb: AbstractMessageReceivingTemplate(Of D)
  spec.csharp:
  - uid: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate`1
    name: AbstractMessageReceivingTemplate
    nameWithType: AbstractMessageReceivingTemplate
    fullName: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate
  - name: <
    nameWithType: <
    fullName: <
  - name: D
    nameWithType: D
    fullName: D
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate`1
    name: AbstractMessageReceivingTemplate
    nameWithType: AbstractMessageReceivingTemplate
    fullName: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: D
    nameWithType: D
    fullName: D
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Core.AbstractMessagingTemplate`1
  commentId: T:Steeltoe.Messaging.Core.AbstractMessagingTemplate`1
  name: AbstractMessagingTemplate<D>
  nameWithType: AbstractMessagingTemplate<D>
  fullName: Steeltoe.Messaging.Core.AbstractMessagingTemplate<D>
  nameWithType.vb: AbstractMessagingTemplate(Of D)
  fullName.vb: Steeltoe.Messaging.Core.AbstractMessagingTemplate(Of D)
  name.vb: AbstractMessagingTemplate(Of D)
  spec.csharp:
  - uid: Steeltoe.Messaging.Core.AbstractMessagingTemplate`1
    name: AbstractMessagingTemplate
    nameWithType: AbstractMessagingTemplate
    fullName: Steeltoe.Messaging.Core.AbstractMessagingTemplate
  - name: <
    nameWithType: <
    fullName: <
  - name: D
    nameWithType: D
    fullName: D
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Steeltoe.Messaging.Core.AbstractMessagingTemplate`1
    name: AbstractMessagingTemplate
    nameWithType: AbstractMessagingTemplate
    fullName: Steeltoe.Messaging.Core.AbstractMessagingTemplate
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: D
    nameWithType: D
    fullName: D
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Core.IMessageSendingOperations`1
  commentId: T:Steeltoe.Messaging.Core.IMessageSendingOperations`1
  name: IMessageSendingOperations<D>
  nameWithType: IMessageSendingOperations<D>
  fullName: Steeltoe.Messaging.Core.IMessageSendingOperations<D>
  nameWithType.vb: IMessageSendingOperations(Of D)
  fullName.vb: Steeltoe.Messaging.Core.IMessageSendingOperations(Of D)
  name.vb: IMessageSendingOperations(Of D)
  spec.csharp:
  - uid: Steeltoe.Messaging.Core.IMessageSendingOperations`1
    name: IMessageSendingOperations
    nameWithType: IMessageSendingOperations
    fullName: Steeltoe.Messaging.Core.IMessageSendingOperations
  - name: <
    nameWithType: <
    fullName: <
  - name: D
    nameWithType: D
    fullName: D
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Steeltoe.Messaging.Core.IMessageSendingOperations`1
    name: IMessageSendingOperations
    nameWithType: IMessageSendingOperations
    fullName: Steeltoe.Messaging.Core.IMessageSendingOperations
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: D
    nameWithType: D
    fullName: D
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Core.IMessageReceivingOperations`1
  commentId: T:Steeltoe.Messaging.Core.IMessageReceivingOperations`1
  name: IMessageReceivingOperations<D>
  nameWithType: IMessageReceivingOperations<D>
  fullName: Steeltoe.Messaging.Core.IMessageReceivingOperations<D>
  nameWithType.vb: IMessageReceivingOperations(Of D)
  fullName.vb: Steeltoe.Messaging.Core.IMessageReceivingOperations(Of D)
  name.vb: IMessageReceivingOperations(Of D)
  spec.csharp:
  - uid: Steeltoe.Messaging.Core.IMessageReceivingOperations`1
    name: IMessageReceivingOperations
    nameWithType: IMessageReceivingOperations
    fullName: Steeltoe.Messaging.Core.IMessageReceivingOperations
  - name: <
    nameWithType: <
    fullName: <
  - name: D
    nameWithType: D
    fullName: D
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Steeltoe.Messaging.Core.IMessageReceivingOperations`1
    name: IMessageReceivingOperations
    nameWithType: IMessageReceivingOperations
    fullName: Steeltoe.Messaging.Core.IMessageReceivingOperations
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: D
    nameWithType: D
    fullName: D
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Core.IMessageRequestReplyOperations`1
  commentId: T:Steeltoe.Messaging.Core.IMessageRequestReplyOperations`1
  name: IMessageRequestReplyOperations<D>
  nameWithType: IMessageRequestReplyOperations<D>
  fullName: Steeltoe.Messaging.Core.IMessageRequestReplyOperations<D>
  nameWithType.vb: IMessageRequestReplyOperations(Of D)
  fullName.vb: Steeltoe.Messaging.Core.IMessageRequestReplyOperations(Of D)
  name.vb: IMessageRequestReplyOperations(Of D)
  spec.csharp:
  - uid: Steeltoe.Messaging.Core.IMessageRequestReplyOperations`1
    name: IMessageRequestReplyOperations
    nameWithType: IMessageRequestReplyOperations
    fullName: Steeltoe.Messaging.Core.IMessageRequestReplyOperations
  - name: <
    nameWithType: <
    fullName: <
  - name: D
    nameWithType: D
    fullName: D
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Steeltoe.Messaging.Core.IMessageRequestReplyOperations`1
    name: IMessageRequestReplyOperations
    nameWithType: IMessageRequestReplyOperations
    fullName: Steeltoe.Messaging.Core.IMessageRequestReplyOperations
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: D
    nameWithType: D
    fullName: D
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Listener
  commentId: N:Steeltoe.Messaging.RabbitMQ.Listener
  name: Steeltoe.Messaging.RabbitMQ.Listener
  nameWithType: Steeltoe.Messaging.RabbitMQ.Listener
  fullName: Steeltoe.Messaging.RabbitMQ.Listener
- uid: Steeltoe.Messaging.RabbitMQ.Support
  commentId: N:Steeltoe.Messaging.RabbitMQ.Support
  name: Steeltoe.Messaging.RabbitMQ.Support
  nameWithType: Steeltoe.Messaging.RabbitMQ.Support
  fullName: Steeltoe.Messaging.RabbitMQ.Support
- uid: Steeltoe.Messaging.RabbitMQ.Connection
  commentId: N:Steeltoe.Messaging.RabbitMQ.Connection
  name: Steeltoe.Messaging.RabbitMQ.Connection
  nameWithType: Steeltoe.Messaging.RabbitMQ.Connection
  fullName: Steeltoe.Messaging.RabbitMQ.Connection
- uid: Steeltoe.Common.Services
  commentId: N:Steeltoe.Common.Services
  name: Steeltoe.Common.Services
  nameWithType: Steeltoe.Common.Services
  fullName: Steeltoe.Common.Services
- uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ReceiveAndReply``2(System.Func{``0,``1})
  commentId: M:Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ReceiveAndReply``2(System.Func{``0,``1})
  isExternal: true
  name: ReceiveAndReply<R, S>(Func<R, S>)
  nameWithType: RabbitTemplate.ReceiveAndReply<R, S>(Func<R, S>)
  fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ReceiveAndReply<R, S>(System.Func<R, S>)
  nameWithType.vb: RabbitTemplate.ReceiveAndReply(Of R, S)(Func(Of R, S))
  fullName.vb: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ReceiveAndReply(Of R, S)(System.Func(Of R, S))
  name.vb: ReceiveAndReply(Of R, S)(Func(Of R, S))
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ReceiveAndReply``2(System.Func{``0,``1})
    name: ReceiveAndReply<R, S>
    nameWithType: RabbitTemplate.ReceiveAndReply<R, S>
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ReceiveAndReply<R, S>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: R
    nameWithType: R
    fullName: R
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: S
    nameWithType: S
    fullName: S
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ReceiveAndReply``2(System.Func{``0,``1})
    name: ReceiveAndReply(Of R, S)
    nameWithType: RabbitTemplate.ReceiveAndReply(Of R, S)
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ReceiveAndReply(Of R, S)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: R
    nameWithType: R
    fullName: R
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: S
    nameWithType: S
    fullName: S
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ReceiveAndReply``2(System.String,System.Func{``0,``1})
  commentId: M:Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ReceiveAndReply``2(System.String,System.Func{``0,``1})
  isExternal: true
  name: ReceiveAndReply<R, S>(String, Func<R, S>)
  nameWithType: RabbitTemplate.ReceiveAndReply<R, S>(String, Func<R, S>)
  fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ReceiveAndReply<R, S>(System.String, System.Func<R, S>)
  nameWithType.vb: RabbitTemplate.ReceiveAndReply(Of R, S)(String, Func(Of R, S))
  fullName.vb: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ReceiveAndReply(Of R, S)(System.String, System.Func(Of R, S))
  name.vb: ReceiveAndReply(Of R, S)(String, Func(Of R, S))
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ReceiveAndReply``2(System.String,System.Func{``0,``1})
    name: ReceiveAndReply<R, S>
    nameWithType: RabbitTemplate.ReceiveAndReply<R, S>
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ReceiveAndReply<R, S>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: R
    nameWithType: R
    fullName: R
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: S
    nameWithType: S
    fullName: S
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ReceiveAndReply``2(System.String,System.Func{``0,``1})
    name: ReceiveAndReply(Of R, S)
    nameWithType: RabbitTemplate.ReceiveAndReply(Of R, S)
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ReceiveAndReply(Of R, S)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: R
    nameWithType: R
    fullName: R
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: S
    nameWithType: S
    fullName: S
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ReceiveAndReply``2(System.Func{``0,``1},System.String,System.String)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ReceiveAndReply``2(System.Func{``0,``1},System.String,System.String)
  isExternal: true
  name: ReceiveAndReply<R, S>(Func<R, S>, String, String)
  nameWithType: RabbitTemplate.ReceiveAndReply<R, S>(Func<R, S>, String, String)
  fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ReceiveAndReply<R, S>(System.Func<R, S>, System.String, System.String)
  nameWithType.vb: RabbitTemplate.ReceiveAndReply(Of R, S)(Func(Of R, S), String, String)
  fullName.vb: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ReceiveAndReply(Of R, S)(System.Func(Of R, S), System.String, System.String)
  name.vb: ReceiveAndReply(Of R, S)(Func(Of R, S), String, String)
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ReceiveAndReply``2(System.Func{``0,``1},System.String,System.String)
    name: ReceiveAndReply<R, S>
    nameWithType: RabbitTemplate.ReceiveAndReply<R, S>
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ReceiveAndReply<R, S>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: R
    nameWithType: R
    fullName: R
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: S
    nameWithType: S
    fullName: S
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ReceiveAndReply``2(System.Func{``0,``1},System.String,System.String)
    name: ReceiveAndReply(Of R, S)
    nameWithType: RabbitTemplate.ReceiveAndReply(Of R, S)
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ReceiveAndReply(Of R, S)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: R
    nameWithType: R
    fullName: R
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: S
    nameWithType: S
    fullName: S
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ReceiveAndReply``2(System.String,System.Func{``0,``1},System.String,System.String)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ReceiveAndReply``2(System.String,System.Func{``0,``1},System.String,System.String)
  isExternal: true
  name: ReceiveAndReply<R, S>(String, Func<R, S>, String, String)
  nameWithType: RabbitTemplate.ReceiveAndReply<R, S>(String, Func<R, S>, String, String)
  fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ReceiveAndReply<R, S>(System.String, System.Func<R, S>, System.String, System.String)
  nameWithType.vb: RabbitTemplate.ReceiveAndReply(Of R, S)(String, Func(Of R, S), String, String)
  fullName.vb: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ReceiveAndReply(Of R, S)(System.String, System.Func(Of R, S), System.String, System.String)
  name.vb: ReceiveAndReply(Of R, S)(String, Func(Of R, S), String, String)
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ReceiveAndReply``2(System.String,System.Func{``0,``1},System.String,System.String)
    name: ReceiveAndReply<R, S>
    nameWithType: RabbitTemplate.ReceiveAndReply<R, S>
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ReceiveAndReply<R, S>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: R
    nameWithType: R
    fullName: R
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: S
    nameWithType: S
    fullName: S
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ReceiveAndReply``2(System.String,System.Func{``0,``1},System.String,System.String)
    name: ReceiveAndReply(Of R, S)
    nameWithType: RabbitTemplate.ReceiveAndReply(Of R, S)
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ReceiveAndReply(Of R, S)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: R
    nameWithType: R
    fullName: R
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: S
    nameWithType: S
    fullName: S
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ReceiveAndReply``2(System.Func{``0,``1},System.Func{Steeltoe.Messaging.IMessage,``1,Steeltoe.Messaging.RabbitMQ.Core.Address})
  commentId: M:Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ReceiveAndReply``2(System.Func{``0,``1},System.Func{Steeltoe.Messaging.IMessage,``1,Steeltoe.Messaging.RabbitMQ.Core.Address})
  isExternal: true
  name: ReceiveAndReply<R, S>(Func<R, S>, Func<IMessage, S, Address>)
  nameWithType: RabbitTemplate.ReceiveAndReply<R, S>(Func<R, S>, Func<IMessage, S, Address>)
  fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ReceiveAndReply<R, S>(System.Func<R, S>, System.Func<Steeltoe.Messaging.IMessage, S, Steeltoe.Messaging.RabbitMQ.Core.Address>)
  nameWithType.vb: RabbitTemplate.ReceiveAndReply(Of R, S)(Func(Of R, S), Func(Of IMessage, S, Address))
  fullName.vb: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ReceiveAndReply(Of R, S)(System.Func(Of R, S), System.Func(Of Steeltoe.Messaging.IMessage, S, Steeltoe.Messaging.RabbitMQ.Core.Address))
  name.vb: ReceiveAndReply(Of R, S)(Func(Of R, S), Func(Of IMessage, S, Address))
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ReceiveAndReply``2(System.Func{``0,``1},System.Func{Steeltoe.Messaging.IMessage,``1,Steeltoe.Messaging.RabbitMQ.Core.Address})
    name: ReceiveAndReply<R, S>
    nameWithType: RabbitTemplate.ReceiveAndReply<R, S>
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ReceiveAndReply<R, S>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: R
    nameWithType: R
    fullName: R
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: S
    nameWithType: S
    fullName: S
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: S
    nameWithType: S
    fullName: S
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.RabbitMQ.Core.Address
    name: Address
    nameWithType: Address
    fullName: Steeltoe.Messaging.RabbitMQ.Core.Address
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ReceiveAndReply``2(System.Func{``0,``1},System.Func{Steeltoe.Messaging.IMessage,``1,Steeltoe.Messaging.RabbitMQ.Core.Address})
    name: ReceiveAndReply(Of R, S)
    nameWithType: RabbitTemplate.ReceiveAndReply(Of R, S)
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ReceiveAndReply(Of R, S)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: R
    nameWithType: R
    fullName: R
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: S
    nameWithType: S
    fullName: S
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: S
    nameWithType: S
    fullName: S
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.RabbitMQ.Core.Address
    name: Address
    nameWithType: Address
    fullName: Steeltoe.Messaging.RabbitMQ.Core.Address
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ReceiveAndReply``2(System.String,System.Func{``0,``1},System.Func{Steeltoe.Messaging.IMessage,``1,Steeltoe.Messaging.RabbitMQ.Core.Address})
  commentId: M:Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ReceiveAndReply``2(System.String,System.Func{``0,``1},System.Func{Steeltoe.Messaging.IMessage,``1,Steeltoe.Messaging.RabbitMQ.Core.Address})
  isExternal: true
  name: ReceiveAndReply<R, S>(String, Func<R, S>, Func<IMessage, S, Address>)
  nameWithType: RabbitTemplate.ReceiveAndReply<R, S>(String, Func<R, S>, Func<IMessage, S, Address>)
  fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ReceiveAndReply<R, S>(System.String, System.Func<R, S>, System.Func<Steeltoe.Messaging.IMessage, S, Steeltoe.Messaging.RabbitMQ.Core.Address>)
  nameWithType.vb: RabbitTemplate.ReceiveAndReply(Of R, S)(String, Func(Of R, S), Func(Of IMessage, S, Address))
  fullName.vb: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ReceiveAndReply(Of R, S)(System.String, System.Func(Of R, S), System.Func(Of Steeltoe.Messaging.IMessage, S, Steeltoe.Messaging.RabbitMQ.Core.Address))
  name.vb: ReceiveAndReply(Of R, S)(String, Func(Of R, S), Func(Of IMessage, S, Address))
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ReceiveAndReply``2(System.String,System.Func{``0,``1},System.Func{Steeltoe.Messaging.IMessage,``1,Steeltoe.Messaging.RabbitMQ.Core.Address})
    name: ReceiveAndReply<R, S>
    nameWithType: RabbitTemplate.ReceiveAndReply<R, S>
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ReceiveAndReply<R, S>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: R
    nameWithType: R
    fullName: R
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: S
    nameWithType: S
    fullName: S
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: S
    nameWithType: S
    fullName: S
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.RabbitMQ.Core.Address
    name: Address
    nameWithType: Address
    fullName: Steeltoe.Messaging.RabbitMQ.Core.Address
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ReceiveAndReply``2(System.String,System.Func{``0,``1},System.Func{Steeltoe.Messaging.IMessage,``1,Steeltoe.Messaging.RabbitMQ.Core.Address})
    name: ReceiveAndReply(Of R, S)
    nameWithType: RabbitTemplate.ReceiveAndReply(Of R, S)
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.ReceiveAndReply(Of R, S)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: R
    nameWithType: R
    fullName: R
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: S
    nameWithType: S
    fullName: S
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: S
    nameWithType: S
    fullName: S
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.RabbitMQ.Core.Address
    name: Address
    nameWithType: Address
    fullName: Steeltoe.Messaging.RabbitMQ.Core.Address
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.Execute``1(System.Func{RabbitMQ.Client.IModel,``0})
  commentId: M:Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.Execute``1(System.Func{RabbitMQ.Client.IModel,``0})
  isExternal: true
  name: Execute<T>(Func<IModel, T>)
  nameWithType: RabbitTemplate.Execute<T>(Func<IModel, T>)
  fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.Execute<T>(System.Func<RabbitMQ.Client.IModel, T>)
  nameWithType.vb: RabbitTemplate.Execute(Of T)(Func(Of IModel, T))
  fullName.vb: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.Execute(Of T)(System.Func(Of RabbitMQ.Client.IModel, T))
  name.vb: Execute(Of T)(Func(Of IModel, T))
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.Execute``1(System.Func{RabbitMQ.Client.IModel,``0})
    name: Execute<T>
    nameWithType: RabbitTemplate.Execute<T>
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.Execute<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: RabbitMQ.Client.IModel
    name: IModel
    nameWithType: IModel
    fullName: RabbitMQ.Client.IModel
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.Execute``1(System.Func{RabbitMQ.Client.IModel,``0})
    name: Execute(Of T)
    nameWithType: RabbitTemplate.Execute(Of T)
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.Execute(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: RabbitMQ.Client.IModel
    name: IModel
    nameWithType: IModel
    fullName: RabbitMQ.Client.IModel
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.Invoke``1(System.Func{Steeltoe.Messaging.RabbitMQ.Core.IRabbitTemplate,``0})
  commentId: M:Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.Invoke``1(System.Func{Steeltoe.Messaging.RabbitMQ.Core.IRabbitTemplate,``0})
  isExternal: true
  name: Invoke<T>(Func<IRabbitTemplate, T>)
  nameWithType: RabbitTemplate.Invoke<T>(Func<IRabbitTemplate, T>)
  fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.Invoke<T>(System.Func<Steeltoe.Messaging.RabbitMQ.Core.IRabbitTemplate, T>)
  nameWithType.vb: RabbitTemplate.Invoke(Of T)(Func(Of IRabbitTemplate, T))
  fullName.vb: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.Invoke(Of T)(System.Func(Of Steeltoe.Messaging.RabbitMQ.Core.IRabbitTemplate, T))
  name.vb: Invoke(Of T)(Func(Of IRabbitTemplate, T))
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.Invoke``1(System.Func{Steeltoe.Messaging.RabbitMQ.Core.IRabbitTemplate,``0})
    name: Invoke<T>
    nameWithType: RabbitTemplate.Invoke<T>
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.Invoke<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Steeltoe.Messaging.RabbitMQ.Core.IRabbitTemplate
    name: IRabbitTemplate
    nameWithType: IRabbitTemplate
    fullName: Steeltoe.Messaging.RabbitMQ.Core.IRabbitTemplate
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.Invoke``1(System.Func{Steeltoe.Messaging.RabbitMQ.Core.IRabbitTemplate,``0})
    name: Invoke(Of T)
    nameWithType: RabbitTemplate.Invoke(Of T)
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.Invoke(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Steeltoe.Messaging.RabbitMQ.Core.IRabbitTemplate
    name: IRabbitTemplate
    nameWithType: IRabbitTemplate
    fullName: Steeltoe.Messaging.RabbitMQ.Core.IRabbitTemplate
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.Invoke``1(System.Func{Steeltoe.Messaging.RabbitMQ.Core.IRabbitTemplate,``0},System.Action{System.Object,RabbitMQ.Client.Events.BasicAckEventArgs},System.Action{System.Object,RabbitMQ.Client.Events.BasicNackEventArgs})
  commentId: M:Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.Invoke``1(System.Func{Steeltoe.Messaging.RabbitMQ.Core.IRabbitTemplate,``0},System.Action{System.Object,RabbitMQ.Client.Events.BasicAckEventArgs},System.Action{System.Object,RabbitMQ.Client.Events.BasicNackEventArgs})
  isExternal: true
  name: Invoke<T>(Func<IRabbitTemplate, T>, Action<Object, BasicAckEventArgs>, Action<Object, BasicNackEventArgs>)
  nameWithType: RabbitTemplate.Invoke<T>(Func<IRabbitTemplate, T>, Action<Object, BasicAckEventArgs>, Action<Object, BasicNackEventArgs>)
  fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.Invoke<T>(System.Func<Steeltoe.Messaging.RabbitMQ.Core.IRabbitTemplate, T>, System.Action<System.Object, RabbitMQ.Client.Events.BasicAckEventArgs>, System.Action<System.Object, RabbitMQ.Client.Events.BasicNackEventArgs>)
  nameWithType.vb: RabbitTemplate.Invoke(Of T)(Func(Of IRabbitTemplate, T), Action(Of Object, BasicAckEventArgs), Action(Of Object, BasicNackEventArgs))
  fullName.vb: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.Invoke(Of T)(System.Func(Of Steeltoe.Messaging.RabbitMQ.Core.IRabbitTemplate, T), System.Action(Of System.Object, RabbitMQ.Client.Events.BasicAckEventArgs), System.Action(Of System.Object, RabbitMQ.Client.Events.BasicNackEventArgs))
  name.vb: Invoke(Of T)(Func(Of IRabbitTemplate, T), Action(Of Object, BasicAckEventArgs), Action(Of Object, BasicNackEventArgs))
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.Invoke``1(System.Func{Steeltoe.Messaging.RabbitMQ.Core.IRabbitTemplate,``0},System.Action{System.Object,RabbitMQ.Client.Events.BasicAckEventArgs},System.Action{System.Object,RabbitMQ.Client.Events.BasicNackEventArgs})
    name: Invoke<T>
    nameWithType: RabbitTemplate.Invoke<T>
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.Invoke<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Steeltoe.Messaging.RabbitMQ.Core.IRabbitTemplate
    name: IRabbitTemplate
    nameWithType: IRabbitTemplate
    fullName: Steeltoe.Messaging.RabbitMQ.Core.IRabbitTemplate
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`2
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: RabbitMQ.Client.Events.BasicAckEventArgs
    name: BasicAckEventArgs
    nameWithType: BasicAckEventArgs
    fullName: RabbitMQ.Client.Events.BasicAckEventArgs
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`2
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: RabbitMQ.Client.Events.BasicNackEventArgs
    name: BasicNackEventArgs
    nameWithType: BasicNackEventArgs
    fullName: RabbitMQ.Client.Events.BasicNackEventArgs
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.Invoke``1(System.Func{Steeltoe.Messaging.RabbitMQ.Core.IRabbitTemplate,``0},System.Action{System.Object,RabbitMQ.Client.Events.BasicAckEventArgs},System.Action{System.Object,RabbitMQ.Client.Events.BasicNackEventArgs})
    name: Invoke(Of T)
    nameWithType: RabbitTemplate.Invoke(Of T)
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.Invoke(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Steeltoe.Messaging.RabbitMQ.Core.IRabbitTemplate
    name: IRabbitTemplate
    nameWithType: IRabbitTemplate
    fullName: Steeltoe.Messaging.RabbitMQ.Core.IRabbitTemplate
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`2
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: RabbitMQ.Client.Events.BasicAckEventArgs
    name: BasicAckEventArgs
    nameWithType: BasicAckEventArgs
    fullName: RabbitMQ.Client.Events.BasicAckEventArgs
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`2
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: RabbitMQ.Client.Events.BasicNackEventArgs
    name: BasicNackEventArgs
    nameWithType: BasicNackEventArgs
    fullName: RabbitMQ.Client.Events.BasicNackEventArgs
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Core.AbstractMessagingTemplate`1.ConvertSendAndReceiveAsync``1(System.Object,System.Threading.CancellationToken)
  commentId: M:Steeltoe.Messaging.Core.AbstractMessagingTemplate`1.ConvertSendAndReceiveAsync``1(System.Object,System.Threading.CancellationToken)
  isExternal: true
  name: ConvertSendAndReceiveAsync<T>(Object, CancellationToken)
  nameWithType: AbstractMessagingTemplate<D>.ConvertSendAndReceiveAsync<T>(Object, CancellationToken)
  fullName: Steeltoe.Messaging.Core.AbstractMessagingTemplate<D>.ConvertSendAndReceiveAsync<T>(System.Object, System.Threading.CancellationToken)
  nameWithType.vb: AbstractMessagingTemplate(Of D).ConvertSendAndReceiveAsync(Of T)(Object, CancellationToken)
  fullName.vb: Steeltoe.Messaging.Core.AbstractMessagingTemplate(Of D).ConvertSendAndReceiveAsync(Of T)(System.Object, System.Threading.CancellationToken)
  name.vb: ConvertSendAndReceiveAsync(Of T)(Object, CancellationToken)
  spec.csharp:
  - uid: Steeltoe.Messaging.Core.AbstractMessagingTemplate`1.ConvertSendAndReceiveAsync``1(System.Object,System.Threading.CancellationToken)
    name: ConvertSendAndReceiveAsync<T>
    nameWithType: AbstractMessagingTemplate<D>.ConvertSendAndReceiveAsync<T>
    fullName: Steeltoe.Messaging.Core.AbstractMessagingTemplate<D>.ConvertSendAndReceiveAsync<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Core.AbstractMessagingTemplate`1.ConvertSendAndReceiveAsync``1(System.Object,System.Threading.CancellationToken)
    name: ConvertSendAndReceiveAsync(Of T)
    nameWithType: AbstractMessagingTemplate(Of D).ConvertSendAndReceiveAsync(Of T)
    fullName: Steeltoe.Messaging.Core.AbstractMessagingTemplate(Of D).ConvertSendAndReceiveAsync(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Core.AbstractMessagingTemplate`1.ConvertSendAndReceiveAsync``1(`0,System.Object,System.Threading.CancellationToken)
  commentId: M:Steeltoe.Messaging.Core.AbstractMessagingTemplate`1.ConvertSendAndReceiveAsync``1(`0,System.Object,System.Threading.CancellationToken)
  isExternal: true
  name: ConvertSendAndReceiveAsync<T>(D, Object, CancellationToken)
  nameWithType: AbstractMessagingTemplate<D>.ConvertSendAndReceiveAsync<T>(D, Object, CancellationToken)
  fullName: Steeltoe.Messaging.Core.AbstractMessagingTemplate<D>.ConvertSendAndReceiveAsync<T>(D, System.Object, System.Threading.CancellationToken)
  nameWithType.vb: AbstractMessagingTemplate(Of D).ConvertSendAndReceiveAsync(Of T)(D, Object, CancellationToken)
  fullName.vb: Steeltoe.Messaging.Core.AbstractMessagingTemplate(Of D).ConvertSendAndReceiveAsync(Of T)(D, System.Object, System.Threading.CancellationToken)
  name.vb: ConvertSendAndReceiveAsync(Of T)(D, Object, CancellationToken)
  spec.csharp:
  - uid: Steeltoe.Messaging.Core.AbstractMessagingTemplate`1.ConvertSendAndReceiveAsync``1(`0,System.Object,System.Threading.CancellationToken)
    name: ConvertSendAndReceiveAsync<T>
    nameWithType: AbstractMessagingTemplate<D>.ConvertSendAndReceiveAsync<T>
    fullName: Steeltoe.Messaging.Core.AbstractMessagingTemplate<D>.ConvertSendAndReceiveAsync<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: D
    nameWithType: D
    fullName: D
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Core.AbstractMessagingTemplate`1.ConvertSendAndReceiveAsync``1(`0,System.Object,System.Threading.CancellationToken)
    name: ConvertSendAndReceiveAsync(Of T)
    nameWithType: AbstractMessagingTemplate(Of D).ConvertSendAndReceiveAsync(Of T)
    fullName: Steeltoe.Messaging.Core.AbstractMessagingTemplate(Of D).ConvertSendAndReceiveAsync(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: D
    nameWithType: D
    fullName: D
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Core.AbstractMessagingTemplate`1.ConvertSendAndReceiveAsync``1(`0,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object},System.Threading.CancellationToken)
  commentId: M:Steeltoe.Messaging.Core.AbstractMessagingTemplate`1.ConvertSendAndReceiveAsync``1(`0,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object},System.Threading.CancellationToken)
  isExternal: true
  name: ConvertSendAndReceiveAsync<T>(D, Object, IDictionary<String, Object>, CancellationToken)
  nameWithType: AbstractMessagingTemplate<D>.ConvertSendAndReceiveAsync<T>(D, Object, IDictionary<String, Object>, CancellationToken)
  fullName: Steeltoe.Messaging.Core.AbstractMessagingTemplate<D>.ConvertSendAndReceiveAsync<T>(D, System.Object, System.Collections.Generic.IDictionary<System.String, System.Object>, System.Threading.CancellationToken)
  nameWithType.vb: AbstractMessagingTemplate(Of D).ConvertSendAndReceiveAsync(Of T)(D, Object, IDictionary(Of String, Object), CancellationToken)
  fullName.vb: Steeltoe.Messaging.Core.AbstractMessagingTemplate(Of D).ConvertSendAndReceiveAsync(Of T)(D, System.Object, System.Collections.Generic.IDictionary(Of System.String, System.Object), System.Threading.CancellationToken)
  name.vb: ConvertSendAndReceiveAsync(Of T)(D, Object, IDictionary(Of String, Object), CancellationToken)
  spec.csharp:
  - uid: Steeltoe.Messaging.Core.AbstractMessagingTemplate`1.ConvertSendAndReceiveAsync``1(`0,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object},System.Threading.CancellationToken)
    name: ConvertSendAndReceiveAsync<T>
    nameWithType: AbstractMessagingTemplate<D>.ConvertSendAndReceiveAsync<T>
    fullName: Steeltoe.Messaging.Core.AbstractMessagingTemplate<D>.ConvertSendAndReceiveAsync<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: D
    nameWithType: D
    fullName: D
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Core.AbstractMessagingTemplate`1.ConvertSendAndReceiveAsync``1(`0,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object},System.Threading.CancellationToken)
    name: ConvertSendAndReceiveAsync(Of T)
    nameWithType: AbstractMessagingTemplate(Of D).ConvertSendAndReceiveAsync(Of T)
    fullName: Steeltoe.Messaging.Core.AbstractMessagingTemplate(Of D).ConvertSendAndReceiveAsync(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: D
    nameWithType: D
    fullName: D
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Core.AbstractMessagingTemplate`1.ConvertSendAndReceiveAsync``1(System.Object,Steeltoe.Messaging.Core.IMessagePostProcessor,System.Threading.CancellationToken)
  commentId: M:Steeltoe.Messaging.Core.AbstractMessagingTemplate`1.ConvertSendAndReceiveAsync``1(System.Object,Steeltoe.Messaging.Core.IMessagePostProcessor,System.Threading.CancellationToken)
  isExternal: true
  name: ConvertSendAndReceiveAsync<T>(Object, IMessagePostProcessor, CancellationToken)
  nameWithType: AbstractMessagingTemplate<D>.ConvertSendAndReceiveAsync<T>(Object, IMessagePostProcessor, CancellationToken)
  fullName: Steeltoe.Messaging.Core.AbstractMessagingTemplate<D>.ConvertSendAndReceiveAsync<T>(System.Object, Steeltoe.Messaging.Core.IMessagePostProcessor, System.Threading.CancellationToken)
  nameWithType.vb: AbstractMessagingTemplate(Of D).ConvertSendAndReceiveAsync(Of T)(Object, IMessagePostProcessor, CancellationToken)
  fullName.vb: Steeltoe.Messaging.Core.AbstractMessagingTemplate(Of D).ConvertSendAndReceiveAsync(Of T)(System.Object, Steeltoe.Messaging.Core.IMessagePostProcessor, System.Threading.CancellationToken)
  name.vb: ConvertSendAndReceiveAsync(Of T)(Object, IMessagePostProcessor, CancellationToken)
  spec.csharp:
  - uid: Steeltoe.Messaging.Core.AbstractMessagingTemplate`1.ConvertSendAndReceiveAsync``1(System.Object,Steeltoe.Messaging.Core.IMessagePostProcessor,System.Threading.CancellationToken)
    name: ConvertSendAndReceiveAsync<T>
    nameWithType: AbstractMessagingTemplate<D>.ConvertSendAndReceiveAsync<T>
    fullName: Steeltoe.Messaging.Core.AbstractMessagingTemplate<D>.ConvertSendAndReceiveAsync<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.Core.IMessagePostProcessor
    name: IMessagePostProcessor
    nameWithType: IMessagePostProcessor
    fullName: Steeltoe.Messaging.Core.IMessagePostProcessor
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Core.AbstractMessagingTemplate`1.ConvertSendAndReceiveAsync``1(System.Object,Steeltoe.Messaging.Core.IMessagePostProcessor,System.Threading.CancellationToken)
    name: ConvertSendAndReceiveAsync(Of T)
    nameWithType: AbstractMessagingTemplate(Of D).ConvertSendAndReceiveAsync(Of T)
    fullName: Steeltoe.Messaging.Core.AbstractMessagingTemplate(Of D).ConvertSendAndReceiveAsync(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.Core.IMessagePostProcessor
    name: IMessagePostProcessor
    nameWithType: IMessagePostProcessor
    fullName: Steeltoe.Messaging.Core.IMessagePostProcessor
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Core.AbstractMessagingTemplate`1.ConvertSendAndReceiveAsync``1(`0,System.Object,Steeltoe.Messaging.Core.IMessagePostProcessor,System.Threading.CancellationToken)
  commentId: M:Steeltoe.Messaging.Core.AbstractMessagingTemplate`1.ConvertSendAndReceiveAsync``1(`0,System.Object,Steeltoe.Messaging.Core.IMessagePostProcessor,System.Threading.CancellationToken)
  isExternal: true
  name: ConvertSendAndReceiveAsync<T>(D, Object, IMessagePostProcessor, CancellationToken)
  nameWithType: AbstractMessagingTemplate<D>.ConvertSendAndReceiveAsync<T>(D, Object, IMessagePostProcessor, CancellationToken)
  fullName: Steeltoe.Messaging.Core.AbstractMessagingTemplate<D>.ConvertSendAndReceiveAsync<T>(D, System.Object, Steeltoe.Messaging.Core.IMessagePostProcessor, System.Threading.CancellationToken)
  nameWithType.vb: AbstractMessagingTemplate(Of D).ConvertSendAndReceiveAsync(Of T)(D, Object, IMessagePostProcessor, CancellationToken)
  fullName.vb: Steeltoe.Messaging.Core.AbstractMessagingTemplate(Of D).ConvertSendAndReceiveAsync(Of T)(D, System.Object, Steeltoe.Messaging.Core.IMessagePostProcessor, System.Threading.CancellationToken)
  name.vb: ConvertSendAndReceiveAsync(Of T)(D, Object, IMessagePostProcessor, CancellationToken)
  spec.csharp:
  - uid: Steeltoe.Messaging.Core.AbstractMessagingTemplate`1.ConvertSendAndReceiveAsync``1(`0,System.Object,Steeltoe.Messaging.Core.IMessagePostProcessor,System.Threading.CancellationToken)
    name: ConvertSendAndReceiveAsync<T>
    nameWithType: AbstractMessagingTemplate<D>.ConvertSendAndReceiveAsync<T>
    fullName: Steeltoe.Messaging.Core.AbstractMessagingTemplate<D>.ConvertSendAndReceiveAsync<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: D
    nameWithType: D
    fullName: D
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.Core.IMessagePostProcessor
    name: IMessagePostProcessor
    nameWithType: IMessagePostProcessor
    fullName: Steeltoe.Messaging.Core.IMessagePostProcessor
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Core.AbstractMessagingTemplate`1.ConvertSendAndReceiveAsync``1(`0,System.Object,Steeltoe.Messaging.Core.IMessagePostProcessor,System.Threading.CancellationToken)
    name: ConvertSendAndReceiveAsync(Of T)
    nameWithType: AbstractMessagingTemplate(Of D).ConvertSendAndReceiveAsync(Of T)
    fullName: Steeltoe.Messaging.Core.AbstractMessagingTemplate(Of D).ConvertSendAndReceiveAsync(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: D
    nameWithType: D
    fullName: D
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.Core.IMessagePostProcessor
    name: IMessagePostProcessor
    nameWithType: IMessagePostProcessor
    fullName: Steeltoe.Messaging.Core.IMessagePostProcessor
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Core.AbstractMessagingTemplate`1.ConvertSendAndReceiveAsync``1(`0,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object},Steeltoe.Messaging.Core.IMessagePostProcessor,System.Threading.CancellationToken)
  commentId: M:Steeltoe.Messaging.Core.AbstractMessagingTemplate`1.ConvertSendAndReceiveAsync``1(`0,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object},Steeltoe.Messaging.Core.IMessagePostProcessor,System.Threading.CancellationToken)
  isExternal: true
  name: ConvertSendAndReceiveAsync<T>(D, Object, IDictionary<String, Object>, IMessagePostProcessor, CancellationToken)
  nameWithType: AbstractMessagingTemplate<D>.ConvertSendAndReceiveAsync<T>(D, Object, IDictionary<String, Object>, IMessagePostProcessor, CancellationToken)
  fullName: Steeltoe.Messaging.Core.AbstractMessagingTemplate<D>.ConvertSendAndReceiveAsync<T>(D, System.Object, System.Collections.Generic.IDictionary<System.String, System.Object>, Steeltoe.Messaging.Core.IMessagePostProcessor, System.Threading.CancellationToken)
  nameWithType.vb: AbstractMessagingTemplate(Of D).ConvertSendAndReceiveAsync(Of T)(D, Object, IDictionary(Of String, Object), IMessagePostProcessor, CancellationToken)
  fullName.vb: Steeltoe.Messaging.Core.AbstractMessagingTemplate(Of D).ConvertSendAndReceiveAsync(Of T)(D, System.Object, System.Collections.Generic.IDictionary(Of System.String, System.Object), Steeltoe.Messaging.Core.IMessagePostProcessor, System.Threading.CancellationToken)
  name.vb: ConvertSendAndReceiveAsync(Of T)(D, Object, IDictionary(Of String, Object), IMessagePostProcessor, CancellationToken)
  spec.csharp:
  - uid: Steeltoe.Messaging.Core.AbstractMessagingTemplate`1.ConvertSendAndReceiveAsync``1(`0,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object},Steeltoe.Messaging.Core.IMessagePostProcessor,System.Threading.CancellationToken)
    name: ConvertSendAndReceiveAsync<T>
    nameWithType: AbstractMessagingTemplate<D>.ConvertSendAndReceiveAsync<T>
    fullName: Steeltoe.Messaging.Core.AbstractMessagingTemplate<D>.ConvertSendAndReceiveAsync<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: D
    nameWithType: D
    fullName: D
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.Core.IMessagePostProcessor
    name: IMessagePostProcessor
    nameWithType: IMessagePostProcessor
    fullName: Steeltoe.Messaging.Core.IMessagePostProcessor
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Core.AbstractMessagingTemplate`1.ConvertSendAndReceiveAsync``1(`0,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object},Steeltoe.Messaging.Core.IMessagePostProcessor,System.Threading.CancellationToken)
    name: ConvertSendAndReceiveAsync(Of T)
    nameWithType: AbstractMessagingTemplate(Of D).ConvertSendAndReceiveAsync(Of T)
    fullName: Steeltoe.Messaging.Core.AbstractMessagingTemplate(Of D).ConvertSendAndReceiveAsync(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: D
    nameWithType: D
    fullName: D
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.Core.IMessagePostProcessor
    name: IMessagePostProcessor
    nameWithType: IMessagePostProcessor
    fullName: Steeltoe.Messaging.Core.IMessagePostProcessor
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Core.AbstractMessagingTemplate`1.SendAndReceiveAsync(Steeltoe.Messaging.IMessage,System.Threading.CancellationToken)
  commentId: M:Steeltoe.Messaging.Core.AbstractMessagingTemplate`1.SendAndReceiveAsync(Steeltoe.Messaging.IMessage,System.Threading.CancellationToken)
  isExternal: true
  name: SendAndReceiveAsync(IMessage, CancellationToken)
  nameWithType: AbstractMessagingTemplate<D>.SendAndReceiveAsync(IMessage, CancellationToken)
  fullName: Steeltoe.Messaging.Core.AbstractMessagingTemplate<D>.SendAndReceiveAsync(Steeltoe.Messaging.IMessage, System.Threading.CancellationToken)
  nameWithType.vb: AbstractMessagingTemplate(Of D).SendAndReceiveAsync(IMessage, CancellationToken)
  fullName.vb: Steeltoe.Messaging.Core.AbstractMessagingTemplate(Of D).SendAndReceiveAsync(Steeltoe.Messaging.IMessage, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Steeltoe.Messaging.Core.AbstractMessagingTemplate`1.SendAndReceiveAsync(Steeltoe.Messaging.IMessage,System.Threading.CancellationToken)
    name: SendAndReceiveAsync
    nameWithType: AbstractMessagingTemplate<D>.SendAndReceiveAsync
    fullName: Steeltoe.Messaging.Core.AbstractMessagingTemplate<D>.SendAndReceiveAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Core.AbstractMessagingTemplate`1.SendAndReceiveAsync(Steeltoe.Messaging.IMessage,System.Threading.CancellationToken)
    name: SendAndReceiveAsync
    nameWithType: AbstractMessagingTemplate(Of D).SendAndReceiveAsync
    fullName: Steeltoe.Messaging.Core.AbstractMessagingTemplate(Of D).SendAndReceiveAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Core.AbstractMessagingTemplate`1.SendAndReceiveAsync(`0,Steeltoe.Messaging.IMessage,System.Threading.CancellationToken)
  commentId: M:Steeltoe.Messaging.Core.AbstractMessagingTemplate`1.SendAndReceiveAsync(`0,Steeltoe.Messaging.IMessage,System.Threading.CancellationToken)
  isExternal: true
  name: SendAndReceiveAsync(D, IMessage, CancellationToken)
  nameWithType: AbstractMessagingTemplate<D>.SendAndReceiveAsync(D, IMessage, CancellationToken)
  fullName: Steeltoe.Messaging.Core.AbstractMessagingTemplate<D>.SendAndReceiveAsync(D, Steeltoe.Messaging.IMessage, System.Threading.CancellationToken)
  nameWithType.vb: AbstractMessagingTemplate(Of D).SendAndReceiveAsync(D, IMessage, CancellationToken)
  fullName.vb: Steeltoe.Messaging.Core.AbstractMessagingTemplate(Of D).SendAndReceiveAsync(D, Steeltoe.Messaging.IMessage, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Steeltoe.Messaging.Core.AbstractMessagingTemplate`1.SendAndReceiveAsync(`0,Steeltoe.Messaging.IMessage,System.Threading.CancellationToken)
    name: SendAndReceiveAsync
    nameWithType: AbstractMessagingTemplate<D>.SendAndReceiveAsync
    fullName: Steeltoe.Messaging.Core.AbstractMessagingTemplate<D>.SendAndReceiveAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: D
    nameWithType: D
    fullName: D
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Core.AbstractMessagingTemplate`1.SendAndReceiveAsync(`0,Steeltoe.Messaging.IMessage,System.Threading.CancellationToken)
    name: SendAndReceiveAsync
    nameWithType: AbstractMessagingTemplate(Of D).SendAndReceiveAsync
    fullName: Steeltoe.Messaging.Core.AbstractMessagingTemplate(Of D).SendAndReceiveAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: D
    nameWithType: D
    fullName: D
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Core.AbstractMessagingTemplate`1.ConvertSendAndReceive``1(System.Object)
  commentId: M:Steeltoe.Messaging.Core.AbstractMessagingTemplate`1.ConvertSendAndReceive``1(System.Object)
  isExternal: true
  name: ConvertSendAndReceive<T>(Object)
  nameWithType: AbstractMessagingTemplate<D>.ConvertSendAndReceive<T>(Object)
  fullName: Steeltoe.Messaging.Core.AbstractMessagingTemplate<D>.ConvertSendAndReceive<T>(System.Object)
  nameWithType.vb: AbstractMessagingTemplate(Of D).ConvertSendAndReceive(Of T)(Object)
  fullName.vb: Steeltoe.Messaging.Core.AbstractMessagingTemplate(Of D).ConvertSendAndReceive(Of T)(System.Object)
  name.vb: ConvertSendAndReceive(Of T)(Object)
  spec.csharp:
  - uid: Steeltoe.Messaging.Core.AbstractMessagingTemplate`1.ConvertSendAndReceive``1(System.Object)
    name: ConvertSendAndReceive<T>
    nameWithType: AbstractMessagingTemplate<D>.ConvertSendAndReceive<T>
    fullName: Steeltoe.Messaging.Core.AbstractMessagingTemplate<D>.ConvertSendAndReceive<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Core.AbstractMessagingTemplate`1.ConvertSendAndReceive``1(System.Object)
    name: ConvertSendAndReceive(Of T)
    nameWithType: AbstractMessagingTemplate(Of D).ConvertSendAndReceive(Of T)
    fullName: Steeltoe.Messaging.Core.AbstractMessagingTemplate(Of D).ConvertSendAndReceive(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Core.AbstractMessagingTemplate`1.ConvertSendAndReceive``1(`0,System.Object)
  commentId: M:Steeltoe.Messaging.Core.AbstractMessagingTemplate`1.ConvertSendAndReceive``1(`0,System.Object)
  isExternal: true
  name: ConvertSendAndReceive<T>(D, Object)
  nameWithType: AbstractMessagingTemplate<D>.ConvertSendAndReceive<T>(D, Object)
  fullName: Steeltoe.Messaging.Core.AbstractMessagingTemplate<D>.ConvertSendAndReceive<T>(D, System.Object)
  nameWithType.vb: AbstractMessagingTemplate(Of D).ConvertSendAndReceive(Of T)(D, Object)
  fullName.vb: Steeltoe.Messaging.Core.AbstractMessagingTemplate(Of D).ConvertSendAndReceive(Of T)(D, System.Object)
  name.vb: ConvertSendAndReceive(Of T)(D, Object)
  spec.csharp:
  - uid: Steeltoe.Messaging.Core.AbstractMessagingTemplate`1.ConvertSendAndReceive``1(`0,System.Object)
    name: ConvertSendAndReceive<T>
    nameWithType: AbstractMessagingTemplate<D>.ConvertSendAndReceive<T>
    fullName: Steeltoe.Messaging.Core.AbstractMessagingTemplate<D>.ConvertSendAndReceive<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: D
    nameWithType: D
    fullName: D
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Core.AbstractMessagingTemplate`1.ConvertSendAndReceive``1(`0,System.Object)
    name: ConvertSendAndReceive(Of T)
    nameWithType: AbstractMessagingTemplate(Of D).ConvertSendAndReceive(Of T)
    fullName: Steeltoe.Messaging.Core.AbstractMessagingTemplate(Of D).ConvertSendAndReceive(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: D
    nameWithType: D
    fullName: D
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Core.AbstractMessagingTemplate`1.ConvertSendAndReceive``1(`0,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object})
  commentId: M:Steeltoe.Messaging.Core.AbstractMessagingTemplate`1.ConvertSendAndReceive``1(`0,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object})
  isExternal: true
  name: ConvertSendAndReceive<T>(D, Object, IDictionary<String, Object>)
  nameWithType: AbstractMessagingTemplate<D>.ConvertSendAndReceive<T>(D, Object, IDictionary<String, Object>)
  fullName: Steeltoe.Messaging.Core.AbstractMessagingTemplate<D>.ConvertSendAndReceive<T>(D, System.Object, System.Collections.Generic.IDictionary<System.String, System.Object>)
  nameWithType.vb: AbstractMessagingTemplate(Of D).ConvertSendAndReceive(Of T)(D, Object, IDictionary(Of String, Object))
  fullName.vb: Steeltoe.Messaging.Core.AbstractMessagingTemplate(Of D).ConvertSendAndReceive(Of T)(D, System.Object, System.Collections.Generic.IDictionary(Of System.String, System.Object))
  name.vb: ConvertSendAndReceive(Of T)(D, Object, IDictionary(Of String, Object))
  spec.csharp:
  - uid: Steeltoe.Messaging.Core.AbstractMessagingTemplate`1.ConvertSendAndReceive``1(`0,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object})
    name: ConvertSendAndReceive<T>
    nameWithType: AbstractMessagingTemplate<D>.ConvertSendAndReceive<T>
    fullName: Steeltoe.Messaging.Core.AbstractMessagingTemplate<D>.ConvertSendAndReceive<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: D
    nameWithType: D
    fullName: D
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Core.AbstractMessagingTemplate`1.ConvertSendAndReceive``1(`0,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object})
    name: ConvertSendAndReceive(Of T)
    nameWithType: AbstractMessagingTemplate(Of D).ConvertSendAndReceive(Of T)
    fullName: Steeltoe.Messaging.Core.AbstractMessagingTemplate(Of D).ConvertSendAndReceive(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: D
    nameWithType: D
    fullName: D
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Core.AbstractMessagingTemplate`1.ConvertSendAndReceive``1(System.Object,Steeltoe.Messaging.Core.IMessagePostProcessor)
  commentId: M:Steeltoe.Messaging.Core.AbstractMessagingTemplate`1.ConvertSendAndReceive``1(System.Object,Steeltoe.Messaging.Core.IMessagePostProcessor)
  isExternal: true
  name: ConvertSendAndReceive<T>(Object, IMessagePostProcessor)
  nameWithType: AbstractMessagingTemplate<D>.ConvertSendAndReceive<T>(Object, IMessagePostProcessor)
  fullName: Steeltoe.Messaging.Core.AbstractMessagingTemplate<D>.ConvertSendAndReceive<T>(System.Object, Steeltoe.Messaging.Core.IMessagePostProcessor)
  nameWithType.vb: AbstractMessagingTemplate(Of D).ConvertSendAndReceive(Of T)(Object, IMessagePostProcessor)
  fullName.vb: Steeltoe.Messaging.Core.AbstractMessagingTemplate(Of D).ConvertSendAndReceive(Of T)(System.Object, Steeltoe.Messaging.Core.IMessagePostProcessor)
  name.vb: ConvertSendAndReceive(Of T)(Object, IMessagePostProcessor)
  spec.csharp:
  - uid: Steeltoe.Messaging.Core.AbstractMessagingTemplate`1.ConvertSendAndReceive``1(System.Object,Steeltoe.Messaging.Core.IMessagePostProcessor)
    name: ConvertSendAndReceive<T>
    nameWithType: AbstractMessagingTemplate<D>.ConvertSendAndReceive<T>
    fullName: Steeltoe.Messaging.Core.AbstractMessagingTemplate<D>.ConvertSendAndReceive<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.Core.IMessagePostProcessor
    name: IMessagePostProcessor
    nameWithType: IMessagePostProcessor
    fullName: Steeltoe.Messaging.Core.IMessagePostProcessor
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Core.AbstractMessagingTemplate`1.ConvertSendAndReceive``1(System.Object,Steeltoe.Messaging.Core.IMessagePostProcessor)
    name: ConvertSendAndReceive(Of T)
    nameWithType: AbstractMessagingTemplate(Of D).ConvertSendAndReceive(Of T)
    fullName: Steeltoe.Messaging.Core.AbstractMessagingTemplate(Of D).ConvertSendAndReceive(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.Core.IMessagePostProcessor
    name: IMessagePostProcessor
    nameWithType: IMessagePostProcessor
    fullName: Steeltoe.Messaging.Core.IMessagePostProcessor
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Core.AbstractMessagingTemplate`1.ConvertSendAndReceive``1(`0,System.Object,Steeltoe.Messaging.Core.IMessagePostProcessor)
  commentId: M:Steeltoe.Messaging.Core.AbstractMessagingTemplate`1.ConvertSendAndReceive``1(`0,System.Object,Steeltoe.Messaging.Core.IMessagePostProcessor)
  isExternal: true
  name: ConvertSendAndReceive<T>(D, Object, IMessagePostProcessor)
  nameWithType: AbstractMessagingTemplate<D>.ConvertSendAndReceive<T>(D, Object, IMessagePostProcessor)
  fullName: Steeltoe.Messaging.Core.AbstractMessagingTemplate<D>.ConvertSendAndReceive<T>(D, System.Object, Steeltoe.Messaging.Core.IMessagePostProcessor)
  nameWithType.vb: AbstractMessagingTemplate(Of D).ConvertSendAndReceive(Of T)(D, Object, IMessagePostProcessor)
  fullName.vb: Steeltoe.Messaging.Core.AbstractMessagingTemplate(Of D).ConvertSendAndReceive(Of T)(D, System.Object, Steeltoe.Messaging.Core.IMessagePostProcessor)
  name.vb: ConvertSendAndReceive(Of T)(D, Object, IMessagePostProcessor)
  spec.csharp:
  - uid: Steeltoe.Messaging.Core.AbstractMessagingTemplate`1.ConvertSendAndReceive``1(`0,System.Object,Steeltoe.Messaging.Core.IMessagePostProcessor)
    name: ConvertSendAndReceive<T>
    nameWithType: AbstractMessagingTemplate<D>.ConvertSendAndReceive<T>
    fullName: Steeltoe.Messaging.Core.AbstractMessagingTemplate<D>.ConvertSendAndReceive<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: D
    nameWithType: D
    fullName: D
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.Core.IMessagePostProcessor
    name: IMessagePostProcessor
    nameWithType: IMessagePostProcessor
    fullName: Steeltoe.Messaging.Core.IMessagePostProcessor
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Core.AbstractMessagingTemplate`1.ConvertSendAndReceive``1(`0,System.Object,Steeltoe.Messaging.Core.IMessagePostProcessor)
    name: ConvertSendAndReceive(Of T)
    nameWithType: AbstractMessagingTemplate(Of D).ConvertSendAndReceive(Of T)
    fullName: Steeltoe.Messaging.Core.AbstractMessagingTemplate(Of D).ConvertSendAndReceive(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: D
    nameWithType: D
    fullName: D
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.Core.IMessagePostProcessor
    name: IMessagePostProcessor
    nameWithType: IMessagePostProcessor
    fullName: Steeltoe.Messaging.Core.IMessagePostProcessor
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Core.AbstractMessagingTemplate`1.ConvertSendAndReceive``1(`0,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object},Steeltoe.Messaging.Core.IMessagePostProcessor)
  commentId: M:Steeltoe.Messaging.Core.AbstractMessagingTemplate`1.ConvertSendAndReceive``1(`0,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object},Steeltoe.Messaging.Core.IMessagePostProcessor)
  isExternal: true
  name: ConvertSendAndReceive<T>(D, Object, IDictionary<String, Object>, IMessagePostProcessor)
  nameWithType: AbstractMessagingTemplate<D>.ConvertSendAndReceive<T>(D, Object, IDictionary<String, Object>, IMessagePostProcessor)
  fullName: Steeltoe.Messaging.Core.AbstractMessagingTemplate<D>.ConvertSendAndReceive<T>(D, System.Object, System.Collections.Generic.IDictionary<System.String, System.Object>, Steeltoe.Messaging.Core.IMessagePostProcessor)
  nameWithType.vb: AbstractMessagingTemplate(Of D).ConvertSendAndReceive(Of T)(D, Object, IDictionary(Of String, Object), IMessagePostProcessor)
  fullName.vb: Steeltoe.Messaging.Core.AbstractMessagingTemplate(Of D).ConvertSendAndReceive(Of T)(D, System.Object, System.Collections.Generic.IDictionary(Of System.String, System.Object), Steeltoe.Messaging.Core.IMessagePostProcessor)
  name.vb: ConvertSendAndReceive(Of T)(D, Object, IDictionary(Of String, Object), IMessagePostProcessor)
  spec.csharp:
  - uid: Steeltoe.Messaging.Core.AbstractMessagingTemplate`1.ConvertSendAndReceive``1(`0,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object},Steeltoe.Messaging.Core.IMessagePostProcessor)
    name: ConvertSendAndReceive<T>
    nameWithType: AbstractMessagingTemplate<D>.ConvertSendAndReceive<T>
    fullName: Steeltoe.Messaging.Core.AbstractMessagingTemplate<D>.ConvertSendAndReceive<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: D
    nameWithType: D
    fullName: D
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.Core.IMessagePostProcessor
    name: IMessagePostProcessor
    nameWithType: IMessagePostProcessor
    fullName: Steeltoe.Messaging.Core.IMessagePostProcessor
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Core.AbstractMessagingTemplate`1.ConvertSendAndReceive``1(`0,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object},Steeltoe.Messaging.Core.IMessagePostProcessor)
    name: ConvertSendAndReceive(Of T)
    nameWithType: AbstractMessagingTemplate(Of D).ConvertSendAndReceive(Of T)
    fullName: Steeltoe.Messaging.Core.AbstractMessagingTemplate(Of D).ConvertSendAndReceive(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: D
    nameWithType: D
    fullName: D
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.Core.IMessagePostProcessor
    name: IMessagePostProcessor
    nameWithType: IMessagePostProcessor
    fullName: Steeltoe.Messaging.Core.IMessagePostProcessor
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Core.AbstractMessagingTemplate`1.SendAndReceive(Steeltoe.Messaging.IMessage)
  commentId: M:Steeltoe.Messaging.Core.AbstractMessagingTemplate`1.SendAndReceive(Steeltoe.Messaging.IMessage)
  name: SendAndReceive(IMessage)
  nameWithType: AbstractMessagingTemplate<D>.SendAndReceive(IMessage)
  fullName: Steeltoe.Messaging.Core.AbstractMessagingTemplate<D>.SendAndReceive(Steeltoe.Messaging.IMessage)
  nameWithType.vb: AbstractMessagingTemplate(Of D).SendAndReceive(IMessage)
  fullName.vb: Steeltoe.Messaging.Core.AbstractMessagingTemplate(Of D).SendAndReceive(Steeltoe.Messaging.IMessage)
  spec.csharp:
  - uid: Steeltoe.Messaging.Core.AbstractMessagingTemplate`1.SendAndReceive(Steeltoe.Messaging.IMessage)
    name: SendAndReceive
    nameWithType: AbstractMessagingTemplate<D>.SendAndReceive
    fullName: Steeltoe.Messaging.Core.AbstractMessagingTemplate<D>.SendAndReceive
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Core.AbstractMessagingTemplate`1.SendAndReceive(Steeltoe.Messaging.IMessage)
    name: SendAndReceive
    nameWithType: AbstractMessagingTemplate(Of D).SendAndReceive
    fullName: Steeltoe.Messaging.Core.AbstractMessagingTemplate(Of D).SendAndReceive
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Core.AbstractMessagingTemplate`1.SendAndReceive(`0,Steeltoe.Messaging.IMessage)
  commentId: M:Steeltoe.Messaging.Core.AbstractMessagingTemplate`1.SendAndReceive(`0,Steeltoe.Messaging.IMessage)
  name: SendAndReceive(D, IMessage)
  nameWithType: AbstractMessagingTemplate<D>.SendAndReceive(D, IMessage)
  fullName: Steeltoe.Messaging.Core.AbstractMessagingTemplate<D>.SendAndReceive(D, Steeltoe.Messaging.IMessage)
  nameWithType.vb: AbstractMessagingTemplate(Of D).SendAndReceive(D, IMessage)
  fullName.vb: Steeltoe.Messaging.Core.AbstractMessagingTemplate(Of D).SendAndReceive(D, Steeltoe.Messaging.IMessage)
  spec.csharp:
  - uid: Steeltoe.Messaging.Core.AbstractMessagingTemplate`1.SendAndReceive(`0,Steeltoe.Messaging.IMessage)
    name: SendAndReceive
    nameWithType: AbstractMessagingTemplate<D>.SendAndReceive
    fullName: Steeltoe.Messaging.Core.AbstractMessagingTemplate<D>.SendAndReceive
  - name: (
    nameWithType: (
    fullName: (
  - name: D
    nameWithType: D
    fullName: D
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Core.AbstractMessagingTemplate`1.SendAndReceive(`0,Steeltoe.Messaging.IMessage)
    name: SendAndReceive
    nameWithType: AbstractMessagingTemplate(Of D).SendAndReceive
    fullName: Steeltoe.Messaging.Core.AbstractMessagingTemplate(Of D).SendAndReceive
  - name: (
    nameWithType: (
    fullName: (
  - name: D
    nameWithType: D
    fullName: D
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate`1.DefaultReceiveDestination
  commentId: P:Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate`1.DefaultReceiveDestination
  name: DefaultReceiveDestination
  nameWithType: AbstractMessageReceivingTemplate<D>.DefaultReceiveDestination
  fullName: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate<D>.DefaultReceiveDestination
  nameWithType.vb: AbstractMessageReceivingTemplate(Of D).DefaultReceiveDestination
  fullName.vb: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate(Of D).DefaultReceiveDestination
- uid: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate`1.ThrowReceivedExceptions
  commentId: P:Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate`1.ThrowReceivedExceptions
  name: ThrowReceivedExceptions
  nameWithType: AbstractMessageReceivingTemplate<D>.ThrowReceivedExceptions
  fullName: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate<D>.ThrowReceivedExceptions
  nameWithType.vb: AbstractMessageReceivingTemplate(Of D).ThrowReceivedExceptions
  fullName.vb: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate(Of D).ThrowReceivedExceptions
- uid: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate`1.ReceiveAsync(System.Threading.CancellationToken)
  commentId: M:Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate`1.ReceiveAsync(System.Threading.CancellationToken)
  isExternal: true
  name: ReceiveAsync(CancellationToken)
  nameWithType: AbstractMessageReceivingTemplate<D>.ReceiveAsync(CancellationToken)
  fullName: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate<D>.ReceiveAsync(System.Threading.CancellationToken)
  nameWithType.vb: AbstractMessageReceivingTemplate(Of D).ReceiveAsync(CancellationToken)
  fullName.vb: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate(Of D).ReceiveAsync(System.Threading.CancellationToken)
  spec.csharp:
  - uid: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate`1.ReceiveAsync(System.Threading.CancellationToken)
    name: ReceiveAsync
    nameWithType: AbstractMessageReceivingTemplate<D>.ReceiveAsync
    fullName: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate<D>.ReceiveAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate`1.ReceiveAsync(System.Threading.CancellationToken)
    name: ReceiveAsync
    nameWithType: AbstractMessageReceivingTemplate(Of D).ReceiveAsync
    fullName: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate(Of D).ReceiveAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate`1.ReceiveAsync(`0,System.Threading.CancellationToken)
  commentId: M:Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate`1.ReceiveAsync(`0,System.Threading.CancellationToken)
  isExternal: true
  name: ReceiveAsync(D, CancellationToken)
  nameWithType: AbstractMessageReceivingTemplate<D>.ReceiveAsync(D, CancellationToken)
  fullName: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate<D>.ReceiveAsync(D, System.Threading.CancellationToken)
  nameWithType.vb: AbstractMessageReceivingTemplate(Of D).ReceiveAsync(D, CancellationToken)
  fullName.vb: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate(Of D).ReceiveAsync(D, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate`1.ReceiveAsync(`0,System.Threading.CancellationToken)
    name: ReceiveAsync
    nameWithType: AbstractMessageReceivingTemplate<D>.ReceiveAsync
    fullName: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate<D>.ReceiveAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: D
    nameWithType: D
    fullName: D
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate`1.ReceiveAsync(`0,System.Threading.CancellationToken)
    name: ReceiveAsync
    nameWithType: AbstractMessageReceivingTemplate(Of D).ReceiveAsync
    fullName: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate(Of D).ReceiveAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: D
    nameWithType: D
    fullName: D
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate`1.ReceiveAndConvertAsync``1(System.Threading.CancellationToken)
  commentId: M:Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate`1.ReceiveAndConvertAsync``1(System.Threading.CancellationToken)
  isExternal: true
  name: ReceiveAndConvertAsync<T>(CancellationToken)
  nameWithType: AbstractMessageReceivingTemplate<D>.ReceiveAndConvertAsync<T>(CancellationToken)
  fullName: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate<D>.ReceiveAndConvertAsync<T>(System.Threading.CancellationToken)
  nameWithType.vb: AbstractMessageReceivingTemplate(Of D).ReceiveAndConvertAsync(Of T)(CancellationToken)
  fullName.vb: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate(Of D).ReceiveAndConvertAsync(Of T)(System.Threading.CancellationToken)
  name.vb: ReceiveAndConvertAsync(Of T)(CancellationToken)
  spec.csharp:
  - uid: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate`1.ReceiveAndConvertAsync``1(System.Threading.CancellationToken)
    name: ReceiveAndConvertAsync<T>
    nameWithType: AbstractMessageReceivingTemplate<D>.ReceiveAndConvertAsync<T>
    fullName: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate<D>.ReceiveAndConvertAsync<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate`1.ReceiveAndConvertAsync``1(System.Threading.CancellationToken)
    name: ReceiveAndConvertAsync(Of T)
    nameWithType: AbstractMessageReceivingTemplate(Of D).ReceiveAndConvertAsync(Of T)
    fullName: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate(Of D).ReceiveAndConvertAsync(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate`1.ReceiveAndConvertAsync``1(`0,System.Threading.CancellationToken)
  commentId: M:Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate`1.ReceiveAndConvertAsync``1(`0,System.Threading.CancellationToken)
  isExternal: true
  name: ReceiveAndConvertAsync<T>(D, CancellationToken)
  nameWithType: AbstractMessageReceivingTemplate<D>.ReceiveAndConvertAsync<T>(D, CancellationToken)
  fullName: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate<D>.ReceiveAndConvertAsync<T>(D, System.Threading.CancellationToken)
  nameWithType.vb: AbstractMessageReceivingTemplate(Of D).ReceiveAndConvertAsync(Of T)(D, CancellationToken)
  fullName.vb: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate(Of D).ReceiveAndConvertAsync(Of T)(D, System.Threading.CancellationToken)
  name.vb: ReceiveAndConvertAsync(Of T)(D, CancellationToken)
  spec.csharp:
  - uid: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate`1.ReceiveAndConvertAsync``1(`0,System.Threading.CancellationToken)
    name: ReceiveAndConvertAsync<T>
    nameWithType: AbstractMessageReceivingTemplate<D>.ReceiveAndConvertAsync<T>
    fullName: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate<D>.ReceiveAndConvertAsync<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: D
    nameWithType: D
    fullName: D
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate`1.ReceiveAndConvertAsync``1(`0,System.Threading.CancellationToken)
    name: ReceiveAndConvertAsync(Of T)
    nameWithType: AbstractMessageReceivingTemplate(Of D).ReceiveAndConvertAsync(Of T)
    fullName: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate(Of D).ReceiveAndConvertAsync(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: D
    nameWithType: D
    fullName: D
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate`1.Receive
  commentId: M:Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate`1.Receive
  name: Receive()
  nameWithType: AbstractMessageReceivingTemplate<D>.Receive()
  fullName: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate<D>.Receive()
  nameWithType.vb: AbstractMessageReceivingTemplate(Of D).Receive()
  fullName.vb: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate(Of D).Receive()
  spec.csharp:
  - uid: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate`1.Receive
    name: Receive
    nameWithType: AbstractMessageReceivingTemplate<D>.Receive
    fullName: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate<D>.Receive
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate`1.Receive
    name: Receive
    nameWithType: AbstractMessageReceivingTemplate(Of D).Receive
    fullName: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate(Of D).Receive
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate`1.Receive(`0)
  commentId: M:Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate`1.Receive(`0)
  name: Receive(D)
  nameWithType: AbstractMessageReceivingTemplate<D>.Receive(D)
  fullName: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate<D>.Receive(D)
  nameWithType.vb: AbstractMessageReceivingTemplate(Of D).Receive(D)
  fullName.vb: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate(Of D).Receive(D)
  spec.csharp:
  - uid: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate`1.Receive(`0)
    name: Receive
    nameWithType: AbstractMessageReceivingTemplate<D>.Receive
    fullName: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate<D>.Receive
  - name: (
    nameWithType: (
    fullName: (
  - name: D
    nameWithType: D
    fullName: D
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate`1.Receive(`0)
    name: Receive
    nameWithType: AbstractMessageReceivingTemplate(Of D).Receive
    fullName: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate(Of D).Receive
  - name: (
    nameWithType: (
    fullName: (
  - name: D
    nameWithType: D
    fullName: D
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate`1.ReceiveAndConvert``1
  commentId: M:Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate`1.ReceiveAndConvert``1
  name: ReceiveAndConvert<T>()
  nameWithType: AbstractMessageReceivingTemplate<D>.ReceiveAndConvert<T>()
  fullName: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate<D>.ReceiveAndConvert<T>()
  nameWithType.vb: AbstractMessageReceivingTemplate(Of D).ReceiveAndConvert(Of T)()
  fullName.vb: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate(Of D).ReceiveAndConvert(Of T)()
  name.vb: ReceiveAndConvert(Of T)()
  spec.csharp:
  - uid: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate`1.ReceiveAndConvert``1
    name: ReceiveAndConvert<T>
    nameWithType: AbstractMessageReceivingTemplate<D>.ReceiveAndConvert<T>
    fullName: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate<D>.ReceiveAndConvert<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate`1.ReceiveAndConvert``1
    name: ReceiveAndConvert(Of T)
    nameWithType: AbstractMessageReceivingTemplate(Of D).ReceiveAndConvert(Of T)
    fullName: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate(Of D).ReceiveAndConvert(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate`1.ReceiveAndConvert``1(`0)
  commentId: M:Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate`1.ReceiveAndConvert``1(`0)
  name: ReceiveAndConvert<T>(D)
  nameWithType: AbstractMessageReceivingTemplate<D>.ReceiveAndConvert<T>(D)
  fullName: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate<D>.ReceiveAndConvert<T>(D)
  nameWithType.vb: AbstractMessageReceivingTemplate(Of D).ReceiveAndConvert(Of T)(D)
  fullName.vb: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate(Of D).ReceiveAndConvert(Of T)(D)
  name.vb: ReceiveAndConvert(Of T)(D)
  spec.csharp:
  - uid: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate`1.ReceiveAndConvert``1(`0)
    name: ReceiveAndConvert<T>
    nameWithType: AbstractMessageReceivingTemplate<D>.ReceiveAndConvert<T>
    fullName: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate<D>.ReceiveAndConvert<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: D
    nameWithType: D
    fullName: D
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate`1.ReceiveAndConvert``1(`0)
    name: ReceiveAndConvert(Of T)
    nameWithType: AbstractMessageReceivingTemplate(Of D).ReceiveAndConvert(Of T)
    fullName: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate(Of D).ReceiveAndConvert(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: D
    nameWithType: D
    fullName: D
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate`1.RequiredDefaultReceiveDestination
  commentId: P:Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate`1.RequiredDefaultReceiveDestination
  name: RequiredDefaultReceiveDestination
  nameWithType: AbstractMessageReceivingTemplate<D>.RequiredDefaultReceiveDestination
  fullName: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate<D>.RequiredDefaultReceiveDestination
  nameWithType.vb: AbstractMessageReceivingTemplate(Of D).RequiredDefaultReceiveDestination
  fullName.vb: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate(Of D).RequiredDefaultReceiveDestination
- uid: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate`1.DoConvert``1(Steeltoe.Messaging.IMessage)
  commentId: M:Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate`1.DoConvert``1(Steeltoe.Messaging.IMessage)
  name: DoConvert<T>(IMessage)
  nameWithType: AbstractMessageReceivingTemplate<D>.DoConvert<T>(IMessage)
  fullName: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate<D>.DoConvert<T>(Steeltoe.Messaging.IMessage)
  nameWithType.vb: AbstractMessageReceivingTemplate(Of D).DoConvert(Of T)(IMessage)
  fullName.vb: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate(Of D).DoConvert(Of T)(Steeltoe.Messaging.IMessage)
  name.vb: DoConvert(Of T)(IMessage)
  spec.csharp:
  - uid: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate`1.DoConvert``1(Steeltoe.Messaging.IMessage)
    name: DoConvert<T>
    nameWithType: AbstractMessageReceivingTemplate<D>.DoConvert<T>
    fullName: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate<D>.DoConvert<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate`1.DoConvert``1(Steeltoe.Messaging.IMessage)
    name: DoConvert(Of T)
    nameWithType: AbstractMessageReceivingTemplate(Of D).DoConvert(Of T)
    fullName: Steeltoe.Messaging.Core.AbstractMessageReceivingTemplate(Of D).DoConvert(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.CONVERSION_HINT_HEADER
  commentId: F:Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.CONVERSION_HINT_HEADER
  name: CONVERSION_HINT_HEADER
  nameWithType: AbstractMessageSendingTemplate<D>.CONVERSION_HINT_HEADER
  fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate<D>.CONVERSION_HINT_HEADER
  nameWithType.vb: AbstractMessageSendingTemplate(Of D).CONVERSION_HINT_HEADER
  fullName.vb: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate(Of D).CONVERSION_HINT_HEADER
- uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.DefaultSendDestination
  commentId: P:Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.DefaultSendDestination
  name: DefaultSendDestination
  nameWithType: AbstractMessageSendingTemplate<D>.DefaultSendDestination
  fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate<D>.DefaultSendDestination
  nameWithType.vb: AbstractMessageSendingTemplate(Of D).DefaultSendDestination
  fullName.vb: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate(Of D).DefaultSendDestination
- uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.MessageConverter
  commentId: P:Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.MessageConverter
  name: MessageConverter
  nameWithType: AbstractMessageSendingTemplate<D>.MessageConverter
  fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate<D>.MessageConverter
  nameWithType.vb: AbstractMessageSendingTemplate(Of D).MessageConverter
  fullName.vb: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate(Of D).MessageConverter
- uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.ConvertAndSendAsync(System.Object,System.Threading.CancellationToken)
  commentId: M:Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.ConvertAndSendAsync(System.Object,System.Threading.CancellationToken)
  isExternal: true
  name: ConvertAndSendAsync(Object, CancellationToken)
  nameWithType: AbstractMessageSendingTemplate<D>.ConvertAndSendAsync(Object, CancellationToken)
  fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate<D>.ConvertAndSendAsync(System.Object, System.Threading.CancellationToken)
  nameWithType.vb: AbstractMessageSendingTemplate(Of D).ConvertAndSendAsync(Object, CancellationToken)
  fullName.vb: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate(Of D).ConvertAndSendAsync(System.Object, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.ConvertAndSendAsync(System.Object,System.Threading.CancellationToken)
    name: ConvertAndSendAsync
    nameWithType: AbstractMessageSendingTemplate<D>.ConvertAndSendAsync
    fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate<D>.ConvertAndSendAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.ConvertAndSendAsync(System.Object,System.Threading.CancellationToken)
    name: ConvertAndSendAsync
    nameWithType: AbstractMessageSendingTemplate(Of D).ConvertAndSendAsync
    fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate(Of D).ConvertAndSendAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.ConvertAndSendAsync(`0,System.Object,System.Threading.CancellationToken)
  commentId: M:Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.ConvertAndSendAsync(`0,System.Object,System.Threading.CancellationToken)
  isExternal: true
  name: ConvertAndSendAsync(D, Object, CancellationToken)
  nameWithType: AbstractMessageSendingTemplate<D>.ConvertAndSendAsync(D, Object, CancellationToken)
  fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate<D>.ConvertAndSendAsync(D, System.Object, System.Threading.CancellationToken)
  nameWithType.vb: AbstractMessageSendingTemplate(Of D).ConvertAndSendAsync(D, Object, CancellationToken)
  fullName.vb: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate(Of D).ConvertAndSendAsync(D, System.Object, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.ConvertAndSendAsync(`0,System.Object,System.Threading.CancellationToken)
    name: ConvertAndSendAsync
    nameWithType: AbstractMessageSendingTemplate<D>.ConvertAndSendAsync
    fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate<D>.ConvertAndSendAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: D
    nameWithType: D
    fullName: D
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.ConvertAndSendAsync(`0,System.Object,System.Threading.CancellationToken)
    name: ConvertAndSendAsync
    nameWithType: AbstractMessageSendingTemplate(Of D).ConvertAndSendAsync
    fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate(Of D).ConvertAndSendAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: D
    nameWithType: D
    fullName: D
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.ConvertAndSendAsync(`0,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object},System.Threading.CancellationToken)
  commentId: M:Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.ConvertAndSendAsync(`0,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object},System.Threading.CancellationToken)
  isExternal: true
  name: ConvertAndSendAsync(D, Object, IDictionary<String, Object>, CancellationToken)
  nameWithType: AbstractMessageSendingTemplate<D>.ConvertAndSendAsync(D, Object, IDictionary<String, Object>, CancellationToken)
  fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate<D>.ConvertAndSendAsync(D, System.Object, System.Collections.Generic.IDictionary<System.String, System.Object>, System.Threading.CancellationToken)
  nameWithType.vb: AbstractMessageSendingTemplate(Of D).ConvertAndSendAsync(D, Object, IDictionary(Of String, Object), CancellationToken)
  fullName.vb: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate(Of D).ConvertAndSendAsync(D, System.Object, System.Collections.Generic.IDictionary(Of System.String, System.Object), System.Threading.CancellationToken)
  name.vb: ConvertAndSendAsync(D, Object, IDictionary(Of String, Object), CancellationToken)
  spec.csharp:
  - uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.ConvertAndSendAsync(`0,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object},System.Threading.CancellationToken)
    name: ConvertAndSendAsync
    nameWithType: AbstractMessageSendingTemplate<D>.ConvertAndSendAsync
    fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate<D>.ConvertAndSendAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: D
    nameWithType: D
    fullName: D
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.ConvertAndSendAsync(`0,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object},System.Threading.CancellationToken)
    name: ConvertAndSendAsync
    nameWithType: AbstractMessageSendingTemplate(Of D).ConvertAndSendAsync
    fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate(Of D).ConvertAndSendAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: D
    nameWithType: D
    fullName: D
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.ConvertAndSendAsync(System.Object,Steeltoe.Messaging.Core.IMessagePostProcessor,System.Threading.CancellationToken)
  commentId: M:Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.ConvertAndSendAsync(System.Object,Steeltoe.Messaging.Core.IMessagePostProcessor,System.Threading.CancellationToken)
  isExternal: true
  name: ConvertAndSendAsync(Object, IMessagePostProcessor, CancellationToken)
  nameWithType: AbstractMessageSendingTemplate<D>.ConvertAndSendAsync(Object, IMessagePostProcessor, CancellationToken)
  fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate<D>.ConvertAndSendAsync(System.Object, Steeltoe.Messaging.Core.IMessagePostProcessor, System.Threading.CancellationToken)
  nameWithType.vb: AbstractMessageSendingTemplate(Of D).ConvertAndSendAsync(Object, IMessagePostProcessor, CancellationToken)
  fullName.vb: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate(Of D).ConvertAndSendAsync(System.Object, Steeltoe.Messaging.Core.IMessagePostProcessor, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.ConvertAndSendAsync(System.Object,Steeltoe.Messaging.Core.IMessagePostProcessor,System.Threading.CancellationToken)
    name: ConvertAndSendAsync
    nameWithType: AbstractMessageSendingTemplate<D>.ConvertAndSendAsync
    fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate<D>.ConvertAndSendAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.Core.IMessagePostProcessor
    name: IMessagePostProcessor
    nameWithType: IMessagePostProcessor
    fullName: Steeltoe.Messaging.Core.IMessagePostProcessor
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.ConvertAndSendAsync(System.Object,Steeltoe.Messaging.Core.IMessagePostProcessor,System.Threading.CancellationToken)
    name: ConvertAndSendAsync
    nameWithType: AbstractMessageSendingTemplate(Of D).ConvertAndSendAsync
    fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate(Of D).ConvertAndSendAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.Core.IMessagePostProcessor
    name: IMessagePostProcessor
    nameWithType: IMessagePostProcessor
    fullName: Steeltoe.Messaging.Core.IMessagePostProcessor
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.ConvertAndSendAsync(`0,System.Object,Steeltoe.Messaging.Core.IMessagePostProcessor,System.Threading.CancellationToken)
  commentId: M:Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.ConvertAndSendAsync(`0,System.Object,Steeltoe.Messaging.Core.IMessagePostProcessor,System.Threading.CancellationToken)
  isExternal: true
  name: ConvertAndSendAsync(D, Object, IMessagePostProcessor, CancellationToken)
  nameWithType: AbstractMessageSendingTemplate<D>.ConvertAndSendAsync(D, Object, IMessagePostProcessor, CancellationToken)
  fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate<D>.ConvertAndSendAsync(D, System.Object, Steeltoe.Messaging.Core.IMessagePostProcessor, System.Threading.CancellationToken)
  nameWithType.vb: AbstractMessageSendingTemplate(Of D).ConvertAndSendAsync(D, Object, IMessagePostProcessor, CancellationToken)
  fullName.vb: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate(Of D).ConvertAndSendAsync(D, System.Object, Steeltoe.Messaging.Core.IMessagePostProcessor, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.ConvertAndSendAsync(`0,System.Object,Steeltoe.Messaging.Core.IMessagePostProcessor,System.Threading.CancellationToken)
    name: ConvertAndSendAsync
    nameWithType: AbstractMessageSendingTemplate<D>.ConvertAndSendAsync
    fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate<D>.ConvertAndSendAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: D
    nameWithType: D
    fullName: D
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.Core.IMessagePostProcessor
    name: IMessagePostProcessor
    nameWithType: IMessagePostProcessor
    fullName: Steeltoe.Messaging.Core.IMessagePostProcessor
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.ConvertAndSendAsync(`0,System.Object,Steeltoe.Messaging.Core.IMessagePostProcessor,System.Threading.CancellationToken)
    name: ConvertAndSendAsync
    nameWithType: AbstractMessageSendingTemplate(Of D).ConvertAndSendAsync
    fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate(Of D).ConvertAndSendAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: D
    nameWithType: D
    fullName: D
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.Core.IMessagePostProcessor
    name: IMessagePostProcessor
    nameWithType: IMessagePostProcessor
    fullName: Steeltoe.Messaging.Core.IMessagePostProcessor
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.ConvertAndSendAsync(`0,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object},Steeltoe.Messaging.Core.IMessagePostProcessor,System.Threading.CancellationToken)
  commentId: M:Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.ConvertAndSendAsync(`0,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object},Steeltoe.Messaging.Core.IMessagePostProcessor,System.Threading.CancellationToken)
  isExternal: true
  name: ConvertAndSendAsync(D, Object, IDictionary<String, Object>, IMessagePostProcessor, CancellationToken)
  nameWithType: AbstractMessageSendingTemplate<D>.ConvertAndSendAsync(D, Object, IDictionary<String, Object>, IMessagePostProcessor, CancellationToken)
  fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate<D>.ConvertAndSendAsync(D, System.Object, System.Collections.Generic.IDictionary<System.String, System.Object>, Steeltoe.Messaging.Core.IMessagePostProcessor, System.Threading.CancellationToken)
  nameWithType.vb: AbstractMessageSendingTemplate(Of D).ConvertAndSendAsync(D, Object, IDictionary(Of String, Object), IMessagePostProcessor, CancellationToken)
  fullName.vb: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate(Of D).ConvertAndSendAsync(D, System.Object, System.Collections.Generic.IDictionary(Of System.String, System.Object), Steeltoe.Messaging.Core.IMessagePostProcessor, System.Threading.CancellationToken)
  name.vb: ConvertAndSendAsync(D, Object, IDictionary(Of String, Object), IMessagePostProcessor, CancellationToken)
  spec.csharp:
  - uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.ConvertAndSendAsync(`0,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object},Steeltoe.Messaging.Core.IMessagePostProcessor,System.Threading.CancellationToken)
    name: ConvertAndSendAsync
    nameWithType: AbstractMessageSendingTemplate<D>.ConvertAndSendAsync
    fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate<D>.ConvertAndSendAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: D
    nameWithType: D
    fullName: D
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.Core.IMessagePostProcessor
    name: IMessagePostProcessor
    nameWithType: IMessagePostProcessor
    fullName: Steeltoe.Messaging.Core.IMessagePostProcessor
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.ConvertAndSendAsync(`0,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object},Steeltoe.Messaging.Core.IMessagePostProcessor,System.Threading.CancellationToken)
    name: ConvertAndSendAsync
    nameWithType: AbstractMessageSendingTemplate(Of D).ConvertAndSendAsync
    fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate(Of D).ConvertAndSendAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: D
    nameWithType: D
    fullName: D
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.Core.IMessagePostProcessor
    name: IMessagePostProcessor
    nameWithType: IMessagePostProcessor
    fullName: Steeltoe.Messaging.Core.IMessagePostProcessor
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.SendAsync(Steeltoe.Messaging.IMessage,System.Threading.CancellationToken)
  commentId: M:Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.SendAsync(Steeltoe.Messaging.IMessage,System.Threading.CancellationToken)
  isExternal: true
  name: SendAsync(IMessage, CancellationToken)
  nameWithType: AbstractMessageSendingTemplate<D>.SendAsync(IMessage, CancellationToken)
  fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate<D>.SendAsync(Steeltoe.Messaging.IMessage, System.Threading.CancellationToken)
  nameWithType.vb: AbstractMessageSendingTemplate(Of D).SendAsync(IMessage, CancellationToken)
  fullName.vb: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate(Of D).SendAsync(Steeltoe.Messaging.IMessage, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.SendAsync(Steeltoe.Messaging.IMessage,System.Threading.CancellationToken)
    name: SendAsync
    nameWithType: AbstractMessageSendingTemplate<D>.SendAsync
    fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate<D>.SendAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.SendAsync(Steeltoe.Messaging.IMessage,System.Threading.CancellationToken)
    name: SendAsync
    nameWithType: AbstractMessageSendingTemplate(Of D).SendAsync
    fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate(Of D).SendAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.SendAsync(`0,Steeltoe.Messaging.IMessage,System.Threading.CancellationToken)
  commentId: M:Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.SendAsync(`0,Steeltoe.Messaging.IMessage,System.Threading.CancellationToken)
  isExternal: true
  name: SendAsync(D, IMessage, CancellationToken)
  nameWithType: AbstractMessageSendingTemplate<D>.SendAsync(D, IMessage, CancellationToken)
  fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate<D>.SendAsync(D, Steeltoe.Messaging.IMessage, System.Threading.CancellationToken)
  nameWithType.vb: AbstractMessageSendingTemplate(Of D).SendAsync(D, IMessage, CancellationToken)
  fullName.vb: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate(Of D).SendAsync(D, Steeltoe.Messaging.IMessage, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.SendAsync(`0,Steeltoe.Messaging.IMessage,System.Threading.CancellationToken)
    name: SendAsync
    nameWithType: AbstractMessageSendingTemplate<D>.SendAsync
    fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate<D>.SendAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: D
    nameWithType: D
    fullName: D
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.SendAsync(`0,Steeltoe.Messaging.IMessage,System.Threading.CancellationToken)
    name: SendAsync
    nameWithType: AbstractMessageSendingTemplate(Of D).SendAsync
    fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate(Of D).SendAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: D
    nameWithType: D
    fullName: D
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.ConvertAndSend(System.Object)
  commentId: M:Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.ConvertAndSend(System.Object)
  isExternal: true
  name: ConvertAndSend(Object)
  nameWithType: AbstractMessageSendingTemplate<D>.ConvertAndSend(Object)
  fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate<D>.ConvertAndSend(System.Object)
  nameWithType.vb: AbstractMessageSendingTemplate(Of D).ConvertAndSend(Object)
  fullName.vb: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate(Of D).ConvertAndSend(System.Object)
  spec.csharp:
  - uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.ConvertAndSend(System.Object)
    name: ConvertAndSend
    nameWithType: AbstractMessageSendingTemplate<D>.ConvertAndSend
    fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate<D>.ConvertAndSend
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.ConvertAndSend(System.Object)
    name: ConvertAndSend
    nameWithType: AbstractMessageSendingTemplate(Of D).ConvertAndSend
    fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate(Of D).ConvertAndSend
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.ConvertAndSend(`0,System.Object)
  commentId: M:Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.ConvertAndSend(`0,System.Object)
  isExternal: true
  name: ConvertAndSend(D, Object)
  nameWithType: AbstractMessageSendingTemplate<D>.ConvertAndSend(D, Object)
  fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate<D>.ConvertAndSend(D, System.Object)
  nameWithType.vb: AbstractMessageSendingTemplate(Of D).ConvertAndSend(D, Object)
  fullName.vb: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate(Of D).ConvertAndSend(D, System.Object)
  spec.csharp:
  - uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.ConvertAndSend(`0,System.Object)
    name: ConvertAndSend
    nameWithType: AbstractMessageSendingTemplate<D>.ConvertAndSend
    fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate<D>.ConvertAndSend
  - name: (
    nameWithType: (
    fullName: (
  - name: D
    nameWithType: D
    fullName: D
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.ConvertAndSend(`0,System.Object)
    name: ConvertAndSend
    nameWithType: AbstractMessageSendingTemplate(Of D).ConvertAndSend
    fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate(Of D).ConvertAndSend
  - name: (
    nameWithType: (
    fullName: (
  - name: D
    nameWithType: D
    fullName: D
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.ConvertAndSend(`0,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object})
  commentId: M:Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.ConvertAndSend(`0,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object})
  isExternal: true
  name: ConvertAndSend(D, Object, IDictionary<String, Object>)
  nameWithType: AbstractMessageSendingTemplate<D>.ConvertAndSend(D, Object, IDictionary<String, Object>)
  fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate<D>.ConvertAndSend(D, System.Object, System.Collections.Generic.IDictionary<System.String, System.Object>)
  nameWithType.vb: AbstractMessageSendingTemplate(Of D).ConvertAndSend(D, Object, IDictionary(Of String, Object))
  fullName.vb: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate(Of D).ConvertAndSend(D, System.Object, System.Collections.Generic.IDictionary(Of System.String, System.Object))
  name.vb: ConvertAndSend(D, Object, IDictionary(Of String, Object))
  spec.csharp:
  - uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.ConvertAndSend(`0,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object})
    name: ConvertAndSend
    nameWithType: AbstractMessageSendingTemplate<D>.ConvertAndSend
    fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate<D>.ConvertAndSend
  - name: (
    nameWithType: (
    fullName: (
  - name: D
    nameWithType: D
    fullName: D
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.ConvertAndSend(`0,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object})
    name: ConvertAndSend
    nameWithType: AbstractMessageSendingTemplate(Of D).ConvertAndSend
    fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate(Of D).ConvertAndSend
  - name: (
    nameWithType: (
    fullName: (
  - name: D
    nameWithType: D
    fullName: D
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.ConvertAndSend(System.Object,Steeltoe.Messaging.Core.IMessagePostProcessor)
  commentId: M:Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.ConvertAndSend(System.Object,Steeltoe.Messaging.Core.IMessagePostProcessor)
  isExternal: true
  name: ConvertAndSend(Object, IMessagePostProcessor)
  nameWithType: AbstractMessageSendingTemplate<D>.ConvertAndSend(Object, IMessagePostProcessor)
  fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate<D>.ConvertAndSend(System.Object, Steeltoe.Messaging.Core.IMessagePostProcessor)
  nameWithType.vb: AbstractMessageSendingTemplate(Of D).ConvertAndSend(Object, IMessagePostProcessor)
  fullName.vb: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate(Of D).ConvertAndSend(System.Object, Steeltoe.Messaging.Core.IMessagePostProcessor)
  spec.csharp:
  - uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.ConvertAndSend(System.Object,Steeltoe.Messaging.Core.IMessagePostProcessor)
    name: ConvertAndSend
    nameWithType: AbstractMessageSendingTemplate<D>.ConvertAndSend
    fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate<D>.ConvertAndSend
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.Core.IMessagePostProcessor
    name: IMessagePostProcessor
    nameWithType: IMessagePostProcessor
    fullName: Steeltoe.Messaging.Core.IMessagePostProcessor
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.ConvertAndSend(System.Object,Steeltoe.Messaging.Core.IMessagePostProcessor)
    name: ConvertAndSend
    nameWithType: AbstractMessageSendingTemplate(Of D).ConvertAndSend
    fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate(Of D).ConvertAndSend
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.Core.IMessagePostProcessor
    name: IMessagePostProcessor
    nameWithType: IMessagePostProcessor
    fullName: Steeltoe.Messaging.Core.IMessagePostProcessor
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.ConvertAndSend(`0,System.Object,Steeltoe.Messaging.Core.IMessagePostProcessor)
  commentId: M:Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.ConvertAndSend(`0,System.Object,Steeltoe.Messaging.Core.IMessagePostProcessor)
  isExternal: true
  name: ConvertAndSend(D, Object, IMessagePostProcessor)
  nameWithType: AbstractMessageSendingTemplate<D>.ConvertAndSend(D, Object, IMessagePostProcessor)
  fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate<D>.ConvertAndSend(D, System.Object, Steeltoe.Messaging.Core.IMessagePostProcessor)
  nameWithType.vb: AbstractMessageSendingTemplate(Of D).ConvertAndSend(D, Object, IMessagePostProcessor)
  fullName.vb: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate(Of D).ConvertAndSend(D, System.Object, Steeltoe.Messaging.Core.IMessagePostProcessor)
  spec.csharp:
  - uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.ConvertAndSend(`0,System.Object,Steeltoe.Messaging.Core.IMessagePostProcessor)
    name: ConvertAndSend
    nameWithType: AbstractMessageSendingTemplate<D>.ConvertAndSend
    fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate<D>.ConvertAndSend
  - name: (
    nameWithType: (
    fullName: (
  - name: D
    nameWithType: D
    fullName: D
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.Core.IMessagePostProcessor
    name: IMessagePostProcessor
    nameWithType: IMessagePostProcessor
    fullName: Steeltoe.Messaging.Core.IMessagePostProcessor
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.ConvertAndSend(`0,System.Object,Steeltoe.Messaging.Core.IMessagePostProcessor)
    name: ConvertAndSend
    nameWithType: AbstractMessageSendingTemplate(Of D).ConvertAndSend
    fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate(Of D).ConvertAndSend
  - name: (
    nameWithType: (
    fullName: (
  - name: D
    nameWithType: D
    fullName: D
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.Core.IMessagePostProcessor
    name: IMessagePostProcessor
    nameWithType: IMessagePostProcessor
    fullName: Steeltoe.Messaging.Core.IMessagePostProcessor
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.ConvertAndSend(`0,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object},Steeltoe.Messaging.Core.IMessagePostProcessor)
  commentId: M:Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.ConvertAndSend(`0,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object},Steeltoe.Messaging.Core.IMessagePostProcessor)
  isExternal: true
  name: ConvertAndSend(D, Object, IDictionary<String, Object>, IMessagePostProcessor)
  nameWithType: AbstractMessageSendingTemplate<D>.ConvertAndSend(D, Object, IDictionary<String, Object>, IMessagePostProcessor)
  fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate<D>.ConvertAndSend(D, System.Object, System.Collections.Generic.IDictionary<System.String, System.Object>, Steeltoe.Messaging.Core.IMessagePostProcessor)
  nameWithType.vb: AbstractMessageSendingTemplate(Of D).ConvertAndSend(D, Object, IDictionary(Of String, Object), IMessagePostProcessor)
  fullName.vb: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate(Of D).ConvertAndSend(D, System.Object, System.Collections.Generic.IDictionary(Of System.String, System.Object), Steeltoe.Messaging.Core.IMessagePostProcessor)
  name.vb: ConvertAndSend(D, Object, IDictionary(Of String, Object), IMessagePostProcessor)
  spec.csharp:
  - uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.ConvertAndSend(`0,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object},Steeltoe.Messaging.Core.IMessagePostProcessor)
    name: ConvertAndSend
    nameWithType: AbstractMessageSendingTemplate<D>.ConvertAndSend
    fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate<D>.ConvertAndSend
  - name: (
    nameWithType: (
    fullName: (
  - name: D
    nameWithType: D
    fullName: D
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.Core.IMessagePostProcessor
    name: IMessagePostProcessor
    nameWithType: IMessagePostProcessor
    fullName: Steeltoe.Messaging.Core.IMessagePostProcessor
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.ConvertAndSend(`0,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object},Steeltoe.Messaging.Core.IMessagePostProcessor)
    name: ConvertAndSend
    nameWithType: AbstractMessageSendingTemplate(Of D).ConvertAndSend
    fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate(Of D).ConvertAndSend
  - name: (
    nameWithType: (
    fullName: (
  - name: D
    nameWithType: D
    fullName: D
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.Core.IMessagePostProcessor
    name: IMessagePostProcessor
    nameWithType: IMessagePostProcessor
    fullName: Steeltoe.Messaging.Core.IMessagePostProcessor
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.Send(Steeltoe.Messaging.IMessage)
  commentId: M:Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.Send(Steeltoe.Messaging.IMessage)
  name: Send(IMessage)
  nameWithType: AbstractMessageSendingTemplate<D>.Send(IMessage)
  fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate<D>.Send(Steeltoe.Messaging.IMessage)
  nameWithType.vb: AbstractMessageSendingTemplate(Of D).Send(IMessage)
  fullName.vb: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate(Of D).Send(Steeltoe.Messaging.IMessage)
  spec.csharp:
  - uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.Send(Steeltoe.Messaging.IMessage)
    name: Send
    nameWithType: AbstractMessageSendingTemplate<D>.Send
    fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate<D>.Send
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.Send(Steeltoe.Messaging.IMessage)
    name: Send
    nameWithType: AbstractMessageSendingTemplate(Of D).Send
    fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate(Of D).Send
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.Send(`0,Steeltoe.Messaging.IMessage)
  commentId: M:Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.Send(`0,Steeltoe.Messaging.IMessage)
  name: Send(D, IMessage)
  nameWithType: AbstractMessageSendingTemplate<D>.Send(D, IMessage)
  fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate<D>.Send(D, Steeltoe.Messaging.IMessage)
  nameWithType.vb: AbstractMessageSendingTemplate(Of D).Send(D, IMessage)
  fullName.vb: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate(Of D).Send(D, Steeltoe.Messaging.IMessage)
  spec.csharp:
  - uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.Send(`0,Steeltoe.Messaging.IMessage)
    name: Send
    nameWithType: AbstractMessageSendingTemplate<D>.Send
    fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate<D>.Send
  - name: (
    nameWithType: (
    fullName: (
  - name: D
    nameWithType: D
    fullName: D
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.Send(`0,Steeltoe.Messaging.IMessage)
    name: Send
    nameWithType: AbstractMessageSendingTemplate(Of D).Send
    fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate(Of D).Send
  - name: (
    nameWithType: (
    fullName: (
  - name: D
    nameWithType: D
    fullName: D
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.RequiredDefaultSendDestination
  commentId: P:Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.RequiredDefaultSendDestination
  name: RequiredDefaultSendDestination
  nameWithType: AbstractMessageSendingTemplate<D>.RequiredDefaultSendDestination
  fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate<D>.RequiredDefaultSendDestination
  nameWithType.vb: AbstractMessageSendingTemplate(Of D).RequiredDefaultSendDestination
  fullName.vb: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate(Of D).RequiredDefaultSendDestination
- uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.DoConvert(System.Object,System.Collections.Generic.IDictionary{System.String,System.Object},Steeltoe.Messaging.Core.IMessagePostProcessor)
  commentId: M:Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.DoConvert(System.Object,System.Collections.Generic.IDictionary{System.String,System.Object},Steeltoe.Messaging.Core.IMessagePostProcessor)
  isExternal: true
  name: DoConvert(Object, IDictionary<String, Object>, IMessagePostProcessor)
  nameWithType: AbstractMessageSendingTemplate<D>.DoConvert(Object, IDictionary<String, Object>, IMessagePostProcessor)
  fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate<D>.DoConvert(System.Object, System.Collections.Generic.IDictionary<System.String, System.Object>, Steeltoe.Messaging.Core.IMessagePostProcessor)
  nameWithType.vb: AbstractMessageSendingTemplate(Of D).DoConvert(Object, IDictionary(Of String, Object), IMessagePostProcessor)
  fullName.vb: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate(Of D).DoConvert(System.Object, System.Collections.Generic.IDictionary(Of System.String, System.Object), Steeltoe.Messaging.Core.IMessagePostProcessor)
  name.vb: DoConvert(Object, IDictionary(Of String, Object), IMessagePostProcessor)
  spec.csharp:
  - uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.DoConvert(System.Object,System.Collections.Generic.IDictionary{System.String,System.Object},Steeltoe.Messaging.Core.IMessagePostProcessor)
    name: DoConvert
    nameWithType: AbstractMessageSendingTemplate<D>.DoConvert
    fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate<D>.DoConvert
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.Core.IMessagePostProcessor
    name: IMessagePostProcessor
    nameWithType: IMessagePostProcessor
    fullName: Steeltoe.Messaging.Core.IMessagePostProcessor
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.DoConvert(System.Object,System.Collections.Generic.IDictionary{System.String,System.Object},Steeltoe.Messaging.Core.IMessagePostProcessor)
    name: DoConvert
    nameWithType: AbstractMessageSendingTemplate(Of D).DoConvert
    fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate(Of D).DoConvert
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.Core.IMessagePostProcessor
    name: IMessagePostProcessor
    nameWithType: IMessagePostProcessor
    fullName: Steeltoe.Messaging.Core.IMessagePostProcessor
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.ProcessHeadersToSend(System.Collections.Generic.IDictionary{System.String,System.Object})
  commentId: M:Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.ProcessHeadersToSend(System.Collections.Generic.IDictionary{System.String,System.Object})
  isExternal: true
  name: ProcessHeadersToSend(IDictionary<String, Object>)
  nameWithType: AbstractMessageSendingTemplate<D>.ProcessHeadersToSend(IDictionary<String, Object>)
  fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate<D>.ProcessHeadersToSend(System.Collections.Generic.IDictionary<System.String, System.Object>)
  nameWithType.vb: AbstractMessageSendingTemplate(Of D).ProcessHeadersToSend(IDictionary(Of String, Object))
  fullName.vb: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate(Of D).ProcessHeadersToSend(System.Collections.Generic.IDictionary(Of System.String, System.Object))
  name.vb: ProcessHeadersToSend(IDictionary(Of String, Object))
  spec.csharp:
  - uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.ProcessHeadersToSend(System.Collections.Generic.IDictionary{System.String,System.Object})
    name: ProcessHeadersToSend
    nameWithType: AbstractMessageSendingTemplate<D>.ProcessHeadersToSend
    fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate<D>.ProcessHeadersToSend
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate`1.ProcessHeadersToSend(System.Collections.Generic.IDictionary{System.String,System.Object})
    name: ProcessHeadersToSend
    nameWithType: AbstractMessageSendingTemplate(Of D).ProcessHeadersToSend
    fullName: Steeltoe.Messaging.Core.AbstractMessageSendingTemplate(Of D).ProcessHeadersToSend
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Core.BatchingRabbitTemplate.#ctor*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Core.BatchingRabbitTemplate.#ctor
  name: BatchingRabbitTemplate
  nameWithType: BatchingRabbitTemplate.BatchingRabbitTemplate
  fullName: Steeltoe.Messaging.RabbitMQ.Core.BatchingRabbitTemplate.BatchingRabbitTemplate
- uid: Microsoft.Extensions.Options.IOptionsMonitor{Steeltoe.Messaging.RabbitMQ.Config.RabbitOptions}
  commentId: T:Microsoft.Extensions.Options.IOptionsMonitor{Steeltoe.Messaging.RabbitMQ.Config.RabbitOptions}
  parent: Microsoft.Extensions.Options
  definition: Microsoft.Extensions.Options.IOptionsMonitor`1
  name: IOptionsMonitor<RabbitOptions>
  nameWithType: IOptionsMonitor<RabbitOptions>
  fullName: Microsoft.Extensions.Options.IOptionsMonitor<Steeltoe.Messaging.RabbitMQ.Config.RabbitOptions>
  nameWithType.vb: IOptionsMonitor(Of RabbitOptions)
  fullName.vb: Microsoft.Extensions.Options.IOptionsMonitor(Of Steeltoe.Messaging.RabbitMQ.Config.RabbitOptions)
  name.vb: IOptionsMonitor(Of RabbitOptions)
  spec.csharp:
  - uid: Microsoft.Extensions.Options.IOptionsMonitor`1
    name: IOptionsMonitor
    nameWithType: IOptionsMonitor
    fullName: Microsoft.Extensions.Options.IOptionsMonitor
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Steeltoe.Messaging.RabbitMQ.Config.RabbitOptions
    name: RabbitOptions
    nameWithType: RabbitOptions
    fullName: Steeltoe.Messaging.RabbitMQ.Config.RabbitOptions
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Extensions.Options.IOptionsMonitor`1
    name: IOptionsMonitor
    nameWithType: IOptionsMonitor
    fullName: Microsoft.Extensions.Options.IOptionsMonitor
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Steeltoe.Messaging.RabbitMQ.Config.RabbitOptions
    name: RabbitOptions
    nameWithType: RabbitOptions
    fullName: Steeltoe.Messaging.RabbitMQ.Config.RabbitOptions
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Connection.IConnectionFactory
  commentId: T:Steeltoe.Messaging.RabbitMQ.Connection.IConnectionFactory
  parent: Steeltoe.Messaging.RabbitMQ.Connection
  name: IConnectionFactory
  nameWithType: IConnectionFactory
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.IConnectionFactory
- uid: Steeltoe.Messaging.Converter.ISmartMessageConverter
  commentId: T:Steeltoe.Messaging.Converter.ISmartMessageConverter
  parent: Steeltoe.Messaging.Converter
  name: ISmartMessageConverter
  nameWithType: ISmartMessageConverter
  fullName: Steeltoe.Messaging.Converter.ISmartMessageConverter
- uid: Steeltoe.Messaging.RabbitMQ.Batch.IBatchingStrategy
  commentId: T:Steeltoe.Messaging.RabbitMQ.Batch.IBatchingStrategy
  parent: Steeltoe.Messaging.RabbitMQ.Batch
  name: IBatchingStrategy
  nameWithType: IBatchingStrategy
  fullName: Steeltoe.Messaging.RabbitMQ.Batch.IBatchingStrategy
- uid: Microsoft.Extensions.Logging.ILogger
  commentId: T:Microsoft.Extensions.Logging.ILogger
  parent: Microsoft.Extensions.Logging
  isExternal: true
  name: ILogger
  nameWithType: ILogger
  fullName: Microsoft.Extensions.Logging.ILogger
- uid: Microsoft.Extensions.Options.IOptionsMonitor`1
  commentId: T:Microsoft.Extensions.Options.IOptionsMonitor`1
  isExternal: true
  name: IOptionsMonitor<TOptions>
  nameWithType: IOptionsMonitor<TOptions>
  fullName: Microsoft.Extensions.Options.IOptionsMonitor<TOptions>
  nameWithType.vb: IOptionsMonitor(Of TOptions)
  fullName.vb: Microsoft.Extensions.Options.IOptionsMonitor(Of TOptions)
  name.vb: IOptionsMonitor(Of TOptions)
  spec.csharp:
  - uid: Microsoft.Extensions.Options.IOptionsMonitor`1
    name: IOptionsMonitor
    nameWithType: IOptionsMonitor
    fullName: Microsoft.Extensions.Options.IOptionsMonitor
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TOptions
    nameWithType: TOptions
    fullName: TOptions
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Extensions.Options.IOptionsMonitor`1
    name: IOptionsMonitor
    nameWithType: IOptionsMonitor
    fullName: Microsoft.Extensions.Options.IOptionsMonitor
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TOptions
    nameWithType: TOptions
    fullName: TOptions
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.Options
  commentId: N:Microsoft.Extensions.Options
  isExternal: true
  name: Microsoft.Extensions.Options
  nameWithType: Microsoft.Extensions.Options
  fullName: Microsoft.Extensions.Options
- uid: Steeltoe.Messaging.Converter
  commentId: N:Steeltoe.Messaging.Converter
  name: Steeltoe.Messaging.Converter
  nameWithType: Steeltoe.Messaging.Converter
  fullName: Steeltoe.Messaging.Converter
- uid: Steeltoe.Messaging.RabbitMQ.Batch
  commentId: N:Steeltoe.Messaging.RabbitMQ.Batch
  name: Steeltoe.Messaging.RabbitMQ.Batch
  nameWithType: Steeltoe.Messaging.RabbitMQ.Batch
  fullName: Steeltoe.Messaging.RabbitMQ.Batch
- uid: Microsoft.Extensions.Logging
  commentId: N:Microsoft.Extensions.Logging
  isExternal: true
  name: Microsoft.Extensions.Logging
  nameWithType: Microsoft.Extensions.Logging
  fullName: Microsoft.Extensions.Logging
- uid: Steeltoe.Messaging.RabbitMQ.Config.RabbitOptions
  commentId: T:Steeltoe.Messaging.RabbitMQ.Config.RabbitOptions
  parent: Steeltoe.Messaging.RabbitMQ.Config
  name: RabbitOptions
  nameWithType: RabbitOptions
  fullName: Steeltoe.Messaging.RabbitMQ.Config.RabbitOptions
- uid: Steeltoe.Messaging.RabbitMQ.Config
  commentId: N:Steeltoe.Messaging.RabbitMQ.Config
  name: Steeltoe.Messaging.RabbitMQ.Config
  nameWithType: Steeltoe.Messaging.RabbitMQ.Config
  fullName: Steeltoe.Messaging.RabbitMQ.Config
- uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.Send(System.String,System.String,Steeltoe.Messaging.IMessage,Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.Send(System.String,System.String,Steeltoe.Messaging.IMessage,Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData)
  parent: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate
  isExternal: true
  name: Send(String, String, IMessage, CorrelationData)
  nameWithType: RabbitTemplate.Send(String, String, IMessage, CorrelationData)
  fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.Send(System.String, System.String, Steeltoe.Messaging.IMessage, Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData)
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.Send(System.String,System.String,Steeltoe.Messaging.IMessage,Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData)
    name: Send
    nameWithType: RabbitTemplate.Send
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.Send
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData
    name: CorrelationData
    nameWithType: CorrelationData
    fullName: Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.Send(System.String,System.String,Steeltoe.Messaging.IMessage,Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData)
    name: Send
    nameWithType: RabbitTemplate.Send
    fullName: Steeltoe.Messaging.RabbitMQ.Core.RabbitTemplate.Send
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData
    name: CorrelationData
    nameWithType: CorrelationData
    fullName: Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Core.BatchingRabbitTemplate.Send*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Core.BatchingRabbitTemplate.Send
  name: Send
  nameWithType: BatchingRabbitTemplate.Send
  fullName: Steeltoe.Messaging.RabbitMQ.Core.BatchingRabbitTemplate.Send
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Steeltoe.Messaging.IMessage
  commentId: T:Steeltoe.Messaging.IMessage
  parent: Steeltoe.Messaging
  name: IMessage
  nameWithType: IMessage
  fullName: Steeltoe.Messaging.IMessage
- uid: Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData
  commentId: T:Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData
  parent: Steeltoe.Messaging.RabbitMQ.Connection
  name: CorrelationData
  nameWithType: CorrelationData
  fullName: Steeltoe.Messaging.RabbitMQ.Connection.CorrelationData
- uid: Steeltoe.Messaging
  commentId: N:Steeltoe.Messaging
  name: Steeltoe.Messaging
  nameWithType: Steeltoe.Messaging
  fullName: Steeltoe.Messaging
- uid: Steeltoe.Messaging.RabbitMQ.Core.BatchingRabbitTemplate.Flush*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Core.BatchingRabbitTemplate.Flush
  name: Flush
  nameWithType: BatchingRabbitTemplate.Flush
  fullName: Steeltoe.Messaging.RabbitMQ.Core.BatchingRabbitTemplate.Flush
- uid: Steeltoe.Messaging.RabbitMQ.Core.BatchingRabbitTemplate.FlushAsync*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Core.BatchingRabbitTemplate.FlushAsync
  name: FlushAsync
  nameWithType: BatchingRabbitTemplate.FlushAsync
  fullName: Steeltoe.Messaging.RabbitMQ.Core.BatchingRabbitTemplate.FlushAsync
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: true
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
