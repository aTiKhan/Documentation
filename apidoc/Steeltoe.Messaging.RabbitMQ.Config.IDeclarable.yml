### YamlMime:ManagedReference
items:
- uid: Steeltoe.Messaging.RabbitMQ.Config.IDeclarable
  commentId: T:Steeltoe.Messaging.RabbitMQ.Config.IDeclarable
  id: IDeclarable
  parent: Steeltoe.Messaging.RabbitMQ.Config
  children:
  - Steeltoe.Messaging.RabbitMQ.Config.IDeclarable.AddArgument(System.String,System.Object)
  - Steeltoe.Messaging.RabbitMQ.Config.IDeclarable.Arguments
  - Steeltoe.Messaging.RabbitMQ.Config.IDeclarable.DeclaringAdmins
  - Steeltoe.Messaging.RabbitMQ.Config.IDeclarable.IgnoreDeclarationExceptions
  - Steeltoe.Messaging.RabbitMQ.Config.IDeclarable.RemoveArgument(System.String)
  - Steeltoe.Messaging.RabbitMQ.Config.IDeclarable.ShouldDeclare
  langs:
  - csharp
  - vb
  name: IDeclarable
  nameWithType: IDeclarable
  fullName: Steeltoe.Messaging.RabbitMQ.Config.IDeclarable
  type: Interface
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Config/IDeclarable.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: IDeclarable
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Config/IDeclarable.cs
    startLine: 8
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Config
  syntax:
    content: public interface IDeclarable
    content.vb: Public Interface IDeclarable
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Steeltoe.Messaging.RabbitMQ.Config.IDeclarable.ShouldDeclare
  commentId: P:Steeltoe.Messaging.RabbitMQ.Config.IDeclarable.ShouldDeclare
  id: ShouldDeclare
  parent: Steeltoe.Messaging.RabbitMQ.Config.IDeclarable
  langs:
  - csharp
  - vb
  name: ShouldDeclare
  nameWithType: IDeclarable.ShouldDeclare
  fullName: Steeltoe.Messaging.RabbitMQ.Config.IDeclarable.ShouldDeclare
  type: Property
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Config/IDeclarable.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: ShouldDeclare
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Config/IDeclarable.cs
    startLine: 13
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Config
  summary: "\nGets or sets a value indicating whether this object should be declared\n"
  example: []
  syntax:
    content: bool ShouldDeclare { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Property ShouldDeclare As Boolean
  overload: Steeltoe.Messaging.RabbitMQ.Config.IDeclarable.ShouldDeclare*
  modifiers.csharp:
  - get
  - set
- uid: Steeltoe.Messaging.RabbitMQ.Config.IDeclarable.DeclaringAdmins
  commentId: P:Steeltoe.Messaging.RabbitMQ.Config.IDeclarable.DeclaringAdmins
  id: DeclaringAdmins
  parent: Steeltoe.Messaging.RabbitMQ.Config.IDeclarable
  langs:
  - csharp
  - vb
  name: DeclaringAdmins
  nameWithType: IDeclarable.DeclaringAdmins
  fullName: Steeltoe.Messaging.RabbitMQ.Config.IDeclarable.DeclaringAdmins
  type: Property
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Config/IDeclarable.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: DeclaringAdmins
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Config/IDeclarable.cs
    startLine: 18
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Config
  summary: "\nGets or sets a collection of Admins that should declare this object\n"
  example: []
  syntax:
    content: List<object> DeclaringAdmins { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.List{System.Object}
    content.vb: Property DeclaringAdmins As List(Of Object)
  overload: Steeltoe.Messaging.RabbitMQ.Config.IDeclarable.DeclaringAdmins*
  modifiers.csharp:
  - get
  - set
- uid: Steeltoe.Messaging.RabbitMQ.Config.IDeclarable.IgnoreDeclarationExceptions
  commentId: P:Steeltoe.Messaging.RabbitMQ.Config.IDeclarable.IgnoreDeclarationExceptions
  id: IgnoreDeclarationExceptions
  parent: Steeltoe.Messaging.RabbitMQ.Config.IDeclarable
  langs:
  - csharp
  - vb
  name: IgnoreDeclarationExceptions
  nameWithType: IDeclarable.IgnoreDeclarationExceptions
  fullName: Steeltoe.Messaging.RabbitMQ.Config.IDeclarable.IgnoreDeclarationExceptions
  type: Property
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Config/IDeclarable.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: IgnoreDeclarationExceptions
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Config/IDeclarable.cs
    startLine: 23
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Config
  summary: "\nGets or sets a value indicating whether should ignore exceptions\n"
  example: []
  syntax:
    content: bool IgnoreDeclarationExceptions { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Property IgnoreDeclarationExceptions As Boolean
  overload: Steeltoe.Messaging.RabbitMQ.Config.IDeclarable.IgnoreDeclarationExceptions*
  modifiers.csharp:
  - get
  - set
- uid: Steeltoe.Messaging.RabbitMQ.Config.IDeclarable.Arguments
  commentId: P:Steeltoe.Messaging.RabbitMQ.Config.IDeclarable.Arguments
  id: Arguments
  parent: Steeltoe.Messaging.RabbitMQ.Config.IDeclarable
  langs:
  - csharp
  - vb
  name: Arguments
  nameWithType: IDeclarable.Arguments
  fullName: Steeltoe.Messaging.RabbitMQ.Config.IDeclarable.Arguments
  type: Property
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Config/IDeclarable.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Arguments
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Config/IDeclarable.cs
    startLine: 28
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Config
  summary: "\nGets or sets the arguments for this declarable\n"
  example: []
  syntax:
    content: Dictionary<string, object> Arguments { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.Dictionary{System.String,System.Object}
    content.vb: Property Arguments As Dictionary(Of String, Object)
  overload: Steeltoe.Messaging.RabbitMQ.Config.IDeclarable.Arguments*
  modifiers.csharp:
  - get
  - set
- uid: Steeltoe.Messaging.RabbitMQ.Config.IDeclarable.AddArgument(System.String,System.Object)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Config.IDeclarable.AddArgument(System.String,System.Object)
  id: AddArgument(System.String,System.Object)
  parent: Steeltoe.Messaging.RabbitMQ.Config.IDeclarable
  langs:
  - csharp
  - vb
  name: AddArgument(String, Object)
  nameWithType: IDeclarable.AddArgument(String, Object)
  fullName: Steeltoe.Messaging.RabbitMQ.Config.IDeclarable.AddArgument(System.String, System.Object)
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Config/IDeclarable.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: AddArgument
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Config/IDeclarable.cs
    startLine: 35
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Config
  summary: "\nAdds an argument to the declarable\n"
  example: []
  syntax:
    content: void AddArgument(string name, object value)
    parameters:
    - id: name
      type: System.String
      description: the argument name
    - id: value
      type: System.Object
      description: the argument value
    content.vb: Sub AddArgument(name As String, value As Object)
  overload: Steeltoe.Messaging.RabbitMQ.Config.IDeclarable.AddArgument*
- uid: Steeltoe.Messaging.RabbitMQ.Config.IDeclarable.RemoveArgument(System.String)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Config.IDeclarable.RemoveArgument(System.String)
  id: RemoveArgument(System.String)
  parent: Steeltoe.Messaging.RabbitMQ.Config.IDeclarable
  langs:
  - csharp
  - vb
  name: RemoveArgument(String)
  nameWithType: IDeclarable.RemoveArgument(String)
  fullName: Steeltoe.Messaging.RabbitMQ.Config.IDeclarable.RemoveArgument(System.String)
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Config/IDeclarable.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: RemoveArgument
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Config/IDeclarable.cs
    startLine: 42
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Config
  summary: "\nRemove an argument from the declarable\n"
  example: []
  syntax:
    content: object RemoveArgument(string name)
    parameters:
    - id: name
      type: System.String
      description: the argument name
    return:
      type: System.Object
      description: the value if present
    content.vb: Function RemoveArgument(name As String) As Object
  overload: Steeltoe.Messaging.RabbitMQ.Config.IDeclarable.RemoveArgument*
references:
- uid: Steeltoe.Messaging.RabbitMQ.Config
  commentId: N:Steeltoe.Messaging.RabbitMQ.Config
  name: Steeltoe.Messaging.RabbitMQ.Config
  nameWithType: Steeltoe.Messaging.RabbitMQ.Config
  fullName: Steeltoe.Messaging.RabbitMQ.Config
- uid: Steeltoe.Messaging.RabbitMQ.Config.IDeclarable.ShouldDeclare*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Config.IDeclarable.ShouldDeclare
  name: ShouldDeclare
  nameWithType: IDeclarable.ShouldDeclare
  fullName: Steeltoe.Messaging.RabbitMQ.Config.IDeclarable.ShouldDeclare
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Steeltoe.Messaging.RabbitMQ.Config.IDeclarable.DeclaringAdmins*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Config.IDeclarable.DeclaringAdmins
  name: DeclaringAdmins
  nameWithType: IDeclarable.DeclaringAdmins
  fullName: Steeltoe.Messaging.RabbitMQ.Config.IDeclarable.DeclaringAdmins
- uid: System.Collections.Generic.List{System.Object}
  commentId: T:System.Collections.Generic.List{System.Object}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<Object>
  nameWithType: List<Object>
  fullName: System.Collections.Generic.List<System.Object>
  nameWithType.vb: List(Of Object)
  fullName.vb: System.Collections.Generic.List(Of System.Object)
  name.vb: List(Of Object)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Steeltoe.Messaging.RabbitMQ.Config.IDeclarable.IgnoreDeclarationExceptions*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Config.IDeclarable.IgnoreDeclarationExceptions
  name: IgnoreDeclarationExceptions
  nameWithType: IDeclarable.IgnoreDeclarationExceptions
  fullName: Steeltoe.Messaging.RabbitMQ.Config.IDeclarable.IgnoreDeclarationExceptions
- uid: Steeltoe.Messaging.RabbitMQ.Config.IDeclarable.Arguments*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Config.IDeclarable.Arguments
  name: Arguments
  nameWithType: IDeclarable.Arguments
  fullName: Steeltoe.Messaging.RabbitMQ.Config.IDeclarable.Arguments
- uid: System.Collections.Generic.Dictionary{System.String,System.Object}
  commentId: T:System.Collections.Generic.Dictionary{System.String,System.Object}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  name: Dictionary<String, Object>
  nameWithType: Dictionary<String, Object>
  fullName: System.Collections.Generic.Dictionary<System.String, System.Object>
  nameWithType.vb: Dictionary(Of String, Object)
  fullName.vb: System.Collections.Generic.Dictionary(Of System.String, System.Object)
  name.vb: Dictionary(Of String, Object)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Dictionary`2
  commentId: T:System.Collections.Generic.Dictionary`2
  isExternal: true
  name: Dictionary<TKey, TValue>
  nameWithType: Dictionary<TKey, TValue>
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>
  nameWithType.vb: Dictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue)
  name.vb: Dictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Config.IDeclarable.AddArgument*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Config.IDeclarable.AddArgument
  name: AddArgument
  nameWithType: IDeclarable.AddArgument
  fullName: Steeltoe.Messaging.RabbitMQ.Config.IDeclarable.AddArgument
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Steeltoe.Messaging.RabbitMQ.Config.IDeclarable.RemoveArgument*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Config.IDeclarable.RemoveArgument
  name: RemoveArgument
  nameWithType: IDeclarable.RemoveArgument
  fullName: Steeltoe.Messaging.RabbitMQ.Config.IDeclarable.RemoveArgument
