### YamlMime:ManagedReference
items:
- uid: Steeltoe.Management.Endpoint.Trace.Response
  commentId: T:Steeltoe.Management.Endpoint.Trace.Response
  id: Response
  parent: Steeltoe.Management.Endpoint.Trace
  children:
  - Steeltoe.Management.Endpoint.Trace.Response.#ctor(System.Int32,System.Collections.Generic.IDictionary{System.String,System.String[]})
  - Steeltoe.Management.Endpoint.Trace.Response.Headers
  - Steeltoe.Management.Endpoint.Trace.Response.Status
  langs:
  - csharp
  - vb
  name: Response
  nameWithType: Response
  fullName: Steeltoe.Management.Endpoint.Trace.Response
  type: Class
  source:
    remote:
      path: src/Management/src/EndpointBase/Trace/HttpTraceResult.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Response
    path: ../Steeltoe/src/Management/src/EndpointBase/Trace/HttpTraceResult.cs
    startLine: 76
  assemblies:
  - Steeltoe.Management.EndpointBase
  namespace: Steeltoe.Management.Endpoint.Trace
  syntax:
    content: public class Response
    content.vb: Public Class Response
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Steeltoe.Management.Endpoint.Trace.Response.Status
  commentId: P:Steeltoe.Management.Endpoint.Trace.Response.Status
  id: Status
  parent: Steeltoe.Management.Endpoint.Trace.Response
  langs:
  - csharp
  - vb
  name: Status
  nameWithType: Response.Status
  fullName: Steeltoe.Management.Endpoint.Trace.Response.Status
  type: Property
  source:
    remote:
      path: src/Management/src/EndpointBase/Trace/HttpTraceResult.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Status
    path: ../Steeltoe/src/Management/src/EndpointBase/Trace/HttpTraceResult.cs
    startLine: 79
  assemblies:
  - Steeltoe.Management.EndpointBase
  namespace: Steeltoe.Management.Endpoint.Trace
  syntax:
    content: public int Status { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property Status As Integer
  overload: Steeltoe.Management.Endpoint.Trace.Response.Status*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Steeltoe.Management.Endpoint.Trace.Response.Headers
  commentId: P:Steeltoe.Management.Endpoint.Trace.Response.Headers
  id: Headers
  parent: Steeltoe.Management.Endpoint.Trace.Response
  langs:
  - csharp
  - vb
  name: Headers
  nameWithType: Response.Headers
  fullName: Steeltoe.Management.Endpoint.Trace.Response.Headers
  type: Property
  source:
    remote:
      path: src/Management/src/EndpointBase/Trace/HttpTraceResult.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Headers
    path: ../Steeltoe/src/Management/src/EndpointBase/Trace/HttpTraceResult.cs
    startLine: 81
  assemblies:
  - Steeltoe.Management.EndpointBase
  namespace: Steeltoe.Management.Endpoint.Trace
  syntax:
    content: public IDictionary<string, string[]> Headers { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IDictionary{System.String,System.String[]}
    content.vb: Public ReadOnly Property Headers As IDictionary(Of String, String())
  overload: Steeltoe.Management.Endpoint.Trace.Response.Headers*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Steeltoe.Management.Endpoint.Trace.Response.#ctor(System.Int32,System.Collections.Generic.IDictionary{System.String,System.String[]})
  commentId: M:Steeltoe.Management.Endpoint.Trace.Response.#ctor(System.Int32,System.Collections.Generic.IDictionary{System.String,System.String[]})
  id: '#ctor(System.Int32,System.Collections.Generic.IDictionary{System.String,System.String[]})'
  parent: Steeltoe.Management.Endpoint.Trace.Response
  langs:
  - csharp
  - vb
  name: Response(Int32, IDictionary<String, String[]>)
  nameWithType: Response.Response(Int32, IDictionary<String, String[]>)
  fullName: Steeltoe.Management.Endpoint.Trace.Response.Response(System.Int32, System.Collections.Generic.IDictionary<System.String, System.String[]>)
  type: Constructor
  source:
    remote:
      path: src/Management/src/EndpointBase/Trace/HttpTraceResult.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: .ctor
    path: ../Steeltoe/src/Management/src/EndpointBase/Trace/HttpTraceResult.cs
    startLine: 83
  assemblies:
  - Steeltoe.Management.EndpointBase
  namespace: Steeltoe.Management.Endpoint.Trace
  syntax:
    content: public Response(int status, IDictionary<string, string[]> headers)
    parameters:
    - id: status
      type: System.Int32
    - id: headers
      type: System.Collections.Generic.IDictionary{System.String,System.String[]}
    content.vb: Public Sub New(status As Integer, headers As IDictionary(Of String, String()))
  overload: Steeltoe.Management.Endpoint.Trace.Response.#ctor*
  nameWithType.vb: Response.Response(Int32, IDictionary(Of String, String()))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Steeltoe.Management.Endpoint.Trace.Response.Response(System.Int32, System.Collections.Generic.IDictionary(Of System.String, System.String()))
  name.vb: Response(Int32, IDictionary(Of String, String()))
references:
- uid: Steeltoe.Management.Endpoint.Trace
  commentId: N:Steeltoe.Management.Endpoint.Trace
  name: Steeltoe.Management.Endpoint.Trace
  nameWithType: Steeltoe.Management.Endpoint.Trace
  fullName: Steeltoe.Management.Endpoint.Trace
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Steeltoe.Management.Endpoint.Trace.Response.Status*
  commentId: Overload:Steeltoe.Management.Endpoint.Trace.Response.Status
  name: Status
  nameWithType: Response.Status
  fullName: Steeltoe.Management.Endpoint.Trace.Response.Status
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Steeltoe.Management.Endpoint.Trace.Response.Headers*
  commentId: Overload:Steeltoe.Management.Endpoint.Trace.Response.Headers
  name: Headers
  nameWithType: Response.Headers
  fullName: Steeltoe.Management.Endpoint.Trace.Response.Headers
- uid: System.Collections.Generic.IDictionary{System.String,System.String[]}
  commentId: T:System.Collections.Generic.IDictionary{System.String,System.String[]}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IDictionary`2
  name: IDictionary<String, String[]>
  nameWithType: IDictionary<String, String[]>
  fullName: System.Collections.Generic.IDictionary<System.String, System.String[]>
  nameWithType.vb: IDictionary(Of String, String())
  fullName.vb: System.Collections.Generic.IDictionary(Of System.String, System.String())
  name.vb: IDictionary(Of String, String())
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IDictionary`2
  commentId: T:System.Collections.Generic.IDictionary`2
  isExternal: true
  name: IDictionary<TKey, TValue>
  nameWithType: IDictionary<TKey, TValue>
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>
  nameWithType.vb: IDictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.IDictionary(Of TKey, TValue)
  name.vb: IDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Steeltoe.Management.Endpoint.Trace.Response.#ctor*
  commentId: Overload:Steeltoe.Management.Endpoint.Trace.Response.#ctor
  name: Response
  nameWithType: Response.Response
  fullName: Steeltoe.Management.Endpoint.Trace.Response.Response
