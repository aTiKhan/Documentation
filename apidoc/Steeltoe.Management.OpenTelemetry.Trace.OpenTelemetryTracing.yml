### YamlMime:ManagedReference
items:
- uid: Steeltoe.Management.OpenTelemetry.Trace.OpenTelemetryTracing
  commentId: T:Steeltoe.Management.OpenTelemetry.Trace.OpenTelemetryTracing
  id: OpenTelemetryTracing
  parent: Steeltoe.Management.OpenTelemetry.Trace
  children:
  - Steeltoe.Management.OpenTelemetry.Trace.OpenTelemetryTracing.#ctor(Steeltoe.Management.OpenTelemetry.Trace.ITracingOptions,System.Action{TracerBuilder})
  - Steeltoe.Management.OpenTelemetry.Trace.OpenTelemetryTracing.ConfiguredSampler
  - Steeltoe.Management.OpenTelemetry.Trace.OpenTelemetryTracing.TextFormat
  - Steeltoe.Management.OpenTelemetry.Trace.OpenTelemetryTracing.Tracer
  - Steeltoe.Management.OpenTelemetry.Trace.OpenTelemetryTracing.TracerConfiguration
  langs:
  - csharp
  - vb
  name: OpenTelemetryTracing
  nameWithType: OpenTelemetryTracing
  fullName: Steeltoe.Management.OpenTelemetry.Trace.OpenTelemetryTracing
  type: Class
  source:
    remote:
      path: src/Management/src/OpenTelemetryBase/Trace/OpenTelemetryTracing.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: OpenTelemetryTracing
    path: ../Steeltoe/src/Management/src/OpenTelemetryBase/Trace/OpenTelemetryTracing.cs
    startLine: 12
  assemblies:
  - Steeltoe.Management.OpenTelemetryBase
  namespace: Steeltoe.Management.OpenTelemetry.Trace
  syntax:
    content: 'public class OpenTelemetryTracing : ITracing'
    content.vb: >-
      Public Class OpenTelemetryTracing

          Implements ITracing
  inheritance:
  - System.Object
  implements:
  - Steeltoe.Management.OpenTelemetry.Trace.ITracing
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Steeltoe.Management.OpenTelemetry.Trace.OpenTelemetryTracing.#ctor(Steeltoe.Management.OpenTelemetry.Trace.ITracingOptions,System.Action{TracerBuilder})
  commentId: M:Steeltoe.Management.OpenTelemetry.Trace.OpenTelemetryTracing.#ctor(Steeltoe.Management.OpenTelemetry.Trace.ITracingOptions,System.Action{TracerBuilder})
  id: '#ctor(Steeltoe.Management.OpenTelemetry.Trace.ITracingOptions,System.Action{TracerBuilder})'
  parent: Steeltoe.Management.OpenTelemetry.Trace.OpenTelemetryTracing
  langs:
  - csharp
  - vb
  name: OpenTelemetryTracing(ITracingOptions, Action<TracerBuilder>)
  nameWithType: OpenTelemetryTracing.OpenTelemetryTracing(ITracingOptions, Action<TracerBuilder>)
  fullName: Steeltoe.Management.OpenTelemetry.Trace.OpenTelemetryTracing.OpenTelemetryTracing(Steeltoe.Management.OpenTelemetry.Trace.ITracingOptions, System.Action<TracerBuilder>)
  type: Constructor
  source:
    remote:
      path: src/Management/src/OpenTelemetryBase/Trace/OpenTelemetryTracing.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: .ctor
    path: ../Steeltoe/src/Management/src/OpenTelemetryBase/Trace/OpenTelemetryTracing.cs
    startLine: 20
  assemblies:
  - Steeltoe.Management.OpenTelemetryBase
  namespace: Steeltoe.Management.OpenTelemetry.Trace
  syntax:
    content: public OpenTelemetryTracing(ITracingOptions options, Action<TracerBuilder> configureTracer = null)
    parameters:
    - id: options
      type: Steeltoe.Management.OpenTelemetry.Trace.ITracingOptions
    - id: configureTracer
      type: System.Action{TracerBuilder}
    content.vb: Public Sub New(options As ITracingOptions, configureTracer As Action(Of TracerBuilder) = Nothing)
  overload: Steeltoe.Management.OpenTelemetry.Trace.OpenTelemetryTracing.#ctor*
  nameWithType.vb: OpenTelemetryTracing.OpenTelemetryTracing(ITracingOptions, Action(Of TracerBuilder))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Steeltoe.Management.OpenTelemetry.Trace.OpenTelemetryTracing.OpenTelemetryTracing(Steeltoe.Management.OpenTelemetry.Trace.ITracingOptions, System.Action(Of TracerBuilder))
  name.vb: OpenTelemetryTracing(ITracingOptions, Action(Of TracerBuilder))
- uid: Steeltoe.Management.OpenTelemetry.Trace.OpenTelemetryTracing.Tracer
  commentId: P:Steeltoe.Management.OpenTelemetry.Trace.OpenTelemetryTracing.Tracer
  id: Tracer
  parent: Steeltoe.Management.OpenTelemetry.Trace.OpenTelemetryTracing
  langs:
  - csharp
  - vb
  name: Tracer
  nameWithType: OpenTelemetryTracing.Tracer
  fullName: Steeltoe.Management.OpenTelemetry.Trace.OpenTelemetryTracing.Tracer
  type: Property
  source:
    remote:
      path: src/Management/src/OpenTelemetryBase/Trace/OpenTelemetryTracing.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Tracer
    path: ../Steeltoe/src/Management/src/OpenTelemetryBase/Trace/OpenTelemetryTracing.cs
    startLine: 59
  assemblies:
  - Steeltoe.Management.OpenTelemetryBase
  namespace: Steeltoe.Management.OpenTelemetry.Trace
  syntax:
    content: public Tracer Tracer { get; }
    parameters: []
    return:
      type: Tracer
    content.vb: Public ReadOnly Property Tracer As Tracer
  overload: Steeltoe.Management.OpenTelemetry.Trace.OpenTelemetryTracing.Tracer*
  implements:
  - Steeltoe.Management.OpenTelemetry.Trace.ITracing.Tracer
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Steeltoe.Management.OpenTelemetry.Trace.OpenTelemetryTracing.TextFormat
  commentId: P:Steeltoe.Management.OpenTelemetry.Trace.OpenTelemetryTracing.TextFormat
  id: TextFormat
  parent: Steeltoe.Management.OpenTelemetry.Trace.OpenTelemetryTracing
  langs:
  - csharp
  - vb
  name: TextFormat
  nameWithType: OpenTelemetryTracing.TextFormat
  fullName: Steeltoe.Management.OpenTelemetry.Trace.OpenTelemetryTracing.TextFormat
  type: Property
  source:
    remote:
      path: src/Management/src/OpenTelemetryBase/Trace/OpenTelemetryTracing.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: TextFormat
    path: ../Steeltoe/src/Management/src/OpenTelemetryBase/Trace/OpenTelemetryTracing.cs
    startLine: 61
  assemblies:
  - Steeltoe.Management.OpenTelemetryBase
  namespace: Steeltoe.Management.OpenTelemetry.Trace
  syntax:
    content: public ITextFormat TextFormat { get; }
    parameters: []
    return:
      type: ITextFormat
    content.vb: Public ReadOnly Property TextFormat As ITextFormat
  overload: Steeltoe.Management.OpenTelemetry.Trace.OpenTelemetryTracing.TextFormat*
  implements:
  - Steeltoe.Management.OpenTelemetry.Trace.ITracing.TextFormat
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Steeltoe.Management.OpenTelemetry.Trace.OpenTelemetryTracing.TracerConfiguration
  commentId: P:Steeltoe.Management.OpenTelemetry.Trace.OpenTelemetryTracing.TracerConfiguration
  id: TracerConfiguration
  parent: Steeltoe.Management.OpenTelemetry.Trace.OpenTelemetryTracing
  langs:
  - csharp
  - vb
  name: TracerConfiguration
  nameWithType: OpenTelemetryTracing.TracerConfiguration
  fullName: Steeltoe.Management.OpenTelemetry.Trace.OpenTelemetryTracing.TracerConfiguration
  type: Property
  source:
    remote:
      path: src/Management/src/OpenTelemetryBase/Trace/OpenTelemetryTracing.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: TracerConfiguration
    path: ../Steeltoe/src/Management/src/OpenTelemetryBase/Trace/OpenTelemetryTracing.cs
    startLine: 63
  assemblies:
  - Steeltoe.Management.OpenTelemetryBase
  namespace: Steeltoe.Management.OpenTelemetry.Trace
  syntax:
    content: public TracerConfiguration TracerConfiguration { get; }
    parameters: []
    return:
      type: TracerConfiguration
    content.vb: Public ReadOnly Property TracerConfiguration As TracerConfiguration
  overload: Steeltoe.Management.OpenTelemetry.Trace.OpenTelemetryTracing.TracerConfiguration*
  implements:
  - Steeltoe.Management.OpenTelemetry.Trace.ITracing.TracerConfiguration
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Steeltoe.Management.OpenTelemetry.Trace.OpenTelemetryTracing.ConfiguredSampler
  commentId: P:Steeltoe.Management.OpenTelemetry.Trace.OpenTelemetryTracing.ConfiguredSampler
  id: ConfiguredSampler
  parent: Steeltoe.Management.OpenTelemetry.Trace.OpenTelemetryTracing
  langs:
  - csharp
  - vb
  name: ConfiguredSampler
  nameWithType: OpenTelemetryTracing.ConfiguredSampler
  fullName: Steeltoe.Management.OpenTelemetry.Trace.OpenTelemetryTracing.ConfiguredSampler
  type: Property
  source:
    remote:
      path: src/Management/src/OpenTelemetryBase/Trace/OpenTelemetryTracing.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: ConfiguredSampler
    path: ../Steeltoe/src/Management/src/OpenTelemetryBase/Trace/OpenTelemetryTracing.cs
    startLine: 68
  assemblies:
  - Steeltoe.Management.OpenTelemetryBase
  namespace: Steeltoe.Management.OpenTelemetry.Trace
  summary: "\nGets sampler configured from Options. If a sampler is setup in the builder this property will not reflect it.\n"
  example: []
  syntax:
    content: public Sampler ConfiguredSampler { get; }
    parameters: []
    return:
      type: Sampler
    content.vb: Public ReadOnly Property ConfiguredSampler As Sampler
  overload: Steeltoe.Management.OpenTelemetry.Trace.OpenTelemetryTracing.ConfiguredSampler*
  implements:
  - Steeltoe.Management.OpenTelemetry.Trace.ITracing.ConfiguredSampler
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: Steeltoe.Management.OpenTelemetry.Trace
  commentId: N:Steeltoe.Management.OpenTelemetry.Trace
  name: Steeltoe.Management.OpenTelemetry.Trace
  nameWithType: Steeltoe.Management.OpenTelemetry.Trace
  fullName: Steeltoe.Management.OpenTelemetry.Trace
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Steeltoe.Management.OpenTelemetry.Trace.ITracing
  commentId: T:Steeltoe.Management.OpenTelemetry.Trace.ITracing
  parent: Steeltoe.Management.OpenTelemetry.Trace
  name: ITracing
  nameWithType: ITracing
  fullName: Steeltoe.Management.OpenTelemetry.Trace.ITracing
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Steeltoe.Management.OpenTelemetry.Trace.OpenTelemetryTracing.#ctor*
  commentId: Overload:Steeltoe.Management.OpenTelemetry.Trace.OpenTelemetryTracing.#ctor
  name: OpenTelemetryTracing
  nameWithType: OpenTelemetryTracing.OpenTelemetryTracing
  fullName: Steeltoe.Management.OpenTelemetry.Trace.OpenTelemetryTracing.OpenTelemetryTracing
- uid: Steeltoe.Management.OpenTelemetry.Trace.ITracingOptions
  commentId: T:Steeltoe.Management.OpenTelemetry.Trace.ITracingOptions
  parent: Steeltoe.Management.OpenTelemetry.Trace
  name: ITracingOptions
  nameWithType: ITracingOptions
  fullName: Steeltoe.Management.OpenTelemetry.Trace.ITracingOptions
- uid: System.Action{TracerBuilder}
  commentId: T:System.Action{TracerBuilder}
  parent: System
  definition: System.Action`1
  name: Action<TracerBuilder>
  nameWithType: Action<TracerBuilder>
  fullName: System.Action<TracerBuilder>
  nameWithType.vb: Action(Of TracerBuilder)
  fullName.vb: System.Action(Of TracerBuilder)
  name.vb: Action(Of TracerBuilder)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: TracerBuilder
    name: TracerBuilder
    nameWithType: TracerBuilder
    fullName: TracerBuilder
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: TracerBuilder
    name: TracerBuilder
    nameWithType: TracerBuilder
    fullName: TracerBuilder
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Action`1
  commentId: T:System.Action`1
  isExternal: true
  name: Action<T>
  nameWithType: Action<T>
  fullName: System.Action<T>
  nameWithType.vb: Action(Of T)
  fullName.vb: System.Action(Of T)
  name.vb: Action(Of T)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Management.OpenTelemetry.Trace.OpenTelemetryTracing.Tracer*
  commentId: Overload:Steeltoe.Management.OpenTelemetry.Trace.OpenTelemetryTracing.Tracer
  name: Tracer
  nameWithType: OpenTelemetryTracing.Tracer
  fullName: Steeltoe.Management.OpenTelemetry.Trace.OpenTelemetryTracing.Tracer
- uid: Steeltoe.Management.OpenTelemetry.Trace.ITracing.Tracer
  commentId: P:Steeltoe.Management.OpenTelemetry.Trace.ITracing.Tracer
  parent: Steeltoe.Management.OpenTelemetry.Trace.ITracing
  name: Tracer
  nameWithType: ITracing.Tracer
  fullName: Steeltoe.Management.OpenTelemetry.Trace.ITracing.Tracer
- uid: Tracer
  isExternal: true
  name: Tracer
  nameWithType: Tracer
  fullName: Tracer
- uid: Steeltoe.Management.OpenTelemetry.Trace.OpenTelemetryTracing.TextFormat*
  commentId: Overload:Steeltoe.Management.OpenTelemetry.Trace.OpenTelemetryTracing.TextFormat
  name: TextFormat
  nameWithType: OpenTelemetryTracing.TextFormat
  fullName: Steeltoe.Management.OpenTelemetry.Trace.OpenTelemetryTracing.TextFormat
- uid: Steeltoe.Management.OpenTelemetry.Trace.ITracing.TextFormat
  commentId: P:Steeltoe.Management.OpenTelemetry.Trace.ITracing.TextFormat
  parent: Steeltoe.Management.OpenTelemetry.Trace.ITracing
  name: TextFormat
  nameWithType: ITracing.TextFormat
  fullName: Steeltoe.Management.OpenTelemetry.Trace.ITracing.TextFormat
- uid: ITextFormat
  isExternal: true
  name: ITextFormat
  nameWithType: ITextFormat
  fullName: ITextFormat
- uid: Steeltoe.Management.OpenTelemetry.Trace.OpenTelemetryTracing.TracerConfiguration*
  commentId: Overload:Steeltoe.Management.OpenTelemetry.Trace.OpenTelemetryTracing.TracerConfiguration
  name: TracerConfiguration
  nameWithType: OpenTelemetryTracing.TracerConfiguration
  fullName: Steeltoe.Management.OpenTelemetry.Trace.OpenTelemetryTracing.TracerConfiguration
- uid: Steeltoe.Management.OpenTelemetry.Trace.ITracing.TracerConfiguration
  commentId: P:Steeltoe.Management.OpenTelemetry.Trace.ITracing.TracerConfiguration
  parent: Steeltoe.Management.OpenTelemetry.Trace.ITracing
  name: TracerConfiguration
  nameWithType: ITracing.TracerConfiguration
  fullName: Steeltoe.Management.OpenTelemetry.Trace.ITracing.TracerConfiguration
- uid: TracerConfiguration
  isExternal: true
  name: TracerConfiguration
  nameWithType: TracerConfiguration
  fullName: TracerConfiguration
- uid: Steeltoe.Management.OpenTelemetry.Trace.OpenTelemetryTracing.ConfiguredSampler*
  commentId: Overload:Steeltoe.Management.OpenTelemetry.Trace.OpenTelemetryTracing.ConfiguredSampler
  name: ConfiguredSampler
  nameWithType: OpenTelemetryTracing.ConfiguredSampler
  fullName: Steeltoe.Management.OpenTelemetry.Trace.OpenTelemetryTracing.ConfiguredSampler
- uid: Steeltoe.Management.OpenTelemetry.Trace.ITracing.ConfiguredSampler
  commentId: P:Steeltoe.Management.OpenTelemetry.Trace.ITracing.ConfiguredSampler
  parent: Steeltoe.Management.OpenTelemetry.Trace.ITracing
  name: ConfiguredSampler
  nameWithType: ITracing.ConfiguredSampler
  fullName: Steeltoe.Management.OpenTelemetry.Trace.ITracing.ConfiguredSampler
- uid: Sampler
  isExternal: true
  name: Sampler
  nameWithType: Sampler
  fullName: Sampler
