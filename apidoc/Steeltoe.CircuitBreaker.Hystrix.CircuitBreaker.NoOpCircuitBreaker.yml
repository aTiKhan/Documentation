### YamlMime:ManagedReference
items:
- uid: Steeltoe.CircuitBreaker.Hystrix.CircuitBreaker.NoOpCircuitBreaker
  commentId: T:Steeltoe.CircuitBreaker.Hystrix.CircuitBreaker.NoOpCircuitBreaker
  id: NoOpCircuitBreaker
  parent: Steeltoe.CircuitBreaker.Hystrix.CircuitBreaker
  children:
  - Steeltoe.CircuitBreaker.Hystrix.CircuitBreaker.NoOpCircuitBreaker.AllowRequest
  - Steeltoe.CircuitBreaker.Hystrix.CircuitBreaker.NoOpCircuitBreaker.IsOpen
  - Steeltoe.CircuitBreaker.Hystrix.CircuitBreaker.NoOpCircuitBreaker.MarkSuccess
  langs:
  - csharp
  - vb
  name: NoOpCircuitBreaker
  nameWithType: NoOpCircuitBreaker
  fullName: Steeltoe.CircuitBreaker.Hystrix.CircuitBreaker.NoOpCircuitBreaker
  type: Class
  source:
    remote:
      path: src/CircuitBreaker/src/HystrixBase/CircuitBreaker/NoOpCircuitBreaker.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: NoOpCircuitBreaker
    path: ../Steeltoe/src/CircuitBreaker/src/HystrixBase/CircuitBreaker/NoOpCircuitBreaker.cs
    startLine: 6
  assemblies:
  - Steeltoe.CircuitBreaker.HystrixBase
  namespace: Steeltoe.CircuitBreaker.Hystrix.CircuitBreaker
  syntax:
    content: 'public class NoOpCircuitBreaker : ICircuitBreaker'
    content.vb: >-
      Public Class NoOpCircuitBreaker

          Implements ICircuitBreaker
  inheritance:
  - System.Object
  implements:
  - Steeltoe.CircuitBreaker.ICircuitBreaker
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Steeltoe.CircuitBreaker.Hystrix.CircuitBreaker.NoOpCircuitBreaker.MarkSuccess
  commentId: M:Steeltoe.CircuitBreaker.Hystrix.CircuitBreaker.NoOpCircuitBreaker.MarkSuccess
  id: MarkSuccess
  parent: Steeltoe.CircuitBreaker.Hystrix.CircuitBreaker.NoOpCircuitBreaker
  langs:
  - csharp
  - vb
  name: MarkSuccess()
  nameWithType: NoOpCircuitBreaker.MarkSuccess()
  fullName: Steeltoe.CircuitBreaker.Hystrix.CircuitBreaker.NoOpCircuitBreaker.MarkSuccess()
  type: Method
  source:
    remote:
      path: src/CircuitBreaker/src/HystrixBase/CircuitBreaker/NoOpCircuitBreaker.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: MarkSuccess
    path: ../Steeltoe/src/CircuitBreaker/src/HystrixBase/CircuitBreaker/NoOpCircuitBreaker.cs
    startLine: 8
  assemblies:
  - Steeltoe.CircuitBreaker.HystrixBase
  namespace: Steeltoe.CircuitBreaker.Hystrix.CircuitBreaker
  syntax:
    content: public void MarkSuccess()
    content.vb: Public Sub MarkSuccess
  overload: Steeltoe.CircuitBreaker.Hystrix.CircuitBreaker.NoOpCircuitBreaker.MarkSuccess*
  implements:
  - Steeltoe.CircuitBreaker.ICircuitBreaker.MarkSuccess
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Steeltoe.CircuitBreaker.Hystrix.CircuitBreaker.NoOpCircuitBreaker.AllowRequest
  commentId: P:Steeltoe.CircuitBreaker.Hystrix.CircuitBreaker.NoOpCircuitBreaker.AllowRequest
  id: AllowRequest
  parent: Steeltoe.CircuitBreaker.Hystrix.CircuitBreaker.NoOpCircuitBreaker
  langs:
  - csharp
  - vb
  name: AllowRequest
  nameWithType: NoOpCircuitBreaker.AllowRequest
  fullName: Steeltoe.CircuitBreaker.Hystrix.CircuitBreaker.NoOpCircuitBreaker.AllowRequest
  type: Property
  source:
    remote:
      path: src/CircuitBreaker/src/HystrixBase/CircuitBreaker/NoOpCircuitBreaker.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: AllowRequest
    path: ../Steeltoe/src/CircuitBreaker/src/HystrixBase/CircuitBreaker/NoOpCircuitBreaker.cs
    startLine: 13
  assemblies:
  - Steeltoe.CircuitBreaker.HystrixBase
  namespace: Steeltoe.CircuitBreaker.Hystrix.CircuitBreaker
  syntax:
    content: public bool AllowRequest { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property AllowRequest As Boolean
  overload: Steeltoe.CircuitBreaker.Hystrix.CircuitBreaker.NoOpCircuitBreaker.AllowRequest*
  implements:
  - Steeltoe.CircuitBreaker.ICircuitBreaker.AllowRequest
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Steeltoe.CircuitBreaker.Hystrix.CircuitBreaker.NoOpCircuitBreaker.IsOpen
  commentId: P:Steeltoe.CircuitBreaker.Hystrix.CircuitBreaker.NoOpCircuitBreaker.IsOpen
  id: IsOpen
  parent: Steeltoe.CircuitBreaker.Hystrix.CircuitBreaker.NoOpCircuitBreaker
  langs:
  - csharp
  - vb
  name: IsOpen
  nameWithType: NoOpCircuitBreaker.IsOpen
  fullName: Steeltoe.CircuitBreaker.Hystrix.CircuitBreaker.NoOpCircuitBreaker.IsOpen
  type: Property
  source:
    remote:
      path: src/CircuitBreaker/src/HystrixBase/CircuitBreaker/NoOpCircuitBreaker.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: IsOpen
    path: ../Steeltoe/src/CircuitBreaker/src/HystrixBase/CircuitBreaker/NoOpCircuitBreaker.cs
    startLine: 15
  assemblies:
  - Steeltoe.CircuitBreaker.HystrixBase
  namespace: Steeltoe.CircuitBreaker.Hystrix.CircuitBreaker
  syntax:
    content: public bool IsOpen { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsOpen As Boolean
  overload: Steeltoe.CircuitBreaker.Hystrix.CircuitBreaker.NoOpCircuitBreaker.IsOpen*
  implements:
  - Steeltoe.CircuitBreaker.ICircuitBreaker.IsOpen
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: Steeltoe.CircuitBreaker.Hystrix.CircuitBreaker
  commentId: N:Steeltoe.CircuitBreaker.Hystrix.CircuitBreaker
  name: Steeltoe.CircuitBreaker.Hystrix.CircuitBreaker
  nameWithType: Steeltoe.CircuitBreaker.Hystrix.CircuitBreaker
  fullName: Steeltoe.CircuitBreaker.Hystrix.CircuitBreaker
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Steeltoe.CircuitBreaker.ICircuitBreaker
  commentId: T:Steeltoe.CircuitBreaker.ICircuitBreaker
  parent: Steeltoe.CircuitBreaker
  name: ICircuitBreaker
  nameWithType: ICircuitBreaker
  fullName: Steeltoe.CircuitBreaker.ICircuitBreaker
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Steeltoe.CircuitBreaker
  commentId: N:Steeltoe.CircuitBreaker
  name: Steeltoe.CircuitBreaker
  nameWithType: Steeltoe.CircuitBreaker
  fullName: Steeltoe.CircuitBreaker
- uid: Steeltoe.CircuitBreaker.Hystrix.CircuitBreaker.NoOpCircuitBreaker.MarkSuccess*
  commentId: Overload:Steeltoe.CircuitBreaker.Hystrix.CircuitBreaker.NoOpCircuitBreaker.MarkSuccess
  name: MarkSuccess
  nameWithType: NoOpCircuitBreaker.MarkSuccess
  fullName: Steeltoe.CircuitBreaker.Hystrix.CircuitBreaker.NoOpCircuitBreaker.MarkSuccess
- uid: Steeltoe.CircuitBreaker.ICircuitBreaker.MarkSuccess
  commentId: M:Steeltoe.CircuitBreaker.ICircuitBreaker.MarkSuccess
  parent: Steeltoe.CircuitBreaker.ICircuitBreaker
  name: MarkSuccess()
  nameWithType: ICircuitBreaker.MarkSuccess()
  fullName: Steeltoe.CircuitBreaker.ICircuitBreaker.MarkSuccess()
  spec.csharp:
  - uid: Steeltoe.CircuitBreaker.ICircuitBreaker.MarkSuccess
    name: MarkSuccess
    nameWithType: ICircuitBreaker.MarkSuccess
    fullName: Steeltoe.CircuitBreaker.ICircuitBreaker.MarkSuccess
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.CircuitBreaker.ICircuitBreaker.MarkSuccess
    name: MarkSuccess
    nameWithType: ICircuitBreaker.MarkSuccess
    fullName: Steeltoe.CircuitBreaker.ICircuitBreaker.MarkSuccess
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.CircuitBreaker.Hystrix.CircuitBreaker.NoOpCircuitBreaker.AllowRequest*
  commentId: Overload:Steeltoe.CircuitBreaker.Hystrix.CircuitBreaker.NoOpCircuitBreaker.AllowRequest
  name: AllowRequest
  nameWithType: NoOpCircuitBreaker.AllowRequest
  fullName: Steeltoe.CircuitBreaker.Hystrix.CircuitBreaker.NoOpCircuitBreaker.AllowRequest
- uid: Steeltoe.CircuitBreaker.ICircuitBreaker.AllowRequest
  commentId: P:Steeltoe.CircuitBreaker.ICircuitBreaker.AllowRequest
  parent: Steeltoe.CircuitBreaker.ICircuitBreaker
  name: AllowRequest
  nameWithType: ICircuitBreaker.AllowRequest
  fullName: Steeltoe.CircuitBreaker.ICircuitBreaker.AllowRequest
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Steeltoe.CircuitBreaker.Hystrix.CircuitBreaker.NoOpCircuitBreaker.IsOpen*
  commentId: Overload:Steeltoe.CircuitBreaker.Hystrix.CircuitBreaker.NoOpCircuitBreaker.IsOpen
  name: IsOpen
  nameWithType: NoOpCircuitBreaker.IsOpen
  fullName: Steeltoe.CircuitBreaker.Hystrix.CircuitBreaker.NoOpCircuitBreaker.IsOpen
- uid: Steeltoe.CircuitBreaker.ICircuitBreaker.IsOpen
  commentId: P:Steeltoe.CircuitBreaker.ICircuitBreaker.IsOpen
  parent: Steeltoe.CircuitBreaker.ICircuitBreaker
  name: IsOpen
  nameWithType: ICircuitBreaker.IsOpen
  fullName: Steeltoe.CircuitBreaker.ICircuitBreaker.IsOpen
