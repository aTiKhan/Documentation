### YamlMime:ManagedReference
items:
- uid: Steeltoe.Management.Endpoint.Env.EnvironmentDescriptor
  commentId: T:Steeltoe.Management.Endpoint.Env.EnvironmentDescriptor
  id: EnvironmentDescriptor
  parent: Steeltoe.Management.Endpoint.Env
  children:
  - Steeltoe.Management.Endpoint.Env.EnvironmentDescriptor.#ctor(System.Collections.Generic.IList{System.String},System.Collections.Generic.IList{Steeltoe.Management.Endpoint.Env.PropertySourceDescriptor})
  - Steeltoe.Management.Endpoint.Env.EnvironmentDescriptor.ActiveProfiles
  - Steeltoe.Management.Endpoint.Env.EnvironmentDescriptor.PropertySources
  langs:
  - csharp
  - vb
  name: EnvironmentDescriptor
  nameWithType: EnvironmentDescriptor
  fullName: Steeltoe.Management.Endpoint.Env.EnvironmentDescriptor
  type: Class
  source:
    remote:
      path: src/Management/src/EndpointBase/Env/EnvironmentDescriptor.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: EnvironmentDescriptor
    path: ../Steeltoe/src/Management/src/EndpointBase/Env/EnvironmentDescriptor.cs
    startLine: 9
  assemblies:
  - Steeltoe.Management.EndpointBase
  namespace: Steeltoe.Management.Endpoint.Env
  syntax:
    content: public class EnvironmentDescriptor
    content.vb: Public Class EnvironmentDescriptor
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Steeltoe.Management.Endpoint.Env.EnvironmentDescriptor.#ctor(System.Collections.Generic.IList{System.String},System.Collections.Generic.IList{Steeltoe.Management.Endpoint.Env.PropertySourceDescriptor})
  commentId: M:Steeltoe.Management.Endpoint.Env.EnvironmentDescriptor.#ctor(System.Collections.Generic.IList{System.String},System.Collections.Generic.IList{Steeltoe.Management.Endpoint.Env.PropertySourceDescriptor})
  id: '#ctor(System.Collections.Generic.IList{System.String},System.Collections.Generic.IList{Steeltoe.Management.Endpoint.Env.PropertySourceDescriptor})'
  parent: Steeltoe.Management.Endpoint.Env.EnvironmentDescriptor
  langs:
  - csharp
  - vb
  name: EnvironmentDescriptor(IList<String>, IList<PropertySourceDescriptor>)
  nameWithType: EnvironmentDescriptor.EnvironmentDescriptor(IList<String>, IList<PropertySourceDescriptor>)
  fullName: Steeltoe.Management.Endpoint.Env.EnvironmentDescriptor.EnvironmentDescriptor(System.Collections.Generic.IList<System.String>, System.Collections.Generic.IList<Steeltoe.Management.Endpoint.Env.PropertySourceDescriptor>)
  type: Constructor
  source:
    remote:
      path: src/Management/src/EndpointBase/Env/EnvironmentDescriptor.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: .ctor
    path: ../Steeltoe/src/Management/src/EndpointBase/Env/EnvironmentDescriptor.cs
    startLine: 11
  assemblies:
  - Steeltoe.Management.EndpointBase
  namespace: Steeltoe.Management.Endpoint.Env
  syntax:
    content: public EnvironmentDescriptor(IList<string> activeProfiles, IList<PropertySourceDescriptor> sources)
    parameters:
    - id: activeProfiles
      type: System.Collections.Generic.IList{System.String}
    - id: sources
      type: System.Collections.Generic.IList{Steeltoe.Management.Endpoint.Env.PropertySourceDescriptor}
    content.vb: Public Sub New(activeProfiles As IList(Of String), sources As IList(Of PropertySourceDescriptor))
  overload: Steeltoe.Management.Endpoint.Env.EnvironmentDescriptor.#ctor*
  nameWithType.vb: EnvironmentDescriptor.EnvironmentDescriptor(IList(Of String), IList(Of PropertySourceDescriptor))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Steeltoe.Management.Endpoint.Env.EnvironmentDescriptor.EnvironmentDescriptor(System.Collections.Generic.IList(Of System.String), System.Collections.Generic.IList(Of Steeltoe.Management.Endpoint.Env.PropertySourceDescriptor))
  name.vb: EnvironmentDescriptor(IList(Of String), IList(Of PropertySourceDescriptor))
- uid: Steeltoe.Management.Endpoint.Env.EnvironmentDescriptor.ActiveProfiles
  commentId: P:Steeltoe.Management.Endpoint.Env.EnvironmentDescriptor.ActiveProfiles
  id: ActiveProfiles
  parent: Steeltoe.Management.Endpoint.Env.EnvironmentDescriptor
  langs:
  - csharp
  - vb
  name: ActiveProfiles
  nameWithType: EnvironmentDescriptor.ActiveProfiles
  fullName: Steeltoe.Management.Endpoint.Env.EnvironmentDescriptor.ActiveProfiles
  type: Property
  source:
    remote:
      path: src/Management/src/EndpointBase/Env/EnvironmentDescriptor.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: ActiveProfiles
    path: ../Steeltoe/src/Management/src/EndpointBase/Env/EnvironmentDescriptor.cs
    startLine: 17
  assemblies:
  - Steeltoe.Management.EndpointBase
  namespace: Steeltoe.Management.Endpoint.Env
  syntax:
    content: >-
      [JsonPropertyName("activeProfiles")]

      public IList<string> ActiveProfiles { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IList{System.String}
    content.vb: >-
      <JsonPropertyName("activeProfiles")>

      Public ReadOnly Property ActiveProfiles As IList(Of String)
  overload: Steeltoe.Management.Endpoint.Env.EnvironmentDescriptor.ActiveProfiles*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: activeProfiles
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Steeltoe.Management.Endpoint.Env.EnvironmentDescriptor.PropertySources
  commentId: P:Steeltoe.Management.Endpoint.Env.EnvironmentDescriptor.PropertySources
  id: PropertySources
  parent: Steeltoe.Management.Endpoint.Env.EnvironmentDescriptor
  langs:
  - csharp
  - vb
  name: PropertySources
  nameWithType: EnvironmentDescriptor.PropertySources
  fullName: Steeltoe.Management.Endpoint.Env.EnvironmentDescriptor.PropertySources
  type: Property
  source:
    remote:
      path: src/Management/src/EndpointBase/Env/EnvironmentDescriptor.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: PropertySources
    path: ../Steeltoe/src/Management/src/EndpointBase/Env/EnvironmentDescriptor.cs
    startLine: 20
  assemblies:
  - Steeltoe.Management.EndpointBase
  namespace: Steeltoe.Management.Endpoint.Env
  syntax:
    content: >-
      [JsonPropertyName("propertySources")]

      public IList<PropertySourceDescriptor> PropertySources { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IList{Steeltoe.Management.Endpoint.Env.PropertySourceDescriptor}
    content.vb: >-
      <JsonPropertyName("propertySources")>

      Public ReadOnly Property PropertySources As IList(Of PropertySourceDescriptor)
  overload: Steeltoe.Management.Endpoint.Env.EnvironmentDescriptor.PropertySources*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: propertySources
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: Steeltoe.Management.Endpoint.Env
  commentId: N:Steeltoe.Management.Endpoint.Env
  name: Steeltoe.Management.Endpoint.Env
  nameWithType: Steeltoe.Management.Endpoint.Env
  fullName: Steeltoe.Management.Endpoint.Env
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Steeltoe.Management.Endpoint.Env.EnvironmentDescriptor.#ctor*
  commentId: Overload:Steeltoe.Management.Endpoint.Env.EnvironmentDescriptor.#ctor
  name: EnvironmentDescriptor
  nameWithType: EnvironmentDescriptor.EnvironmentDescriptor
  fullName: Steeltoe.Management.Endpoint.Env.EnvironmentDescriptor.EnvironmentDescriptor
- uid: System.Collections.Generic.IList{System.String}
  commentId: T:System.Collections.Generic.IList{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<String>
  nameWithType: IList<String>
  fullName: System.Collections.Generic.IList<System.String>
  nameWithType.vb: IList(Of String)
  fullName.vb: System.Collections.Generic.IList(Of System.String)
  name.vb: IList(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList{Steeltoe.Management.Endpoint.Env.PropertySourceDescriptor}
  commentId: T:System.Collections.Generic.IList{Steeltoe.Management.Endpoint.Env.PropertySourceDescriptor}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<PropertySourceDescriptor>
  nameWithType: IList<PropertySourceDescriptor>
  fullName: System.Collections.Generic.IList<Steeltoe.Management.Endpoint.Env.PropertySourceDescriptor>
  nameWithType.vb: IList(Of PropertySourceDescriptor)
  fullName.vb: System.Collections.Generic.IList(Of Steeltoe.Management.Endpoint.Env.PropertySourceDescriptor)
  name.vb: IList(Of PropertySourceDescriptor)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Steeltoe.Management.Endpoint.Env.PropertySourceDescriptor
    name: PropertySourceDescriptor
    nameWithType: PropertySourceDescriptor
    fullName: Steeltoe.Management.Endpoint.Env.PropertySourceDescriptor
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Steeltoe.Management.Endpoint.Env.PropertySourceDescriptor
    name: PropertySourceDescriptor
    nameWithType: PropertySourceDescriptor
    fullName: Steeltoe.Management.Endpoint.Env.PropertySourceDescriptor
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullName.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Steeltoe.Management.Endpoint.Env.EnvironmentDescriptor.ActiveProfiles*
  commentId: Overload:Steeltoe.Management.Endpoint.Env.EnvironmentDescriptor.ActiveProfiles
  name: ActiveProfiles
  nameWithType: EnvironmentDescriptor.ActiveProfiles
  fullName: Steeltoe.Management.Endpoint.Env.EnvironmentDescriptor.ActiveProfiles
- uid: Steeltoe.Management.Endpoint.Env.EnvironmentDescriptor.PropertySources*
  commentId: Overload:Steeltoe.Management.Endpoint.Env.EnvironmentDescriptor.PropertySources
  name: PropertySources
  nameWithType: EnvironmentDescriptor.PropertySources
  fullName: Steeltoe.Management.Endpoint.Env.EnvironmentDescriptor.PropertySources
