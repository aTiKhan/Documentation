### YamlMime:ManagedReference
items:
- uid: Steeltoe.Management.Endpoint.Loggers.LoggerLevels
  commentId: T:Steeltoe.Management.Endpoint.Loggers.LoggerLevels
  id: LoggerLevels
  parent: Steeltoe.Management.Endpoint.Loggers
  children:
  - Steeltoe.Management.Endpoint.Loggers.LoggerLevels.#ctor(System.Nullable{LogLevel},LogLevel)
  - Steeltoe.Management.Endpoint.Loggers.LoggerLevels.ConfiguredLevel
  - Steeltoe.Management.Endpoint.Loggers.LoggerLevels.EffectiveLevel
  - Steeltoe.Management.Endpoint.Loggers.LoggerLevels.MapLogLevel(LogLevel)
  - Steeltoe.Management.Endpoint.Loggers.LoggerLevels.MapLogLevel(System.String)
  langs:
  - csharp
  - vb
  name: LoggerLevels
  nameWithType: LoggerLevels
  fullName: Steeltoe.Management.Endpoint.Loggers.LoggerLevels
  type: Class
  source:
    remote:
      path: src/Management/src/EndpointBase/Loggers/LoggerLevels.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: LoggerLevels
    path: ../Steeltoe/src/Management/src/EndpointBase/Loggers/LoggerLevels.cs
    startLine: 9
  assemblies:
  - Steeltoe.Management.EndpointBase
  namespace: Steeltoe.Management.Endpoint.Loggers
  syntax:
    content: public class LoggerLevels
    content.vb: Public Class LoggerLevels
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Steeltoe.Management.Endpoint.Loggers.LoggerLevels.#ctor(System.Nullable{LogLevel},LogLevel)
  commentId: M:Steeltoe.Management.Endpoint.Loggers.LoggerLevels.#ctor(System.Nullable{LogLevel},LogLevel)
  id: '#ctor(System.Nullable{LogLevel},LogLevel)'
  parent: Steeltoe.Management.Endpoint.Loggers.LoggerLevels
  langs:
  - csharp
  - vb
  name: LoggerLevels(Nullable<LogLevel>, LogLevel)
  nameWithType: LoggerLevels.LoggerLevels(Nullable<LogLevel>, LogLevel)
  fullName: Steeltoe.Management.Endpoint.Loggers.LoggerLevels.LoggerLevels(System.Nullable<LogLevel>, LogLevel)
  type: Constructor
  source:
    remote:
      path: src/Management/src/EndpointBase/Loggers/LoggerLevels.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: .ctor
    path: ../Steeltoe/src/Management/src/EndpointBase/Loggers/LoggerLevels.cs
    startLine: 11
  assemblies:
  - Steeltoe.Management.EndpointBase
  namespace: Steeltoe.Management.Endpoint.Loggers
  syntax:
    content: public LoggerLevels(LogLevel? configured, LogLevel effective)
    parameters:
    - id: configured
      type: System.Nullable{LogLevel}
    - id: effective
      type: LogLevel
    content.vb: Public Sub New(configured As LogLevel?, effective As LogLevel)
  overload: Steeltoe.Management.Endpoint.Loggers.LoggerLevels.#ctor*
  nameWithType.vb: LoggerLevels.LoggerLevels(Nullable(Of LogLevel), LogLevel)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Steeltoe.Management.Endpoint.Loggers.LoggerLevels.LoggerLevels(System.Nullable(Of LogLevel), LogLevel)
  name.vb: LoggerLevels(Nullable(Of LogLevel), LogLevel)
- uid: Steeltoe.Management.Endpoint.Loggers.LoggerLevels.ConfiguredLevel
  commentId: P:Steeltoe.Management.Endpoint.Loggers.LoggerLevels.ConfiguredLevel
  id: ConfiguredLevel
  parent: Steeltoe.Management.Endpoint.Loggers.LoggerLevels
  langs:
  - csharp
  - vb
  name: ConfiguredLevel
  nameWithType: LoggerLevels.ConfiguredLevel
  fullName: Steeltoe.Management.Endpoint.Loggers.LoggerLevels.ConfiguredLevel
  type: Property
  source:
    remote:
      path: src/Management/src/EndpointBase/Loggers/LoggerLevels.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: ConfiguredLevel
    path: ../Steeltoe/src/Management/src/EndpointBase/Loggers/LoggerLevels.cs
    startLine: 17
  assemblies:
  - Steeltoe.Management.EndpointBase
  namespace: Steeltoe.Management.Endpoint.Loggers
  syntax:
    content: >-
      [JsonPropertyName("configuredLevel")]

      public string ConfiguredLevel { get; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonPropertyName("configuredLevel")>

      Public ReadOnly Property ConfiguredLevel As String
  overload: Steeltoe.Management.Endpoint.Loggers.LoggerLevels.ConfiguredLevel*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: configuredLevel
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Steeltoe.Management.Endpoint.Loggers.LoggerLevels.EffectiveLevel
  commentId: P:Steeltoe.Management.Endpoint.Loggers.LoggerLevels.EffectiveLevel
  id: EffectiveLevel
  parent: Steeltoe.Management.Endpoint.Loggers.LoggerLevels
  langs:
  - csharp
  - vb
  name: EffectiveLevel
  nameWithType: LoggerLevels.EffectiveLevel
  fullName: Steeltoe.Management.Endpoint.Loggers.LoggerLevels.EffectiveLevel
  type: Property
  source:
    remote:
      path: src/Management/src/EndpointBase/Loggers/LoggerLevels.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: EffectiveLevel
    path: ../Steeltoe/src/Management/src/EndpointBase/Loggers/LoggerLevels.cs
    startLine: 20
  assemblies:
  - Steeltoe.Management.EndpointBase
  namespace: Steeltoe.Management.Endpoint.Loggers
  syntax:
    content: >-
      [JsonPropertyName("effectiveLevel")]

      public string EffectiveLevel { get; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonPropertyName("effectiveLevel")>

      Public ReadOnly Property EffectiveLevel As String
  overload: Steeltoe.Management.Endpoint.Loggers.LoggerLevels.EffectiveLevel*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: effectiveLevel
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Steeltoe.Management.Endpoint.Loggers.LoggerLevels.MapLogLevel(LogLevel)
  commentId: M:Steeltoe.Management.Endpoint.Loggers.LoggerLevels.MapLogLevel(LogLevel)
  id: MapLogLevel(LogLevel)
  parent: Steeltoe.Management.Endpoint.Loggers.LoggerLevels
  langs:
  - csharp
  - vb
  name: MapLogLevel(LogLevel)
  nameWithType: LoggerLevels.MapLogLevel(LogLevel)
  fullName: Steeltoe.Management.Endpoint.Loggers.LoggerLevels.MapLogLevel(LogLevel)
  type: Method
  source:
    remote:
      path: src/Management/src/EndpointBase/Loggers/LoggerLevels.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: MapLogLevel
    path: ../Steeltoe/src/Management/src/EndpointBase/Loggers/LoggerLevels.cs
    startLine: 23
  assemblies:
  - Steeltoe.Management.EndpointBase
  namespace: Steeltoe.Management.Endpoint.Loggers
  syntax:
    content: public static string MapLogLevel(LogLevel level)
    parameters:
    - id: level
      type: LogLevel
    return:
      type: System.String
    content.vb: Public Shared Function MapLogLevel(level As LogLevel) As String
  overload: Steeltoe.Management.Endpoint.Loggers.LoggerLevels.MapLogLevel*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Steeltoe.Management.Endpoint.Loggers.LoggerLevels.MapLogLevel(System.String)
  commentId: M:Steeltoe.Management.Endpoint.Loggers.LoggerLevels.MapLogLevel(System.String)
  id: MapLogLevel(System.String)
  parent: Steeltoe.Management.Endpoint.Loggers.LoggerLevels
  langs:
  - csharp
  - vb
  name: MapLogLevel(String)
  nameWithType: LoggerLevels.MapLogLevel(String)
  fullName: Steeltoe.Management.Endpoint.Loggers.LoggerLevels.MapLogLevel(System.String)
  type: Method
  source:
    remote:
      path: src/Management/src/EndpointBase/Loggers/LoggerLevels.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: MapLogLevel
    path: ../Steeltoe/src/Management/src/EndpointBase/Loggers/LoggerLevels.cs
    startLine: 38
  assemblies:
  - Steeltoe.Management.EndpointBase
  namespace: Steeltoe.Management.Endpoint.Loggers
  syntax:
    content: public static LogLevel? MapLogLevel(string level)
    parameters:
    - id: level
      type: System.String
    return:
      type: System.Nullable{LogLevel}
    content.vb: Public Shared Function MapLogLevel(level As String) As LogLevel?
  overload: Steeltoe.Management.Endpoint.Loggers.LoggerLevels.MapLogLevel*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Steeltoe.Management.Endpoint.Loggers
  commentId: N:Steeltoe.Management.Endpoint.Loggers
  name: Steeltoe.Management.Endpoint.Loggers
  nameWithType: Steeltoe.Management.Endpoint.Loggers
  fullName: Steeltoe.Management.Endpoint.Loggers
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Steeltoe.Management.Endpoint.Loggers.LoggerLevels.#ctor*
  commentId: Overload:Steeltoe.Management.Endpoint.Loggers.LoggerLevels.#ctor
  name: LoggerLevels
  nameWithType: LoggerLevels.LoggerLevels
  fullName: Steeltoe.Management.Endpoint.Loggers.LoggerLevels.LoggerLevels
- uid: System.Nullable{LogLevel}
  commentId: T:System.Nullable{LogLevel}
  parent: System
  definition: System.Nullable`1
  name: Nullable<LogLevel>
  nameWithType: Nullable<LogLevel>
  fullName: System.Nullable<LogLevel>
  nameWithType.vb: Nullable(Of LogLevel)
  fullName.vb: System.Nullable(Of LogLevel)
  name.vb: Nullable(Of LogLevel)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: LogLevel
    name: LogLevel
    nameWithType: LogLevel
    fullName: LogLevel
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: LogLevel
    name: LogLevel
    nameWithType: LogLevel
    fullName: LogLevel
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: LogLevel
  isExternal: true
  name: LogLevel
  nameWithType: LogLevel
  fullName: LogLevel
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Management.Endpoint.Loggers.LoggerLevels.ConfiguredLevel*
  commentId: Overload:Steeltoe.Management.Endpoint.Loggers.LoggerLevels.ConfiguredLevel
  name: ConfiguredLevel
  nameWithType: LoggerLevels.ConfiguredLevel
  fullName: Steeltoe.Management.Endpoint.Loggers.LoggerLevels.ConfiguredLevel
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Steeltoe.Management.Endpoint.Loggers.LoggerLevels.EffectiveLevel*
  commentId: Overload:Steeltoe.Management.Endpoint.Loggers.LoggerLevels.EffectiveLevel
  name: EffectiveLevel
  nameWithType: LoggerLevels.EffectiveLevel
  fullName: Steeltoe.Management.Endpoint.Loggers.LoggerLevels.EffectiveLevel
- uid: Steeltoe.Management.Endpoint.Loggers.LoggerLevels.MapLogLevel*
  commentId: Overload:Steeltoe.Management.Endpoint.Loggers.LoggerLevels.MapLogLevel
  name: MapLogLevel
  nameWithType: LoggerLevels.MapLogLevel
  fullName: Steeltoe.Management.Endpoint.Loggers.LoggerLevels.MapLogLevel
