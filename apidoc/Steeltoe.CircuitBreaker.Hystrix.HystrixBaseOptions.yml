### YamlMime:ManagedReference
items:
- uid: Steeltoe.CircuitBreaker.Hystrix.HystrixBaseOptions
  commentId: T:Steeltoe.CircuitBreaker.Hystrix.HystrixBaseOptions
  id: HystrixBaseOptions
  parent: Steeltoe.CircuitBreaker.Hystrix
  children:
  - Steeltoe.CircuitBreaker.Hystrix.HystrixBaseOptions.#ctor(Steeltoe.CircuitBreaker.Hystrix.Strategy.Options.IHystrixDynamicOptions)
  - Steeltoe.CircuitBreaker.Hystrix.HystrixBaseOptions._dynamic
  - Steeltoe.CircuitBreaker.Hystrix.HystrixBaseOptions.GetBoolean(System.String,System.String,System.String,System.Boolean,System.Nullable{System.Boolean})
  - Steeltoe.CircuitBreaker.Hystrix.HystrixBaseOptions.GetInteger(System.String,System.String,System.String,System.Int32,System.Nullable{System.Int32})
  - Steeltoe.CircuitBreaker.Hystrix.HystrixBaseOptions.GetLong(System.String,System.String,System.String,System.Int64,System.Nullable{System.Int64})
  - Steeltoe.CircuitBreaker.Hystrix.HystrixBaseOptions.GetString(System.String,System.String,System.String,System.String,System.String)
  langs:
  - csharp
  - vb
  name: HystrixBaseOptions
  nameWithType: HystrixBaseOptions
  fullName: Steeltoe.CircuitBreaker.Hystrix.HystrixBaseOptions
  type: Class
  source:
    remote:
      path: src/CircuitBreaker/src/HystrixBase/HystrixBaseOptions.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: HystrixBaseOptions
    path: ../Steeltoe/src/CircuitBreaker/src/HystrixBase/HystrixBaseOptions.cs
    startLine: 8
  assemblies:
  - Steeltoe.CircuitBreaker.HystrixBase
  namespace: Steeltoe.CircuitBreaker.Hystrix
  syntax:
    content: public abstract class HystrixBaseOptions
    content.vb: Public MustInherit Class HystrixBaseOptions
  inheritance:
  - System.Object
  derivedClasses:
  - Steeltoe.CircuitBreaker.Hystrix.HystrixCollapserOptions
  - Steeltoe.CircuitBreaker.Hystrix.HystrixCommandOptions
  - Steeltoe.CircuitBreaker.Hystrix.HystrixThreadPoolOptions
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: Steeltoe.CircuitBreaker.Hystrix.HystrixBaseOptions._dynamic
  commentId: F:Steeltoe.CircuitBreaker.Hystrix.HystrixBaseOptions._dynamic
  id: _dynamic
  parent: Steeltoe.CircuitBreaker.Hystrix.HystrixBaseOptions
  langs:
  - csharp
  - vb
  name: _dynamic
  nameWithType: HystrixBaseOptions._dynamic
  fullName: Steeltoe.CircuitBreaker.Hystrix.HystrixBaseOptions._dynamic
  type: Field
  source:
    remote:
      path: src/CircuitBreaker/src/HystrixBase/HystrixBaseOptions.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: _dynamic
    path: ../Steeltoe/src/CircuitBreaker/src/HystrixBase/HystrixBaseOptions.cs
    startLine: 10
  assemblies:
  - Steeltoe.CircuitBreaker.HystrixBase
  namespace: Steeltoe.CircuitBreaker.Hystrix
  syntax:
    content: protected IHystrixDynamicOptions _dynamic
    return:
      type: Steeltoe.CircuitBreaker.Hystrix.Strategy.Options.IHystrixDynamicOptions
    content.vb: Protected _dynamic As IHystrixDynamicOptions
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Steeltoe.CircuitBreaker.Hystrix.HystrixBaseOptions.#ctor(Steeltoe.CircuitBreaker.Hystrix.Strategy.Options.IHystrixDynamicOptions)
  commentId: M:Steeltoe.CircuitBreaker.Hystrix.HystrixBaseOptions.#ctor(Steeltoe.CircuitBreaker.Hystrix.Strategy.Options.IHystrixDynamicOptions)
  id: '#ctor(Steeltoe.CircuitBreaker.Hystrix.Strategy.Options.IHystrixDynamicOptions)'
  parent: Steeltoe.CircuitBreaker.Hystrix.HystrixBaseOptions
  langs:
  - csharp
  - vb
  name: HystrixBaseOptions(IHystrixDynamicOptions)
  nameWithType: HystrixBaseOptions.HystrixBaseOptions(IHystrixDynamicOptions)
  fullName: Steeltoe.CircuitBreaker.Hystrix.HystrixBaseOptions.HystrixBaseOptions(Steeltoe.CircuitBreaker.Hystrix.Strategy.Options.IHystrixDynamicOptions)
  type: Constructor
  source:
    remote:
      path: src/CircuitBreaker/src/HystrixBase/HystrixBaseOptions.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: .ctor
    path: ../Steeltoe/src/CircuitBreaker/src/HystrixBase/HystrixBaseOptions.cs
    startLine: 12
  assemblies:
  - Steeltoe.CircuitBreaker.HystrixBase
  namespace: Steeltoe.CircuitBreaker.Hystrix
  syntax:
    content: protected HystrixBaseOptions(IHystrixDynamicOptions dynamicOptions)
    parameters:
    - id: dynamicOptions
      type: Steeltoe.CircuitBreaker.Hystrix.Strategy.Options.IHystrixDynamicOptions
    content.vb: Protected Sub New(dynamicOptions As IHystrixDynamicOptions)
  overload: Steeltoe.CircuitBreaker.Hystrix.HystrixBaseOptions.#ctor*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Steeltoe.CircuitBreaker.Hystrix.HystrixBaseOptions.GetBoolean(System.String,System.String,System.String,System.Boolean,System.Nullable{System.Boolean})
  commentId: M:Steeltoe.CircuitBreaker.Hystrix.HystrixBaseOptions.GetBoolean(System.String,System.String,System.String,System.Boolean,System.Nullable{System.Boolean})
  id: GetBoolean(System.String,System.String,System.String,System.Boolean,System.Nullable{System.Boolean})
  parent: Steeltoe.CircuitBreaker.Hystrix.HystrixBaseOptions
  langs:
  - csharp
  - vb
  name: GetBoolean(String, String, String, Boolean, Nullable<Boolean>)
  nameWithType: HystrixBaseOptions.GetBoolean(String, String, String, Boolean, Nullable<Boolean>)
  fullName: Steeltoe.CircuitBreaker.Hystrix.HystrixBaseOptions.GetBoolean(System.String, System.String, System.String, System.Boolean, System.Nullable<System.Boolean>)
  type: Method
  source:
    remote:
      path: src/CircuitBreaker/src/HystrixBase/HystrixBaseOptions.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: GetBoolean
    path: ../Steeltoe/src/CircuitBreaker/src/HystrixBase/HystrixBaseOptions.cs
    startLine: 17
  assemblies:
  - Steeltoe.CircuitBreaker.HystrixBase
  namespace: Steeltoe.CircuitBreaker.Hystrix
  syntax:
    content: protected virtual bool GetBoolean(string prefix, string key, string property, bool globalDefault, bool? instanceDefaultFromCode)
    parameters:
    - id: prefix
      type: System.String
    - id: key
      type: System.String
    - id: property
      type: System.String
    - id: globalDefault
      type: System.Boolean
    - id: instanceDefaultFromCode
      type: System.Nullable{System.Boolean}
    return:
      type: System.Boolean
    content.vb: Protected Overridable Function GetBoolean(prefix As String, key As String, property As String, globalDefault As Boolean, instanceDefaultFromCode As Boolean?) As Boolean
  overload: Steeltoe.CircuitBreaker.Hystrix.HystrixBaseOptions.GetBoolean*
  nameWithType.vb: HystrixBaseOptions.GetBoolean(String, String, String, Boolean, Nullable(Of Boolean))
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
  fullName.vb: Steeltoe.CircuitBreaker.Hystrix.HystrixBaseOptions.GetBoolean(System.String, System.String, System.String, System.Boolean, System.Nullable(Of System.Boolean))
  name.vb: GetBoolean(String, String, String, Boolean, Nullable(Of Boolean))
- uid: Steeltoe.CircuitBreaker.Hystrix.HystrixBaseOptions.GetInteger(System.String,System.String,System.String,System.Int32,System.Nullable{System.Int32})
  commentId: M:Steeltoe.CircuitBreaker.Hystrix.HystrixBaseOptions.GetInteger(System.String,System.String,System.String,System.Int32,System.Nullable{System.Int32})
  id: GetInteger(System.String,System.String,System.String,System.Int32,System.Nullable{System.Int32})
  parent: Steeltoe.CircuitBreaker.Hystrix.HystrixBaseOptions
  langs:
  - csharp
  - vb
  name: GetInteger(String, String, String, Int32, Nullable<Int32>)
  nameWithType: HystrixBaseOptions.GetInteger(String, String, String, Int32, Nullable<Int32>)
  fullName: Steeltoe.CircuitBreaker.Hystrix.HystrixBaseOptions.GetInteger(System.String, System.String, System.String, System.Int32, System.Nullable<System.Int32>)
  type: Method
  source:
    remote:
      path: src/CircuitBreaker/src/HystrixBase/HystrixBaseOptions.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: GetInteger
    path: ../Steeltoe/src/CircuitBreaker/src/HystrixBase/HystrixBaseOptions.cs
    startLine: 26
  assemblies:
  - Steeltoe.CircuitBreaker.HystrixBase
  namespace: Steeltoe.CircuitBreaker.Hystrix
  syntax:
    content: protected virtual int GetInteger(string prefix, string key, string property, int globalDefault, int? instanceDefaultFromCode)
    parameters:
    - id: prefix
      type: System.String
    - id: key
      type: System.String
    - id: property
      type: System.String
    - id: globalDefault
      type: System.Int32
    - id: instanceDefaultFromCode
      type: System.Nullable{System.Int32}
    return:
      type: System.Int32
    content.vb: Protected Overridable Function GetInteger(prefix As String, key As String, property As String, globalDefault As Integer, instanceDefaultFromCode As Integer?) As Integer
  overload: Steeltoe.CircuitBreaker.Hystrix.HystrixBaseOptions.GetInteger*
  nameWithType.vb: HystrixBaseOptions.GetInteger(String, String, String, Int32, Nullable(Of Int32))
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
  fullName.vb: Steeltoe.CircuitBreaker.Hystrix.HystrixBaseOptions.GetInteger(System.String, System.String, System.String, System.Int32, System.Nullable(Of System.Int32))
  name.vb: GetInteger(String, String, String, Int32, Nullable(Of Int32))
- uid: Steeltoe.CircuitBreaker.Hystrix.HystrixBaseOptions.GetLong(System.String,System.String,System.String,System.Int64,System.Nullable{System.Int64})
  commentId: M:Steeltoe.CircuitBreaker.Hystrix.HystrixBaseOptions.GetLong(System.String,System.String,System.String,System.Int64,System.Nullable{System.Int64})
  id: GetLong(System.String,System.String,System.String,System.Int64,System.Nullable{System.Int64})
  parent: Steeltoe.CircuitBreaker.Hystrix.HystrixBaseOptions
  langs:
  - csharp
  - vb
  name: GetLong(String, String, String, Int64, Nullable<Int64>)
  nameWithType: HystrixBaseOptions.GetLong(String, String, String, Int64, Nullable<Int64>)
  fullName: Steeltoe.CircuitBreaker.Hystrix.HystrixBaseOptions.GetLong(System.String, System.String, System.String, System.Int64, System.Nullable<System.Int64>)
  type: Method
  source:
    remote:
      path: src/CircuitBreaker/src/HystrixBase/HystrixBaseOptions.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: GetLong
    path: ../Steeltoe/src/CircuitBreaker/src/HystrixBase/HystrixBaseOptions.cs
    startLine: 35
  assemblies:
  - Steeltoe.CircuitBreaker.HystrixBase
  namespace: Steeltoe.CircuitBreaker.Hystrix
  syntax:
    content: protected virtual long GetLong(string prefix, string key, string property, long globalDefault, long? instanceDefaultFromCode)
    parameters:
    - id: prefix
      type: System.String
    - id: key
      type: System.String
    - id: property
      type: System.String
    - id: globalDefault
      type: System.Int64
    - id: instanceDefaultFromCode
      type: System.Nullable{System.Int64}
    return:
      type: System.Int64
    content.vb: Protected Overridable Function GetLong(prefix As String, key As String, property As String, globalDefault As Long, instanceDefaultFromCode As Long?) As Long
  overload: Steeltoe.CircuitBreaker.Hystrix.HystrixBaseOptions.GetLong*
  nameWithType.vb: HystrixBaseOptions.GetLong(String, String, String, Int64, Nullable(Of Int64))
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
  fullName.vb: Steeltoe.CircuitBreaker.Hystrix.HystrixBaseOptions.GetLong(System.String, System.String, System.String, System.Int64, System.Nullable(Of System.Int64))
  name.vb: GetLong(String, String, String, Int64, Nullable(Of Int64))
- uid: Steeltoe.CircuitBreaker.Hystrix.HystrixBaseOptions.GetString(System.String,System.String,System.String,System.String,System.String)
  commentId: M:Steeltoe.CircuitBreaker.Hystrix.HystrixBaseOptions.GetString(System.String,System.String,System.String,System.String,System.String)
  id: GetString(System.String,System.String,System.String,System.String,System.String)
  parent: Steeltoe.CircuitBreaker.Hystrix.HystrixBaseOptions
  langs:
  - csharp
  - vb
  name: GetString(String, String, String, String, String)
  nameWithType: HystrixBaseOptions.GetString(String, String, String, String, String)
  fullName: Steeltoe.CircuitBreaker.Hystrix.HystrixBaseOptions.GetString(System.String, System.String, System.String, System.String, System.String)
  type: Method
  source:
    remote:
      path: src/CircuitBreaker/src/HystrixBase/HystrixBaseOptions.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: GetString
    path: ../Steeltoe/src/CircuitBreaker/src/HystrixBase/HystrixBaseOptions.cs
    startLine: 44
  assemblies:
  - Steeltoe.CircuitBreaker.HystrixBase
  namespace: Steeltoe.CircuitBreaker.Hystrix
  syntax:
    content: protected virtual string GetString(string prefix, string key, string property, string globalDefault, string instanceDefaultFromCode)
    parameters:
    - id: prefix
      type: System.String
    - id: key
      type: System.String
    - id: property
      type: System.String
    - id: globalDefault
      type: System.String
    - id: instanceDefaultFromCode
      type: System.String
    return:
      type: System.String
    content.vb: Protected Overridable Function GetString(prefix As String, key As String, property As String, globalDefault As String, instanceDefaultFromCode As String) As String
  overload: Steeltoe.CircuitBreaker.Hystrix.HystrixBaseOptions.GetString*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
references:
- uid: Steeltoe.CircuitBreaker.Hystrix
  commentId: N:Steeltoe.CircuitBreaker.Hystrix
  name: Steeltoe.CircuitBreaker.Hystrix
  nameWithType: Steeltoe.CircuitBreaker.Hystrix
  fullName: Steeltoe.CircuitBreaker.Hystrix
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Steeltoe.CircuitBreaker.Hystrix.Strategy.Options.IHystrixDynamicOptions
  commentId: T:Steeltoe.CircuitBreaker.Hystrix.Strategy.Options.IHystrixDynamicOptions
  parent: Steeltoe.CircuitBreaker.Hystrix.Strategy.Options
  name: IHystrixDynamicOptions
  nameWithType: IHystrixDynamicOptions
  fullName: Steeltoe.CircuitBreaker.Hystrix.Strategy.Options.IHystrixDynamicOptions
- uid: Steeltoe.CircuitBreaker.Hystrix.Strategy.Options
  commentId: N:Steeltoe.CircuitBreaker.Hystrix.Strategy.Options
  name: Steeltoe.CircuitBreaker.Hystrix.Strategy.Options
  nameWithType: Steeltoe.CircuitBreaker.Hystrix.Strategy.Options
  fullName: Steeltoe.CircuitBreaker.Hystrix.Strategy.Options
- uid: Steeltoe.CircuitBreaker.Hystrix.HystrixBaseOptions.#ctor*
  commentId: Overload:Steeltoe.CircuitBreaker.Hystrix.HystrixBaseOptions.#ctor
  name: HystrixBaseOptions
  nameWithType: HystrixBaseOptions.HystrixBaseOptions
  fullName: Steeltoe.CircuitBreaker.Hystrix.HystrixBaseOptions.HystrixBaseOptions
- uid: Steeltoe.CircuitBreaker.Hystrix.HystrixBaseOptions.GetBoolean*
  commentId: Overload:Steeltoe.CircuitBreaker.Hystrix.HystrixBaseOptions.GetBoolean
  name: GetBoolean
  nameWithType: HystrixBaseOptions.GetBoolean
  fullName: Steeltoe.CircuitBreaker.Hystrix.HystrixBaseOptions.GetBoolean
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Nullable{System.Boolean}
  commentId: T:System.Nullable{System.Boolean}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Boolean>
  nameWithType: Nullable<Boolean>
  fullName: System.Nullable<System.Boolean>
  nameWithType.vb: Nullable(Of Boolean)
  fullName.vb: System.Nullable(Of System.Boolean)
  name.vb: Nullable(Of Boolean)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.CircuitBreaker.Hystrix.HystrixBaseOptions.GetInteger*
  commentId: Overload:Steeltoe.CircuitBreaker.Hystrix.HystrixBaseOptions.GetInteger
  name: GetInteger
  nameWithType: HystrixBaseOptions.GetInteger
  fullName: Steeltoe.CircuitBreaker.Hystrix.HystrixBaseOptions.GetInteger
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Nullable{System.Int32}
  commentId: T:System.Nullable{System.Int32}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Int32>
  nameWithType: Nullable<Int32>
  fullName: System.Nullable<System.Int32>
  nameWithType.vb: Nullable(Of Int32)
  fullName.vb: System.Nullable(Of System.Int32)
  name.vb: Nullable(Of Int32)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.CircuitBreaker.Hystrix.HystrixBaseOptions.GetLong*
  commentId: Overload:Steeltoe.CircuitBreaker.Hystrix.HystrixBaseOptions.GetLong
  name: GetLong
  nameWithType: HystrixBaseOptions.GetLong
  fullName: Steeltoe.CircuitBreaker.Hystrix.HystrixBaseOptions.GetLong
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.Nullable{System.Int64}
  commentId: T:System.Nullable{System.Int64}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Int64>
  nameWithType: Nullable<Int64>
  fullName: System.Nullable<System.Int64>
  nameWithType.vb: Nullable(Of Int64)
  fullName.vb: System.Nullable(Of System.Int64)
  name.vb: Nullable(Of Int64)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.CircuitBreaker.Hystrix.HystrixBaseOptions.GetString*
  commentId: Overload:Steeltoe.CircuitBreaker.Hystrix.HystrixBaseOptions.GetString
  name: GetString
  nameWithType: HystrixBaseOptions.GetString
  fullName: Steeltoe.CircuitBreaker.Hystrix.HystrixBaseOptions.GetString
