### YamlMime:ManagedReference
items:
- uid: Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions
  commentId: T:Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions
  id: ConsulDiscoveryOptions
  parent: Steeltoe.Discovery.Consul.Discovery
  children:
  - Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions.#ctor
  - Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions.ApplyConfigUrls(System.Collections.Generic.List{System.Uri},System.String)
  - Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions.ApplyNetUtils
  - Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions.CacheTTL
  - Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions.CONSUL_DISCOVERY_CONFIGURATION_PREFIX
  - Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions.DefaultQueryTag
  - Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions.DefaultZoneMetadataName
  - Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions.Deregister
  - Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions.Enabled
  - Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions.FailFast
  - Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions.HealthCheckCriticalTimeout
  - Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions.HealthCheckInterval
  - Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions.HealthCheckPath
  - Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions.HealthCheckTimeout
  - Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions.HealthCheckTlsSkipVerify
  - Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions.HealthCheckUrl
  - Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions.Heartbeat
  - Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions.HostName
  - Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions.InstanceGroup
  - Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions.InstanceId
  - Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions.InstanceZone
  - Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions.IpAddress
  - Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions.IsHeartBeatEnabled
  - Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions.IsRetryEnabled
  - Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions.NetUtils
  - Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions.Port
  - Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions.PreferAgentAddress
  - Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions.PreferIpAddress
  - Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions.QueryPassing
  - Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions.Register
  - Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions.RegisterHealthCheck
  - Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions.Retry
  - Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions.Scheme
  - Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions.ServiceName
  - Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions.Tags
  - Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions.UseAspNetCoreUrls
  - Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions.UseNetUtils
  langs:
  - csharp
  - vb
  name: ConsulDiscoveryOptions
  nameWithType: ConsulDiscoveryOptions
  fullName: Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions
  type: Class
  source:
    remote:
      path: src/Discovery/src/Consul/Discovery/ConsulDiscoveryOptions.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: ConsulDiscoveryOptions
    path: ../Steeltoe/src/Discovery/src/Consul/Discovery/ConsulDiscoveryOptions.cs
    startLine: 14
  assemblies:
  - Steeltoe.Discovery.Consul
  namespace: Steeltoe.Discovery.Consul.Discovery
  summary: "\nConfiguration options for the ConsulDiscoveryClient\n"
  example: []
  syntax:
    content: public class ConsulDiscoveryOptions
    content.vb: Public Class ConsulDiscoveryOptions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions.CONSUL_DISCOVERY_CONFIGURATION_PREFIX
  commentId: F:Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions.CONSUL_DISCOVERY_CONFIGURATION_PREFIX
  id: CONSUL_DISCOVERY_CONFIGURATION_PREFIX
  parent: Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions
  langs:
  - csharp
  - vb
  name: CONSUL_DISCOVERY_CONFIGURATION_PREFIX
  nameWithType: ConsulDiscoveryOptions.CONSUL_DISCOVERY_CONFIGURATION_PREFIX
  fullName: Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions.CONSUL_DISCOVERY_CONFIGURATION_PREFIX
  type: Field
  source:
    remote:
      path: src/Discovery/src/Consul/Discovery/ConsulDiscoveryOptions.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: CONSUL_DISCOVERY_CONFIGURATION_PREFIX
    path: ../Steeltoe/src/Discovery/src/Consul/Discovery/ConsulDiscoveryOptions.cs
    startLine: 16
  assemblies:
  - Steeltoe.Discovery.Consul
  namespace: Steeltoe.Discovery.Consul.Discovery
  syntax:
    content: public const string CONSUL_DISCOVERY_CONFIGURATION_PREFIX = "consul:discovery"
    return:
      type: System.String
    content.vb: Public Const CONSUL_DISCOVERY_CONFIGURATION_PREFIX As String = "consul:discovery"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions.#ctor
  commentId: M:Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions.#ctor
  id: '#ctor'
  parent: Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions
  langs:
  - csharp
  - vb
  name: ConsulDiscoveryOptions()
  nameWithType: ConsulDiscoveryOptions.ConsulDiscoveryOptions()
  fullName: Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions.ConsulDiscoveryOptions()
  type: Constructor
  source:
    remote:
      path: src/Discovery/src/Consul/Discovery/ConsulDiscoveryOptions.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: .ctor
    path: ../Steeltoe/src/Discovery/src/Consul/Discovery/ConsulDiscoveryOptions.cs
    startLine: 21
  assemblies:
  - Steeltoe.Discovery.Consul
  namespace: Steeltoe.Discovery.Consul.Discovery
  syntax:
    content: public ConsulDiscoveryOptions()
    content.vb: Public Sub New
  overload: Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions.ApplyNetUtils
  commentId: M:Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions.ApplyNetUtils
  id: ApplyNetUtils
  parent: Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions
  langs:
  - csharp
  - vb
  name: ApplyNetUtils()
  nameWithType: ConsulDiscoveryOptions.ApplyNetUtils()
  fullName: Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions.ApplyNetUtils()
  type: Method
  source:
    remote:
      path: src/Discovery/src/Consul/Discovery/ConsulDiscoveryOptions.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: ApplyNetUtils
    path: ../Steeltoe/src/Discovery/src/Consul/Discovery/ConsulDiscoveryOptions.cs
    startLine: 32
  assemblies:
  - Steeltoe.Discovery.Consul
  namespace: Steeltoe.Discovery.Consul.Discovery
  syntax:
    content: public void ApplyNetUtils()
    content.vb: Public Sub ApplyNetUtils
  overload: Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions.ApplyNetUtils*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions.Enabled
  commentId: P:Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions.Enabled
  id: Enabled
  parent: Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions
  langs:
  - csharp
  - vb
  name: Enabled
  nameWithType: ConsulDiscoveryOptions.Enabled
  fullName: Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions.Enabled
  type: Property
  source:
    remote:
      path: src/Discovery/src/Consul/Discovery/ConsulDiscoveryOptions.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Enabled
    path: ../Steeltoe/src/Discovery/src/Consul/Discovery/ConsulDiscoveryOptions.cs
    startLine: 49
  assemblies:
  - Steeltoe.Discovery.Consul
  namespace: Steeltoe.Discovery.Consul.Discovery
  summary: "\nGets or sets a value indicating whether Consul Discovery client is enabled\n"
  example: []
  syntax:
    content: public bool Enabled { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property Enabled As Boolean
  overload: Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions.Enabled*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions.Tags
  commentId: P:Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions.Tags
  id: Tags
  parent: Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions
  langs:
  - csharp
  - vb
  name: Tags
  nameWithType: ConsulDiscoveryOptions.Tags
  fullName: Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions.Tags
  type: Property
  source:
    remote:
      path: src/Discovery/src/Consul/Discovery/ConsulDiscoveryOptions.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Tags
    path: ../Steeltoe/src/Discovery/src/Consul/Discovery/ConsulDiscoveryOptions.cs
    startLine: 54
  assemblies:
  - Steeltoe.Discovery.Consul
  namespace: Steeltoe.Discovery.Consul.Discovery
  summary: "\nGets or sets Tags to use when registering service\n"
  example: []
  syntax:
    content: public IList<string> Tags { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.IList{System.String}
    content.vb: Public Property Tags As IList(Of String)
  overload: Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions.Tags*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions.UseNetUtils
  commentId: P:Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions.UseNetUtils
  id: UseNetUtils
  parent: Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions
  langs:
  - csharp
  - vb
  name: UseNetUtils
  nameWithType: ConsulDiscoveryOptions.UseNetUtils
  fullName: Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions.UseNetUtils
  type: Property
  source:
    remote:
      path: src/Discovery/src/Consul/Discovery/ConsulDiscoveryOptions.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: UseNetUtils
    path: ../Steeltoe/src/Discovery/src/Consul/Discovery/ConsulDiscoveryOptions.cs
    startLine: 56
  assemblies:
  - Steeltoe.Discovery.Consul
  namespace: Steeltoe.Discovery.Consul.Discovery
  syntax:
    content: public bool UseNetUtils { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property UseNetUtils As Boolean
  overload: Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions.UseNetUtils*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions.NetUtils
  commentId: P:Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions.NetUtils
  id: NetUtils
  parent: Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions
  langs:
  - csharp
  - vb
  name: NetUtils
  nameWithType: ConsulDiscoveryOptions.NetUtils
  fullName: Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions.NetUtils
  type: Property
  source:
    remote:
      path: src/Discovery/src/Consul/Discovery/ConsulDiscoveryOptions.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: NetUtils
    path: ../Steeltoe/src/Discovery/src/Consul/Discovery/ConsulDiscoveryOptions.cs
    startLine: 58
  assemblies:
  - Steeltoe.Discovery.Consul
  namespace: Steeltoe.Discovery.Consul.Discovery
  syntax:
    content: public InetUtils NetUtils { get; set; }
    parameters: []
    return:
      type: InetUtils
    content.vb: Public Property NetUtils As InetUtils
  overload: Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions.NetUtils*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions.Heartbeat
  commentId: P:Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions.Heartbeat
  id: Heartbeat
  parent: Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions
  langs:
  - csharp
  - vb
  name: Heartbeat
  nameWithType: ConsulDiscoveryOptions.Heartbeat
  fullName: Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions.Heartbeat
  type: Property
  source:
    remote:
      path: src/Discovery/src/Consul/Discovery/ConsulDiscoveryOptions.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Heartbeat
    path: ../Steeltoe/src/Discovery/src/Consul/Discovery/ConsulDiscoveryOptions.cs
    startLine: 63
  assemblies:
  - Steeltoe.Discovery.Consul
  namespace: Steeltoe.Discovery.Consul.Discovery
  summary: "\nGets or sets values related to Heartbeat\n"
  example: []
  syntax:
    content: public ConsulHeartbeatOptions Heartbeat { get; set; }
    parameters: []
    return:
      type: Steeltoe.Discovery.Consul.Discovery.ConsulHeartbeatOptions
    content.vb: Public Property Heartbeat As ConsulHeartbeatOptions
  overload: Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions.Heartbeat*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions.Retry
  commentId: P:Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions.Retry
  id: Retry
  parent: Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions
  langs:
  - csharp
  - vb
  name: Retry
  nameWithType: ConsulDiscoveryOptions.Retry
  fullName: Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions.Retry
  type: Property
  source:
    remote:
      path: src/Discovery/src/Consul/Discovery/ConsulDiscoveryOptions.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Retry
    path: ../Steeltoe/src/Discovery/src/Consul/Discovery/ConsulDiscoveryOptions.cs
    startLine: 68
  assemblies:
  - Steeltoe.Discovery.Consul
  namespace: Steeltoe.Discovery.Consul.Discovery
  summary: "\nGets or sets values related to Retrying requests\n"
  example: []
  syntax:
    content: public ConsulRetryOptions Retry { get; set; }
    parameters: []
    return:
      type: Steeltoe.Discovery.Consul.Discovery.ConsulRetryOptions
    content.vb: Public Property Retry As ConsulRetryOptions
  overload: Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions.Retry*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions.DefaultQueryTag
  commentId: P:Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions.DefaultQueryTag
  id: DefaultQueryTag
  parent: Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions
  langs:
  - csharp
  - vb
  name: DefaultQueryTag
  nameWithType: ConsulDiscoveryOptions.DefaultQueryTag
  fullName: Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions.DefaultQueryTag
  type: Property
  source:
    remote:
      path: src/Discovery/src/Consul/Discovery/ConsulDiscoveryOptions.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: DefaultQueryTag
    path: ../Steeltoe/src/Discovery/src/Consul/Discovery/ConsulDiscoveryOptions.cs
    startLine: 73
  assemblies:
  - Steeltoe.Discovery.Consul
  namespace: Steeltoe.Discovery.Consul.Discovery
  summary: "\nGets or sets Tag to query for in service list if one is not listed in serverListQueryTags.\n"
  example: []
  syntax:
    content: public string DefaultQueryTag { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property DefaultQueryTag As String
  overload: Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions.DefaultQueryTag*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions.QueryPassing
  commentId: P:Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions.QueryPassing
  id: QueryPassing
  parent: Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions
  langs:
  - csharp
  - vb
  name: QueryPassing
  nameWithType: ConsulDiscoveryOptions.QueryPassing
  fullName: Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions.QueryPassing
  type: Property
  source:
    remote:
      path: src/Discovery/src/Consul/Discovery/ConsulDiscoveryOptions.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: QueryPassing
    path: ../Steeltoe/src/Discovery/src/Consul/Discovery/ConsulDiscoveryOptions.cs
    startLine: 79
  assemblies:
  - Steeltoe.Discovery.Consul
  namespace: Steeltoe.Discovery.Consul.Discovery
  summary: "\nGets or sets a value indicating whether gets or sets Add the &apos;passing` parameter to\n/v1/health/service/serviceName. This pushes health check passing to the server.\n"
  example: []
  syntax:
    content: public bool QueryPassing { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property QueryPassing As Boolean
  overload: Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions.QueryPassing*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions.Scheme
  commentId: P:Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions.Scheme
  id: Scheme
  parent: Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions
  langs:
  - csharp
  - vb
  name: Scheme
  nameWithType: ConsulDiscoveryOptions.Scheme
  fullName: Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions.Scheme
  type: Property
  source:
    remote:
      path: src/Discovery/src/Consul/Discovery/ConsulDiscoveryOptions.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Scheme
    path: ../Steeltoe/src/Discovery/src/Consul/Discovery/ConsulDiscoveryOptions.cs
    startLine: 84
  assemblies:
  - Steeltoe.Discovery.Consul
  namespace: Steeltoe.Discovery.Consul.Discovery
  summary: "\nGets or sets Whether to register an http or https service\n"
  example: []
  syntax:
    content: public string Scheme { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Scheme As String
  overload: Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions.Scheme*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions.RegisterHealthCheck
  commentId: P:Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions.RegisterHealthCheck
  id: RegisterHealthCheck
  parent: Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions
  langs:
  - csharp
  - vb
  name: RegisterHealthCheck
  nameWithType: ConsulDiscoveryOptions.RegisterHealthCheck
  fullName: Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions.RegisterHealthCheck
  type: Property
  source:
    remote:
      path: src/Discovery/src/Consul/Discovery/ConsulDiscoveryOptions.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: RegisterHealthCheck
    path: ../Steeltoe/src/Discovery/src/Consul/Discovery/ConsulDiscoveryOptions.cs
    startLine: 94
  assemblies:
  - Steeltoe.Discovery.Consul
  namespace: Steeltoe.Discovery.Consul.Discovery
  summary: "\nGets or sets a value indicating whether gets or sets RegisterHealthCheck in consul.\nUseful during development of a service.\n"
  example: []
  syntax:
    content: public bool RegisterHealthCheck { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property RegisterHealthCheck As Boolean
  overload: Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions.RegisterHealthCheck*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions.HealthCheckUrl
  commentId: P:Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions.HealthCheckUrl
  id: HealthCheckUrl
  parent: Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions
  langs:
  - csharp
  - vb
  name: HealthCheckUrl
  nameWithType: ConsulDiscoveryOptions.HealthCheckUrl
  fullName: Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions.HealthCheckUrl
  type: Property
  source:
    remote:
      path: src/Discovery/src/Consul/Discovery/ConsulDiscoveryOptions.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: HealthCheckUrl
    path: ../Steeltoe/src/Discovery/src/Consul/Discovery/ConsulDiscoveryOptions.cs
    startLine: 99
  assemblies:
  - Steeltoe.Discovery.Consul
  namespace: Steeltoe.Discovery.Consul.Discovery
  summary: "\nGets or sets Custom health check url to override default\n"
  example: []
  syntax:
    content: public string HealthCheckUrl { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property HealthCheckUrl As String
  overload: Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions.HealthCheckUrl*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions.HealthCheckPath
  commentId: P:Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions.HealthCheckPath
  id: HealthCheckPath
  parent: Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions
  langs:
  - csharp
  - vb
  name: HealthCheckPath
  nameWithType: ConsulDiscoveryOptions.HealthCheckPath
  fullName: Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions.HealthCheckPath
  type: Property
  source:
    remote:
      path: src/Discovery/src/Consul/Discovery/ConsulDiscoveryOptions.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: HealthCheckPath
    path: ../Steeltoe/src/Discovery/src/Consul/Discovery/ConsulDiscoveryOptions.cs
    startLine: 104
  assemblies:
  - Steeltoe.Discovery.Consul
  namespace: Steeltoe.Discovery.Consul.Discovery
  summary: "\nGets or sets Alternate server path to invoke for health checking\n"
  example: []
  syntax:
    content: public string HealthCheckPath { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property HealthCheckPath As String
  overload: Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions.HealthCheckPath*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions.HealthCheckInterval
  commentId: P:Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions.HealthCheckInterval
  id: HealthCheckInterval
  parent: Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions
  langs:
  - csharp
  - vb
  name: HealthCheckInterval
  nameWithType: ConsulDiscoveryOptions.HealthCheckInterval
  fullName: Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions.HealthCheckInterval
  type: Property
  source:
    remote:
      path: src/Discovery/src/Consul/Discovery/ConsulDiscoveryOptions.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: HealthCheckInterval
    path: ../Steeltoe/src/Discovery/src/Consul/Discovery/ConsulDiscoveryOptions.cs
    startLine: 109
  assemblies:
  - Steeltoe.Discovery.Consul
  namespace: Steeltoe.Discovery.Consul.Discovery
  summary: "\nGets or sets How often to perform the health check (e.g. 10s), defaults to 10s.\n"
  example: []
  syntax:
    content: public string HealthCheckInterval { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property HealthCheckInterval As String
  overload: Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions.HealthCheckInterval*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions.HealthCheckTimeout
  commentId: P:Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions.HealthCheckTimeout
  id: HealthCheckTimeout
  parent: Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions
  langs:
  - csharp
  - vb
  name: HealthCheckTimeout
  nameWithType: ConsulDiscoveryOptions.HealthCheckTimeout
  fullName: Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions.HealthCheckTimeout
  type: Property
  source:
    remote:
      path: src/Discovery/src/Consul/Discovery/ConsulDiscoveryOptions.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: HealthCheckTimeout
    path: ../Steeltoe/src/Discovery/src/Consul/Discovery/ConsulDiscoveryOptions.cs
    startLine: 114
  assemblies:
  - Steeltoe.Discovery.Consul
  namespace: Steeltoe.Discovery.Consul.Discovery
  summary: "\nGets or sets Timeout for health check (e.g. 10s).\n"
  example: []
  syntax:
    content: public string HealthCheckTimeout { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property HealthCheckTimeout As String
  overload: Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions.HealthCheckTimeout*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions.HealthCheckCriticalTimeout
  commentId: P:Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions.HealthCheckCriticalTimeout
  id: HealthCheckCriticalTimeout
  parent: Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions
  langs:
  - csharp
  - vb
  name: HealthCheckCriticalTimeout
  nameWithType: ConsulDiscoveryOptions.HealthCheckCriticalTimeout
  fullName: Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions.HealthCheckCriticalTimeout
  type: Property
  source:
    remote:
      path: src/Discovery/src/Consul/Discovery/ConsulDiscoveryOptions.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: HealthCheckCriticalTimeout
    path: ../Steeltoe/src/Discovery/src/Consul/Discovery/ConsulDiscoveryOptions.cs
    startLine: 120
  assemblies:
  - Steeltoe.Discovery.Consul
  namespace: Steeltoe.Discovery.Consul.Discovery
  summary: "\nGets or sets Timeout to deregister services critical for longer than timeout(e.g. 30m).\nRequires consul version 7.x or higher.\n"
  example: []
  syntax:
    content: public string HealthCheckCriticalTimeout { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property HealthCheckCriticalTimeout As String
  overload: Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions.HealthCheckCriticalTimeout*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions.HealthCheckTlsSkipVerify
  commentId: P:Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions.HealthCheckTlsSkipVerify
  id: HealthCheckTlsSkipVerify
  parent: Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions
  langs:
  - csharp
  - vb
  name: HealthCheckTlsSkipVerify
  nameWithType: ConsulDiscoveryOptions.HealthCheckTlsSkipVerify
  fullName: Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions.HealthCheckTlsSkipVerify
  type: Property
  source:
    remote:
      path: src/Discovery/src/Consul/Discovery/ConsulDiscoveryOptions.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: HealthCheckTlsSkipVerify
    path: ../Steeltoe/src/Discovery/src/Consul/Discovery/ConsulDiscoveryOptions.cs
    startLine: 125
  assemblies:
  - Steeltoe.Discovery.Consul
  namespace: Steeltoe.Discovery.Consul.Discovery
  summary: "\nGets or sets a value indicating whether health check verifies TLS\n"
  example: []
  syntax:
    content: public bool HealthCheckTlsSkipVerify { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property HealthCheckTlsSkipVerify As Boolean
  overload: Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions.HealthCheckTlsSkipVerify*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions.HostName
  commentId: P:Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions.HostName
  id: HostName
  parent: Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions
  langs:
  - csharp
  - vb
  name: HostName
  nameWithType: ConsulDiscoveryOptions.HostName
  fullName: Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions.HostName
  type: Property
  source:
    remote:
      path: src/Discovery/src/Consul/Discovery/ConsulDiscoveryOptions.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: HostName
    path: ../Steeltoe/src/Discovery/src/Consul/Discovery/ConsulDiscoveryOptions.cs
    startLine: 130
  assemblies:
  - Steeltoe.Discovery.Consul
  namespace: Steeltoe.Discovery.Consul.Discovery
  summary: "\nGets or sets Hostname to use when accessing server\n"
  example: []
  syntax:
    content: public string HostName { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property HostName As String
  overload: Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions.HostName*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions.IpAddress
  commentId: P:Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions.IpAddress
  id: IpAddress
  parent: Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions
  langs:
  - csharp
  - vb
  name: IpAddress
  nameWithType: ConsulDiscoveryOptions.IpAddress
  fullName: Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions.IpAddress
  type: Property
  source:
    remote:
      path: src/Discovery/src/Consul/Discovery/ConsulDiscoveryOptions.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: IpAddress
    path: ../Steeltoe/src/Discovery/src/Consul/Discovery/ConsulDiscoveryOptions.cs
    startLine: 139
  assemblies:
  - Steeltoe.Discovery.Consul
  namespace: Steeltoe.Discovery.Consul.Discovery
  summary: "\nGets or sets IP address to use when accessing service (must also set preferIpAddress to use)\n"
  example: []
  syntax:
    content: public string IpAddress { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property IpAddress As String
  overload: Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions.IpAddress*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions.Port
  commentId: P:Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions.Port
  id: Port
  parent: Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions
  langs:
  - csharp
  - vb
  name: Port
  nameWithType: ConsulDiscoveryOptions.Port
  fullName: Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions.Port
  type: Property
  source:
    remote:
      path: src/Discovery/src/Consul/Discovery/ConsulDiscoveryOptions.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Port
    path: ../Steeltoe/src/Discovery/src/Consul/Discovery/ConsulDiscoveryOptions.cs
    startLine: 144
  assemblies:
  - Steeltoe.Discovery.Consul
  namespace: Steeltoe.Discovery.Consul.Discovery
  summary: "\nGets or sets Port to register the service under\n"
  example: []
  syntax:
    content: public int Port { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property Port As Integer
  overload: Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions.Port*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions.PreferIpAddress
  commentId: P:Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions.PreferIpAddress
  id: PreferIpAddress
  parent: Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions
  langs:
  - csharp
  - vb
  name: PreferIpAddress
  nameWithType: ConsulDiscoveryOptions.PreferIpAddress
  fullName: Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions.PreferIpAddress
  type: Property
  source:
    remote:
      path: src/Discovery/src/Consul/Discovery/ConsulDiscoveryOptions.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: PreferIpAddress
    path: ../Steeltoe/src/Discovery/src/Consul/Discovery/ConsulDiscoveryOptions.cs
    startLine: 150
  assemblies:
  - Steeltoe.Discovery.Consul
  namespace: Steeltoe.Discovery.Consul.Discovery
  summary: "\nGets or sets a value indicating whether gets or sets Use ip address rather than hostname\nduring registration\n"
  example: []
  syntax:
    content: public bool PreferIpAddress { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property PreferIpAddress As Boolean
  overload: Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions.PreferIpAddress*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions.ServiceName
  commentId: P:Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions.ServiceName
  id: ServiceName
  parent: Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions
  langs:
  - csharp
  - vb
  name: ServiceName
  nameWithType: ConsulDiscoveryOptions.ServiceName
  fullName: Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions.ServiceName
  type: Property
  source:
    remote:
      path: src/Discovery/src/Consul/Discovery/ConsulDiscoveryOptions.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: ServiceName
    path: ../Steeltoe/src/Discovery/src/Consul/Discovery/ConsulDiscoveryOptions.cs
    startLine: 155
  assemblies:
  - Steeltoe.Discovery.Consul
  namespace: Steeltoe.Discovery.Consul.Discovery
  summary: "\nGets or sets Service name\n"
  example: []
  syntax:
    content: public string ServiceName { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property ServiceName As String
  overload: Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions.ServiceName*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions.InstanceId
  commentId: P:Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions.InstanceId
  id: InstanceId
  parent: Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions
  langs:
  - csharp
  - vb
  name: InstanceId
  nameWithType: ConsulDiscoveryOptions.InstanceId
  fullName: Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions.InstanceId
  type: Property
  source:
    remote:
      path: src/Discovery/src/Consul/Discovery/ConsulDiscoveryOptions.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: InstanceId
    path: ../Steeltoe/src/Discovery/src/Consul/Discovery/ConsulDiscoveryOptions.cs
    startLine: 160
  assemblies:
  - Steeltoe.Discovery.Consul
  namespace: Steeltoe.Discovery.Consul.Discovery
  summary: "\nGets or sets Unique service instance id\n"
  example: []
  syntax:
    content: public string InstanceId { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property InstanceId As String
  overload: Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions.InstanceId*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions.PreferAgentAddress
  commentId: P:Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions.PreferAgentAddress
  id: PreferAgentAddress
  parent: Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions
  langs:
  - csharp
  - vb
  name: PreferAgentAddress
  nameWithType: ConsulDiscoveryOptions.PreferAgentAddress
  fullName: Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions.PreferAgentAddress
  type: Property
  source:
    remote:
      path: src/Discovery/src/Consul/Discovery/ConsulDiscoveryOptions.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: PreferAgentAddress
    path: ../Steeltoe/src/Discovery/src/Consul/Discovery/ConsulDiscoveryOptions.cs
    startLine: 165
  assemblies:
  - Steeltoe.Discovery.Consul
  namespace: Steeltoe.Discovery.Consul.Discovery
  summary: "\nGets or sets a value indicating whether to use agent address or hostname\n"
  example: []
  syntax:
    content: public bool PreferAgentAddress { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property PreferAgentAddress As Boolean
  overload: Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions.PreferAgentAddress*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions.InstanceZone
  commentId: P:Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions.InstanceZone
  id: InstanceZone
  parent: Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions
  langs:
  - csharp
  - vb
  name: InstanceZone
  nameWithType: ConsulDiscoveryOptions.InstanceZone
  fullName: Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions.InstanceZone
  type: Property
  source:
    remote:
      path: src/Discovery/src/Consul/Discovery/ConsulDiscoveryOptions.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: InstanceZone
    path: ../Steeltoe/src/Discovery/src/Consul/Discovery/ConsulDiscoveryOptions.cs
    startLine: 170
  assemblies:
  - Steeltoe.Discovery.Consul
  namespace: Steeltoe.Discovery.Consul.Discovery
  summary: "\nGets or sets the instance zone to use during registration\n"
  example: []
  syntax:
    content: public string InstanceZone { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property InstanceZone As String
  overload: Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions.InstanceZone*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions.InstanceGroup
  commentId: P:Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions.InstanceGroup
  id: InstanceGroup
  parent: Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions
  langs:
  - csharp
  - vb
  name: InstanceGroup
  nameWithType: ConsulDiscoveryOptions.InstanceGroup
  fullName: Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions.InstanceGroup
  type: Property
  source:
    remote:
      path: src/Discovery/src/Consul/Discovery/ConsulDiscoveryOptions.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: InstanceGroup
    path: ../Steeltoe/src/Discovery/src/Consul/Discovery/ConsulDiscoveryOptions.cs
    startLine: 175
  assemblies:
  - Steeltoe.Discovery.Consul
  namespace: Steeltoe.Discovery.Consul.Discovery
  summary: "\nGets or sets the instance groupt to use during registration\n"
  example: []
  syntax:
    content: public string InstanceGroup { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property InstanceGroup As String
  overload: Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions.InstanceGroup*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions.DefaultZoneMetadataName
  commentId: P:Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions.DefaultZoneMetadataName
  id: DefaultZoneMetadataName
  parent: Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions
  langs:
  - csharp
  - vb
  name: DefaultZoneMetadataName
  nameWithType: ConsulDiscoveryOptions.DefaultZoneMetadataName
  fullName: Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions.DefaultZoneMetadataName
  type: Property
  source:
    remote:
      path: src/Discovery/src/Consul/Discovery/ConsulDiscoveryOptions.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: DefaultZoneMetadataName
    path: ../Steeltoe/src/Discovery/src/Consul/Discovery/ConsulDiscoveryOptions.cs
    startLine: 180
  assemblies:
  - Steeltoe.Discovery.Consul
  namespace: Steeltoe.Discovery.Consul.Discovery
  summary: "\nGets or sets the metadata tag name of the zone\n"
  example: []
  syntax:
    content: public string DefaultZoneMetadataName { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property DefaultZoneMetadataName As String
  overload: Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions.DefaultZoneMetadataName*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions.FailFast
  commentId: P:Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions.FailFast
  id: FailFast
  parent: Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions
  langs:
  - csharp
  - vb
  name: FailFast
  nameWithType: ConsulDiscoveryOptions.FailFast
  fullName: Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions.FailFast
  type: Property
  source:
    remote:
      path: src/Discovery/src/Consul/Discovery/ConsulDiscoveryOptions.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: FailFast
    path: ../Steeltoe/src/Discovery/src/Consul/Discovery/ConsulDiscoveryOptions.cs
    startLine: 186
  assemblies:
  - Steeltoe.Discovery.Consul
  namespace: Steeltoe.Discovery.Consul.Discovery
  summary: "\nGets or sets a value indicating whether gets or sets FailFast Throw exceptions during\nservice registration if true, otherwise, log warnings(defaults to true).\n"
  example: []
  syntax:
    content: public bool FailFast { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property FailFast As Boolean
  overload: Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions.FailFast*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions.Register
  commentId: P:Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions.Register
  id: Register
  parent: Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions
  langs:
  - csharp
  - vb
  name: Register
  nameWithType: ConsulDiscoveryOptions.Register
  fullName: Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions.Register
  type: Property
  source:
    remote:
      path: src/Discovery/src/Consul/Discovery/ConsulDiscoveryOptions.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Register
    path: ../Steeltoe/src/Discovery/src/Consul/Discovery/ConsulDiscoveryOptions.cs
    startLine: 191
  assemblies:
  - Steeltoe.Discovery.Consul
  namespace: Steeltoe.Discovery.Consul.Discovery
  summary: "\nGets or sets a value indicating whether gets or sets Register as a service in consul.\n"
  example: []
  syntax:
    content: public bool Register { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property Register As Boolean
  overload: Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions.Register*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions.Deregister
  commentId: P:Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions.Deregister
  id: Deregister
  parent: Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions
  langs:
  - csharp
  - vb
  name: Deregister
  nameWithType: ConsulDiscoveryOptions.Deregister
  fullName: Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions.Deregister
  type: Property
  source:
    remote:
      path: src/Discovery/src/Consul/Discovery/ConsulDiscoveryOptions.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Deregister
    path: ../Steeltoe/src/Discovery/src/Consul/Discovery/ConsulDiscoveryOptions.cs
    startLine: 197
  assemblies:
  - Steeltoe.Discovery.Consul
  namespace: Steeltoe.Discovery.Consul.Discovery
  summary: "\nGets or sets a value indicating whether gets or sets Deregister automatic de-registration\nof service in consul.\n"
  example: []
  syntax:
    content: public bool Deregister { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property Deregister As Boolean
  overload: Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions.Deregister*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions.IsHeartBeatEnabled
  commentId: P:Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions.IsHeartBeatEnabled
  id: IsHeartBeatEnabled
  parent: Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions
  langs:
  - csharp
  - vb
  name: IsHeartBeatEnabled
  nameWithType: ConsulDiscoveryOptions.IsHeartBeatEnabled
  fullName: Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions.IsHeartBeatEnabled
  type: Property
  source:
    remote:
      path: src/Discovery/src/Consul/Discovery/ConsulDiscoveryOptions.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: IsHeartBeatEnabled
    path: ../Steeltoe/src/Discovery/src/Consul/Discovery/ConsulDiscoveryOptions.cs
    startLine: 202
  assemblies:
  - Steeltoe.Discovery.Consul
  namespace: Steeltoe.Discovery.Consul.Discovery
  summary: "\nGets a value indicating whether heart beat is enabled\n"
  example: []
  syntax:
    content: public bool IsHeartBeatEnabled { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsHeartBeatEnabled As Boolean
  overload: Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions.IsHeartBeatEnabled*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions.IsRetryEnabled
  commentId: P:Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions.IsRetryEnabled
  id: IsRetryEnabled
  parent: Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions
  langs:
  - csharp
  - vb
  name: IsRetryEnabled
  nameWithType: ConsulDiscoveryOptions.IsRetryEnabled
  fullName: Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions.IsRetryEnabled
  type: Property
  source:
    remote:
      path: src/Discovery/src/Consul/Discovery/ConsulDiscoveryOptions.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: IsRetryEnabled
    path: ../Steeltoe/src/Discovery/src/Consul/Discovery/ConsulDiscoveryOptions.cs
    startLine: 207
  assemblies:
  - Steeltoe.Discovery.Consul
  namespace: Steeltoe.Discovery.Consul.Discovery
  summary: "\nGets a value indicating whether retry is enabled\n"
  example: []
  syntax:
    content: public bool IsRetryEnabled { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsRetryEnabled As Boolean
  overload: Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions.IsRetryEnabled*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions.CacheTTL
  commentId: P:Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions.CacheTTL
  id: CacheTTL
  parent: Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions
  langs:
  - csharp
  - vb
  name: CacheTTL
  nameWithType: ConsulDiscoveryOptions.CacheTTL
  fullName: Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions.CacheTTL
  type: Property
  source:
    remote:
      path: src/Discovery/src/Consul/Discovery/ConsulDiscoveryOptions.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: CacheTTL
    path: ../Steeltoe/src/Discovery/src/Consul/Discovery/ConsulDiscoveryOptions.cs
    startLine: 212
  assemblies:
  - Steeltoe.Discovery.Consul
  namespace: Steeltoe.Discovery.Consul.Discovery
  summary: "\nGets or sets the time in seconds that service instance cache records should remain active\n"
  example: []
  syntax:
    content: public int CacheTTL { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property CacheTTL As Integer
  overload: Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions.CacheTTL*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions.UseAspNetCoreUrls
  commentId: P:Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions.UseAspNetCoreUrls
  id: UseAspNetCoreUrls
  parent: Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions
  langs:
  - csharp
  - vb
  name: UseAspNetCoreUrls
  nameWithType: ConsulDiscoveryOptions.UseAspNetCoreUrls
  fullName: Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions.UseAspNetCoreUrls
  type: Property
  source:
    remote:
      path: src/Discovery/src/Consul/Discovery/ConsulDiscoveryOptions.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: UseAspNetCoreUrls
    path: ../Steeltoe/src/Discovery/src/Consul/Discovery/ConsulDiscoveryOptions.cs
    startLine: 217
  assemblies:
  - Steeltoe.Discovery.Consul
  namespace: Steeltoe.Discovery.Consul.Discovery
  summary: "\nGets or sets a value indicating whether to register a Url from ASP.NET Core configuration\n"
  example: []
  syntax:
    content: public bool UseAspNetCoreUrls { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property UseAspNetCoreUrls As Boolean
  overload: Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions.UseAspNetCoreUrls*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions.ApplyConfigUrls(System.Collections.Generic.List{System.Uri},System.String)
  commentId: M:Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions.ApplyConfigUrls(System.Collections.Generic.List{System.Uri},System.String)
  id: ApplyConfigUrls(System.Collections.Generic.List{System.Uri},System.String)
  parent: Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions
  langs:
  - csharp
  - vb
  name: ApplyConfigUrls(List<Uri>, String)
  nameWithType: ConsulDiscoveryOptions.ApplyConfigUrls(List<Uri>, String)
  fullName: Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions.ApplyConfigUrls(System.Collections.Generic.List<System.Uri>, System.String)
  type: Method
  source:
    remote:
      path: src/Discovery/src/Consul/Discovery/ConsulDiscoveryOptions.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: ApplyConfigUrls
    path: ../Steeltoe/src/Discovery/src/Consul/Discovery/ConsulDiscoveryOptions.cs
    startLine: 228
  assemblies:
  - Steeltoe.Discovery.Consul
  namespace: Steeltoe.Discovery.Consul.Discovery
  summary: "\nSet properties from addresses found in configuration\n"
  example: []
  syntax:
    content: public void ApplyConfigUrls(List<Uri> addresses, string wildcard_hostname)
    parameters:
    - id: addresses
      type: System.Collections.Generic.List{System.Uri}
      description: A list of addresses the application is listening on
    - id: wildcard_hostname
      type: System.String
      description: String representation of a wildcard hostname
    content.vb: Public Sub ApplyConfigUrls(addresses As List(Of Uri), wildcard_hostname As String)
  overload: Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions.ApplyConfigUrls*
  nameWithType.vb: ConsulDiscoveryOptions.ApplyConfigUrls(List(Of Uri), String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions.ApplyConfigUrls(System.Collections.Generic.List(Of System.Uri), System.String)
  name.vb: ApplyConfigUrls(List(Of Uri), String)
references:
- uid: Steeltoe.Discovery.Consul.Discovery
  commentId: N:Steeltoe.Discovery.Consul.Discovery
  name: Steeltoe.Discovery.Consul.Discovery
  nameWithType: Steeltoe.Discovery.Consul.Discovery
  fullName: Steeltoe.Discovery.Consul.Discovery
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions.#ctor*
  commentId: Overload:Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions.#ctor
  name: ConsulDiscoveryOptions
  nameWithType: ConsulDiscoveryOptions.ConsulDiscoveryOptions
  fullName: Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions.ConsulDiscoveryOptions
- uid: Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions.ApplyNetUtils*
  commentId: Overload:Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions.ApplyNetUtils
  name: ApplyNetUtils
  nameWithType: ConsulDiscoveryOptions.ApplyNetUtils
  fullName: Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions.ApplyNetUtils
- uid: Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions.Enabled*
  commentId: Overload:Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions.Enabled
  name: Enabled
  nameWithType: ConsulDiscoveryOptions.Enabled
  fullName: Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions.Enabled
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions.Tags*
  commentId: Overload:Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions.Tags
  name: Tags
  nameWithType: ConsulDiscoveryOptions.Tags
  fullName: Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions.Tags
- uid: System.Collections.Generic.IList{System.String}
  commentId: T:System.Collections.Generic.IList{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<String>
  nameWithType: IList<String>
  fullName: System.Collections.Generic.IList<System.String>
  nameWithType.vb: IList(Of String)
  fullName.vb: System.Collections.Generic.IList(Of System.String)
  name.vb: IList(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullName.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions.UseNetUtils*
  commentId: Overload:Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions.UseNetUtils
  name: UseNetUtils
  nameWithType: ConsulDiscoveryOptions.UseNetUtils
  fullName: Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions.UseNetUtils
- uid: Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions.NetUtils*
  commentId: Overload:Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions.NetUtils
  name: NetUtils
  nameWithType: ConsulDiscoveryOptions.NetUtils
  fullName: Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions.NetUtils
- uid: InetUtils
  isExternal: true
  name: InetUtils
  nameWithType: InetUtils
  fullName: InetUtils
- uid: Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions.Heartbeat*
  commentId: Overload:Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions.Heartbeat
  name: Heartbeat
  nameWithType: ConsulDiscoveryOptions.Heartbeat
  fullName: Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions.Heartbeat
- uid: Steeltoe.Discovery.Consul.Discovery.ConsulHeartbeatOptions
  commentId: T:Steeltoe.Discovery.Consul.Discovery.ConsulHeartbeatOptions
  parent: Steeltoe.Discovery.Consul.Discovery
  name: ConsulHeartbeatOptions
  nameWithType: ConsulHeartbeatOptions
  fullName: Steeltoe.Discovery.Consul.Discovery.ConsulHeartbeatOptions
- uid: Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions.Retry*
  commentId: Overload:Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions.Retry
  name: Retry
  nameWithType: ConsulDiscoveryOptions.Retry
  fullName: Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions.Retry
- uid: Steeltoe.Discovery.Consul.Discovery.ConsulRetryOptions
  commentId: T:Steeltoe.Discovery.Consul.Discovery.ConsulRetryOptions
  parent: Steeltoe.Discovery.Consul.Discovery
  name: ConsulRetryOptions
  nameWithType: ConsulRetryOptions
  fullName: Steeltoe.Discovery.Consul.Discovery.ConsulRetryOptions
- uid: Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions.DefaultQueryTag*
  commentId: Overload:Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions.DefaultQueryTag
  name: DefaultQueryTag
  nameWithType: ConsulDiscoveryOptions.DefaultQueryTag
  fullName: Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions.DefaultQueryTag
- uid: Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions.QueryPassing*
  commentId: Overload:Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions.QueryPassing
  name: QueryPassing
  nameWithType: ConsulDiscoveryOptions.QueryPassing
  fullName: Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions.QueryPassing
- uid: Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions.Scheme*
  commentId: Overload:Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions.Scheme
  name: Scheme
  nameWithType: ConsulDiscoveryOptions.Scheme
  fullName: Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions.Scheme
- uid: Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions.RegisterHealthCheck*
  commentId: Overload:Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions.RegisterHealthCheck
  name: RegisterHealthCheck
  nameWithType: ConsulDiscoveryOptions.RegisterHealthCheck
  fullName: Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions.RegisterHealthCheck
- uid: Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions.HealthCheckUrl*
  commentId: Overload:Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions.HealthCheckUrl
  name: HealthCheckUrl
  nameWithType: ConsulDiscoveryOptions.HealthCheckUrl
  fullName: Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions.HealthCheckUrl
- uid: Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions.HealthCheckPath*
  commentId: Overload:Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions.HealthCheckPath
  name: HealthCheckPath
  nameWithType: ConsulDiscoveryOptions.HealthCheckPath
  fullName: Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions.HealthCheckPath
- uid: Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions.HealthCheckInterval*
  commentId: Overload:Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions.HealthCheckInterval
  name: HealthCheckInterval
  nameWithType: ConsulDiscoveryOptions.HealthCheckInterval
  fullName: Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions.HealthCheckInterval
- uid: Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions.HealthCheckTimeout*
  commentId: Overload:Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions.HealthCheckTimeout
  name: HealthCheckTimeout
  nameWithType: ConsulDiscoveryOptions.HealthCheckTimeout
  fullName: Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions.HealthCheckTimeout
- uid: Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions.HealthCheckCriticalTimeout*
  commentId: Overload:Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions.HealthCheckCriticalTimeout
  name: HealthCheckCriticalTimeout
  nameWithType: ConsulDiscoveryOptions.HealthCheckCriticalTimeout
  fullName: Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions.HealthCheckCriticalTimeout
- uid: Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions.HealthCheckTlsSkipVerify*
  commentId: Overload:Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions.HealthCheckTlsSkipVerify
  name: HealthCheckTlsSkipVerify
  nameWithType: ConsulDiscoveryOptions.HealthCheckTlsSkipVerify
  fullName: Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions.HealthCheckTlsSkipVerify
- uid: Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions.HostName*
  commentId: Overload:Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions.HostName
  name: HostName
  nameWithType: ConsulDiscoveryOptions.HostName
  fullName: Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions.HostName
- uid: Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions.IpAddress*
  commentId: Overload:Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions.IpAddress
  name: IpAddress
  nameWithType: ConsulDiscoveryOptions.IpAddress
  fullName: Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions.IpAddress
- uid: Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions.Port*
  commentId: Overload:Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions.Port
  name: Port
  nameWithType: ConsulDiscoveryOptions.Port
  fullName: Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions.Port
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions.PreferIpAddress*
  commentId: Overload:Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions.PreferIpAddress
  name: PreferIpAddress
  nameWithType: ConsulDiscoveryOptions.PreferIpAddress
  fullName: Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions.PreferIpAddress
- uid: Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions.ServiceName*
  commentId: Overload:Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions.ServiceName
  name: ServiceName
  nameWithType: ConsulDiscoveryOptions.ServiceName
  fullName: Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions.ServiceName
- uid: Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions.InstanceId*
  commentId: Overload:Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions.InstanceId
  name: InstanceId
  nameWithType: ConsulDiscoveryOptions.InstanceId
  fullName: Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions.InstanceId
- uid: Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions.PreferAgentAddress*
  commentId: Overload:Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions.PreferAgentAddress
  name: PreferAgentAddress
  nameWithType: ConsulDiscoveryOptions.PreferAgentAddress
  fullName: Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions.PreferAgentAddress
- uid: Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions.InstanceZone*
  commentId: Overload:Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions.InstanceZone
  name: InstanceZone
  nameWithType: ConsulDiscoveryOptions.InstanceZone
  fullName: Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions.InstanceZone
- uid: Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions.InstanceGroup*
  commentId: Overload:Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions.InstanceGroup
  name: InstanceGroup
  nameWithType: ConsulDiscoveryOptions.InstanceGroup
  fullName: Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions.InstanceGroup
- uid: Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions.DefaultZoneMetadataName*
  commentId: Overload:Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions.DefaultZoneMetadataName
  name: DefaultZoneMetadataName
  nameWithType: ConsulDiscoveryOptions.DefaultZoneMetadataName
  fullName: Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions.DefaultZoneMetadataName
- uid: Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions.FailFast*
  commentId: Overload:Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions.FailFast
  name: FailFast
  nameWithType: ConsulDiscoveryOptions.FailFast
  fullName: Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions.FailFast
- uid: Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions.Register*
  commentId: Overload:Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions.Register
  name: Register
  nameWithType: ConsulDiscoveryOptions.Register
  fullName: Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions.Register
- uid: Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions.Deregister*
  commentId: Overload:Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions.Deregister
  name: Deregister
  nameWithType: ConsulDiscoveryOptions.Deregister
  fullName: Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions.Deregister
- uid: Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions.IsHeartBeatEnabled*
  commentId: Overload:Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions.IsHeartBeatEnabled
  name: IsHeartBeatEnabled
  nameWithType: ConsulDiscoveryOptions.IsHeartBeatEnabled
  fullName: Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions.IsHeartBeatEnabled
- uid: Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions.IsRetryEnabled*
  commentId: Overload:Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions.IsRetryEnabled
  name: IsRetryEnabled
  nameWithType: ConsulDiscoveryOptions.IsRetryEnabled
  fullName: Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions.IsRetryEnabled
- uid: Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions.CacheTTL*
  commentId: Overload:Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions.CacheTTL
  name: CacheTTL
  nameWithType: ConsulDiscoveryOptions.CacheTTL
  fullName: Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions.CacheTTL
- uid: Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions.UseAspNetCoreUrls*
  commentId: Overload:Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions.UseAspNetCoreUrls
  name: UseAspNetCoreUrls
  nameWithType: ConsulDiscoveryOptions.UseAspNetCoreUrls
  fullName: Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions.UseAspNetCoreUrls
- uid: Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions.ApplyConfigUrls*
  commentId: Overload:Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions.ApplyConfigUrls
  name: ApplyConfigUrls
  nameWithType: ConsulDiscoveryOptions.ApplyConfigUrls
  fullName: Steeltoe.Discovery.Consul.Discovery.ConsulDiscoveryOptions.ApplyConfigUrls
- uid: System.Collections.Generic.List{System.Uri}
  commentId: T:System.Collections.Generic.List{System.Uri}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<Uri>
  nameWithType: List<Uri>
  fullName: System.Collections.Generic.List<System.Uri>
  nameWithType.vb: List(Of Uri)
  fullName.vb: System.Collections.Generic.List(Of System.Uri)
  name.vb: List(Of Uri)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
