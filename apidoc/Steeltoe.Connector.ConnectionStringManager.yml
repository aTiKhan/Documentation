### YamlMime:ManagedReference
items:
- uid: Steeltoe.Connector.ConnectionStringManager
  commentId: T:Steeltoe.Connector.ConnectionStringManager
  id: ConnectionStringManager
  parent: Steeltoe.Connector
  children:
  - Steeltoe.Connector.ConnectionStringManager.#ctor(IConfiguration)
  - Steeltoe.Connector.ConnectionStringManager.Get``1(System.String)
  langs:
  - csharp
  - vb
  name: ConnectionStringManager
  nameWithType: ConnectionStringManager
  fullName: Steeltoe.Connector.ConnectionStringManager
  type: Class
  source:
    remote:
      path: src/Connectors/src/ConnectorBase/ConnectionStringManager.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: ConnectionStringManager
    path: ../Steeltoe/src/Connectors/src/ConnectorBase/ConnectionStringManager.cs
    startLine: 14
  assemblies:
  - Steeltoe.Connector.ConnectorBase
  namespace: Steeltoe.Connector
  summary: "\nUseful for getting connection information from <see cref=\"!:IConfiguration\"></see>\n"
  example: []
  syntax:
    content: public class ConnectionStringManager
    content.vb: Public Class ConnectionStringManager
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Steeltoe.Connector.ConnectionStringManager.#ctor(IConfiguration)
  commentId: M:Steeltoe.Connector.ConnectionStringManager.#ctor(IConfiguration)
  id: '#ctor(IConfiguration)'
  parent: Steeltoe.Connector.ConnectionStringManager
  langs:
  - csharp
  - vb
  name: ConnectionStringManager(IConfiguration)
  nameWithType: ConnectionStringManager.ConnectionStringManager(IConfiguration)
  fullName: Steeltoe.Connector.ConnectionStringManager.ConnectionStringManager(IConfiguration)
  type: Constructor
  source:
    remote:
      path: src/Connectors/src/ConnectorBase/ConnectionStringManager.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: .ctor
    path: ../Steeltoe/src/Connectors/src/ConnectorBase/ConnectionStringManager.cs
    startLine: 19
  assemblies:
  - Steeltoe.Connector.ConnectorBase
  namespace: Steeltoe.Connector
  syntax:
    content: public ConnectionStringManager(IConfiguration configuration)
    parameters:
    - id: configuration
      type: IConfiguration
    content.vb: Public Sub New(configuration As IConfiguration)
  overload: Steeltoe.Connector.ConnectionStringManager.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Steeltoe.Connector.ConnectionStringManager.Get``1(System.String)
  commentId: M:Steeltoe.Connector.ConnectionStringManager.Get``1(System.String)
  id: Get``1(System.String)
  parent: Steeltoe.Connector.ConnectionStringManager
  langs:
  - csharp
  - vb
  name: Get<T>(String)
  nameWithType: ConnectionStringManager.Get<T>(String)
  fullName: Steeltoe.Connector.ConnectionStringManager.Get<T>(System.String)
  type: Method
  source:
    remote:
      path: src/Connectors/src/ConnectorBase/ConnectionStringManager.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Get
    path: ../Steeltoe/src/Connectors/src/ConnectorBase/ConnectionStringManager.cs
    startLine: 31
  assemblies:
  - Steeltoe.Connector.ConnectorBase
  namespace: Steeltoe.Connector
  summary: "\nGet connection information of the specified type, optionally from a named service binding\n"
  example: []
  syntax:
    content: >-
      public Connection Get<T>(string serviceName = null)

          where T : IConnectionInfo, new()
    parameters:
    - id: serviceName
      type: System.String
      description: The name of a service binding
    typeParameters:
    - id: T
      description: The type of <xref href="Steeltoe.Connector.IConnectionInfo" data-throw-if-not-resolved="false"></xref> to get
    return:
      type: Steeltoe.Connector.Connection
      description: <xref href="Steeltoe.Connector.Connection" data-throw-if-not-resolved="false"></xref>
    content.vb: Public Function Get(Of T As {IConnectionInfo, New})(serviceName As String = Nothing) As Connection
  overload: Steeltoe.Connector.ConnectionStringManager.Get*
  nameWithType.vb: ConnectionStringManager.Get(Of T)(String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Steeltoe.Connector.ConnectionStringManager.Get(Of T)(System.String)
  name.vb: Get(Of T)(String)
references:
- uid: Steeltoe.Connector
  commentId: N:Steeltoe.Connector
  name: Steeltoe.Connector
  nameWithType: Steeltoe.Connector
  fullName: Steeltoe.Connector
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Steeltoe.Connector.ConnectionStringManager.#ctor*
  commentId: Overload:Steeltoe.Connector.ConnectionStringManager.#ctor
  name: ConnectionStringManager
  nameWithType: ConnectionStringManager.ConnectionStringManager
  fullName: Steeltoe.Connector.ConnectionStringManager.ConnectionStringManager
- uid: IConfiguration
  isExternal: true
  name: IConfiguration
  nameWithType: IConfiguration
  fullName: IConfiguration
- uid: Steeltoe.Connector.IConnectionInfo
  commentId: T:Steeltoe.Connector.IConnectionInfo
  parent: Steeltoe.Connector
  name: IConnectionInfo
  nameWithType: IConnectionInfo
  fullName: Steeltoe.Connector.IConnectionInfo
- uid: Steeltoe.Connector.Connection
  commentId: T:Steeltoe.Connector.Connection
  parent: Steeltoe.Connector
  name: Connection
  nameWithType: Connection
  fullName: Steeltoe.Connector.Connection
- uid: Steeltoe.Connector.ConnectionStringManager.Get*
  commentId: Overload:Steeltoe.Connector.ConnectionStringManager.Get
  name: Get
  nameWithType: ConnectionStringManager.Get
  fullName: Steeltoe.Connector.ConnectionStringManager.Get
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
