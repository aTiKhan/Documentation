### YamlMime:ManagedReference
items:
- uid: Steeltoe.Messaging.RabbitMQ.Support.DefaultMessageHeadersConverter
  commentId: T:Steeltoe.Messaging.RabbitMQ.Support.DefaultMessageHeadersConverter
  id: DefaultMessageHeadersConverter
  parent: Steeltoe.Messaging.RabbitMQ.Support
  children:
  - Steeltoe.Messaging.RabbitMQ.Support.DefaultMessageHeadersConverter.#ctor(Microsoft.Extensions.Logging.ILogger)
  - Steeltoe.Messaging.RabbitMQ.Support.DefaultMessageHeadersConverter.#ctor(System.Int32)
  - Steeltoe.Messaging.RabbitMQ.Support.DefaultMessageHeadersConverter.#ctor(System.Int32,System.Boolean)
  - Steeltoe.Messaging.RabbitMQ.Support.DefaultMessageHeadersConverter.FromMessageHeaders(Steeltoe.Messaging.IMessageHeaders,RabbitMQ.Client.IBasicProperties,System.Text.Encoding)
  - Steeltoe.Messaging.RabbitMQ.Support.DefaultMessageHeadersConverter.ToMessageHeaders(RabbitMQ.Client.IBasicProperties,Steeltoe.Messaging.RabbitMQ.Core.Envelope,System.Text.Encoding)
  langs:
  - csharp
  - vb
  name: DefaultMessageHeadersConverter
  nameWithType: DefaultMessageHeadersConverter
  fullName: Steeltoe.Messaging.RabbitMQ.Support.DefaultMessageHeadersConverter
  type: Class
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Support/DefaultMessageHeadersConverter.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: DefaultMessageHeadersConverter
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Support/DefaultMessageHeadersConverter.cs
    startLine: 15
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Support
  syntax:
    content: 'public class DefaultMessageHeadersConverter : IMessageHeadersConverter'
    content.vb: >-
      Public Class DefaultMessageHeadersConverter

          Implements IMessageHeadersConverter
  inheritance:
  - System.Object
  implements:
  - Steeltoe.Messaging.RabbitMQ.Support.IMessageHeadersConverter
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Steeltoe.Messaging.RabbitMQ.Support.DefaultMessageHeadersConverter.#ctor(Microsoft.Extensions.Logging.ILogger)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Support.DefaultMessageHeadersConverter.#ctor(Microsoft.Extensions.Logging.ILogger)
  id: '#ctor(Microsoft.Extensions.Logging.ILogger)'
  parent: Steeltoe.Messaging.RabbitMQ.Support.DefaultMessageHeadersConverter
  langs:
  - csharp
  - vb
  name: DefaultMessageHeadersConverter(ILogger)
  nameWithType: DefaultMessageHeadersConverter.DefaultMessageHeadersConverter(ILogger)
  fullName: Steeltoe.Messaging.RabbitMQ.Support.DefaultMessageHeadersConverter.DefaultMessageHeadersConverter(Microsoft.Extensions.Logging.ILogger)
  type: Constructor
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Support/DefaultMessageHeadersConverter.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: .ctor
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Support/DefaultMessageHeadersConverter.cs
    startLine: 22
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Support
  syntax:
    content: public DefaultMessageHeadersConverter(ILogger logger = null)
    parameters:
    - id: logger
      type: Microsoft.Extensions.Logging.ILogger
    content.vb: Public Sub New(logger As ILogger = Nothing)
  overload: Steeltoe.Messaging.RabbitMQ.Support.DefaultMessageHeadersConverter.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Steeltoe.Messaging.RabbitMQ.Support.DefaultMessageHeadersConverter.#ctor(System.Int32)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Support.DefaultMessageHeadersConverter.#ctor(System.Int32)
  id: '#ctor(System.Int32)'
  parent: Steeltoe.Messaging.RabbitMQ.Support.DefaultMessageHeadersConverter
  langs:
  - csharp
  - vb
  name: DefaultMessageHeadersConverter(Int32)
  nameWithType: DefaultMessageHeadersConverter.DefaultMessageHeadersConverter(Int32)
  fullName: Steeltoe.Messaging.RabbitMQ.Support.DefaultMessageHeadersConverter.DefaultMessageHeadersConverter(System.Int32)
  type: Constructor
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Support/DefaultMessageHeadersConverter.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: .ctor
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Support/DefaultMessageHeadersConverter.cs
    startLine: 28
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Support
  syntax:
    content: public DefaultMessageHeadersConverter(int longStringLimit)
    parameters:
    - id: longStringLimit
      type: System.Int32
    content.vb: Public Sub New(longStringLimit As Integer)
  overload: Steeltoe.Messaging.RabbitMQ.Support.DefaultMessageHeadersConverter.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Steeltoe.Messaging.RabbitMQ.Support.DefaultMessageHeadersConverter.#ctor(System.Int32,System.Boolean)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Support.DefaultMessageHeadersConverter.#ctor(System.Int32,System.Boolean)
  id: '#ctor(System.Int32,System.Boolean)'
  parent: Steeltoe.Messaging.RabbitMQ.Support.DefaultMessageHeadersConverter
  langs:
  - csharp
  - vb
  name: DefaultMessageHeadersConverter(Int32, Boolean)
  nameWithType: DefaultMessageHeadersConverter.DefaultMessageHeadersConverter(Int32, Boolean)
  fullName: Steeltoe.Messaging.RabbitMQ.Support.DefaultMessageHeadersConverter.DefaultMessageHeadersConverter(System.Int32, System.Boolean)
  type: Constructor
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Support/DefaultMessageHeadersConverter.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: .ctor
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Support/DefaultMessageHeadersConverter.cs
    startLine: 33
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Support
  syntax:
    content: public DefaultMessageHeadersConverter(int longStringLimit, bool convertLongLongStrings)
    parameters:
    - id: longStringLimit
      type: System.Int32
    - id: convertLongLongStrings
      type: System.Boolean
    content.vb: Public Sub New(longStringLimit As Integer, convertLongLongStrings As Boolean)
  overload: Steeltoe.Messaging.RabbitMQ.Support.DefaultMessageHeadersConverter.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Steeltoe.Messaging.RabbitMQ.Support.DefaultMessageHeadersConverter.FromMessageHeaders(Steeltoe.Messaging.IMessageHeaders,RabbitMQ.Client.IBasicProperties,System.Text.Encoding)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Support.DefaultMessageHeadersConverter.FromMessageHeaders(Steeltoe.Messaging.IMessageHeaders,RabbitMQ.Client.IBasicProperties,System.Text.Encoding)
  id: FromMessageHeaders(Steeltoe.Messaging.IMessageHeaders,RabbitMQ.Client.IBasicProperties,System.Text.Encoding)
  parent: Steeltoe.Messaging.RabbitMQ.Support.DefaultMessageHeadersConverter
  langs:
  - csharp
  - vb
  name: FromMessageHeaders(IMessageHeaders, IBasicProperties, Encoding)
  nameWithType: DefaultMessageHeadersConverter.FromMessageHeaders(IMessageHeaders, IBasicProperties, Encoding)
  fullName: Steeltoe.Messaging.RabbitMQ.Support.DefaultMessageHeadersConverter.FromMessageHeaders(Steeltoe.Messaging.IMessageHeaders, RabbitMQ.Client.IBasicProperties, System.Text.Encoding)
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Support/DefaultMessageHeadersConverter.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: FromMessageHeaders
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Support/DefaultMessageHeadersConverter.cs
    startLine: 39
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Support
  syntax:
    content: public virtual void FromMessageHeaders(IMessageHeaders headers, IBasicProperties target, Encoding charset)
    parameters:
    - id: headers
      type: Steeltoe.Messaging.IMessageHeaders
    - id: target
      type: RabbitMQ.Client.IBasicProperties
    - id: charset
      type: System.Text.Encoding
    content.vb: Public Overridable Sub FromMessageHeaders(headers As IMessageHeaders, target As IBasicProperties, charset As Encoding)
  overload: Steeltoe.Messaging.RabbitMQ.Support.DefaultMessageHeadersConverter.FromMessageHeaders*
  implements:
  - Steeltoe.Messaging.RabbitMQ.Support.IMessageHeadersConverter.FromMessageHeaders(Steeltoe.Messaging.IMessageHeaders,RabbitMQ.Client.IBasicProperties,System.Text.Encoding)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Steeltoe.Messaging.RabbitMQ.Support.DefaultMessageHeadersConverter.ToMessageHeaders(RabbitMQ.Client.IBasicProperties,Steeltoe.Messaging.RabbitMQ.Core.Envelope,System.Text.Encoding)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Support.DefaultMessageHeadersConverter.ToMessageHeaders(RabbitMQ.Client.IBasicProperties,Steeltoe.Messaging.RabbitMQ.Core.Envelope,System.Text.Encoding)
  id: ToMessageHeaders(RabbitMQ.Client.IBasicProperties,Steeltoe.Messaging.RabbitMQ.Core.Envelope,System.Text.Encoding)
  parent: Steeltoe.Messaging.RabbitMQ.Support.DefaultMessageHeadersConverter
  langs:
  - csharp
  - vb
  name: ToMessageHeaders(IBasicProperties, Envelope, Encoding)
  nameWithType: DefaultMessageHeadersConverter.ToMessageHeaders(IBasicProperties, Envelope, Encoding)
  fullName: Steeltoe.Messaging.RabbitMQ.Support.DefaultMessageHeadersConverter.ToMessageHeaders(RabbitMQ.Client.IBasicProperties, Steeltoe.Messaging.RabbitMQ.Core.Envelope, System.Text.Encoding)
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Support/DefaultMessageHeadersConverter.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: ToMessageHeaders
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Support/DefaultMessageHeadersConverter.cs
    startLine: 120
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Support
  syntax:
    content: public virtual IMessageHeaders ToMessageHeaders(IBasicProperties source, Envelope envelope, Encoding charset)
    parameters:
    - id: source
      type: RabbitMQ.Client.IBasicProperties
    - id: envelope
      type: Steeltoe.Messaging.RabbitMQ.Core.Envelope
    - id: charset
      type: System.Text.Encoding
    return:
      type: Steeltoe.Messaging.IMessageHeaders
    content.vb: Public Overridable Function ToMessageHeaders(source As IBasicProperties, envelope As Envelope, charset As Encoding) As IMessageHeaders
  overload: Steeltoe.Messaging.RabbitMQ.Support.DefaultMessageHeadersConverter.ToMessageHeaders*
  implements:
  - Steeltoe.Messaging.RabbitMQ.Support.IMessageHeadersConverter.ToMessageHeaders(RabbitMQ.Client.IBasicProperties,Steeltoe.Messaging.RabbitMQ.Core.Envelope,System.Text.Encoding)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
references:
- uid: Steeltoe.Messaging.RabbitMQ.Support
  commentId: N:Steeltoe.Messaging.RabbitMQ.Support
  name: Steeltoe.Messaging.RabbitMQ.Support
  nameWithType: Steeltoe.Messaging.RabbitMQ.Support
  fullName: Steeltoe.Messaging.RabbitMQ.Support
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Steeltoe.Messaging.RabbitMQ.Support.IMessageHeadersConverter
  commentId: T:Steeltoe.Messaging.RabbitMQ.Support.IMessageHeadersConverter
  parent: Steeltoe.Messaging.RabbitMQ.Support
  name: IMessageHeadersConverter
  nameWithType: IMessageHeadersConverter
  fullName: Steeltoe.Messaging.RabbitMQ.Support.IMessageHeadersConverter
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Steeltoe.Messaging.RabbitMQ.Support.DefaultMessageHeadersConverter.#ctor*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Support.DefaultMessageHeadersConverter.#ctor
  name: DefaultMessageHeadersConverter
  nameWithType: DefaultMessageHeadersConverter.DefaultMessageHeadersConverter
  fullName: Steeltoe.Messaging.RabbitMQ.Support.DefaultMessageHeadersConverter.DefaultMessageHeadersConverter
- uid: Microsoft.Extensions.Logging.ILogger
  commentId: T:Microsoft.Extensions.Logging.ILogger
  parent: Microsoft.Extensions.Logging
  isExternal: true
  name: ILogger
  nameWithType: ILogger
  fullName: Microsoft.Extensions.Logging.ILogger
- uid: Microsoft.Extensions.Logging
  commentId: N:Microsoft.Extensions.Logging
  isExternal: true
  name: Microsoft.Extensions.Logging
  nameWithType: Microsoft.Extensions.Logging
  fullName: Microsoft.Extensions.Logging
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Steeltoe.Messaging.RabbitMQ.Support.DefaultMessageHeadersConverter.FromMessageHeaders*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Support.DefaultMessageHeadersConverter.FromMessageHeaders
  name: FromMessageHeaders
  nameWithType: DefaultMessageHeadersConverter.FromMessageHeaders
  fullName: Steeltoe.Messaging.RabbitMQ.Support.DefaultMessageHeadersConverter.FromMessageHeaders
- uid: Steeltoe.Messaging.RabbitMQ.Support.IMessageHeadersConverter.FromMessageHeaders(Steeltoe.Messaging.IMessageHeaders,RabbitMQ.Client.IBasicProperties,System.Text.Encoding)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Support.IMessageHeadersConverter.FromMessageHeaders(Steeltoe.Messaging.IMessageHeaders,RabbitMQ.Client.IBasicProperties,System.Text.Encoding)
  parent: Steeltoe.Messaging.RabbitMQ.Support.IMessageHeadersConverter
  isExternal: true
  name: FromMessageHeaders(IMessageHeaders, IBasicProperties, Encoding)
  nameWithType: IMessageHeadersConverter.FromMessageHeaders(IMessageHeaders, IBasicProperties, Encoding)
  fullName: Steeltoe.Messaging.RabbitMQ.Support.IMessageHeadersConverter.FromMessageHeaders(Steeltoe.Messaging.IMessageHeaders, RabbitMQ.Client.IBasicProperties, System.Text.Encoding)
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Support.IMessageHeadersConverter.FromMessageHeaders(Steeltoe.Messaging.IMessageHeaders,RabbitMQ.Client.IBasicProperties,System.Text.Encoding)
    name: FromMessageHeaders
    nameWithType: IMessageHeadersConverter.FromMessageHeaders
    fullName: Steeltoe.Messaging.RabbitMQ.Support.IMessageHeadersConverter.FromMessageHeaders
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.IMessageHeaders
    name: IMessageHeaders
    nameWithType: IMessageHeaders
    fullName: Steeltoe.Messaging.IMessageHeaders
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: RabbitMQ.Client.IBasicProperties
    name: IBasicProperties
    nameWithType: IBasicProperties
    fullName: RabbitMQ.Client.IBasicProperties
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Text.Encoding
    name: Encoding
    nameWithType: Encoding
    fullName: System.Text.Encoding
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Support.IMessageHeadersConverter.FromMessageHeaders(Steeltoe.Messaging.IMessageHeaders,RabbitMQ.Client.IBasicProperties,System.Text.Encoding)
    name: FromMessageHeaders
    nameWithType: IMessageHeadersConverter.FromMessageHeaders
    fullName: Steeltoe.Messaging.RabbitMQ.Support.IMessageHeadersConverter.FromMessageHeaders
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.IMessageHeaders
    name: IMessageHeaders
    nameWithType: IMessageHeaders
    fullName: Steeltoe.Messaging.IMessageHeaders
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: RabbitMQ.Client.IBasicProperties
    name: IBasicProperties
    nameWithType: IBasicProperties
    fullName: RabbitMQ.Client.IBasicProperties
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Text.Encoding
    name: Encoding
    nameWithType: Encoding
    fullName: System.Text.Encoding
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.IMessageHeaders
  commentId: T:Steeltoe.Messaging.IMessageHeaders
  parent: Steeltoe.Messaging
  name: IMessageHeaders
  nameWithType: IMessageHeaders
  fullName: Steeltoe.Messaging.IMessageHeaders
- uid: RabbitMQ.Client.IBasicProperties
  commentId: T:RabbitMQ.Client.IBasicProperties
  parent: RabbitMQ.Client
  isExternal: true
  name: IBasicProperties
  nameWithType: IBasicProperties
  fullName: RabbitMQ.Client.IBasicProperties
- uid: System.Text.Encoding
  commentId: T:System.Text.Encoding
  parent: System.Text
  isExternal: true
  name: Encoding
  nameWithType: Encoding
  fullName: System.Text.Encoding
- uid: Steeltoe.Messaging
  commentId: N:Steeltoe.Messaging
  name: Steeltoe.Messaging
  nameWithType: Steeltoe.Messaging
  fullName: Steeltoe.Messaging
- uid: RabbitMQ.Client
  commentId: N:RabbitMQ.Client
  isExternal: true
  name: RabbitMQ.Client
  nameWithType: RabbitMQ.Client
  fullName: RabbitMQ.Client
- uid: System.Text
  commentId: N:System.Text
  isExternal: true
  name: System.Text
  nameWithType: System.Text
  fullName: System.Text
- uid: Steeltoe.Messaging.RabbitMQ.Support.DefaultMessageHeadersConverter.ToMessageHeaders*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Support.DefaultMessageHeadersConverter.ToMessageHeaders
  name: ToMessageHeaders
  nameWithType: DefaultMessageHeadersConverter.ToMessageHeaders
  fullName: Steeltoe.Messaging.RabbitMQ.Support.DefaultMessageHeadersConverter.ToMessageHeaders
- uid: Steeltoe.Messaging.RabbitMQ.Support.IMessageHeadersConverter.ToMessageHeaders(RabbitMQ.Client.IBasicProperties,Steeltoe.Messaging.RabbitMQ.Core.Envelope,System.Text.Encoding)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Support.IMessageHeadersConverter.ToMessageHeaders(RabbitMQ.Client.IBasicProperties,Steeltoe.Messaging.RabbitMQ.Core.Envelope,System.Text.Encoding)
  parent: Steeltoe.Messaging.RabbitMQ.Support.IMessageHeadersConverter
  isExternal: true
  name: ToMessageHeaders(IBasicProperties, Envelope, Encoding)
  nameWithType: IMessageHeadersConverter.ToMessageHeaders(IBasicProperties, Envelope, Encoding)
  fullName: Steeltoe.Messaging.RabbitMQ.Support.IMessageHeadersConverter.ToMessageHeaders(RabbitMQ.Client.IBasicProperties, Steeltoe.Messaging.RabbitMQ.Core.Envelope, System.Text.Encoding)
  spec.csharp:
  - uid: Steeltoe.Messaging.RabbitMQ.Support.IMessageHeadersConverter.ToMessageHeaders(RabbitMQ.Client.IBasicProperties,Steeltoe.Messaging.RabbitMQ.Core.Envelope,System.Text.Encoding)
    name: ToMessageHeaders
    nameWithType: IMessageHeadersConverter.ToMessageHeaders
    fullName: Steeltoe.Messaging.RabbitMQ.Support.IMessageHeadersConverter.ToMessageHeaders
  - name: (
    nameWithType: (
    fullName: (
  - uid: RabbitMQ.Client.IBasicProperties
    name: IBasicProperties
    nameWithType: IBasicProperties
    fullName: RabbitMQ.Client.IBasicProperties
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.RabbitMQ.Core.Envelope
    name: Envelope
    nameWithType: Envelope
    fullName: Steeltoe.Messaging.RabbitMQ.Core.Envelope
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Text.Encoding
    name: Encoding
    nameWithType: Encoding
    fullName: System.Text.Encoding
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.RabbitMQ.Support.IMessageHeadersConverter.ToMessageHeaders(RabbitMQ.Client.IBasicProperties,Steeltoe.Messaging.RabbitMQ.Core.Envelope,System.Text.Encoding)
    name: ToMessageHeaders
    nameWithType: IMessageHeadersConverter.ToMessageHeaders
    fullName: Steeltoe.Messaging.RabbitMQ.Support.IMessageHeadersConverter.ToMessageHeaders
  - name: (
    nameWithType: (
    fullName: (
  - uid: RabbitMQ.Client.IBasicProperties
    name: IBasicProperties
    nameWithType: IBasicProperties
    fullName: RabbitMQ.Client.IBasicProperties
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.RabbitMQ.Core.Envelope
    name: Envelope
    nameWithType: Envelope
    fullName: Steeltoe.Messaging.RabbitMQ.Core.Envelope
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Text.Encoding
    name: Encoding
    nameWithType: Encoding
    fullName: System.Text.Encoding
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.RabbitMQ.Core.Envelope
  commentId: T:Steeltoe.Messaging.RabbitMQ.Core.Envelope
  parent: Steeltoe.Messaging.RabbitMQ.Core
  name: Envelope
  nameWithType: Envelope
  fullName: Steeltoe.Messaging.RabbitMQ.Core.Envelope
- uid: Steeltoe.Messaging.RabbitMQ.Core
  commentId: N:Steeltoe.Messaging.RabbitMQ.Core
  name: Steeltoe.Messaging.RabbitMQ.Core
  nameWithType: Steeltoe.Messaging.RabbitMQ.Core
  fullName: Steeltoe.Messaging.RabbitMQ.Core
