### YamlMime:ManagedReference
items:
- uid: Steeltoe.Common.Util.ObjectUtils
  commentId: T:Steeltoe.Common.Util.ObjectUtils
  id: ObjectUtils
  parent: Steeltoe.Common.Util
  children:
  - Steeltoe.Common.Util.ObjectUtils.IsEmpty(System.Object[])
  - Steeltoe.Common.Util.ObjectUtils.NullSafeEquals(System.Object,System.Object)
  - Steeltoe.Common.Util.ObjectUtils.NullSafeHashCode(System.Object)
  langs:
  - csharp
  - vb
  name: ObjectUtils
  nameWithType: ObjectUtils
  fullName: Steeltoe.Common.Util.ObjectUtils
  type: Class
  source:
    remote:
      path: src/Common/src/Common/Util/ObjectUtils.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: ObjectUtils
    path: ../Steeltoe/src/Common/src/Common/Util/ObjectUtils.cs
    startLine: 6
  assemblies:
  - Steeltoe.Common
  namespace: Steeltoe.Common.Util
  syntax:
    content: public static class ObjectUtils
    content.vb: Public Module ObjectUtils
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Steeltoe.Common.Util.ObjectUtils.IsEmpty(System.Object[])
  commentId: M:Steeltoe.Common.Util.ObjectUtils.IsEmpty(System.Object[])
  id: IsEmpty(System.Object[])
  parent: Steeltoe.Common.Util.ObjectUtils
  langs:
  - csharp
  - vb
  name: IsEmpty(Object[])
  nameWithType: ObjectUtils.IsEmpty(Object[])
  fullName: Steeltoe.Common.Util.ObjectUtils.IsEmpty(System.Object[])
  type: Method
  source:
    remote:
      path: src/Common/src/Common/Util/ObjectUtils.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: IsEmpty
    path: ../Steeltoe/src/Common/src/Common/Util/ObjectUtils.cs
    startLine: 11
  assemblies:
  - Steeltoe.Common
  namespace: Steeltoe.Common.Util
  syntax:
    content: public static bool IsEmpty(object[] array)
    parameters:
    - id: array
      type: System.Object[]
    return:
      type: System.Boolean
    content.vb: Public Shared Function IsEmpty(array As Object()) As Boolean
  overload: Steeltoe.Common.Util.ObjectUtils.IsEmpty*
  nameWithType.vb: ObjectUtils.IsEmpty(Object())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Steeltoe.Common.Util.ObjectUtils.IsEmpty(System.Object())
  name.vb: IsEmpty(Object())
- uid: Steeltoe.Common.Util.ObjectUtils.NullSafeEquals(System.Object,System.Object)
  commentId: M:Steeltoe.Common.Util.ObjectUtils.NullSafeEquals(System.Object,System.Object)
  id: NullSafeEquals(System.Object,System.Object)
  parent: Steeltoe.Common.Util.ObjectUtils
  langs:
  - csharp
  - vb
  name: NullSafeEquals(Object, Object)
  nameWithType: ObjectUtils.NullSafeEquals(Object, Object)
  fullName: Steeltoe.Common.Util.ObjectUtils.NullSafeEquals(System.Object, System.Object)
  type: Method
  source:
    remote:
      path: src/Common/src/Common/Util/ObjectUtils.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: NullSafeEquals
    path: ../Steeltoe/src/Common/src/Common/Util/ObjectUtils.cs
    startLine: 16
  assemblies:
  - Steeltoe.Common
  namespace: Steeltoe.Common.Util
  syntax:
    content: public static bool NullSafeEquals(object o1, object o2)
    parameters:
    - id: o1
      type: System.Object
    - id: o2
      type: System.Object
    return:
      type: System.Boolean
    content.vb: Public Shared Function NullSafeEquals(o1 As Object, o2 As Object) As Boolean
  overload: Steeltoe.Common.Util.ObjectUtils.NullSafeEquals*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Steeltoe.Common.Util.ObjectUtils.NullSafeHashCode(System.Object)
  commentId: M:Steeltoe.Common.Util.ObjectUtils.NullSafeHashCode(System.Object)
  id: NullSafeHashCode(System.Object)
  parent: Steeltoe.Common.Util.ObjectUtils
  langs:
  - csharp
  - vb
  name: NullSafeHashCode(Object)
  nameWithType: ObjectUtils.NullSafeHashCode(Object)
  fullName: Steeltoe.Common.Util.ObjectUtils.NullSafeHashCode(System.Object)
  type: Method
  source:
    remote:
      path: src/Common/src/Common/Util/ObjectUtils.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: NullSafeHashCode
    path: ../Steeltoe/src/Common/src/Common/Util/ObjectUtils.cs
    startLine: 41
  assemblies:
  - Steeltoe.Common
  namespace: Steeltoe.Common.Util
  syntax:
    content: public static int NullSafeHashCode(object obj)
    parameters:
    - id: obj
      type: System.Object
    return:
      type: System.Int32
    content.vb: Public Shared Function NullSafeHashCode(obj As Object) As Integer
  overload: Steeltoe.Common.Util.ObjectUtils.NullSafeHashCode*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Steeltoe.Common.Util
  commentId: N:Steeltoe.Common.Util
  name: Steeltoe.Common.Util
  nameWithType: Steeltoe.Common.Util
  fullName: Steeltoe.Common.Util
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Steeltoe.Common.Util.ObjectUtils.IsEmpty*
  commentId: Overload:Steeltoe.Common.Util.ObjectUtils.IsEmpty
  name: IsEmpty
  nameWithType: ObjectUtils.IsEmpty
  fullName: Steeltoe.Common.Util.ObjectUtils.IsEmpty
- uid: System.Object[]
  isExternal: true
  name: Object[]
  nameWithType: Object[]
  fullName: System.Object[]
  nameWithType.vb: Object()
  fullName.vb: System.Object()
  name.vb: Object()
  spec.csharp:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Steeltoe.Common.Util.ObjectUtils.NullSafeEquals*
  commentId: Overload:Steeltoe.Common.Util.ObjectUtils.NullSafeEquals
  name: NullSafeEquals
  nameWithType: ObjectUtils.NullSafeEquals
  fullName: Steeltoe.Common.Util.ObjectUtils.NullSafeEquals
- uid: Steeltoe.Common.Util.ObjectUtils.NullSafeHashCode*
  commentId: Overload:Steeltoe.Common.Util.ObjectUtils.NullSafeHashCode
  name: NullSafeHashCode
  nameWithType: ObjectUtils.NullSafeHashCode
  fullName: Steeltoe.Common.Util.ObjectUtils.NullSafeHashCode
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
