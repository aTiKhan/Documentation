### YamlMime:ManagedReference
items:
- uid: Steeltoe.Extensions.Configuration.CloudFoundry.CloudFoundryServiceCollectionExtensions
  commentId: T:Steeltoe.Extensions.Configuration.CloudFoundry.CloudFoundryServiceCollectionExtensions
  id: CloudFoundryServiceCollectionExtensions
  parent: Steeltoe.Extensions.Configuration.CloudFoundry
  children:
  - Steeltoe.Extensions.Configuration.CloudFoundry.CloudFoundryServiceCollectionExtensions.ConfigureCloudFoundryOptions(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.Extensions.Configuration.IConfiguration)
  - Steeltoe.Extensions.Configuration.CloudFoundry.CloudFoundryServiceCollectionExtensions.ConfigureCloudFoundryService``1(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.Extensions.Configuration.IConfiguration,System.String)
  - Steeltoe.Extensions.Configuration.CloudFoundry.CloudFoundryServiceCollectionExtensions.ConfigureCloudFoundryServices``1(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.Extensions.Configuration.IConfiguration,System.String)
  langs:
  - csharp
  - vb
  name: CloudFoundryServiceCollectionExtensions
  nameWithType: CloudFoundryServiceCollectionExtensions
  fullName: Steeltoe.Extensions.Configuration.CloudFoundry.CloudFoundryServiceCollectionExtensions
  type: Class
  source:
    remote:
      path: src/Configuration/src/CloudFoundryCore/CloudFoundryServiceCollectionExtensions.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: CloudFoundryServiceCollectionExtensions
    path: ../Steeltoe/src/Configuration/src/CloudFoundryCore/CloudFoundryServiceCollectionExtensions.cs
    startLine: 13
  assemblies:
  - Steeltoe.Extensions.Configuration.CloudFoundryCore
  namespace: Steeltoe.Extensions.Configuration.CloudFoundry
  summary: "\nExtension methods for adding services related to CloudFoundry\n"
  example: []
  syntax:
    content: public static class CloudFoundryServiceCollectionExtensions
    content.vb: Public Module CloudFoundryServiceCollectionExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Steeltoe.Extensions.Configuration.CloudFoundry.CloudFoundryServiceCollectionExtensions.ConfigureCloudFoundryOptions(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.Extensions.Configuration.IConfiguration)
  commentId: M:Steeltoe.Extensions.Configuration.CloudFoundry.CloudFoundryServiceCollectionExtensions.ConfigureCloudFoundryOptions(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.Extensions.Configuration.IConfiguration)
  id: ConfigureCloudFoundryOptions(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.Extensions.Configuration.IConfiguration)
  isExtensionMethod: true
  parent: Steeltoe.Extensions.Configuration.CloudFoundry.CloudFoundryServiceCollectionExtensions
  langs:
  - csharp
  - vb
  name: ConfigureCloudFoundryOptions(IServiceCollection, IConfiguration)
  nameWithType: CloudFoundryServiceCollectionExtensions.ConfigureCloudFoundryOptions(IServiceCollection, IConfiguration)
  fullName: Steeltoe.Extensions.Configuration.CloudFoundry.CloudFoundryServiceCollectionExtensions.ConfigureCloudFoundryOptions(Microsoft.Extensions.DependencyInjection.IServiceCollection, Microsoft.Extensions.Configuration.IConfiguration)
  type: Method
  source:
    remote:
      path: src/Configuration/src/CloudFoundryCore/CloudFoundryServiceCollectionExtensions.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: ConfigureCloudFoundryOptions
    path: ../Steeltoe/src/Configuration/src/CloudFoundryCore/CloudFoundryServiceCollectionExtensions.cs
    startLine: 23
  assemblies:
  - Steeltoe.Extensions.Configuration.CloudFoundryCore
  namespace: Steeltoe.Extensions.Configuration.CloudFoundry
  summary: "\nBind configuration data into <xref href=\"Steeltoe.Extensions.Configuration.CloudFoundry.CloudFoundryApplicationOptions\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"Steeltoe.Extensions.Configuration.CloudFoundry.CloudFoundryServicesOptions\" data-throw-if-not-resolved=\"false\"></xref>\nand add both to the provided service container as configured TOptions.  You can then inject both options using the normal\nOptions pattern.\n"
  example: []
  syntax:
    content: public static IServiceCollection ConfigureCloudFoundryOptions(this IServiceCollection services, IConfiguration config)
    parameters:
    - id: services
      type: Microsoft.Extensions.DependencyInjection.IServiceCollection
      description: the service container
    - id: config
      type: Microsoft.Extensions.Configuration.IConfiguration
      description: the applications configuration
    return:
      type: Microsoft.Extensions.DependencyInjection.IServiceCollection
      description: service container
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ConfigureCloudFoundryOptions(services As IServiceCollection, config As IConfiguration) As IServiceCollection
  overload: Steeltoe.Extensions.Configuration.CloudFoundry.CloudFoundryServiceCollectionExtensions.ConfigureCloudFoundryOptions*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Steeltoe.Extensions.Configuration.CloudFoundry.CloudFoundryServiceCollectionExtensions.ConfigureCloudFoundryService``1(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.Extensions.Configuration.IConfiguration,System.String)
  commentId: M:Steeltoe.Extensions.Configuration.CloudFoundry.CloudFoundryServiceCollectionExtensions.ConfigureCloudFoundryService``1(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.Extensions.Configuration.IConfiguration,System.String)
  id: ConfigureCloudFoundryService``1(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.Extensions.Configuration.IConfiguration,System.String)
  isExtensionMethod: true
  parent: Steeltoe.Extensions.Configuration.CloudFoundry.CloudFoundryServiceCollectionExtensions
  langs:
  - csharp
  - vb
  name: ConfigureCloudFoundryService<TOption>(IServiceCollection, IConfiguration, String)
  nameWithType: CloudFoundryServiceCollectionExtensions.ConfigureCloudFoundryService<TOption>(IServiceCollection, IConfiguration, String)
  fullName: Steeltoe.Extensions.Configuration.CloudFoundry.CloudFoundryServiceCollectionExtensions.ConfigureCloudFoundryService<TOption>(Microsoft.Extensions.DependencyInjection.IServiceCollection, Microsoft.Extensions.Configuration.IConfiguration, System.String)
  type: Method
  source:
    remote:
      path: src/Configuration/src/CloudFoundryCore/CloudFoundryServiceCollectionExtensions.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: ConfigureCloudFoundryService
    path: ../Steeltoe/src/Configuration/src/CloudFoundryCore/CloudFoundryServiceCollectionExtensions.cs
    startLine: 56
  assemblies:
  - Steeltoe.Extensions.Configuration.CloudFoundryCore
  namespace: Steeltoe.Extensions.Configuration.CloudFoundry
  summary: "\nFind the Cloud Foundry service with the <code data-dev-comment-type=\"paramref\" class=\"paramref\">serviceName</code> in VCAP_SERVICES and bind the configuration data from\nthe provided <code data-dev-comment-type=\"paramref\" class=\"paramref\">config</code> into the options type and add it to the provided service container as a configured named TOption.\nThe name of the TOption will be the <code data-dev-comment-type=\"paramref\" class=\"paramref\">serviceName</code>. You can then inject the option using the normal Options pattern.\n"
  example: []
  syntax:
    content: >-
      public static IServiceCollection ConfigureCloudFoundryService<TOption>(this IServiceCollection services, IConfiguration config, string serviceName)

          where TOption : CloudFoundryServicesOptions
    parameters:
    - id: services
      type: Microsoft.Extensions.DependencyInjection.IServiceCollection
      description: the service container
    - id: config
      type: Microsoft.Extensions.Configuration.IConfiguration
      description: the applications configuration
    - id: serviceName
      type: System.String
      description: the Cloud Foundry service name to bind to the options type
    typeParameters:
    - id: TOption
      description: the options type
    return:
      type: Microsoft.Extensions.DependencyInjection.IServiceCollection
      description: service container
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ConfigureCloudFoundryService(Of TOption As CloudFoundryServicesOptions)(services As IServiceCollection, config As IConfiguration, serviceName As String) As IServiceCollection
  overload: Steeltoe.Extensions.Configuration.CloudFoundry.CloudFoundryServiceCollectionExtensions.ConfigureCloudFoundryService*
  nameWithType.vb: CloudFoundryServiceCollectionExtensions.ConfigureCloudFoundryService(Of TOption)(IServiceCollection, IConfiguration, String)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Steeltoe.Extensions.Configuration.CloudFoundry.CloudFoundryServiceCollectionExtensions.ConfigureCloudFoundryService(Of TOption)(Microsoft.Extensions.DependencyInjection.IServiceCollection, Microsoft.Extensions.Configuration.IConfiguration, System.String)
  name.vb: ConfigureCloudFoundryService(Of TOption)(IServiceCollection, IConfiguration, String)
- uid: Steeltoe.Extensions.Configuration.CloudFoundry.CloudFoundryServiceCollectionExtensions.ConfigureCloudFoundryServices``1(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.Extensions.Configuration.IConfiguration,System.String)
  commentId: M:Steeltoe.Extensions.Configuration.CloudFoundry.CloudFoundryServiceCollectionExtensions.ConfigureCloudFoundryServices``1(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.Extensions.Configuration.IConfiguration,System.String)
  id: ConfigureCloudFoundryServices``1(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.Extensions.Configuration.IConfiguration,System.String)
  isExtensionMethod: true
  parent: Steeltoe.Extensions.Configuration.CloudFoundry.CloudFoundryServiceCollectionExtensions
  langs:
  - csharp
  - vb
  name: ConfigureCloudFoundryServices<TOption>(IServiceCollection, IConfiguration, String)
  nameWithType: CloudFoundryServiceCollectionExtensions.ConfigureCloudFoundryServices<TOption>(IServiceCollection, IConfiguration, String)
  fullName: Steeltoe.Extensions.Configuration.CloudFoundry.CloudFoundryServiceCollectionExtensions.ConfigureCloudFoundryServices<TOption>(Microsoft.Extensions.DependencyInjection.IServiceCollection, Microsoft.Extensions.Configuration.IConfiguration, System.String)
  type: Method
  source:
    remote:
      path: src/Configuration/src/CloudFoundryCore/CloudFoundryServiceCollectionExtensions.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: ConfigureCloudFoundryServices
    path: ../Steeltoe/src/Configuration/src/CloudFoundryCore/CloudFoundryServiceCollectionExtensions.cs
    startLine: 92
  assemblies:
  - Steeltoe.Extensions.Configuration.CloudFoundryCore
  namespace: Steeltoe.Extensions.Configuration.CloudFoundry
  summary: "\nFind all of the Cloud Foundry services with the <code data-dev-comment-type=\"paramref\" class=\"paramref\">serviceLabel</code> in VCAP_SERVICES and bind the configuration data from\nthe provided <code data-dev-comment-type=\"paramref\" class=\"paramref\">config</code> into the options type and add them all to the provided service container as a configured named TOptions.\nThe name of each TOption will be the the name of the Cloud Foundry service binding. You can then inject all the options using the normal Options pattern.\n"
  example: []
  syntax:
    content: >-
      public static IServiceCollection ConfigureCloudFoundryServices<TOption>(this IServiceCollection services, IConfiguration config, string serviceLabel)

          where TOption : CloudFoundryServicesOptions
    parameters:
    - id: services
      type: Microsoft.Extensions.DependencyInjection.IServiceCollection
      description: the service container
    - id: config
      type: Microsoft.Extensions.Configuration.IConfiguration
      description: the applications configuration
    - id: serviceLabel
      type: System.String
      description: the Cloud Foundry service label to use to bind to the options type
    typeParameters:
    - id: TOption
      description: the options type
    return:
      type: Microsoft.Extensions.DependencyInjection.IServiceCollection
      description: serice container
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ConfigureCloudFoundryServices(Of TOption As CloudFoundryServicesOptions)(services As IServiceCollection, config As IConfiguration, serviceLabel As String) As IServiceCollection
  overload: Steeltoe.Extensions.Configuration.CloudFoundry.CloudFoundryServiceCollectionExtensions.ConfigureCloudFoundryServices*
  nameWithType.vb: CloudFoundryServiceCollectionExtensions.ConfigureCloudFoundryServices(Of TOption)(IServiceCollection, IConfiguration, String)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Steeltoe.Extensions.Configuration.CloudFoundry.CloudFoundryServiceCollectionExtensions.ConfigureCloudFoundryServices(Of TOption)(Microsoft.Extensions.DependencyInjection.IServiceCollection, Microsoft.Extensions.Configuration.IConfiguration, System.String)
  name.vb: ConfigureCloudFoundryServices(Of TOption)(IServiceCollection, IConfiguration, String)
references:
- uid: Steeltoe.Extensions.Configuration.CloudFoundry
  commentId: N:Steeltoe.Extensions.Configuration.CloudFoundry
  name: Steeltoe.Extensions.Configuration.CloudFoundry
  nameWithType: Steeltoe.Extensions.Configuration.CloudFoundry
  fullName: Steeltoe.Extensions.Configuration.CloudFoundry
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Steeltoe.Extensions.Configuration.CloudFoundry.CloudFoundryApplicationOptions
  commentId: T:Steeltoe.Extensions.Configuration.CloudFoundry.CloudFoundryApplicationOptions
  name: CloudFoundryApplicationOptions
  nameWithType: CloudFoundryApplicationOptions
  fullName: Steeltoe.Extensions.Configuration.CloudFoundry.CloudFoundryApplicationOptions
- uid: Steeltoe.Extensions.Configuration.CloudFoundry.CloudFoundryServicesOptions
  commentId: T:Steeltoe.Extensions.Configuration.CloudFoundry.CloudFoundryServicesOptions
  name: CloudFoundryServicesOptions
  nameWithType: CloudFoundryServicesOptions
  fullName: Steeltoe.Extensions.Configuration.CloudFoundry.CloudFoundryServicesOptions
- uid: Steeltoe.Extensions.Configuration.CloudFoundry.CloudFoundryServiceCollectionExtensions.ConfigureCloudFoundryOptions*
  commentId: Overload:Steeltoe.Extensions.Configuration.CloudFoundry.CloudFoundryServiceCollectionExtensions.ConfigureCloudFoundryOptions
  name: ConfigureCloudFoundryOptions
  nameWithType: CloudFoundryServiceCollectionExtensions.ConfigureCloudFoundryOptions
  fullName: Steeltoe.Extensions.Configuration.CloudFoundry.CloudFoundryServiceCollectionExtensions.ConfigureCloudFoundryOptions
- uid: Microsoft.Extensions.DependencyInjection.IServiceCollection
  commentId: T:Microsoft.Extensions.DependencyInjection.IServiceCollection
  parent: Microsoft.Extensions.DependencyInjection
  isExternal: true
  name: IServiceCollection
  nameWithType: IServiceCollection
  fullName: Microsoft.Extensions.DependencyInjection.IServiceCollection
- uid: Microsoft.Extensions.Configuration.IConfiguration
  commentId: T:Microsoft.Extensions.Configuration.IConfiguration
  parent: Microsoft.Extensions.Configuration
  isExternal: true
  name: IConfiguration
  nameWithType: IConfiguration
  fullName: Microsoft.Extensions.Configuration.IConfiguration
- uid: Microsoft.Extensions.DependencyInjection
  commentId: N:Microsoft.Extensions.DependencyInjection
  name: Microsoft.Extensions.DependencyInjection
  nameWithType: Microsoft.Extensions.DependencyInjection
  fullName: Microsoft.Extensions.DependencyInjection
- uid: Microsoft.Extensions.Configuration
  commentId: N:Microsoft.Extensions.Configuration
  isExternal: true
  name: Microsoft.Extensions.Configuration
  nameWithType: Microsoft.Extensions.Configuration
  fullName: Microsoft.Extensions.Configuration
- uid: Steeltoe.Extensions.Configuration.CloudFoundry.CloudFoundryServiceCollectionExtensions.ConfigureCloudFoundryService*
  commentId: Overload:Steeltoe.Extensions.Configuration.CloudFoundry.CloudFoundryServiceCollectionExtensions.ConfigureCloudFoundryService
  name: ConfigureCloudFoundryService
  nameWithType: CloudFoundryServiceCollectionExtensions.ConfigureCloudFoundryService
  fullName: Steeltoe.Extensions.Configuration.CloudFoundry.CloudFoundryServiceCollectionExtensions.ConfigureCloudFoundryService
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Steeltoe.Extensions.Configuration.CloudFoundry.CloudFoundryServiceCollectionExtensions.ConfigureCloudFoundryServices*
  commentId: Overload:Steeltoe.Extensions.Configuration.CloudFoundry.CloudFoundryServiceCollectionExtensions.ConfigureCloudFoundryServices
  name: ConfigureCloudFoundryServices
  nameWithType: CloudFoundryServiceCollectionExtensions.ConfigureCloudFoundryServices
  fullName: Steeltoe.Extensions.Configuration.CloudFoundry.CloudFoundryServiceCollectionExtensions.ConfigureCloudFoundryServices
