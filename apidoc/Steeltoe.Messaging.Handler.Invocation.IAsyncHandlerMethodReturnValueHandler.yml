### YamlMime:ManagedReference
items:
- uid: Steeltoe.Messaging.Handler.Invocation.IAsyncHandlerMethodReturnValueHandler
  commentId: T:Steeltoe.Messaging.Handler.Invocation.IAsyncHandlerMethodReturnValueHandler
  id: IAsyncHandlerMethodReturnValueHandler
  parent: Steeltoe.Messaging.Handler.Invocation
  children:
  - Steeltoe.Messaging.Handler.Invocation.IAsyncHandlerMethodReturnValueHandler.IsAsyncReturnValue(System.Object,System.Reflection.ParameterInfo)
  langs:
  - csharp
  - vb
  name: IAsyncHandlerMethodReturnValueHandler
  nameWithType: IAsyncHandlerMethodReturnValueHandler
  fullName: Steeltoe.Messaging.Handler.Invocation.IAsyncHandlerMethodReturnValueHandler
  type: Interface
  source:
    remote:
      path: src/Messaging/src/Abstractions/Handler/Invocation/IAsyncHandlerMethodReturnValueHandler.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: IAsyncHandlerMethodReturnValueHandler
    path: ../Steeltoe/src/Messaging/src/Abstractions/Handler/Invocation/IAsyncHandlerMethodReturnValueHandler.cs
    startLine: 11
  assemblies:
  - Steeltoe.Messaging.Abstractions
  namespace: Steeltoe.Messaging.Handler.Invocation
  summary: "\nAsync return value handler\n"
  example: []
  syntax:
    content: 'public interface IAsyncHandlerMethodReturnValueHandler : IHandlerMethodReturnValueHandler'
    content.vb: >-
      Public Interface IAsyncHandlerMethodReturnValueHandler

          Inherits IHandlerMethodReturnValueHandler
  inheritedMembers:
  - Steeltoe.Messaging.Handler.Invocation.IHandlerMethodReturnValueHandler.SupportsReturnType(System.Reflection.ParameterInfo)
  - Steeltoe.Messaging.Handler.Invocation.IHandlerMethodReturnValueHandler.HandleReturnValue(System.Object,System.Reflection.ParameterInfo,Steeltoe.Messaging.IMessage)
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Steeltoe.Messaging.Handler.Invocation.IAsyncHandlerMethodReturnValueHandler.IsAsyncReturnValue(System.Object,System.Reflection.ParameterInfo)
  commentId: M:Steeltoe.Messaging.Handler.Invocation.IAsyncHandlerMethodReturnValueHandler.IsAsyncReturnValue(System.Object,System.Reflection.ParameterInfo)
  id: IsAsyncReturnValue(System.Object,System.Reflection.ParameterInfo)
  parent: Steeltoe.Messaging.Handler.Invocation.IAsyncHandlerMethodReturnValueHandler
  langs:
  - csharp
  - vb
  name: IsAsyncReturnValue(Object, ParameterInfo)
  nameWithType: IAsyncHandlerMethodReturnValueHandler.IsAsyncReturnValue(Object, ParameterInfo)
  fullName: Steeltoe.Messaging.Handler.Invocation.IAsyncHandlerMethodReturnValueHandler.IsAsyncReturnValue(System.Object, System.Reflection.ParameterInfo)
  type: Method
  source:
    remote:
      path: src/Messaging/src/Abstractions/Handler/Invocation/IAsyncHandlerMethodReturnValueHandler.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: IsAsyncReturnValue
    path: ../Steeltoe/src/Messaging/src/Abstractions/Handler/Invocation/IAsyncHandlerMethodReturnValueHandler.cs
    startLine: 19
  assemblies:
  - Steeltoe.Messaging.Abstractions
  namespace: Steeltoe.Messaging.Handler.Invocation
  summary: "\nCheck if async return value\n"
  example: []
  syntax:
    content: bool IsAsyncReturnValue(object returnValue, ParameterInfo parameterInfo)
    parameters:
    - id: returnValue
      type: System.Object
      description: the value
    - id: parameterInfo
      type: System.Reflection.ParameterInfo
      description: the return type info
    return:
      type: System.Boolean
      description: true if the return type represents a async value
    content.vb: Function IsAsyncReturnValue(returnValue As Object, parameterInfo As ParameterInfo) As Boolean
  overload: Steeltoe.Messaging.Handler.Invocation.IAsyncHandlerMethodReturnValueHandler.IsAsyncReturnValue*
references:
- uid: Steeltoe.Messaging.Handler.Invocation
  commentId: N:Steeltoe.Messaging.Handler.Invocation
  name: Steeltoe.Messaging.Handler.Invocation
  nameWithType: Steeltoe.Messaging.Handler.Invocation
  fullName: Steeltoe.Messaging.Handler.Invocation
- uid: Steeltoe.Messaging.Handler.Invocation.IHandlerMethodReturnValueHandler.SupportsReturnType(System.Reflection.ParameterInfo)
  commentId: M:Steeltoe.Messaging.Handler.Invocation.IHandlerMethodReturnValueHandler.SupportsReturnType(System.Reflection.ParameterInfo)
  parent: Steeltoe.Messaging.Handler.Invocation.IHandlerMethodReturnValueHandler
  isExternal: true
  name: SupportsReturnType(ParameterInfo)
  nameWithType: IHandlerMethodReturnValueHandler.SupportsReturnType(ParameterInfo)
  fullName: Steeltoe.Messaging.Handler.Invocation.IHandlerMethodReturnValueHandler.SupportsReturnType(System.Reflection.ParameterInfo)
  spec.csharp:
  - uid: Steeltoe.Messaging.Handler.Invocation.IHandlerMethodReturnValueHandler.SupportsReturnType(System.Reflection.ParameterInfo)
    name: SupportsReturnType
    nameWithType: IHandlerMethodReturnValueHandler.SupportsReturnType
    fullName: Steeltoe.Messaging.Handler.Invocation.IHandlerMethodReturnValueHandler.SupportsReturnType
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Reflection.ParameterInfo
    name: ParameterInfo
    nameWithType: ParameterInfo
    fullName: System.Reflection.ParameterInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Handler.Invocation.IHandlerMethodReturnValueHandler.SupportsReturnType(System.Reflection.ParameterInfo)
    name: SupportsReturnType
    nameWithType: IHandlerMethodReturnValueHandler.SupportsReturnType
    fullName: Steeltoe.Messaging.Handler.Invocation.IHandlerMethodReturnValueHandler.SupportsReturnType
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Reflection.ParameterInfo
    name: ParameterInfo
    nameWithType: ParameterInfo
    fullName: System.Reflection.ParameterInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Handler.Invocation.IHandlerMethodReturnValueHandler.HandleReturnValue(System.Object,System.Reflection.ParameterInfo,Steeltoe.Messaging.IMessage)
  commentId: M:Steeltoe.Messaging.Handler.Invocation.IHandlerMethodReturnValueHandler.HandleReturnValue(System.Object,System.Reflection.ParameterInfo,Steeltoe.Messaging.IMessage)
  parent: Steeltoe.Messaging.Handler.Invocation.IHandlerMethodReturnValueHandler
  isExternal: true
  name: HandleReturnValue(Object, ParameterInfo, IMessage)
  nameWithType: IHandlerMethodReturnValueHandler.HandleReturnValue(Object, ParameterInfo, IMessage)
  fullName: Steeltoe.Messaging.Handler.Invocation.IHandlerMethodReturnValueHandler.HandleReturnValue(System.Object, System.Reflection.ParameterInfo, Steeltoe.Messaging.IMessage)
  spec.csharp:
  - uid: Steeltoe.Messaging.Handler.Invocation.IHandlerMethodReturnValueHandler.HandleReturnValue(System.Object,System.Reflection.ParameterInfo,Steeltoe.Messaging.IMessage)
    name: HandleReturnValue
    nameWithType: IHandlerMethodReturnValueHandler.HandleReturnValue
    fullName: Steeltoe.Messaging.Handler.Invocation.IHandlerMethodReturnValueHandler.HandleReturnValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Reflection.ParameterInfo
    name: ParameterInfo
    nameWithType: ParameterInfo
    fullName: System.Reflection.ParameterInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Messaging.Handler.Invocation.IHandlerMethodReturnValueHandler.HandleReturnValue(System.Object,System.Reflection.ParameterInfo,Steeltoe.Messaging.IMessage)
    name: HandleReturnValue
    nameWithType: IHandlerMethodReturnValueHandler.HandleReturnValue
    fullName: Steeltoe.Messaging.Handler.Invocation.IHandlerMethodReturnValueHandler.HandleReturnValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Reflection.ParameterInfo
    name: ParameterInfo
    nameWithType: ParameterInfo
    fullName: System.Reflection.ParameterInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.Handler.Invocation.IHandlerMethodReturnValueHandler
  commentId: T:Steeltoe.Messaging.Handler.Invocation.IHandlerMethodReturnValueHandler
  parent: Steeltoe.Messaging.Handler.Invocation
  name: IHandlerMethodReturnValueHandler
  nameWithType: IHandlerMethodReturnValueHandler
  fullName: Steeltoe.Messaging.Handler.Invocation.IHandlerMethodReturnValueHandler
- uid: Steeltoe.Messaging.Handler.Invocation.IAsyncHandlerMethodReturnValueHandler.IsAsyncReturnValue*
  commentId: Overload:Steeltoe.Messaging.Handler.Invocation.IAsyncHandlerMethodReturnValueHandler.IsAsyncReturnValue
  name: IsAsyncReturnValue
  nameWithType: IAsyncHandlerMethodReturnValueHandler.IsAsyncReturnValue
  fullName: Steeltoe.Messaging.Handler.Invocation.IAsyncHandlerMethodReturnValueHandler.IsAsyncReturnValue
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Reflection.ParameterInfo
  commentId: T:System.Reflection.ParameterInfo
  parent: System.Reflection
  isExternal: true
  name: ParameterInfo
  nameWithType: ParameterInfo
  fullName: System.Reflection.ParameterInfo
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Reflection
  commentId: N:System.Reflection
  isExternal: true
  name: System.Reflection
  nameWithType: System.Reflection
  fullName: System.Reflection
