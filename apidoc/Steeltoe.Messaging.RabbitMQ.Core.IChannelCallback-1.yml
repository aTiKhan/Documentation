### YamlMime:ManagedReference
items:
- uid: Steeltoe.Messaging.RabbitMQ.Core.IChannelCallback`1
  commentId: T:Steeltoe.Messaging.RabbitMQ.Core.IChannelCallback`1
  id: IChannelCallback`1
  parent: Steeltoe.Messaging.RabbitMQ.Core
  children:
  - Steeltoe.Messaging.RabbitMQ.Core.IChannelCallback`1.DoInRabbit(RabbitMQ.Client.IModel)
  langs:
  - csharp
  - vb
  name: IChannelCallback<T>
  nameWithType: IChannelCallback<T>
  fullName: Steeltoe.Messaging.RabbitMQ.Core.IChannelCallback<T>
  type: Interface
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Core/IChannelCallback.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: IChannelCallback
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Core/IChannelCallback.cs
    startLine: 8
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Core
  syntax:
    content: public interface IChannelCallback<out T>
    typeParameters:
    - id: T
    content.vb: Public Interface IChannelCallback(Of Out T)
  nameWithType.vb: IChannelCallback(Of T)
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
  fullName.vb: Steeltoe.Messaging.RabbitMQ.Core.IChannelCallback(Of T)
  name.vb: IChannelCallback(Of T)
- uid: Steeltoe.Messaging.RabbitMQ.Core.IChannelCallback`1.DoInRabbit(RabbitMQ.Client.IModel)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Core.IChannelCallback`1.DoInRabbit(RabbitMQ.Client.IModel)
  id: DoInRabbit(RabbitMQ.Client.IModel)
  parent: Steeltoe.Messaging.RabbitMQ.Core.IChannelCallback`1
  langs:
  - csharp
  - vb
  name: DoInRabbit(IModel)
  nameWithType: IChannelCallback<T>.DoInRabbit(IModel)
  fullName: Steeltoe.Messaging.RabbitMQ.Core.IChannelCallback<T>.DoInRabbit(RabbitMQ.Client.IModel)
  type: Method
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Core/IChannelCallback.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: DoInRabbit
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Core/IChannelCallback.cs
    startLine: 10
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Core
  syntax:
    content: T DoInRabbit(IModel channel)
    parameters:
    - id: channel
      type: RabbitMQ.Client.IModel
    return:
      type: '{T}'
    content.vb: Function DoInRabbit(channel As IModel) As T
  overload: Steeltoe.Messaging.RabbitMQ.Core.IChannelCallback`1.DoInRabbit*
  nameWithType.vb: IChannelCallback(Of T).DoInRabbit(IModel)
  fullName.vb: Steeltoe.Messaging.RabbitMQ.Core.IChannelCallback(Of T).DoInRabbit(RabbitMQ.Client.IModel)
references:
- uid: Steeltoe.Messaging.RabbitMQ.Core
  commentId: N:Steeltoe.Messaging.RabbitMQ.Core
  name: Steeltoe.Messaging.RabbitMQ.Core
  nameWithType: Steeltoe.Messaging.RabbitMQ.Core
  fullName: Steeltoe.Messaging.RabbitMQ.Core
- uid: Steeltoe.Messaging.RabbitMQ.Core.IChannelCallback`1.DoInRabbit*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Core.IChannelCallback`1.DoInRabbit
  name: DoInRabbit
  nameWithType: IChannelCallback<T>.DoInRabbit
  fullName: Steeltoe.Messaging.RabbitMQ.Core.IChannelCallback<T>.DoInRabbit
  nameWithType.vb: IChannelCallback(Of T).DoInRabbit
  fullName.vb: Steeltoe.Messaging.RabbitMQ.Core.IChannelCallback(Of T).DoInRabbit
- uid: RabbitMQ.Client.IModel
  commentId: T:RabbitMQ.Client.IModel
  parent: RabbitMQ.Client
  isExternal: true
  name: IModel
  nameWithType: IModel
  fullName: RabbitMQ.Client.IModel
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: RabbitMQ.Client
  commentId: N:RabbitMQ.Client
  isExternal: true
  name: RabbitMQ.Client
  nameWithType: RabbitMQ.Client
  fullName: RabbitMQ.Client
- uid: T
  name: T
  nameWithType: T
  fullName: T
