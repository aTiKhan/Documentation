### YamlMime:ManagedReference
items:
- uid: Steeltoe.Common.Transaction.ITransactionOperations
  commentId: T:Steeltoe.Common.Transaction.ITransactionOperations
  id: ITransactionOperations
  parent: Steeltoe.Common.Transaction
  children:
  - Steeltoe.Common.Transaction.ITransactionOperations.Execute``1(System.Func{Steeltoe.Common.Transaction.ITransactionStatus,``0})
  - Steeltoe.Common.Transaction.ITransactionOperations.ExecuteWithoutResult(System.Action{Steeltoe.Common.Transaction.ITransactionStatus})
  langs:
  - csharp
  - vb
  name: ITransactionOperations
  nameWithType: ITransactionOperations
  fullName: Steeltoe.Common.Transaction.ITransactionOperations
  type: Interface
  source:
    remote:
      path: src/Common/src/Abstractions/Transaction/ITransactionOperations.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: ITransactionOperations
    path: ../Steeltoe/src/Common/src/Abstractions/Transaction/ITransactionOperations.cs
    startLine: 8
  assemblies:
  - Steeltoe.Common.Abstractions
  namespace: Steeltoe.Common.Transaction
  syntax:
    content: public interface ITransactionOperations
    content.vb: Public Interface ITransactionOperations
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Steeltoe.Common.Transaction.ITransactionOperations.Execute``1(System.Func{Steeltoe.Common.Transaction.ITransactionStatus,``0})
  commentId: M:Steeltoe.Common.Transaction.ITransactionOperations.Execute``1(System.Func{Steeltoe.Common.Transaction.ITransactionStatus,``0})
  id: Execute``1(System.Func{Steeltoe.Common.Transaction.ITransactionStatus,``0})
  parent: Steeltoe.Common.Transaction.ITransactionOperations
  langs:
  - csharp
  - vb
  name: Execute<T>(Func<ITransactionStatus, T>)
  nameWithType: ITransactionOperations.Execute<T>(Func<ITransactionStatus, T>)
  fullName: Steeltoe.Common.Transaction.ITransactionOperations.Execute<T>(System.Func<Steeltoe.Common.Transaction.ITransactionStatus, T>)
  type: Method
  source:
    remote:
      path: src/Common/src/Abstractions/Transaction/ITransactionOperations.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Execute
    path: ../Steeltoe/src/Common/src/Abstractions/Transaction/ITransactionOperations.cs
    startLine: 10
  assemblies:
  - Steeltoe.Common.Abstractions
  namespace: Steeltoe.Common.Transaction
  syntax:
    content: T Execute<T>(Func<ITransactionStatus, T> action)
    parameters:
    - id: action
      type: System.Func{Steeltoe.Common.Transaction.ITransactionStatus,{T}}
    typeParameters:
    - id: T
    return:
      type: '{T}'
    content.vb: Function Execute(Of T)(action As Func(Of ITransactionStatus, T)) As T
  overload: Steeltoe.Common.Transaction.ITransactionOperations.Execute*
  nameWithType.vb: ITransactionOperations.Execute(Of T)(Func(Of ITransactionStatus, T))
  fullName.vb: Steeltoe.Common.Transaction.ITransactionOperations.Execute(Of T)(System.Func(Of Steeltoe.Common.Transaction.ITransactionStatus, T))
  name.vb: Execute(Of T)(Func(Of ITransactionStatus, T))
- uid: Steeltoe.Common.Transaction.ITransactionOperations.ExecuteWithoutResult(System.Action{Steeltoe.Common.Transaction.ITransactionStatus})
  commentId: M:Steeltoe.Common.Transaction.ITransactionOperations.ExecuteWithoutResult(System.Action{Steeltoe.Common.Transaction.ITransactionStatus})
  id: ExecuteWithoutResult(System.Action{Steeltoe.Common.Transaction.ITransactionStatus})
  parent: Steeltoe.Common.Transaction.ITransactionOperations
  langs:
  - csharp
  - vb
  name: ExecuteWithoutResult(Action<ITransactionStatus>)
  nameWithType: ITransactionOperations.ExecuteWithoutResult(Action<ITransactionStatus>)
  fullName: Steeltoe.Common.Transaction.ITransactionOperations.ExecuteWithoutResult(System.Action<Steeltoe.Common.Transaction.ITransactionStatus>)
  type: Method
  source:
    remote:
      path: src/Common/src/Abstractions/Transaction/ITransactionOperations.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: ExecuteWithoutResult
    path: ../Steeltoe/src/Common/src/Abstractions/Transaction/ITransactionOperations.cs
    startLine: 12
  assemblies:
  - Steeltoe.Common.Abstractions
  namespace: Steeltoe.Common.Transaction
  syntax:
    content: void ExecuteWithoutResult(Action<ITransactionStatus> action)
    parameters:
    - id: action
      type: System.Action{Steeltoe.Common.Transaction.ITransactionStatus}
    content.vb: Sub ExecuteWithoutResult(action As Action(Of ITransactionStatus))
  overload: Steeltoe.Common.Transaction.ITransactionOperations.ExecuteWithoutResult*
  nameWithType.vb: ITransactionOperations.ExecuteWithoutResult(Action(Of ITransactionStatus))
  fullName.vb: Steeltoe.Common.Transaction.ITransactionOperations.ExecuteWithoutResult(System.Action(Of Steeltoe.Common.Transaction.ITransactionStatus))
  name.vb: ExecuteWithoutResult(Action(Of ITransactionStatus))
references:
- uid: Steeltoe.Common.Transaction
  commentId: N:Steeltoe.Common.Transaction
  name: Steeltoe.Common.Transaction
  nameWithType: Steeltoe.Common.Transaction
  fullName: Steeltoe.Common.Transaction
- uid: Steeltoe.Common.Transaction.ITransactionOperations.Execute*
  commentId: Overload:Steeltoe.Common.Transaction.ITransactionOperations.Execute
  name: Execute
  nameWithType: ITransactionOperations.Execute
  fullName: Steeltoe.Common.Transaction.ITransactionOperations.Execute
- uid: System.Func{Steeltoe.Common.Transaction.ITransactionStatus,{T}}
  commentId: T:System.Func{Steeltoe.Common.Transaction.ITransactionStatus,``0}
  parent: System
  definition: System.Func`2
  name: Func<ITransactionStatus, T>
  nameWithType: Func<ITransactionStatus, T>
  fullName: System.Func<Steeltoe.Common.Transaction.ITransactionStatus, T>
  nameWithType.vb: Func(Of ITransactionStatus, T)
  fullName.vb: System.Func(Of Steeltoe.Common.Transaction.ITransactionStatus, T)
  name.vb: Func(Of ITransactionStatus, T)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Steeltoe.Common.Transaction.ITransactionStatus
    name: ITransactionStatus
    nameWithType: ITransactionStatus
    fullName: Steeltoe.Common.Transaction.ITransactionStatus
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Steeltoe.Common.Transaction.ITransactionStatus
    name: ITransactionStatus
    nameWithType: ITransactionStatus
    fullName: Steeltoe.Common.Transaction.ITransactionStatus
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: System.Func`2
  commentId: T:System.Func`2
  isExternal: true
  name: Func<T, TResult>
  nameWithType: Func<T, TResult>
  fullName: System.Func<T, TResult>
  nameWithType.vb: Func(Of T, TResult)
  fullName.vb: System.Func(Of T, TResult)
  name.vb: Func(Of T, TResult)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: Steeltoe.Common.Transaction.ITransactionOperations.ExecuteWithoutResult*
  commentId: Overload:Steeltoe.Common.Transaction.ITransactionOperations.ExecuteWithoutResult
  name: ExecuteWithoutResult
  nameWithType: ITransactionOperations.ExecuteWithoutResult
  fullName: Steeltoe.Common.Transaction.ITransactionOperations.ExecuteWithoutResult
- uid: System.Action{Steeltoe.Common.Transaction.ITransactionStatus}
  commentId: T:System.Action{Steeltoe.Common.Transaction.ITransactionStatus}
  parent: System
  definition: System.Action`1
  name: Action<ITransactionStatus>
  nameWithType: Action<ITransactionStatus>
  fullName: System.Action<Steeltoe.Common.Transaction.ITransactionStatus>
  nameWithType.vb: Action(Of ITransactionStatus)
  fullName.vb: System.Action(Of Steeltoe.Common.Transaction.ITransactionStatus)
  name.vb: Action(Of ITransactionStatus)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Steeltoe.Common.Transaction.ITransactionStatus
    name: ITransactionStatus
    nameWithType: ITransactionStatus
    fullName: Steeltoe.Common.Transaction.ITransactionStatus
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Steeltoe.Common.Transaction.ITransactionStatus
    name: ITransactionStatus
    nameWithType: ITransactionStatus
    fullName: Steeltoe.Common.Transaction.ITransactionStatus
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Action`1
  commentId: T:System.Action`1
  isExternal: true
  name: Action<T>
  nameWithType: Action<T>
  fullName: System.Action<T>
  nameWithType.vb: Action(Of T)
  fullName.vb: System.Action(Of T)
  name.vb: Action(Of T)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
