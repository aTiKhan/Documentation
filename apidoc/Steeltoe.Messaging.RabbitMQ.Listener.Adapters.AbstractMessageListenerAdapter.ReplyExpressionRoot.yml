### YamlMime:ManagedReference
items:
- uid: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.ReplyExpressionRoot
  commentId: T:Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.ReplyExpressionRoot
  id: AbstractMessageListenerAdapter.ReplyExpressionRoot
  parent: Steeltoe.Messaging.RabbitMQ.Listener.Adapters
  children:
  - Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.ReplyExpressionRoot.#ctor(Steeltoe.Messaging.IMessage,System.Object,System.Object)
  - Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.ReplyExpressionRoot.Request
  - Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.ReplyExpressionRoot.Result
  - Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.ReplyExpressionRoot.Source
  langs:
  - csharp
  - vb
  name: AbstractMessageListenerAdapter.ReplyExpressionRoot
  nameWithType: AbstractMessageListenerAdapter.ReplyExpressionRoot
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.ReplyExpressionRoot
  type: Class
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Listener/Adapters/AbstractMessageListenerAdapter.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: ReplyExpressionRoot
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Listener/Adapters/AbstractMessageListenerAdapter.cs
    startLine: 438
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Listener.Adapters
  syntax:
    content: protected class ReplyExpressionRoot
    content.vb: Protected Class ReplyExpressionRoot
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - protected
  - class
  modifiers.vb:
  - Protected
  - Class
- uid: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.ReplyExpressionRoot.#ctor(Steeltoe.Messaging.IMessage,System.Object,System.Object)
  commentId: M:Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.ReplyExpressionRoot.#ctor(Steeltoe.Messaging.IMessage,System.Object,System.Object)
  id: '#ctor(Steeltoe.Messaging.IMessage,System.Object,System.Object)'
  parent: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.ReplyExpressionRoot
  langs:
  - csharp
  - vb
  name: ReplyExpressionRoot(IMessage, Object, Object)
  nameWithType: AbstractMessageListenerAdapter.ReplyExpressionRoot.ReplyExpressionRoot(IMessage, Object, Object)
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.ReplyExpressionRoot.ReplyExpressionRoot(Steeltoe.Messaging.IMessage, System.Object, System.Object)
  type: Constructor
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Listener/Adapters/AbstractMessageListenerAdapter.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: .ctor
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Listener/Adapters/AbstractMessageListenerAdapter.cs
    startLine: 440
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Listener.Adapters
  syntax:
    content: public ReplyExpressionRoot(IMessage request, object source, object result)
    parameters:
    - id: request
      type: Steeltoe.Messaging.IMessage
    - id: source
      type: System.Object
    - id: result
      type: System.Object
    content.vb: Public Sub New(request As IMessage, source As Object, result As Object)
  overload: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.ReplyExpressionRoot.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.ReplyExpressionRoot.Request
  commentId: P:Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.ReplyExpressionRoot.Request
  id: Request
  parent: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.ReplyExpressionRoot
  langs:
  - csharp
  - vb
  name: Request
  nameWithType: AbstractMessageListenerAdapter.ReplyExpressionRoot.Request
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.ReplyExpressionRoot.Request
  type: Property
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Listener/Adapters/AbstractMessageListenerAdapter.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Request
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Listener/Adapters/AbstractMessageListenerAdapter.cs
    startLine: 447
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Listener.Adapters
  syntax:
    content: public IMessage Request { get; }
    parameters: []
    return:
      type: Steeltoe.Messaging.IMessage
    content.vb: Public ReadOnly Property Request As IMessage
  overload: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.ReplyExpressionRoot.Request*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.ReplyExpressionRoot.Source
  commentId: P:Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.ReplyExpressionRoot.Source
  id: Source
  parent: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.ReplyExpressionRoot
  langs:
  - csharp
  - vb
  name: Source
  nameWithType: AbstractMessageListenerAdapter.ReplyExpressionRoot.Source
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.ReplyExpressionRoot.Source
  type: Property
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Listener/Adapters/AbstractMessageListenerAdapter.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Source
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Listener/Adapters/AbstractMessageListenerAdapter.cs
    startLine: 449
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Listener.Adapters
  syntax:
    content: public object Source { get; }
    parameters: []
    return:
      type: System.Object
    content.vb: Public ReadOnly Property Source As Object
  overload: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.ReplyExpressionRoot.Source*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.ReplyExpressionRoot.Result
  commentId: P:Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.ReplyExpressionRoot.Result
  id: Result
  parent: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.ReplyExpressionRoot
  langs:
  - csharp
  - vb
  name: Result
  nameWithType: AbstractMessageListenerAdapter.ReplyExpressionRoot.Result
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.ReplyExpressionRoot.Result
  type: Property
  source:
    remote:
      path: src/Messaging/src/RabbitMQ/Listener/Adapters/AbstractMessageListenerAdapter.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Result
    path: ../Steeltoe/src/Messaging/src/RabbitMQ/Listener/Adapters/AbstractMessageListenerAdapter.cs
    startLine: 451
  assemblies:
  - Steeltoe.Messaging.RabbitMQ
  namespace: Steeltoe.Messaging.RabbitMQ.Listener.Adapters
  syntax:
    content: public object Result { get; }
    parameters: []
    return:
      type: System.Object
    content.vb: Public ReadOnly Property Result As Object
  overload: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.ReplyExpressionRoot.Result*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: Steeltoe.Messaging.RabbitMQ.Listener.Adapters
  commentId: N:Steeltoe.Messaging.RabbitMQ.Listener.Adapters
  name: Steeltoe.Messaging.RabbitMQ.Listener.Adapters
  nameWithType: Steeltoe.Messaging.RabbitMQ.Listener.Adapters
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.Adapters
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.ReplyExpressionRoot.#ctor*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.ReplyExpressionRoot.#ctor
  name: ReplyExpressionRoot
  nameWithType: AbstractMessageListenerAdapter.ReplyExpressionRoot.ReplyExpressionRoot
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.ReplyExpressionRoot.ReplyExpressionRoot
- uid: Steeltoe.Messaging.IMessage
  commentId: T:Steeltoe.Messaging.IMessage
  parent: Steeltoe.Messaging
  name: IMessage
  nameWithType: IMessage
  fullName: Steeltoe.Messaging.IMessage
- uid: Steeltoe.Messaging
  commentId: N:Steeltoe.Messaging
  name: Steeltoe.Messaging
  nameWithType: Steeltoe.Messaging
  fullName: Steeltoe.Messaging
- uid: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.ReplyExpressionRoot.Request*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.ReplyExpressionRoot.Request
  name: Request
  nameWithType: AbstractMessageListenerAdapter.ReplyExpressionRoot.Request
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.ReplyExpressionRoot.Request
- uid: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.ReplyExpressionRoot.Source*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.ReplyExpressionRoot.Source
  name: Source
  nameWithType: AbstractMessageListenerAdapter.ReplyExpressionRoot.Source
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.ReplyExpressionRoot.Source
- uid: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.ReplyExpressionRoot.Result*
  commentId: Overload:Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.ReplyExpressionRoot.Result
  name: Result
  nameWithType: AbstractMessageListenerAdapter.ReplyExpressionRoot.Result
  fullName: Steeltoe.Messaging.RabbitMQ.Listener.Adapters.AbstractMessageListenerAdapter.ReplyExpressionRoot.Result
