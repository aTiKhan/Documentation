### YamlMime:ManagedReference
items:
- uid: Steeltoe.Common.Converter.IConverter`2
  commentId: T:Steeltoe.Common.Converter.IConverter`2
  id: IConverter`2
  parent: Steeltoe.Common.Converter
  children:
  - Steeltoe.Common.Converter.IConverter`2.Convert(`0)
  langs:
  - csharp
  - vb
  name: IConverter<S, T>
  nameWithType: IConverter<S, T>
  fullName: Steeltoe.Common.Converter.IConverter<S, T>
  type: Interface
  source:
    remote:
      path: src/Common/src/Abstractions/Converter/IConverter.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: IConverter
    path: ../Steeltoe/src/Common/src/Abstractions/Converter/IConverter.cs
    startLine: 11
  assemblies:
  - Steeltoe.Common.Abstractions
  namespace: Steeltoe.Common.Converter
  summary: "\nA converter converts from a source object of type S to a target object of type T.\n"
  example: []
  syntax:
    content: public interface IConverter<in S, out T>
    typeParameters:
    - id: S
      description: type of the source object
    - id: T
      description: type of the target object
    content.vb: Public Interface IConverter(Of In S, Out T)
  nameWithType.vb: IConverter(Of S, T)
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
  fullName.vb: Steeltoe.Common.Converter.IConverter(Of S, T)
  name.vb: IConverter(Of S, T)
- uid: Steeltoe.Common.Converter.IConverter`2.Convert(`0)
  commentId: M:Steeltoe.Common.Converter.IConverter`2.Convert(`0)
  id: Convert(`0)
  parent: Steeltoe.Common.Converter.IConverter`2
  langs:
  - csharp
  - vb
  name: Convert(S)
  nameWithType: IConverter<S, T>.Convert(S)
  fullName: Steeltoe.Common.Converter.IConverter<S, T>.Convert(S)
  type: Method
  source:
    remote:
      path: src/Common/src/Abstractions/Converter/IConverter.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Convert
    path: ../Steeltoe/src/Common/src/Abstractions/Converter/IConverter.cs
    startLine: 18
  assemblies:
  - Steeltoe.Common.Abstractions
  namespace: Steeltoe.Common.Converter
  summary: "\nConvert the source object of type S to a target object of type T.\n"
  example: []
  syntax:
    content: T Convert(S source)
    parameters:
    - id: source
      type: '{S}'
      description: the source object to convert; can not be null
    return:
      type: '{T}'
      description: the converted object which must be type T
    content.vb: Function Convert(source As S) As T
  overload: Steeltoe.Common.Converter.IConverter`2.Convert*
  nameWithType.vb: IConverter(Of S, T).Convert(S)
  fullName.vb: Steeltoe.Common.Converter.IConverter(Of S, T).Convert(S)
references:
- uid: Steeltoe.Common.Converter
  commentId: N:Steeltoe.Common.Converter
  name: Steeltoe.Common.Converter
  nameWithType: Steeltoe.Common.Converter
  fullName: Steeltoe.Common.Converter
- uid: Steeltoe.Common.Converter.IConverter`2.Convert*
  commentId: Overload:Steeltoe.Common.Converter.IConverter`2.Convert
  name: Convert
  nameWithType: IConverter<S, T>.Convert
  fullName: Steeltoe.Common.Converter.IConverter<S, T>.Convert
  nameWithType.vb: IConverter(Of S, T).Convert
  fullName.vb: Steeltoe.Common.Converter.IConverter(Of S, T).Convert
- uid: '{S}'
  commentId: '!:S'
  definition: S
  name: S
  nameWithType: S
  fullName: S
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: S
  name: S
  nameWithType: S
  fullName: S
- uid: T
  name: T
  nameWithType: T
  fullName: T
