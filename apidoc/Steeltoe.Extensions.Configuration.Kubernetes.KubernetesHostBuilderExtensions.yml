### YamlMime:ManagedReference
items:
- uid: Steeltoe.Extensions.Configuration.Kubernetes.KubernetesHostBuilderExtensions
  commentId: T:Steeltoe.Extensions.Configuration.Kubernetes.KubernetesHostBuilderExtensions
  id: KubernetesHostBuilderExtensions
  parent: Steeltoe.Extensions.Configuration.Kubernetes
  children:
  - Steeltoe.Extensions.Configuration.Kubernetes.KubernetesHostBuilderExtensions.AddKubernetesConfiguration(Microsoft.AspNetCore.Hosting.IWebHostBuilder,System.Action{k8s.KubernetesClientConfiguration},Microsoft.Extensions.Logging.ILoggerFactory)
  - Steeltoe.Extensions.Configuration.Kubernetes.KubernetesHostBuilderExtensions.AddKubernetesConfiguration(Microsoft.Extensions.Hosting.IHostBuilder,System.Action{k8s.KubernetesClientConfiguration},Microsoft.Extensions.Logging.ILoggerFactory)
  langs:
  - csharp
  - vb
  name: KubernetesHostBuilderExtensions
  nameWithType: KubernetesHostBuilderExtensions
  fullName: Steeltoe.Extensions.Configuration.Kubernetes.KubernetesHostBuilderExtensions
  type: Class
  source:
    remote:
      path: src/Configuration/src/KubernetesCore/KubernetesHostBuilderExtensions.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: KubernetesHostBuilderExtensions
    path: ../Steeltoe/src/Configuration/src/KubernetesCore/KubernetesHostBuilderExtensions.cs
    startLine: 13
  assemblies:
  - Steeltoe.Extensions.Configuration.KubernetesCore
  namespace: Steeltoe.Extensions.Configuration.Kubernetes
  syntax:
    content: public static class KubernetesHostBuilderExtensions
    content.vb: Public Module KubernetesHostBuilderExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Steeltoe.Extensions.Configuration.Kubernetes.KubernetesHostBuilderExtensions.AddKubernetesConfiguration(Microsoft.AspNetCore.Hosting.IWebHostBuilder,System.Action{k8s.KubernetesClientConfiguration},Microsoft.Extensions.Logging.ILoggerFactory)
  commentId: M:Steeltoe.Extensions.Configuration.Kubernetes.KubernetesHostBuilderExtensions.AddKubernetesConfiguration(Microsoft.AspNetCore.Hosting.IWebHostBuilder,System.Action{k8s.KubernetesClientConfiguration},Microsoft.Extensions.Logging.ILoggerFactory)
  id: AddKubernetesConfiguration(Microsoft.AspNetCore.Hosting.IWebHostBuilder,System.Action{k8s.KubernetesClientConfiguration},Microsoft.Extensions.Logging.ILoggerFactory)
  isExtensionMethod: true
  parent: Steeltoe.Extensions.Configuration.Kubernetes.KubernetesHostBuilderExtensions
  langs:
  - csharp
  - vb
  name: AddKubernetesConfiguration(IWebHostBuilder, Action<KubernetesClientConfiguration>, ILoggerFactory)
  nameWithType: KubernetesHostBuilderExtensions.AddKubernetesConfiguration(IWebHostBuilder, Action<KubernetesClientConfiguration>, ILoggerFactory)
  fullName: Steeltoe.Extensions.Configuration.Kubernetes.KubernetesHostBuilderExtensions.AddKubernetesConfiguration(Microsoft.AspNetCore.Hosting.IWebHostBuilder, System.Action<k8s.KubernetesClientConfiguration>, Microsoft.Extensions.Logging.ILoggerFactory)
  type: Method
  source:
    remote:
      path: src/Configuration/src/KubernetesCore/KubernetesHostBuilderExtensions.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: AddKubernetesConfiguration
    path: ../Steeltoe/src/Configuration/src/KubernetesCore/KubernetesHostBuilderExtensions.cs
    startLine: 21
  assemblies:
  - Steeltoe.Extensions.Configuration.KubernetesCore
  namespace: Steeltoe.Extensions.Configuration.Kubernetes
  summary: "\nAdd Kubernetes Configuration Providers for configmaps and secrets\n"
  example: []
  syntax:
    content: public static IWebHostBuilder AddKubernetesConfiguration(this IWebHostBuilder hostBuilder, Action<KubernetesClientConfiguration> kubernetesClientConfiguration = null, ILoggerFactory loggerFactory = null)
    parameters:
    - id: hostBuilder
      type: Microsoft.AspNetCore.Hosting.IWebHostBuilder
      description: Your HostBuilder
    - id: kubernetesClientConfiguration
      type: System.Action{k8s.KubernetesClientConfiguration}
      description: Customize the <xref href="k8s.KubernetesClientConfiguration" data-throw-if-not-resolved="false"></xref>
    - id: loggerFactory
      type: Microsoft.Extensions.Logging.ILoggerFactory
      description: <xref href="Microsoft.Extensions.Logging.ILoggerFactory" data-throw-if-not-resolved="false"></xref>
    return:
      type: Microsoft.AspNetCore.Hosting.IWebHostBuilder
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function AddKubernetesConfiguration(hostBuilder As IWebHostBuilder, kubernetesClientConfiguration As Action(Of KubernetesClientConfiguration) = Nothing, loggerFactory As ILoggerFactory = Nothing) As IWebHostBuilder
  overload: Steeltoe.Extensions.Configuration.Kubernetes.KubernetesHostBuilderExtensions.AddKubernetesConfiguration*
  nameWithType.vb: KubernetesHostBuilderExtensions.AddKubernetesConfiguration(IWebHostBuilder, Action(Of KubernetesClientConfiguration), ILoggerFactory)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Steeltoe.Extensions.Configuration.Kubernetes.KubernetesHostBuilderExtensions.AddKubernetesConfiguration(Microsoft.AspNetCore.Hosting.IWebHostBuilder, System.Action(Of k8s.KubernetesClientConfiguration), Microsoft.Extensions.Logging.ILoggerFactory)
  name.vb: AddKubernetesConfiguration(IWebHostBuilder, Action(Of KubernetesClientConfiguration), ILoggerFactory)
- uid: Steeltoe.Extensions.Configuration.Kubernetes.KubernetesHostBuilderExtensions.AddKubernetesConfiguration(Microsoft.Extensions.Hosting.IHostBuilder,System.Action{k8s.KubernetesClientConfiguration},Microsoft.Extensions.Logging.ILoggerFactory)
  commentId: M:Steeltoe.Extensions.Configuration.Kubernetes.KubernetesHostBuilderExtensions.AddKubernetesConfiguration(Microsoft.Extensions.Hosting.IHostBuilder,System.Action{k8s.KubernetesClientConfiguration},Microsoft.Extensions.Logging.ILoggerFactory)
  id: AddKubernetesConfiguration(Microsoft.Extensions.Hosting.IHostBuilder,System.Action{k8s.KubernetesClientConfiguration},Microsoft.Extensions.Logging.ILoggerFactory)
  isExtensionMethod: true
  parent: Steeltoe.Extensions.Configuration.Kubernetes.KubernetesHostBuilderExtensions
  langs:
  - csharp
  - vb
  name: AddKubernetesConfiguration(IHostBuilder, Action<KubernetesClientConfiguration>, ILoggerFactory)
  nameWithType: KubernetesHostBuilderExtensions.AddKubernetesConfiguration(IHostBuilder, Action<KubernetesClientConfiguration>, ILoggerFactory)
  fullName: Steeltoe.Extensions.Configuration.Kubernetes.KubernetesHostBuilderExtensions.AddKubernetesConfiguration(Microsoft.Extensions.Hosting.IHostBuilder, System.Action<k8s.KubernetesClientConfiguration>, Microsoft.Extensions.Logging.ILoggerFactory)
  type: Method
  source:
    remote:
      path: src/Configuration/src/KubernetesCore/KubernetesHostBuilderExtensions.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: AddKubernetesConfiguration
    path: ../Steeltoe/src/Configuration/src/KubernetesCore/KubernetesHostBuilderExtensions.cs
    startLine: 39
  assemblies:
  - Steeltoe.Extensions.Configuration.KubernetesCore
  namespace: Steeltoe.Extensions.Configuration.Kubernetes
  summary: "\nAdd Kubernetes Configuration Providers for configmaps and secrets\n"
  example: []
  syntax:
    content: public static IHostBuilder AddKubernetesConfiguration(this IHostBuilder hostBuilder, Action<KubernetesClientConfiguration> kubernetesClientConfiguration = null, ILoggerFactory loggerFactory = null)
    parameters:
    - id: hostBuilder
      type: Microsoft.Extensions.Hosting.IHostBuilder
      description: Your WebHostBuilder
    - id: kubernetesClientConfiguration
      type: System.Action{k8s.KubernetesClientConfiguration}
      description: Customize the <xref href="k8s.KubernetesClientConfiguration" data-throw-if-not-resolved="false"></xref>
    - id: loggerFactory
      type: Microsoft.Extensions.Logging.ILoggerFactory
      description: <xref href="Microsoft.Extensions.Logging.ILoggerFactory" data-throw-if-not-resolved="false"></xref>
    return:
      type: Microsoft.Extensions.Hosting.IHostBuilder
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function AddKubernetesConfiguration(hostBuilder As IHostBuilder, kubernetesClientConfiguration As Action(Of KubernetesClientConfiguration) = Nothing, loggerFactory As ILoggerFactory = Nothing) As IHostBuilder
  overload: Steeltoe.Extensions.Configuration.Kubernetes.KubernetesHostBuilderExtensions.AddKubernetesConfiguration*
  nameWithType.vb: KubernetesHostBuilderExtensions.AddKubernetesConfiguration(IHostBuilder, Action(Of KubernetesClientConfiguration), ILoggerFactory)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Steeltoe.Extensions.Configuration.Kubernetes.KubernetesHostBuilderExtensions.AddKubernetesConfiguration(Microsoft.Extensions.Hosting.IHostBuilder, System.Action(Of k8s.KubernetesClientConfiguration), Microsoft.Extensions.Logging.ILoggerFactory)
  name.vb: AddKubernetesConfiguration(IHostBuilder, Action(Of KubernetesClientConfiguration), ILoggerFactory)
references:
- uid: Steeltoe.Extensions.Configuration.Kubernetes
  commentId: N:Steeltoe.Extensions.Configuration.Kubernetes
  name: Steeltoe.Extensions.Configuration.Kubernetes
  nameWithType: Steeltoe.Extensions.Configuration.Kubernetes
  fullName: Steeltoe.Extensions.Configuration.Kubernetes
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: k8s.KubernetesClientConfiguration
  commentId: T:k8s.KubernetesClientConfiguration
  isExternal: true
- uid: Microsoft.Extensions.Logging.ILoggerFactory
  commentId: T:Microsoft.Extensions.Logging.ILoggerFactory
  parent: Microsoft.Extensions.Logging
  isExternal: true
  name: ILoggerFactory
  nameWithType: ILoggerFactory
  fullName: Microsoft.Extensions.Logging.ILoggerFactory
- uid: Steeltoe.Extensions.Configuration.Kubernetes.KubernetesHostBuilderExtensions.AddKubernetesConfiguration*
  commentId: Overload:Steeltoe.Extensions.Configuration.Kubernetes.KubernetesHostBuilderExtensions.AddKubernetesConfiguration
  name: AddKubernetesConfiguration
  nameWithType: KubernetesHostBuilderExtensions.AddKubernetesConfiguration
  fullName: Steeltoe.Extensions.Configuration.Kubernetes.KubernetesHostBuilderExtensions.AddKubernetesConfiguration
- uid: Microsoft.AspNetCore.Hosting.IWebHostBuilder
  commentId: T:Microsoft.AspNetCore.Hosting.IWebHostBuilder
  parent: Microsoft.AspNetCore.Hosting
  isExternal: true
  name: IWebHostBuilder
  nameWithType: IWebHostBuilder
  fullName: Microsoft.AspNetCore.Hosting.IWebHostBuilder
- uid: System.Action{k8s.KubernetesClientConfiguration}
  commentId: T:System.Action{k8s.KubernetesClientConfiguration}
  parent: System
  definition: System.Action`1
  name: Action<KubernetesClientConfiguration>
  nameWithType: Action<KubernetesClientConfiguration>
  fullName: System.Action<k8s.KubernetesClientConfiguration>
  nameWithType.vb: Action(Of KubernetesClientConfiguration)
  fullName.vb: System.Action(Of k8s.KubernetesClientConfiguration)
  name.vb: Action(Of KubernetesClientConfiguration)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: k8s.KubernetesClientConfiguration
    name: KubernetesClientConfiguration
    nameWithType: KubernetesClientConfiguration
    fullName: k8s.KubernetesClientConfiguration
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: k8s.KubernetesClientConfiguration
    name: KubernetesClientConfiguration
    nameWithType: KubernetesClientConfiguration
    fullName: k8s.KubernetesClientConfiguration
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.Logging
  commentId: N:Microsoft.Extensions.Logging
  isExternal: true
  name: Microsoft.Extensions.Logging
  nameWithType: Microsoft.Extensions.Logging
  fullName: Microsoft.Extensions.Logging
- uid: Microsoft.AspNetCore.Hosting
  commentId: N:Microsoft.AspNetCore.Hosting
  isExternal: true
  name: Microsoft.AspNetCore.Hosting
  nameWithType: Microsoft.AspNetCore.Hosting
  fullName: Microsoft.AspNetCore.Hosting
- uid: System.Action`1
  commentId: T:System.Action`1
  isExternal: true
  name: Action<T>
  nameWithType: Action<T>
  fullName: System.Action<T>
  nameWithType.vb: Action(Of T)
  fullName.vb: System.Action(Of T)
  name.vb: Action(Of T)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.Hosting.IHostBuilder
  commentId: T:Microsoft.Extensions.Hosting.IHostBuilder
  parent: Microsoft.Extensions.Hosting
  isExternal: true
  name: IHostBuilder
  nameWithType: IHostBuilder
  fullName: Microsoft.Extensions.Hosting.IHostBuilder
- uid: Microsoft.Extensions.Hosting
  commentId: N:Microsoft.Extensions.Hosting
  isExternal: true
  name: Microsoft.Extensions.Hosting
  nameWithType: Microsoft.Extensions.Hosting
  fullName: Microsoft.Extensions.Hosting
