### YamlMime:ManagedReference
items:
- uid: Steeltoe.Management.Info.AbstractConfigurationContributor
  commentId: T:Steeltoe.Management.Info.AbstractConfigurationContributor
  id: AbstractConfigurationContributor
  parent: Steeltoe.Management.Info
  children:
  - Steeltoe.Management.Info.AbstractConfigurationContributor.#ctor
  - Steeltoe.Management.Info.AbstractConfigurationContributor.#ctor(IConfiguration)
  - Steeltoe.Management.Info.AbstractConfigurationContributor._config
  - Steeltoe.Management.Info.AbstractConfigurationContributor.AddChildren(System.Collections.Generic.Dictionary{System.String,System.Object},System.Collections.Generic.IEnumerable{IConfigurationSection})
  - Steeltoe.Management.Info.AbstractConfigurationContributor.AddKeyValue(System.Collections.Generic.Dictionary{System.String,System.Object},System.String,System.String)
  - Steeltoe.Management.Info.AbstractConfigurationContributor.Contribute(Steeltoe.Management.Info.IInfoBuilder,System.String,System.Boolean)
  - Steeltoe.Management.Info.AbstractConfigurationContributor.CreateDictionary(System.String,System.Boolean)
  langs:
  - csharp
  - vb
  name: AbstractConfigurationContributor
  nameWithType: AbstractConfigurationContributor
  fullName: Steeltoe.Management.Info.AbstractConfigurationContributor
  type: Class
  source:
    remote:
      path: src/Management/src/Abstractions/Info/AbstractConfigurationContributor.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: AbstractConfigurationContributor
    path: ../Steeltoe/src/Management/src/Abstractions/Info/AbstractConfigurationContributor.cs
    startLine: 10
  assemblies:
  - Steeltoe.Management.Abstractions
  namespace: Steeltoe.Management.Info
  syntax:
    content: public abstract class AbstractConfigurationContributor
    content.vb: Public MustInherit Class AbstractConfigurationContributor
  inheritance:
  - System.Object
  derivedClasses:
  - Steeltoe.Management.Endpoint.Info.Contributor.AppSettingsInfoContributor
  - Steeltoe.Management.Endpoint.Info.Contributor.GitInfoContributor
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: Steeltoe.Management.Info.AbstractConfigurationContributor._config
  commentId: F:Steeltoe.Management.Info.AbstractConfigurationContributor._config
  id: _config
  parent: Steeltoe.Management.Info.AbstractConfigurationContributor
  langs:
  - csharp
  - vb
  name: _config
  nameWithType: AbstractConfigurationContributor._config
  fullName: Steeltoe.Management.Info.AbstractConfigurationContributor._config
  type: Field
  source:
    remote:
      path: src/Management/src/Abstractions/Info/AbstractConfigurationContributor.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: _config
    path: ../Steeltoe/src/Management/src/Abstractions/Info/AbstractConfigurationContributor.cs
    startLine: 12
  assemblies:
  - Steeltoe.Management.Abstractions
  namespace: Steeltoe.Management.Info
  syntax:
    content: protected IConfiguration _config
    return:
      type: IConfiguration
    content.vb: Protected _config As IConfiguration
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Steeltoe.Management.Info.AbstractConfigurationContributor.#ctor
  commentId: M:Steeltoe.Management.Info.AbstractConfigurationContributor.#ctor
  id: '#ctor'
  parent: Steeltoe.Management.Info.AbstractConfigurationContributor
  langs:
  - csharp
  - vb
  name: AbstractConfigurationContributor()
  nameWithType: AbstractConfigurationContributor.AbstractConfigurationContributor()
  fullName: Steeltoe.Management.Info.AbstractConfigurationContributor.AbstractConfigurationContributor()
  type: Constructor
  source:
    remote:
      path: src/Management/src/Abstractions/Info/AbstractConfigurationContributor.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: .ctor
    path: ../Steeltoe/src/Management/src/Abstractions/Info/AbstractConfigurationContributor.cs
    startLine: 14
  assemblies:
  - Steeltoe.Management.Abstractions
  namespace: Steeltoe.Management.Info
  syntax:
    content: protected AbstractConfigurationContributor()
    content.vb: Protected Sub New
  overload: Steeltoe.Management.Info.AbstractConfigurationContributor.#ctor*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Steeltoe.Management.Info.AbstractConfigurationContributor.#ctor(IConfiguration)
  commentId: M:Steeltoe.Management.Info.AbstractConfigurationContributor.#ctor(IConfiguration)
  id: '#ctor(IConfiguration)'
  parent: Steeltoe.Management.Info.AbstractConfigurationContributor
  langs:
  - csharp
  - vb
  name: AbstractConfigurationContributor(IConfiguration)
  nameWithType: AbstractConfigurationContributor.AbstractConfigurationContributor(IConfiguration)
  fullName: Steeltoe.Management.Info.AbstractConfigurationContributor.AbstractConfigurationContributor(IConfiguration)
  type: Constructor
  source:
    remote:
      path: src/Management/src/Abstractions/Info/AbstractConfigurationContributor.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: .ctor
    path: ../Steeltoe/src/Management/src/Abstractions/Info/AbstractConfigurationContributor.cs
    startLine: 18
  assemblies:
  - Steeltoe.Management.Abstractions
  namespace: Steeltoe.Management.Info
  syntax:
    content: protected AbstractConfigurationContributor(IConfiguration config)
    parameters:
    - id: config
      type: IConfiguration
    content.vb: Protected Sub New(config As IConfiguration)
  overload: Steeltoe.Management.Info.AbstractConfigurationContributor.#ctor*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Steeltoe.Management.Info.AbstractConfigurationContributor.Contribute(Steeltoe.Management.Info.IInfoBuilder,System.String,System.Boolean)
  commentId: M:Steeltoe.Management.Info.AbstractConfigurationContributor.Contribute(Steeltoe.Management.Info.IInfoBuilder,System.String,System.Boolean)
  id: Contribute(Steeltoe.Management.Info.IInfoBuilder,System.String,System.Boolean)
  parent: Steeltoe.Management.Info.AbstractConfigurationContributor
  langs:
  - csharp
  - vb
  name: Contribute(IInfoBuilder, String, Boolean)
  nameWithType: AbstractConfigurationContributor.Contribute(IInfoBuilder, String, Boolean)
  fullName: Steeltoe.Management.Info.AbstractConfigurationContributor.Contribute(Steeltoe.Management.Info.IInfoBuilder, System.String, System.Boolean)
  type: Method
  source:
    remote:
      path: src/Management/src/Abstractions/Info/AbstractConfigurationContributor.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Contribute
    path: ../Steeltoe/src/Management/src/Abstractions/Info/AbstractConfigurationContributor.cs
    startLine: 23
  assemblies:
  - Steeltoe.Management.Abstractions
  namespace: Steeltoe.Management.Info
  syntax:
    content: protected virtual void Contribute(IInfoBuilder builder, string prefix, bool keepPrefix)
    parameters:
    - id: builder
      type: Steeltoe.Management.Info.IInfoBuilder
    - id: prefix
      type: System.String
    - id: keepPrefix
      type: System.Boolean
    content.vb: Protected Overridable Sub Contribute(builder As IInfoBuilder, prefix As String, keepPrefix As Boolean)
  overload: Steeltoe.Management.Info.AbstractConfigurationContributor.Contribute*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: Steeltoe.Management.Info.AbstractConfigurationContributor.CreateDictionary(System.String,System.Boolean)
  commentId: M:Steeltoe.Management.Info.AbstractConfigurationContributor.CreateDictionary(System.String,System.Boolean)
  id: CreateDictionary(System.String,System.Boolean)
  parent: Steeltoe.Management.Info.AbstractConfigurationContributor
  langs:
  - csharp
  - vb
  name: CreateDictionary(String, Boolean)
  nameWithType: AbstractConfigurationContributor.CreateDictionary(String, Boolean)
  fullName: Steeltoe.Management.Info.AbstractConfigurationContributor.CreateDictionary(System.String, System.Boolean)
  type: Method
  source:
    remote:
      path: src/Management/src/Abstractions/Info/AbstractConfigurationContributor.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: CreateDictionary
    path: ../Steeltoe/src/Management/src/Abstractions/Info/AbstractConfigurationContributor.cs
    startLine: 33
  assemblies:
  - Steeltoe.Management.Abstractions
  namespace: Steeltoe.Management.Info
  syntax:
    content: protected virtual Dictionary<string, object> CreateDictionary(string prefix, bool keepPrefix)
    parameters:
    - id: prefix
      type: System.String
    - id: keepPrefix
      type: System.Boolean
    return:
      type: System.Collections.Generic.Dictionary{System.String,System.Object}
    content.vb: Protected Overridable Function CreateDictionary(prefix As String, keepPrefix As Boolean) As Dictionary(Of String, Object)
  overload: Steeltoe.Management.Info.AbstractConfigurationContributor.CreateDictionary*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: Steeltoe.Management.Info.AbstractConfigurationContributor.AddChildren(System.Collections.Generic.Dictionary{System.String,System.Object},System.Collections.Generic.IEnumerable{IConfigurationSection})
  commentId: M:Steeltoe.Management.Info.AbstractConfigurationContributor.AddChildren(System.Collections.Generic.Dictionary{System.String,System.Object},System.Collections.Generic.IEnumerable{IConfigurationSection})
  id: AddChildren(System.Collections.Generic.Dictionary{System.String,System.Object},System.Collections.Generic.IEnumerable{IConfigurationSection})
  parent: Steeltoe.Management.Info.AbstractConfigurationContributor
  langs:
  - csharp
  - vb
  name: AddChildren(Dictionary<String, Object>, IEnumerable<IConfigurationSection>)
  nameWithType: AbstractConfigurationContributor.AddChildren(Dictionary<String, Object>, IEnumerable<IConfigurationSection>)
  fullName: Steeltoe.Management.Info.AbstractConfigurationContributor.AddChildren(System.Collections.Generic.Dictionary<System.String, System.Object>, System.Collections.Generic.IEnumerable<IConfigurationSection>)
  type: Method
  source:
    remote:
      path: src/Management/src/Abstractions/Info/AbstractConfigurationContributor.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: AddChildren
    path: ../Steeltoe/src/Management/src/Abstractions/Info/AbstractConfigurationContributor.cs
    startLine: 59
  assemblies:
  - Steeltoe.Management.Abstractions
  namespace: Steeltoe.Management.Info
  syntax:
    content: protected virtual void AddChildren(Dictionary<string, object> dict, IEnumerable<IConfigurationSection> sections)
    parameters:
    - id: dict
      type: System.Collections.Generic.Dictionary{System.String,System.Object}
    - id: sections
      type: System.Collections.Generic.IEnumerable{IConfigurationSection}
    content.vb: Protected Overridable Sub AddChildren(dict As Dictionary(Of String, Object), sections As IEnumerable(Of IConfigurationSection))
  overload: Steeltoe.Management.Info.AbstractConfigurationContributor.AddChildren*
  nameWithType.vb: AbstractConfigurationContributor.AddChildren(Dictionary(Of String, Object), IEnumerable(Of IConfigurationSection))
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
  fullName.vb: Steeltoe.Management.Info.AbstractConfigurationContributor.AddChildren(System.Collections.Generic.Dictionary(Of System.String, System.Object), System.Collections.Generic.IEnumerable(Of IConfigurationSection))
  name.vb: AddChildren(Dictionary(Of String, Object), IEnumerable(Of IConfigurationSection))
- uid: Steeltoe.Management.Info.AbstractConfigurationContributor.AddKeyValue(System.Collections.Generic.Dictionary{System.String,System.Object},System.String,System.String)
  commentId: M:Steeltoe.Management.Info.AbstractConfigurationContributor.AddKeyValue(System.Collections.Generic.Dictionary{System.String,System.Object},System.String,System.String)
  id: AddKeyValue(System.Collections.Generic.Dictionary{System.String,System.Object},System.String,System.String)
  parent: Steeltoe.Management.Info.AbstractConfigurationContributor
  langs:
  - csharp
  - vb
  name: AddKeyValue(Dictionary<String, Object>, String, String)
  nameWithType: AbstractConfigurationContributor.AddKeyValue(Dictionary<String, Object>, String, String)
  fullName: Steeltoe.Management.Info.AbstractConfigurationContributor.AddKeyValue(System.Collections.Generic.Dictionary<System.String, System.Object>, System.String, System.String)
  type: Method
  source:
    remote:
      path: src/Management/src/Abstractions/Info/AbstractConfigurationContributor.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: AddKeyValue
    path: ../Steeltoe/src/Management/src/Abstractions/Info/AbstractConfigurationContributor.cs
    startLine: 78
  assemblies:
  - Steeltoe.Management.Abstractions
  namespace: Steeltoe.Management.Info
  syntax:
    content: protected virtual void AddKeyValue(Dictionary<string, object> dict, string key, string value)
    parameters:
    - id: dict
      type: System.Collections.Generic.Dictionary{System.String,System.Object}
    - id: key
      type: System.String
    - id: value
      type: System.String
    content.vb: Protected Overridable Sub AddKeyValue(dict As Dictionary(Of String, Object), key As String, value As String)
  overload: Steeltoe.Management.Info.AbstractConfigurationContributor.AddKeyValue*
  nameWithType.vb: AbstractConfigurationContributor.AddKeyValue(Dictionary(Of String, Object), String, String)
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
  fullName.vb: Steeltoe.Management.Info.AbstractConfigurationContributor.AddKeyValue(System.Collections.Generic.Dictionary(Of System.String, System.Object), System.String, System.String)
  name.vb: AddKeyValue(Dictionary(Of String, Object), String, String)
references:
- uid: Steeltoe.Management.Info
  commentId: N:Steeltoe.Management.Info
  name: Steeltoe.Management.Info
  nameWithType: Steeltoe.Management.Info
  fullName: Steeltoe.Management.Info
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: IConfiguration
  isExternal: true
  name: IConfiguration
  nameWithType: IConfiguration
  fullName: IConfiguration
- uid: Steeltoe.Management.Info.AbstractConfigurationContributor.#ctor*
  commentId: Overload:Steeltoe.Management.Info.AbstractConfigurationContributor.#ctor
  name: AbstractConfigurationContributor
  nameWithType: AbstractConfigurationContributor.AbstractConfigurationContributor
  fullName: Steeltoe.Management.Info.AbstractConfigurationContributor.AbstractConfigurationContributor
- uid: Steeltoe.Management.Info.AbstractConfigurationContributor.Contribute*
  commentId: Overload:Steeltoe.Management.Info.AbstractConfigurationContributor.Contribute
  name: Contribute
  nameWithType: AbstractConfigurationContributor.Contribute
  fullName: Steeltoe.Management.Info.AbstractConfigurationContributor.Contribute
- uid: Steeltoe.Management.Info.IInfoBuilder
  commentId: T:Steeltoe.Management.Info.IInfoBuilder
  parent: Steeltoe.Management.Info
  name: IInfoBuilder
  nameWithType: IInfoBuilder
  fullName: Steeltoe.Management.Info.IInfoBuilder
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Steeltoe.Management.Info.AbstractConfigurationContributor.CreateDictionary*
  commentId: Overload:Steeltoe.Management.Info.AbstractConfigurationContributor.CreateDictionary
  name: CreateDictionary
  nameWithType: AbstractConfigurationContributor.CreateDictionary
  fullName: Steeltoe.Management.Info.AbstractConfigurationContributor.CreateDictionary
- uid: System.Collections.Generic.Dictionary{System.String,System.Object}
  commentId: T:System.Collections.Generic.Dictionary{System.String,System.Object}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  name: Dictionary<String, Object>
  nameWithType: Dictionary<String, Object>
  fullName: System.Collections.Generic.Dictionary<System.String, System.Object>
  nameWithType.vb: Dictionary(Of String, Object)
  fullName.vb: System.Collections.Generic.Dictionary(Of System.String, System.Object)
  name.vb: Dictionary(Of String, Object)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Dictionary`2
  commentId: T:System.Collections.Generic.Dictionary`2
  isExternal: true
  name: Dictionary<TKey, TValue>
  nameWithType: Dictionary<TKey, TValue>
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>
  nameWithType.vb: Dictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue)
  name.vb: Dictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Steeltoe.Management.Info.AbstractConfigurationContributor.AddChildren*
  commentId: Overload:Steeltoe.Management.Info.AbstractConfigurationContributor.AddChildren
  name: AddChildren
  nameWithType: AbstractConfigurationContributor.AddChildren
  fullName: Steeltoe.Management.Info.AbstractConfigurationContributor.AddChildren
- uid: System.Collections.Generic.IEnumerable{IConfigurationSection}
  commentId: T:System.Collections.Generic.IEnumerable{IConfigurationSection}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<IConfigurationSection>
  nameWithType: IEnumerable<IConfigurationSection>
  fullName: System.Collections.Generic.IEnumerable<IConfigurationSection>
  nameWithType.vb: IEnumerable(Of IConfigurationSection)
  fullName.vb: System.Collections.Generic.IEnumerable(Of IConfigurationSection)
  name.vb: IEnumerable(Of IConfigurationSection)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: IConfigurationSection
    name: IConfigurationSection
    nameWithType: IConfigurationSection
    fullName: IConfigurationSection
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: IConfigurationSection
    name: IConfigurationSection
    nameWithType: IConfigurationSection
    fullName: IConfigurationSection
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Management.Info.AbstractConfigurationContributor.AddKeyValue*
  commentId: Overload:Steeltoe.Management.Info.AbstractConfigurationContributor.AddKeyValue
  name: AddKeyValue
  nameWithType: AbstractConfigurationContributor.AddKeyValue
  fullName: Steeltoe.Management.Info.AbstractConfigurationContributor.AddKeyValue
