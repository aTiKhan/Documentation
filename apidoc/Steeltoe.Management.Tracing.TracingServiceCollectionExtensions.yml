### YamlMime:ManagedReference
items:
- uid: Steeltoe.Management.Tracing.TracingServiceCollectionExtensions
  commentId: T:Steeltoe.Management.Tracing.TracingServiceCollectionExtensions
  id: TracingServiceCollectionExtensions
  parent: Steeltoe.Management.Tracing
  children:
  - Steeltoe.Management.Tracing.TracingServiceCollectionExtensions.AddDistributedTracing(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.Extensions.Configuration.IConfiguration,System.Action{OpenTelemetry.Trace.Configuration.TracerBuilder})
  - Steeltoe.Management.Tracing.TracingServiceCollectionExtensions.UseZipkinWithTraceOptions(OpenTelemetry.Trace.Configuration.TracerBuilder,Microsoft.Extensions.DependencyInjection.IServiceCollection)
  langs:
  - csharp
  - vb
  name: TracingServiceCollectionExtensions
  nameWithType: TracingServiceCollectionExtensions
  fullName: Steeltoe.Management.Tracing.TracingServiceCollectionExtensions
  type: Class
  source:
    remote:
      path: src/Management/src/TracingCore/TracingServiceCollectionExtensions.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: TracingServiceCollectionExtensions
    path: ../Steeltoe/src/Management/src/TracingCore/TracingServiceCollectionExtensions.cs
    startLine: 19
  assemblies:
  - Steeltoe.Management.TracingCore
  namespace: Steeltoe.Management.Tracing
  syntax:
    content: public static class TracingServiceCollectionExtensions
    content.vb: Public Module TracingServiceCollectionExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Steeltoe.Management.Tracing.TracingServiceCollectionExtensions.AddDistributedTracing(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.Extensions.Configuration.IConfiguration,System.Action{OpenTelemetry.Trace.Configuration.TracerBuilder})
  commentId: M:Steeltoe.Management.Tracing.TracingServiceCollectionExtensions.AddDistributedTracing(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.Extensions.Configuration.IConfiguration,System.Action{OpenTelemetry.Trace.Configuration.TracerBuilder})
  id: AddDistributedTracing(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.Extensions.Configuration.IConfiguration,System.Action{OpenTelemetry.Trace.Configuration.TracerBuilder})
  isExtensionMethod: true
  parent: Steeltoe.Management.Tracing.TracingServiceCollectionExtensions
  langs:
  - csharp
  - vb
  name: AddDistributedTracing(IServiceCollection, IConfiguration, Action<TracerBuilder>)
  nameWithType: TracingServiceCollectionExtensions.AddDistributedTracing(IServiceCollection, IConfiguration, Action<TracerBuilder>)
  fullName: Steeltoe.Management.Tracing.TracingServiceCollectionExtensions.AddDistributedTracing(Microsoft.Extensions.DependencyInjection.IServiceCollection, Microsoft.Extensions.Configuration.IConfiguration, System.Action<OpenTelemetry.Trace.Configuration.TracerBuilder>)
  type: Method
  source:
    remote:
      path: src/Management/src/TracingCore/TracingServiceCollectionExtensions.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: AddDistributedTracing
    path: ../Steeltoe/src/Management/src/TracingCore/TracingServiceCollectionExtensions.cs
    startLine: 21
  assemblies:
  - Steeltoe.Management.TracingCore
  namespace: Steeltoe.Management.Tracing
  syntax:
    content: public static void AddDistributedTracing(this IServiceCollection services, IConfiguration config = null, Action<TracerBuilder> configureTracer = null)
    parameters:
    - id: services
      type: Microsoft.Extensions.DependencyInjection.IServiceCollection
    - id: config
      type: Microsoft.Extensions.Configuration.IConfiguration
    - id: configureTracer
      type: System.Action{OpenTelemetry.Trace.Configuration.TracerBuilder}
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Sub AddDistributedTracing(services As IServiceCollection, config As IConfiguration = Nothing, configureTracer As Action(Of TracerBuilder) = Nothing)
  overload: Steeltoe.Management.Tracing.TracingServiceCollectionExtensions.AddDistributedTracing*
  nameWithType.vb: TracingServiceCollectionExtensions.AddDistributedTracing(IServiceCollection, IConfiguration, Action(Of TracerBuilder))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Steeltoe.Management.Tracing.TracingServiceCollectionExtensions.AddDistributedTracing(Microsoft.Extensions.DependencyInjection.IServiceCollection, Microsoft.Extensions.Configuration.IConfiguration, System.Action(Of OpenTelemetry.Trace.Configuration.TracerBuilder))
  name.vb: AddDistributedTracing(IServiceCollection, IConfiguration, Action(Of TracerBuilder))
- uid: Steeltoe.Management.Tracing.TracingServiceCollectionExtensions.UseZipkinWithTraceOptions(OpenTelemetry.Trace.Configuration.TracerBuilder,Microsoft.Extensions.DependencyInjection.IServiceCollection)
  commentId: M:Steeltoe.Management.Tracing.TracingServiceCollectionExtensions.UseZipkinWithTraceOptions(OpenTelemetry.Trace.Configuration.TracerBuilder,Microsoft.Extensions.DependencyInjection.IServiceCollection)
  id: UseZipkinWithTraceOptions(OpenTelemetry.Trace.Configuration.TracerBuilder,Microsoft.Extensions.DependencyInjection.IServiceCollection)
  isExtensionMethod: true
  parent: Steeltoe.Management.Tracing.TracingServiceCollectionExtensions
  langs:
  - csharp
  - vb
  name: UseZipkinWithTraceOptions(TracerBuilder, IServiceCollection)
  nameWithType: TracingServiceCollectionExtensions.UseZipkinWithTraceOptions(TracerBuilder, IServiceCollection)
  fullName: Steeltoe.Management.Tracing.TracingServiceCollectionExtensions.UseZipkinWithTraceOptions(OpenTelemetry.Trace.Configuration.TracerBuilder, Microsoft.Extensions.DependencyInjection.IServiceCollection)
  type: Method
  source:
    remote:
      path: src/Management/src/TracingCore/TracingServiceCollectionExtensions.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: UseZipkinWithTraceOptions
    path: ../Steeltoe/src/Management/src/TracingCore/TracingServiceCollectionExtensions.cs
    startLine: 59
  assemblies:
  - Steeltoe.Management.TracingCore
  namespace: Steeltoe.Management.Tracing
  syntax:
    content: public static void UseZipkinWithTraceOptions(this TracerBuilder builder, IServiceCollection services)
    parameters:
    - id: builder
      type: OpenTelemetry.Trace.Configuration.TracerBuilder
    - id: services
      type: Microsoft.Extensions.DependencyInjection.IServiceCollection
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Sub UseZipkinWithTraceOptions(builder As TracerBuilder, services As IServiceCollection)
  overload: Steeltoe.Management.Tracing.TracingServiceCollectionExtensions.UseZipkinWithTraceOptions*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Steeltoe.Management.Tracing
  commentId: N:Steeltoe.Management.Tracing
  name: Steeltoe.Management.Tracing
  nameWithType: Steeltoe.Management.Tracing
  fullName: Steeltoe.Management.Tracing
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Steeltoe.Management.Tracing.TracingServiceCollectionExtensions.AddDistributedTracing*
  commentId: Overload:Steeltoe.Management.Tracing.TracingServiceCollectionExtensions.AddDistributedTracing
  name: AddDistributedTracing
  nameWithType: TracingServiceCollectionExtensions.AddDistributedTracing
  fullName: Steeltoe.Management.Tracing.TracingServiceCollectionExtensions.AddDistributedTracing
- uid: Microsoft.Extensions.DependencyInjection.IServiceCollection
  commentId: T:Microsoft.Extensions.DependencyInjection.IServiceCollection
  parent: Microsoft.Extensions.DependencyInjection
  isExternal: true
  name: IServiceCollection
  nameWithType: IServiceCollection
  fullName: Microsoft.Extensions.DependencyInjection.IServiceCollection
- uid: Microsoft.Extensions.Configuration.IConfiguration
  commentId: T:Microsoft.Extensions.Configuration.IConfiguration
  parent: Microsoft.Extensions.Configuration
  isExternal: true
  name: IConfiguration
  nameWithType: IConfiguration
  fullName: Microsoft.Extensions.Configuration.IConfiguration
- uid: System.Action{OpenTelemetry.Trace.Configuration.TracerBuilder}
  commentId: T:System.Action{OpenTelemetry.Trace.Configuration.TracerBuilder}
  parent: System
  definition: System.Action`1
  name: Action<TracerBuilder>
  nameWithType: Action<TracerBuilder>
  fullName: System.Action<OpenTelemetry.Trace.Configuration.TracerBuilder>
  nameWithType.vb: Action(Of TracerBuilder)
  fullName.vb: System.Action(Of OpenTelemetry.Trace.Configuration.TracerBuilder)
  name.vb: Action(Of TracerBuilder)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: OpenTelemetry.Trace.Configuration.TracerBuilder
    name: TracerBuilder
    nameWithType: TracerBuilder
    fullName: OpenTelemetry.Trace.Configuration.TracerBuilder
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: OpenTelemetry.Trace.Configuration.TracerBuilder
    name: TracerBuilder
    nameWithType: TracerBuilder
    fullName: OpenTelemetry.Trace.Configuration.TracerBuilder
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.DependencyInjection
  commentId: N:Microsoft.Extensions.DependencyInjection
  name: Microsoft.Extensions.DependencyInjection
  nameWithType: Microsoft.Extensions.DependencyInjection
  fullName: Microsoft.Extensions.DependencyInjection
- uid: Microsoft.Extensions.Configuration
  commentId: N:Microsoft.Extensions.Configuration
  isExternal: true
  name: Microsoft.Extensions.Configuration
  nameWithType: Microsoft.Extensions.Configuration
  fullName: Microsoft.Extensions.Configuration
- uid: System.Action`1
  commentId: T:System.Action`1
  isExternal: true
  name: Action<T>
  nameWithType: Action<T>
  fullName: System.Action<T>
  nameWithType.vb: Action(Of T)
  fullName.vb: System.Action(Of T)
  name.vb: Action(Of T)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Management.Tracing.TracingServiceCollectionExtensions.UseZipkinWithTraceOptions*
  commentId: Overload:Steeltoe.Management.Tracing.TracingServiceCollectionExtensions.UseZipkinWithTraceOptions
  name: UseZipkinWithTraceOptions
  nameWithType: TracingServiceCollectionExtensions.UseZipkinWithTraceOptions
  fullName: Steeltoe.Management.Tracing.TracingServiceCollectionExtensions.UseZipkinWithTraceOptions
- uid: OpenTelemetry.Trace.Configuration.TracerBuilder
  commentId: T:OpenTelemetry.Trace.Configuration.TracerBuilder
  parent: OpenTelemetry.Trace.Configuration
  isExternal: true
  name: TracerBuilder
  nameWithType: TracerBuilder
  fullName: OpenTelemetry.Trace.Configuration.TracerBuilder
- uid: OpenTelemetry.Trace.Configuration
  commentId: N:OpenTelemetry.Trace.Configuration
  isExternal: true
  name: OpenTelemetry.Trace.Configuration
  nameWithType: OpenTelemetry.Trace.Configuration
  fullName: OpenTelemetry.Trace.Configuration
