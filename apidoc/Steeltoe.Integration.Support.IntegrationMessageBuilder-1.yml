### YamlMime:ManagedReference
items:
- uid: Steeltoe.Integration.Support.IntegrationMessageBuilder`1
  commentId: T:Steeltoe.Integration.Support.IntegrationMessageBuilder`1
  id: IntegrationMessageBuilder`1
  parent: Steeltoe.Integration.Support
  children:
  - Steeltoe.Integration.Support.IntegrationMessageBuilder`1.Build
  - Steeltoe.Integration.Support.IntegrationMessageBuilder`1.CopyHeaders(System.Collections.Generic.IDictionary{System.String,System.Object})
  - Steeltoe.Integration.Support.IntegrationMessageBuilder`1.CopyHeadersIfAbsent(System.Collections.Generic.IDictionary{System.String,System.Object})
  - Steeltoe.Integration.Support.IntegrationMessageBuilder`1.FilterAndCopyHeadersIfAbsent(System.Collections.Generic.IDictionary{System.String,System.Object},System.String[])
  - Steeltoe.Integration.Support.IntegrationMessageBuilder`1.FromMessage(Steeltoe.Messaging.IMessage{`0})
  - Steeltoe.Integration.Support.IntegrationMessageBuilder`1.Payload
  - Steeltoe.Integration.Support.IntegrationMessageBuilder`1.PopSequenceDetails
  - Steeltoe.Integration.Support.IntegrationMessageBuilder`1.PushSequenceDetails(System.Object,System.Int32,System.Int32)
  - Steeltoe.Integration.Support.IntegrationMessageBuilder`1.ReadOnlyHeaders(System.Collections.Generic.IList{System.String})
  - Steeltoe.Integration.Support.IntegrationMessageBuilder`1.RemoveHeader(System.String)
  - Steeltoe.Integration.Support.IntegrationMessageBuilder`1.RemoveHeaders(System.String[])
  - Steeltoe.Integration.Support.IntegrationMessageBuilder`1.SetCorrelationId(System.Object)
  - Steeltoe.Integration.Support.IntegrationMessageBuilder`1.SetErrorChannel(Steeltoe.Messaging.IMessageChannel)
  - Steeltoe.Integration.Support.IntegrationMessageBuilder`1.SetErrorChannelName(System.String)
  - Steeltoe.Integration.Support.IntegrationMessageBuilder`1.SetExpirationDate(System.Int64)
  - Steeltoe.Integration.Support.IntegrationMessageBuilder`1.SetExpirationDate(System.Nullable{System.DateTime})
  - Steeltoe.Integration.Support.IntegrationMessageBuilder`1.SetHeader(System.String,System.Object)
  - Steeltoe.Integration.Support.IntegrationMessageBuilder`1.SetHeaderIfAbsent(System.String,System.Object)
  - Steeltoe.Integration.Support.IntegrationMessageBuilder`1.SetPriority(System.Int32)
  - Steeltoe.Integration.Support.IntegrationMessageBuilder`1.SetReplyChannel(Steeltoe.Messaging.IMessageChannel)
  - Steeltoe.Integration.Support.IntegrationMessageBuilder`1.SetReplyChannelName(System.String)
  - Steeltoe.Integration.Support.IntegrationMessageBuilder`1.SetSequenceNumber(System.Int32)
  - Steeltoe.Integration.Support.IntegrationMessageBuilder`1.SetSequenceSize(System.Int32)
  - Steeltoe.Integration.Support.IntegrationMessageBuilder`1.WithPayload(`0)
  langs:
  - csharp
  - vb
  name: IntegrationMessageBuilder<T>
  nameWithType: IntegrationMessageBuilder<T>
  fullName: Steeltoe.Integration.Support.IntegrationMessageBuilder<T>
  type: Class
  source:
    remote:
      path: src/Integration/src/IntegrationBase/Support/IntegrationMessageBuilder.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: IntegrationMessageBuilder
    path: ../Steeltoe/src/Integration/src/IntegrationBase/Support/IntegrationMessageBuilder.cs
    startLine: 12
  assemblies:
  - Steeltoe.Integration.IntegrationBase
  namespace: Steeltoe.Integration.Support
  syntax:
    content: 'public class IntegrationMessageBuilder<T> : IntegrationMessageBuilder, IMessageBuilder<T>, IMessageBuilder'
    typeParameters:
    - id: T
    content.vb: >-
      Public Class IntegrationMessageBuilder(Of T)

          Inherits IntegrationMessageBuilder

          Implements IMessageBuilder(Of T), IMessageBuilder
  inheritance:
  - System.Object
  - Steeltoe.Integration.Support.AbstractMessageBuilder
  - Steeltoe.Integration.Support.IntegrationMessageBuilder
  implements:
  - Steeltoe.Integration.Support.IMessageBuilder{{T}}
  - Steeltoe.Integration.Support.IMessageBuilder
  inheritedMembers:
  - Steeltoe.Integration.Support.IntegrationMessageBuilder.Headers
  - Steeltoe.Integration.Support.IntegrationMessageBuilder.FromMessage(Steeltoe.Messaging.IMessage)
  - Steeltoe.Integration.Support.IntegrationMessageBuilder.WithPayload(System.Object)
  - Steeltoe.Integration.Support.IntegrationMessageBuilder.SequenceDetails
  - Steeltoe.Integration.Support.IntegrationMessageBuilder.CorrelationId
  - Steeltoe.Integration.Support.IntegrationMessageBuilder.SequenceNumber
  - Steeltoe.Integration.Support.IntegrationMessageBuilder.SequenceSize
  - Steeltoe.Integration.Support.AbstractMessageBuilder._payload
  - Steeltoe.Integration.Support.AbstractMessageBuilder._originalMessage
  - Steeltoe.Integration.Support.AbstractMessageBuilder._headerAccessor
  - Steeltoe.Integration.Support.AbstractMessageBuilder._modified
  - Steeltoe.Integration.Support.AbstractMessageBuilder._readOnlyHeaders
  - Steeltoe.Integration.Support.AbstractMessageBuilder.ContainsReadOnly(Steeltoe.Messaging.IMessageHeaders)
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  nameWithType.vb: IntegrationMessageBuilder(Of T)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
  fullName.vb: Steeltoe.Integration.Support.IntegrationMessageBuilder(Of T)
  name.vb: IntegrationMessageBuilder(Of T)
- uid: Steeltoe.Integration.Support.IntegrationMessageBuilder`1.Payload
  commentId: P:Steeltoe.Integration.Support.IntegrationMessageBuilder`1.Payload
  id: Payload
  parent: Steeltoe.Integration.Support.IntegrationMessageBuilder`1
  langs:
  - csharp
  - vb
  name: Payload
  nameWithType: IntegrationMessageBuilder<T>.Payload
  fullName: Steeltoe.Integration.Support.IntegrationMessageBuilder<T>.Payload
  type: Property
  source:
    remote:
      path: src/Integration/src/IntegrationBase/Support/IntegrationMessageBuilder.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Payload
    path: ../Steeltoe/src/Integration/src/IntegrationBase/Support/IntegrationMessageBuilder.cs
    startLine: 19
  assemblies:
  - Steeltoe.Integration.IntegrationBase
  namespace: Steeltoe.Integration.Support
  syntax:
    content: public T Payload { get; }
    parameters: []
    return:
      type: '{T}'
    content.vb: Public ReadOnly Property Payload As T
  overload: Steeltoe.Integration.Support.IntegrationMessageBuilder`1.Payload*
  implements:
  - Steeltoe.Integration.Support.IMessageBuilder{{T}}.Payload
  nameWithType.vb: IntegrationMessageBuilder(Of T).Payload
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: Steeltoe.Integration.Support.IntegrationMessageBuilder(Of T).Payload
- uid: Steeltoe.Integration.Support.IntegrationMessageBuilder`1.FromMessage(Steeltoe.Messaging.IMessage{`0})
  commentId: M:Steeltoe.Integration.Support.IntegrationMessageBuilder`1.FromMessage(Steeltoe.Messaging.IMessage{`0})
  id: FromMessage(Steeltoe.Messaging.IMessage{`0})
  parent: Steeltoe.Integration.Support.IntegrationMessageBuilder`1
  langs:
  - csharp
  - vb
  name: FromMessage(IMessage<T>)
  nameWithType: IntegrationMessageBuilder<T>.FromMessage(IMessage<T>)
  fullName: Steeltoe.Integration.Support.IntegrationMessageBuilder<T>.FromMessage(Steeltoe.Messaging.IMessage<T>)
  type: Method
  source:
    remote:
      path: src/Integration/src/IntegrationBase/Support/IntegrationMessageBuilder.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: FromMessage
    path: ../Steeltoe/src/Integration/src/IntegrationBase/Support/IntegrationMessageBuilder.cs
    startLine: 24
  assemblies:
  - Steeltoe.Integration.IntegrationBase
  namespace: Steeltoe.Integration.Support
  syntax:
    content: public static IntegrationMessageBuilder<T> FromMessage(IMessage<T> message)
    parameters:
    - id: message
      type: Steeltoe.Messaging.IMessage{{T}}
    return:
      type: Steeltoe.Integration.Support.IntegrationMessageBuilder`1
    content.vb: Public Shared Function FromMessage(message As IMessage(Of T)) As IntegrationMessageBuilder(Of T)
  overload: Steeltoe.Integration.Support.IntegrationMessageBuilder`1.FromMessage*
  nameWithType.vb: IntegrationMessageBuilder(Of T).FromMessage(IMessage(Of T))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Steeltoe.Integration.Support.IntegrationMessageBuilder(Of T).FromMessage(Steeltoe.Messaging.IMessage(Of T))
  name.vb: FromMessage(IMessage(Of T))
- uid: Steeltoe.Integration.Support.IntegrationMessageBuilder`1.WithPayload(`0)
  commentId: M:Steeltoe.Integration.Support.IntegrationMessageBuilder`1.WithPayload(`0)
  id: WithPayload(`0)
  parent: Steeltoe.Integration.Support.IntegrationMessageBuilder`1
  langs:
  - csharp
  - vb
  name: WithPayload(T)
  nameWithType: IntegrationMessageBuilder<T>.WithPayload(T)
  fullName: Steeltoe.Integration.Support.IntegrationMessageBuilder<T>.WithPayload(T)
  type: Method
  source:
    remote:
      path: src/Integration/src/IntegrationBase/Support/IntegrationMessageBuilder.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: WithPayload
    path: ../Steeltoe/src/Integration/src/IntegrationBase/Support/IntegrationMessageBuilder.cs
    startLine: 34
  assemblies:
  - Steeltoe.Integration.IntegrationBase
  namespace: Steeltoe.Integration.Support
  syntax:
    content: public static IntegrationMessageBuilder<T> WithPayload(T payload)
    parameters:
    - id: payload
      type: '{T}'
    return:
      type: Steeltoe.Integration.Support.IntegrationMessageBuilder`1
    content.vb: Public Shared Function WithPayload(payload As T) As IntegrationMessageBuilder(Of T)
  overload: Steeltoe.Integration.Support.IntegrationMessageBuilder`1.WithPayload*
  nameWithType.vb: IntegrationMessageBuilder(Of T).WithPayload(T)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Steeltoe.Integration.Support.IntegrationMessageBuilder(Of T).WithPayload(T)
- uid: Steeltoe.Integration.Support.IntegrationMessageBuilder`1.SetHeader(System.String,System.Object)
  commentId: M:Steeltoe.Integration.Support.IntegrationMessageBuilder`1.SetHeader(System.String,System.Object)
  id: SetHeader(System.String,System.Object)
  parent: Steeltoe.Integration.Support.IntegrationMessageBuilder`1
  langs:
  - csharp
  - vb
  name: SetHeader(String, Object)
  nameWithType: IntegrationMessageBuilder<T>.SetHeader(String, Object)
  fullName: Steeltoe.Integration.Support.IntegrationMessageBuilder<T>.SetHeader(System.String, System.Object)
  type: Method
  source:
    remote:
      path: src/Integration/src/IntegrationBase/Support/IntegrationMessageBuilder.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: SetHeader
    path: ../Steeltoe/src/Integration/src/IntegrationBase/Support/IntegrationMessageBuilder.cs
    startLine: 39
  assemblies:
  - Steeltoe.Integration.IntegrationBase
  namespace: Steeltoe.Integration.Support
  syntax:
    content: public IMessageBuilder<T> SetHeader(string headerName, object headerValue)
    parameters:
    - id: headerName
      type: System.String
    - id: headerValue
      type: System.Object
    return:
      type: Steeltoe.Integration.Support.IMessageBuilder{{T}}
    content.vb: Public Function SetHeader(headerName As String, headerValue As Object) As IMessageBuilder(Of T)
  overload: Steeltoe.Integration.Support.IntegrationMessageBuilder`1.SetHeader*
  implements:
  - Steeltoe.Integration.Support.IMessageBuilder{{T}}.SetHeader(System.String,System.Object)
  nameWithType.vb: IntegrationMessageBuilder(Of T).SetHeader(String, Object)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Steeltoe.Integration.Support.IntegrationMessageBuilder(Of T).SetHeader(System.String, System.Object)
- uid: Steeltoe.Integration.Support.IntegrationMessageBuilder`1.SetHeaderIfAbsent(System.String,System.Object)
  commentId: M:Steeltoe.Integration.Support.IntegrationMessageBuilder`1.SetHeaderIfAbsent(System.String,System.Object)
  id: SetHeaderIfAbsent(System.String,System.Object)
  parent: Steeltoe.Integration.Support.IntegrationMessageBuilder`1
  langs:
  - csharp
  - vb
  name: SetHeaderIfAbsent(String, Object)
  nameWithType: IntegrationMessageBuilder<T>.SetHeaderIfAbsent(String, Object)
  fullName: Steeltoe.Integration.Support.IntegrationMessageBuilder<T>.SetHeaderIfAbsent(System.String, System.Object)
  type: Method
  source:
    remote:
      path: src/Integration/src/IntegrationBase/Support/IntegrationMessageBuilder.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: SetHeaderIfAbsent
    path: ../Steeltoe/src/Integration/src/IntegrationBase/Support/IntegrationMessageBuilder.cs
    startLine: 45
  assemblies:
  - Steeltoe.Integration.IntegrationBase
  namespace: Steeltoe.Integration.Support
  syntax:
    content: public IMessageBuilder<T> SetHeaderIfAbsent(string headerName, object headerValue)
    parameters:
    - id: headerName
      type: System.String
    - id: headerValue
      type: System.Object
    return:
      type: Steeltoe.Integration.Support.IMessageBuilder{{T}}
    content.vb: Public Function SetHeaderIfAbsent(headerName As String, headerValue As Object) As IMessageBuilder(Of T)
  overload: Steeltoe.Integration.Support.IntegrationMessageBuilder`1.SetHeaderIfAbsent*
  implements:
  - Steeltoe.Integration.Support.IMessageBuilder{{T}}.SetHeaderIfAbsent(System.String,System.Object)
  nameWithType.vb: IntegrationMessageBuilder(Of T).SetHeaderIfAbsent(String, Object)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Steeltoe.Integration.Support.IntegrationMessageBuilder(Of T).SetHeaderIfAbsent(System.String, System.Object)
- uid: Steeltoe.Integration.Support.IntegrationMessageBuilder`1.RemoveHeaders(System.String[])
  commentId: M:Steeltoe.Integration.Support.IntegrationMessageBuilder`1.RemoveHeaders(System.String[])
  id: RemoveHeaders(System.String[])
  parent: Steeltoe.Integration.Support.IntegrationMessageBuilder`1
  langs:
  - csharp
  - vb
  name: RemoveHeaders(String[])
  nameWithType: IntegrationMessageBuilder<T>.RemoveHeaders(String[])
  fullName: Steeltoe.Integration.Support.IntegrationMessageBuilder<T>.RemoveHeaders(System.String[])
  type: Method
  source:
    remote:
      path: src/Integration/src/IntegrationBase/Support/IntegrationMessageBuilder.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: RemoveHeaders
    path: ../Steeltoe/src/Integration/src/IntegrationBase/Support/IntegrationMessageBuilder.cs
    startLine: 51
  assemblies:
  - Steeltoe.Integration.IntegrationBase
  namespace: Steeltoe.Integration.Support
  syntax:
    content: public IMessageBuilder<T> RemoveHeaders(params string[] headerPatterns)
    parameters:
    - id: headerPatterns
      type: System.String[]
    return:
      type: Steeltoe.Integration.Support.IMessageBuilder{{T}}
    content.vb: Public Function RemoveHeaders(ParamArray headerPatterns As String()) As IMessageBuilder(Of T)
  overload: Steeltoe.Integration.Support.IntegrationMessageBuilder`1.RemoveHeaders*
  implements:
  - Steeltoe.Integration.Support.IMessageBuilder{{T}}.RemoveHeaders(System.String[])
  nameWithType.vb: IntegrationMessageBuilder(Of T).RemoveHeaders(String())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Steeltoe.Integration.Support.IntegrationMessageBuilder(Of T).RemoveHeaders(System.String())
  name.vb: RemoveHeaders(String())
- uid: Steeltoe.Integration.Support.IntegrationMessageBuilder`1.RemoveHeader(System.String)
  commentId: M:Steeltoe.Integration.Support.IntegrationMessageBuilder`1.RemoveHeader(System.String)
  id: RemoveHeader(System.String)
  parent: Steeltoe.Integration.Support.IntegrationMessageBuilder`1
  langs:
  - csharp
  - vb
  name: RemoveHeader(String)
  nameWithType: IntegrationMessageBuilder<T>.RemoveHeader(String)
  fullName: Steeltoe.Integration.Support.IntegrationMessageBuilder<T>.RemoveHeader(System.String)
  type: Method
  source:
    remote:
      path: src/Integration/src/IntegrationBase/Support/IntegrationMessageBuilder.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: RemoveHeader
    path: ../Steeltoe/src/Integration/src/IntegrationBase/Support/IntegrationMessageBuilder.cs
    startLine: 57
  assemblies:
  - Steeltoe.Integration.IntegrationBase
  namespace: Steeltoe.Integration.Support
  syntax:
    content: public IMessageBuilder<T> RemoveHeader(string headerName)
    parameters:
    - id: headerName
      type: System.String
    return:
      type: Steeltoe.Integration.Support.IMessageBuilder{{T}}
    content.vb: Public Function RemoveHeader(headerName As String) As IMessageBuilder(Of T)
  overload: Steeltoe.Integration.Support.IntegrationMessageBuilder`1.RemoveHeader*
  implements:
  - Steeltoe.Integration.Support.IMessageBuilder{{T}}.RemoveHeader(System.String)
  nameWithType.vb: IntegrationMessageBuilder(Of T).RemoveHeader(String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Steeltoe.Integration.Support.IntegrationMessageBuilder(Of T).RemoveHeader(System.String)
- uid: Steeltoe.Integration.Support.IntegrationMessageBuilder`1.CopyHeaders(System.Collections.Generic.IDictionary{System.String,System.Object})
  commentId: M:Steeltoe.Integration.Support.IntegrationMessageBuilder`1.CopyHeaders(System.Collections.Generic.IDictionary{System.String,System.Object})
  id: CopyHeaders(System.Collections.Generic.IDictionary{System.String,System.Object})
  parent: Steeltoe.Integration.Support.IntegrationMessageBuilder`1
  langs:
  - csharp
  - vb
  name: CopyHeaders(IDictionary<String, Object>)
  nameWithType: IntegrationMessageBuilder<T>.CopyHeaders(IDictionary<String, Object>)
  fullName: Steeltoe.Integration.Support.IntegrationMessageBuilder<T>.CopyHeaders(System.Collections.Generic.IDictionary<System.String, System.Object>)
  type: Method
  source:
    remote:
      path: src/Integration/src/IntegrationBase/Support/IntegrationMessageBuilder.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: CopyHeaders
    path: ../Steeltoe/src/Integration/src/IntegrationBase/Support/IntegrationMessageBuilder.cs
    startLine: 63
  assemblies:
  - Steeltoe.Integration.IntegrationBase
  namespace: Steeltoe.Integration.Support
  syntax:
    content: public IMessageBuilder<T> CopyHeaders(IDictionary<string, object> headersToCopy)
    parameters:
    - id: headersToCopy
      type: System.Collections.Generic.IDictionary{System.String,System.Object}
    return:
      type: Steeltoe.Integration.Support.IMessageBuilder{{T}}
    content.vb: Public Function CopyHeaders(headersToCopy As IDictionary(Of String, Object)) As IMessageBuilder(Of T)
  overload: Steeltoe.Integration.Support.IntegrationMessageBuilder`1.CopyHeaders*
  implements:
  - Steeltoe.Integration.Support.IMessageBuilder{{T}}.CopyHeaders(System.Collections.Generic.IDictionary{System.String,System.Object})
  nameWithType.vb: IntegrationMessageBuilder(Of T).CopyHeaders(IDictionary(Of String, Object))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Steeltoe.Integration.Support.IntegrationMessageBuilder(Of T).CopyHeaders(System.Collections.Generic.IDictionary(Of System.String, System.Object))
  name.vb: CopyHeaders(IDictionary(Of String, Object))
- uid: Steeltoe.Integration.Support.IntegrationMessageBuilder`1.CopyHeadersIfAbsent(System.Collections.Generic.IDictionary{System.String,System.Object})
  commentId: M:Steeltoe.Integration.Support.IntegrationMessageBuilder`1.CopyHeadersIfAbsent(System.Collections.Generic.IDictionary{System.String,System.Object})
  id: CopyHeadersIfAbsent(System.Collections.Generic.IDictionary{System.String,System.Object})
  parent: Steeltoe.Integration.Support.IntegrationMessageBuilder`1
  langs:
  - csharp
  - vb
  name: CopyHeadersIfAbsent(IDictionary<String, Object>)
  nameWithType: IntegrationMessageBuilder<T>.CopyHeadersIfAbsent(IDictionary<String, Object>)
  fullName: Steeltoe.Integration.Support.IntegrationMessageBuilder<T>.CopyHeadersIfAbsent(System.Collections.Generic.IDictionary<System.String, System.Object>)
  type: Method
  source:
    remote:
      path: src/Integration/src/IntegrationBase/Support/IntegrationMessageBuilder.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: CopyHeadersIfAbsent
    path: ../Steeltoe/src/Integration/src/IntegrationBase/Support/IntegrationMessageBuilder.cs
    startLine: 69
  assemblies:
  - Steeltoe.Integration.IntegrationBase
  namespace: Steeltoe.Integration.Support
  syntax:
    content: public IMessageBuilder<T> CopyHeadersIfAbsent(IDictionary<string, object> headersToCopy)
    parameters:
    - id: headersToCopy
      type: System.Collections.Generic.IDictionary{System.String,System.Object}
    return:
      type: Steeltoe.Integration.Support.IMessageBuilder{{T}}
    content.vb: Public Function CopyHeadersIfAbsent(headersToCopy As IDictionary(Of String, Object)) As IMessageBuilder(Of T)
  overload: Steeltoe.Integration.Support.IntegrationMessageBuilder`1.CopyHeadersIfAbsent*
  implements:
  - Steeltoe.Integration.Support.IMessageBuilder{{T}}.CopyHeadersIfAbsent(System.Collections.Generic.IDictionary{System.String,System.Object})
  nameWithType.vb: IntegrationMessageBuilder(Of T).CopyHeadersIfAbsent(IDictionary(Of String, Object))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Steeltoe.Integration.Support.IntegrationMessageBuilder(Of T).CopyHeadersIfAbsent(System.Collections.Generic.IDictionary(Of System.String, System.Object))
  name.vb: CopyHeadersIfAbsent(IDictionary(Of String, Object))
- uid: Steeltoe.Integration.Support.IntegrationMessageBuilder`1.ReadOnlyHeaders(System.Collections.Generic.IList{System.String})
  commentId: M:Steeltoe.Integration.Support.IntegrationMessageBuilder`1.ReadOnlyHeaders(System.Collections.Generic.IList{System.String})
  id: ReadOnlyHeaders(System.Collections.Generic.IList{System.String})
  parent: Steeltoe.Integration.Support.IntegrationMessageBuilder`1
  langs:
  - csharp
  - vb
  name: ReadOnlyHeaders(IList<String>)
  nameWithType: IntegrationMessageBuilder<T>.ReadOnlyHeaders(IList<String>)
  fullName: Steeltoe.Integration.Support.IntegrationMessageBuilder<T>.ReadOnlyHeaders(System.Collections.Generic.IList<System.String>)
  type: Method
  source:
    remote:
      path: src/Integration/src/IntegrationBase/Support/IntegrationMessageBuilder.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: ReadOnlyHeaders
    path: ../Steeltoe/src/Integration/src/IntegrationBase/Support/IntegrationMessageBuilder.cs
    startLine: 75
  assemblies:
  - Steeltoe.Integration.IntegrationBase
  namespace: Steeltoe.Integration.Support
  syntax:
    content: public IMessageBuilder<T> ReadOnlyHeaders(IList<string> readOnlyHeaders)
    parameters:
    - id: readOnlyHeaders
      type: System.Collections.Generic.IList{System.String}
    return:
      type: Steeltoe.Integration.Support.IMessageBuilder{{T}}
    content.vb: Public Function ReadOnlyHeaders(readOnlyHeaders As IList(Of String)) As IMessageBuilder(Of T)
  overload: Steeltoe.Integration.Support.IntegrationMessageBuilder`1.ReadOnlyHeaders*
  nameWithType.vb: IntegrationMessageBuilder(Of T).ReadOnlyHeaders(IList(Of String))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Steeltoe.Integration.Support.IntegrationMessageBuilder(Of T).ReadOnlyHeaders(System.Collections.Generic.IList(Of System.String))
  name.vb: ReadOnlyHeaders(IList(Of String))
- uid: Steeltoe.Integration.Support.IntegrationMessageBuilder`1.Build
  commentId: M:Steeltoe.Integration.Support.IntegrationMessageBuilder`1.Build
  id: Build
  parent: Steeltoe.Integration.Support.IntegrationMessageBuilder`1
  langs:
  - csharp
  - vb
  name: Build()
  nameWithType: IntegrationMessageBuilder<T>.Build()
  fullName: Steeltoe.Integration.Support.IntegrationMessageBuilder<T>.Build()
  type: Method
  source:
    remote:
      path: src/Integration/src/IntegrationBase/Support/IntegrationMessageBuilder.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Build
    path: ../Steeltoe/src/Integration/src/IntegrationBase/Support/IntegrationMessageBuilder.cs
    startLine: 81
  assemblies:
  - Steeltoe.Integration.IntegrationBase
  namespace: Steeltoe.Integration.Support
  syntax:
    content: public IMessage<T> Build()
    return:
      type: Steeltoe.Messaging.IMessage{{T}}
    content.vb: Public Function Build As IMessage(Of T)
  overload: Steeltoe.Integration.Support.IntegrationMessageBuilder`1.Build*
  implements:
  - Steeltoe.Integration.Support.IMessageBuilder{{T}}.Build
  nameWithType.vb: IntegrationMessageBuilder(Of T).Build()
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Steeltoe.Integration.Support.IntegrationMessageBuilder(Of T).Build()
- uid: Steeltoe.Integration.Support.IntegrationMessageBuilder`1.SetExpirationDate(System.Int64)
  commentId: M:Steeltoe.Integration.Support.IntegrationMessageBuilder`1.SetExpirationDate(System.Int64)
  id: SetExpirationDate(System.Int64)
  parent: Steeltoe.Integration.Support.IntegrationMessageBuilder`1
  langs:
  - csharp
  - vb
  name: SetExpirationDate(Int64)
  nameWithType: IntegrationMessageBuilder<T>.SetExpirationDate(Int64)
  fullName: Steeltoe.Integration.Support.IntegrationMessageBuilder<T>.SetExpirationDate(System.Int64)
  type: Method
  source:
    remote:
      path: src/Integration/src/IntegrationBase/Support/IntegrationMessageBuilder.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: SetExpirationDate
    path: ../Steeltoe/src/Integration/src/IntegrationBase/Support/IntegrationMessageBuilder.cs
    startLine: 97
  assemblies:
  - Steeltoe.Integration.IntegrationBase
  namespace: Steeltoe.Integration.Support
  syntax:
    content: public IMessageBuilder<T> SetExpirationDate(long expirationDate)
    parameters:
    - id: expirationDate
      type: System.Int64
    return:
      type: Steeltoe.Integration.Support.IMessageBuilder{{T}}
    content.vb: Public Function SetExpirationDate(expirationDate As Long) As IMessageBuilder(Of T)
  overload: Steeltoe.Integration.Support.IntegrationMessageBuilder`1.SetExpirationDate*
  implements:
  - Steeltoe.Integration.Support.IMessageBuilder{{T}}.SetExpirationDate(System.Int64)
  nameWithType.vb: IntegrationMessageBuilder(Of T).SetExpirationDate(Int64)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Steeltoe.Integration.Support.IntegrationMessageBuilder(Of T).SetExpirationDate(System.Int64)
- uid: Steeltoe.Integration.Support.IntegrationMessageBuilder`1.SetExpirationDate(System.Nullable{System.DateTime})
  commentId: M:Steeltoe.Integration.Support.IntegrationMessageBuilder`1.SetExpirationDate(System.Nullable{System.DateTime})
  id: SetExpirationDate(System.Nullable{System.DateTime})
  parent: Steeltoe.Integration.Support.IntegrationMessageBuilder`1
  langs:
  - csharp
  - vb
  name: SetExpirationDate(Nullable<DateTime>)
  nameWithType: IntegrationMessageBuilder<T>.SetExpirationDate(Nullable<DateTime>)
  fullName: Steeltoe.Integration.Support.IntegrationMessageBuilder<T>.SetExpirationDate(System.Nullable<System.DateTime>)
  type: Method
  source:
    remote:
      path: src/Integration/src/IntegrationBase/Support/IntegrationMessageBuilder.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: SetExpirationDate
    path: ../Steeltoe/src/Integration/src/IntegrationBase/Support/IntegrationMessageBuilder.cs
    startLine: 103
  assemblies:
  - Steeltoe.Integration.IntegrationBase
  namespace: Steeltoe.Integration.Support
  syntax:
    content: public IMessageBuilder<T> SetExpirationDate(DateTime? expirationDate)
    parameters:
    - id: expirationDate
      type: System.Nullable{System.DateTime}
    return:
      type: Steeltoe.Integration.Support.IMessageBuilder{{T}}
    content.vb: Public Function SetExpirationDate(expirationDate As Date?) As IMessageBuilder(Of T)
  overload: Steeltoe.Integration.Support.IntegrationMessageBuilder`1.SetExpirationDate*
  implements:
  - Steeltoe.Integration.Support.IMessageBuilder{{T}}.SetExpirationDate(System.Nullable{System.DateTime})
  nameWithType.vb: IntegrationMessageBuilder(Of T).SetExpirationDate(Nullable(Of DateTime))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Steeltoe.Integration.Support.IntegrationMessageBuilder(Of T).SetExpirationDate(System.Nullable(Of System.DateTime))
  name.vb: SetExpirationDate(Nullable(Of DateTime))
- uid: Steeltoe.Integration.Support.IntegrationMessageBuilder`1.SetCorrelationId(System.Object)
  commentId: M:Steeltoe.Integration.Support.IntegrationMessageBuilder`1.SetCorrelationId(System.Object)
  id: SetCorrelationId(System.Object)
  parent: Steeltoe.Integration.Support.IntegrationMessageBuilder`1
  langs:
  - csharp
  - vb
  name: SetCorrelationId(Object)
  nameWithType: IntegrationMessageBuilder<T>.SetCorrelationId(Object)
  fullName: Steeltoe.Integration.Support.IntegrationMessageBuilder<T>.SetCorrelationId(System.Object)
  type: Method
  source:
    remote:
      path: src/Integration/src/IntegrationBase/Support/IntegrationMessageBuilder.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: SetCorrelationId
    path: ../Steeltoe/src/Integration/src/IntegrationBase/Support/IntegrationMessageBuilder.cs
    startLine: 109
  assemblies:
  - Steeltoe.Integration.IntegrationBase
  namespace: Steeltoe.Integration.Support
  syntax:
    content: public IMessageBuilder<T> SetCorrelationId(object correlationId)
    parameters:
    - id: correlationId
      type: System.Object
    return:
      type: Steeltoe.Integration.Support.IMessageBuilder{{T}}
    content.vb: Public Function SetCorrelationId(correlationId As Object) As IMessageBuilder(Of T)
  overload: Steeltoe.Integration.Support.IntegrationMessageBuilder`1.SetCorrelationId*
  implements:
  - Steeltoe.Integration.Support.IMessageBuilder{{T}}.SetCorrelationId(System.Object)
  nameWithType.vb: IntegrationMessageBuilder(Of T).SetCorrelationId(Object)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Steeltoe.Integration.Support.IntegrationMessageBuilder(Of T).SetCorrelationId(System.Object)
- uid: Steeltoe.Integration.Support.IntegrationMessageBuilder`1.PushSequenceDetails(System.Object,System.Int32,System.Int32)
  commentId: M:Steeltoe.Integration.Support.IntegrationMessageBuilder`1.PushSequenceDetails(System.Object,System.Int32,System.Int32)
  id: PushSequenceDetails(System.Object,System.Int32,System.Int32)
  parent: Steeltoe.Integration.Support.IntegrationMessageBuilder`1
  langs:
  - csharp
  - vb
  name: PushSequenceDetails(Object, Int32, Int32)
  nameWithType: IntegrationMessageBuilder<T>.PushSequenceDetails(Object, Int32, Int32)
  fullName: Steeltoe.Integration.Support.IntegrationMessageBuilder<T>.PushSequenceDetails(System.Object, System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: src/Integration/src/IntegrationBase/Support/IntegrationMessageBuilder.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: PushSequenceDetails
    path: ../Steeltoe/src/Integration/src/IntegrationBase/Support/IntegrationMessageBuilder.cs
    startLine: 115
  assemblies:
  - Steeltoe.Integration.IntegrationBase
  namespace: Steeltoe.Integration.Support
  syntax:
    content: public IMessageBuilder<T> PushSequenceDetails(object correlationId, int sequenceNumber, int sequenceSize)
    parameters:
    - id: correlationId
      type: System.Object
    - id: sequenceNumber
      type: System.Int32
    - id: sequenceSize
      type: System.Int32
    return:
      type: Steeltoe.Integration.Support.IMessageBuilder{{T}}
    content.vb: Public Function PushSequenceDetails(correlationId As Object, sequenceNumber As Integer, sequenceSize As Integer) As IMessageBuilder(Of T)
  overload: Steeltoe.Integration.Support.IntegrationMessageBuilder`1.PushSequenceDetails*
  implements:
  - Steeltoe.Integration.Support.IMessageBuilder{{T}}.PushSequenceDetails(System.Object,System.Int32,System.Int32)
  nameWithType.vb: IntegrationMessageBuilder(Of T).PushSequenceDetails(Object, Int32, Int32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Steeltoe.Integration.Support.IntegrationMessageBuilder(Of T).PushSequenceDetails(System.Object, System.Int32, System.Int32)
- uid: Steeltoe.Integration.Support.IntegrationMessageBuilder`1.PopSequenceDetails
  commentId: M:Steeltoe.Integration.Support.IntegrationMessageBuilder`1.PopSequenceDetails
  id: PopSequenceDetails
  parent: Steeltoe.Integration.Support.IntegrationMessageBuilder`1
  langs:
  - csharp
  - vb
  name: PopSequenceDetails()
  nameWithType: IntegrationMessageBuilder<T>.PopSequenceDetails()
  fullName: Steeltoe.Integration.Support.IntegrationMessageBuilder<T>.PopSequenceDetails()
  type: Method
  source:
    remote:
      path: src/Integration/src/IntegrationBase/Support/IntegrationMessageBuilder.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: PopSequenceDetails
    path: ../Steeltoe/src/Integration/src/IntegrationBase/Support/IntegrationMessageBuilder.cs
    startLine: 121
  assemblies:
  - Steeltoe.Integration.IntegrationBase
  namespace: Steeltoe.Integration.Support
  syntax:
    content: public IMessageBuilder<T> PopSequenceDetails()
    return:
      type: Steeltoe.Integration.Support.IMessageBuilder{{T}}
    content.vb: Public Function PopSequenceDetails As IMessageBuilder(Of T)
  overload: Steeltoe.Integration.Support.IntegrationMessageBuilder`1.PopSequenceDetails*
  implements:
  - Steeltoe.Integration.Support.IMessageBuilder{{T}}.PopSequenceDetails
  nameWithType.vb: IntegrationMessageBuilder(Of T).PopSequenceDetails()
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Steeltoe.Integration.Support.IntegrationMessageBuilder(Of T).PopSequenceDetails()
- uid: Steeltoe.Integration.Support.IntegrationMessageBuilder`1.SetReplyChannel(Steeltoe.Messaging.IMessageChannel)
  commentId: M:Steeltoe.Integration.Support.IntegrationMessageBuilder`1.SetReplyChannel(Steeltoe.Messaging.IMessageChannel)
  id: SetReplyChannel(Steeltoe.Messaging.IMessageChannel)
  parent: Steeltoe.Integration.Support.IntegrationMessageBuilder`1
  langs:
  - csharp
  - vb
  name: SetReplyChannel(IMessageChannel)
  nameWithType: IntegrationMessageBuilder<T>.SetReplyChannel(IMessageChannel)
  fullName: Steeltoe.Integration.Support.IntegrationMessageBuilder<T>.SetReplyChannel(Steeltoe.Messaging.IMessageChannel)
  type: Method
  source:
    remote:
      path: src/Integration/src/IntegrationBase/Support/IntegrationMessageBuilder.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: SetReplyChannel
    path: ../Steeltoe/src/Integration/src/IntegrationBase/Support/IntegrationMessageBuilder.cs
    startLine: 127
  assemblies:
  - Steeltoe.Integration.IntegrationBase
  namespace: Steeltoe.Integration.Support
  syntax:
    content: public IMessageBuilder<T> SetReplyChannel(IMessageChannel replyChannel)
    parameters:
    - id: replyChannel
      type: Steeltoe.Messaging.IMessageChannel
    return:
      type: Steeltoe.Integration.Support.IMessageBuilder{{T}}
    content.vb: Public Function SetReplyChannel(replyChannel As IMessageChannel) As IMessageBuilder(Of T)
  overload: Steeltoe.Integration.Support.IntegrationMessageBuilder`1.SetReplyChannel*
  implements:
  - Steeltoe.Integration.Support.IMessageBuilder{{T}}.SetReplyChannel(Steeltoe.Messaging.IMessageChannel)
  nameWithType.vb: IntegrationMessageBuilder(Of T).SetReplyChannel(IMessageChannel)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Steeltoe.Integration.Support.IntegrationMessageBuilder(Of T).SetReplyChannel(Steeltoe.Messaging.IMessageChannel)
- uid: Steeltoe.Integration.Support.IntegrationMessageBuilder`1.SetReplyChannelName(System.String)
  commentId: M:Steeltoe.Integration.Support.IntegrationMessageBuilder`1.SetReplyChannelName(System.String)
  id: SetReplyChannelName(System.String)
  parent: Steeltoe.Integration.Support.IntegrationMessageBuilder`1
  langs:
  - csharp
  - vb
  name: SetReplyChannelName(String)
  nameWithType: IntegrationMessageBuilder<T>.SetReplyChannelName(String)
  fullName: Steeltoe.Integration.Support.IntegrationMessageBuilder<T>.SetReplyChannelName(System.String)
  type: Method
  source:
    remote:
      path: src/Integration/src/IntegrationBase/Support/IntegrationMessageBuilder.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: SetReplyChannelName
    path: ../Steeltoe/src/Integration/src/IntegrationBase/Support/IntegrationMessageBuilder.cs
    startLine: 133
  assemblies:
  - Steeltoe.Integration.IntegrationBase
  namespace: Steeltoe.Integration.Support
  syntax:
    content: public IMessageBuilder<T> SetReplyChannelName(string replyChannelName)
    parameters:
    - id: replyChannelName
      type: System.String
    return:
      type: Steeltoe.Integration.Support.IMessageBuilder{{T}}
    content.vb: Public Function SetReplyChannelName(replyChannelName As String) As IMessageBuilder(Of T)
  overload: Steeltoe.Integration.Support.IntegrationMessageBuilder`1.SetReplyChannelName*
  implements:
  - Steeltoe.Integration.Support.IMessageBuilder{{T}}.SetReplyChannelName(System.String)
  nameWithType.vb: IntegrationMessageBuilder(Of T).SetReplyChannelName(String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Steeltoe.Integration.Support.IntegrationMessageBuilder(Of T).SetReplyChannelName(System.String)
- uid: Steeltoe.Integration.Support.IntegrationMessageBuilder`1.SetErrorChannel(Steeltoe.Messaging.IMessageChannel)
  commentId: M:Steeltoe.Integration.Support.IntegrationMessageBuilder`1.SetErrorChannel(Steeltoe.Messaging.IMessageChannel)
  id: SetErrorChannel(Steeltoe.Messaging.IMessageChannel)
  parent: Steeltoe.Integration.Support.IntegrationMessageBuilder`1
  langs:
  - csharp
  - vb
  name: SetErrorChannel(IMessageChannel)
  nameWithType: IntegrationMessageBuilder<T>.SetErrorChannel(IMessageChannel)
  fullName: Steeltoe.Integration.Support.IntegrationMessageBuilder<T>.SetErrorChannel(Steeltoe.Messaging.IMessageChannel)
  type: Method
  source:
    remote:
      path: src/Integration/src/IntegrationBase/Support/IntegrationMessageBuilder.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: SetErrorChannel
    path: ../Steeltoe/src/Integration/src/IntegrationBase/Support/IntegrationMessageBuilder.cs
    startLine: 139
  assemblies:
  - Steeltoe.Integration.IntegrationBase
  namespace: Steeltoe.Integration.Support
  syntax:
    content: public IMessageBuilder<T> SetErrorChannel(IMessageChannel errorChannel)
    parameters:
    - id: errorChannel
      type: Steeltoe.Messaging.IMessageChannel
    return:
      type: Steeltoe.Integration.Support.IMessageBuilder{{T}}
    content.vb: Public Function SetErrorChannel(errorChannel As IMessageChannel) As IMessageBuilder(Of T)
  overload: Steeltoe.Integration.Support.IntegrationMessageBuilder`1.SetErrorChannel*
  implements:
  - Steeltoe.Integration.Support.IMessageBuilder{{T}}.SetErrorChannel(Steeltoe.Messaging.IMessageChannel)
  nameWithType.vb: IntegrationMessageBuilder(Of T).SetErrorChannel(IMessageChannel)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Steeltoe.Integration.Support.IntegrationMessageBuilder(Of T).SetErrorChannel(Steeltoe.Messaging.IMessageChannel)
- uid: Steeltoe.Integration.Support.IntegrationMessageBuilder`1.SetErrorChannelName(System.String)
  commentId: M:Steeltoe.Integration.Support.IntegrationMessageBuilder`1.SetErrorChannelName(System.String)
  id: SetErrorChannelName(System.String)
  parent: Steeltoe.Integration.Support.IntegrationMessageBuilder`1
  langs:
  - csharp
  - vb
  name: SetErrorChannelName(String)
  nameWithType: IntegrationMessageBuilder<T>.SetErrorChannelName(String)
  fullName: Steeltoe.Integration.Support.IntegrationMessageBuilder<T>.SetErrorChannelName(System.String)
  type: Method
  source:
    remote:
      path: src/Integration/src/IntegrationBase/Support/IntegrationMessageBuilder.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: SetErrorChannelName
    path: ../Steeltoe/src/Integration/src/IntegrationBase/Support/IntegrationMessageBuilder.cs
    startLine: 145
  assemblies:
  - Steeltoe.Integration.IntegrationBase
  namespace: Steeltoe.Integration.Support
  syntax:
    content: public IMessageBuilder<T> SetErrorChannelName(string errorChannelName)
    parameters:
    - id: errorChannelName
      type: System.String
    return:
      type: Steeltoe.Integration.Support.IMessageBuilder{{T}}
    content.vb: Public Function SetErrorChannelName(errorChannelName As String) As IMessageBuilder(Of T)
  overload: Steeltoe.Integration.Support.IntegrationMessageBuilder`1.SetErrorChannelName*
  implements:
  - Steeltoe.Integration.Support.IMessageBuilder{{T}}.SetErrorChannelName(System.String)
  nameWithType.vb: IntegrationMessageBuilder(Of T).SetErrorChannelName(String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Steeltoe.Integration.Support.IntegrationMessageBuilder(Of T).SetErrorChannelName(System.String)
- uid: Steeltoe.Integration.Support.IntegrationMessageBuilder`1.SetSequenceNumber(System.Int32)
  commentId: M:Steeltoe.Integration.Support.IntegrationMessageBuilder`1.SetSequenceNumber(System.Int32)
  id: SetSequenceNumber(System.Int32)
  parent: Steeltoe.Integration.Support.IntegrationMessageBuilder`1
  langs:
  - csharp
  - vb
  name: SetSequenceNumber(Int32)
  nameWithType: IntegrationMessageBuilder<T>.SetSequenceNumber(Int32)
  fullName: Steeltoe.Integration.Support.IntegrationMessageBuilder<T>.SetSequenceNumber(System.Int32)
  type: Method
  source:
    remote:
      path: src/Integration/src/IntegrationBase/Support/IntegrationMessageBuilder.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: SetSequenceNumber
    path: ../Steeltoe/src/Integration/src/IntegrationBase/Support/IntegrationMessageBuilder.cs
    startLine: 151
  assemblies:
  - Steeltoe.Integration.IntegrationBase
  namespace: Steeltoe.Integration.Support
  syntax:
    content: public IMessageBuilder<T> SetSequenceNumber(int sequenceNumber)
    parameters:
    - id: sequenceNumber
      type: System.Int32
    return:
      type: Steeltoe.Integration.Support.IMessageBuilder{{T}}
    content.vb: Public Function SetSequenceNumber(sequenceNumber As Integer) As IMessageBuilder(Of T)
  overload: Steeltoe.Integration.Support.IntegrationMessageBuilder`1.SetSequenceNumber*
  implements:
  - Steeltoe.Integration.Support.IMessageBuilder{{T}}.SetSequenceNumber(System.Int32)
  nameWithType.vb: IntegrationMessageBuilder(Of T).SetSequenceNumber(Int32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Steeltoe.Integration.Support.IntegrationMessageBuilder(Of T).SetSequenceNumber(System.Int32)
- uid: Steeltoe.Integration.Support.IntegrationMessageBuilder`1.SetSequenceSize(System.Int32)
  commentId: M:Steeltoe.Integration.Support.IntegrationMessageBuilder`1.SetSequenceSize(System.Int32)
  id: SetSequenceSize(System.Int32)
  parent: Steeltoe.Integration.Support.IntegrationMessageBuilder`1
  langs:
  - csharp
  - vb
  name: SetSequenceSize(Int32)
  nameWithType: IntegrationMessageBuilder<T>.SetSequenceSize(Int32)
  fullName: Steeltoe.Integration.Support.IntegrationMessageBuilder<T>.SetSequenceSize(System.Int32)
  type: Method
  source:
    remote:
      path: src/Integration/src/IntegrationBase/Support/IntegrationMessageBuilder.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: SetSequenceSize
    path: ../Steeltoe/src/Integration/src/IntegrationBase/Support/IntegrationMessageBuilder.cs
    startLine: 157
  assemblies:
  - Steeltoe.Integration.IntegrationBase
  namespace: Steeltoe.Integration.Support
  syntax:
    content: public IMessageBuilder<T> SetSequenceSize(int sequenceSize)
    parameters:
    - id: sequenceSize
      type: System.Int32
    return:
      type: Steeltoe.Integration.Support.IMessageBuilder{{T}}
    content.vb: Public Function SetSequenceSize(sequenceSize As Integer) As IMessageBuilder(Of T)
  overload: Steeltoe.Integration.Support.IntegrationMessageBuilder`1.SetSequenceSize*
  implements:
  - Steeltoe.Integration.Support.IMessageBuilder{{T}}.SetSequenceSize(System.Int32)
  nameWithType.vb: IntegrationMessageBuilder(Of T).SetSequenceSize(Int32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Steeltoe.Integration.Support.IntegrationMessageBuilder(Of T).SetSequenceSize(System.Int32)
- uid: Steeltoe.Integration.Support.IntegrationMessageBuilder`1.SetPriority(System.Int32)
  commentId: M:Steeltoe.Integration.Support.IntegrationMessageBuilder`1.SetPriority(System.Int32)
  id: SetPriority(System.Int32)
  parent: Steeltoe.Integration.Support.IntegrationMessageBuilder`1
  langs:
  - csharp
  - vb
  name: SetPriority(Int32)
  nameWithType: IntegrationMessageBuilder<T>.SetPriority(Int32)
  fullName: Steeltoe.Integration.Support.IntegrationMessageBuilder<T>.SetPriority(System.Int32)
  type: Method
  source:
    remote:
      path: src/Integration/src/IntegrationBase/Support/IntegrationMessageBuilder.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: SetPriority
    path: ../Steeltoe/src/Integration/src/IntegrationBase/Support/IntegrationMessageBuilder.cs
    startLine: 163
  assemblies:
  - Steeltoe.Integration.IntegrationBase
  namespace: Steeltoe.Integration.Support
  syntax:
    content: public IMessageBuilder<T> SetPriority(int priority)
    parameters:
    - id: priority
      type: System.Int32
    return:
      type: Steeltoe.Integration.Support.IMessageBuilder{{T}}
    content.vb: Public Function SetPriority(priority As Integer) As IMessageBuilder(Of T)
  overload: Steeltoe.Integration.Support.IntegrationMessageBuilder`1.SetPriority*
  implements:
  - Steeltoe.Integration.Support.IMessageBuilder{{T}}.SetPriority(System.Int32)
  nameWithType.vb: IntegrationMessageBuilder(Of T).SetPriority(Int32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Steeltoe.Integration.Support.IntegrationMessageBuilder(Of T).SetPriority(System.Int32)
- uid: Steeltoe.Integration.Support.IntegrationMessageBuilder`1.FilterAndCopyHeadersIfAbsent(System.Collections.Generic.IDictionary{System.String,System.Object},System.String[])
  commentId: M:Steeltoe.Integration.Support.IntegrationMessageBuilder`1.FilterAndCopyHeadersIfAbsent(System.Collections.Generic.IDictionary{System.String,System.Object},System.String[])
  id: FilterAndCopyHeadersIfAbsent(System.Collections.Generic.IDictionary{System.String,System.Object},System.String[])
  parent: Steeltoe.Integration.Support.IntegrationMessageBuilder`1
  langs:
  - csharp
  - vb
  name: FilterAndCopyHeadersIfAbsent(IDictionary<String, Object>, String[])
  nameWithType: IntegrationMessageBuilder<T>.FilterAndCopyHeadersIfAbsent(IDictionary<String, Object>, String[])
  fullName: Steeltoe.Integration.Support.IntegrationMessageBuilder<T>.FilterAndCopyHeadersIfAbsent(System.Collections.Generic.IDictionary<System.String, System.Object>, System.String[])
  type: Method
  source:
    remote:
      path: src/Integration/src/IntegrationBase/Support/IntegrationMessageBuilder.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: FilterAndCopyHeadersIfAbsent
    path: ../Steeltoe/src/Integration/src/IntegrationBase/Support/IntegrationMessageBuilder.cs
    startLine: 169
  assemblies:
  - Steeltoe.Integration.IntegrationBase
  namespace: Steeltoe.Integration.Support
  syntax:
    content: public IMessageBuilder<T> FilterAndCopyHeadersIfAbsent(IDictionary<string, object> headersToCopy, params string[] headerPatternsToFilter)
    parameters:
    - id: headersToCopy
      type: System.Collections.Generic.IDictionary{System.String,System.Object}
    - id: headerPatternsToFilter
      type: System.String[]
    return:
      type: Steeltoe.Integration.Support.IMessageBuilder{{T}}
    content.vb: Public Function FilterAndCopyHeadersIfAbsent(headersToCopy As IDictionary(Of String, Object), ParamArray headerPatternsToFilter As String()) As IMessageBuilder(Of T)
  overload: Steeltoe.Integration.Support.IntegrationMessageBuilder`1.FilterAndCopyHeadersIfAbsent*
  implements:
  - Steeltoe.Integration.Support.IMessageBuilder{{T}}.FilterAndCopyHeadersIfAbsent(System.Collections.Generic.IDictionary{System.String,System.Object},System.String[])
  nameWithType.vb: IntegrationMessageBuilder(Of T).FilterAndCopyHeadersIfAbsent(IDictionary(Of String, Object), String())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Steeltoe.Integration.Support.IntegrationMessageBuilder(Of T).FilterAndCopyHeadersIfAbsent(System.Collections.Generic.IDictionary(Of System.String, System.Object), System.String())
  name.vb: FilterAndCopyHeadersIfAbsent(IDictionary(Of String, Object), String())
references:
- uid: Steeltoe.Integration.Support
  commentId: N:Steeltoe.Integration.Support
  name: Steeltoe.Integration.Support
  nameWithType: Steeltoe.Integration.Support
  fullName: Steeltoe.Integration.Support
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Steeltoe.Integration.Support.AbstractMessageBuilder
  commentId: T:Steeltoe.Integration.Support.AbstractMessageBuilder
  parent: Steeltoe.Integration.Support
  name: AbstractMessageBuilder
  nameWithType: AbstractMessageBuilder
  fullName: Steeltoe.Integration.Support.AbstractMessageBuilder
- uid: Steeltoe.Integration.Support.IntegrationMessageBuilder
  commentId: T:Steeltoe.Integration.Support.IntegrationMessageBuilder
  parent: Steeltoe.Integration.Support
  name: IntegrationMessageBuilder
  nameWithType: IntegrationMessageBuilder
  fullName: Steeltoe.Integration.Support.IntegrationMessageBuilder
- uid: Steeltoe.Integration.Support.IMessageBuilder{{T}}
  commentId: T:Steeltoe.Integration.Support.IMessageBuilder{``0}
  parent: Steeltoe.Integration.Support
  definition: Steeltoe.Integration.Support.IMessageBuilder`1
  name: IMessageBuilder<T>
  nameWithType: IMessageBuilder<T>
  fullName: Steeltoe.Integration.Support.IMessageBuilder<T>
  nameWithType.vb: IMessageBuilder(Of T)
  fullName.vb: Steeltoe.Integration.Support.IMessageBuilder(Of T)
  name.vb: IMessageBuilder(Of T)
  spec.csharp:
  - uid: Steeltoe.Integration.Support.IMessageBuilder`1
    name: IMessageBuilder
    nameWithType: IMessageBuilder
    fullName: Steeltoe.Integration.Support.IMessageBuilder
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Steeltoe.Integration.Support.IMessageBuilder`1
    name: IMessageBuilder
    nameWithType: IMessageBuilder
    fullName: Steeltoe.Integration.Support.IMessageBuilder
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Integration.Support.IMessageBuilder
  commentId: T:Steeltoe.Integration.Support.IMessageBuilder
  parent: Steeltoe.Integration.Support
  name: IMessageBuilder
  nameWithType: IMessageBuilder
  fullName: Steeltoe.Integration.Support.IMessageBuilder
- uid: Steeltoe.Integration.Support.IntegrationMessageBuilder.Headers
  commentId: P:Steeltoe.Integration.Support.IntegrationMessageBuilder.Headers
  parent: Steeltoe.Integration.Support.IntegrationMessageBuilder
  name: Headers
  nameWithType: IntegrationMessageBuilder.Headers
  fullName: Steeltoe.Integration.Support.IntegrationMessageBuilder.Headers
- uid: Steeltoe.Integration.Support.IntegrationMessageBuilder.FromMessage(Steeltoe.Messaging.IMessage)
  commentId: M:Steeltoe.Integration.Support.IntegrationMessageBuilder.FromMessage(Steeltoe.Messaging.IMessage)
  parent: Steeltoe.Integration.Support.IntegrationMessageBuilder
  name: FromMessage(IMessage)
  nameWithType: IntegrationMessageBuilder.FromMessage(IMessage)
  fullName: Steeltoe.Integration.Support.IntegrationMessageBuilder.FromMessage(Steeltoe.Messaging.IMessage)
  spec.csharp:
  - uid: Steeltoe.Integration.Support.IntegrationMessageBuilder.FromMessage(Steeltoe.Messaging.IMessage)
    name: FromMessage
    nameWithType: IntegrationMessageBuilder.FromMessage
    fullName: Steeltoe.Integration.Support.IntegrationMessageBuilder.FromMessage
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Integration.Support.IntegrationMessageBuilder.FromMessage(Steeltoe.Messaging.IMessage)
    name: FromMessage
    nameWithType: IntegrationMessageBuilder.FromMessage
    fullName: Steeltoe.Integration.Support.IntegrationMessageBuilder.FromMessage
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Integration.Support.IntegrationMessageBuilder.WithPayload(System.Object)
  commentId: M:Steeltoe.Integration.Support.IntegrationMessageBuilder.WithPayload(System.Object)
  parent: Steeltoe.Integration.Support.IntegrationMessageBuilder
  isExternal: true
  name: WithPayload(Object)
  nameWithType: IntegrationMessageBuilder.WithPayload(Object)
  fullName: Steeltoe.Integration.Support.IntegrationMessageBuilder.WithPayload(System.Object)
  spec.csharp:
  - uid: Steeltoe.Integration.Support.IntegrationMessageBuilder.WithPayload(System.Object)
    name: WithPayload
    nameWithType: IntegrationMessageBuilder.WithPayload
    fullName: Steeltoe.Integration.Support.IntegrationMessageBuilder.WithPayload
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Integration.Support.IntegrationMessageBuilder.WithPayload(System.Object)
    name: WithPayload
    nameWithType: IntegrationMessageBuilder.WithPayload
    fullName: Steeltoe.Integration.Support.IntegrationMessageBuilder.WithPayload
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Integration.Support.IntegrationMessageBuilder.SequenceDetails
  commentId: P:Steeltoe.Integration.Support.IntegrationMessageBuilder.SequenceDetails
  parent: Steeltoe.Integration.Support.IntegrationMessageBuilder
  name: SequenceDetails
  nameWithType: IntegrationMessageBuilder.SequenceDetails
  fullName: Steeltoe.Integration.Support.IntegrationMessageBuilder.SequenceDetails
- uid: Steeltoe.Integration.Support.IntegrationMessageBuilder.CorrelationId
  commentId: P:Steeltoe.Integration.Support.IntegrationMessageBuilder.CorrelationId
  parent: Steeltoe.Integration.Support.IntegrationMessageBuilder
  name: CorrelationId
  nameWithType: IntegrationMessageBuilder.CorrelationId
  fullName: Steeltoe.Integration.Support.IntegrationMessageBuilder.CorrelationId
- uid: Steeltoe.Integration.Support.IntegrationMessageBuilder.SequenceNumber
  commentId: P:Steeltoe.Integration.Support.IntegrationMessageBuilder.SequenceNumber
  parent: Steeltoe.Integration.Support.IntegrationMessageBuilder
  name: SequenceNumber
  nameWithType: IntegrationMessageBuilder.SequenceNumber
  fullName: Steeltoe.Integration.Support.IntegrationMessageBuilder.SequenceNumber
- uid: Steeltoe.Integration.Support.IntegrationMessageBuilder.SequenceSize
  commentId: P:Steeltoe.Integration.Support.IntegrationMessageBuilder.SequenceSize
  parent: Steeltoe.Integration.Support.IntegrationMessageBuilder
  name: SequenceSize
  nameWithType: IntegrationMessageBuilder.SequenceSize
  fullName: Steeltoe.Integration.Support.IntegrationMessageBuilder.SequenceSize
- uid: Steeltoe.Integration.Support.AbstractMessageBuilder._payload
  commentId: F:Steeltoe.Integration.Support.AbstractMessageBuilder._payload
  parent: Steeltoe.Integration.Support.AbstractMessageBuilder
  name: _payload
  nameWithType: AbstractMessageBuilder._payload
  fullName: Steeltoe.Integration.Support.AbstractMessageBuilder._payload
- uid: Steeltoe.Integration.Support.AbstractMessageBuilder._originalMessage
  commentId: F:Steeltoe.Integration.Support.AbstractMessageBuilder._originalMessage
  parent: Steeltoe.Integration.Support.AbstractMessageBuilder
  name: _originalMessage
  nameWithType: AbstractMessageBuilder._originalMessage
  fullName: Steeltoe.Integration.Support.AbstractMessageBuilder._originalMessage
- uid: Steeltoe.Integration.Support.AbstractMessageBuilder._headerAccessor
  commentId: F:Steeltoe.Integration.Support.AbstractMessageBuilder._headerAccessor
  parent: Steeltoe.Integration.Support.AbstractMessageBuilder
  name: _headerAccessor
  nameWithType: AbstractMessageBuilder._headerAccessor
  fullName: Steeltoe.Integration.Support.AbstractMessageBuilder._headerAccessor
- uid: Steeltoe.Integration.Support.AbstractMessageBuilder._modified
  commentId: F:Steeltoe.Integration.Support.AbstractMessageBuilder._modified
  parent: Steeltoe.Integration.Support.AbstractMessageBuilder
  name: _modified
  nameWithType: AbstractMessageBuilder._modified
  fullName: Steeltoe.Integration.Support.AbstractMessageBuilder._modified
- uid: Steeltoe.Integration.Support.AbstractMessageBuilder._readOnlyHeaders
  commentId: F:Steeltoe.Integration.Support.AbstractMessageBuilder._readOnlyHeaders
  parent: Steeltoe.Integration.Support.AbstractMessageBuilder
  name: _readOnlyHeaders
  nameWithType: AbstractMessageBuilder._readOnlyHeaders
  fullName: Steeltoe.Integration.Support.AbstractMessageBuilder._readOnlyHeaders
- uid: Steeltoe.Integration.Support.AbstractMessageBuilder.ContainsReadOnly(Steeltoe.Messaging.IMessageHeaders)
  commentId: M:Steeltoe.Integration.Support.AbstractMessageBuilder.ContainsReadOnly(Steeltoe.Messaging.IMessageHeaders)
  parent: Steeltoe.Integration.Support.AbstractMessageBuilder
  name: ContainsReadOnly(IMessageHeaders)
  nameWithType: AbstractMessageBuilder.ContainsReadOnly(IMessageHeaders)
  fullName: Steeltoe.Integration.Support.AbstractMessageBuilder.ContainsReadOnly(Steeltoe.Messaging.IMessageHeaders)
  spec.csharp:
  - uid: Steeltoe.Integration.Support.AbstractMessageBuilder.ContainsReadOnly(Steeltoe.Messaging.IMessageHeaders)
    name: ContainsReadOnly
    nameWithType: AbstractMessageBuilder.ContainsReadOnly
    fullName: Steeltoe.Integration.Support.AbstractMessageBuilder.ContainsReadOnly
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.IMessageHeaders
    name: IMessageHeaders
    nameWithType: IMessageHeaders
    fullName: Steeltoe.Messaging.IMessageHeaders
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Integration.Support.AbstractMessageBuilder.ContainsReadOnly(Steeltoe.Messaging.IMessageHeaders)
    name: ContainsReadOnly
    nameWithType: AbstractMessageBuilder.ContainsReadOnly
    fullName: Steeltoe.Integration.Support.AbstractMessageBuilder.ContainsReadOnly
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.IMessageHeaders
    name: IMessageHeaders
    nameWithType: IMessageHeaders
    fullName: Steeltoe.Messaging.IMessageHeaders
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Steeltoe.Integration.Support.IMessageBuilder`1
  commentId: T:Steeltoe.Integration.Support.IMessageBuilder`1
  parent: Steeltoe.Integration.Support
  name: IMessageBuilder<T>
  nameWithType: IMessageBuilder<T>
  fullName: Steeltoe.Integration.Support.IMessageBuilder<T>
  nameWithType.vb: IMessageBuilder(Of T)
  fullName.vb: Steeltoe.Integration.Support.IMessageBuilder(Of T)
  name.vb: IMessageBuilder(Of T)
  spec.csharp:
  - uid: Steeltoe.Integration.Support.IMessageBuilder`1
    name: IMessageBuilder
    nameWithType: IMessageBuilder
    fullName: Steeltoe.Integration.Support.IMessageBuilder
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Steeltoe.Integration.Support.IMessageBuilder`1
    name: IMessageBuilder
    nameWithType: IMessageBuilder
    fullName: Steeltoe.Integration.Support.IMessageBuilder
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Integration.Support.IntegrationMessageBuilder`1.Payload*
  commentId: Overload:Steeltoe.Integration.Support.IntegrationMessageBuilder`1.Payload
  name: Payload
  nameWithType: IntegrationMessageBuilder<T>.Payload
  fullName: Steeltoe.Integration.Support.IntegrationMessageBuilder<T>.Payload
  nameWithType.vb: IntegrationMessageBuilder(Of T).Payload
  fullName.vb: Steeltoe.Integration.Support.IntegrationMessageBuilder(Of T).Payload
- uid: Steeltoe.Integration.Support.IMessageBuilder{{T}}.Payload
  commentId: P:Steeltoe.Integration.Support.IMessageBuilder{`0}.Payload
  parent: Steeltoe.Integration.Support.IMessageBuilder{{T}}
  definition: Steeltoe.Integration.Support.IMessageBuilder`1.Payload
  name: Payload
  nameWithType: IMessageBuilder<T>.Payload
  fullName: Steeltoe.Integration.Support.IMessageBuilder<T>.Payload
  nameWithType.vb: IMessageBuilder(Of T).Payload
  fullName.vb: Steeltoe.Integration.Support.IMessageBuilder(Of T).Payload
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: Steeltoe.Integration.Support.IMessageBuilder`1.Payload
  commentId: P:Steeltoe.Integration.Support.IMessageBuilder`1.Payload
  name: Payload
  nameWithType: IMessageBuilder<T>.Payload
  fullName: Steeltoe.Integration.Support.IMessageBuilder<T>.Payload
  nameWithType.vb: IMessageBuilder(Of T).Payload
  fullName.vb: Steeltoe.Integration.Support.IMessageBuilder(Of T).Payload
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: Steeltoe.Integration.Support.IntegrationMessageBuilder`1.FromMessage*
  commentId: Overload:Steeltoe.Integration.Support.IntegrationMessageBuilder`1.FromMessage
  name: FromMessage
  nameWithType: IntegrationMessageBuilder<T>.FromMessage
  fullName: Steeltoe.Integration.Support.IntegrationMessageBuilder<T>.FromMessage
  nameWithType.vb: IntegrationMessageBuilder(Of T).FromMessage
  fullName.vb: Steeltoe.Integration.Support.IntegrationMessageBuilder(Of T).FromMessage
- uid: Steeltoe.Messaging.IMessage{{T}}
  commentId: T:Steeltoe.Messaging.IMessage{``0}
  parent: Steeltoe.Messaging
  definition: Steeltoe.Messaging.IMessage`1
  name: IMessage<T>
  nameWithType: IMessage<T>
  fullName: Steeltoe.Messaging.IMessage<T>
  nameWithType.vb: IMessage(Of T)
  fullName.vb: Steeltoe.Messaging.IMessage(Of T)
  name.vb: IMessage(Of T)
  spec.csharp:
  - uid: Steeltoe.Messaging.IMessage`1
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Steeltoe.Messaging.IMessage`1
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Integration.Support.IntegrationMessageBuilder`1
  commentId: T:Steeltoe.Integration.Support.IntegrationMessageBuilder`1
  parent: Steeltoe.Integration.Support
  name: IntegrationMessageBuilder<T>
  nameWithType: IntegrationMessageBuilder<T>
  fullName: Steeltoe.Integration.Support.IntegrationMessageBuilder<T>
  nameWithType.vb: IntegrationMessageBuilder(Of T)
  fullName.vb: Steeltoe.Integration.Support.IntegrationMessageBuilder(Of T)
  name.vb: IntegrationMessageBuilder(Of T)
  spec.csharp:
  - uid: Steeltoe.Integration.Support.IntegrationMessageBuilder`1
    name: IntegrationMessageBuilder
    nameWithType: IntegrationMessageBuilder
    fullName: Steeltoe.Integration.Support.IntegrationMessageBuilder
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Steeltoe.Integration.Support.IntegrationMessageBuilder`1
    name: IntegrationMessageBuilder
    nameWithType: IntegrationMessageBuilder
    fullName: Steeltoe.Integration.Support.IntegrationMessageBuilder
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.IMessage`1
  commentId: T:Steeltoe.Messaging.IMessage`1
  name: IMessage<T>
  nameWithType: IMessage<T>
  fullName: Steeltoe.Messaging.IMessage<T>
  nameWithType.vb: IMessage(Of T)
  fullName.vb: Steeltoe.Messaging.IMessage(Of T)
  name.vb: IMessage(Of T)
  spec.csharp:
  - uid: Steeltoe.Messaging.IMessage`1
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Steeltoe.Messaging.IMessage`1
    name: IMessage
    nameWithType: IMessage
    fullName: Steeltoe.Messaging.IMessage
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging
  commentId: N:Steeltoe.Messaging
  name: Steeltoe.Messaging
  nameWithType: Steeltoe.Messaging
  fullName: Steeltoe.Messaging
- uid: Steeltoe.Integration.Support.IntegrationMessageBuilder`1.WithPayload*
  commentId: Overload:Steeltoe.Integration.Support.IntegrationMessageBuilder`1.WithPayload
  name: WithPayload
  nameWithType: IntegrationMessageBuilder<T>.WithPayload
  fullName: Steeltoe.Integration.Support.IntegrationMessageBuilder<T>.WithPayload
  nameWithType.vb: IntegrationMessageBuilder(Of T).WithPayload
  fullName.vb: Steeltoe.Integration.Support.IntegrationMessageBuilder(Of T).WithPayload
- uid: Steeltoe.Integration.Support.IntegrationMessageBuilder`1.SetHeader*
  commentId: Overload:Steeltoe.Integration.Support.IntegrationMessageBuilder`1.SetHeader
  name: SetHeader
  nameWithType: IntegrationMessageBuilder<T>.SetHeader
  fullName: Steeltoe.Integration.Support.IntegrationMessageBuilder<T>.SetHeader
  nameWithType.vb: IntegrationMessageBuilder(Of T).SetHeader
  fullName.vb: Steeltoe.Integration.Support.IntegrationMessageBuilder(Of T).SetHeader
- uid: Steeltoe.Integration.Support.IMessageBuilder{{T}}.SetHeader(System.String,System.Object)
  commentId: M:Steeltoe.Integration.Support.IMessageBuilder{`0}.SetHeader(System.String,System.Object)
  parent: Steeltoe.Integration.Support.IMessageBuilder{{T}}
  definition: Steeltoe.Integration.Support.IMessageBuilder`1.SetHeader(System.String,System.Object)
  name: SetHeader(String, Object)
  nameWithType: IMessageBuilder<T>.SetHeader(String, Object)
  fullName: Steeltoe.Integration.Support.IMessageBuilder<T>.SetHeader(System.String, System.Object)
  nameWithType.vb: IMessageBuilder(Of T).SetHeader(String, Object)
  fullName.vb: Steeltoe.Integration.Support.IMessageBuilder(Of T).SetHeader(System.String, System.Object)
  spec.csharp:
  - uid: Steeltoe.Integration.Support.IMessageBuilder`1.SetHeader(System.String,System.Object)
    name: SetHeader
    nameWithType: IMessageBuilder<T>.SetHeader
    fullName: Steeltoe.Integration.Support.IMessageBuilder<T>.SetHeader
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Integration.Support.IMessageBuilder`1.SetHeader(System.String,System.Object)
    name: SetHeader
    nameWithType: IMessageBuilder(Of T).SetHeader
    fullName: Steeltoe.Integration.Support.IMessageBuilder(Of T).SetHeader
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Steeltoe.Integration.Support.IMessageBuilder`1.SetHeader(System.String,System.Object)
  commentId: M:Steeltoe.Integration.Support.IMessageBuilder`1.SetHeader(System.String,System.Object)
  isExternal: true
  name: SetHeader(String, Object)
  nameWithType: IMessageBuilder<T>.SetHeader(String, Object)
  fullName: Steeltoe.Integration.Support.IMessageBuilder<T>.SetHeader(System.String, System.Object)
  nameWithType.vb: IMessageBuilder(Of T).SetHeader(String, Object)
  fullName.vb: Steeltoe.Integration.Support.IMessageBuilder(Of T).SetHeader(System.String, System.Object)
  spec.csharp:
  - uid: Steeltoe.Integration.Support.IMessageBuilder`1.SetHeader(System.String,System.Object)
    name: SetHeader
    nameWithType: IMessageBuilder<T>.SetHeader
    fullName: Steeltoe.Integration.Support.IMessageBuilder<T>.SetHeader
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Integration.Support.IMessageBuilder`1.SetHeader(System.String,System.Object)
    name: SetHeader
    nameWithType: IMessageBuilder(Of T).SetHeader
    fullName: Steeltoe.Integration.Support.IMessageBuilder(Of T).SetHeader
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Integration.Support.IntegrationMessageBuilder`1.SetHeaderIfAbsent*
  commentId: Overload:Steeltoe.Integration.Support.IntegrationMessageBuilder`1.SetHeaderIfAbsent
  name: SetHeaderIfAbsent
  nameWithType: IntegrationMessageBuilder<T>.SetHeaderIfAbsent
  fullName: Steeltoe.Integration.Support.IntegrationMessageBuilder<T>.SetHeaderIfAbsent
  nameWithType.vb: IntegrationMessageBuilder(Of T).SetHeaderIfAbsent
  fullName.vb: Steeltoe.Integration.Support.IntegrationMessageBuilder(Of T).SetHeaderIfAbsent
- uid: Steeltoe.Integration.Support.IMessageBuilder{{T}}.SetHeaderIfAbsent(System.String,System.Object)
  commentId: M:Steeltoe.Integration.Support.IMessageBuilder{`0}.SetHeaderIfAbsent(System.String,System.Object)
  parent: Steeltoe.Integration.Support.IMessageBuilder{{T}}
  definition: Steeltoe.Integration.Support.IMessageBuilder`1.SetHeaderIfAbsent(System.String,System.Object)
  name: SetHeaderIfAbsent(String, Object)
  nameWithType: IMessageBuilder<T>.SetHeaderIfAbsent(String, Object)
  fullName: Steeltoe.Integration.Support.IMessageBuilder<T>.SetHeaderIfAbsent(System.String, System.Object)
  nameWithType.vb: IMessageBuilder(Of T).SetHeaderIfAbsent(String, Object)
  fullName.vb: Steeltoe.Integration.Support.IMessageBuilder(Of T).SetHeaderIfAbsent(System.String, System.Object)
  spec.csharp:
  - uid: Steeltoe.Integration.Support.IMessageBuilder`1.SetHeaderIfAbsent(System.String,System.Object)
    name: SetHeaderIfAbsent
    nameWithType: IMessageBuilder<T>.SetHeaderIfAbsent
    fullName: Steeltoe.Integration.Support.IMessageBuilder<T>.SetHeaderIfAbsent
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Integration.Support.IMessageBuilder`1.SetHeaderIfAbsent(System.String,System.Object)
    name: SetHeaderIfAbsent
    nameWithType: IMessageBuilder(Of T).SetHeaderIfAbsent
    fullName: Steeltoe.Integration.Support.IMessageBuilder(Of T).SetHeaderIfAbsent
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Integration.Support.IMessageBuilder`1.SetHeaderIfAbsent(System.String,System.Object)
  commentId: M:Steeltoe.Integration.Support.IMessageBuilder`1.SetHeaderIfAbsent(System.String,System.Object)
  isExternal: true
  name: SetHeaderIfAbsent(String, Object)
  nameWithType: IMessageBuilder<T>.SetHeaderIfAbsent(String, Object)
  fullName: Steeltoe.Integration.Support.IMessageBuilder<T>.SetHeaderIfAbsent(System.String, System.Object)
  nameWithType.vb: IMessageBuilder(Of T).SetHeaderIfAbsent(String, Object)
  fullName.vb: Steeltoe.Integration.Support.IMessageBuilder(Of T).SetHeaderIfAbsent(System.String, System.Object)
  spec.csharp:
  - uid: Steeltoe.Integration.Support.IMessageBuilder`1.SetHeaderIfAbsent(System.String,System.Object)
    name: SetHeaderIfAbsent
    nameWithType: IMessageBuilder<T>.SetHeaderIfAbsent
    fullName: Steeltoe.Integration.Support.IMessageBuilder<T>.SetHeaderIfAbsent
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Integration.Support.IMessageBuilder`1.SetHeaderIfAbsent(System.String,System.Object)
    name: SetHeaderIfAbsent
    nameWithType: IMessageBuilder(Of T).SetHeaderIfAbsent
    fullName: Steeltoe.Integration.Support.IMessageBuilder(Of T).SetHeaderIfAbsent
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Integration.Support.IntegrationMessageBuilder`1.RemoveHeaders*
  commentId: Overload:Steeltoe.Integration.Support.IntegrationMessageBuilder`1.RemoveHeaders
  name: RemoveHeaders
  nameWithType: IntegrationMessageBuilder<T>.RemoveHeaders
  fullName: Steeltoe.Integration.Support.IntegrationMessageBuilder<T>.RemoveHeaders
  nameWithType.vb: IntegrationMessageBuilder(Of T).RemoveHeaders
  fullName.vb: Steeltoe.Integration.Support.IntegrationMessageBuilder(Of T).RemoveHeaders
- uid: Steeltoe.Integration.Support.IMessageBuilder{{T}}.RemoveHeaders(System.String[])
  commentId: M:Steeltoe.Integration.Support.IMessageBuilder{`0}.RemoveHeaders(System.String[])
  parent: Steeltoe.Integration.Support.IMessageBuilder{{T}}
  definition: Steeltoe.Integration.Support.IMessageBuilder`1.RemoveHeaders(System.String[])
  name: RemoveHeaders(String[])
  nameWithType: IMessageBuilder<T>.RemoveHeaders(String[])
  fullName: Steeltoe.Integration.Support.IMessageBuilder<T>.RemoveHeaders(System.String[])
  nameWithType.vb: IMessageBuilder(Of T).RemoveHeaders(String())
  fullName.vb: Steeltoe.Integration.Support.IMessageBuilder(Of T).RemoveHeaders(System.String())
  name.vb: RemoveHeaders(String())
  spec.csharp:
  - uid: Steeltoe.Integration.Support.IMessageBuilder`1.RemoveHeaders(System.String[])
    name: RemoveHeaders
    nameWithType: IMessageBuilder<T>.RemoveHeaders
    fullName: Steeltoe.Integration.Support.IMessageBuilder<T>.RemoveHeaders
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Integration.Support.IMessageBuilder`1.RemoveHeaders(System.String[])
    name: RemoveHeaders
    nameWithType: IMessageBuilder(Of T).RemoveHeaders
    fullName: Steeltoe.Integration.Support.IMessageBuilder(Of T).RemoveHeaders
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: System.String[]
  isExternal: true
  name: String[]
  nameWithType: String[]
  fullName: System.String[]
  nameWithType.vb: String()
  fullName.vb: System.String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Steeltoe.Integration.Support.IMessageBuilder`1.RemoveHeaders(System.String[])
  commentId: M:Steeltoe.Integration.Support.IMessageBuilder`1.RemoveHeaders(System.String[])
  isExternal: true
  name: RemoveHeaders(String[])
  nameWithType: IMessageBuilder<T>.RemoveHeaders(String[])
  fullName: Steeltoe.Integration.Support.IMessageBuilder<T>.RemoveHeaders(System.String[])
  nameWithType.vb: IMessageBuilder(Of T).RemoveHeaders(String())
  fullName.vb: Steeltoe.Integration.Support.IMessageBuilder(Of T).RemoveHeaders(System.String())
  name.vb: RemoveHeaders(String())
  spec.csharp:
  - uid: Steeltoe.Integration.Support.IMessageBuilder`1.RemoveHeaders(System.String[])
    name: RemoveHeaders
    nameWithType: IMessageBuilder<T>.RemoveHeaders
    fullName: Steeltoe.Integration.Support.IMessageBuilder<T>.RemoveHeaders
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Integration.Support.IMessageBuilder`1.RemoveHeaders(System.String[])
    name: RemoveHeaders
    nameWithType: IMessageBuilder(Of T).RemoveHeaders
    fullName: Steeltoe.Integration.Support.IMessageBuilder(Of T).RemoveHeaders
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Integration.Support.IntegrationMessageBuilder`1.RemoveHeader*
  commentId: Overload:Steeltoe.Integration.Support.IntegrationMessageBuilder`1.RemoveHeader
  name: RemoveHeader
  nameWithType: IntegrationMessageBuilder<T>.RemoveHeader
  fullName: Steeltoe.Integration.Support.IntegrationMessageBuilder<T>.RemoveHeader
  nameWithType.vb: IntegrationMessageBuilder(Of T).RemoveHeader
  fullName.vb: Steeltoe.Integration.Support.IntegrationMessageBuilder(Of T).RemoveHeader
- uid: Steeltoe.Integration.Support.IMessageBuilder{{T}}.RemoveHeader(System.String)
  commentId: M:Steeltoe.Integration.Support.IMessageBuilder{`0}.RemoveHeader(System.String)
  parent: Steeltoe.Integration.Support.IMessageBuilder{{T}}
  definition: Steeltoe.Integration.Support.IMessageBuilder`1.RemoveHeader(System.String)
  name: RemoveHeader(String)
  nameWithType: IMessageBuilder<T>.RemoveHeader(String)
  fullName: Steeltoe.Integration.Support.IMessageBuilder<T>.RemoveHeader(System.String)
  nameWithType.vb: IMessageBuilder(Of T).RemoveHeader(String)
  fullName.vb: Steeltoe.Integration.Support.IMessageBuilder(Of T).RemoveHeader(System.String)
  spec.csharp:
  - uid: Steeltoe.Integration.Support.IMessageBuilder`1.RemoveHeader(System.String)
    name: RemoveHeader
    nameWithType: IMessageBuilder<T>.RemoveHeader
    fullName: Steeltoe.Integration.Support.IMessageBuilder<T>.RemoveHeader
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Integration.Support.IMessageBuilder`1.RemoveHeader(System.String)
    name: RemoveHeader
    nameWithType: IMessageBuilder(Of T).RemoveHeader
    fullName: Steeltoe.Integration.Support.IMessageBuilder(Of T).RemoveHeader
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Integration.Support.IMessageBuilder`1.RemoveHeader(System.String)
  commentId: M:Steeltoe.Integration.Support.IMessageBuilder`1.RemoveHeader(System.String)
  isExternal: true
  name: RemoveHeader(String)
  nameWithType: IMessageBuilder<T>.RemoveHeader(String)
  fullName: Steeltoe.Integration.Support.IMessageBuilder<T>.RemoveHeader(System.String)
  nameWithType.vb: IMessageBuilder(Of T).RemoveHeader(String)
  fullName.vb: Steeltoe.Integration.Support.IMessageBuilder(Of T).RemoveHeader(System.String)
  spec.csharp:
  - uid: Steeltoe.Integration.Support.IMessageBuilder`1.RemoveHeader(System.String)
    name: RemoveHeader
    nameWithType: IMessageBuilder<T>.RemoveHeader
    fullName: Steeltoe.Integration.Support.IMessageBuilder<T>.RemoveHeader
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Integration.Support.IMessageBuilder`1.RemoveHeader(System.String)
    name: RemoveHeader
    nameWithType: IMessageBuilder(Of T).RemoveHeader
    fullName: Steeltoe.Integration.Support.IMessageBuilder(Of T).RemoveHeader
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Integration.Support.IntegrationMessageBuilder`1.CopyHeaders*
  commentId: Overload:Steeltoe.Integration.Support.IntegrationMessageBuilder`1.CopyHeaders
  name: CopyHeaders
  nameWithType: IntegrationMessageBuilder<T>.CopyHeaders
  fullName: Steeltoe.Integration.Support.IntegrationMessageBuilder<T>.CopyHeaders
  nameWithType.vb: IntegrationMessageBuilder(Of T).CopyHeaders
  fullName.vb: Steeltoe.Integration.Support.IntegrationMessageBuilder(Of T).CopyHeaders
- uid: Steeltoe.Integration.Support.IMessageBuilder{{T}}.CopyHeaders(System.Collections.Generic.IDictionary{System.String,System.Object})
  commentId: M:Steeltoe.Integration.Support.IMessageBuilder{`0}.CopyHeaders(System.Collections.Generic.IDictionary{System.String,System.Object})
  parent: Steeltoe.Integration.Support.IMessageBuilder{{T}}
  definition: Steeltoe.Integration.Support.IMessageBuilder`1.CopyHeaders(System.Collections.Generic.IDictionary{System.String,System.Object})
  name: CopyHeaders(IDictionary<String, Object>)
  nameWithType: IMessageBuilder<T>.CopyHeaders(IDictionary<String, Object>)
  fullName: Steeltoe.Integration.Support.IMessageBuilder<T>.CopyHeaders(System.Collections.Generic.IDictionary<System.String, System.Object>)
  nameWithType.vb: IMessageBuilder(Of T).CopyHeaders(IDictionary(Of String, Object))
  fullName.vb: Steeltoe.Integration.Support.IMessageBuilder(Of T).CopyHeaders(System.Collections.Generic.IDictionary(Of System.String, System.Object))
  name.vb: CopyHeaders(IDictionary(Of String, Object))
  spec.csharp:
  - uid: Steeltoe.Integration.Support.IMessageBuilder`1.CopyHeaders(System.Collections.Generic.IDictionary{System.String,System.Object})
    name: CopyHeaders
    nameWithType: IMessageBuilder<T>.CopyHeaders
    fullName: Steeltoe.Integration.Support.IMessageBuilder<T>.CopyHeaders
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Integration.Support.IMessageBuilder`1.CopyHeaders(System.Collections.Generic.IDictionary{System.String,System.Object})
    name: CopyHeaders
    nameWithType: IMessageBuilder(Of T).CopyHeaders
    fullName: Steeltoe.Integration.Support.IMessageBuilder(Of T).CopyHeaders
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IDictionary{System.String,System.Object}
  commentId: T:System.Collections.Generic.IDictionary{System.String,System.Object}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IDictionary`2
  name: IDictionary<String, Object>
  nameWithType: IDictionary<String, Object>
  fullName: System.Collections.Generic.IDictionary<System.String, System.Object>
  nameWithType.vb: IDictionary(Of String, Object)
  fullName.vb: System.Collections.Generic.IDictionary(Of System.String, System.Object)
  name.vb: IDictionary(Of String, Object)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Integration.Support.IMessageBuilder`1.CopyHeaders(System.Collections.Generic.IDictionary{System.String,System.Object})
  commentId: M:Steeltoe.Integration.Support.IMessageBuilder`1.CopyHeaders(System.Collections.Generic.IDictionary{System.String,System.Object})
  isExternal: true
  name: CopyHeaders(IDictionary<String, Object>)
  nameWithType: IMessageBuilder<T>.CopyHeaders(IDictionary<String, Object>)
  fullName: Steeltoe.Integration.Support.IMessageBuilder<T>.CopyHeaders(System.Collections.Generic.IDictionary<System.String, System.Object>)
  nameWithType.vb: IMessageBuilder(Of T).CopyHeaders(IDictionary(Of String, Object))
  fullName.vb: Steeltoe.Integration.Support.IMessageBuilder(Of T).CopyHeaders(System.Collections.Generic.IDictionary(Of System.String, System.Object))
  name.vb: CopyHeaders(IDictionary(Of String, Object))
  spec.csharp:
  - uid: Steeltoe.Integration.Support.IMessageBuilder`1.CopyHeaders(System.Collections.Generic.IDictionary{System.String,System.Object})
    name: CopyHeaders
    nameWithType: IMessageBuilder<T>.CopyHeaders
    fullName: Steeltoe.Integration.Support.IMessageBuilder<T>.CopyHeaders
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Integration.Support.IMessageBuilder`1.CopyHeaders(System.Collections.Generic.IDictionary{System.String,System.Object})
    name: CopyHeaders
    nameWithType: IMessageBuilder(Of T).CopyHeaders
    fullName: Steeltoe.Integration.Support.IMessageBuilder(Of T).CopyHeaders
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IDictionary`2
  commentId: T:System.Collections.Generic.IDictionary`2
  isExternal: true
  name: IDictionary<TKey, TValue>
  nameWithType: IDictionary<TKey, TValue>
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>
  nameWithType.vb: IDictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.IDictionary(Of TKey, TValue)
  name.vb: IDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Steeltoe.Integration.Support.IntegrationMessageBuilder`1.CopyHeadersIfAbsent*
  commentId: Overload:Steeltoe.Integration.Support.IntegrationMessageBuilder`1.CopyHeadersIfAbsent
  name: CopyHeadersIfAbsent
  nameWithType: IntegrationMessageBuilder<T>.CopyHeadersIfAbsent
  fullName: Steeltoe.Integration.Support.IntegrationMessageBuilder<T>.CopyHeadersIfAbsent
  nameWithType.vb: IntegrationMessageBuilder(Of T).CopyHeadersIfAbsent
  fullName.vb: Steeltoe.Integration.Support.IntegrationMessageBuilder(Of T).CopyHeadersIfAbsent
- uid: Steeltoe.Integration.Support.IMessageBuilder{{T}}.CopyHeadersIfAbsent(System.Collections.Generic.IDictionary{System.String,System.Object})
  commentId: M:Steeltoe.Integration.Support.IMessageBuilder{`0}.CopyHeadersIfAbsent(System.Collections.Generic.IDictionary{System.String,System.Object})
  parent: Steeltoe.Integration.Support.IMessageBuilder{{T}}
  definition: Steeltoe.Integration.Support.IMessageBuilder`1.CopyHeadersIfAbsent(System.Collections.Generic.IDictionary{System.String,System.Object})
  name: CopyHeadersIfAbsent(IDictionary<String, Object>)
  nameWithType: IMessageBuilder<T>.CopyHeadersIfAbsent(IDictionary<String, Object>)
  fullName: Steeltoe.Integration.Support.IMessageBuilder<T>.CopyHeadersIfAbsent(System.Collections.Generic.IDictionary<System.String, System.Object>)
  nameWithType.vb: IMessageBuilder(Of T).CopyHeadersIfAbsent(IDictionary(Of String, Object))
  fullName.vb: Steeltoe.Integration.Support.IMessageBuilder(Of T).CopyHeadersIfAbsent(System.Collections.Generic.IDictionary(Of System.String, System.Object))
  name.vb: CopyHeadersIfAbsent(IDictionary(Of String, Object))
  spec.csharp:
  - uid: Steeltoe.Integration.Support.IMessageBuilder`1.CopyHeadersIfAbsent(System.Collections.Generic.IDictionary{System.String,System.Object})
    name: CopyHeadersIfAbsent
    nameWithType: IMessageBuilder<T>.CopyHeadersIfAbsent
    fullName: Steeltoe.Integration.Support.IMessageBuilder<T>.CopyHeadersIfAbsent
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Integration.Support.IMessageBuilder`1.CopyHeadersIfAbsent(System.Collections.Generic.IDictionary{System.String,System.Object})
    name: CopyHeadersIfAbsent
    nameWithType: IMessageBuilder(Of T).CopyHeadersIfAbsent
    fullName: Steeltoe.Integration.Support.IMessageBuilder(Of T).CopyHeadersIfAbsent
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Integration.Support.IMessageBuilder`1.CopyHeadersIfAbsent(System.Collections.Generic.IDictionary{System.String,System.Object})
  commentId: M:Steeltoe.Integration.Support.IMessageBuilder`1.CopyHeadersIfAbsent(System.Collections.Generic.IDictionary{System.String,System.Object})
  isExternal: true
  name: CopyHeadersIfAbsent(IDictionary<String, Object>)
  nameWithType: IMessageBuilder<T>.CopyHeadersIfAbsent(IDictionary<String, Object>)
  fullName: Steeltoe.Integration.Support.IMessageBuilder<T>.CopyHeadersIfAbsent(System.Collections.Generic.IDictionary<System.String, System.Object>)
  nameWithType.vb: IMessageBuilder(Of T).CopyHeadersIfAbsent(IDictionary(Of String, Object))
  fullName.vb: Steeltoe.Integration.Support.IMessageBuilder(Of T).CopyHeadersIfAbsent(System.Collections.Generic.IDictionary(Of System.String, System.Object))
  name.vb: CopyHeadersIfAbsent(IDictionary(Of String, Object))
  spec.csharp:
  - uid: Steeltoe.Integration.Support.IMessageBuilder`1.CopyHeadersIfAbsent(System.Collections.Generic.IDictionary{System.String,System.Object})
    name: CopyHeadersIfAbsent
    nameWithType: IMessageBuilder<T>.CopyHeadersIfAbsent
    fullName: Steeltoe.Integration.Support.IMessageBuilder<T>.CopyHeadersIfAbsent
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Integration.Support.IMessageBuilder`1.CopyHeadersIfAbsent(System.Collections.Generic.IDictionary{System.String,System.Object})
    name: CopyHeadersIfAbsent
    nameWithType: IMessageBuilder(Of T).CopyHeadersIfAbsent
    fullName: Steeltoe.Integration.Support.IMessageBuilder(Of T).CopyHeadersIfAbsent
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Integration.Support.IntegrationMessageBuilder`1.ReadOnlyHeaders*
  commentId: Overload:Steeltoe.Integration.Support.IntegrationMessageBuilder`1.ReadOnlyHeaders
  name: ReadOnlyHeaders
  nameWithType: IntegrationMessageBuilder<T>.ReadOnlyHeaders
  fullName: Steeltoe.Integration.Support.IntegrationMessageBuilder<T>.ReadOnlyHeaders
  nameWithType.vb: IntegrationMessageBuilder(Of T).ReadOnlyHeaders
  fullName.vb: Steeltoe.Integration.Support.IntegrationMessageBuilder(Of T).ReadOnlyHeaders
- uid: System.Collections.Generic.IList{System.String}
  commentId: T:System.Collections.Generic.IList{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<String>
  nameWithType: IList<String>
  fullName: System.Collections.Generic.IList<System.String>
  nameWithType.vb: IList(Of String)
  fullName.vb: System.Collections.Generic.IList(Of System.String)
  name.vb: IList(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullName.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Integration.Support.IntegrationMessageBuilder`1.Build*
  commentId: Overload:Steeltoe.Integration.Support.IntegrationMessageBuilder`1.Build
  name: Build
  nameWithType: IntegrationMessageBuilder<T>.Build
  fullName: Steeltoe.Integration.Support.IntegrationMessageBuilder<T>.Build
  nameWithType.vb: IntegrationMessageBuilder(Of T).Build
  fullName.vb: Steeltoe.Integration.Support.IntegrationMessageBuilder(Of T).Build
- uid: Steeltoe.Integration.Support.IMessageBuilder{{T}}.Build
  commentId: M:Steeltoe.Integration.Support.IMessageBuilder{`0}.Build
  parent: Steeltoe.Integration.Support.IMessageBuilder{{T}}
  definition: Steeltoe.Integration.Support.IMessageBuilder`1.Build
  name: Build()
  nameWithType: IMessageBuilder<T>.Build()
  fullName: Steeltoe.Integration.Support.IMessageBuilder<T>.Build()
  nameWithType.vb: IMessageBuilder(Of T).Build()
  fullName.vb: Steeltoe.Integration.Support.IMessageBuilder(Of T).Build()
  spec.csharp:
  - uid: Steeltoe.Integration.Support.IMessageBuilder`1.Build
    name: Build
    nameWithType: IMessageBuilder<T>.Build
    fullName: Steeltoe.Integration.Support.IMessageBuilder<T>.Build
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Integration.Support.IMessageBuilder`1.Build
    name: Build
    nameWithType: IMessageBuilder(Of T).Build
    fullName: Steeltoe.Integration.Support.IMessageBuilder(Of T).Build
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Integration.Support.IMessageBuilder`1.Build
  commentId: M:Steeltoe.Integration.Support.IMessageBuilder`1.Build
  name: Build()
  nameWithType: IMessageBuilder<T>.Build()
  fullName: Steeltoe.Integration.Support.IMessageBuilder<T>.Build()
  nameWithType.vb: IMessageBuilder(Of T).Build()
  fullName.vb: Steeltoe.Integration.Support.IMessageBuilder(Of T).Build()
  spec.csharp:
  - uid: Steeltoe.Integration.Support.IMessageBuilder`1.Build
    name: Build
    nameWithType: IMessageBuilder<T>.Build
    fullName: Steeltoe.Integration.Support.IMessageBuilder<T>.Build
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Integration.Support.IMessageBuilder`1.Build
    name: Build
    nameWithType: IMessageBuilder(Of T).Build
    fullName: Steeltoe.Integration.Support.IMessageBuilder(Of T).Build
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Integration.Support.IntegrationMessageBuilder`1.SetExpirationDate*
  commentId: Overload:Steeltoe.Integration.Support.IntegrationMessageBuilder`1.SetExpirationDate
  name: SetExpirationDate
  nameWithType: IntegrationMessageBuilder<T>.SetExpirationDate
  fullName: Steeltoe.Integration.Support.IntegrationMessageBuilder<T>.SetExpirationDate
  nameWithType.vb: IntegrationMessageBuilder(Of T).SetExpirationDate
  fullName.vb: Steeltoe.Integration.Support.IntegrationMessageBuilder(Of T).SetExpirationDate
- uid: Steeltoe.Integration.Support.IMessageBuilder{{T}}.SetExpirationDate(System.Int64)
  commentId: M:Steeltoe.Integration.Support.IMessageBuilder{`0}.SetExpirationDate(System.Int64)
  parent: Steeltoe.Integration.Support.IMessageBuilder{{T}}
  definition: Steeltoe.Integration.Support.IMessageBuilder`1.SetExpirationDate(System.Int64)
  name: SetExpirationDate(Int64)
  nameWithType: IMessageBuilder<T>.SetExpirationDate(Int64)
  fullName: Steeltoe.Integration.Support.IMessageBuilder<T>.SetExpirationDate(System.Int64)
  nameWithType.vb: IMessageBuilder(Of T).SetExpirationDate(Int64)
  fullName.vb: Steeltoe.Integration.Support.IMessageBuilder(Of T).SetExpirationDate(System.Int64)
  spec.csharp:
  - uid: Steeltoe.Integration.Support.IMessageBuilder`1.SetExpirationDate(System.Int64)
    name: SetExpirationDate
    nameWithType: IMessageBuilder<T>.SetExpirationDate
    fullName: Steeltoe.Integration.Support.IMessageBuilder<T>.SetExpirationDate
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Integration.Support.IMessageBuilder`1.SetExpirationDate(System.Int64)
    name: SetExpirationDate
    nameWithType: IMessageBuilder(Of T).SetExpirationDate
    fullName: Steeltoe.Integration.Support.IMessageBuilder(Of T).SetExpirationDate
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: Steeltoe.Integration.Support.IMessageBuilder`1.SetExpirationDate(System.Int64)
  commentId: M:Steeltoe.Integration.Support.IMessageBuilder`1.SetExpirationDate(System.Int64)
  isExternal: true
  name: SetExpirationDate(Int64)
  nameWithType: IMessageBuilder<T>.SetExpirationDate(Int64)
  fullName: Steeltoe.Integration.Support.IMessageBuilder<T>.SetExpirationDate(System.Int64)
  nameWithType.vb: IMessageBuilder(Of T).SetExpirationDate(Int64)
  fullName.vb: Steeltoe.Integration.Support.IMessageBuilder(Of T).SetExpirationDate(System.Int64)
  spec.csharp:
  - uid: Steeltoe.Integration.Support.IMessageBuilder`1.SetExpirationDate(System.Int64)
    name: SetExpirationDate
    nameWithType: IMessageBuilder<T>.SetExpirationDate
    fullName: Steeltoe.Integration.Support.IMessageBuilder<T>.SetExpirationDate
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Integration.Support.IMessageBuilder`1.SetExpirationDate(System.Int64)
    name: SetExpirationDate
    nameWithType: IMessageBuilder(Of T).SetExpirationDate
    fullName: Steeltoe.Integration.Support.IMessageBuilder(Of T).SetExpirationDate
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Integration.Support.IMessageBuilder{{T}}.SetExpirationDate(System.Nullable{System.DateTime})
  commentId: M:Steeltoe.Integration.Support.IMessageBuilder{`0}.SetExpirationDate(System.Nullable{System.DateTime})
  parent: Steeltoe.Integration.Support.IMessageBuilder{{T}}
  definition: Steeltoe.Integration.Support.IMessageBuilder`1.SetExpirationDate(System.Nullable{System.DateTime})
  name: SetExpirationDate(Nullable<DateTime>)
  nameWithType: IMessageBuilder<T>.SetExpirationDate(Nullable<DateTime>)
  fullName: Steeltoe.Integration.Support.IMessageBuilder<T>.SetExpirationDate(System.Nullable<System.DateTime>)
  nameWithType.vb: IMessageBuilder(Of T).SetExpirationDate(Nullable(Of DateTime))
  fullName.vb: Steeltoe.Integration.Support.IMessageBuilder(Of T).SetExpirationDate(System.Nullable(Of System.DateTime))
  name.vb: SetExpirationDate(Nullable(Of DateTime))
  spec.csharp:
  - uid: Steeltoe.Integration.Support.IMessageBuilder`1.SetExpirationDate(System.Nullable{System.DateTime})
    name: SetExpirationDate
    nameWithType: IMessageBuilder<T>.SetExpirationDate
    fullName: Steeltoe.Integration.Support.IMessageBuilder<T>.SetExpirationDate
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Integration.Support.IMessageBuilder`1.SetExpirationDate(System.Nullable{System.DateTime})
    name: SetExpirationDate
    nameWithType: IMessageBuilder(Of T).SetExpirationDate
    fullName: Steeltoe.Integration.Support.IMessageBuilder(Of T).SetExpirationDate
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable{System.DateTime}
  commentId: T:System.Nullable{System.DateTime}
  parent: System
  definition: System.Nullable`1
  name: Nullable<DateTime>
  nameWithType: Nullable<DateTime>
  fullName: System.Nullable<System.DateTime>
  nameWithType.vb: Nullable(Of DateTime)
  fullName.vb: System.Nullable(Of System.DateTime)
  name.vb: Nullable(Of DateTime)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Integration.Support.IMessageBuilder`1.SetExpirationDate(System.Nullable{System.DateTime})
  commentId: M:Steeltoe.Integration.Support.IMessageBuilder`1.SetExpirationDate(System.Nullable{System.DateTime})
  isExternal: true
  name: SetExpirationDate(Nullable<DateTime>)
  nameWithType: IMessageBuilder<T>.SetExpirationDate(Nullable<DateTime>)
  fullName: Steeltoe.Integration.Support.IMessageBuilder<T>.SetExpirationDate(System.Nullable<System.DateTime>)
  nameWithType.vb: IMessageBuilder(Of T).SetExpirationDate(Nullable(Of DateTime))
  fullName.vb: Steeltoe.Integration.Support.IMessageBuilder(Of T).SetExpirationDate(System.Nullable(Of System.DateTime))
  name.vb: SetExpirationDate(Nullable(Of DateTime))
  spec.csharp:
  - uid: Steeltoe.Integration.Support.IMessageBuilder`1.SetExpirationDate(System.Nullable{System.DateTime})
    name: SetExpirationDate
    nameWithType: IMessageBuilder<T>.SetExpirationDate
    fullName: Steeltoe.Integration.Support.IMessageBuilder<T>.SetExpirationDate
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Integration.Support.IMessageBuilder`1.SetExpirationDate(System.Nullable{System.DateTime})
    name: SetExpirationDate
    nameWithType: IMessageBuilder(Of T).SetExpirationDate
    fullName: Steeltoe.Integration.Support.IMessageBuilder(Of T).SetExpirationDate
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Integration.Support.IntegrationMessageBuilder`1.SetCorrelationId*
  commentId: Overload:Steeltoe.Integration.Support.IntegrationMessageBuilder`1.SetCorrelationId
  name: SetCorrelationId
  nameWithType: IntegrationMessageBuilder<T>.SetCorrelationId
  fullName: Steeltoe.Integration.Support.IntegrationMessageBuilder<T>.SetCorrelationId
  nameWithType.vb: IntegrationMessageBuilder(Of T).SetCorrelationId
  fullName.vb: Steeltoe.Integration.Support.IntegrationMessageBuilder(Of T).SetCorrelationId
- uid: Steeltoe.Integration.Support.IMessageBuilder{{T}}.SetCorrelationId(System.Object)
  commentId: M:Steeltoe.Integration.Support.IMessageBuilder{`0}.SetCorrelationId(System.Object)
  parent: Steeltoe.Integration.Support.IMessageBuilder{{T}}
  definition: Steeltoe.Integration.Support.IMessageBuilder`1.SetCorrelationId(System.Object)
  name: SetCorrelationId(Object)
  nameWithType: IMessageBuilder<T>.SetCorrelationId(Object)
  fullName: Steeltoe.Integration.Support.IMessageBuilder<T>.SetCorrelationId(System.Object)
  nameWithType.vb: IMessageBuilder(Of T).SetCorrelationId(Object)
  fullName.vb: Steeltoe.Integration.Support.IMessageBuilder(Of T).SetCorrelationId(System.Object)
  spec.csharp:
  - uid: Steeltoe.Integration.Support.IMessageBuilder`1.SetCorrelationId(System.Object)
    name: SetCorrelationId
    nameWithType: IMessageBuilder<T>.SetCorrelationId
    fullName: Steeltoe.Integration.Support.IMessageBuilder<T>.SetCorrelationId
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Integration.Support.IMessageBuilder`1.SetCorrelationId(System.Object)
    name: SetCorrelationId
    nameWithType: IMessageBuilder(Of T).SetCorrelationId
    fullName: Steeltoe.Integration.Support.IMessageBuilder(Of T).SetCorrelationId
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Integration.Support.IMessageBuilder`1.SetCorrelationId(System.Object)
  commentId: M:Steeltoe.Integration.Support.IMessageBuilder`1.SetCorrelationId(System.Object)
  isExternal: true
  name: SetCorrelationId(Object)
  nameWithType: IMessageBuilder<T>.SetCorrelationId(Object)
  fullName: Steeltoe.Integration.Support.IMessageBuilder<T>.SetCorrelationId(System.Object)
  nameWithType.vb: IMessageBuilder(Of T).SetCorrelationId(Object)
  fullName.vb: Steeltoe.Integration.Support.IMessageBuilder(Of T).SetCorrelationId(System.Object)
  spec.csharp:
  - uid: Steeltoe.Integration.Support.IMessageBuilder`1.SetCorrelationId(System.Object)
    name: SetCorrelationId
    nameWithType: IMessageBuilder<T>.SetCorrelationId
    fullName: Steeltoe.Integration.Support.IMessageBuilder<T>.SetCorrelationId
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Integration.Support.IMessageBuilder`1.SetCorrelationId(System.Object)
    name: SetCorrelationId
    nameWithType: IMessageBuilder(Of T).SetCorrelationId
    fullName: Steeltoe.Integration.Support.IMessageBuilder(Of T).SetCorrelationId
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Integration.Support.IntegrationMessageBuilder`1.PushSequenceDetails*
  commentId: Overload:Steeltoe.Integration.Support.IntegrationMessageBuilder`1.PushSequenceDetails
  name: PushSequenceDetails
  nameWithType: IntegrationMessageBuilder<T>.PushSequenceDetails
  fullName: Steeltoe.Integration.Support.IntegrationMessageBuilder<T>.PushSequenceDetails
  nameWithType.vb: IntegrationMessageBuilder(Of T).PushSequenceDetails
  fullName.vb: Steeltoe.Integration.Support.IntegrationMessageBuilder(Of T).PushSequenceDetails
- uid: Steeltoe.Integration.Support.IMessageBuilder{{T}}.PushSequenceDetails(System.Object,System.Int32,System.Int32)
  commentId: M:Steeltoe.Integration.Support.IMessageBuilder{`0}.PushSequenceDetails(System.Object,System.Int32,System.Int32)
  parent: Steeltoe.Integration.Support.IMessageBuilder{{T}}
  definition: Steeltoe.Integration.Support.IMessageBuilder`1.PushSequenceDetails(System.Object,System.Int32,System.Int32)
  name: PushSequenceDetails(Object, Int32, Int32)
  nameWithType: IMessageBuilder<T>.PushSequenceDetails(Object, Int32, Int32)
  fullName: Steeltoe.Integration.Support.IMessageBuilder<T>.PushSequenceDetails(System.Object, System.Int32, System.Int32)
  nameWithType.vb: IMessageBuilder(Of T).PushSequenceDetails(Object, Int32, Int32)
  fullName.vb: Steeltoe.Integration.Support.IMessageBuilder(Of T).PushSequenceDetails(System.Object, System.Int32, System.Int32)
  spec.csharp:
  - uid: Steeltoe.Integration.Support.IMessageBuilder`1.PushSequenceDetails(System.Object,System.Int32,System.Int32)
    name: PushSequenceDetails
    nameWithType: IMessageBuilder<T>.PushSequenceDetails
    fullName: Steeltoe.Integration.Support.IMessageBuilder<T>.PushSequenceDetails
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Integration.Support.IMessageBuilder`1.PushSequenceDetails(System.Object,System.Int32,System.Int32)
    name: PushSequenceDetails
    nameWithType: IMessageBuilder(Of T).PushSequenceDetails
    fullName: Steeltoe.Integration.Support.IMessageBuilder(Of T).PushSequenceDetails
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Steeltoe.Integration.Support.IMessageBuilder`1.PushSequenceDetails(System.Object,System.Int32,System.Int32)
  commentId: M:Steeltoe.Integration.Support.IMessageBuilder`1.PushSequenceDetails(System.Object,System.Int32,System.Int32)
  isExternal: true
  name: PushSequenceDetails(Object, Int32, Int32)
  nameWithType: IMessageBuilder<T>.PushSequenceDetails(Object, Int32, Int32)
  fullName: Steeltoe.Integration.Support.IMessageBuilder<T>.PushSequenceDetails(System.Object, System.Int32, System.Int32)
  nameWithType.vb: IMessageBuilder(Of T).PushSequenceDetails(Object, Int32, Int32)
  fullName.vb: Steeltoe.Integration.Support.IMessageBuilder(Of T).PushSequenceDetails(System.Object, System.Int32, System.Int32)
  spec.csharp:
  - uid: Steeltoe.Integration.Support.IMessageBuilder`1.PushSequenceDetails(System.Object,System.Int32,System.Int32)
    name: PushSequenceDetails
    nameWithType: IMessageBuilder<T>.PushSequenceDetails
    fullName: Steeltoe.Integration.Support.IMessageBuilder<T>.PushSequenceDetails
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Integration.Support.IMessageBuilder`1.PushSequenceDetails(System.Object,System.Int32,System.Int32)
    name: PushSequenceDetails
    nameWithType: IMessageBuilder(Of T).PushSequenceDetails
    fullName: Steeltoe.Integration.Support.IMessageBuilder(Of T).PushSequenceDetails
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Integration.Support.IntegrationMessageBuilder`1.PopSequenceDetails*
  commentId: Overload:Steeltoe.Integration.Support.IntegrationMessageBuilder`1.PopSequenceDetails
  name: PopSequenceDetails
  nameWithType: IntegrationMessageBuilder<T>.PopSequenceDetails
  fullName: Steeltoe.Integration.Support.IntegrationMessageBuilder<T>.PopSequenceDetails
  nameWithType.vb: IntegrationMessageBuilder(Of T).PopSequenceDetails
  fullName.vb: Steeltoe.Integration.Support.IntegrationMessageBuilder(Of T).PopSequenceDetails
- uid: Steeltoe.Integration.Support.IMessageBuilder{{T}}.PopSequenceDetails
  commentId: M:Steeltoe.Integration.Support.IMessageBuilder{`0}.PopSequenceDetails
  parent: Steeltoe.Integration.Support.IMessageBuilder{{T}}
  definition: Steeltoe.Integration.Support.IMessageBuilder`1.PopSequenceDetails
  name: PopSequenceDetails()
  nameWithType: IMessageBuilder<T>.PopSequenceDetails()
  fullName: Steeltoe.Integration.Support.IMessageBuilder<T>.PopSequenceDetails()
  nameWithType.vb: IMessageBuilder(Of T).PopSequenceDetails()
  fullName.vb: Steeltoe.Integration.Support.IMessageBuilder(Of T).PopSequenceDetails()
  spec.csharp:
  - uid: Steeltoe.Integration.Support.IMessageBuilder`1.PopSequenceDetails
    name: PopSequenceDetails
    nameWithType: IMessageBuilder<T>.PopSequenceDetails
    fullName: Steeltoe.Integration.Support.IMessageBuilder<T>.PopSequenceDetails
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Integration.Support.IMessageBuilder`1.PopSequenceDetails
    name: PopSequenceDetails
    nameWithType: IMessageBuilder(Of T).PopSequenceDetails
    fullName: Steeltoe.Integration.Support.IMessageBuilder(Of T).PopSequenceDetails
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Integration.Support.IMessageBuilder`1.PopSequenceDetails
  commentId: M:Steeltoe.Integration.Support.IMessageBuilder`1.PopSequenceDetails
  name: PopSequenceDetails()
  nameWithType: IMessageBuilder<T>.PopSequenceDetails()
  fullName: Steeltoe.Integration.Support.IMessageBuilder<T>.PopSequenceDetails()
  nameWithType.vb: IMessageBuilder(Of T).PopSequenceDetails()
  fullName.vb: Steeltoe.Integration.Support.IMessageBuilder(Of T).PopSequenceDetails()
  spec.csharp:
  - uid: Steeltoe.Integration.Support.IMessageBuilder`1.PopSequenceDetails
    name: PopSequenceDetails
    nameWithType: IMessageBuilder<T>.PopSequenceDetails
    fullName: Steeltoe.Integration.Support.IMessageBuilder<T>.PopSequenceDetails
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Integration.Support.IMessageBuilder`1.PopSequenceDetails
    name: PopSequenceDetails
    nameWithType: IMessageBuilder(Of T).PopSequenceDetails
    fullName: Steeltoe.Integration.Support.IMessageBuilder(Of T).PopSequenceDetails
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Integration.Support.IntegrationMessageBuilder`1.SetReplyChannel*
  commentId: Overload:Steeltoe.Integration.Support.IntegrationMessageBuilder`1.SetReplyChannel
  name: SetReplyChannel
  nameWithType: IntegrationMessageBuilder<T>.SetReplyChannel
  fullName: Steeltoe.Integration.Support.IntegrationMessageBuilder<T>.SetReplyChannel
  nameWithType.vb: IntegrationMessageBuilder(Of T).SetReplyChannel
  fullName.vb: Steeltoe.Integration.Support.IntegrationMessageBuilder(Of T).SetReplyChannel
- uid: Steeltoe.Integration.Support.IMessageBuilder{{T}}.SetReplyChannel(Steeltoe.Messaging.IMessageChannel)
  commentId: M:Steeltoe.Integration.Support.IMessageBuilder{`0}.SetReplyChannel(Steeltoe.Messaging.IMessageChannel)
  parent: Steeltoe.Integration.Support.IMessageBuilder{{T}}
  definition: Steeltoe.Integration.Support.IMessageBuilder`1.SetReplyChannel(Steeltoe.Messaging.IMessageChannel)
  name: SetReplyChannel(IMessageChannel)
  nameWithType: IMessageBuilder<T>.SetReplyChannel(IMessageChannel)
  fullName: Steeltoe.Integration.Support.IMessageBuilder<T>.SetReplyChannel(Steeltoe.Messaging.IMessageChannel)
  nameWithType.vb: IMessageBuilder(Of T).SetReplyChannel(IMessageChannel)
  fullName.vb: Steeltoe.Integration.Support.IMessageBuilder(Of T).SetReplyChannel(Steeltoe.Messaging.IMessageChannel)
  spec.csharp:
  - uid: Steeltoe.Integration.Support.IMessageBuilder`1.SetReplyChannel(Steeltoe.Messaging.IMessageChannel)
    name: SetReplyChannel
    nameWithType: IMessageBuilder<T>.SetReplyChannel
    fullName: Steeltoe.Integration.Support.IMessageBuilder<T>.SetReplyChannel
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.IMessageChannel
    name: IMessageChannel
    nameWithType: IMessageChannel
    fullName: Steeltoe.Messaging.IMessageChannel
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Integration.Support.IMessageBuilder`1.SetReplyChannel(Steeltoe.Messaging.IMessageChannel)
    name: SetReplyChannel
    nameWithType: IMessageBuilder(Of T).SetReplyChannel
    fullName: Steeltoe.Integration.Support.IMessageBuilder(Of T).SetReplyChannel
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.IMessageChannel
    name: IMessageChannel
    nameWithType: IMessageChannel
    fullName: Steeltoe.Messaging.IMessageChannel
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Messaging.IMessageChannel
  commentId: T:Steeltoe.Messaging.IMessageChannel
  parent: Steeltoe.Messaging
  name: IMessageChannel
  nameWithType: IMessageChannel
  fullName: Steeltoe.Messaging.IMessageChannel
- uid: Steeltoe.Integration.Support.IMessageBuilder`1.SetReplyChannel(Steeltoe.Messaging.IMessageChannel)
  commentId: M:Steeltoe.Integration.Support.IMessageBuilder`1.SetReplyChannel(Steeltoe.Messaging.IMessageChannel)
  name: SetReplyChannel(IMessageChannel)
  nameWithType: IMessageBuilder<T>.SetReplyChannel(IMessageChannel)
  fullName: Steeltoe.Integration.Support.IMessageBuilder<T>.SetReplyChannel(Steeltoe.Messaging.IMessageChannel)
  nameWithType.vb: IMessageBuilder(Of T).SetReplyChannel(IMessageChannel)
  fullName.vb: Steeltoe.Integration.Support.IMessageBuilder(Of T).SetReplyChannel(Steeltoe.Messaging.IMessageChannel)
  spec.csharp:
  - uid: Steeltoe.Integration.Support.IMessageBuilder`1.SetReplyChannel(Steeltoe.Messaging.IMessageChannel)
    name: SetReplyChannel
    nameWithType: IMessageBuilder<T>.SetReplyChannel
    fullName: Steeltoe.Integration.Support.IMessageBuilder<T>.SetReplyChannel
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.IMessageChannel
    name: IMessageChannel
    nameWithType: IMessageChannel
    fullName: Steeltoe.Messaging.IMessageChannel
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Integration.Support.IMessageBuilder`1.SetReplyChannel(Steeltoe.Messaging.IMessageChannel)
    name: SetReplyChannel
    nameWithType: IMessageBuilder(Of T).SetReplyChannel
    fullName: Steeltoe.Integration.Support.IMessageBuilder(Of T).SetReplyChannel
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.IMessageChannel
    name: IMessageChannel
    nameWithType: IMessageChannel
    fullName: Steeltoe.Messaging.IMessageChannel
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Integration.Support.IntegrationMessageBuilder`1.SetReplyChannelName*
  commentId: Overload:Steeltoe.Integration.Support.IntegrationMessageBuilder`1.SetReplyChannelName
  name: SetReplyChannelName
  nameWithType: IntegrationMessageBuilder<T>.SetReplyChannelName
  fullName: Steeltoe.Integration.Support.IntegrationMessageBuilder<T>.SetReplyChannelName
  nameWithType.vb: IntegrationMessageBuilder(Of T).SetReplyChannelName
  fullName.vb: Steeltoe.Integration.Support.IntegrationMessageBuilder(Of T).SetReplyChannelName
- uid: Steeltoe.Integration.Support.IMessageBuilder{{T}}.SetReplyChannelName(System.String)
  commentId: M:Steeltoe.Integration.Support.IMessageBuilder{`0}.SetReplyChannelName(System.String)
  parent: Steeltoe.Integration.Support.IMessageBuilder{{T}}
  definition: Steeltoe.Integration.Support.IMessageBuilder`1.SetReplyChannelName(System.String)
  name: SetReplyChannelName(String)
  nameWithType: IMessageBuilder<T>.SetReplyChannelName(String)
  fullName: Steeltoe.Integration.Support.IMessageBuilder<T>.SetReplyChannelName(System.String)
  nameWithType.vb: IMessageBuilder(Of T).SetReplyChannelName(String)
  fullName.vb: Steeltoe.Integration.Support.IMessageBuilder(Of T).SetReplyChannelName(System.String)
  spec.csharp:
  - uid: Steeltoe.Integration.Support.IMessageBuilder`1.SetReplyChannelName(System.String)
    name: SetReplyChannelName
    nameWithType: IMessageBuilder<T>.SetReplyChannelName
    fullName: Steeltoe.Integration.Support.IMessageBuilder<T>.SetReplyChannelName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Integration.Support.IMessageBuilder`1.SetReplyChannelName(System.String)
    name: SetReplyChannelName
    nameWithType: IMessageBuilder(Of T).SetReplyChannelName
    fullName: Steeltoe.Integration.Support.IMessageBuilder(Of T).SetReplyChannelName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Integration.Support.IMessageBuilder`1.SetReplyChannelName(System.String)
  commentId: M:Steeltoe.Integration.Support.IMessageBuilder`1.SetReplyChannelName(System.String)
  isExternal: true
  name: SetReplyChannelName(String)
  nameWithType: IMessageBuilder<T>.SetReplyChannelName(String)
  fullName: Steeltoe.Integration.Support.IMessageBuilder<T>.SetReplyChannelName(System.String)
  nameWithType.vb: IMessageBuilder(Of T).SetReplyChannelName(String)
  fullName.vb: Steeltoe.Integration.Support.IMessageBuilder(Of T).SetReplyChannelName(System.String)
  spec.csharp:
  - uid: Steeltoe.Integration.Support.IMessageBuilder`1.SetReplyChannelName(System.String)
    name: SetReplyChannelName
    nameWithType: IMessageBuilder<T>.SetReplyChannelName
    fullName: Steeltoe.Integration.Support.IMessageBuilder<T>.SetReplyChannelName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Integration.Support.IMessageBuilder`1.SetReplyChannelName(System.String)
    name: SetReplyChannelName
    nameWithType: IMessageBuilder(Of T).SetReplyChannelName
    fullName: Steeltoe.Integration.Support.IMessageBuilder(Of T).SetReplyChannelName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Integration.Support.IntegrationMessageBuilder`1.SetErrorChannel*
  commentId: Overload:Steeltoe.Integration.Support.IntegrationMessageBuilder`1.SetErrorChannel
  name: SetErrorChannel
  nameWithType: IntegrationMessageBuilder<T>.SetErrorChannel
  fullName: Steeltoe.Integration.Support.IntegrationMessageBuilder<T>.SetErrorChannel
  nameWithType.vb: IntegrationMessageBuilder(Of T).SetErrorChannel
  fullName.vb: Steeltoe.Integration.Support.IntegrationMessageBuilder(Of T).SetErrorChannel
- uid: Steeltoe.Integration.Support.IMessageBuilder{{T}}.SetErrorChannel(Steeltoe.Messaging.IMessageChannel)
  commentId: M:Steeltoe.Integration.Support.IMessageBuilder{`0}.SetErrorChannel(Steeltoe.Messaging.IMessageChannel)
  parent: Steeltoe.Integration.Support.IMessageBuilder{{T}}
  definition: Steeltoe.Integration.Support.IMessageBuilder`1.SetErrorChannel(Steeltoe.Messaging.IMessageChannel)
  name: SetErrorChannel(IMessageChannel)
  nameWithType: IMessageBuilder<T>.SetErrorChannel(IMessageChannel)
  fullName: Steeltoe.Integration.Support.IMessageBuilder<T>.SetErrorChannel(Steeltoe.Messaging.IMessageChannel)
  nameWithType.vb: IMessageBuilder(Of T).SetErrorChannel(IMessageChannel)
  fullName.vb: Steeltoe.Integration.Support.IMessageBuilder(Of T).SetErrorChannel(Steeltoe.Messaging.IMessageChannel)
  spec.csharp:
  - uid: Steeltoe.Integration.Support.IMessageBuilder`1.SetErrorChannel(Steeltoe.Messaging.IMessageChannel)
    name: SetErrorChannel
    nameWithType: IMessageBuilder<T>.SetErrorChannel
    fullName: Steeltoe.Integration.Support.IMessageBuilder<T>.SetErrorChannel
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.IMessageChannel
    name: IMessageChannel
    nameWithType: IMessageChannel
    fullName: Steeltoe.Messaging.IMessageChannel
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Integration.Support.IMessageBuilder`1.SetErrorChannel(Steeltoe.Messaging.IMessageChannel)
    name: SetErrorChannel
    nameWithType: IMessageBuilder(Of T).SetErrorChannel
    fullName: Steeltoe.Integration.Support.IMessageBuilder(Of T).SetErrorChannel
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.IMessageChannel
    name: IMessageChannel
    nameWithType: IMessageChannel
    fullName: Steeltoe.Messaging.IMessageChannel
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Integration.Support.IMessageBuilder`1.SetErrorChannel(Steeltoe.Messaging.IMessageChannel)
  commentId: M:Steeltoe.Integration.Support.IMessageBuilder`1.SetErrorChannel(Steeltoe.Messaging.IMessageChannel)
  name: SetErrorChannel(IMessageChannel)
  nameWithType: IMessageBuilder<T>.SetErrorChannel(IMessageChannel)
  fullName: Steeltoe.Integration.Support.IMessageBuilder<T>.SetErrorChannel(Steeltoe.Messaging.IMessageChannel)
  nameWithType.vb: IMessageBuilder(Of T).SetErrorChannel(IMessageChannel)
  fullName.vb: Steeltoe.Integration.Support.IMessageBuilder(Of T).SetErrorChannel(Steeltoe.Messaging.IMessageChannel)
  spec.csharp:
  - uid: Steeltoe.Integration.Support.IMessageBuilder`1.SetErrorChannel(Steeltoe.Messaging.IMessageChannel)
    name: SetErrorChannel
    nameWithType: IMessageBuilder<T>.SetErrorChannel
    fullName: Steeltoe.Integration.Support.IMessageBuilder<T>.SetErrorChannel
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.IMessageChannel
    name: IMessageChannel
    nameWithType: IMessageChannel
    fullName: Steeltoe.Messaging.IMessageChannel
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Integration.Support.IMessageBuilder`1.SetErrorChannel(Steeltoe.Messaging.IMessageChannel)
    name: SetErrorChannel
    nameWithType: IMessageBuilder(Of T).SetErrorChannel
    fullName: Steeltoe.Integration.Support.IMessageBuilder(Of T).SetErrorChannel
  - name: (
    nameWithType: (
    fullName: (
  - uid: Steeltoe.Messaging.IMessageChannel
    name: IMessageChannel
    nameWithType: IMessageChannel
    fullName: Steeltoe.Messaging.IMessageChannel
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Integration.Support.IntegrationMessageBuilder`1.SetErrorChannelName*
  commentId: Overload:Steeltoe.Integration.Support.IntegrationMessageBuilder`1.SetErrorChannelName
  name: SetErrorChannelName
  nameWithType: IntegrationMessageBuilder<T>.SetErrorChannelName
  fullName: Steeltoe.Integration.Support.IntegrationMessageBuilder<T>.SetErrorChannelName
  nameWithType.vb: IntegrationMessageBuilder(Of T).SetErrorChannelName
  fullName.vb: Steeltoe.Integration.Support.IntegrationMessageBuilder(Of T).SetErrorChannelName
- uid: Steeltoe.Integration.Support.IMessageBuilder{{T}}.SetErrorChannelName(System.String)
  commentId: M:Steeltoe.Integration.Support.IMessageBuilder{`0}.SetErrorChannelName(System.String)
  parent: Steeltoe.Integration.Support.IMessageBuilder{{T}}
  definition: Steeltoe.Integration.Support.IMessageBuilder`1.SetErrorChannelName(System.String)
  name: SetErrorChannelName(String)
  nameWithType: IMessageBuilder<T>.SetErrorChannelName(String)
  fullName: Steeltoe.Integration.Support.IMessageBuilder<T>.SetErrorChannelName(System.String)
  nameWithType.vb: IMessageBuilder(Of T).SetErrorChannelName(String)
  fullName.vb: Steeltoe.Integration.Support.IMessageBuilder(Of T).SetErrorChannelName(System.String)
  spec.csharp:
  - uid: Steeltoe.Integration.Support.IMessageBuilder`1.SetErrorChannelName(System.String)
    name: SetErrorChannelName
    nameWithType: IMessageBuilder<T>.SetErrorChannelName
    fullName: Steeltoe.Integration.Support.IMessageBuilder<T>.SetErrorChannelName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Integration.Support.IMessageBuilder`1.SetErrorChannelName(System.String)
    name: SetErrorChannelName
    nameWithType: IMessageBuilder(Of T).SetErrorChannelName
    fullName: Steeltoe.Integration.Support.IMessageBuilder(Of T).SetErrorChannelName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Integration.Support.IMessageBuilder`1.SetErrorChannelName(System.String)
  commentId: M:Steeltoe.Integration.Support.IMessageBuilder`1.SetErrorChannelName(System.String)
  isExternal: true
  name: SetErrorChannelName(String)
  nameWithType: IMessageBuilder<T>.SetErrorChannelName(String)
  fullName: Steeltoe.Integration.Support.IMessageBuilder<T>.SetErrorChannelName(System.String)
  nameWithType.vb: IMessageBuilder(Of T).SetErrorChannelName(String)
  fullName.vb: Steeltoe.Integration.Support.IMessageBuilder(Of T).SetErrorChannelName(System.String)
  spec.csharp:
  - uid: Steeltoe.Integration.Support.IMessageBuilder`1.SetErrorChannelName(System.String)
    name: SetErrorChannelName
    nameWithType: IMessageBuilder<T>.SetErrorChannelName
    fullName: Steeltoe.Integration.Support.IMessageBuilder<T>.SetErrorChannelName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Integration.Support.IMessageBuilder`1.SetErrorChannelName(System.String)
    name: SetErrorChannelName
    nameWithType: IMessageBuilder(Of T).SetErrorChannelName
    fullName: Steeltoe.Integration.Support.IMessageBuilder(Of T).SetErrorChannelName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Integration.Support.IntegrationMessageBuilder`1.SetSequenceNumber*
  commentId: Overload:Steeltoe.Integration.Support.IntegrationMessageBuilder`1.SetSequenceNumber
  name: SetSequenceNumber
  nameWithType: IntegrationMessageBuilder<T>.SetSequenceNumber
  fullName: Steeltoe.Integration.Support.IntegrationMessageBuilder<T>.SetSequenceNumber
  nameWithType.vb: IntegrationMessageBuilder(Of T).SetSequenceNumber
  fullName.vb: Steeltoe.Integration.Support.IntegrationMessageBuilder(Of T).SetSequenceNumber
- uid: Steeltoe.Integration.Support.IMessageBuilder{{T}}.SetSequenceNumber(System.Int32)
  commentId: M:Steeltoe.Integration.Support.IMessageBuilder{`0}.SetSequenceNumber(System.Int32)
  parent: Steeltoe.Integration.Support.IMessageBuilder{{T}}
  definition: Steeltoe.Integration.Support.IMessageBuilder`1.SetSequenceNumber(System.Int32)
  name: SetSequenceNumber(Int32)
  nameWithType: IMessageBuilder<T>.SetSequenceNumber(Int32)
  fullName: Steeltoe.Integration.Support.IMessageBuilder<T>.SetSequenceNumber(System.Int32)
  nameWithType.vb: IMessageBuilder(Of T).SetSequenceNumber(Int32)
  fullName.vb: Steeltoe.Integration.Support.IMessageBuilder(Of T).SetSequenceNumber(System.Int32)
  spec.csharp:
  - uid: Steeltoe.Integration.Support.IMessageBuilder`1.SetSequenceNumber(System.Int32)
    name: SetSequenceNumber
    nameWithType: IMessageBuilder<T>.SetSequenceNumber
    fullName: Steeltoe.Integration.Support.IMessageBuilder<T>.SetSequenceNumber
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Integration.Support.IMessageBuilder`1.SetSequenceNumber(System.Int32)
    name: SetSequenceNumber
    nameWithType: IMessageBuilder(Of T).SetSequenceNumber
    fullName: Steeltoe.Integration.Support.IMessageBuilder(Of T).SetSequenceNumber
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Integration.Support.IMessageBuilder`1.SetSequenceNumber(System.Int32)
  commentId: M:Steeltoe.Integration.Support.IMessageBuilder`1.SetSequenceNumber(System.Int32)
  isExternal: true
  name: SetSequenceNumber(Int32)
  nameWithType: IMessageBuilder<T>.SetSequenceNumber(Int32)
  fullName: Steeltoe.Integration.Support.IMessageBuilder<T>.SetSequenceNumber(System.Int32)
  nameWithType.vb: IMessageBuilder(Of T).SetSequenceNumber(Int32)
  fullName.vb: Steeltoe.Integration.Support.IMessageBuilder(Of T).SetSequenceNumber(System.Int32)
  spec.csharp:
  - uid: Steeltoe.Integration.Support.IMessageBuilder`1.SetSequenceNumber(System.Int32)
    name: SetSequenceNumber
    nameWithType: IMessageBuilder<T>.SetSequenceNumber
    fullName: Steeltoe.Integration.Support.IMessageBuilder<T>.SetSequenceNumber
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Integration.Support.IMessageBuilder`1.SetSequenceNumber(System.Int32)
    name: SetSequenceNumber
    nameWithType: IMessageBuilder(Of T).SetSequenceNumber
    fullName: Steeltoe.Integration.Support.IMessageBuilder(Of T).SetSequenceNumber
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Integration.Support.IntegrationMessageBuilder`1.SetSequenceSize*
  commentId: Overload:Steeltoe.Integration.Support.IntegrationMessageBuilder`1.SetSequenceSize
  name: SetSequenceSize
  nameWithType: IntegrationMessageBuilder<T>.SetSequenceSize
  fullName: Steeltoe.Integration.Support.IntegrationMessageBuilder<T>.SetSequenceSize
  nameWithType.vb: IntegrationMessageBuilder(Of T).SetSequenceSize
  fullName.vb: Steeltoe.Integration.Support.IntegrationMessageBuilder(Of T).SetSequenceSize
- uid: Steeltoe.Integration.Support.IMessageBuilder{{T}}.SetSequenceSize(System.Int32)
  commentId: M:Steeltoe.Integration.Support.IMessageBuilder{`0}.SetSequenceSize(System.Int32)
  parent: Steeltoe.Integration.Support.IMessageBuilder{{T}}
  definition: Steeltoe.Integration.Support.IMessageBuilder`1.SetSequenceSize(System.Int32)
  name: SetSequenceSize(Int32)
  nameWithType: IMessageBuilder<T>.SetSequenceSize(Int32)
  fullName: Steeltoe.Integration.Support.IMessageBuilder<T>.SetSequenceSize(System.Int32)
  nameWithType.vb: IMessageBuilder(Of T).SetSequenceSize(Int32)
  fullName.vb: Steeltoe.Integration.Support.IMessageBuilder(Of T).SetSequenceSize(System.Int32)
  spec.csharp:
  - uid: Steeltoe.Integration.Support.IMessageBuilder`1.SetSequenceSize(System.Int32)
    name: SetSequenceSize
    nameWithType: IMessageBuilder<T>.SetSequenceSize
    fullName: Steeltoe.Integration.Support.IMessageBuilder<T>.SetSequenceSize
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Integration.Support.IMessageBuilder`1.SetSequenceSize(System.Int32)
    name: SetSequenceSize
    nameWithType: IMessageBuilder(Of T).SetSequenceSize
    fullName: Steeltoe.Integration.Support.IMessageBuilder(Of T).SetSequenceSize
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Integration.Support.IMessageBuilder`1.SetSequenceSize(System.Int32)
  commentId: M:Steeltoe.Integration.Support.IMessageBuilder`1.SetSequenceSize(System.Int32)
  isExternal: true
  name: SetSequenceSize(Int32)
  nameWithType: IMessageBuilder<T>.SetSequenceSize(Int32)
  fullName: Steeltoe.Integration.Support.IMessageBuilder<T>.SetSequenceSize(System.Int32)
  nameWithType.vb: IMessageBuilder(Of T).SetSequenceSize(Int32)
  fullName.vb: Steeltoe.Integration.Support.IMessageBuilder(Of T).SetSequenceSize(System.Int32)
  spec.csharp:
  - uid: Steeltoe.Integration.Support.IMessageBuilder`1.SetSequenceSize(System.Int32)
    name: SetSequenceSize
    nameWithType: IMessageBuilder<T>.SetSequenceSize
    fullName: Steeltoe.Integration.Support.IMessageBuilder<T>.SetSequenceSize
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Integration.Support.IMessageBuilder`1.SetSequenceSize(System.Int32)
    name: SetSequenceSize
    nameWithType: IMessageBuilder(Of T).SetSequenceSize
    fullName: Steeltoe.Integration.Support.IMessageBuilder(Of T).SetSequenceSize
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Integration.Support.IntegrationMessageBuilder`1.SetPriority*
  commentId: Overload:Steeltoe.Integration.Support.IntegrationMessageBuilder`1.SetPriority
  name: SetPriority
  nameWithType: IntegrationMessageBuilder<T>.SetPriority
  fullName: Steeltoe.Integration.Support.IntegrationMessageBuilder<T>.SetPriority
  nameWithType.vb: IntegrationMessageBuilder(Of T).SetPriority
  fullName.vb: Steeltoe.Integration.Support.IntegrationMessageBuilder(Of T).SetPriority
- uid: Steeltoe.Integration.Support.IMessageBuilder{{T}}.SetPriority(System.Int32)
  commentId: M:Steeltoe.Integration.Support.IMessageBuilder{`0}.SetPriority(System.Int32)
  parent: Steeltoe.Integration.Support.IMessageBuilder{{T}}
  definition: Steeltoe.Integration.Support.IMessageBuilder`1.SetPriority(System.Int32)
  name: SetPriority(Int32)
  nameWithType: IMessageBuilder<T>.SetPriority(Int32)
  fullName: Steeltoe.Integration.Support.IMessageBuilder<T>.SetPriority(System.Int32)
  nameWithType.vb: IMessageBuilder(Of T).SetPriority(Int32)
  fullName.vb: Steeltoe.Integration.Support.IMessageBuilder(Of T).SetPriority(System.Int32)
  spec.csharp:
  - uid: Steeltoe.Integration.Support.IMessageBuilder`1.SetPriority(System.Int32)
    name: SetPriority
    nameWithType: IMessageBuilder<T>.SetPriority
    fullName: Steeltoe.Integration.Support.IMessageBuilder<T>.SetPriority
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Integration.Support.IMessageBuilder`1.SetPriority(System.Int32)
    name: SetPriority
    nameWithType: IMessageBuilder(Of T).SetPriority
    fullName: Steeltoe.Integration.Support.IMessageBuilder(Of T).SetPriority
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Integration.Support.IMessageBuilder`1.SetPriority(System.Int32)
  commentId: M:Steeltoe.Integration.Support.IMessageBuilder`1.SetPriority(System.Int32)
  isExternal: true
  name: SetPriority(Int32)
  nameWithType: IMessageBuilder<T>.SetPriority(Int32)
  fullName: Steeltoe.Integration.Support.IMessageBuilder<T>.SetPriority(System.Int32)
  nameWithType.vb: IMessageBuilder(Of T).SetPriority(Int32)
  fullName.vb: Steeltoe.Integration.Support.IMessageBuilder(Of T).SetPriority(System.Int32)
  spec.csharp:
  - uid: Steeltoe.Integration.Support.IMessageBuilder`1.SetPriority(System.Int32)
    name: SetPriority
    nameWithType: IMessageBuilder<T>.SetPriority
    fullName: Steeltoe.Integration.Support.IMessageBuilder<T>.SetPriority
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Integration.Support.IMessageBuilder`1.SetPriority(System.Int32)
    name: SetPriority
    nameWithType: IMessageBuilder(Of T).SetPriority
    fullName: Steeltoe.Integration.Support.IMessageBuilder(Of T).SetPriority
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Integration.Support.IntegrationMessageBuilder`1.FilterAndCopyHeadersIfAbsent*
  commentId: Overload:Steeltoe.Integration.Support.IntegrationMessageBuilder`1.FilterAndCopyHeadersIfAbsent
  name: FilterAndCopyHeadersIfAbsent
  nameWithType: IntegrationMessageBuilder<T>.FilterAndCopyHeadersIfAbsent
  fullName: Steeltoe.Integration.Support.IntegrationMessageBuilder<T>.FilterAndCopyHeadersIfAbsent
  nameWithType.vb: IntegrationMessageBuilder(Of T).FilterAndCopyHeadersIfAbsent
  fullName.vb: Steeltoe.Integration.Support.IntegrationMessageBuilder(Of T).FilterAndCopyHeadersIfAbsent
- uid: Steeltoe.Integration.Support.IMessageBuilder{{T}}.FilterAndCopyHeadersIfAbsent(System.Collections.Generic.IDictionary{System.String,System.Object},System.String[])
  commentId: M:Steeltoe.Integration.Support.IMessageBuilder{`0}.FilterAndCopyHeadersIfAbsent(System.Collections.Generic.IDictionary{System.String,System.Object},System.String[])
  parent: Steeltoe.Integration.Support.IMessageBuilder{{T}}
  definition: Steeltoe.Integration.Support.IMessageBuilder`1.FilterAndCopyHeadersIfAbsent(System.Collections.Generic.IDictionary{System.String,System.Object},System.String[])
  name: FilterAndCopyHeadersIfAbsent(IDictionary<String, Object>, String[])
  nameWithType: IMessageBuilder<T>.FilterAndCopyHeadersIfAbsent(IDictionary<String, Object>, String[])
  fullName: Steeltoe.Integration.Support.IMessageBuilder<T>.FilterAndCopyHeadersIfAbsent(System.Collections.Generic.IDictionary<System.String, System.Object>, System.String[])
  nameWithType.vb: IMessageBuilder(Of T).FilterAndCopyHeadersIfAbsent(IDictionary(Of String, Object), String())
  fullName.vb: Steeltoe.Integration.Support.IMessageBuilder(Of T).FilterAndCopyHeadersIfAbsent(System.Collections.Generic.IDictionary(Of System.String, System.Object), System.String())
  name.vb: FilterAndCopyHeadersIfAbsent(IDictionary(Of String, Object), String())
  spec.csharp:
  - uid: Steeltoe.Integration.Support.IMessageBuilder`1.FilterAndCopyHeadersIfAbsent(System.Collections.Generic.IDictionary{System.String,System.Object},System.String[])
    name: FilterAndCopyHeadersIfAbsent
    nameWithType: IMessageBuilder<T>.FilterAndCopyHeadersIfAbsent
    fullName: Steeltoe.Integration.Support.IMessageBuilder<T>.FilterAndCopyHeadersIfAbsent
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Integration.Support.IMessageBuilder`1.FilterAndCopyHeadersIfAbsent(System.Collections.Generic.IDictionary{System.String,System.Object},System.String[])
    name: FilterAndCopyHeadersIfAbsent
    nameWithType: IMessageBuilder(Of T).FilterAndCopyHeadersIfAbsent
    fullName: Steeltoe.Integration.Support.IMessageBuilder(Of T).FilterAndCopyHeadersIfAbsent
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Integration.Support.IMessageBuilder`1.FilterAndCopyHeadersIfAbsent(System.Collections.Generic.IDictionary{System.String,System.Object},System.String[])
  commentId: M:Steeltoe.Integration.Support.IMessageBuilder`1.FilterAndCopyHeadersIfAbsent(System.Collections.Generic.IDictionary{System.String,System.Object},System.String[])
  isExternal: true
  name: FilterAndCopyHeadersIfAbsent(IDictionary<String, Object>, String[])
  nameWithType: IMessageBuilder<T>.FilterAndCopyHeadersIfAbsent(IDictionary<String, Object>, String[])
  fullName: Steeltoe.Integration.Support.IMessageBuilder<T>.FilterAndCopyHeadersIfAbsent(System.Collections.Generic.IDictionary<System.String, System.Object>, System.String[])
  nameWithType.vb: IMessageBuilder(Of T).FilterAndCopyHeadersIfAbsent(IDictionary(Of String, Object), String())
  fullName.vb: Steeltoe.Integration.Support.IMessageBuilder(Of T).FilterAndCopyHeadersIfAbsent(System.Collections.Generic.IDictionary(Of System.String, System.Object), System.String())
  name.vb: FilterAndCopyHeadersIfAbsent(IDictionary(Of String, Object), String())
  spec.csharp:
  - uid: Steeltoe.Integration.Support.IMessageBuilder`1.FilterAndCopyHeadersIfAbsent(System.Collections.Generic.IDictionary{System.String,System.Object},System.String[])
    name: FilterAndCopyHeadersIfAbsent
    nameWithType: IMessageBuilder<T>.FilterAndCopyHeadersIfAbsent
    fullName: Steeltoe.Integration.Support.IMessageBuilder<T>.FilterAndCopyHeadersIfAbsent
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Steeltoe.Integration.Support.IMessageBuilder`1.FilterAndCopyHeadersIfAbsent(System.Collections.Generic.IDictionary{System.String,System.Object},System.String[])
    name: FilterAndCopyHeadersIfAbsent
    nameWithType: IMessageBuilder(Of T).FilterAndCopyHeadersIfAbsent
    fullName: Steeltoe.Integration.Support.IMessageBuilder(Of T).FilterAndCopyHeadersIfAbsent
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
