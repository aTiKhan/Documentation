### YamlMime:ManagedReference
items:
- uid: Steeltoe.Messaging.Support.AbstractMessageChannel.ChannelInterceptorChain
  commentId: T:Steeltoe.Messaging.Support.AbstractMessageChannel.ChannelInterceptorChain
  id: AbstractMessageChannel.ChannelInterceptorChain
  parent: Steeltoe.Messaging.Support
  children:
  - Steeltoe.Messaging.Support.AbstractMessageChannel.ChannelInterceptorChain.#ctor(Steeltoe.Messaging.Support.AbstractMessageChannel)
  - Steeltoe.Messaging.Support.AbstractMessageChannel.ChannelInterceptorChain.ApplyPostReceive(Steeltoe.Messaging.IMessage,Steeltoe.Messaging.IMessageChannel)
  - Steeltoe.Messaging.Support.AbstractMessageChannel.ChannelInterceptorChain.ApplyPostSend(Steeltoe.Messaging.IMessage,Steeltoe.Messaging.IMessageChannel,System.Boolean)
  - Steeltoe.Messaging.Support.AbstractMessageChannel.ChannelInterceptorChain.ApplyPreReceive(Steeltoe.Messaging.IMessageChannel)
  - Steeltoe.Messaging.Support.AbstractMessageChannel.ChannelInterceptorChain.ApplyPreSend(Steeltoe.Messaging.IMessage,Steeltoe.Messaging.IMessageChannel)
  - Steeltoe.Messaging.Support.AbstractMessageChannel.ChannelInterceptorChain.TriggerAfterReceiveCompletion(Steeltoe.Messaging.IMessage,Steeltoe.Messaging.IMessageChannel,System.Exception)
  - Steeltoe.Messaging.Support.AbstractMessageChannel.ChannelInterceptorChain.TriggerAfterSendCompletion(Steeltoe.Messaging.IMessage,Steeltoe.Messaging.IMessageChannel,System.Boolean,System.Exception)
  langs:
  - csharp
  - vb
  name: AbstractMessageChannel.ChannelInterceptorChain
  nameWithType: AbstractMessageChannel.ChannelInterceptorChain
  fullName: Steeltoe.Messaging.Support.AbstractMessageChannel.ChannelInterceptorChain
  type: Class
  source:
    remote:
      path: src/Messaging/src/MessagingBase/Support/AbstractMessageChannel.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: ChannelInterceptorChain
    path: ../Steeltoe/src/Messaging/src/MessagingBase/Support/AbstractMessageChannel.cs
    startLine: 178
  assemblies:
  - Steeltoe.Messaging.MessagingBase
  namespace: Steeltoe.Messaging.Support
  syntax:
    content: protected class ChannelInterceptorChain
    content.vb: Protected Class ChannelInterceptorChain
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - protected
  - class
  modifiers.vb:
  - Protected
  - Class
- uid: Steeltoe.Messaging.Support.AbstractMessageChannel.ChannelInterceptorChain.#ctor(Steeltoe.Messaging.Support.AbstractMessageChannel)
  commentId: M:Steeltoe.Messaging.Support.AbstractMessageChannel.ChannelInterceptorChain.#ctor(Steeltoe.Messaging.Support.AbstractMessageChannel)
  id: '#ctor(Steeltoe.Messaging.Support.AbstractMessageChannel)'
  parent: Steeltoe.Messaging.Support.AbstractMessageChannel.ChannelInterceptorChain
  langs:
  - csharp
  - vb
  name: ChannelInterceptorChain(AbstractMessageChannel)
  nameWithType: AbstractMessageChannel.ChannelInterceptorChain.ChannelInterceptorChain(AbstractMessageChannel)
  fullName: Steeltoe.Messaging.Support.AbstractMessageChannel.ChannelInterceptorChain.ChannelInterceptorChain(Steeltoe.Messaging.Support.AbstractMessageChannel)
  type: Constructor
  source:
    remote:
      path: src/Messaging/src/MessagingBase/Support/AbstractMessageChannel.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: .ctor
    path: ../Steeltoe/src/Messaging/src/MessagingBase/Support/AbstractMessageChannel.cs
    startLine: 186
  assemblies:
  - Steeltoe.Messaging.MessagingBase
  namespace: Steeltoe.Messaging.Support
  syntax:
    content: public ChannelInterceptorChain(AbstractMessageChannel channel)
    parameters:
    - id: channel
      type: Steeltoe.Messaging.Support.AbstractMessageChannel
    content.vb: Public Sub New(channel As AbstractMessageChannel)
  overload: Steeltoe.Messaging.Support.AbstractMessageChannel.ChannelInterceptorChain.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Steeltoe.Messaging.Support.AbstractMessageChannel.ChannelInterceptorChain.ApplyPreSend(Steeltoe.Messaging.IMessage,Steeltoe.Messaging.IMessageChannel)
  commentId: M:Steeltoe.Messaging.Support.AbstractMessageChannel.ChannelInterceptorChain.ApplyPreSend(Steeltoe.Messaging.IMessage,Steeltoe.Messaging.IMessageChannel)
  id: ApplyPreSend(Steeltoe.Messaging.IMessage,Steeltoe.Messaging.IMessageChannel)
  parent: Steeltoe.Messaging.Support.AbstractMessageChannel.ChannelInterceptorChain
  langs:
  - csharp
  - vb
  name: ApplyPreSend(IMessage, IMessageChannel)
  nameWithType: AbstractMessageChannel.ChannelInterceptorChain.ApplyPreSend(IMessage, IMessageChannel)
  fullName: Steeltoe.Messaging.Support.AbstractMessageChannel.ChannelInterceptorChain.ApplyPreSend(Steeltoe.Messaging.IMessage, Steeltoe.Messaging.IMessageChannel)
  type: Method
  source:
    remote:
      path: src/Messaging/src/MessagingBase/Support/AbstractMessageChannel.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: ApplyPreSend
    path: ../Steeltoe/src/Messaging/src/MessagingBase/Support/AbstractMessageChannel.cs
    startLine: 194
  assemblies:
  - Steeltoe.Messaging.MessagingBase
  namespace: Steeltoe.Messaging.Support
  syntax:
    content: public IMessage ApplyPreSend(IMessage message, IMessageChannel channel)
    parameters:
    - id: message
      type: Steeltoe.Messaging.IMessage
    - id: channel
      type: Steeltoe.Messaging.IMessageChannel
    return:
      type: Steeltoe.Messaging.IMessage
    content.vb: Public Function ApplyPreSend(message As IMessage, channel As IMessageChannel) As IMessage
  overload: Steeltoe.Messaging.Support.AbstractMessageChannel.ChannelInterceptorChain.ApplyPreSend*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Steeltoe.Messaging.Support.AbstractMessageChannel.ChannelInterceptorChain.ApplyPostSend(Steeltoe.Messaging.IMessage,Steeltoe.Messaging.IMessageChannel,System.Boolean)
  commentId: M:Steeltoe.Messaging.Support.AbstractMessageChannel.ChannelInterceptorChain.ApplyPostSend(Steeltoe.Messaging.IMessage,Steeltoe.Messaging.IMessageChannel,System.Boolean)
  id: ApplyPostSend(Steeltoe.Messaging.IMessage,Steeltoe.Messaging.IMessageChannel,System.Boolean)
  parent: Steeltoe.Messaging.Support.AbstractMessageChannel.ChannelInterceptorChain
  langs:
  - csharp
  - vb
  name: ApplyPostSend(IMessage, IMessageChannel, Boolean)
  nameWithType: AbstractMessageChannel.ChannelInterceptorChain.ApplyPostSend(IMessage, IMessageChannel, Boolean)
  fullName: Steeltoe.Messaging.Support.AbstractMessageChannel.ChannelInterceptorChain.ApplyPostSend(Steeltoe.Messaging.IMessage, Steeltoe.Messaging.IMessageChannel, System.Boolean)
  type: Method
  source:
    remote:
      path: src/Messaging/src/MessagingBase/Support/AbstractMessageChannel.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: ApplyPostSend
    path: ../Steeltoe/src/Messaging/src/MessagingBase/Support/AbstractMessageChannel.cs
    startLine: 220
  assemblies:
  - Steeltoe.Messaging.MessagingBase
  namespace: Steeltoe.Messaging.Support
  syntax:
    content: public void ApplyPostSend(IMessage message, IMessageChannel channel, bool sent)
    parameters:
    - id: message
      type: Steeltoe.Messaging.IMessage
    - id: channel
      type: Steeltoe.Messaging.IMessageChannel
    - id: sent
      type: System.Boolean
    content.vb: Public Sub ApplyPostSend(message As IMessage, channel As IMessageChannel, sent As Boolean)
  overload: Steeltoe.Messaging.Support.AbstractMessageChannel.ChannelInterceptorChain.ApplyPostSend*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Steeltoe.Messaging.Support.AbstractMessageChannel.ChannelInterceptorChain.TriggerAfterSendCompletion(Steeltoe.Messaging.IMessage,Steeltoe.Messaging.IMessageChannel,System.Boolean,System.Exception)
  commentId: M:Steeltoe.Messaging.Support.AbstractMessageChannel.ChannelInterceptorChain.TriggerAfterSendCompletion(Steeltoe.Messaging.IMessage,Steeltoe.Messaging.IMessageChannel,System.Boolean,System.Exception)
  id: TriggerAfterSendCompletion(Steeltoe.Messaging.IMessage,Steeltoe.Messaging.IMessageChannel,System.Boolean,System.Exception)
  parent: Steeltoe.Messaging.Support.AbstractMessageChannel.ChannelInterceptorChain
  langs:
  - csharp
  - vb
  name: TriggerAfterSendCompletion(IMessage, IMessageChannel, Boolean, Exception)
  nameWithType: AbstractMessageChannel.ChannelInterceptorChain.TriggerAfterSendCompletion(IMessage, IMessageChannel, Boolean, Exception)
  fullName: Steeltoe.Messaging.Support.AbstractMessageChannel.ChannelInterceptorChain.TriggerAfterSendCompletion(Steeltoe.Messaging.IMessage, Steeltoe.Messaging.IMessageChannel, System.Boolean, System.Exception)
  type: Method
  source:
    remote:
      path: src/Messaging/src/MessagingBase/Support/AbstractMessageChannel.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: TriggerAfterSendCompletion
    path: ../Steeltoe/src/Messaging/src/MessagingBase/Support/AbstractMessageChannel.cs
    startLine: 233
  assemblies:
  - Steeltoe.Messaging.MessagingBase
  namespace: Steeltoe.Messaging.Support
  syntax:
    content: public void TriggerAfterSendCompletion(IMessage message, IMessageChannel channel, bool sent, Exception ex)
    parameters:
    - id: message
      type: Steeltoe.Messaging.IMessage
    - id: channel
      type: Steeltoe.Messaging.IMessageChannel
    - id: sent
      type: System.Boolean
    - id: ex
      type: System.Exception
    content.vb: Public Sub TriggerAfterSendCompletion(message As IMessage, channel As IMessageChannel, sent As Boolean, ex As Exception)
  overload: Steeltoe.Messaging.Support.AbstractMessageChannel.ChannelInterceptorChain.TriggerAfterSendCompletion*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Steeltoe.Messaging.Support.AbstractMessageChannel.ChannelInterceptorChain.ApplyPreReceive(Steeltoe.Messaging.IMessageChannel)
  commentId: M:Steeltoe.Messaging.Support.AbstractMessageChannel.ChannelInterceptorChain.ApplyPreReceive(Steeltoe.Messaging.IMessageChannel)
  id: ApplyPreReceive(Steeltoe.Messaging.IMessageChannel)
  parent: Steeltoe.Messaging.Support.AbstractMessageChannel.ChannelInterceptorChain
  langs:
  - csharp
  - vb
  name: ApplyPreReceive(IMessageChannel)
  nameWithType: AbstractMessageChannel.ChannelInterceptorChain.ApplyPreReceive(IMessageChannel)
  fullName: Steeltoe.Messaging.Support.AbstractMessageChannel.ChannelInterceptorChain.ApplyPreReceive(Steeltoe.Messaging.IMessageChannel)
  type: Method
  source:
    remote:
      path: src/Messaging/src/MessagingBase/Support/AbstractMessageChannel.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: ApplyPreReceive
    path: ../Steeltoe/src/Messaging/src/MessagingBase/Support/AbstractMessageChannel.cs
    startLine: 254
  assemblies:
  - Steeltoe.Messaging.MessagingBase
  namespace: Steeltoe.Messaging.Support
  syntax:
    content: public bool ApplyPreReceive(IMessageChannel channel)
    parameters:
    - id: channel
      type: Steeltoe.Messaging.IMessageChannel
    return:
      type: System.Boolean
    content.vb: Public Function ApplyPreReceive(channel As IMessageChannel) As Boolean
  overload: Steeltoe.Messaging.Support.AbstractMessageChannel.ChannelInterceptorChain.ApplyPreReceive*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Steeltoe.Messaging.Support.AbstractMessageChannel.ChannelInterceptorChain.ApplyPostReceive(Steeltoe.Messaging.IMessage,Steeltoe.Messaging.IMessageChannel)
  commentId: M:Steeltoe.Messaging.Support.AbstractMessageChannel.ChannelInterceptorChain.ApplyPostReceive(Steeltoe.Messaging.IMessage,Steeltoe.Messaging.IMessageChannel)
  id: ApplyPostReceive(Steeltoe.Messaging.IMessage,Steeltoe.Messaging.IMessageChannel)
  parent: Steeltoe.Messaging.Support.AbstractMessageChannel.ChannelInterceptorChain
  langs:
  - csharp
  - vb
  name: ApplyPostReceive(IMessage, IMessageChannel)
  nameWithType: AbstractMessageChannel.ChannelInterceptorChain.ApplyPostReceive(IMessage, IMessageChannel)
  fullName: Steeltoe.Messaging.Support.AbstractMessageChannel.ChannelInterceptorChain.ApplyPostReceive(Steeltoe.Messaging.IMessage, Steeltoe.Messaging.IMessageChannel)
  type: Method
  source:
    remote:
      path: src/Messaging/src/MessagingBase/Support/AbstractMessageChannel.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: ApplyPostReceive
    path: ../Steeltoe/src/Messaging/src/MessagingBase/Support/AbstractMessageChannel.cs
    startLine: 275
  assemblies:
  - Steeltoe.Messaging.MessagingBase
  namespace: Steeltoe.Messaging.Support
  syntax:
    content: public IMessage ApplyPostReceive(IMessage message, IMessageChannel channel)
    parameters:
    - id: message
      type: Steeltoe.Messaging.IMessage
    - id: channel
      type: Steeltoe.Messaging.IMessageChannel
    return:
      type: Steeltoe.Messaging.IMessage
    content.vb: Public Function ApplyPostReceive(message As IMessage, channel As IMessageChannel) As IMessage
  overload: Steeltoe.Messaging.Support.AbstractMessageChannel.ChannelInterceptorChain.ApplyPostReceive*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Steeltoe.Messaging.Support.AbstractMessageChannel.ChannelInterceptorChain.TriggerAfterReceiveCompletion(Steeltoe.Messaging.IMessage,Steeltoe.Messaging.IMessageChannel,System.Exception)
  commentId: M:Steeltoe.Messaging.Support.AbstractMessageChannel.ChannelInterceptorChain.TriggerAfterReceiveCompletion(Steeltoe.Messaging.IMessage,Steeltoe.Messaging.IMessageChannel,System.Exception)
  id: TriggerAfterReceiveCompletion(Steeltoe.Messaging.IMessage,Steeltoe.Messaging.IMessageChannel,System.Exception)
  parent: Steeltoe.Messaging.Support.AbstractMessageChannel.ChannelInterceptorChain
  langs:
  - csharp
  - vb
  name: TriggerAfterReceiveCompletion(IMessage, IMessageChannel, Exception)
  nameWithType: AbstractMessageChannel.ChannelInterceptorChain.TriggerAfterReceiveCompletion(IMessage, IMessageChannel, Exception)
  fullName: Steeltoe.Messaging.Support.AbstractMessageChannel.ChannelInterceptorChain.TriggerAfterReceiveCompletion(Steeltoe.Messaging.IMessage, Steeltoe.Messaging.IMessageChannel, System.Exception)
  type: Method
  source:
    remote:
      path: src/Messaging/src/MessagingBase/Support/AbstractMessageChannel.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: TriggerAfterReceiveCompletion
    path: ../Steeltoe/src/Messaging/src/MessagingBase/Support/AbstractMessageChannel.cs
    startLine: 295
  assemblies:
  - Steeltoe.Messaging.MessagingBase
  namespace: Steeltoe.Messaging.Support
  syntax:
    content: public void TriggerAfterReceiveCompletion(IMessage message, IMessageChannel channel, Exception ex)
    parameters:
    - id: message
      type: Steeltoe.Messaging.IMessage
    - id: channel
      type: Steeltoe.Messaging.IMessageChannel
    - id: ex
      type: System.Exception
    content.vb: Public Sub TriggerAfterReceiveCompletion(message As IMessage, channel As IMessageChannel, ex As Exception)
  overload: Steeltoe.Messaging.Support.AbstractMessageChannel.ChannelInterceptorChain.TriggerAfterReceiveCompletion*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Steeltoe.Messaging.Support
  commentId: N:Steeltoe.Messaging.Support
  name: Steeltoe.Messaging.Support
  nameWithType: Steeltoe.Messaging.Support
  fullName: Steeltoe.Messaging.Support
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Steeltoe.Messaging.Support.AbstractMessageChannel.ChannelInterceptorChain.#ctor*
  commentId: Overload:Steeltoe.Messaging.Support.AbstractMessageChannel.ChannelInterceptorChain.#ctor
  name: ChannelInterceptorChain
  nameWithType: AbstractMessageChannel.ChannelInterceptorChain.ChannelInterceptorChain
  fullName: Steeltoe.Messaging.Support.AbstractMessageChannel.ChannelInterceptorChain.ChannelInterceptorChain
- uid: Steeltoe.Messaging.Support.AbstractMessageChannel
  commentId: T:Steeltoe.Messaging.Support.AbstractMessageChannel
  parent: Steeltoe.Messaging.Support
  name: AbstractMessageChannel
  nameWithType: AbstractMessageChannel
  fullName: Steeltoe.Messaging.Support.AbstractMessageChannel
- uid: Steeltoe.Messaging.Support.AbstractMessageChannel.ChannelInterceptorChain.ApplyPreSend*
  commentId: Overload:Steeltoe.Messaging.Support.AbstractMessageChannel.ChannelInterceptorChain.ApplyPreSend
  name: ApplyPreSend
  nameWithType: AbstractMessageChannel.ChannelInterceptorChain.ApplyPreSend
  fullName: Steeltoe.Messaging.Support.AbstractMessageChannel.ChannelInterceptorChain.ApplyPreSend
- uid: Steeltoe.Messaging.IMessage
  commentId: T:Steeltoe.Messaging.IMessage
  parent: Steeltoe.Messaging
  name: IMessage
  nameWithType: IMessage
  fullName: Steeltoe.Messaging.IMessage
- uid: Steeltoe.Messaging.IMessageChannel
  commentId: T:Steeltoe.Messaging.IMessageChannel
  parent: Steeltoe.Messaging
  name: IMessageChannel
  nameWithType: IMessageChannel
  fullName: Steeltoe.Messaging.IMessageChannel
- uid: Steeltoe.Messaging
  commentId: N:Steeltoe.Messaging
  name: Steeltoe.Messaging
  nameWithType: Steeltoe.Messaging
  fullName: Steeltoe.Messaging
- uid: Steeltoe.Messaging.Support.AbstractMessageChannel.ChannelInterceptorChain.ApplyPostSend*
  commentId: Overload:Steeltoe.Messaging.Support.AbstractMessageChannel.ChannelInterceptorChain.ApplyPostSend
  name: ApplyPostSend
  nameWithType: AbstractMessageChannel.ChannelInterceptorChain.ApplyPostSend
  fullName: Steeltoe.Messaging.Support.AbstractMessageChannel.ChannelInterceptorChain.ApplyPostSend
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Steeltoe.Messaging.Support.AbstractMessageChannel.ChannelInterceptorChain.TriggerAfterSendCompletion*
  commentId: Overload:Steeltoe.Messaging.Support.AbstractMessageChannel.ChannelInterceptorChain.TriggerAfterSendCompletion
  name: TriggerAfterSendCompletion
  nameWithType: AbstractMessageChannel.ChannelInterceptorChain.TriggerAfterSendCompletion
  fullName: Steeltoe.Messaging.Support.AbstractMessageChannel.ChannelInterceptorChain.TriggerAfterSendCompletion
- uid: System.Exception
  commentId: T:System.Exception
  parent: System
  isExternal: true
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: Steeltoe.Messaging.Support.AbstractMessageChannel.ChannelInterceptorChain.ApplyPreReceive*
  commentId: Overload:Steeltoe.Messaging.Support.AbstractMessageChannel.ChannelInterceptorChain.ApplyPreReceive
  name: ApplyPreReceive
  nameWithType: AbstractMessageChannel.ChannelInterceptorChain.ApplyPreReceive
  fullName: Steeltoe.Messaging.Support.AbstractMessageChannel.ChannelInterceptorChain.ApplyPreReceive
- uid: Steeltoe.Messaging.Support.AbstractMessageChannel.ChannelInterceptorChain.ApplyPostReceive*
  commentId: Overload:Steeltoe.Messaging.Support.AbstractMessageChannel.ChannelInterceptorChain.ApplyPostReceive
  name: ApplyPostReceive
  nameWithType: AbstractMessageChannel.ChannelInterceptorChain.ApplyPostReceive
  fullName: Steeltoe.Messaging.Support.AbstractMessageChannel.ChannelInterceptorChain.ApplyPostReceive
- uid: Steeltoe.Messaging.Support.AbstractMessageChannel.ChannelInterceptorChain.TriggerAfterReceiveCompletion*
  commentId: Overload:Steeltoe.Messaging.Support.AbstractMessageChannel.ChannelInterceptorChain.TriggerAfterReceiveCompletion
  name: TriggerAfterReceiveCompletion
  nameWithType: AbstractMessageChannel.ChannelInterceptorChain.TriggerAfterReceiveCompletion
  fullName: Steeltoe.Messaging.Support.AbstractMessageChannel.ChannelInterceptorChain.TriggerAfterReceiveCompletion
