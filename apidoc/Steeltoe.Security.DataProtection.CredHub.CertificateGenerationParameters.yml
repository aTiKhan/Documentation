### YamlMime:ManagedReference
items:
- uid: Steeltoe.Security.DataProtection.CredHub.CertificateGenerationParameters
  commentId: T:Steeltoe.Security.DataProtection.CredHub.CertificateGenerationParameters
  id: CertificateGenerationParameters
  parent: Steeltoe.Security.DataProtection.CredHub
  children:
  - Steeltoe.Security.DataProtection.CredHub.CertificateGenerationParameters.AlternativeNames
  - Steeltoe.Security.DataProtection.CredHub.CertificateGenerationParameters.CertificateAuthority
  - Steeltoe.Security.DataProtection.CredHub.CertificateGenerationParameters.CommonName
  - Steeltoe.Security.DataProtection.CredHub.CertificateGenerationParameters.Country
  - Steeltoe.Security.DataProtection.CredHub.CertificateGenerationParameters.Duration
  - Steeltoe.Security.DataProtection.CredHub.CertificateGenerationParameters.ExtendedKeyUsage
  - Steeltoe.Security.DataProtection.CredHub.CertificateGenerationParameters.IsCertificateAuthority
  - Steeltoe.Security.DataProtection.CredHub.CertificateGenerationParameters.KeyUsage
  - Steeltoe.Security.DataProtection.CredHub.CertificateGenerationParameters.Locality
  - Steeltoe.Security.DataProtection.CredHub.CertificateGenerationParameters.Organization
  - Steeltoe.Security.DataProtection.CredHub.CertificateGenerationParameters.OrganizationUnit
  - Steeltoe.Security.DataProtection.CredHub.CertificateGenerationParameters.SelfSign
  - Steeltoe.Security.DataProtection.CredHub.CertificateGenerationParameters.State
  langs:
  - csharp
  - vb
  name: CertificateGenerationParameters
  nameWithType: CertificateGenerationParameters
  fullName: Steeltoe.Security.DataProtection.CredHub.CertificateGenerationParameters
  type: Class
  source:
    remote:
      path: src/Security/src/DataProtection.CredHubBase/Credentials/Certificate/CertificateGenerationParameters.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: CertificateGenerationParameters
    path: ../Steeltoe/src/Security/src/DataProtection.CredHubBase/Credentials/Certificate/CertificateGenerationParameters.cs
    startLine: 9
  assemblies:
  - Steeltoe.Security.DataProtection.CredHubBase
  namespace: Steeltoe.Security.DataProtection.CredHub
  syntax:
    content: 'public class CertificateGenerationParameters : KeyParameters, ICredentialParameter'
    content.vb: >-
      Public Class CertificateGenerationParameters

          Inherits KeyParameters

          Implements ICredentialParameter
  inheritance:
  - System.Object
  - Steeltoe.Security.DataProtection.CredHub.KeyParameters
  implements:
  - Steeltoe.Security.DataProtection.CredHub.ICredentialParameter
  inheritedMembers:
  - Steeltoe.Security.DataProtection.CredHub.KeyParameters.KeyLength
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Steeltoe.Security.DataProtection.CredHub.CertificateGenerationParameters.CommonName
  commentId: P:Steeltoe.Security.DataProtection.CredHub.CertificateGenerationParameters.CommonName
  id: CommonName
  parent: Steeltoe.Security.DataProtection.CredHub.CertificateGenerationParameters
  langs:
  - csharp
  - vb
  name: CommonName
  nameWithType: CertificateGenerationParameters.CommonName
  fullName: Steeltoe.Security.DataProtection.CredHub.CertificateGenerationParameters.CommonName
  type: Property
  source:
    remote:
      path: src/Security/src/DataProtection.CredHubBase/Credentials/Certificate/CertificateGenerationParameters.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: CommonName
    path: ../Steeltoe/src/Security/src/DataProtection.CredHubBase/Credentials/Certificate/CertificateGenerationParameters.cs
    startLine: 14
  assemblies:
  - Steeltoe.Security.DataProtection.CredHubBase
  namespace: Steeltoe.Security.DataProtection.CredHub
  summary: "\nGets or sets common name of generated credential value\n"
  example: []
  syntax:
    content: >-
      [JsonPropertyName("common_name")]

      public string CommonName { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonPropertyName("common_name")>

      Public Property CommonName As String
  overload: Steeltoe.Security.DataProtection.CredHub.CertificateGenerationParameters.CommonName*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: common_name
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Steeltoe.Security.DataProtection.CredHub.CertificateGenerationParameters.AlternativeNames
  commentId: P:Steeltoe.Security.DataProtection.CredHub.CertificateGenerationParameters.AlternativeNames
  id: AlternativeNames
  parent: Steeltoe.Security.DataProtection.CredHub.CertificateGenerationParameters
  langs:
  - csharp
  - vb
  name: AlternativeNames
  nameWithType: CertificateGenerationParameters.AlternativeNames
  fullName: Steeltoe.Security.DataProtection.CredHub.CertificateGenerationParameters.AlternativeNames
  type: Property
  source:
    remote:
      path: src/Security/src/DataProtection.CredHubBase/Credentials/Certificate/CertificateGenerationParameters.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: AlternativeNames
    path: ../Steeltoe/src/Security/src/DataProtection.CredHubBase/Credentials/Certificate/CertificateGenerationParameters.cs
    startLine: 20
  assemblies:
  - Steeltoe.Security.DataProtection.CredHubBase
  namespace: Steeltoe.Security.DataProtection.CredHub
  summary: "\nGets or sets alternative names of generated credential value\n"
  example: []
  syntax:
    content: >-
      [JsonPropertyName("alternative_names")]

      public List<string> AlternativeNames { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.List{System.String}
    content.vb: >-
      <JsonPropertyName("alternative_names")>

      Public Property AlternativeNames As List(Of String)
  overload: Steeltoe.Security.DataProtection.CredHub.CertificateGenerationParameters.AlternativeNames*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: alternative_names
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Steeltoe.Security.DataProtection.CredHub.CertificateGenerationParameters.Organization
  commentId: P:Steeltoe.Security.DataProtection.CredHub.CertificateGenerationParameters.Organization
  id: Organization
  parent: Steeltoe.Security.DataProtection.CredHub.CertificateGenerationParameters
  langs:
  - csharp
  - vb
  name: Organization
  nameWithType: CertificateGenerationParameters.Organization
  fullName: Steeltoe.Security.DataProtection.CredHub.CertificateGenerationParameters.Organization
  type: Property
  source:
    remote:
      path: src/Security/src/DataProtection.CredHubBase/Credentials/Certificate/CertificateGenerationParameters.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Organization
    path: ../Steeltoe/src/Security/src/DataProtection.CredHubBase/Credentials/Certificate/CertificateGenerationParameters.cs
    startLine: 26
  assemblies:
  - Steeltoe.Security.DataProtection.CredHubBase
  namespace: Steeltoe.Security.DataProtection.CredHub
  summary: "\nGets or sets organization of generated credential value\n"
  example: []
  syntax:
    content: public string Organization { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Organization As String
  overload: Steeltoe.Security.DataProtection.CredHub.CertificateGenerationParameters.Organization*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Steeltoe.Security.DataProtection.CredHub.CertificateGenerationParameters.OrganizationUnit
  commentId: P:Steeltoe.Security.DataProtection.CredHub.CertificateGenerationParameters.OrganizationUnit
  id: OrganizationUnit
  parent: Steeltoe.Security.DataProtection.CredHub.CertificateGenerationParameters
  langs:
  - csharp
  - vb
  name: OrganizationUnit
  nameWithType: CertificateGenerationParameters.OrganizationUnit
  fullName: Steeltoe.Security.DataProtection.CredHub.CertificateGenerationParameters.OrganizationUnit
  type: Property
  source:
    remote:
      path: src/Security/src/DataProtection.CredHubBase/Credentials/Certificate/CertificateGenerationParameters.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: OrganizationUnit
    path: ../Steeltoe/src/Security/src/DataProtection.CredHubBase/Credentials/Certificate/CertificateGenerationParameters.cs
    startLine: 31
  assemblies:
  - Steeltoe.Security.DataProtection.CredHubBase
  namespace: Steeltoe.Security.DataProtection.CredHub
  summary: "\nGets or sets organization Unit of generated credential value\n"
  example: []
  syntax:
    content: >-
      [JsonPropertyName("organization_unit")]

      public string OrganizationUnit { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonPropertyName("organization_unit")>

      Public Property OrganizationUnit As String
  overload: Steeltoe.Security.DataProtection.CredHub.CertificateGenerationParameters.OrganizationUnit*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: organization_unit
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Steeltoe.Security.DataProtection.CredHub.CertificateGenerationParameters.Locality
  commentId: P:Steeltoe.Security.DataProtection.CredHub.CertificateGenerationParameters.Locality
  id: Locality
  parent: Steeltoe.Security.DataProtection.CredHub.CertificateGenerationParameters
  langs:
  - csharp
  - vb
  name: Locality
  nameWithType: CertificateGenerationParameters.Locality
  fullName: Steeltoe.Security.DataProtection.CredHub.CertificateGenerationParameters.Locality
  type: Property
  source:
    remote:
      path: src/Security/src/DataProtection.CredHubBase/Credentials/Certificate/CertificateGenerationParameters.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Locality
    path: ../Steeltoe/src/Security/src/DataProtection.CredHubBase/Credentials/Certificate/CertificateGenerationParameters.cs
    startLine: 37
  assemblies:
  - Steeltoe.Security.DataProtection.CredHubBase
  namespace: Steeltoe.Security.DataProtection.CredHub
  summary: "\nGets or sets locality/city of generated credential value\n"
  example: []
  syntax:
    content: public string Locality { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Locality As String
  overload: Steeltoe.Security.DataProtection.CredHub.CertificateGenerationParameters.Locality*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Steeltoe.Security.DataProtection.CredHub.CertificateGenerationParameters.State
  commentId: P:Steeltoe.Security.DataProtection.CredHub.CertificateGenerationParameters.State
  id: State
  parent: Steeltoe.Security.DataProtection.CredHub.CertificateGenerationParameters
  langs:
  - csharp
  - vb
  name: State
  nameWithType: CertificateGenerationParameters.State
  fullName: Steeltoe.Security.DataProtection.CredHub.CertificateGenerationParameters.State
  type: Property
  source:
    remote:
      path: src/Security/src/DataProtection.CredHubBase/Credentials/Certificate/CertificateGenerationParameters.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: State
    path: ../Steeltoe/src/Security/src/DataProtection.CredHubBase/Credentials/Certificate/CertificateGenerationParameters.cs
    startLine: 42
  assemblies:
  - Steeltoe.Security.DataProtection.CredHubBase
  namespace: Steeltoe.Security.DataProtection.CredHub
  summary: "\nGets or sets state/province of generated credential value\n"
  example: []
  syntax:
    content: public string State { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property State As String
  overload: Steeltoe.Security.DataProtection.CredHub.CertificateGenerationParameters.State*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Steeltoe.Security.DataProtection.CredHub.CertificateGenerationParameters.Country
  commentId: P:Steeltoe.Security.DataProtection.CredHub.CertificateGenerationParameters.Country
  id: Country
  parent: Steeltoe.Security.DataProtection.CredHub.CertificateGenerationParameters
  langs:
  - csharp
  - vb
  name: Country
  nameWithType: CertificateGenerationParameters.Country
  fullName: Steeltoe.Security.DataProtection.CredHub.CertificateGenerationParameters.Country
  type: Property
  source:
    remote:
      path: src/Security/src/DataProtection.CredHubBase/Credentials/Certificate/CertificateGenerationParameters.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Country
    path: ../Steeltoe/src/Security/src/DataProtection.CredHubBase/Credentials/Certificate/CertificateGenerationParameters.cs
    startLine: 47
  assemblies:
  - Steeltoe.Security.DataProtection.CredHubBase
  namespace: Steeltoe.Security.DataProtection.CredHub
  summary: "\nGets or sets country of generated credential value\n"
  example: []
  syntax:
    content: public string Country { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Country As String
  overload: Steeltoe.Security.DataProtection.CredHub.CertificateGenerationParameters.Country*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Steeltoe.Security.DataProtection.CredHub.CertificateGenerationParameters.KeyUsage
  commentId: P:Steeltoe.Security.DataProtection.CredHub.CertificateGenerationParameters.KeyUsage
  id: KeyUsage
  parent: Steeltoe.Security.DataProtection.CredHub.CertificateGenerationParameters
  langs:
  - csharp
  - vb
  name: KeyUsage
  nameWithType: CertificateGenerationParameters.KeyUsage
  fullName: Steeltoe.Security.DataProtection.CredHub.CertificateGenerationParameters.KeyUsage
  type: Property
  source:
    remote:
      path: src/Security/src/DataProtection.CredHubBase/Credentials/Certificate/CertificateGenerationParameters.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: KeyUsage
    path: ../Steeltoe/src/Security/src/DataProtection.CredHubBase/Credentials/Certificate/CertificateGenerationParameters.cs
    startLine: 52
  assemblies:
  - Steeltoe.Security.DataProtection.CredHubBase
  namespace: Steeltoe.Security.DataProtection.CredHub
  summary: "\nGets or sets key usage values\n"
  example: []
  syntax:
    content: >-
      [JsonPropertyName("key_usage")]

      public List<KeyUsage> KeyUsage { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.List{Steeltoe.Security.DataProtection.CredHub.KeyUsage}
    content.vb: >-
      <JsonPropertyName("key_usage")>

      Public Property KeyUsage As List(Of KeyUsage)
  overload: Steeltoe.Security.DataProtection.CredHub.CertificateGenerationParameters.KeyUsage*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: key_usage
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Steeltoe.Security.DataProtection.CredHub.CertificateGenerationParameters.ExtendedKeyUsage
  commentId: P:Steeltoe.Security.DataProtection.CredHub.CertificateGenerationParameters.ExtendedKeyUsage
  id: ExtendedKeyUsage
  parent: Steeltoe.Security.DataProtection.CredHub.CertificateGenerationParameters
  langs:
  - csharp
  - vb
  name: ExtendedKeyUsage
  nameWithType: CertificateGenerationParameters.ExtendedKeyUsage
  fullName: Steeltoe.Security.DataProtection.CredHub.CertificateGenerationParameters.ExtendedKeyUsage
  type: Property
  source:
    remote:
      path: src/Security/src/DataProtection.CredHubBase/Credentials/Certificate/CertificateGenerationParameters.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: ExtendedKeyUsage
    path: ../Steeltoe/src/Security/src/DataProtection.CredHubBase/Credentials/Certificate/CertificateGenerationParameters.cs
    startLine: 58
  assemblies:
  - Steeltoe.Security.DataProtection.CredHubBase
  namespace: Steeltoe.Security.DataProtection.CredHub
  summary: "\nGets or sets extended key usage values\n"
  example: []
  syntax:
    content: >-
      [JsonPropertyName("extended_key_usage")]

      public List<ExtendedKeyUsage> ExtendedKeyUsage { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.List{Steeltoe.Security.DataProtection.CredHub.ExtendedKeyUsage}
    content.vb: >-
      <JsonPropertyName("extended_key_usage")>

      Public Property ExtendedKeyUsage As List(Of ExtendedKeyUsage)
  overload: Steeltoe.Security.DataProtection.CredHub.CertificateGenerationParameters.ExtendedKeyUsage*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: extended_key_usage
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Steeltoe.Security.DataProtection.CredHub.CertificateGenerationParameters.Duration
  commentId: P:Steeltoe.Security.DataProtection.CredHub.CertificateGenerationParameters.Duration
  id: Duration
  parent: Steeltoe.Security.DataProtection.CredHub.CertificateGenerationParameters
  langs:
  - csharp
  - vb
  name: Duration
  nameWithType: CertificateGenerationParameters.Duration
  fullName: Steeltoe.Security.DataProtection.CredHub.CertificateGenerationParameters.Duration
  type: Property
  source:
    remote:
      path: src/Security/src/DataProtection.CredHubBase/Credentials/Certificate/CertificateGenerationParameters.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Duration
    path: ../Steeltoe/src/Security/src/DataProtection.CredHubBase/Credentials/Certificate/CertificateGenerationParameters.cs
    startLine: 64
  assemblies:
  - Steeltoe.Security.DataProtection.CredHubBase
  namespace: Steeltoe.Security.DataProtection.CredHub
  summary: "\nGets or sets duration in days of generated credential value\n"
  example: []
  syntax:
    content: public int Duration { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property Duration As Integer
  overload: Steeltoe.Security.DataProtection.CredHub.CertificateGenerationParameters.Duration*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Steeltoe.Security.DataProtection.CredHub.CertificateGenerationParameters.CertificateAuthority
  commentId: P:Steeltoe.Security.DataProtection.CredHub.CertificateGenerationParameters.CertificateAuthority
  id: CertificateAuthority
  parent: Steeltoe.Security.DataProtection.CredHub.CertificateGenerationParameters
  langs:
  - csharp
  - vb
  name: CertificateAuthority
  nameWithType: CertificateGenerationParameters.CertificateAuthority
  fullName: Steeltoe.Security.DataProtection.CredHub.CertificateGenerationParameters.CertificateAuthority
  type: Property
  source:
    remote:
      path: src/Security/src/DataProtection.CredHubBase/Credentials/Certificate/CertificateGenerationParameters.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: CertificateAuthority
    path: ../Steeltoe/src/Security/src/DataProtection.CredHubBase/Credentials/Certificate/CertificateGenerationParameters.cs
    startLine: 69
  assemblies:
  - Steeltoe.Security.DataProtection.CredHubBase
  namespace: Steeltoe.Security.DataProtection.CredHub
  summary: "\nGets or sets name of certificate authority to sign of generated credential value\n"
  example: []
  syntax:
    content: >-
      [JsonPropertyName("ca")]

      public string CertificateAuthority { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonPropertyName("ca")>

      Public Property CertificateAuthority As String
  overload: Steeltoe.Security.DataProtection.CredHub.CertificateGenerationParameters.CertificateAuthority*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: ca
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Steeltoe.Security.DataProtection.CredHub.CertificateGenerationParameters.IsCertificateAuthority
  commentId: P:Steeltoe.Security.DataProtection.CredHub.CertificateGenerationParameters.IsCertificateAuthority
  id: IsCertificateAuthority
  parent: Steeltoe.Security.DataProtection.CredHub.CertificateGenerationParameters
  langs:
  - csharp
  - vb
  name: IsCertificateAuthority
  nameWithType: CertificateGenerationParameters.IsCertificateAuthority
  fullName: Steeltoe.Security.DataProtection.CredHub.CertificateGenerationParameters.IsCertificateAuthority
  type: Property
  source:
    remote:
      path: src/Security/src/DataProtection.CredHubBase/Credentials/Certificate/CertificateGenerationParameters.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: IsCertificateAuthority
    path: ../Steeltoe/src/Security/src/DataProtection.CredHubBase/Credentials/Certificate/CertificateGenerationParameters.cs
    startLine: 75
  assemblies:
  - Steeltoe.Security.DataProtection.CredHubBase
  namespace: Steeltoe.Security.DataProtection.CredHub
  summary: "\nGets or sets a value indicating whether whether to generate credential value as a certificate authority\n"
  example: []
  syntax:
    content: >-
      [JsonPropertyName("is_ca")]

      public bool IsCertificateAuthority { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: >-
      <JsonPropertyName("is_ca")>

      Public Property IsCertificateAuthority As Boolean
  overload: Steeltoe.Security.DataProtection.CredHub.CertificateGenerationParameters.IsCertificateAuthority*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: is_ca
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Steeltoe.Security.DataProtection.CredHub.CertificateGenerationParameters.SelfSign
  commentId: P:Steeltoe.Security.DataProtection.CredHub.CertificateGenerationParameters.SelfSign
  id: SelfSign
  parent: Steeltoe.Security.DataProtection.CredHub.CertificateGenerationParameters
  langs:
  - csharp
  - vb
  name: SelfSign
  nameWithType: CertificateGenerationParameters.SelfSign
  fullName: Steeltoe.Security.DataProtection.CredHub.CertificateGenerationParameters.SelfSign
  type: Property
  source:
    remote:
      path: src/Security/src/DataProtection.CredHubBase/Credentials/Certificate/CertificateGenerationParameters.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: SelfSign
    path: ../Steeltoe/src/Security/src/DataProtection.CredHubBase/Credentials/Certificate/CertificateGenerationParameters.cs
    startLine: 81
  assemblies:
  - Steeltoe.Security.DataProtection.CredHubBase
  namespace: Steeltoe.Security.DataProtection.CredHub
  summary: "\nGets or sets a value indicating whether whether to self-sign generated credential value\n"
  example: []
  syntax:
    content: >-
      [JsonPropertyName("self_sign")]

      public bool SelfSign { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: >-
      <JsonPropertyName("self_sign")>

      Public Property SelfSign As Boolean
  overload: Steeltoe.Security.DataProtection.CredHub.CertificateGenerationParameters.SelfSign*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: self_sign
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Steeltoe.Security.DataProtection.CredHub
  commentId: N:Steeltoe.Security.DataProtection.CredHub
  name: Steeltoe.Security.DataProtection.CredHub
  nameWithType: Steeltoe.Security.DataProtection.CredHub
  fullName: Steeltoe.Security.DataProtection.CredHub
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Steeltoe.Security.DataProtection.CredHub.KeyParameters
  commentId: T:Steeltoe.Security.DataProtection.CredHub.KeyParameters
  parent: Steeltoe.Security.DataProtection.CredHub
  name: KeyParameters
  nameWithType: KeyParameters
  fullName: Steeltoe.Security.DataProtection.CredHub.KeyParameters
- uid: Steeltoe.Security.DataProtection.CredHub.ICredentialParameter
  commentId: T:Steeltoe.Security.DataProtection.CredHub.ICredentialParameter
  parent: Steeltoe.Security.DataProtection.CredHub
  name: ICredentialParameter
  nameWithType: ICredentialParameter
  fullName: Steeltoe.Security.DataProtection.CredHub.ICredentialParameter
- uid: Steeltoe.Security.DataProtection.CredHub.KeyParameters.KeyLength
  commentId: P:Steeltoe.Security.DataProtection.CredHub.KeyParameters.KeyLength
  parent: Steeltoe.Security.DataProtection.CredHub.KeyParameters
  name: KeyLength
  nameWithType: KeyParameters.KeyLength
  fullName: Steeltoe.Security.DataProtection.CredHub.KeyParameters.KeyLength
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Steeltoe.Security.DataProtection.CredHub.CertificateGenerationParameters.CommonName*
  commentId: Overload:Steeltoe.Security.DataProtection.CredHub.CertificateGenerationParameters.CommonName
  name: CommonName
  nameWithType: CertificateGenerationParameters.CommonName
  fullName: Steeltoe.Security.DataProtection.CredHub.CertificateGenerationParameters.CommonName
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Steeltoe.Security.DataProtection.CredHub.CertificateGenerationParameters.AlternativeNames*
  commentId: Overload:Steeltoe.Security.DataProtection.CredHub.CertificateGenerationParameters.AlternativeNames
  name: AlternativeNames
  nameWithType: CertificateGenerationParameters.AlternativeNames
  fullName: Steeltoe.Security.DataProtection.CredHub.CertificateGenerationParameters.AlternativeNames
- uid: System.Collections.Generic.List{System.String}
  commentId: T:System.Collections.Generic.List{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<String>
  nameWithType: List<String>
  fullName: System.Collections.Generic.List<System.String>
  nameWithType.vb: List(Of String)
  fullName.vb: System.Collections.Generic.List(Of System.String)
  name.vb: List(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Steeltoe.Security.DataProtection.CredHub.CertificateGenerationParameters.Organization*
  commentId: Overload:Steeltoe.Security.DataProtection.CredHub.CertificateGenerationParameters.Organization
  name: Organization
  nameWithType: CertificateGenerationParameters.Organization
  fullName: Steeltoe.Security.DataProtection.CredHub.CertificateGenerationParameters.Organization
- uid: Steeltoe.Security.DataProtection.CredHub.CertificateGenerationParameters.OrganizationUnit*
  commentId: Overload:Steeltoe.Security.DataProtection.CredHub.CertificateGenerationParameters.OrganizationUnit
  name: OrganizationUnit
  nameWithType: CertificateGenerationParameters.OrganizationUnit
  fullName: Steeltoe.Security.DataProtection.CredHub.CertificateGenerationParameters.OrganizationUnit
- uid: Steeltoe.Security.DataProtection.CredHub.CertificateGenerationParameters.Locality*
  commentId: Overload:Steeltoe.Security.DataProtection.CredHub.CertificateGenerationParameters.Locality
  name: Locality
  nameWithType: CertificateGenerationParameters.Locality
  fullName: Steeltoe.Security.DataProtection.CredHub.CertificateGenerationParameters.Locality
- uid: Steeltoe.Security.DataProtection.CredHub.CertificateGenerationParameters.State*
  commentId: Overload:Steeltoe.Security.DataProtection.CredHub.CertificateGenerationParameters.State
  name: State
  nameWithType: CertificateGenerationParameters.State
  fullName: Steeltoe.Security.DataProtection.CredHub.CertificateGenerationParameters.State
- uid: Steeltoe.Security.DataProtection.CredHub.CertificateGenerationParameters.Country*
  commentId: Overload:Steeltoe.Security.DataProtection.CredHub.CertificateGenerationParameters.Country
  name: Country
  nameWithType: CertificateGenerationParameters.Country
  fullName: Steeltoe.Security.DataProtection.CredHub.CertificateGenerationParameters.Country
- uid: Steeltoe.Security.DataProtection.CredHub.CertificateGenerationParameters.KeyUsage*
  commentId: Overload:Steeltoe.Security.DataProtection.CredHub.CertificateGenerationParameters.KeyUsage
  name: KeyUsage
  nameWithType: CertificateGenerationParameters.KeyUsage
  fullName: Steeltoe.Security.DataProtection.CredHub.CertificateGenerationParameters.KeyUsage
- uid: System.Collections.Generic.List{Steeltoe.Security.DataProtection.CredHub.KeyUsage}
  commentId: T:System.Collections.Generic.List{Steeltoe.Security.DataProtection.CredHub.KeyUsage}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<KeyUsage>
  nameWithType: List<KeyUsage>
  fullName: System.Collections.Generic.List<Steeltoe.Security.DataProtection.CredHub.KeyUsage>
  nameWithType.vb: List(Of KeyUsage)
  fullName.vb: System.Collections.Generic.List(Of Steeltoe.Security.DataProtection.CredHub.KeyUsage)
  name.vb: List(Of KeyUsage)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Steeltoe.Security.DataProtection.CredHub.KeyUsage
    name: KeyUsage
    nameWithType: KeyUsage
    fullName: Steeltoe.Security.DataProtection.CredHub.KeyUsage
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Steeltoe.Security.DataProtection.CredHub.KeyUsage
    name: KeyUsage
    nameWithType: KeyUsage
    fullName: Steeltoe.Security.DataProtection.CredHub.KeyUsage
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Security.DataProtection.CredHub.CertificateGenerationParameters.ExtendedKeyUsage*
  commentId: Overload:Steeltoe.Security.DataProtection.CredHub.CertificateGenerationParameters.ExtendedKeyUsage
  name: ExtendedKeyUsage
  nameWithType: CertificateGenerationParameters.ExtendedKeyUsage
  fullName: Steeltoe.Security.DataProtection.CredHub.CertificateGenerationParameters.ExtendedKeyUsage
- uid: System.Collections.Generic.List{Steeltoe.Security.DataProtection.CredHub.ExtendedKeyUsage}
  commentId: T:System.Collections.Generic.List{Steeltoe.Security.DataProtection.CredHub.ExtendedKeyUsage}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<ExtendedKeyUsage>
  nameWithType: List<ExtendedKeyUsage>
  fullName: System.Collections.Generic.List<Steeltoe.Security.DataProtection.CredHub.ExtendedKeyUsage>
  nameWithType.vb: List(Of ExtendedKeyUsage)
  fullName.vb: System.Collections.Generic.List(Of Steeltoe.Security.DataProtection.CredHub.ExtendedKeyUsage)
  name.vb: List(Of ExtendedKeyUsage)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Steeltoe.Security.DataProtection.CredHub.ExtendedKeyUsage
    name: ExtendedKeyUsage
    nameWithType: ExtendedKeyUsage
    fullName: Steeltoe.Security.DataProtection.CredHub.ExtendedKeyUsage
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Steeltoe.Security.DataProtection.CredHub.ExtendedKeyUsage
    name: ExtendedKeyUsage
    nameWithType: ExtendedKeyUsage
    fullName: Steeltoe.Security.DataProtection.CredHub.ExtendedKeyUsage
  - name: )
    nameWithType: )
    fullName: )
- uid: Steeltoe.Security.DataProtection.CredHub.CertificateGenerationParameters.Duration*
  commentId: Overload:Steeltoe.Security.DataProtection.CredHub.CertificateGenerationParameters.Duration
  name: Duration
  nameWithType: CertificateGenerationParameters.Duration
  fullName: Steeltoe.Security.DataProtection.CredHub.CertificateGenerationParameters.Duration
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Steeltoe.Security.DataProtection.CredHub.CertificateGenerationParameters.CertificateAuthority*
  commentId: Overload:Steeltoe.Security.DataProtection.CredHub.CertificateGenerationParameters.CertificateAuthority
  name: CertificateAuthority
  nameWithType: CertificateGenerationParameters.CertificateAuthority
  fullName: Steeltoe.Security.DataProtection.CredHub.CertificateGenerationParameters.CertificateAuthority
- uid: Steeltoe.Security.DataProtection.CredHub.CertificateGenerationParameters.IsCertificateAuthority*
  commentId: Overload:Steeltoe.Security.DataProtection.CredHub.CertificateGenerationParameters.IsCertificateAuthority
  name: IsCertificateAuthority
  nameWithType: CertificateGenerationParameters.IsCertificateAuthority
  fullName: Steeltoe.Security.DataProtection.CredHub.CertificateGenerationParameters.IsCertificateAuthority
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Steeltoe.Security.DataProtection.CredHub.CertificateGenerationParameters.SelfSign*
  commentId: Overload:Steeltoe.Security.DataProtection.CredHub.CertificateGenerationParameters.SelfSign
  name: SelfSign
  nameWithType: CertificateGenerationParameters.SelfSign
  fullName: Steeltoe.Security.DataProtection.CredHub.CertificateGenerationParameters.SelfSign
