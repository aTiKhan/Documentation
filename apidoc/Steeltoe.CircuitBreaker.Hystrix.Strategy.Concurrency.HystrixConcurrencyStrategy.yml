### YamlMime:ManagedReference
items:
- uid: Steeltoe.CircuitBreaker.Hystrix.Strategy.Concurrency.HystrixConcurrencyStrategy
  commentId: T:Steeltoe.CircuitBreaker.Hystrix.Strategy.Concurrency.HystrixConcurrencyStrategy
  id: HystrixConcurrencyStrategy
  parent: Steeltoe.CircuitBreaker.Hystrix.Strategy.Concurrency
  children:
  - Steeltoe.CircuitBreaker.Hystrix.Strategy.Concurrency.HystrixConcurrencyStrategy.GetRequestVariable``1(``0)
  - Steeltoe.CircuitBreaker.Hystrix.Strategy.Concurrency.HystrixConcurrencyStrategy.GetRequestVariable``1(System.Func{``0})
  - Steeltoe.CircuitBreaker.Hystrix.Strategy.Concurrency.HystrixConcurrencyStrategy.GetRequestVariable``1(System.Func{``0},System.Action{``0})
  - Steeltoe.CircuitBreaker.Hystrix.Strategy.Concurrency.HystrixConcurrencyStrategy.GetTaskScheduler(Steeltoe.CircuitBreaker.Hystrix.IHystrixThreadPoolOptions)
  langs:
  - csharp
  - vb
  name: HystrixConcurrencyStrategy
  nameWithType: HystrixConcurrencyStrategy
  fullName: Steeltoe.CircuitBreaker.Hystrix.Strategy.Concurrency.HystrixConcurrencyStrategy
  type: Class
  source:
    remote:
      path: src/CircuitBreaker/src/HystrixBase/Strategy/Concurrency/HystrixConcurrencyStrategy.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: HystrixConcurrencyStrategy
    path: ../Steeltoe/src/CircuitBreaker/src/HystrixBase/Strategy/Concurrency/HystrixConcurrencyStrategy.cs
    startLine: 8
  assemblies:
  - Steeltoe.CircuitBreaker.HystrixBase
  namespace: Steeltoe.CircuitBreaker.Hystrix.Strategy.Concurrency
  syntax:
    content: public class HystrixConcurrencyStrategy
    content.vb: Public Class HystrixConcurrencyStrategy
  inheritance:
  - System.Object
  derivedClasses:
  - Steeltoe.CircuitBreaker.Hystrix.Strategy.Concurrency.HystrixConcurrencyStrategyDefault
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Steeltoe.CircuitBreaker.Hystrix.Strategy.Concurrency.HystrixConcurrencyStrategy.GetTaskScheduler(Steeltoe.CircuitBreaker.Hystrix.IHystrixThreadPoolOptions)
  commentId: M:Steeltoe.CircuitBreaker.Hystrix.Strategy.Concurrency.HystrixConcurrencyStrategy.GetTaskScheduler(Steeltoe.CircuitBreaker.Hystrix.IHystrixThreadPoolOptions)
  id: GetTaskScheduler(Steeltoe.CircuitBreaker.Hystrix.IHystrixThreadPoolOptions)
  parent: Steeltoe.CircuitBreaker.Hystrix.Strategy.Concurrency.HystrixConcurrencyStrategy
  langs:
  - csharp
  - vb
  name: GetTaskScheduler(IHystrixThreadPoolOptions)
  nameWithType: HystrixConcurrencyStrategy.GetTaskScheduler(IHystrixThreadPoolOptions)
  fullName: Steeltoe.CircuitBreaker.Hystrix.Strategy.Concurrency.HystrixConcurrencyStrategy.GetTaskScheduler(Steeltoe.CircuitBreaker.Hystrix.IHystrixThreadPoolOptions)
  type: Method
  source:
    remote:
      path: src/CircuitBreaker/src/HystrixBase/Strategy/Concurrency/HystrixConcurrencyStrategy.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: GetTaskScheduler
    path: ../Steeltoe/src/CircuitBreaker/src/HystrixBase/Strategy/Concurrency/HystrixConcurrencyStrategy.cs
    startLine: 10
  assemblies:
  - Steeltoe.CircuitBreaker.HystrixBase
  namespace: Steeltoe.CircuitBreaker.Hystrix.Strategy.Concurrency
  syntax:
    content: public virtual HystrixTaskScheduler GetTaskScheduler(IHystrixThreadPoolOptions options)
    parameters:
    - id: options
      type: Steeltoe.CircuitBreaker.Hystrix.IHystrixThreadPoolOptions
    return:
      type: Steeltoe.CircuitBreaker.Hystrix.Strategy.Concurrency.HystrixTaskScheduler
    content.vb: Public Overridable Function GetTaskScheduler(options As IHystrixThreadPoolOptions) As HystrixTaskScheduler
  overload: Steeltoe.CircuitBreaker.Hystrix.Strategy.Concurrency.HystrixConcurrencyStrategy.GetTaskScheduler*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Steeltoe.CircuitBreaker.Hystrix.Strategy.Concurrency.HystrixConcurrencyStrategy.GetRequestVariable``1(``0)
  commentId: M:Steeltoe.CircuitBreaker.Hystrix.Strategy.Concurrency.HystrixConcurrencyStrategy.GetRequestVariable``1(``0)
  id: GetRequestVariable``1(``0)
  parent: Steeltoe.CircuitBreaker.Hystrix.Strategy.Concurrency.HystrixConcurrencyStrategy
  langs:
  - csharp
  - vb
  name: GetRequestVariable<T>(T)
  nameWithType: HystrixConcurrencyStrategy.GetRequestVariable<T>(T)
  fullName: Steeltoe.CircuitBreaker.Hystrix.Strategy.Concurrency.HystrixConcurrencyStrategy.GetRequestVariable<T>(T)
  type: Method
  source:
    remote:
      path: src/CircuitBreaker/src/HystrixBase/Strategy/Concurrency/HystrixConcurrencyStrategy.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: GetRequestVariable
    path: ../Steeltoe/src/CircuitBreaker/src/HystrixBase/Strategy/Concurrency/HystrixConcurrencyStrategy.cs
    startLine: 22
  assemblies:
  - Steeltoe.CircuitBreaker.HystrixBase
  namespace: Steeltoe.CircuitBreaker.Hystrix.Strategy.Concurrency
  syntax:
    content: public virtual IHystrixRequestVariable<T> GetRequestVariable<T>(T value)
    parameters:
    - id: value
      type: '{T}'
    typeParameters:
    - id: T
    return:
      type: Steeltoe.CircuitBreaker.Hystrix.Strategy.Concurrency.IHystrixRequestVariable{{T}}
    content.vb: Public Overridable Function GetRequestVariable(Of T)(value As T) As IHystrixRequestVariable(Of T)
  overload: Steeltoe.CircuitBreaker.Hystrix.Strategy.Concurrency.HystrixConcurrencyStrategy.GetRequestVariable*
  nameWithType.vb: HystrixConcurrencyStrategy.GetRequestVariable(Of T)(T)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Steeltoe.CircuitBreaker.Hystrix.Strategy.Concurrency.HystrixConcurrencyStrategy.GetRequestVariable(Of T)(T)
  name.vb: GetRequestVariable(Of T)(T)
- uid: Steeltoe.CircuitBreaker.Hystrix.Strategy.Concurrency.HystrixConcurrencyStrategy.GetRequestVariable``1(System.Func{``0},System.Action{``0})
  commentId: M:Steeltoe.CircuitBreaker.Hystrix.Strategy.Concurrency.HystrixConcurrencyStrategy.GetRequestVariable``1(System.Func{``0},System.Action{``0})
  id: GetRequestVariable``1(System.Func{``0},System.Action{``0})
  parent: Steeltoe.CircuitBreaker.Hystrix.Strategy.Concurrency.HystrixConcurrencyStrategy
  langs:
  - csharp
  - vb
  name: GetRequestVariable<T>(Func<T>, Action<T>)
  nameWithType: HystrixConcurrencyStrategy.GetRequestVariable<T>(Func<T>, Action<T>)
  fullName: Steeltoe.CircuitBreaker.Hystrix.Strategy.Concurrency.HystrixConcurrencyStrategy.GetRequestVariable<T>(System.Func<T>, System.Action<T>)
  type: Method
  source:
    remote:
      path: src/CircuitBreaker/src/HystrixBase/Strategy/Concurrency/HystrixConcurrencyStrategy.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: GetRequestVariable
    path: ../Steeltoe/src/CircuitBreaker/src/HystrixBase/Strategy/Concurrency/HystrixConcurrencyStrategy.cs
    startLine: 27
  assemblies:
  - Steeltoe.CircuitBreaker.HystrixBase
  namespace: Steeltoe.CircuitBreaker.Hystrix.Strategy.Concurrency
  syntax:
    content: public virtual IHystrixRequestVariable<T> GetRequestVariable<T>(Func<T> valueFactory, Action<T> disposeAction)
    parameters:
    - id: valueFactory
      type: System.Func{{T}}
    - id: disposeAction
      type: System.Action{{T}}
    typeParameters:
    - id: T
    return:
      type: Steeltoe.CircuitBreaker.Hystrix.Strategy.Concurrency.IHystrixRequestVariable{{T}}
    content.vb: Public Overridable Function GetRequestVariable(Of T)(valueFactory As Func(Of T), disposeAction As Action(Of T)) As IHystrixRequestVariable(Of T)
  overload: Steeltoe.CircuitBreaker.Hystrix.Strategy.Concurrency.HystrixConcurrencyStrategy.GetRequestVariable*
  nameWithType.vb: HystrixConcurrencyStrategy.GetRequestVariable(Of T)(Func(Of T), Action(Of T))
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Steeltoe.CircuitBreaker.Hystrix.Strategy.Concurrency.HystrixConcurrencyStrategy.GetRequestVariable(Of T)(System.Func(Of T), System.Action(Of T))
  name.vb: GetRequestVariable(Of T)(Func(Of T), Action(Of T))
- uid: Steeltoe.CircuitBreaker.Hystrix.Strategy.Concurrency.HystrixConcurrencyStrategy.GetRequestVariable``1(System.Func{``0})
  commentId: M:Steeltoe.CircuitBreaker.Hystrix.Strategy.Concurrency.HystrixConcurrencyStrategy.GetRequestVariable``1(System.Func{``0})
  id: GetRequestVariable``1(System.Func{``0})
  parent: Steeltoe.CircuitBreaker.Hystrix.Strategy.Concurrency.HystrixConcurrencyStrategy
  langs:
  - csharp
  - vb
  name: GetRequestVariable<T>(Func<T>)
  nameWithType: HystrixConcurrencyStrategy.GetRequestVariable<T>(Func<T>)
  fullName: Steeltoe.CircuitBreaker.Hystrix.Strategy.Concurrency.HystrixConcurrencyStrategy.GetRequestVariable<T>(System.Func<T>)
  type: Method
  source:
    remote:
      path: src/CircuitBreaker/src/HystrixBase/Strategy/Concurrency/HystrixConcurrencyStrategy.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: GetRequestVariable
    path: ../Steeltoe/src/CircuitBreaker/src/HystrixBase/Strategy/Concurrency/HystrixConcurrencyStrategy.cs
    startLine: 32
  assemblies:
  - Steeltoe.CircuitBreaker.HystrixBase
  namespace: Steeltoe.CircuitBreaker.Hystrix.Strategy.Concurrency
  syntax:
    content: public virtual IHystrixRequestVariable<T> GetRequestVariable<T>(Func<T> valueFactory)
    parameters:
    - id: valueFactory
      type: System.Func{{T}}
    typeParameters:
    - id: T
    return:
      type: Steeltoe.CircuitBreaker.Hystrix.Strategy.Concurrency.IHystrixRequestVariable{{T}}
    content.vb: Public Overridable Function GetRequestVariable(Of T)(valueFactory As Func(Of T)) As IHystrixRequestVariable(Of T)
  overload: Steeltoe.CircuitBreaker.Hystrix.Strategy.Concurrency.HystrixConcurrencyStrategy.GetRequestVariable*
  nameWithType.vb: HystrixConcurrencyStrategy.GetRequestVariable(Of T)(Func(Of T))
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Steeltoe.CircuitBreaker.Hystrix.Strategy.Concurrency.HystrixConcurrencyStrategy.GetRequestVariable(Of T)(System.Func(Of T))
  name.vb: GetRequestVariable(Of T)(Func(Of T))
references:
- uid: Steeltoe.CircuitBreaker.Hystrix.Strategy.Concurrency
  commentId: N:Steeltoe.CircuitBreaker.Hystrix.Strategy.Concurrency
  name: Steeltoe.CircuitBreaker.Hystrix.Strategy.Concurrency
  nameWithType: Steeltoe.CircuitBreaker.Hystrix.Strategy.Concurrency
  fullName: Steeltoe.CircuitBreaker.Hystrix.Strategy.Concurrency
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Steeltoe.CircuitBreaker.Hystrix.Strategy.Concurrency.HystrixConcurrencyStrategy.GetTaskScheduler*
  commentId: Overload:Steeltoe.CircuitBreaker.Hystrix.Strategy.Concurrency.HystrixConcurrencyStrategy.GetTaskScheduler
  name: GetTaskScheduler
  nameWithType: HystrixConcurrencyStrategy.GetTaskScheduler
  fullName: Steeltoe.CircuitBreaker.Hystrix.Strategy.Concurrency.HystrixConcurrencyStrategy.GetTaskScheduler
- uid: Steeltoe.CircuitBreaker.Hystrix.IHystrixThreadPoolOptions
  commentId: T:Steeltoe.CircuitBreaker.Hystrix.IHystrixThreadPoolOptions
  parent: Steeltoe.CircuitBreaker.Hystrix
  name: IHystrixThreadPoolOptions
  nameWithType: IHystrixThreadPoolOptions
  fullName: Steeltoe.CircuitBreaker.Hystrix.IHystrixThreadPoolOptions
- uid: Steeltoe.CircuitBreaker.Hystrix.Strategy.Concurrency.HystrixTaskScheduler
  commentId: T:Steeltoe.CircuitBreaker.Hystrix.Strategy.Concurrency.HystrixTaskScheduler
  parent: Steeltoe.CircuitBreaker.Hystrix.Strategy.Concurrency
  name: HystrixTaskScheduler
  nameWithType: HystrixTaskScheduler
  fullName: Steeltoe.CircuitBreaker.Hystrix.Strategy.Concurrency.HystrixTaskScheduler
- uid: Steeltoe.CircuitBreaker.Hystrix
  commentId: N:Steeltoe.CircuitBreaker.Hystrix
  name: Steeltoe.CircuitBreaker.Hystrix
  nameWithType: Steeltoe.CircuitBreaker.Hystrix
  fullName: Steeltoe.CircuitBreaker.Hystrix
- uid: Steeltoe.CircuitBreaker.Hystrix.Strategy.Concurrency.HystrixConcurrencyStrategy.GetRequestVariable*
  commentId: Overload:Steeltoe.CircuitBreaker.Hystrix.Strategy.Concurrency.HystrixConcurrencyStrategy.GetRequestVariable
  name: GetRequestVariable
  nameWithType: HystrixConcurrencyStrategy.GetRequestVariable
  fullName: Steeltoe.CircuitBreaker.Hystrix.Strategy.Concurrency.HystrixConcurrencyStrategy.GetRequestVariable
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: Steeltoe.CircuitBreaker.Hystrix.Strategy.Concurrency.IHystrixRequestVariable{{T}}
  commentId: T:Steeltoe.CircuitBreaker.Hystrix.Strategy.Concurrency.IHystrixRequestVariable{``0}
  parent: Steeltoe.CircuitBreaker.Hystrix.Strategy.Concurrency
  definition: Steeltoe.CircuitBreaker.Hystrix.Strategy.Concurrency.IHystrixRequestVariable`1
  name: IHystrixRequestVariable<T>
  nameWithType: IHystrixRequestVariable<T>
  fullName: Steeltoe.CircuitBreaker.Hystrix.Strategy.Concurrency.IHystrixRequestVariable<T>
  nameWithType.vb: IHystrixRequestVariable(Of T)
  fullName.vb: Steeltoe.CircuitBreaker.Hystrix.Strategy.Concurrency.IHystrixRequestVariable(Of T)
  name.vb: IHystrixRequestVariable(Of T)
  spec.csharp:
  - uid: Steeltoe.CircuitBreaker.Hystrix.Strategy.Concurrency.IHystrixRequestVariable`1
    name: IHystrixRequestVariable
    nameWithType: IHystrixRequestVariable
    fullName: Steeltoe.CircuitBreaker.Hystrix.Strategy.Concurrency.IHystrixRequestVariable
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Steeltoe.CircuitBreaker.Hystrix.Strategy.Concurrency.IHystrixRequestVariable`1
    name: IHystrixRequestVariable
    nameWithType: IHystrixRequestVariable
    fullName: Steeltoe.CircuitBreaker.Hystrix.Strategy.Concurrency.IHystrixRequestVariable
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: Steeltoe.CircuitBreaker.Hystrix.Strategy.Concurrency.IHystrixRequestVariable`1
  commentId: T:Steeltoe.CircuitBreaker.Hystrix.Strategy.Concurrency.IHystrixRequestVariable`1
  name: IHystrixRequestVariable<T>
  nameWithType: IHystrixRequestVariable<T>
  fullName: Steeltoe.CircuitBreaker.Hystrix.Strategy.Concurrency.IHystrixRequestVariable<T>
  nameWithType.vb: IHystrixRequestVariable(Of T)
  fullName.vb: Steeltoe.CircuitBreaker.Hystrix.Strategy.Concurrency.IHystrixRequestVariable(Of T)
  name.vb: IHystrixRequestVariable(Of T)
  spec.csharp:
  - uid: Steeltoe.CircuitBreaker.Hystrix.Strategy.Concurrency.IHystrixRequestVariable`1
    name: IHystrixRequestVariable
    nameWithType: IHystrixRequestVariable
    fullName: Steeltoe.CircuitBreaker.Hystrix.Strategy.Concurrency.IHystrixRequestVariable
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Steeltoe.CircuitBreaker.Hystrix.Strategy.Concurrency.IHystrixRequestVariable`1
    name: IHystrixRequestVariable
    nameWithType: IHystrixRequestVariable
    fullName: Steeltoe.CircuitBreaker.Hystrix.Strategy.Concurrency.IHystrixRequestVariable
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Func{{T}}
  commentId: T:System.Func{``0}
  parent: System
  definition: System.Func`1
  name: Func<T>
  nameWithType: Func<T>
  fullName: System.Func<T>
  nameWithType.vb: Func(Of T)
  fullName.vb: System.Func(Of T)
  name.vb: Func(Of T)
  spec.csharp:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Action{{T}}
  commentId: T:System.Action{``0}
  parent: System
  definition: System.Action`1
  name: Action<T>
  nameWithType: Action<T>
  fullName: System.Action<T>
  nameWithType.vb: Action(Of T)
  fullName.vb: System.Action(Of T)
  name.vb: Action(Of T)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Func`1
  commentId: T:System.Func`1
  isExternal: true
  name: Func<TResult>
  nameWithType: Func<TResult>
  fullName: System.Func<TResult>
  nameWithType.vb: Func(Of TResult)
  fullName.vb: System.Func(Of TResult)
  name.vb: Func(Of TResult)
  spec.csharp:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Action`1
  commentId: T:System.Action`1
  isExternal: true
  name: Action<T>
  nameWithType: Action<T>
  fullName: System.Action<T>
  nameWithType.vb: Action(Of T)
  fullName.vb: System.Action(Of T)
  name.vb: Action(Of T)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
