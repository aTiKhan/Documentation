### YamlMime:ManagedReference
items:
- uid: Steeltoe.Extensions.Logging.DynamicLoggerHostBuilderExtensions
  commentId: T:Steeltoe.Extensions.Logging.DynamicLoggerHostBuilderExtensions
  id: DynamicLoggerHostBuilderExtensions
  parent: Steeltoe.Extensions.Logging
  children:
  - Steeltoe.Extensions.Logging.DynamicLoggerHostBuilderExtensions.AddDynamicLogging(IHostBuilder)
  langs:
  - csharp
  - vb
  name: DynamicLoggerHostBuilderExtensions
  nameWithType: DynamicLoggerHostBuilderExtensions
  fullName: Steeltoe.Extensions.Logging.DynamicLoggerHostBuilderExtensions
  type: Class
  source:
    remote:
      path: src/Logging/src/DynamicLogger/DynamicLoggerHostBuilderExtensions.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: DynamicLoggerHostBuilderExtensions
    path: ../Steeltoe/src/Logging/src/DynamicLogger/DynamicLoggerHostBuilderExtensions.cs
    startLine: 9
  assemblies:
  - Steeltoe.Extensions.Logging.DynamicLogger
  namespace: Steeltoe.Extensions.Logging
  syntax:
    content: public static class DynamicLoggerHostBuilderExtensions
    content.vb: Public Module DynamicLoggerHostBuilderExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Steeltoe.Extensions.Logging.DynamicLoggerHostBuilderExtensions.AddDynamicLogging(IHostBuilder)
  commentId: M:Steeltoe.Extensions.Logging.DynamicLoggerHostBuilderExtensions.AddDynamicLogging(IHostBuilder)
  id: AddDynamicLogging(IHostBuilder)
  isExtensionMethod: true
  parent: Steeltoe.Extensions.Logging.DynamicLoggerHostBuilderExtensions
  langs:
  - csharp
  - vb
  name: AddDynamicLogging(IHostBuilder)
  nameWithType: DynamicLoggerHostBuilderExtensions.AddDynamicLogging(IHostBuilder)
  fullName: Steeltoe.Extensions.Logging.DynamicLoggerHostBuilderExtensions.AddDynamicLogging(IHostBuilder)
  type: Method
  source:
    remote:
      path: src/Logging/src/DynamicLogger/DynamicLoggerHostBuilderExtensions.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: AddDynamicLogging
    path: ../Steeltoe/src/Logging/src/DynamicLogger/DynamicLoggerHostBuilderExtensions.cs
    startLine: 16
  assemblies:
  - Steeltoe.Extensions.Logging.DynamicLogger
  namespace: Steeltoe.Extensions.Logging
  summary: "\nAdds Dynamic Console Logging to your application. Removes ConsoleLoggerProvider if found (to prevent duplicate console log entries)<p></p>\nAlso calls ILoggingBuilder.AddConfiguration() if not previously called.\n"
  example: []
  syntax:
    content: public static IHostBuilder AddDynamicLogging(this IHostBuilder hostBuilder)
    parameters:
    - id: hostBuilder
      type: IHostBuilder
      description: Your HostBuilder
    return:
      type: IHostBuilder
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function AddDynamicLogging(hostBuilder As IHostBuilder) As IHostBuilder
  overload: Steeltoe.Extensions.Logging.DynamicLoggerHostBuilderExtensions.AddDynamicLogging*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Steeltoe.Extensions.Logging
  commentId: N:Steeltoe.Extensions.Logging
  name: Steeltoe.Extensions.Logging
  nameWithType: Steeltoe.Extensions.Logging
  fullName: Steeltoe.Extensions.Logging
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Steeltoe.Extensions.Logging.DynamicLoggerHostBuilderExtensions.AddDynamicLogging*
  commentId: Overload:Steeltoe.Extensions.Logging.DynamicLoggerHostBuilderExtensions.AddDynamicLogging
  name: AddDynamicLogging
  nameWithType: DynamicLoggerHostBuilderExtensions.AddDynamicLogging
  fullName: Steeltoe.Extensions.Logging.DynamicLoggerHostBuilderExtensions.AddDynamicLogging
- uid: IHostBuilder
  isExternal: true
  name: IHostBuilder
  nameWithType: IHostBuilder
  fullName: IHostBuilder
