### YamlMime:ManagedReference
items:
- uid: Steeltoe.Discovery.Kubernetes.Discovery.Input
  commentId: T:Steeltoe.Discovery.Kubernetes.Discovery.Input
  id: Input
  parent: Steeltoe.Discovery.Kubernetes.Discovery
  children:
  - Steeltoe.Discovery.Kubernetes.Discovery.Input.#ctor(System.String,System.Nullable{System.Int32},System.Collections.Generic.IDictionary{System.String,System.String},System.Collections.Generic.IDictionary{System.String,System.String})
  - Steeltoe.Discovery.Kubernetes.Discovery.Input.GetPort
  - Steeltoe.Discovery.Kubernetes.Discovery.Input.GetServiceAnnotations
  - Steeltoe.Discovery.Kubernetes.Discovery.Input.GetServiceLabels
  - Steeltoe.Discovery.Kubernetes.Discovery.Input.GetServiceName
  langs:
  - csharp
  - vb
  name: Input
  nameWithType: Input
  fullName: Steeltoe.Discovery.Kubernetes.Discovery.Input
  type: Class
  source:
    remote:
      path: src/Discovery/src/Kubernetes/Discovery/Input.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: Input
    path: ../Steeltoe/src/Discovery/src/Kubernetes/Discovery/Input.cs
    startLine: 8
  assemblies:
  - Steeltoe.Discovery.Kubernetes
  namespace: Steeltoe.Discovery.Kubernetes.Discovery
  syntax:
    content: public class Input
    content.vb: Public Class Input
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Steeltoe.Discovery.Kubernetes.Discovery.Input.#ctor(System.String,System.Nullable{System.Int32},System.Collections.Generic.IDictionary{System.String,System.String},System.Collections.Generic.IDictionary{System.String,System.String})
  commentId: M:Steeltoe.Discovery.Kubernetes.Discovery.Input.#ctor(System.String,System.Nullable{System.Int32},System.Collections.Generic.IDictionary{System.String,System.String},System.Collections.Generic.IDictionary{System.String,System.String})
  id: '#ctor(System.String,System.Nullable{System.Int32},System.Collections.Generic.IDictionary{System.String,System.String},System.Collections.Generic.IDictionary{System.String,System.String})'
  parent: Steeltoe.Discovery.Kubernetes.Discovery.Input
  langs:
  - csharp
  - vb
  name: Input(String, Nullable<Int32>, IDictionary<String, String>, IDictionary<String, String>)
  nameWithType: Input.Input(String, Nullable<Int32>, IDictionary<String, String>, IDictionary<String, String>)
  fullName: Steeltoe.Discovery.Kubernetes.Discovery.Input.Input(System.String, System.Nullable<System.Int32>, System.Collections.Generic.IDictionary<System.String, System.String>, System.Collections.Generic.IDictionary<System.String, System.String>)
  type: Constructor
  source:
    remote:
      path: src/Discovery/src/Kubernetes/Discovery/Input.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: .ctor
    path: ../Steeltoe/src/Discovery/src/Kubernetes/Discovery/Input.cs
    startLine: 15
  assemblies:
  - Steeltoe.Discovery.Kubernetes
  namespace: Steeltoe.Discovery.Kubernetes.Discovery
  syntax:
    content: public Input(string serviceName, int? port = default(int? ), IDictionary<string, string> serviceLabels = null, IDictionary<string, string> serviceAnnotations = null)
    parameters:
    - id: serviceName
      type: System.String
    - id: port
      type: System.Nullable{System.Int32}
    - id: serviceLabels
      type: System.Collections.Generic.IDictionary{System.String,System.String}
    - id: serviceAnnotations
      type: System.Collections.Generic.IDictionary{System.String,System.String}
    content.vb: Public Sub New(serviceName As String, port As Integer? = Nothing, serviceLabels As IDictionary(Of String, String) = Nothing, serviceAnnotations As IDictionary(Of String, String) = Nothing)
  overload: Steeltoe.Discovery.Kubernetes.Discovery.Input.#ctor*
  nameWithType.vb: Input.Input(String, Nullable(Of Int32), IDictionary(Of String, String), IDictionary(Of String, String))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Steeltoe.Discovery.Kubernetes.Discovery.Input.Input(System.String, System.Nullable(Of System.Int32), System.Collections.Generic.IDictionary(Of System.String, System.String), System.Collections.Generic.IDictionary(Of System.String, System.String))
  name.vb: Input(String, Nullable(Of Int32), IDictionary(Of String, String), IDictionary(Of String, String))
- uid: Steeltoe.Discovery.Kubernetes.Discovery.Input.GetServiceName
  commentId: M:Steeltoe.Discovery.Kubernetes.Discovery.Input.GetServiceName
  id: GetServiceName
  parent: Steeltoe.Discovery.Kubernetes.Discovery.Input
  langs:
  - csharp
  - vb
  name: GetServiceName()
  nameWithType: Input.GetServiceName()
  fullName: Steeltoe.Discovery.Kubernetes.Discovery.Input.GetServiceName()
  type: Method
  source:
    remote:
      path: src/Discovery/src/Kubernetes/Discovery/Input.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: GetServiceName
    path: ../Steeltoe/src/Discovery/src/Kubernetes/Discovery/Input.cs
    startLine: 23
  assemblies:
  - Steeltoe.Discovery.Kubernetes
  namespace: Steeltoe.Discovery.Kubernetes.Discovery
  syntax:
    content: public string GetServiceName()
    return:
      type: System.String
    content.vb: Public Function GetServiceName As String
  overload: Steeltoe.Discovery.Kubernetes.Discovery.Input.GetServiceName*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Steeltoe.Discovery.Kubernetes.Discovery.Input.GetServiceLabels
  commentId: M:Steeltoe.Discovery.Kubernetes.Discovery.Input.GetServiceLabels
  id: GetServiceLabels
  parent: Steeltoe.Discovery.Kubernetes.Discovery.Input
  langs:
  - csharp
  - vb
  name: GetServiceLabels()
  nameWithType: Input.GetServiceLabels()
  fullName: Steeltoe.Discovery.Kubernetes.Discovery.Input.GetServiceLabels()
  type: Method
  source:
    remote:
      path: src/Discovery/src/Kubernetes/Discovery/Input.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: GetServiceLabels
    path: ../Steeltoe/src/Discovery/src/Kubernetes/Discovery/Input.cs
    startLine: 28
  assemblies:
  - Steeltoe.Discovery.Kubernetes
  namespace: Steeltoe.Discovery.Kubernetes.Discovery
  syntax:
    content: public IDictionary<string, string> GetServiceLabels()
    return:
      type: System.Collections.Generic.IDictionary{System.String,System.String}
    content.vb: Public Function GetServiceLabels As IDictionary(Of String, String)
  overload: Steeltoe.Discovery.Kubernetes.Discovery.Input.GetServiceLabels*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Steeltoe.Discovery.Kubernetes.Discovery.Input.GetServiceAnnotations
  commentId: M:Steeltoe.Discovery.Kubernetes.Discovery.Input.GetServiceAnnotations
  id: GetServiceAnnotations
  parent: Steeltoe.Discovery.Kubernetes.Discovery.Input
  langs:
  - csharp
  - vb
  name: GetServiceAnnotations()
  nameWithType: Input.GetServiceAnnotations()
  fullName: Steeltoe.Discovery.Kubernetes.Discovery.Input.GetServiceAnnotations()
  type: Method
  source:
    remote:
      path: src/Discovery/src/Kubernetes/Discovery/Input.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: GetServiceAnnotations
    path: ../Steeltoe/src/Discovery/src/Kubernetes/Discovery/Input.cs
    startLine: 33
  assemblies:
  - Steeltoe.Discovery.Kubernetes
  namespace: Steeltoe.Discovery.Kubernetes.Discovery
  syntax:
    content: public IDictionary<string, string> GetServiceAnnotations()
    return:
      type: System.Collections.Generic.IDictionary{System.String,System.String}
    content.vb: Public Function GetServiceAnnotations As IDictionary(Of String, String)
  overload: Steeltoe.Discovery.Kubernetes.Discovery.Input.GetServiceAnnotations*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Steeltoe.Discovery.Kubernetes.Discovery.Input.GetPort
  commentId: M:Steeltoe.Discovery.Kubernetes.Discovery.Input.GetPort
  id: GetPort
  parent: Steeltoe.Discovery.Kubernetes.Discovery.Input
  langs:
  - csharp
  - vb
  name: GetPort()
  nameWithType: Input.GetPort()
  fullName: Steeltoe.Discovery.Kubernetes.Discovery.Input.GetPort()
  type: Method
  source:
    remote:
      path: src/Discovery/src/Kubernetes/Discovery/Input.cs
      branch: master
      repo: https://github.com/SteeltoeOSS/steeltoe
    id: GetPort
    path: ../Steeltoe/src/Discovery/src/Kubernetes/Discovery/Input.cs
    startLine: 38
  assemblies:
  - Steeltoe.Discovery.Kubernetes
  namespace: Steeltoe.Discovery.Kubernetes.Discovery
  syntax:
    content: public int? GetPort()
    return:
      type: System.Nullable{System.Int32}
    content.vb: Public Function GetPort As Integer?
  overload: Steeltoe.Discovery.Kubernetes.Discovery.Input.GetPort*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Steeltoe.Discovery.Kubernetes.Discovery
  commentId: N:Steeltoe.Discovery.Kubernetes.Discovery
  name: Steeltoe.Discovery.Kubernetes.Discovery
  nameWithType: Steeltoe.Discovery.Kubernetes.Discovery
  fullName: Steeltoe.Discovery.Kubernetes.Discovery
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Steeltoe.Discovery.Kubernetes.Discovery.Input.#ctor*
  commentId: Overload:Steeltoe.Discovery.Kubernetes.Discovery.Input.#ctor
  name: Input
  nameWithType: Input.Input
  fullName: Steeltoe.Discovery.Kubernetes.Discovery.Input.Input
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Nullable{System.Int32}
  commentId: T:System.Nullable{System.Int32}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Int32>
  nameWithType: Nullable<Int32>
  fullName: System.Nullable<System.Int32>
  nameWithType.vb: Nullable(Of Int32)
  fullName.vb: System.Nullable(Of System.Int32)
  name.vb: Nullable(Of Int32)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IDictionary{System.String,System.String}
  commentId: T:System.Collections.Generic.IDictionary{System.String,System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IDictionary`2
  name: IDictionary<String, String>
  nameWithType: IDictionary<String, String>
  fullName: System.Collections.Generic.IDictionary<System.String, System.String>
  nameWithType.vb: IDictionary(Of String, String)
  fullName.vb: System.Collections.Generic.IDictionary(Of System.String, System.String)
  name.vb: IDictionary(Of String, String)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IDictionary`2
  commentId: T:System.Collections.Generic.IDictionary`2
  isExternal: true
  name: IDictionary<TKey, TValue>
  nameWithType: IDictionary<TKey, TValue>
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>
  nameWithType.vb: IDictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.IDictionary(Of TKey, TValue)
  name.vb: IDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Steeltoe.Discovery.Kubernetes.Discovery.Input.GetServiceName*
  commentId: Overload:Steeltoe.Discovery.Kubernetes.Discovery.Input.GetServiceName
  name: GetServiceName
  nameWithType: Input.GetServiceName
  fullName: Steeltoe.Discovery.Kubernetes.Discovery.Input.GetServiceName
- uid: Steeltoe.Discovery.Kubernetes.Discovery.Input.GetServiceLabels*
  commentId: Overload:Steeltoe.Discovery.Kubernetes.Discovery.Input.GetServiceLabels
  name: GetServiceLabels
  nameWithType: Input.GetServiceLabels
  fullName: Steeltoe.Discovery.Kubernetes.Discovery.Input.GetServiceLabels
- uid: Steeltoe.Discovery.Kubernetes.Discovery.Input.GetServiceAnnotations*
  commentId: Overload:Steeltoe.Discovery.Kubernetes.Discovery.Input.GetServiceAnnotations
  name: GetServiceAnnotations
  nameWithType: Input.GetServiceAnnotations
  fullName: Steeltoe.Discovery.Kubernetes.Discovery.Input.GetServiceAnnotations
- uid: Steeltoe.Discovery.Kubernetes.Discovery.Input.GetPort*
  commentId: Overload:Steeltoe.Discovery.Kubernetes.Discovery.Input.GetPort
  name: GetPort
  nameWithType: Input.GetPort
  fullName: Steeltoe.Discovery.Kubernetes.Discovery.Input.GetPort
